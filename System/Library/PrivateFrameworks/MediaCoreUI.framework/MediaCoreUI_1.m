uint64_t sub_255AA5E58()
{
  return sub_255AA5EE8(&qword_269F22DE8, type metadata accessor for UIEdgeInsets);
}

uint64_t sub_255AA5EA0()
{
  return sub_255AA5EE8(qword_269F22DF0, type metadata accessor for UIOffset);
}

uint64_t sub_255AA5EE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_255AA5F30@<D0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  UIView.Corner.init(view:insetBy:)(*a1, (double *)&v5, 0.0);
  uint64_t v3 = v6;
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v3;
  return result;
}

void sub_255AA5F7C(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  long long v2 = *a1;
  uint64_t v3 = v1;
  UIView.corner.setter((uint64_t)&v2);
}

uint64_t _s6CornerVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s6CornerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIView.Corner()
{
  return &type metadata for UIView.Corner;
}

uint64_t _s6CornerV6RadiusOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  unsigned int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    unsigned int v5 = -1;
  }
  if (v5 + 1 >= 2) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s6CornerV6RadiusOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)double result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)double result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_255AA610C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255AA6128(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)double result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIView.Corner.Radius()
{
  return &type metadata for UIView.Corner.Radius;
}

id *sub_255AA6160(id *a1)
{
  return a1;
}

unint64_t sub_255AA618C()
{
  unint64_t result = qword_26B29BED0;
  if (!qword_26B29BED0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B29BED0);
  }
  return result;
}

void sub_255AA61D0()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_255A536C4();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_255AA62DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v4 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v6 + 64) + v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = sub_255C7EA18();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v13 & 0xF8 | 7;
  uint64_t v15 = v10 + v14;
  if (*(void *)(v12 + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(v12 + 64);
  }
  int v17 = *(_DWORD *)(v6 + 80) | v8;
  uint64_t v18 = v17 & 0xF8 | v14;
  int v19 = (v17 | v13) & 0x100000;
  if (v18 != 7 || v19 != 0 || v16 + ((v15 + (v9 & ~(unint64_t)v8)) & ~v14) + 1 > 0x18)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    v23 = (uint64_t *)(v22 + ((v18 + 16) & ~v18));
LABEL_29:
    swift_retain();
    return v23;
  }
  uint64_t v37 = *(void *)(v11 - 8);
  unint64_t v24 = ~(unint64_t)v8;
  uint64_t v25 = ~v14;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  v38 = a1;
  unint64_t v27 = ((unint64_t)a2 + v9) & v24;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)a1 + v9) & v24, v27, v4);
  unint64_t v26 = ((unint64_t)a1 + v9) & v24;
  v28 = (void *)((v26 + v15) & v25);
  v29 = (void *)((v27 + v15) & v25);
  unsigned int v30 = *((unsigned __int8 *)v29 + v16);
  unsigned int v31 = v30 - 2;
  if (v30 < 2)
  {
    v23 = v38;
LABEL_20:
    if (v30 != 1)
    {
LABEL_28:
      void *v28 = *v29;
      *((unsigned char *)v28 + v16) = 0;
      goto LABEL_29;
    }
  }
  else
  {
    if (v16 <= 3) {
      uint64_t v32 = v16;
    }
    else {
      uint64_t v32 = 4;
    }
    v23 = v38;
    switch(v32)
    {
      case 1:
        int v33 = *(unsigned __int8 *)v29;
        break;
      case 2:
        int v33 = *(unsigned __int16 *)v29;
        break;
      case 3:
        int v33 = *(unsigned __int16 *)v29 | (*(unsigned __int8 *)(((v27 + v15) & v25) + 2) << 16);
        break;
      case 4:
        int v33 = *(_DWORD *)v29;
        break;
      default:
        goto LABEL_20;
    }
    int v34 = (v33 | (v31 << (8 * v16))) + 2;
    int v35 = v33 + 2;
    if (v16 < 4) {
      int v35 = v34;
    }
    if (v35 != 1) {
      goto LABEL_28;
    }
  }
  (*(void (**)(unint64_t))(v37 + 16))((v26 + v15) & v25);
  *((unsigned char *)v28 + v16) = 1;
  return v23;
}

uint64_t sub_255AA65CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(sub_255C7EA18() - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v12 = (unsigned __int8 *)((v8 + v9 + v11) & ~v11);
  unint64_t v13 = *(void *)(v10 + 64);
  if (v13 <= 8) {
    unint64_t v13 = 8;
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_12;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_12;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_12;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_12:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    int v19 = *(uint64_t (**)(void))(v10 + 8);
    return v19();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255AA67B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48);
  uint64_t v15 = *(void *)(sub_255C7EA18() - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  int v18 = (void *)((v14 + v17 + v12) & ~v17);
  int v19 = (unsigned __int8 *)((v14 + v17 + v13) & ~v17);
  if (*(void *)(v15 + 64) <= 8uLL) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v15 + 64);
  }
  unsigned int v21 = v19[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v19;
        goto LABEL_13;
      case 2:
        int v24 = *(unsigned __int16 *)v19;
        goto LABEL_13;
      case 3:
        int v24 = *(unsigned __int16 *)v19 | (v19[2] << 16);
        goto LABEL_13;
      case 4:
        int v24 = *(_DWORD *)v19;
LABEL_13:
        int v25 = (v24 | (v22 << (8 * v20))) + 2;
        unsigned int v21 = v24 + 2;
        if (v20 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    (*(void (**)(void *))(v16 + 16))(v18);
    char v26 = 1;
  }
  else
  {
    *int v18 = *(void *)v19;
    swift_retain();
    char v26 = 0;
  }
  *((unsigned char *)v18 + v20) = v26;
  return a1;
}

uint64_t sub_255AA69A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = sub_255C7EA18();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  uint64_t v17 = v13 + v16;
  int v18 = (unsigned __int8 *)((v13 + v16 + v11) & ~v16);
  int v19 = (unsigned __int8 *)((v17 + v12) & ~v16);
  if (v18 != v19)
  {
    uint64_t v20 = v14;
    uint64_t v21 = *(void *)(v14 - 8);
    if (*(void *)(v15 + 64) <= 8uLL) {
      uint64_t v22 = 8;
    }
    else {
      uint64_t v22 = *(void *)(v15 + 64);
    }
    unsigned int v23 = v18[v22];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v22 <= 3) {
        uint64_t v25 = v22;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v18;
          goto LABEL_14;
        case 2:
          int v26 = *(unsigned __int16 *)v18;
          goto LABEL_14;
        case 3:
          int v26 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_14;
        case 4:
          int v26 = *(_DWORD *)v18;
LABEL_14:
          int v27 = (v26 | (v24 << (8 * v22))) + 2;
          unsigned int v23 = v26 + 2;
          if (v22 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v23 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(v18, v14);
    }
    else {
      swift_release();
    }
    unsigned int v28 = v19[v22];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v22 <= 3) {
        uint64_t v30 = v22;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *v19;
          goto LABEL_28;
        case 2:
          int v31 = *(unsigned __int16 *)v19;
          goto LABEL_28;
        case 3:
          int v31 = *(unsigned __int16 *)v19 | (v19[2] << 16);
          goto LABEL_28;
        case 4:
          int v31 = *(_DWORD *)v19;
LABEL_28:
          int v32 = (v31 | (v29 << (8 * v22))) + 2;
          unsigned int v28 = v31 + 2;
          if (v22 < 4) {
            unsigned int v28 = v32;
          }
          break;
        default:
          break;
      }
    }
    if (v28 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v21 + 16))(v18, v19, v20);
      v18[v22] = 1;
    }
    else
    {
      *(void *)int v18 = *(void *)v19;
      v18[v22] = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_255AA6C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = *(void *)(sub_255C7EA18() - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  int v18 = (void *)((v14 + v17 + v12) & ~v17);
  int v19 = (unsigned __int8 *)((v14 + v17 + v13) & ~v17);
  if (*(void *)(v15 + 64) <= 8uLL) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v15 + 64);
  }
  unsigned int v21 = v19[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v19;
        goto LABEL_13;
      case 2:
        int v24 = *(unsigned __int16 *)v19;
        goto LABEL_13;
      case 3:
        int v24 = *(unsigned __int16 *)v19 | (v19[2] << 16);
        goto LABEL_13;
      case 4:
        int v24 = *(_DWORD *)v19;
LABEL_13:
        int v25 = (v24 | (v22 << (8 * v20))) + 2;
        unsigned int v21 = v24 + 2;
        if (v20 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    (*(void (**)(void *))(v16 + 32))(v18);
    char v26 = 1;
  }
  else
  {
    char v26 = 0;
    *int v18 = *(void *)v19;
  }
  *((unsigned char *)v18 + v20) = v26;
  return a1;
}

uint64_t sub_255AA6E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = sub_255C7EA18();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  uint64_t v17 = (unsigned __int8 *)((v13 + v16 + v11) & ~v16);
  int v18 = (unsigned __int8 *)((v13 + v16 + v12) & ~v16);
  if (v17 != v18)
  {
    uint64_t v19 = v14;
    uint64_t v20 = *(void *)(v14 - 8);
    if (*(void *)(v15 + 64) <= 8uLL) {
      uint64_t v21 = 8;
    }
    else {
      uint64_t v21 = *(void *)(v15 + 64);
    }
    unsigned int v22 = v17[v21];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v24 = v21;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *v17;
          goto LABEL_14;
        case 2:
          int v25 = *(unsigned __int16 *)v17;
          goto LABEL_14;
        case 3:
          int v25 = *(unsigned __int16 *)v17 | (v17[2] << 16);
          goto LABEL_14;
        case 4:
          int v25 = *(_DWORD *)v17;
LABEL_14:
          int v26 = (v25 | (v23 << (8 * v21))) + 2;
          unsigned int v22 = v25 + 2;
          if (v21 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v20 + 8))(v17, v14);
    }
    else {
      swift_release();
    }
    unsigned int v27 = v18[v21];
    unsigned int v28 = v27 - 2;
    if (v27 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v29 = v21;
      }
      else {
        uint64_t v29 = 4;
      }
      switch(v29)
      {
        case 1:
          int v30 = *v18;
          goto LABEL_28;
        case 2:
          int v30 = *(unsigned __int16 *)v18;
          goto LABEL_28;
        case 3:
          int v30 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_28;
        case 4:
          int v30 = *(_DWORD *)v18;
LABEL_28:
          int v31 = (v30 | (v28 << (8 * v21))) + 2;
          unsigned int v27 = v30 + 2;
          if (v21 < 4) {
            unsigned int v27 = v31;
          }
          break;
        default:
          break;
      }
    }
    if (v27 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v20 + 32))(v17, v18, v19);
      char v32 = 1;
    }
    else
    {
      char v32 = 0;
      *(void *)uint64_t v17 = *(void *)v18;
    }
    v17[v21] = v32;
  }
  return a1;
}

uint64_t sub_255AA70FC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v31 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v31 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(sub_255C7EA18() - 8);
  uint64_t v12 = 8;
  if (*(void *)(v11 + 64) > 8uLL) {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(void *)(v8 + 64);
  if (v10 <= 0xFE) {
    unsigned int v15 = 254;
  }
  else {
    unsigned int v15 = v10;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = *(void *)(v6 + 64) + v13;
  uint64_t v17 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  if (a2 <= v15) {
    goto LABEL_30;
  }
  uint64_t v18 = v12 + ((v14 + v17 + (v16 & ~v13)) & ~v17) + 1;
  char v19 = 8 * v18;
  if (v18 > 3) {
    goto LABEL_12;
  }
  unsigned int v22 = ((a2 - v15 + ~(-1 << v19)) >> v19) + 1;
  if (HIWORD(v22))
  {
    int v20 = *(_DWORD *)((char *)a1 + v18);
    if (v20) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v22 <= 0xFF)
    {
      if (v22 < 2) {
        goto LABEL_30;
      }
LABEL_12:
      int v20 = *((unsigned __int8 *)a1 + v18);
      if (!*((unsigned char *)a1 + v18)) {
        goto LABEL_30;
      }
LABEL_20:
      int v23 = (v20 - 1) << v19;
      if (v18 > 3) {
        int v23 = 0;
      }
      if (v18)
      {
        if (v18 <= 3) {
          int v24 = v18;
        }
        else {
          int v24 = 4;
        }
        switch(v24)
        {
          case 2:
            int v25 = *a1;
            break;
          case 3:
            int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v25 = *(_DWORD *)a1;
            break;
          default:
            int v25 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v25 = 0;
      }
      return v15 + (v25 | v23) + 1;
    }
    int v20 = *(unsigned __int16 *)((char *)a1 + v18);
    if (*(unsigned __int16 *)((char *)a1 + v18)) {
      goto LABEL_20;
    }
  }
LABEL_30:
  if (v7 == v15)
  {
    int v26 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    unsigned int v27 = a1;
    uint64_t v28 = v7;
    uint64_t v29 = v5;
  }
  else
  {
    unsigned int v27 = (unsigned __int16 *)(((unint64_t)a1 + v16) & ~v13);
    if (v9 != v15)
    {
      unsigned int v30 = *(unsigned __int8 *)((((unint64_t)v27 + v14 + v17) & ~v17) + v12);
      if (v30 >= 2) {
        return (v30 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    int v26 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v28 = v9;
    uint64_t v29 = v31;
  }

  return v26(v27, v28, v29);
}

void sub_255AA7408(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v38 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v38 - 8);
  uint64_t v36 = *(void *)(a4 + 24);
  uint64_t v37 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v36 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8) {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(void *)(sub_255C7EA18() - 8);
  unint64_t v13 = *(void *)(v12 + 64);
  if (v13 <= 8) {
    unint64_t v13 = 8;
  }
  if (v11 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = v11;
  }
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v7 + 64) + v15;
  uint64_t v17 = *(void *)(v9 + 64);
  uint64_t v18 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  size_t v19 = v13 + 1;
  size_t v20 = ((v17 + v18 + (v16 & ~v15)) & ~v18) + v13 + 1;
  if (a3 <= v14)
  {
    int v22 = 0;
    uint64_t v21 = a1;
  }
  else
  {
    uint64_t v21 = a1;
    if (v20 <= 3)
    {
      unsigned int v25 = ((a3 - v14 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
      if (HIWORD(v25))
      {
        int v22 = 4;
      }
      else if (v25 >= 0x100)
      {
        int v22 = 2;
      }
      else
      {
        int v22 = v25 > 1;
      }
    }
    else
    {
      int v22 = 1;
    }
  }
  if (v14 < a2)
  {
    unsigned int v23 = ~v14 + a2;
    if (v20 < 4)
    {
      int v24 = (v23 >> (8 * v20)) + 1;
      if (v20)
      {
        int v26 = v23 & ~(-1 << (8 * v20));
        bzero(v21, v20);
        if (v20 == 3)
        {
          *(_WORD *)uint64_t v21 = v26;
          v21[2] = BYTE2(v26);
        }
        else if (v20 == 2)
        {
          *(_WORD *)uint64_t v21 = v26;
        }
        else
        {
          *uint64_t v21 = v26;
        }
      }
    }
    else
    {
      bzero(v21, v20);
      *(_DWORD *)uint64_t v21 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        v21[v20] = v24;
        return;
      case 2:
        *(_WORD *)&v21[v20] = v24;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&v21[v20] = v24;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      v21[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&v21[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x255AA780CLL);
    case 4:
      *(_DWORD *)&v21[v20] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v8 == v14)
      {
        uint64_t v27 = v38;
        uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
        uint64_t v29 = v21;
        uint64_t v30 = a2;
        uint64_t v31 = v8;
LABEL_33:
        v28(v29, v30, v31, v27);
        return;
      }
      uint64_t v29 = (unsigned char *)((unint64_t)&v21[v16] & ~v15);
      if (v10 == v14)
      {
        uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v30 = a2;
        uint64_t v31 = v10;
        uint64_t v27 = v36;
        goto LABEL_33;
      }
      char v32 = (unsigned char *)((unint64_t)&v29[v17 + v18] & ~v18);
      if (a2 > 0xFE)
      {
        if (v19 <= 3) {
          int v33 = ~(-1 << (8 * v19));
        }
        else {
          int v33 = -1;
        }
        if (v19)
        {
          int v34 = v33 & (a2 - 255);
          if (v19 <= 3) {
            int v35 = v19;
          }
          else {
            int v35 = 4;
          }
          bzero(v32, v19);
          switch(v35)
          {
            case 2:
              *(_WORD *)char v32 = v34;
              break;
            case 3:
              *(_WORD *)char v32 = v34;
              v32[2] = BYTE2(v34);
              break;
            case 4:
              *(_DWORD *)char v32 = v34;
              break;
            default:
              *char v32 = v34;
              break;
          }
        }
      }
      else
      {
        v32[v13] = -(char)a2;
      }
      return;
  }
}

uint64_t type metadata accessor for ContrastSensitiveForegroundStyle()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for OffsetEffect()
{
  return &type metadata for OffsetEffect;
}

uint64_t sub_255AA786C()
{
  return sub_255A09998(&qword_269F22E78, &qword_269F22E80);
}

uint64_t sub_255AA78A8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(double *)uint64_t v5 = a3;
  *(double *)&v5[1] = a4;
  return MEMORY[0x25A295390](v5, a1, &type metadata for OffsetEffect, a2);
}

CGFloat sub_255AA78E0@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  CGAffineTransformMakeTranslation(&v8, *v3 * a2, v3[1] * a3);
  CGFloat result = v8.a;
  long long v6 = *(_OWORD *)&v8.c;
  long long v7 = *(_OWORD *)&v8.tx;
  *(_OWORD *)a1 = *(_OWORD *)&v8.a;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v6;
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = 0x3FF0000000000000;
  return result;
}

__n128 sub_255AA7940@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

__n128 sub_255AA794C(__n128 *a1)
{
  __n128 result = *a1;
  *unint64_t v1 = *a1;
  return result;
}

__n128 (*sub_255AA7958(uint64_t a1))(__n128 *a1)
{
  *(void *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *v1;
  return sub_255AA7984;
}

__n128 sub_255AA7984(__n128 *a1)
{
  __n128 result = *a1;
  *(__n128 *)a1[1].n128_u64[0] = *a1;
  return result;
}

unint64_t sub_255AA7998()
{
  unint64_t result = qword_269F22E88;
  if (!qword_269F22E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22E88);
  }
  return result;
}

unint64_t sub_255AA79F0()
{
  unint64_t result = qword_269F23880;
  if (!qword_269F23880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23880);
  }
  return result;
}

uint64_t sub_255AA7A44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AA7A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_255AA8070();

  return MEMORY[0x270EFFA00](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_255AA7B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_255AA8070();

  return MEMORY[0x270EFF9E8](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_255AA7B80()
{
  return sub_255C7E238();
}

uint64_t sub_255AA7BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = a3;
  uint64_t v34 = *(void *)(a2 + 24);
  uint64_t v33 = *(void *)(v34 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v31 = *(void *)(v7 + 16);
  char v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v29 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_255C7EA18();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - v14;
  swift_getWitnessTable();
  uint64_t v16 = sub_255C7EC98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F21648);
  uint64_t v35 = v16;
  uint64_t v17 = sub_255C7E458();
  uint64_t v37 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  size_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  int v22 = (char *)&v29 - v21;
  uint64_t v36 = v3;
  sub_255ABA66C((uint64_t)v15);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x263F19968], v9);
  char v23 = sub_255C7DCB8();
  int v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, v9);
  v24(v15, v9);
  if (v23) {
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v29, v36, v31);
  }
  else {
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v36 + *(int *)(a2 + 52), v34);
  }
  uint64_t v42 = sub_255C7DFF8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F7C8();
  swift_release();
  uint64_t v26 = sub_255A09998((unint64_t *)&unk_269F243F0, &qword_269F21648);
  uint64_t v40 = WitnessTable;
  uint64_t v41 = v26;
  swift_getWitnessTable();
  sub_255A20F54(v20);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v37 + 8);
  v27(v20, v17);
  sub_255A20F54(v22);
  return ((uint64_t (*)(char *, uint64_t))v27)(v22, v17);
}

unint64_t sub_255AA8070()
{
  unint64_t result = qword_269F22E90;
  if (!qword_269F22E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22E90);
  }
  return result;
}

uint64_t sub_255AA80C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AA81C4()
{
  sub_255A79E54();

  return sub_255C7E8C8();
}

uint64_t sub_255AA820C@<X0>(unsigned char *a1@<X8>)
{
  sub_255A79E54();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AA825C()
{
  return sub_255C7E8D8();
}

BOOL static MotionCacheDownloadPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MotionCacheDownloadPolicy.hash(into:)()
{
  return sub_255C81588();
}

uint64_t MotionCacheDownloadPolicy.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t MCUINamespace<A>.motionCacheDownload(policy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = (char *)MEMORY[0x270FA5388](a1);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *v5;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, v3);
  swift_getKeyPath();
  v10[15] = v8;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_255AA8458@<X0>(unsigned char *a1@<X8>)
{
  sub_255A79E54();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AA84A8()
{
  return sub_255C7E8D8();
}

uint64_t sub_255AA84F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255AA8664();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t View.motionCacheDownload(policy:)(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MCUINamespace();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-v6];
  LOBYTE(a1) = *a1;
  View.mcui.getter(a2, (uint64_t)&v9[-v6]);
  char v10 = (char)a1;
  MCUINamespace<A>.motionCacheDownload(policy:)((uint64_t)&v10, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_255AA8664()
{
  unint64_t result = qword_269F22E98;
  if (!qword_269F22E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22E98);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MotionCacheDownloadPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255AA8784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionCacheDownloadPolicy()
{
  return &type metadata for MotionCacheDownloadPolicy;
}

uint64_t sub_255AA87BC()
{
  return swift_getWitnessTable();
}

unint64_t sub_255AA882C()
{
  unint64_t result = qword_269F22EA8;
  if (!qword_269F22EA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22EA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionCacheDownloadPolicyEnvironmentKey()
{
  return &type metadata for MotionCacheDownloadPolicyEnvironmentKey;
}

uint64_t View.mcui.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t EnvironmentValues.mcui.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_255C7E8B8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t EnvironmentValues.mcui.setter(uint64_t a1)
{
  uint64_t v3 = sub_255C7E8B8();
  uint64_t v6 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v3);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);

  return v4(v1, a1, v3);
}

uint64_t sub_255AA8AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 16);
  uint64_t v6 = type metadata accessor for MCUINamespace();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v11 - v7, a1);
  return View.mcui.setter((uint64_t)v8, v5);
}

uint64_t View.mcui.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t))(v7 + 8))(v2);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);

  return v5(v2, a1, a2);
}

void (*View.mcui.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = type metadata accessor for MCUINamespace();
  void v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  View.mcui.getter(a2, (uint64_t)v9);
  return sub_255AA8D08;
}

void sub_255AA8D08(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v8 = *v2;
    uint64_t v7 = v2[1];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 32), v4, v5);
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, void *, uint64_t))(v9 + 32))(v7, v3, v8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v11 = *v2;
    uint64_t v10 = v2[1];
    uint64_t v12 = *(void *)(*v2 - 8);
    (*(void (**)(uint64_t, void))(v12 + 8))(v10, *v2);
    (*(void (**)(uint64_t, void *, uint64_t))(v12 + 32))(v10, v4, v11);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t type metadata accessor for MCUINamespace()
{
  return __swift_instantiateGenericMetadata();
}

void (*EnvironmentValues.mcui.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26B297F28) - 8) + 64);
  v3[1] = malloc(v4);
  uint64_t v5 = malloc(v4);
  v3[2] = v5;
  uint64_t v6 = sub_255C7E8B8();
  v3[3] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[4] = v7;
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v5, v1, v6);
  return sub_255AA8F94;
}

void sub_255AA8F94(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[3];
  uint64_t v4 = (*a1)[4];
  uint64_t v5 = (void *)(*a1)[1];
  uint64_t v6 = (void *)(*a1)[2];
  uint64_t v7 = **a1;
  if (a2)
  {
    sub_255AA9080((*a1)[2], (uint64_t)v5);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v7, v5, v3);
    sub_255A1F6DC((uint64_t)v6);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(**a1, v3);
    (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v7, v6, v3);
  }
  free(v6);
  free(v5);

  free(v2);
}

uint64_t sub_255AA9080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Text.mcui.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  char v5 = a3 & 1;
  *(unsigned char *)(a5 + 16) = v5;
  *(void *)(a5 + 24) = a4;
  sub_255A093E4(a1, a2, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_255AA9130(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  char v9 = *(unsigned char *)(a2 + 16);
  sub_255A093E4(*(void *)a1, v4, v5);
  swift_bridgeObjectRetain();
  sub_255A094C0(v7, v8, v9);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  return result;
}

__n128 Text.mcui.setter(__n128 *a1)
{
  sub_255A094C0(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  swift_bridgeObjectRelease();
  unsigned __int8 v3 = a1[1].n128_u8[0];
  unint64_t v4 = a1[1].n128_u64[1];
  __n128 result = *a1;
  *(__n128 *)uint64_t v1 = *a1;
  *(unsigned char *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v4;
  return result;
}

void (*Text.mcui.modify(void *a1))(uint64_t *a1, char a2)
{
  unsigned __int8 v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  char v6 = *(unsigned char *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  *unsigned __int8 v3 = *(void *)v1;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  v3[3] = v7;
  v3[4] = v1;
  sub_255A093E4(v4, v5, v6);
  swift_bridgeObjectRetain();
  return sub_255AA9280;
}

void sub_255AA9280(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 32);
  if (a2)
  {
    uint64_t v4 = *(void *)v2;
    uint64_t v5 = *(void *)(v2 + 8);
    char v6 = *(unsigned char *)(v2 + 16);
    uint64_t v7 = *(void *)(v2 + 24);
    uint64_t v8 = *(void *)v3;
    uint64_t v9 = *(void *)(v3 + 8);
    char v10 = *(unsigned char *)(v3 + 16);
    sub_255A093E4(*(void *)v2, v5, v6);
    swift_bridgeObjectRetain();
    sub_255A094C0(v8, v9, v10);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v5;
    *(unsigned char *)(v3 + 16) = v6;
    *(void *)(v3 + 24) = v7;
    sub_255A094C0(*(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_255A094C0(*(void *)v3, *(void *)(v3 + 8), *(unsigned char *)(v3 + 16));
    swift_bridgeObjectRelease();
    char v11 = *(unsigned char *)(v2 + 16);
    uint64_t v12 = *(void *)(v2 + 24);
    *(_OWORD *)uint64_t v3 = *(_OWORD *)v2;
    *(unsigned char *)(v3 + 16) = v11;
    *(void *)(v3 + 24) = v12;
  }

  free((void *)v2);
}

uint64_t (*CALayer.mcui.modify(void *a1))()
{
  *a1 = v1;
  id v2 = v1;
  return j__s11MediaCoreUI14AnimationGroupC8AnimatorVwxx;
}

id UITabBarController.mcui.getter@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return v1;
}

void UITabBarController.mcui.setter(id *a1)
{
}

void (*UITabBarController.mcui.modify(void *a1))(id *a1)
{
  *a1 = v1;
  id v2 = v1;
  return destroy for AnimationGroup.Animator;
}

uint64_t (*UISplitViewController.mcui.modify(void *a1))()
{
  *a1 = v1;
  id v2 = v1;
  return j__s11MediaCoreUI14AnimationGroupC8AnimatorVwxx;
}

uint64_t sub_255AA9484@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return View.mcui.getter(*(void *)(a2 + a1 - 16), a3);
}

uint64_t sub_255AA94B4()
{
  return 16;
}

__n128 sub_255AA94C0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255AA94D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  sub_255A093E4(v3, v2, v4);

  return swift_bridgeObjectRetain();
}

id sub_255AA9528@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_255AA9540()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255AA95D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_255AA9688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_255AA96D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_255AA9728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_255AA9778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_255AA97C8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_255AA9924(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x255AA9B3CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t static MCUINamespace<A>.parallaxHeaderAligned.getter()
{
  type metadata accessor for ParallaxHeaderAlignedScrollTargetBehavior();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t type metadata accessor for ParallaxHeaderAlignedScrollTargetBehavior()
{
  return self;
}

uint64_t MCUINamespace<A>.parallaxEffect(scrollTargetBehaviors:autoAdjustsNavigationBarTint:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EB8);
  MEMORY[0x270FA5388](v7 - 8);
  BOOL v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for ParallaxEffectViewModifier();
  MEMORY[0x270FA5388](v10);
  unsigned int v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_255AAD368(v13);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *BOOL v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
  swift_storeEnumTagMultiPayload();
  sub_255AA9D8C(v14, v16, a2, (uint64_t)v9, (uint64_t)v12);
  MEMORY[0x25A295390](v12, *(void *)(a3 + 16), v10, a4);
  return sub_255AAD468((uint64_t)v12);
}

uint64_t type metadata accessor for ParallaxEffectViewModifier()
{
  uint64_t result = qword_26B29CD18;
  if (!qword_26B29CD18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255AA9D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  uint64_t v7 = (int *)type metadata accessor for ParallaxEffectViewModifier();
  sub_255A10514(a4, a5 + v7[6], &qword_269F22EB8);
  uint64_t v8 = (_OWORD *)(a5 + v7[7]);
  type metadata accessor for ParallaxContext();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_255C89C70;
  *(void *)(v9 + 32) = sub_255C7FC88();
  *(unsigned char *)(v9 + 40) = 1;
  *(void *)(v9 + 48) = 0;
  sub_255C7D748();
  sub_255C7FE58();
  *uint64_t v8 = v13;
  uint64_t v10 = a5 + v7[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22FF0);
  sub_255C7FE58();
  *(_OWORD *)uint64_t v10 = v13;
  *(void *)(v10 + 16) = v14;
  uint64_t v11 = a5 + v7[9];
  uint64_t result = sub_255C7FE58();
  *(unsigned char *)uint64_t v11 = v13;
  *(void *)(v11 + 8) = *((void *)&v13 + 1);
  return result;
}

uint64_t sub_255AA9ECC()
{
  type metadata accessor for ParallaxEffectViewModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  uint64_t result = sub_255C7FE68();
  if (v2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F28);
    sub_255C7FE68();
    swift_getKeyPath();
    sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
    sub_255C7D718();
    swift_release();
    swift_beginAccess();
    double v1 = *(double *)(v2 + 16);
    uint64_t result = swift_release();
    if (v1 < 0.0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F48);
      sub_255C7FE68();
      if (qword_269F20168 != -1) {
        swift_once();
      }
      sub_255C7FE68();
      sub_255C7FE68();
      swift_getKeyPath();
      sub_255C7D718();
      swift_release();
      swift_beginAccess();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_255AAA168()
{
  type metadata accessor for ParallaxEffectViewModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  uint64_t result = sub_255C7FE68();
  if (LOBYTE(v1) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F48);
    uint64_t result = sub_255C7FE68();
    if (v1 != 0.0 || v2 != 0.0)
    {
      sub_255C7FE68();
      if (qword_269F20170 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F28);
      sub_255C7FE68();
      swift_getKeyPath();
      sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
      sub_255C7D718();
      swift_release();
      swift_beginAccess();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_255AAA37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v131 = a2;
  uint64_t v123 = sub_255C7E8E8();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  v120 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ParallaxEffectViewModifier();
  uint64_t v7 = v6 - 8;
  uint64_t v116 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v117 = v8;
  uint64_t v110 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_255C7ECC8();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC8);
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22ED0);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22ED8);
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  v101 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EE0);
  MEMORY[0x270FA5388](v102);
  v105 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EE8);
  MEMORY[0x270FA5388](v111);
  uint64_t v108 = (uint64_t)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EF0);
  uint64_t v115 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  v112 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EF8);
  MEMORY[0x270FA5388](v109);
  v114 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F00);
  MEMORY[0x270FA5388](v113);
  uint64_t v118 = (uint64_t)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F08);
  MEMORY[0x270FA5388](v128);
  uint64_t v132 = (uint64_t)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F10);
  uint64_t v129 = *(void *)(v23 - 8);
  uint64_t v130 = v23;
  MEMORY[0x270FA5388](v23);
  v127 = (char *)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F18);
  uint64_t v125 = *(void *)(v25 - 8);
  uint64_t v126 = v25;
  MEMORY[0x270FA5388](v25);
  v124 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_255C7E468();
  char v28 = sub_255C7F1A8();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v13, a1, v29);
  uint64_t v30 = &v13[*(int *)(v11 + 36)];
  *(void *)uint64_t v30 = v27;
  v30[8] = v28;
  uint64_t v31 = sub_255C7F1A8();
  v121 = (uint64_t *)((char *)v3 + *(int *)(v7 + 36));
  uint64_t v32 = v121[1];
  *(void *)&long long v135 = *v121;
  *((void *)&v135 + 1) = v32;
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F28);
  sub_255C7FE68();
  uint64_t v33 = v140;
  swift_getKeyPath();
  *(void *)&long long v135 = v33;
  uint64_t v133 = sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
  sub_255C7D718();
  swift_release();
  uint64_t v34 = *(void *)(v33 + 48);
  swift_release();
  sub_255C7ECA8();
  unint64_t v35 = sub_255AAE0CC();
  uint64_t v36 = v31;
  uint64_t v37 = v11;
  MEMORY[0x25A295010](v36, v34, 0, v10, v11, v35);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v10, v100);
  sub_255A095A4((uint64_t)v13, &qword_269F22EC8);
  uint64_t v39 = *v3;
  uint64_t v38 = v3[1];
  uint64_t v40 = (uint64_t)v3;
  uint64_t v41 = (char *)v3 + *(int *)(v7 + 40);
  unint64_t v42 = *((void *)v41 + 2);
  long long v135 = *(_OWORD *)v41;
  unint64_t v136 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F48);
  sub_255C7FE68();
  if (v38) {
    *(_OWORD *)(v38 + 16) = v140;
  }
  *(void *)&long long v135 = v39;
  *((void *)&v135 + 1) = v38;
  *(void *)&long long v140 = v37;
  *((void *)&v140 + 1) = v35;
  swift_getOpaqueTypeConformance2();
  sub_255AAE16C();
  v43 = v101;
  uint64_t v44 = v104;
  sub_255C7F928();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v15, v44);
  uint64_t v45 = v40;
  uint64_t v46 = v40;
  uint64_t v98 = v40;
  uint64_t v47 = v110;
  sub_255AAE1C0(v46, v110);
  unint64_t v48 = (*(unsigned __int8 *)(v116 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
  uint64_t v49 = swift_allocObject();
  sub_255AAE228(v47, v49 + v48);
  uint64_t v50 = v106;
  uint64_t v51 = (uint64_t)v105;
  uint64_t v52 = v107;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v105, v43, v107);
  v53 = (uint64_t (**)())(v51 + *(int *)(v102 + 36));
  *v53 = sub_255AAE28C;
  v53[1] = (uint64_t (*)())v49;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v52);
  sub_255AAE1C0(v45, v47);
  uint64_t v54 = swift_allocObject();
  sub_255AAE228(v47, v54 + v48);
  uint64_t v55 = v108;
  sub_255A09540(v51, v108, &qword_269F22EE0);
  v56 = (void *)(v55 + *(int *)(v111 + 36));
  void *v56 = sub_255AAB31C;
  v56[1] = 0;
  v56[2] = sub_255AAE300;
  v56[3] = v54;
  sub_255A095A4(v51, &qword_269F22EE0);
  uint64_t v57 = v122;
  v58 = v120;
  uint64_t v59 = v123;
  (*(void (**)(char *, void, uint64_t))(v122 + 104))(v120, *MEMORY[0x263F19698], v123);
  sub_255AAE318();
  v60 = v112;
  sub_255C7F9C8();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
  sub_255A095A4(v55, &qword_269F22EE8);
  uint64_t v61 = v98;
  sub_255AAE1C0(v98, v47);
  uint64_t v62 = swift_allocObject();
  sub_255AAE228(v47, v62 + v48);
  uint64_t v63 = v115;
  uint64_t v64 = (uint64_t)v114;
  uint64_t v65 = v119;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v114, v60, v119);
  v66 = (uint64_t (**)(uint64_t))(v64 + *(int *)(v109 + 36));
  *v66 = sub_255AAE4E0;
  v66[1] = (uint64_t (*)(uint64_t))v62;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v65);
  sub_255AAE1C0(v61, v47);
  uint64_t v67 = swift_allocObject();
  sub_255AAE228(v47, v67 + v48);
  uint64_t v68 = v118;
  sub_255A09540(v64, v118, &qword_269F22EF8);
  v69 = (uint64_t (**)(uint64_t))(v68 + *(int *)(v113 + 36));
  *v69 = sub_255AAE4FC;
  v69[1] = (uint64_t (*)(uint64_t))v67;
  sub_255A095A4(v64, &qword_269F22EF8);
  sub_255AAE1C0(v61, v47);
  uint64_t v70 = swift_allocObject();
  sub_255AAE228(v47, v70 + v48);
  uint64_t v71 = v132;
  sub_255A09540(v68, v132, &qword_269F22F00);
  uint64_t v72 = v128;
  v73 = (void *)(v71 + *(int *)(v128 + 36));
  void *v73 = sub_255AAE59C;
  v73[1] = v70;
  sub_255A095A4(v68, &qword_269F22F00);
  sub_255AAA168();
  uint64_t v75 = v74;
  sub_255AA9ECC();
  uint64_t v77 = v76;
  v78 = v121;
  uint64_t v79 = v121[1];
  *(void *)&long long v135 = *v121;
  *((void *)&v135 + 1) = v79;
  sub_255C7FE68();
  uint64_t v80 = v140;
  swift_getKeyPath();
  *(void *)&long long v135 = v80;
  sub_255C7D718();
  swift_release();
  unint64_t v81 = *(void *)(v80 + 32);
  swift_retain();
  swift_release();
  uint64_t v82 = v78[1];
  *(void *)&long long v135 = *v78;
  *((void *)&v135 + 1) = v82;
  sub_255C7FE68();
  uint64_t v83 = v140;
  swift_getKeyPath();
  *(void *)&long long v135 = v83;
  sub_255C7D718();
  swift_release();
  LOBYTE(v48) = *(unsigned char *)(v83 + 40);
  swift_release();
  LOBYTE(v68) = *(unsigned char *)(v61 + 16);
  id v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829A8]), sel_init);
  objc_msgSend(v84, sel_configureWithTransparentBackground);
  id v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829A8]), sel_init);
  v86 = self;
  id v87 = v85;
  id v88 = objc_msgSend(v86, sel_effectWithStyle_, 10);
  objc_msgSend(v87, sel_setBackgroundEffect_, v88);

  *(void *)&long long v135 = v75;
  *((void *)&v135 + 1) = v77;
  unint64_t v136 = v81;
  LOBYTE(v137) = v48;
  BYTE1(v137) = v68;
  id v138 = v84;
  id v139 = v87;
  unint64_t v89 = sub_255AAE61C();
  unint64_t v90 = sub_255AAE830();
  v91 = v127;
  uint64_t v92 = v132;
  sub_255C7F948();

  swift_release();
  sub_255A095A4(v92, &qword_269F22F08);
  uint64_t v93 = v78[1];
  *(void *)&long long v135 = *v78;
  *((void *)&v135 + 1) = v93;
  sub_255C7FE68();
  type metadata accessor for ParallaxContext();
  *(void *)&long long v135 = v72;
  *((void *)&v135 + 1) = &type metadata for ParallaxNavigationItemAdaptor;
  unint64_t v136 = v89;
  unint64_t v137 = v90;
  swift_getOpaqueTypeConformance2();
  v94 = v124;
  uint64_t v95 = v130;
  sub_255C7F668();
  swift_release();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v91, v95);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v125 + 32))(v131, v94, v126);
}

uint64_t sub_255AAB2A8()
{
  return sub_255C7FE78();
}

uint64_t sub_255AAB31C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_255C7E0C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AAB348()
{
  return swift_release();
}

uint64_t sub_255AAB45C(double *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ParallaxEffectViewModifier();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = *a1;
  sub_255AAE1C0(a2, (uint64_t)v6);
  if (v7 > 0.0)
  {
    sub_255AAD468((uint64_t)v6);
LABEL_4:
    uint64_t v11 = (uint64_t *)(a2 + *(int *)(v4 + 28));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v35 = v13;
    uint64_t v36 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F28);
    sub_255C7FE68();
    uint64_t v14 = v37;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v34 - 2) = v14;
    *((double *)&v34 - 1) = v7;
    uint64_t v35 = v14;
    sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
    goto LABEL_6;
  }
  uint64_t v8 = &v6[*(int *)(v4 + 36)];
  char v9 = *v8;
  uint64_t v10 = *((void *)v8 + 1);
  LOBYTE(v35) = v9;
  uint64_t v36 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  sub_255C7FE68();
  sub_255AAD468((uint64_t)v6);
  if (v37) {
    goto LABEL_4;
  }
  uint64_t v16 = (uint64_t *)(a2 + *(int *)(v4 + 28));
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  uint64_t v35 = v18;
  uint64_t v36 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F28);
  sub_255C7FE68();
  uint64_t v19 = v37;
  uint64_t v20 = swift_getKeyPath();
  MEMORY[0x270FA5388](v20);
  *(&v34 - 2) = v19;
  *(&v34 - 1) = 0x8000000000000001;
  uint64_t v35 = v19;
  sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
LABEL_6:
  sub_255C7D708();
  swift_release();
  swift_release();
  uint64_t v21 = (uint64_t *)(a2 + *(int *)(v4 + 28));
  uint64_t v22 = v21[1];
  uint64_t v35 = *v21;
  uint64_t v36 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F28);
  sub_255C7FE68();
  uint64_t v23 = v37;
  swift_getKeyPath();
  uint64_t v35 = v23;
  sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
  sub_255C7D718();
  swift_release();
  int v24 = *(unsigned __int8 *)(v23 + 40);
  swift_release();
  if (v7 > 0.8 != v24)
  {
    if (qword_269F1FEE8 != -1) {
      swift_once();
    }
    MEMORY[0x270FA5388](qword_269F22EB0);
    *(&v34 - 2) = a2;
    *((unsigned char *)&v34 - 8) = v25;
    sub_255C7E1E8();
  }
  id v26 = objc_msgSend(self, sel_tintColor);
  MEMORY[0x25A295490](v26);
  sub_255C7FC88();
  uint64_t v27 = sub_255AABB24(v7);
  swift_release();
  swift_release();
  uint64_t v28 = v21[1];
  uint64_t v35 = *v21;
  uint64_t v36 = v28;
  sub_255C7FE68();
  uint64_t v29 = v37;
  swift_getKeyPath();
  uint64_t v35 = v29;
  sub_255C7D718();
  swift_release();
  swift_retain();
  swift_release();
  LOBYTE(v29) = sub_255C7FC48();
  swift_release();
  if ((v29 & 1) == 0)
  {
    uint64_t v31 = v21[1];
    uint64_t v35 = *v21;
    uint64_t v36 = v31;
    sub_255C7FE68();
    uint64_t v32 = v37;
    uint64_t v33 = swift_getKeyPath();
    MEMORY[0x270FA5388](v33);
    *(&v34 - 2) = v32;
    *(&v34 - 1) = v27;
    uint64_t v35 = v32;
    sub_255C7D708();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_255AABA04()
{
  return swift_release();
}

uint64_t sub_255AABB24(double a1)
{
  uint64_t v2 = sub_255C7FC38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7E8B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= 1.0) {
    double v10 = a1;
  }
  else {
    double v10 = 1.0;
  }
  if (a1 <= 0.0) {
    double v10 = 0.0;
  }
  double v45 = v10;
  double v11 = 1.0 - v10;
  type metadata accessor for ParallaxEffectViewModifier();
  sub_255ABB5BC((uint64_t)v9);
  sub_255C7FCC8();
  int v13 = v12;
  int v15 = v14;
  int v17 = v16;
  float v39 = v18;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v9, v6);
  sub_255ABB5BC((uint64_t)v9);
  sub_255C7FCC8();
  v36[3] = v20;
  float v37 = v21;
  int v38 = v22;
  v19(v9, v6);
  int v40 = v15;
  int v41 = v13;
  int v42 = v17;
  sub_255C7FCE8();
  double v44 = v11 * v23;
  sub_255C7FCE8();
  double v25 = v45;
  double v44 = v44 + v45 * v24;
  float v26 = v39;
  sub_255C7FD08();
  double v28 = v11 * v27;
  float v29 = v37;
  sub_255C7FD08();
  double v43 = v28 + v25 * v30;
  sub_255C7FCF8();
  double v32 = v11 * v31;
  sub_255C7FCF8();
  double v34 = v32 + v25 * v33;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
  return MEMORY[0x25A2955A0](v5, v44, v43, v34, v11 * v26 + v25 * v29);
}

uint64_t sub_255AABE54(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ParallaxEffectViewModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v8 - 8);
  double v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_255AAE1C0(a2, (uint64_t)v7);
  sub_255C80958();
  uint64_t v13 = sub_255C80948();
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int v15 = (void *)swift_allocObject();
  uint64_t v16 = MEMORY[0x263F8F500];
  v15[2] = v13;
  v15[3] = v16;
  v15[4] = v11;
  sub_255AAE228((uint64_t)v7, (uint64_t)v15 + v14);
  sub_255B5DB70((uint64_t)v10, (uint64_t)&unk_269F22FE8, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_255AAC014(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 104) = a5;
  *(double *)(v5 + 96) = a1;
  *(void *)(v5 + 112) = type metadata accessor for ParallaxEffectViewModifier();
  *(void *)(v5 + 120) = swift_task_alloc();
  sub_255C80958();
  *(void *)(v5 + 128) = sub_255C80948();
  uint64_t v7 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AAC0E0, v7, v6);
}

uint64_t sub_255AAC0E0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 104);
  double v3 = *(double *)(v0 + 96);
  swift_release();
  sub_255AAE1C0(v2, v1);
  if (v3 > 0.0)
  {
    sub_255AAD468(*(void *)(v0 + 120));
LABEL_4:
    double v8 = *(double *)(v0 + 96);
    uint64_t v9 = (uint64_t *)(*(void *)(v0 + 104) + *(int *)(*(void *)(v0 + 112) + 28));
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    *(void *)(v0 + 32) = v11;
    *(void *)(v0 + 40) = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F28);
    sub_255C7FE68();
    uint64_t v12 = *(void *)(v0 + 64);
    swift_getKeyPath();
    uint64_t v13 = swift_task_alloc();
    *(void *)(v13 + 16) = v12;
    *(double *)(v13 + 24) = -v8;
    *(void *)(v0 + 80) = v12;
    sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = v4 + *(int *)(*(void *)(v0 + 112) + 36);
  char v6 = *(unsigned char *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  *(unsigned char *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  sub_255C7FE68();
  sub_255AAD468(v4);
  if (*(unsigned char *)(v0 + 136)) {
    goto LABEL_4;
  }
  unint64_t v14 = (uint64_t *)(*(void *)(v0 + 104) + *(int *)(*(void *)(v0 + 112) + 28));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *(void *)(v0 + 48) = v16;
  *(void *)(v0 + 56) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22F28);
  sub_255C7FE68();
  uint64_t v17 = *(void *)(v0 + 72);
  swift_getKeyPath();
  uint64_t v18 = swift_task_alloc();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(v0 + 88) = v17;
  sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
LABEL_6:
  sub_255C7D708();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_255AAC390(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ParallaxEffectViewModifier();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v4);
  double v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v10) = *a1;
  uint64_t v12 = a2 + *(int *)(v5 + 44);
  char v13 = *(unsigned char *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  v21[16] = v13;
  uint64_t v22 = v14;
  v21[15] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  sub_255C7FE78();
  uint64_t v15 = sub_255C80988();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 1, 1, v15);
  sub_255AAE1C0(a2, (uint64_t)v8);
  sub_255C80958();
  uint64_t v16 = sub_255C80948();
  unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x263F8F500];
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = v19;
  sub_255AAE228((uint64_t)v8, v18 + v17);
  sub_255B5DB70((uint64_t)v11, (uint64_t)&unk_269F22FD8, v18);
  return swift_release();
}

uint64_t sub_255AAC58C()
{
  sub_255C80958();
  *(void *)(v0 + 16) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AAC620, v2, v1);
}

uint64_t sub_255AAC620()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_255AAC684(void *a1)
{
  id v3 = objc_msgSend(self, sel_labelColor);
  id v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, *(double *)v1);

  uint64_t v5 = *(void **)(v1 + 32);
  uint64_t v6 = (void *)*MEMORY[0x263F81500];
  unint64_t v44 = sub_255A93348();
  *(void *)&long long v43 = v4;
  id v7 = v6;
  id v8 = v4;
  id v9 = objc_msgSend(v5, sel_titleTextAttributes);
  type metadata accessor for Key(0);
  sub_255AAF328(&qword_269F209B8, type metadata accessor for Key);
  uint64_t v10 = sub_255C80458();

  uint64_t v42 = v10;
  uint64_t v39 = v1;
  unint64_t v40 = v44;
  if (v44)
  {
    sub_255A199E0(&v43, v41);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_255BCC564(v41, v7, isUniquelyReferenced_nonNull_native);
    uint64_t v42 = v10;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_255A095A4((uint64_t)&v43, &qword_26B297D00);
    sub_255C6D2E4((uint64_t)v7, v41);

    sub_255A095A4((uint64_t)v41, &qword_26B297D00);
  }
  uint64_t v12 = (void *)sub_255C80448();
  swift_bridgeObjectRelease();
  char v13 = v5;
  objc_msgSend(v5, sel_setTitleTextAttributes_, v12);

  uint64_t v14 = *(void **)(v1 + 40);
  unint64_t v44 = v40;
  *(void *)&long long v43 = v8;
  id v15 = v8;
  id v16 = v7;
  id v17 = objc_msgSend(v14, sel_titleTextAttributes);
  uint64_t v18 = sub_255C80458();

  uint64_t v42 = v18;
  if (v44)
  {
    sub_255A199E0(&v43, v41);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_255BCC564(v41, v16, v19);
    uint64_t v42 = v18;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_255A095A4((uint64_t)&v43, &qword_26B297D00);
    sub_255C6D2E4((uint64_t)v16, v41);

    sub_255A095A4((uint64_t)v41, &qword_26B297D00);
  }
  int v20 = v15;
  uint64_t v21 = v13;
  uint64_t v22 = v39;
  float v23 = (void *)sub_255C80448();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setTitleTextAttributes_, v23);

  objc_msgSend(a1, sel_setStandardAppearance_, v14);
  objc_msgSend(a1, sel_setScrollEdgeAppearance_, v21);
  char v24 = *(unsigned char *)(v39 + 25);
  if ((v24 & 1) == 0)
  {
    swift_retain();
    double v25 = (void *)sub_255C80D98();
    id v26 = objc_msgSend(a1, sel_preferredNavigationBarTintColor);
    if (!v26
      || (float v27 = v26,
          id v28 = v25,
          id v29 = v27,
          LOBYTE(v27) = sub_255C80DD8(),
          v29,
          v29,
          v28,
          (v27 & 1) == 0))
    {
      objc_msgSend(a1, sel_setPreferredNavigationBarTintColor_, v25, v39);
    }
  }
  objc_msgSend(a1, sel__setManualScrollEdgeAppearanceEnabled_, 1, v39);
  objc_msgSend(a1, sel__setManualScrollEdgeAppearanceProgress_, *(double *)(v22 + 8));
  id v30 = objc_msgSend(a1, sel_titleView);

  if (!v30)
  {
    id v31 = objc_allocWithZone((Class)type metadata accessor for ParallaxNavigationTitleView());
    id v32 = sub_255C1AD18(v24);
    objc_msgSend(a1, sel_setTitleView_, v32);
  }
  id v33 = objc_msgSend(a1, sel_titleView);
  if (v33)
  {
    double v34 = v33;
    type metadata accessor for ParallaxNavigationTitleView();
    uint64_t v35 = swift_dynamicCastClass();
    if (v35)
    {
      uint64_t v36 = (unsigned char *)v35;
      char v37 = *(unsigned char *)(v35 + OBJC_IVAR____TtC11MediaCoreUI27ParallaxNavigationTitleView_isNavigationBarOverParallaxHeader);
      v36[OBJC_IVAR____TtC11MediaCoreUI27ParallaxNavigationTitleView_isNavigationBarOverParallaxHeader] = *(unsigned char *)(v22 + 24);
      sub_255C1A8E0(v37);
      id v38 = v34;
      swift_retain();
      double v34 = (void *)sub_255C80D98();
      objc_msgSend(v36, sel_setTintColor_, v34);
    }
  }
}

void sub_255AACB90(void *a1)
{
}

uint64_t sub_255AACBCC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_navigationItem);
  id v2 = objc_msgSend(v1, sel_titleView);

  if (v2)
  {
    type metadata accessor for ParallaxNavigationTitleView();
    id v3 = (void *)swift_dynamicCastClass();
    if (v3) {
      objc_msgSend(v3, sel_setNeedsLayout);
    }
  }
  return 1;
}

uint64_t ParallaxHeaderAlignedScrollTargetBehavior.updateTarget(_:context:)()
{
  double v1 = *(double *)(v0 + 16);
  double v2 = *(double *)(v0 + 24);
  uint64_t result = sub_255C7DF18();
  if (v1 <= v4 && v4 <= v2)
  {
    sub_255C7F028();
    unsigned __int8 v6 = sub_255C7F178();
    sub_255C7F168();
    uint64_t result = sub_255C7F168();
    if (result == v6)
    {
      sub_255C7DF18();
      if ((v1 + v2) * 0.5 < v7) {
        double v1 = v2;
      }
      id v8 = (uint64_t (*)(uint64_t *, void))sub_255C7DF08();
      *(double *)(v9 + 8) = v1;
      return v8(&v10, 0);
    }
  }
  return result;
}

uint64_t ParallaxHeaderAlignedScrollTargetBehavior.deinit()
{
  return v0;
}

uint64_t ParallaxHeaderAlignedScrollTargetBehavior.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_255AACD34()
{
  return ParallaxHeaderAlignedScrollTargetBehavior.updateTarget(_:context:)();
}

uint64_t sub_255AACD58()
{
  return sub_255C7EC48();
}

uint64_t sub_255AACD68(uint64_t a1, uint64_t a2)
{
  return sub_255AACD64(a1, a2, *v2, v2[1]);
}

uint64_t sub_255AACD74()
{
  uint64_t result = sub_255C80278();
  qword_269F22EB0 = result;
  return result;
}

id sub_255AACD9C(void *a1)
{
  id v1 = a1;
  double v2 = (void *)UINavigationItem.preferredNavigationBarTintColor.getter();

  return v2;
}

uint64_t UINavigationItem.preferredNavigationBarTintColor.getter()
{
  if (qword_26B29C0E0 != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(v0, (const void *)qword_26B29C100))
  {
    sub_255C80F58();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_255A10514((uint64_t)v3, (uint64_t)v4, &qword_26B297D00);
  if (v5)
  {
    sub_255A93348();
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_255A095A4((uint64_t)v4, &qword_26B297D00);
    return 0;
  }
}

void sub_255AACED8(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  UINavigationItem.preferredNavigationBarTintColor.setter(a3);
}

void UINavigationItem.preferredNavigationBarTintColor.setter(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_preferredNavigationBarTintColor);
  id v5 = v4;
  if (!a1)
  {
    if (!v4) {
      return;
    }

    goto LABEL_7;
  }
  if (!v4
    || (sub_255A93348(),
        id v8 = a1,
        char v6 = sub_255C80DD8(),
        v8,
        v8,
        v5,
        double v7 = v8,
        (v6 & 1) == 0))
  {
LABEL_7:
    if (qword_26B29C0E0 != -1) {
      swift_once();
    }
    objc_setAssociatedObject(v2, (const void *)qword_26B29C100, a1, (void *)1);
    double v7 = a1;
  }
}

uint64_t sub_255AAD048()
{
  uint64_t result = swift_slowAlloc();
  qword_26B29C100 = result;
  return result;
}

uint64_t sub_255AAD070@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 40);
  return result;
}

uint64_t sub_255AAD118()
{
  return swift_release();
}

double sub_255AAD1E8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255AAF328((unint64_t *)&qword_269F22F30, (void (*)(uint64_t))type metadata accessor for ParallaxContext);
  sub_255C7D718();
  swift_release();
  double result = *(double *)(v3 + 48);
  *a2 = result;
  return result;
}

uint64_t sub_255AAD290()
{
  return swift_release();
}

uint64_t sub_255AAD368(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_255A53C38(v3, (uint64_t)v5);
      sub_255A53C38((uint64_t)v5, (uint64_t)v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F22FF8);
      type metadata accessor for ParallaxHeaderAlignedScrollTargetBehavior();
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
      v3 += 40;
      if (!--v2) {
        return a1;
      }
    }
    swift_release();
    sub_255A524B4(v5, (uint64_t)v6);
    swift_dynamicCast();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_255AAD468(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ParallaxEffectViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *keypath_get_selector_preferredNavigationBarTintColor()
{
  return sel_preferredNavigationBarTintColor;
}

id sub_255AAD4D0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_preferredNavigationBarTintColor);
  *a2 = result;
  return result;
}

id sub_255AAD50C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreferredNavigationBarTintColor_, *a1);
}

uint64_t method lookup function for ParallaxHeaderAlignedScrollTargetBehavior(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ParallaxHeaderAlignedScrollTargetBehavior);
}

uint64_t sub_255AAD538()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AAD5D4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7E8B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)(v7 + v12);
    id v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v7 + v13;
    uint64_t v18 = (uint64_t)a2 + v13;
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(void *)(v17 + 16) = *(void *)(v18 + 16);
    uint64_t v19 = a3[9];
    uint64_t v20 = v7 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
    *(void *)(v20 + 8) = *(void *)(v21 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_255AAD778(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7E8B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_255AAD864(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7E8B8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_255AAD9B0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_255A095A4(a1 + v6, &qword_269F22EC0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7E8B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_retain();
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  swift_retain();
  swift_release();
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255AADB68(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7E8B8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_255AADC84(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_255A095A4(a1 + v6, &qword_269F22EC0);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_255C7E8B8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_release();
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  swift_release();
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  swift_release();
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  swift_release();
  return a1;
}

uint64_t sub_255AADE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255AADE28);
}

uint64_t sub_255AADE28(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EB8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255AADEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255AADEF0);
}

void *sub_255AADEF0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *id result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EB8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255AADF9C()
{
  sub_255AAE050();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_255AAE050()
{
  if (!qword_26B29D078)
  {
    sub_255C7E8B8();
    unint64_t v0 = sub_255C7DD38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29D078);
    }
  }
}

uint64_t sub_255AAE0A8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255AAE0CC()
{
  unint64_t result = qword_269F22F38;
  if (!qword_269F22F38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EC8);
    sub_255A09998(&qword_269F22F40, &qword_269F22F20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22F38);
  }
  return result;
}

unint64_t sub_255AAE16C()
{
  unint64_t result = qword_269F22F50;
  if (!qword_269F22F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22F50);
  }
  return result;
}

uint64_t sub_255AAE1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ParallaxEffectViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AAE228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ParallaxEffectViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AAE28C()
{
  type metadata accessor for ParallaxEffectViewModifier();

  return sub_255AAB2A8();
}

uint64_t sub_255AAE300(uint64_t a1)
{
  return sub_255AAE514(a1, (uint64_t (*)(uint64_t, uint64_t))sub_255AAB348);
}

unint64_t sub_255AAE318()
{
  unint64_t result = qword_269F22F58;
  if (!qword_269F22F58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EE8);
    sub_255AAE3B8();
    sub_255A09998(&qword_269F22F78, (uint64_t *)&unk_269F23920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22F58);
  }
  return result;
}

unint64_t sub_255AAE3B8()
{
  unint64_t result = qword_269F22F60;
  if (!qword_269F22F60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EE0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22ED0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EC8);
    sub_255AAE0CC();
    swift_getOpaqueTypeConformance2();
    sub_255AAE16C();
    swift_getOpaqueTypeConformance2();
    sub_255A09998(&qword_269F22F68, &qword_269F22F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22F60);
  }
  return result;
}

uint64_t sub_255AAE4E0(uint64_t a1)
{
  return sub_255AAE514(a1, (uint64_t (*)(uint64_t, uint64_t))sub_255AAB45C);
}

uint64_t sub_255AAE4FC(uint64_t a1)
{
  return sub_255AAE514(a1, (uint64_t (*)(uint64_t, uint64_t))sub_255AABE54);
}

uint64_t sub_255AAE514(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ParallaxEffectViewModifier() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_255AAE59C(unsigned char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ParallaxEffectViewModifier() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255AAC390(a1, v4);
}

unint64_t sub_255AAE61C()
{
  unint64_t result = qword_269F22F80;
  if (!qword_269F22F80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22F08);
    sub_255AAE6BC();
    sub_255A09998(&qword_269F22FB8, &qword_269F22FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22F80);
  }
  return result;
}

unint64_t sub_255AAE6BC()
{
  unint64_t result = qword_269F22F88;
  if (!qword_269F22F88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22F00);
    sub_255AAE75C();
    sub_255A09998(&qword_269F22FA8, &qword_269F22FB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22F88);
  }
  return result;
}

unint64_t sub_255AAE75C()
{
  unint64_t result = qword_269F22F90;
  if (!qword_269F22F90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EF8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EE8);
    sub_255AAE318();
    swift_getOpaqueTypeConformance2();
    sub_255A09998(&qword_269F22F98, &qword_269F22FA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F22F90);
  }
  return result;
}

unint64_t sub_255AAE830()
{
  unint64_t result = qword_269F22FC8;
  if (!qword_269F22FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269F22FC8);
  }
  return result;
}

uint64_t sub_255AAE884()
{
  return sub_255B544D8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_255AAE8B4()
{
  uint64_t v1 = type metadata accessor for ParallaxEffectViewModifier();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2) + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7E8B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255AAEA28()
{
  type metadata accessor for ParallaxEffectViewModifier();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A16A8C;
  return sub_255AAC58C();
}

uint64_t sub_255AAEB14()
{
  uint64_t v1 = type metadata accessor for ParallaxEffectViewModifier();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + ((v2 + 40) & ~v2) + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7E8B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255AAEC88(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ParallaxEffectViewModifier() - 8);
  uint64_t v5 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  double v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_255A160B0;
  return sub_255AAC014(v7, a1, v5, v6, v8);
}

uint64_t sub_255AAED84()
{
  return sub_255B541C8(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_255AAEDA4()
{
  return sub_255B53DA8(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_255AAEDC4()
{
  return sub_255AABA04();
}

uint64_t sub_255AAEDE4()
{
  return sub_255B5442C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_255AAEE00()
{
  return sub_255B54550(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

void destroy for ParallaxNavigationItemAdaptor(uint64_t a1)
{
  swift_release();

  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for ParallaxNavigationItemAdaptor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v3 = *(void **)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  swift_retain();
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for ParallaxNavigationItemAdaptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v4 = *(void **)(a2 + 32);
  id v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  double v7 = *(void **)(a2 + 40);
  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ParallaxNavigationItemAdaptor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);

  uint64_t v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for ParallaxNavigationItemAdaptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParallaxNavigationItemAdaptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParallaxNavigationItemAdaptor()
{
  return &type metadata for ParallaxNavigationItemAdaptor;
}

uint64_t destroy for CombinedScrollTargetBehavior()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s11MediaCoreUI28CombinedScrollTargetBehaviorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CombinedScrollTargetBehavior(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CombinedScrollTargetBehavior(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CombinedScrollTargetBehavior()
{
  return &type metadata for CombinedScrollTargetBehavior;
}

uint64_t sub_255AAF180()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AAF274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v4 = (void *)(a3 + 32);
    swift_bridgeObjectRetain();
    do
    {
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      sub_255C7EC38();
      v4 += 5;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_255AAF328(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255AAF370()
{
  return sub_255AAED84();
}

uint64_t sub_255AAF388()
{
  return sub_255AAEDA4();
}

uint64_t sub_255AAF3A0()
{
  return sub_255AAE884();
}

uint64_t sub_255AAF3B8()
{
  return sub_255AAEE00();
}

uint64_t sub_255AAF3D0()
{
  uint64_t result = sub_255C7FC88();
  qword_269F33048 = result;
  return result;
}

uint64_t sub_255AAF3F0(uint64_t a1)
{
  return sub_255AAF418(a1, &qword_269F33050);
}

uint64_t sub_255AAF404(uint64_t a1)
{
  return sub_255AAF418(a1, &qword_269F33058);
}

uint64_t sub_255AAF418(uint64_t a1, uint64_t *a2)
{
  sub_255C7FC88();
  uint64_t v3 = sub_255C7FCA8();
  uint64_t result = swift_release();
  *a2 = v3;
  return result;
}

double sub_255AAF46C()
{
  xmmword_26B2AA670 = xmmword_255C89FB0;
  unk_26B2AA680 = xmmword_255C89FC0;
  double result = 0.0;
  xmmword_26B2AA690 = xmmword_255C89FD0;
  unk_26B2AA6A0 = xmmword_255C89FE0;
  return result;
}

uint64_t sub_255AAF4A0(void *a1)
{
  unint64_t v3 = (unint64_t)objc_msgSend(v1, sel_vertexCount);
  if ((v3 & 0x8000000000000000) != 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v4 = v3;
  if (v3)
  {
    uint64_t v5 = 0;
    id v6 = (void *)MEMORY[0x263F8EE78];
    do
    {
      objc_msgSend(v1, sel_vertexAtIndex_, v5);
      objc_msgSend(a1, sel_vertexAtIndex_, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_255C15EB0(0, v6[2] + 1, 1, v6);
      }
      unint64_t v8 = v6[2];
      unint64_t v7 = v6[3];
      if (v8 >= v7 >> 1) {
        id v6 = sub_255C15EB0((void *)(v7 > 1), v8 + 1, 1, v6);
      }
      ++v5;
      *((void *)&v9 + 1) = *(void *)&v37.f64[1];
      *(float32x2_t *)&long long v9 = vcvt_f32_f64(v37);
      *(float32x2_t *)&long long v10 = vcvt_f32_f64(v38);
      *(float *)&unsigned int v11 = v39;
      *((void *)&v10 + 1) = v11;
      *(void *)&long long v12 = v10;
      *(float *)&unsigned int v13 = v39;
      *((void *)&v12 + 1) = v13;
      v6[2] = v8 + 1;
      uint64_t v14 = &v6[8 * v8];
      *((_OWORD *)v14 + 2) = v9;
      v14[6] = v9;
      *((_OWORD *)v14 + 4) = v10;
      *((_OWORD *)v14 + 5) = v12;
    }
    while (v4 != v5);
  }
  else
  {
    id v6 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)objc_msgSend(v1, sel_faceCount);
  if ((v15 & 0x8000000000000000) == 0)
  {
    if (!v15) {
      return (uint64_t)v6;
    }
    uint64_t v16 = 0;
    uint64_t v17 = (char *)MEMORY[0x263F8EE78];
    uint64_t v35 = (char *)v15;
    uint64_t v36 = v6;
    while ((char *)v15 != v16)
    {
      objc_msgSend(v1, sel_faceAtIndex_, v16);
      if (LODWORD(v37.f64[0]) >= 0x10000
        || LODWORD(v37.f64[1]) >= 0x10000
        || HIDWORD(v37.f64[1]) >= 0x10000
        || HIDWORD(v37.f64[0]) >= 0x10000)
      {
        goto LABEL_44;
      }
      int64_t v18 = *((void *)v17 + 2);
      int64_t v19 = v18 + 6;
      if (__OFADD__(v18, 6)) {
        goto LABEL_41;
      }
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native
        || (v21 = *((void *)v17 + 3), unint64_t v22 = v21 >> 1, (uint64_t)(v21 >> 1) < v19))
      {
        if (v18 <= v19) {
          int64_t v23 = v18 + 6;
        }
        else {
          int64_t v23 = v18;
        }
        uint64_t v17 = sub_255C15DA4(isUniquelyReferenced_nonNull_native, v23, 1, v17);
        unint64_t v21 = *((void *)v17 + 3);
        unint64_t v22 = v21 >> 1;
      }
      unint64_t v24 = *((void *)v17 + 2);
      unint64_t v25 = v24 + 1;
      if (v22 <= v24)
      {
        uint64_t v17 = sub_255C15DA4((char *)(v21 > 1), v24 + 1, 1, v17);
        unint64_t v21 = *((void *)v17 + 3);
        unint64_t v22 = v21 >> 1;
      }
      *((void *)v17 + 2) = v25;
      *(_WORD *)&v17[2 * v24 + 32] = LOWORD(v37.f64[0]);
      unint64_t v26 = v24 + 2;
      if ((uint64_t)v22 < (uint64_t)(v24 + 2)) {
        uint64_t v17 = sub_255C15DA4((char *)(v21 > 1), v24 + 2, 1, v17);
      }
      *((void *)v17 + 2) = v26;
      *(_WORD *)&v17[2 * v25 + 32] = LOWORD(v37.f64[1]);
      unint64_t v27 = *((void *)v17 + 3);
      unint64_t v28 = v24 + 3;
      if ((uint64_t)(v24 + 3) > (uint64_t)(v27 >> 1)) {
        uint64_t v17 = sub_255C15DA4((char *)(v27 > 1), v24 + 3, 1, v17);
      }
      *((void *)v17 + 2) = v28;
      *(_WORD *)&v17[2 * v26 + 32] = WORD2(v37.f64[1]);
      unint64_t v29 = *((void *)v17 + 3);
      unint64_t v30 = v24 + 4;
      if ((uint64_t)(v24 + 4) > (uint64_t)(v29 >> 1)) {
        uint64_t v17 = sub_255C15DA4((char *)(v29 > 1), v24 + 4, 1, v17);
      }
      *((void *)v17 + 2) = v30;
      *(_WORD *)&v17[2 * v28 + 32] = LOWORD(v37.f64[0]);
      unint64_t v31 = *((void *)v17 + 3);
      unint64_t v32 = v24 + 5;
      if ((uint64_t)(v24 + 5) > (uint64_t)(v31 >> 1)) {
        uint64_t v17 = sub_255C15DA4((char *)(v31 > 1), v24 + 5, 1, v17);
      }
      *((void *)v17 + 2) = v32;
      *(_WORD *)&v17[2 * v30 + 32] = WORD2(v37.f64[0]);
      unint64_t v33 = *((void *)v17 + 3);
      if ((uint64_t)(v24 + 6) > (uint64_t)(v33 >> 1)) {
        uint64_t v17 = sub_255C15DA4((char *)(v33 > 1), v24 + 6, 1, v17);
      }
      ++v16;
      *((void *)v17 + 2) = v24 + 6;
      *(_WORD *)&v17[2 * v32 + 32] = LOWORD(v37.f64[1]);
      unint64_t v15 = (unint64_t)v35;
      id v6 = v36;
      if (v35 == v16) {
        return (uint64_t)v6;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_255C81238();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for Features(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Features(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Features()
{
  return &type metadata for Features;
}

uint64_t sub_255AAF938()
{
  return *(void *)v0;
}

uint64_t sub_255AAF944()
{
  return *(void *)(v0 + 24);
}

__n128 sub_255AAF950()
{
  xmmword_26B2AA630 = xmmword_255C83410;
  *(_OWORD *)&qword_26B2AA640 = xmmword_255C83410;
  __asm { FMOV            V0.2D, #2.0 }
  xmmword_26B2AA650 = (__int128)result;
  return result;
}

uint64_t sub_255AAF970(uint64_t a1, uint64_t a2, uint64_t a3, float64_t a4, float64_t a5, __n128 a6, double a7)
{
  double v69 = a6.n128_f64[0];
  if (a1 >= 1 && a2 >= 1)
  {
    uint64_t v74 = a1 + 1;
    if (!__OFADD__(a1, 1))
    {
      uint64_t v8 = 0;
      double v9 = (double)a1;
      double v10 = (double)a2;
      double v11 = 0.0 / (double)a1;
      uint64_t v12 = a3 + 32;
      unint64_t v13 = *(void *)(a3 + 16);
      a6.n128_f64[1] = a7;
      v14.f64[0] = a4;
      v14.f64[1] = a5;
      unint64_t v15 = (void *)MEMORY[0x263F8EE78];
      uint64_t v64 = a1 - 1;
      float64x2_t v65 = v14;
      __n128 v66 = a6;
      while (1)
      {
        unint64_t v16 = v8 * v74;
        if ((unsigned __int128)(v8 * (__int128)v74) >> 64 != (v8 * v74) >> 63) {
          break;
        }
        if (v16 >= v13) {
          goto LABEL_56;
        }
        uint64_t v17 = (double *)(v12 + 16 * v16);
        double v19 = *v17;
        double v18 = v17[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v15 = sub_255C160D0(0, v15[2] + 1, 1, v15);
        }
        unint64_t v21 = v15[2];
        unint64_t v20 = v15[3];
        if (v21 >= v20 >> 1) {
          unint64_t v15 = sub_255C160D0((void *)(v20 > 1), v21 + 1, 1, v15);
        }
        uint64_t v22 = 0;
        uint64_t v75 = v8;
        double v23 = (double)v8 / v10;
        v15[2] = v21 + 1;
        unint64_t v24 = (double *)&v15[5 * v21];
        v24[4] = v11;
        v24[5] = v23;
        v24[6] = v19 * v69 + a4;
        v24[7] = v18 * a7 + a5;
        v24[8] = 0.5;
        uint64_t v25 = 40 * v21 + 72;
        float64x2_t v27 = v65;
        float64x2_t v26 = (float64x2_t)v66;
        do
        {
          uint64_t v28 = v22 + 1;
          unint64_t v29 = v16 + v22 + 1;
          if (__OFADD__(v16, v22 + 1))
          {
            __break(1u);
LABEL_50:
            __break(1u);
            return (uint64_t)v15;
          }
          if (v29 >= v13) {
            goto LABEL_50;
          }
          float64x2_t v30 = *(float64x2_t *)(v12 + 16 * v29);
          unint64_t v31 = v15[3];
          unint64_t v32 = v21 + v22;
          unint64_t v33 = v32 + 2;
          if (v28 + v21 >= v31 >> 1)
          {
            float64x2_t v63 = v30;
            uint64_t v35 = sub_255C160D0((void *)(v31 > 1), v32 + 2, 1, v15);
            float64x2_t v30 = v63;
            float64x2_t v27 = v65;
            float64x2_t v26 = (float64x2_t)v66;
            unint64_t v15 = v35;
          }
          v15[2] = v33;
          double v34 = (float64x2_t *)((char *)v15 + v25);
          v34->f64[0] = (double)v28 / v9;
          v34->f64[1] = v23;
          v34[1] = vaddq_f64(vmulq_f64(v30, v26), v27);
          v34[2].f64[0] = 0.5;
          v25 += 40;
          uint64_t v22 = v28;
        }
        while (a1 != v28);
        uint64_t v36 = a2;
        if (v75 == a2)
        {
          uint64_t v37 = 0;
          uint64_t v38 = 0;
          uint64_t v70 = (a1 + 1);
          uint64_t v39 = (a1 + 2);
          unint64_t v40 = (void *)MEMORY[0x263F8EE78];
          uint64_t v41 = v74;
          while (v38 != v36)
          {
            uint64_t v42 = v74 * v38;
            if ((unsigned __int128)(v74 * (__int128)v38) >> 64 != (v74 * v38) >> 63) {
              goto LABEL_59;
            }
            if (v42 < 0 || v42 == 0xFFFFFFFFLL) {
              goto LABEL_63;
            }
            uint64_t v43 = v42 + a1;
            if (__OFADD__(v42, a1)) {
              goto LABEL_60;
            }
            unint64_t v44 = v43 + 2;
            if (__OFADD__(v43, 2)) {
              goto LABEL_61;
            }
            if ((v44 & 0x8000000000000000) != 0) {
              goto LABEL_63;
            }
            if (HIDWORD(v44)) {
              goto LABEL_63;
            }
            if (v43 < -1) {
              goto LABEL_63;
            }
            int v45 = v43 + 1;
            if ((unint64_t)(v43 + 1) >> 32) {
              goto LABEL_63;
            }
            uint64_t v72 = v39;
            uint64_t v46 = v38;
            uint64_t v76 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v40 = sub_255C15FC0(0, v40[2] + 1, 1, v40);
            }
            uint64_t v47 = 0;
            uint64_t v38 = v46 + 1;
            uint64_t v48 = v40[2];
            uint64_t v49 = 4 * v48;
            uint64_t v50 = v64;
            uint64_t v51 = v76;
            uint64_t v52 = v72;
            while (1)
            {
              unint64_t v53 = v40[3];
              if (v48 + v47 >= v53 >> 1)
              {
                uint64_t v59 = v40;
                uint64_t v60 = v38;
                uint64_t v61 = sub_255C15FC0((void *)(v53 > 1), v48 + v47 + 1, 1, v59);
                uint64_t v52 = v72;
                uint64_t v38 = v60;
                uint64_t v51 = v76;
                uint64_t v50 = v64;
                unint64_t v40 = v61;
              }
              v40[2] = v48 + v47 + 1;
              uint64_t v54 = &v40[v49];
              *((_DWORD *)v54 + 8) = v51 + v47;
              *((_DWORD *)v54 + 9) = v51 + v47 + 1;
              *((_DWORD *)v54 + 10) = v52 + v47;
              *((_DWORD *)v54 + 11) = v45;
              v54[6] = 0;
              v54[7] = 0;
              if (v50 == v47) {
                break;
              }
              unint64_t v55 = v42 + v47 + 1;
              if (__OFADD__(v42, v47 + 1))
              {
                __break(1u);
LABEL_53:
                __break(1u);
LABEL_54:
                __break(1u);
                goto LABEL_55;
              }
              if (HIDWORD(v55) || v55 == 0xFFFFFFFF) {
                goto LABEL_63;
              }
              BOOL v56 = __OFADD__(v55, a1);
              unint64_t v57 = v55 + a1;
              if (v56) {
                goto LABEL_53;
              }
              unint64_t v58 = v57 + 2;
              if (__OFADD__(v57, 2)) {
                goto LABEL_54;
              }
              if ((v58 & 0x8000000000000000) == 0 && !HIDWORD(v58) && v41 >= -1)
              {
                int v45 = v57 + 1;
                v49 += 4;
                ++v47;
                if (!((v57 + 1) >> 32)) {
                  continue;
                }
              }
              goto LABEL_63;
            }
            v41 += v74;
            uint64_t v37 = v51 + v70;
            uint64_t v39 = v52 + v70;
            uint64_t v36 = a2;
            if (v38 == a2) {
              return (uint64_t)v15;
            }
          }
          goto LABEL_58;
        }
        uint64_t v8 = v75 + 1;
        if (__OFADD__(v75, 1)) {
          goto LABEL_57;
        }
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
    }
    __break(1u);
LABEL_63:
    swift_bridgeObjectRelease();
    sub_255C81238();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_255C81248();
  __break(1u);
  return result;
}

MediaCoreUI::BackdropLayerView __swiftcall BackdropLayerView.init(groupName:)(Swift::String groupName)
{
  *(Swift::String *)uint64_t v1 = groupName;
  *(unsigned char *)(v1 + 16) = 0;
  result.groupName = groupName;
  return result;
}

MediaCoreUI::BackdropLayerView __swiftcall BackdropLayerView.init(groupName:captureOnly:)(Swift::String groupName, Swift::Bool captureOnly)
{
  *(Swift::String *)uint64_t v2 = groupName;
  *(unsigned char *)(v2 + 16) = captureOnly;
  result.groupName = groupName;
  result.captureOnly = captureOnly;
  return result;
}

uint64_t BackdropLayerView.body.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  char v3 = *((unsigned char *)v0 + 16);
  sub_255AAFF64();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  *(unsigned char *)(v4 + 32) = v3;
  swift_bridgeObjectRetain();

  return sub_255C7DFD8();
}

unint64_t sub_255AAFF64()
{
  unint64_t result = qword_26B29BE90;
  if (!qword_26B29BE90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B29BE90);
  }
  return result;
}

id sub_255AAFFA4(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v6 = (void *)sub_255C805F8();
  objc_msgSend(a1, sel_setGroupName_, v6);

  return objc_msgSend(a1, sel_setCaptureOnly_, a4 & 1);
}

uint64_t sub_255AB0018()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_255AB0050(void *a1)
{
  return sub_255AAFFA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_255AB005C()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  char v3 = *((unsigned char *)v0 + 16);
  sub_255AAFF64();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  *(unsigned char *)(v4 + 32) = v3;
  swift_bridgeObjectRetain();

  return sub_255C7DFD8();
}

unint64_t static BackdropLayerHostView.layerClass.getter()
{
  return sub_255AAFF64();
}

id BackdropLayerHostView.__allocating_init(groupName:)()
{
  id v1 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  id v2 = objc_msgSend(v1, sel_layer);
  self;
  char v3 = (void *)swift_dynamicCastObjCClassUnconditional();
  uint64_t v4 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setGroupName_, v4);

  return v1;
}

id BackdropLayerHostView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id BackdropLayerHostView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id BackdropLayerHostView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BackdropLayerHostView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id BackdropLayerHostView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_255AB0454()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AB0474(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BackdropLayerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for BackdropLayerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for BackdropLayerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BackdropLayerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackdropLayerView()
{
  return &type metadata for BackdropLayerView;
}

uint64_t type metadata accessor for BackdropLayerHostView()
{
  return self;
}

unint64_t sub_255AB0604()
{
  unint64_t result = qword_269F23000;
  if (!qword_269F23000)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23008);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23000);
  }
  return result;
}

uint64_t sub_255AB0668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v95 = a2;
  uint64_t v5 = sub_255C7E3A8();
  uint64_t v90 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v89 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_255C7E378();
  uint64_t v87 = *(void *)(v88 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v88);
  v86 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v85 = *(char **)(*(void *)(a1 + 24) - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v81 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = v10;
  uint64_t v11 = sub_255C7E458();
  uint64_t v82 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v79 = (char *)&v69 - v12;
  sub_255C7F0D8();
  uint64_t v13 = sub_255C7E458();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (char *)&v69 - v15;
  uint64_t v16 = a1;
  uint64_t v75 = *(void *)(a1 + 40);
  uint64_t v106 = v75;
  uint64_t v107 = MEMORY[0x263F18C10];
  uint64_t v84 = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = sub_255AB1F78((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v76 = WitnessTable;
  uint64_t v104 = WitnessTable;
  uint64_t v105 = v18;
  uint64_t v19 = swift_getWitnessTable();
  *(void *)&long long v108 = v13;
  *((void *)&v108 + 1) = v19;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v78 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v22 = (char *)&v69 - v21;
  *(void *)&long long v108 = v13;
  *((void *)&v108 + 1) = v19;
  uint64_t v77 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v24 = sub_255AB1F78(qword_269F23010, 255, MEMORY[0x263F18DF8]);
  uint64_t v98 = OpaqueTypeMetadata2;
  *(void *)&long long v108 = OpaqueTypeMetadata2;
  *((void *)&v108 + 1) = v5;
  uint64_t v94 = v5;
  uint64_t v97 = OpaqueTypeConformance2;
  *(void *)&long long v109 = OpaqueTypeConformance2;
  *((void *)&v109 + 1) = v24;
  uint64_t v96 = v24;
  uint64_t v25 = swift_getOpaqueTypeMetadata2();
  uint64_t v93 = *(void *)(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  v73 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v74 = (char *)&v69 - v28;
  uint64_t v91 = v29;
  uint64_t v30 = sub_255C80E88();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v92 = (char *)&v69 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v69 - v34;
  uint64_t v36 = v3;
  uint64_t v37 = *(void *)(v3 + 8);
  swift_beginAccess();
  if (*(unsigned char *)(v37 + 16) == 1)
  {
    uint64_t v38 = v36 + *(int *)(v16 + 52);
    uint64_t v72 = v30;
    uint64_t v39 = (uint64_t)v85;
    unint64_t v40 = (void (*)(char *, uint64_t, uint64_t))*((void *)v85 + 2);
    uint64_t v41 = v81;
    uint64_t v70 = v14;
    uint64_t v42 = v83;
    v40(v81, v38, v83);
    sub_255C7F1E8();
    uint64_t v71 = v31;
    uint64_t v43 = (long long *)(v36 + *(int *)(v16 + 56));
    long long v44 = v43[3];
    long long v110 = v43[2];
    *(_OWORD *)uint64_t v111 = v44;
    *(_OWORD *)&v111[10] = *(long long *)((char *)v43 + 58);
    long long v45 = v43[1];
    long long v108 = *v43;
    long long v109 = v45;
    sub_255A1D4DC((uint64_t)&v108, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v99);
    sub_255A1D4DC((uint64_t)&v108, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    uint64_t v46 = v79;
    sub_255C7FAF8();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v42);
    uint64_t v47 = v80;
    uint64_t v48 = v84;
    sub_255B4BFB8();
    uint64_t v49 = v48;
    uint64_t v30 = v72;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v46, v49);
    uint64_t v50 = *MEMORY[0x263F18D10];
    uint64_t v51 = v87;
    uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 104);
    uint64_t v53 = v96;
    id v85 = v35;
    uint64_t v54 = v86;
    uint64_t v55 = v88;
    v52(v86, v50, v88);
    sub_255C7F7A8();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v55);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v47, v13);
    BOOL v56 = v89;
    sub_255C7E5E8();
    unint64_t v57 = v73;
    uint64_t v58 = v98;
    uint64_t v59 = v94;
    uint64_t v60 = v97;
    sub_255C7F688();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v56, v59);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v22, v58);
    uint64_t v99 = v58;
    uint64_t v100 = v59;
    uint64_t v101 = v60;
    uint64_t v102 = v53;
    swift_getOpaqueTypeConformance2();
    uint64_t v61 = v74;
    uint64_t v62 = v91;
    sub_255A20F54(v57);
    uint64_t v63 = v93;
    uint64_t v64 = *(void (**)(char *, uint64_t))(v93 + 8);
    v64(v57, v62);
    uint64_t v65 = (uint64_t)v92;
    sub_255A20F54(v61);
    v64(v61, v62);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v65, 0, 1, v62);
    uint64_t v35 = v85;
    sub_255A97640(v65, (uint64_t)v85);
    __n128 v66 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v66(v65, v30);
  }
  else
  {
    uint64_t v67 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v92, 1, 1, v91);
    uint64_t v59 = v94;
    *(void *)&long long v108 = v98;
    *((void *)&v108 + 1) = v94;
    *(void *)&long long v109 = v97;
    *((void *)&v109 + 1) = v96;
    swift_getOpaqueTypeConformance2();
    sub_255A97640(v67, (uint64_t)v35);
    __n128 v66 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v66(v67, v30);
  }
  uint64_t v99 = v98;
  uint64_t v100 = v59;
  uint64_t v101 = v97;
  uint64_t v102 = v96;
  uint64_t v103 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  sub_255A20F54(v35);
  return ((uint64_t (*)(char *, uint64_t))v66)(v35, v30);
}

double sub_255AB11EC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  _s11ContextMenuCMa();
  sub_255AB1F78(&qword_26B29C088, v6, (void (*)(uint64_t))_s11ContextMenuCMa);
  *a3 = sub_255C7E2B8();
  a3[1] = v7;
  uint64_t v8 = _s15ContextMenuViewVMa();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))((char *)a3 + *(int *)(v8 + 52), a1, a2);
  uint64_t v9 = (char *)a3 + *(int *)(v8 + 56);
  *(void *)uint64_t v9 = swift_getKeyPath();
  double result = 0.0;
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *((_WORD *)v9 + 36) = 0;
  return result;
}

uint64_t sub_255AB1314()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_255AB134C()
{
  return swift_deallocClassInstance();
}

uint64_t _s11ContextMenuCMa()
{
  return self;
}

uint64_t sub_255AB1380@<X0>(uint64_t *a1@<X8>)
{
  _s11ContextMenuCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t _s15ContextMenuViewVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255AB13E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255AB1488(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 74 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    uint64_t v12 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
    uint64_t v15 = v7 + v12;
    unint64_t v16 = (v7 + v13) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    unint64_t v19 = v15 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(void *)(v16 + 16);
    uint64_t v21 = *(void *)(v16 + 24);
    uint64_t v22 = *(void *)(v16 + 32);
    uint64_t v23 = *(void *)(v16 + 40);
    uint64_t v24 = *(void *)(v16 + 48);
    uint64_t v25 = *(void *)(v16 + 56);
    uint64_t v27 = *(void *)(v16 + 64);
    char v28 = *(unsigned char *)(v16 + 72);
    char v29 = *(unsigned char *)(v16 + 73);
    sub_255A1CFDC(*(void *)v16, v18, v20, v21, v22, v23, v24, v25, v27, v28, v29);
    *(void *)unint64_t v19 = v17;
    *(void *)(v19 + 8) = v18;
    *(void *)(v19 + 16) = v20;
    *(void *)(v19 + 24) = v21;
    *(void *)(v19 + 32) = v22;
    *(void *)(v19 + 40) = v23;
    *(void *)(v19 + 48) = v24;
    *(void *)(v19 + 56) = v25;
    *(void *)(v19 + 64) = v27;
    *(unsigned char *)(v19 + 72) = v28;
    *(unsigned char *)(v19 + 73) = v29;
  }
  return a1;
}

uint64_t sub_255AB1640(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  unint64_t v7 = (*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_255A1D054(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72), *(unsigned char *)(v7 + 73));
}

void *sub_255AB16F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v26 = a1;
  uint64_t v5 = *(void *)(a3 + 24);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_retain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v16 = *(void *)(v13 + 16);
  uint64_t v17 = *(void *)(v13 + 24);
  uint64_t v18 = *(void *)(v13 + 32);
  uint64_t v19 = *(void *)(v13 + 40);
  uint64_t v20 = *(void *)(v13 + 48);
  uint64_t v21 = *(void *)(v13 + 56);
  uint64_t v22 = *(void *)(v13 + 64);
  char v24 = *(unsigned char *)(v13 + 72);
  char v25 = *(unsigned char *)(v13 + 73);
  sub_255A1CFDC(*(void *)v13, v15, v16, v17, v18, v19, v20, v21, v22, v24, v25);
  *(void *)unint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  *(void *)(v12 + 16) = v16;
  *(void *)(v12 + 24) = v17;
  *(void *)(v12 + 32) = v18;
  *(void *)(v12 + 40) = v19;
  *(void *)(v12 + 48) = v20;
  *(void *)(v12 + 56) = v21;
  *(void *)(v12 + 64) = v22;
  *(unsigned char *)(v12 + 72) = v24;
  *(unsigned char *)(v12 + 73) = v25;
  return v26;
}

void *sub_255AB1834(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v16 = *(void *)(v13 + 16);
  uint64_t v17 = *(void *)(v13 + 24);
  uint64_t v18 = *(void *)(v13 + 32);
  uint64_t v19 = *(void *)(v13 + 40);
  uint64_t v20 = *(void *)(v13 + 48);
  uint64_t v21 = *(void *)(v13 + 56);
  uint64_t v22 = *(void *)(v13 + 64);
  char v35 = *(unsigned char *)(v13 + 72);
  char v36 = *(unsigned char *)(v13 + 73);
  sub_255A1CFDC(*(void *)v13, v15, v16, v17, v18, v19, v20, v21, v22, v35, v36);
  uint64_t v23 = *(void *)v12;
  uint64_t v24 = *(void *)(v12 + 8);
  uint64_t v25 = *(void *)(v12 + 16);
  uint64_t v26 = *(void *)(v12 + 24);
  uint64_t v27 = *(void *)(v12 + 32);
  uint64_t v28 = *(void *)(v12 + 40);
  uint64_t v29 = *(void *)(v12 + 48);
  uint64_t v30 = *(void *)(v12 + 56);
  uint64_t v31 = *(void *)(v12 + 64);
  char v32 = *(unsigned char *)(v12 + 72);
  char v33 = *(unsigned char *)(v12 + 73);
  *(void *)unint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  *(void *)(v12 + 16) = v16;
  *(void *)(v12 + 24) = v17;
  *(void *)(v12 + 32) = v18;
  *(void *)(v12 + 40) = v19;
  *(void *)(v12 + 48) = v20;
  *(void *)(v12 + 56) = v21;
  *(void *)(v12 + 64) = v22;
  *(unsigned char *)(v12 + 72) = v35;
  *(unsigned char *)(v12 + 73) = v36;
  sub_255A1D054(v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
  return a1;
}

_OWORD *sub_255AB19B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  uint64_t v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (_OWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  long long v13 = v11[2];
  long long v12 = v11[3];
  long long v14 = v11[1];
  *(_OWORD *)((char *)v10 + 58) = *(_OWORD *)((char *)v11 + 58);
  v10[2] = v13;
  v10[3] = v12;
  v10[1] = v14;
  return a1;
}

void *sub_255AB1A6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24) + 7;
  unint64_t v13 = (v12 + v11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)(v13 + 64);
  unint64_t v15 = (v12 + v10) & 0xFFFFFFFFFFFFFFF8;
  char v16 = *(unsigned char *)(v13 + 72);
  char v17 = *(unsigned char *)(v13 + 73);
  uint64_t v18 = *(void *)v15;
  uint64_t v19 = *(void *)(v15 + 8);
  uint64_t v20 = *(void *)(v15 + 16);
  uint64_t v21 = *(void *)(v15 + 24);
  uint64_t v22 = *(void *)(v15 + 32);
  uint64_t v23 = *(void *)(v15 + 40);
  uint64_t v24 = *(void *)(v15 + 48);
  uint64_t v25 = *(void *)(v15 + 56);
  uint64_t v26 = *(void *)(v15 + 64);
  char v27 = *(unsigned char *)(v15 + 72);
  char v28 = *(unsigned char *)(v15 + 73);
  long long v29 = *(_OWORD *)(v13 + 16);
  long long v30 = *(_OWORD *)(v13 + 32);
  long long v31 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)unint64_t v15 = *(_OWORD *)v13;
  *(_OWORD *)(v15 + 16) = v29;
  *(_OWORD *)(v15 + 32) = v30;
  *(_OWORD *)(v15 + 48) = v31;
  *(void *)(v15 + 64) = v14;
  *(unsigned char *)(v15 + 72) = v16;
  *(unsigned char *)(v15 + 73) = v17;
  sub_255A1D054(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  return a1;
}

uint64_t sub_255AB1B70(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + ((v6 + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 74;
    unsigned int v9 = (a2 - v7 + 0xFFFF) >> (8 * v8);
    if (v8 <= 3) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)((char *)a1 + v8);
        if (*(unsigned __int16 *)((char *)a1 + v8)) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255AB1CE4);
      case 4:
        int v13 = *(_DWORD *)((char *)a1 + v8);
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 <= 3)
        {
          int v16 = *a1;
        }
        else
        {
          int v15 = 0;
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
  }
  unint64_t v17 = *((void *)a1 + 1);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_255AB1CF8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + ((v9 + 16) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 74;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_31;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_30;
        default:
LABEL_30:
          if (a2)
          {
LABEL_31:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = (unint64_t)&a1[v9 + 16] & ~v9;
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *(void *)a1 = a2 ^ 0x80000000;
              *((void *)a1 + 1) = 0;
            }
            else
            {
              *((void *)a1 + 1) = a2 - 1;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 0xFFFF) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = v16 >> v11;
  bzero(a1, v10);
  if (v10 <= 3) {
    int v18 = v17 + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 > 3) {
    *(_DWORD *)a1 = v16;
  }
  else {
    *(_WORD *)a1 = v16;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x255AB1F0CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t sub_255AB1F34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AB1F78(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255AB1FC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AB21BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_255AB228C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_255AB2484(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x255AB2750);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for OSStatusCheck()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255AB2790()
{
  sub_255A79D98();

  return sub_255C7E8C8();
}

uint64_t sub_255AB27D8@<X0>(unsigned char *a1@<X8>)
{
  sub_255A79D98();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AB2828()
{
  return sub_255C7E8D8();
}

BOOL static MotionPlaybackPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 & 0xFE) == 2) {
    return 0;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

BOOL sub_255AB28D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 & 0xFE) == 2) {
    return 0;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

uint64_t MCUINamespace<A>.motionCollection(policy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = (char *)MEMORY[0x270FA5388](a1);
  unsigned int v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *v5;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, v3);
  swift_getKeyPath();
  v10[15] = v8;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_255AB2A58@<X0>(unsigned char *a1@<X8>)
{
  sub_255A79D98();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AB2AA8()
{
  return sub_255C7E8D8();
}

void sub_255AB2AF4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_255AB2B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255AB2F4C();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t View.motionCollection(policy:)(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MCUINamespace();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = &v9[-v6];
  LOBYTE(a1) = *a1;
  View.mcui.getter(a2, (uint64_t)&v9[-v6]);
  char v10 = (char)a1;
  MCUINamespace<A>.motionCollection(policy:)((uint64_t)&v10, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t getEnumTagSinglePayload for MotionPlaybackPolicy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255AB2D1CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MotionPlaybackPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x255AB2E04);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_255AB2E2C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_255AB2E48(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionPlaybackPolicy()
{
  return &type metadata for MotionPlaybackPolicy;
}

uint64_t sub_255AB2E70()
{
  return swift_getWitnessTable();
}

unint64_t sub_255AB2EE0()
{
  unint64_t result = qword_26B29D0F0;
  if (!qword_26B29D0F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D0F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D0F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionPlaybackPolicyEnvironmentKey()
{
  return &type metadata for MotionPlaybackPolicyEnvironmentKey;
}

unint64_t sub_255AB2F4C()
{
  unint64_t result = qword_269F23098;
  if (!qword_269F23098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23098);
  }
  return result;
}

uint64_t sub_255AB2FA0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v45 = sub_255C7D898();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v46 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  uint64_t v11 = a1[6];
  uint64_t v40 = a1[7];
  uint64_t v39 = a1[8];
  int v41 = *((unsigned __int8 *)a1 + 72);
  swift_getKeyPath();
  uint64_t v12 = v2 + OBJC_IVAR____TtC11MediaCoreUI16WindowProperties___observationRegistrar;
  *(void *)&long long v55 = v2;
  uint64_t v42 = sub_255AB494C((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  uint64_t v43 = v12;
  sub_255C7D718();
  uint64_t result = swift_release();
  uint64_t v14 = *(void *)(v2 + 32);
  if ((v8 & 0xFF0000) == 0x40000)
  {
    uint64_t v15 = v45;
    uint64_t v16 = v44;
    int v17 = v46;
    if ((v14 & 0xFF0000) == 0x40000) {
      return result;
    }
  }
  else
  {
    long long v18 = *(_OWORD *)(v2 + 16);
    uint64_t v20 = *(void *)(v2 + 40);
    uint64_t v19 = *(void *)(v2 + 48);
    long long v21 = *(_OWORD *)(v2 + 56);
    long long v22 = *(_OWORD *)(v2 + 72);
    char v23 = *(unsigned char *)(v2 + 88);
    *(void *)&long long v55 = v5;
    *((void *)&v55 + 1) = v6;
    *(void *)&long long v56 = v8;
    *((void *)&v56 + 1) = v7;
    *(void *)unint64_t v57 = v9;
    *(void *)&v57[8] = v10;
    *(void *)&v57[16] = v11;
    *(void *)&v57[24] = v40;
    *(void *)&v57[32] = v39;
    char v58 = v41;
    if ((v14 & 0xFF0000) == 0x40000)
    {
      uint64_t v15 = v45;
      uint64_t v16 = v44;
      int v17 = v46;
    }
    else
    {
      long long v47 = v18;
      __int16 v48 = v14 & 0xFF01;
      char v49 = BYTE2(v14);
      uint64_t v50 = v20;
      char v51 = v19 & 1;
      long long v52 = v21;
      long long v53 = v22;
      char v54 = v23 & 1;
      uint64_t result = _s11MediaCoreUI13DeviceMetricsV2eeoiySbAC_ACtFZ_0((uint64_t)&v55, (uint64_t)&v47);
      uint64_t v15 = v45;
      uint64_t v16 = v44;
      int v17 = v46;
      if (result) {
        return result;
      }
    }
  }
  if (qword_26B29B3F0 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v15, (uint64_t)qword_26B2AA4E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v17, v24, v15);
  swift_retain_n();
  uint64_t v25 = sub_255C7D878();
  os_log_type_t v26 = sub_255C80C08();
  if (os_log_type_enabled(v25, v26))
  {
    char v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(void *)&long long v47 = v28;
    *(_DWORD *)char v27 = 136446210;
    swift_getKeyPath();
    *(void *)&long long v55 = v2;
    sub_255C7D718();
    swift_release();
    uint64_t v29 = *(void *)(v2 + 32);
    if ((v29 & 0xFF0000) == 0x40000)
    {
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    char v30 = *(unsigned char *)(v2 + 88);
    int v31 = *(_DWORD *)(v2 + 48);
    uint64_t v32 = *(void *)(v2 + 40);
    long long v55 = *(_OWORD *)(v2 + 16);
    LOWORD(v56) = v29 & 0xFF01;
    BYTE2(v56) = BYTE2(v29);
    *((void *)&v56 + 1) = v32;
    v57[0] = v31 & 1;
    *(_OWORD *)&v57[8] = *(_OWORD *)(v2 + 56);
    *(_OWORD *)&v57[24] = *(_OWORD *)(v2 + 72);
    char v58 = v30 & 1;
    unint64_t v33 = DeviceMetrics.description.getter();
    *(void *)&long long v55 = sub_255A7BEC4(v33, v34, (uint64_t *)&v47);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v25, v26, "Updated device metrics: %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v28, -1, -1);
    MEMORY[0x25A297C00](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v46, v15);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v15);
  }
  swift_getKeyPath();
  *(void *)&long long v55 = v2;
  sub_255C7D718();
  swift_release();
  uint64_t v35 = *(void *)(v2 + 80);
  char v36 = *(unsigned char *)(v2 + 88);
  long long v37 = *(_OWORD *)(v2 + 32);
  long long v55 = *(_OWORD *)(v2 + 16);
  long long v56 = v37;
  long long v38 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)unint64_t v57 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)&v57[16] = v38;
  *(void *)&v57[32] = v35;
  char v58 = v36;
  return sub_255C7DA18();
}

__n128 sub_255AB34CC@<Q0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_255AB494C((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 80);
  char v4 = *(unsigned char *)(v1 + 88);
  long long v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 48);
  long long v7 = *(_OWORD *)(v1 + 64);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 72) = v4;
  return result;
}

uint64_t sub_255AB358C(uint64_t a1, uint64_t a2)
{
  long long v7 = *(_OWORD *)(a1 + 32);
  long long v8 = *(_OWORD *)(a1 + 16);
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 80);
  char v3 = *(unsigned char *)(a1 + 88);
  sub_255A8B2AC(a2, a1 + 16);
  v9[0] = v8;
  v9[1] = v7;
  v9[2] = v6;
  v9[3] = v5;
  uint64_t v10 = v2;
  char v11 = v3;
  return sub_255AB2FA0((uint64_t *)v9);
}

double sub_255AB361C()
{
  swift_getKeyPath();
  sub_255AB494C((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  return *(double *)(v0 + 104);
}

double *sub_255AB36C0(double *result, double a2, double a3, double a4, double a5)
{
  result[13] = a2;
  result[14] = a3;
  result[15] = a4;
  result[16] = a5;
  return result;
}

uint64_t sub_255AB36CC()
{
  swift_getKeyPath();
  sub_255AB494C((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_255AB376C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 136) = a2;
  return result;
}

uint64_t sub_255AB3774()
{
  swift_getKeyPath();
  sub_255AB494C((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t sub_255AB3814@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255AB494C((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 137);
  return result;
}

uint64_t sub_255AB38BC()
{
  return swift_release();
}

double sub_255AB398C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  objc_msgSend(a1, sel_bounds);
  double v5 = v4;
  double v7 = v6;
  id v8 = objc_msgSend(a1, sel_window);
  double v9 = 1.0;
  double v10 = 1.0;
  if (v8)
  {
    char v11 = v8;
    id v12 = objc_msgSend(v8, sel_screen);

    objc_msgSend(v12, sel_nativeScale);
    double v10 = v13;
  }
  id v14 = objc_msgSend(a1, sel_window);
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_screen);

    objc_msgSend(v16, sel_scale);
    double v9 = v17;
  }
  double v18 = v7 * (v10 / v9);
  double v19 = round(v5 * (v10 / v9));
  double v20 = round(v18);
  id v21 = objc_msgSend(a1, sel_traitCollection);
  id v22 = objc_msgSend(v21, sel_horizontalSizeClass);

  char v23 = self;
  id v24 = objc_msgSend(v23, sel_currentDevice);
  id v25 = objc_msgSend(v24, sel_userInterfaceIdiom);

  char v26 = 0;
  if (v25 == (id)1 && v22 == (id)2)
  {
    if (v20 >= v19) {
      goto LABEL_11;
    }
    if (qword_26B29C038 != -1) {
      swift_once();
    }
    if (*(double *)&qword_26B2AA540 <= v19) {
      char v26 = 2;
    }
    else {
LABEL_11:
    }
      char v26 = 1;
  }
  if (v20 >= v19) {
    double v27 = v19;
  }
  else {
    double v27 = v20;
  }
  if (v19 > v20) {
    double v28 = v19;
  }
  else {
    double v28 = v20;
  }
  if (v27 >= 744.0)
  {
    sub_255A1DD3C(&v34, v27, v28);
    char v29 = v34;
  }
  else
  {
    sub_255A1DCA8(&v33, v27, v28);
    char v29 = v33;
  }
  *(double *)a2 = v5;
  *(double *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 17) = v29;
  *(unsigned char *)(a2 + 18) = v26;
  id v30 = objc_msgSend(v23, sel_currentDevice);
  id v31 = objc_msgSend(v30, sel_userInterfaceIdiom);

  *(void *)(a2 + 24) = v31;
  *(unsigned char *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(unsigned char *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_255AB3C14(void *a1)
{
  uint64_t v53 = sub_255C803B8();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v50 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_255C803E8();
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  __int16 v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  *(void *)&long long aBlock = v1;
  sub_255AB494C((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  uint64_t result = swift_release();
  if ((*(unsigned char *)(v1 + 137) & 1) == 0)
  {
    id v6 = objc_msgSend(a1, sel_window);
    if (v6)
    {
      double v7 = v6;
      objc_msgSend(v6, sel_safeAreaInsets);
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;

      id v16 = objc_msgSend(self, sel_sharedApplication);
      id v17 = objc_msgSend(v16, sel_userInterfaceLayoutDirection);

      double v18 = v17 == (id)1 ? v15 : v11;
      if (v17 != (id)1) {
        double v11 = v15;
      }
    }
    else
    {
      double v9 = 0;
      double v18 = 0.0;
      double v13 = 0;
      double v11 = 0.0;
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v37 - 6) = (id)v1;
    *(&v37 - 5) = v9;
    *((double *)&v37 - 4) = v18;
    *(&v37 - 3) = v13;
    *((double *)&v37 - 2) = v11;
    *(void *)&long long aBlock = v1;
    sub_255C7D708();
    uint64_t v47 = 0;
    swift_release();
    sub_255AB398C(a1, (uint64_t)&aBlock);
    long long v20 = aBlock;
    char v21 = v61[0];
    long long v62 = *(_OWORD *)&v61[1];
    long long v63 = *(_OWORD *)&v61[17];
    long long v64 = *(_OWORD *)&v61[33];
    uint64_t v65 = *(void *)&v61[49];
    uint64_t v46 = v61[1];
    uint64_t v22 = v61[2];
    uint64_t v23 = *(void *)&v61[8];
    uint64_t v45 = v61[16];
    uint64_t v44 = *(void *)&v61[24];
    uint64_t v43 = *(void *)&v61[32];
    uint64_t v42 = *(void *)&v61[40];
    uint64_t v41 = *(void *)&v61[48];
    int v40 = v61[56];
    swift_getKeyPath();
    *(void *)&long long aBlock = v1;
    sub_255C7D718();
    swift_release();
    uint64_t v24 = *(void *)(v1 + 32);
    if ((v24 & 0xFF0000) == 0x40000) {
      goto LABEL_12;
    }
    long long aBlock = *(_OWORD *)(v1 + 16);
    *(_OWORD *)&v61[8] = *(_OWORD *)(v1 + 40);
    *(_OWORD *)&v61[24] = *(_OWORD *)(v1 + 56);
    *(_OWORD *)&v61[40] = *(_OWORD *)(v1 + 72);
    long long v56 = v62;
    char v25 = *(unsigned char *)(v1 + 88);
    *(void *)uint64_t v61 = v24;
    v61[56] = v25;
    long long v54 = v20;
    char v55 = v21;
    long long v57 = v63;
    long long v58 = v64;
    uint64_t v59 = v65;
    uint64_t result = _s11MediaCoreUI13DeviceMetricsV2eeoiySbAC_ACtFZ_0((uint64_t)&aBlock, (uint64_t)&v54);
    if ((result & 1) == 0)
    {
LABEL_12:
      double v38 = *((double *)&v20 + 1);
      double v39 = *(double *)&v20;
      swift_getKeyPath();
      *(void *)&long long aBlock = v1;
      sub_255C7D718();
      swift_release();
      if ((unint64_t)*(unsigned __int8 *)(v1 + 34) << 16 != 0x40000)
      {
        swift_getKeyPath();
        *(void *)&long long aBlock = v1;
        sub_255C7D718();
        swift_release();
        if (unint64_t)*(unsigned __int8 *)(v1 + 34) << 16 == 0x40000 || (*(unsigned char *)(v1 + 32))
        {
          if ((v21 & 1) == 0) {
            goto LABEL_20;
          }
        }
        else if ((v21 & 1) != 0 || *(double *)(v1 + 16) != v39 || *(double *)(v1 + 24) != v38)
        {
LABEL_20:
          swift_getKeyPath();
          *(void *)&long long aBlock = v1;
          sub_255C7D718();
          swift_release();
          if (*(unsigned char *)(v1 + 136) == 1)
          {
            id v26 = objc_msgSend(self, sel_sharedApplication);
            id v37 = objc_msgSend(v26, sel_applicationState);

            if (!v37)
            {
              uint64_t v28 = swift_getKeyPath();
              MEMORY[0x270FA5388](v28);
              *(&v37 - 2) = (id)v1;
              *((unsigned char *)&v37 - 8) = 1;
              *(void *)&long long aBlock = v1;
              sub_255C7D708();
              swift_release();
              sub_255A6C3AC();
              char v29 = (void *)sub_255C80C88();
              uint64_t v30 = swift_allocObject();
              long long v31 = v63;
              *(_OWORD *)(v30 + 41) = v62;
              double v32 = v39;
              *(void *)(v30 + 16) = v1;
              *(double *)(v30 + 24) = v32;
              *(double *)(v30 + 32) = v38;
              *(unsigned char *)(v30 + 40) = v21;
              *(_OWORD *)(v30 + 57) = v31;
              *(_OWORD *)(v30 + 73) = v64;
              *(void *)(v30 + 89) = v65;
              *(void *)&v61[16] = sub_255AB4940;
              *(void *)&v61[24] = v30;
              *(void *)&long long aBlock = MEMORY[0x263EF8330];
              *((void *)&aBlock + 1) = 1107296256;
              *(void *)uint64_t v61 = sub_255AE4914;
              *(void *)&v61[8] = &block_descriptor_7;
              char v33 = _Block_copy(&aBlock);
              swift_retain();
              swift_release();
              char v34 = v48;
              sub_255C803D8();
              *(void *)&long long aBlock = MEMORY[0x263F8EE78];
              sub_255AB494C((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
              __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
              sub_255AB4994();
              uint64_t v35 = v50;
              uint64_t v36 = v53;
              sub_255C80F78();
              MEMORY[0x25A296510](0, v34, v35, v33);
              _Block_release(v33);

              (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v36);
              return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v34, v51);
            }
          }
        }
      }
      *(double *)&long long aBlock = v39;
      *((double *)&aBlock + 1) = v38;
      *(void *)uint64_t v61 = v21 & 1 | (unint64_t)(v46 << 8) | (v22 << 16);
      *(void *)&v61[8] = v23;
      *(void *)&v61[16] = v45;
      *(void *)&v61[24] = v44;
      *(void *)&v61[32] = v43;
      *(void *)&v61[40] = v42;
      *(void *)&v61[48] = v41;
      v61[56] = v40;
      uint64_t v27 = swift_getKeyPath();
      MEMORY[0x270FA5388](v27);
      *(&v37 - 2) = (id)v1;
      *(&v37 - 1) = &aBlock;
      *(void *)&long long v54 = v1;
      sub_255C7D708();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_255AB4588()
{
  return swift_release();
}

uint64_t sub_255AB4704()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI16WindowProperties___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255AB47AC()
{
  return type metadata accessor for WindowProperties();
}

uint64_t type metadata accessor for WindowProperties()
{
  uint64_t result = qword_26B298EB8;
  if (!qword_26B298EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255AB4800()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

__n128 sub_255AB48D8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  __n128 result = *(__n128 *)(v0 + 24);
  long long v3 = *(_OWORD *)(v0 + 40);
  *(__n128 *)(v1 + 104) = result;
  *(_OWORD *)(v1 + 120) = v3;
  return result;
}

void sub_255AB48F8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 137) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_255AB4908()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255AB4940()
{
  return sub_255AB4588();
}

uint64_t sub_255AB494C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255AB4994()
{
  unint64_t result = qword_26B29FC50;
  if (!qword_26B29FC50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29F390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29FC50);
  }
  return result;
}

void sub_255AB49F0()
{
}

uint64_t sub_255AB4A08()
{
  return sub_255A8B314();
}

char *sub_255AB4A20()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets];
  long long v3 = *(_OWORD *)(MEMORY[0x263F834E8] + 16);
  *uint64_t v2 = *MEMORY[0x263F834E8];
  v2[1] = v3;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView] = 0;
  v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds];
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenContentWidthOverflows] = 0;
  v16.receiver = v0;
  v16.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v16, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v6 = objc_allocWithZone(MEMORY[0x263F82E50]);
  double v7 = (char *)v5;
  id v8 = objc_msgSend(v6, sel_init);
  objc_msgSend(v7, sel_addSubview_, v8);
  double v9 = *(void **)&v7[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView];
  *(void *)&v7[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView] = v8;
  id v10 = v8;

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  id v12 = *(void **)&v7[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer];
  *(void *)&v7[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer] = v11;
  id v13 = v11;

  id v14 = objc_msgSend(v7, sel_layer);
  objc_msgSend(v14, sel_addSublayer_, v13);

  objc_msgSend(v7, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  return v7;
}

void sub_255AB4C14()
{
  v36.receiver = v0;
  v36.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v36, sel_layoutSubviews);
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds];
  CGFloat v2 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds];
  CGFloat v3 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds + 8];
  CGFloat v4 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds + 16];
  CGFloat v5 = *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds + 24];
  objc_msgSend(v0, sel_bounds);
  v40.origin.x = v6;
  v40.origin.y = v7;
  v40.size.width = v8;
  v40.size.height = v9;
  v39.origin.x = v2;
  v39.origin.y = v3;
  v39.size.width = v4;
  v39.size.height = v5;
  BOOL v10 = CGRectEqualToRect(v39, v40);
  objc_msgSend(v0, sel_bounds);
  *(void *)uint64_t v1 = v11;
  *((void *)v1 + 1) = v12;
  *((void *)v1 + 2) = v13;
  *((void *)v1 + 3) = v14;
  int v15 = v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenContentWidthOverflows];
  uint64_t v16 = OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows;
  int v17 = v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows];
  v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenContentWidthOverflows] = v17;
  double v18 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView];
  if (v18)
  {
    id v19 = v18;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v19, sel_setFrame_, UIEdgeInsetsInsetRect(v20, v21, v22, v23, *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets], *(double *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets + 8]));
  }
  sub_255AB4DF8(v0[v16]);
  if (!v10 || v15 != v17)
  {
    uint64_t v25 = OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView;
    id v26 = *(void **)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView];
    if (v26)
    {
      id v27 = v26;
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v27, sel_setFrame_);

      uint64_t v28 = *(void **)&v0[v25];
      if (v28)
      {
        char v29 = v0[v16];
        id v30 = v28;
        if (v29)
        {
          id v31 = 0;
        }
        else
        {
          objc_msgSend(v0, sel_bounds);
          v37[0] = v32;
          v37[1] = v33;
          v37[2] = v34;
          v37[3] = v35;
          char v38 = 0;
          id v31 = sub_255AB5A5C((uint64_t)v37);
        }
        objc_msgSend(v30, sel_setEffect_, v31);
      }
    }
  }
}

void sub_255AB4DF8(char a1)
{
  CGFloat v2 = v1;
  id v4 = objc_msgSend(v2, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_userInterfaceStyle);

  if (v5 == (id)2)
  {
    id v6 = objc_msgSend(self, sel_blackColor);
    id v29 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.8);
  }
  else
  {
    id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.901960784, 0.901960784, 0.901960784, 0.8);
  }
  CGFloat v7 = self;
  objc_msgSend(v7, sel_begin);
  objc_msgSend(v7, sel_setDisableActions_, 1);
  uint64_t v9 = OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer;
  BOOL v10 = *(void **)&v2[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer];
  if (v10)
  {
    LODWORD(v8) = 1.0;
    if (a1) {
      *(float *)&double v8 = 0.0;
    }
    objc_msgSend(v10, sel_setOpacity_, v8, v29);
    uint64_t v11 = *(void **)&v2[v9];
    if (v11)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_255C84C00;
      id v13 = v11;
      id v14 = objc_msgSend(v29, sel_colorWithAlphaComponent_, 0.0);
      id v15 = objc_msgSend(v14, sel_CGColor);

      type metadata accessor for CGColor(0);
      uint64_t v17 = v16;
      *(void *)(v12 + 56) = v16;
      *(void *)(v12 + 32) = v15;
      id v18 = objc_msgSend(v29, sel_CGColor);
      *(void *)(v12 + 88) = v17;
      *(void *)(v12 + 64) = v18;
      id v19 = objc_msgSend(v29, sel_CGColor);
      *(void *)(v12 + 120) = v17;
      *(void *)(v12 + 96) = v19;
      double v20 = (void *)sub_255C807E8();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setColors_, v20);

      double v21 = *(void **)&v2[v9];
      if (v21)
      {
        id v22 = v21;
        objc_msgSend(v2, sel_bounds);
        objc_msgSend(v22, sel_setFrame_);
      }
    }
  }
  double v23 = *(void **)&v2[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView];
  if (v23)
  {
    uint64_t v24 = *(void **)&v2[v9];
    if (v24)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F180);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_255C8A4D0;
      sub_255A43740(0, &qword_26B29F148);
      id v26 = v23;
      id v27 = v24;
      *(void *)(v25 + 32) = sub_255C80DB8();
      objc_msgSend(v26, sel_frame);
      CGRectGetHeight(v33);
      objc_msgSend(v2, sel_bounds);
      *(void *)(v25 + 40) = sub_255C7D768();
      *(void *)(v25 + 48) = sub_255C80DB8();
      uint64_t v31 = v25;
      sub_255C80818();
      uint64_t v28 = (void *)sub_255C807E8();
      swift_bridgeObjectRelease();
      objc_msgSend(v27, sel_setLocations_, v28);
    }
  }
  objc_msgSend(v7, sel_commit, v29, v31);
}

void sub_255AB51F0(void *a1, double a2, double a3, double a4, double a5)
{
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_255C855F0;
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_blackColor);
  id v14 = objc_msgSend(v13, sel_colorWithAlphaComponent_, 0.0);

  id v15 = objc_msgSend(v14, sel_CGColor);
  type metadata accessor for CGColor(0);
  uint64_t v17 = v16;
  *(void *)(v11 + 56) = v16;
  *(void *)(v11 + 32) = v15;
  id v18 = objc_msgSend(v12, sel_blackColor);
  id v19 = objc_msgSend(v18, sel_CGColor);

  *(void *)(v11 + 88) = v17;
  *(void *)(v11 + 64) = v19;
  double v20 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setColors_, v20);

  objc_msgSend(v10, sel_setStartPoint_, 0.5, 1.0);
  objc_msgSend(v10, sel_setStartPoint_, 0.5, 0.0);
  objc_msgSend(v10, sel_setFrame_, a2, a3, a4, a5);
  id v21 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v10, sel_renderInContext_, v21);
}

void sub_255AB5414(uint64_t a1, void *a2)
{
  CGFloat v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

id sub_255AB5490()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MiniPlayerContainerView()
{
  return self;
}

void sub_255AB5548()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F180);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_255C8A4E0;
  *(void *)(v2 + 32) = objc_msgSend(self, sel_effectWithStyle_, 10);
  *(void *)(v2 + 40) = objc_msgSend(self, sel_colorEffectSaturate_, 1.6);
  sub_255C80818();
  sub_255A43740(0, (unint64_t *)&unk_26B298670);
  id v3 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setBackgroundEffects_, v3, v2);

  id v4 = objc_msgSend(v1, sel_contentView);
  id v5 = objc_allocWithZone(MEMORY[0x263F825C8]);
  uint64_t v12 = sub_255AB5878;
  uint64_t v13 = 0;
  *(void *)&long long v10 = MEMORY[0x263EF8330];
  *((void *)&v10 + 1) = 1107296256;
  *(void *)&long long v11 = sub_255AB5928;
  *((void *)&v11 + 1) = &block_descriptor_8;
  id v6 = _Block_copy(&v10);
  id v7 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
  _Block_release(v6);
  swift_release();
  objc_msgSend(v4, sel_setBackgroundColor_, v7);

  if (qword_26B29D498 != -1) {
    swift_once();
  }
  *(void *)&long long v10 = qword_26B29D478;
  *((void *)&v10 + 1) = byte_26B29D480;
  *(void *)&long long v11 = qword_26B29D488;
  UIView.corner.setter((uint64_t)&v10);
  if (qword_26B29D840 != -1) {
    swift_once();
  }
  long long v10 = xmmword_26B2AA588;
  long long v11 = *(_OWORD *)algn_26B2AA598;
  uint64_t v12 = (id (*)(void *))qword_26B2AA5A8;
  id v8 = (id)xmmword_26B2AA588;
  sub_255AA498C((uint64_t)&v10);
  id v9 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v9, sel_setShadowPathIsBounds_, 1);
}

double sub_255AB5804()
{
  *(void *)&xmmword_26B2AA588 = objc_msgSend(self, sel_blackColor);
  double result = 0.15;
  *(long long *)((char *)&xmmword_26B2AA588 + 8) = xmmword_255C8A4F0;
  qword_26B2AA5A0 = 0;
  qword_26B2AA5A8 = 0;
  return result;
}

void sub_255AB5854()
{
  qword_26B29D478 = 0x402C000000000000;
  byte_26B29D480 = 1;
  qword_26B29D488 = 15;
}

id sub_255AB5878(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  id v2 = objc_allocWithZone(MEMORY[0x263F825C8]);
  if (v1 == (id)2)
  {
    id v5 = sel_initWithRed_green_blue_alpha_;
    double v6 = 0.133333333;
    double v3 = 0.145098039;
    double v4 = 0.6;
    double v7 = 0.133333333;
  }
  else
  {
    id v5 = sel_initWithWhite_alpha_;
    double v7 = 0.6;
    double v6 = 1.0;
  }
  return objc_msgSend(v2, v5, v6, v7, v3, v4);
}

id sub_255AB5928(uint64_t a1, void *a2)
{
  double v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  id v5 = (void *)v3();
  swift_release();

  return v5;
}

void sub_255AB5990()
{
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_backgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_gradientLayer] = 0;
  id v1 = &v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentInsets];
  long long v2 = *(_OWORD *)(MEMORY[0x263F834E8] + 16);
  *id v1 = *MEMORY[0x263F834E8];
  v1[1] = v2;
  *(void *)&v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentView] = 0;
  v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_contentViewWidthOverflows] = 0;
  double v3 = &v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenBounds];
  *double v3 = 0u;
  v3[1] = 0u;
  v0[OBJC_IVAR____TtC11MediaCoreUI23MiniPlayerContainerView_lastSeenContentWidthOverflows] = 0;

  sub_255C81248();
  __break(1u);
}

id sub_255AB5A5C(uint64_t a1)
{
  sub_255AA4870(a1, (uint64_t)&v19);
  if (v20) {
    return objc_msgSend(self, sel_effectWithBlurRadius_, 18.0);
  }
  CGFloat x = v19.origin.x;
  CGFloat y = v19.origin.y;
  CGFloat width = v19.size.width;
  CGFloat height = v19.size.height;
  if (CGRectIsEmpty(v19)) {
    return objc_msgSend(self, sel_effectWithBlurRadius_, 18.0);
  }
  v21.origin.CGFloat x = x;
  v21.origin.CGFloat y = y;
  v21.size.CGFloat width = width;
  v21.size.CGFloat height = height;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_, 1.0, CGRectGetHeight(v21));
  double v7 = (CGFloat *)swift_allocObject();
  v7[2] = x;
  v7[3] = y;
  v7[4] = width;
  v7[5] = height;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_255AB5CF0;
  *(void *)(v8 + 24) = v7;
  aBlock[4] = sub_255AB5D0C;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255AB5414;
  aBlock[3] = &block_descriptor_6;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v10 = objc_msgSend(v6, sel_imageWithActions_, v9);
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  id result = (id)swift_release();
  if ((v9 & 1) == 0)
  {
    objc_msgSend(v10, sel_size);
    double v13 = v12;
    double v15 = v14;
    uint64_t v16 = self;
    if (v13 == 0.0 && v15 == 0.0) {
      id v17 = objc_msgSend(v16, sel_effectWithBlurRadius_, 18.0);
    }
    else {
      id v17 = objc_msgSend(v16, sel_effectWithVariableBlurRadius_imageMask_, v10, 18.0);
    }
    id v5 = v17;
    swift_release();

    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_255AB5CE0()
{
  return swift_deallocObject();
}

void sub_255AB5CF0(void *a1)
{
  sub_255AB51F0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_255AB5CFC()
{
  return swift_deallocObject();
}

uint64_t sub_255AB5D0C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_255AB5D34()
{
  sub_255AB8CBC();

  return sub_255C7E8C8();
}

uint64_t sub_255AB5D7C()
{
  sub_255AB8AE8();

  return sub_255C7E8C8();
}

uint64_t (*sub_255AB5DC4())(uint64_t a1, char a2)
{
  sub_255A8B330();
  sub_255C7E8C8();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_255AB8B74;
}

uint64_t sub_255AB5E30(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, char *))
{
  char v4 = a2;
  return a3(a1, &v4);
}

MediaCoreUI::NowPlayingHostedContentID __swiftcall NowPlayingHostedContentID.init(_:)(MediaCoreUI::NowPlayingHostedContentID result)
{
  *long long v1 = result;
  return result;
}

uint64_t NowPlayingHostedContentID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_255C806B8();

  return swift_bridgeObjectRelease();
}

uint64_t static NowPlayingHostedContentID.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_255C81428();
  }
}

uint64_t NowPlayingHostedContentID.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t sub_255AB5F54()
{
  return sub_255C815B8();
}

uint64_t sub_255AB5FB0()
{
  swift_bridgeObjectRetain();
  sub_255C806B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255AB6008()
{
  return sub_255C815B8();
}

uint64_t sub_255AB6060(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_255C81428();
  }
}

uint64_t ContentLookupItem<>.init(_:hostedContent:)@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a1[1];
  *a3 = *a1;
  a3[1] = v4;
  sub_255AB6114();
  uint64_t v5 = type metadata accessor for ContentLookupItem();
  return a2(v5, v6, v7, v8);
}

unint64_t sub_255AB6114()
{
  unint64_t result = qword_269F230D8;
  if (!qword_269F230D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F230D8);
  }
  return result;
}

double ContentLookupItem<>.init<A>(_:viewController:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  sub_255B5DF1C(a2, a3, (uint64_t)v17);
  v14[0] = v17[0];
  v14[1] = v17[1];
  v14[2] = v17[2];
  char v15 = v18;
  long long v16 = v19;
  uint64_t v7 = type metadata accessor for NowPlayingHostedViewControllerRepresentable();
  swift_getWitnessTable();
  sub_255B5DFB8((uint64_t)v14, v7, (uint64_t)v20);
  *(void *)a4 = v5;
  *(void *)(a4 + 8) = v6;
  long long v8 = v26;
  long long v9 = v28;
  *(_OWORD *)(a4 + 144) = v27;
  *(_OWORD *)(a4 + 160) = v9;
  *(void *)(a4 + 176) = v29;
  long long v10 = v22;
  long long v11 = v24;
  *(_OWORD *)(a4 + 80) = v23;
  *(_OWORD *)(a4 + 96) = v11;
  *(_OWORD *)(a4 + 112) = v25;
  *(_OWORD *)(a4 + 128) = v8;
  long long v12 = v20[1];
  *(_OWORD *)(a4 + 16) = v20[0];
  *(_OWORD *)(a4 + 32) = v12;
  double result = *(double *)&v21;
  *(_OWORD *)(a4 + 48) = v21;
  *(_OWORD *)(a4 + 64) = v10;
  return result;
}

unint64_t sub_255AB6280()
{
  unint64_t result = qword_26B2982C0;
  if (!qword_26B2982C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2982C0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for NowPlayingButtonID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for NowPlayingButtonID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for NowPlayingButtonID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingHostedContentID()
{
  return &type metadata for NowPlayingHostedContentID;
}

uint64_t sub_255AB638C()
{
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  swift_beginAccess();
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_255C805F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = (void *)sub_255C805F8();
  objc_msgSend(v1, sel_setValue_forKey_, v2, v3);

  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_255C7D9F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_255AB64C8@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255AB6510()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();

  return swift_release();
}

void *sub_255AB658C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2984E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0;
  v0[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298490);
  swift_allocObject();
  v0[4] = sub_255C7DA08();
  uint64_t v6 = (char *)v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel13HostedContent__activeTransition;
  long long v13 = xmmword_255C8A520;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B298168);
  sub_255C7DA88();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  swift_weakInit();
  swift_weakAssign();
  id v7 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v8 = sub_255AB6740();
  uint64_t v10 = v9;

  if (v10) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = 0;
  }
  *(void *)&long long v13 = v11;
  *((void *)&v13 + 1) = v10;
  sub_255AB6824((uint64_t *)&v13, 0);
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_255AB6740()
{
  uint64_t v1 = (void *)sub_255C805F8();
  id v2 = objc_msgSend(v0, sel_stringForKey_, v1);

  if (!v2)
  {
    uint64_t v3 = (void *)sub_255C805F8();
    id v2 = objc_msgSend(v0, sel_stringForKey_, v3);

    if (!v2) {
      return 0;
    }
  }
  uint64_t v4 = sub_255C80628();

  return v4;
}

uint64_t sub_255AB6824(uint64_t *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985E0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_255C803B8();
  uint64_t v84 = *(void *)(v9 - 8);
  uint64_t v85 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v82 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_255C803E8();
  uint64_t v81 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v80 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_255C803A8();
  uint64_t v77 = *(void *)(v78 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v78);
  uint64_t v76 = (uint64_t *)((char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v75 = (uint64_t *)((char *)&v72 - v14);
  uint64_t v15 = sub_255C80408();
  uint64_t v79 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v86 = (char *)&v72 - v19;
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  if (qword_26B29B3F0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_255C7D898();
  __swift_project_value_buffer(v22, (uint64_t)qword_26B2AA4E8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  long long v23 = sub_255C7D878();
  os_log_type_t v24 = sub_255C80C08();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v74 = (uint64_t)v18;
    uint64_t v87 = v15;
    uint64_t v88 = v8;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t aBlock = v26;
    *(_DWORD *)uint64_t v25 = 136446722;
    swift_beginAccess();
    unint64_t v27 = *(void *)(v3 + 24);
    int v73 = a2;
    uint64_t v72 = v26;
    if (v27)
    {
      uint64_t v28 = *(void *)(v3 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v28 = 7104878;
      unint64_t v27 = 0xE300000000000000;
    }
    uint64_t v96 = sub_255A7BEC4(v28, v27, &aBlock);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    if (v20) {
      uint64_t v35 = v21;
    }
    else {
      uint64_t v35 = 7104878;
    }
    if (v20) {
      unint64_t v36 = v20;
    }
    else {
      unint64_t v36 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_255A7BEC4(v35, v36, &aBlock);
    sub_255C80F18();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 1024;
    char v37 = v73;
    LODWORD(v96) = v73 & 1;
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v23, v24, "Selected content changing from %{public}s to %{public}s, animated=%{BOOL}d", (uint8_t *)v25, 0x1Cu);
    uint64_t v38 = v72;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v38, -1, -1);
    MEMORY[0x25A297C00](v25, -1, -1);

    uint64_t v15 = v87;
    uint64_t v8 = v88;
    char v18 = (char *)v74;
    if (v37)
    {
LABEL_18:
      uint64_t result = swift_beginAccess();
      uint64_t v40 = *(void *)(v3 + 24);
      if (v40)
      {
        if (v20)
        {
          uint64_t result = *(void *)(v3 + 16);
          if (result == v21 && v40 == v20) {
            return result;
          }
          uint64_t result = sub_255C81428();
          if (result) {
            return result;
          }
          goto LABEL_34;
        }
        swift_bridgeObjectRetain();
      }
      else if (!v20)
      {
        return result;
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_255C7DAC8();
      swift_release();
      swift_release();
      uint64_t v50 = v91;
      uint64_t result = sub_255A8AFD4(aBlock, v91);
      if (v50 == 1)
      {
        uint64_t v88 = v8;
        uint64_t v52 = *(void *)(v3 + 16);
        uint64_t v51 = *(void *)(v3 + 24);
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t aBlock = v52;
        uint64_t v91 = v51;
        uint64_t v92 = (uint64_t (*)(uint64_t))v21;
        uint64_t v93 = (void *)v20;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_255C7DAD8();
        sub_255A6C3AC();
        uint64_t v74 = sub_255C80C88();
        sub_255C803F8();
        uint64_t v53 = v75;
        *uint64_t v75 = 600;
        uint64_t v54 = v77;
        uint64_t v55 = v78;
        (*(void (**)(void *, void, uint64_t))(v77 + 104))(v53, *MEMORY[0x263F8F000], v78);
        long long v56 = v76;
        sub_255B9A060(v76);
        uint64_t v57 = v21;
        long long v58 = *(void (**)(void *, uint64_t))(v54 + 8);
        v58(v53, v55);
        MEMORY[0x25A295C90](v18, v56);
        v58(v56, v55);
        uint64_t v59 = v57;
        uint64_t v79 = *(void *)(v79 + 8);
        ((void (*)(char *, uint64_t))v79)(v18, v15);
        uint64_t v60 = (void *)swift_allocObject();
        v60[2] = v3;
        v60[3] = v57;
        v60[4] = v20;
        uint64_t v94 = sub_255AB8C90;
        uint64_t v95 = v60;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v91 = 1107296256;
        uint64_t v92 = sub_255AE4914;
        uint64_t v93 = &block_descriptor_9;
        uint64_t v61 = _Block_copy(&aBlock);
        swift_retain();
        swift_bridgeObjectRetain();
        long long v62 = v80;
        sub_255C803D8();
        uint64_t v89 = MEMORY[0x263F8EE78];
        sub_255AB8E14((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
        uint64_t v87 = v15;
        long long v63 = v62;
        sub_255A09998((unint64_t *)&qword_26B29FC50, &qword_26B29F390);
        long long v64 = v82;
        uint64_t v65 = v85;
        sub_255C80F78();
        __n128 v66 = v86;
        uint64_t v67 = (void *)v74;
        MEMORY[0x25A2964E0](v86, v63, v64, v61);
        _Block_release(v61);

        (*(void (**)(char *, uint64_t))(v84 + 8))(v64, v65);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v63, v83);
        ((void (*)(char *, uint64_t))v79)(v66, v87);
        uint64_t v68 = swift_release();
        if (qword_269F1FE68 != -1) {
          uint64_t v68 = swift_once();
        }
        MEMORY[0x270FA5388](v68);
        *(&v72 - 4) = v3;
        *(&v72 - 3) = v59;
        *(&v72 - 2) = v20;
        uint64_t v69 = sub_255C7F018();
        uint64_t v70 = (uint64_t)v88;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v88, 1, 1, v69);
        uint64_t v71 = swift_retain();
        sub_255A7D9C0(v71, 1, v70, 0);
        sub_255A095A4(v70, &qword_26B2985E0);
        sub_255C7E4A8();
        swift_release();
        return swift_release();
      }
      return result;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    if (a2) {
      goto LABEL_18;
    }
  }
  uint64_t v29 = qword_269F332D0;
  if (qword_269F332D0)
  {
    uint64_t v30 = MEMORY[0x25A297D40](qword_269F332D0 + 32);
    if (v30)
    {
      uint64_t v31 = (void *)v30;
      uint64_t v32 = *(void *)(v29 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 24);
      swift_retain();
      v34(ObjectType, v32);
    }
    else
    {
      swift_retain();
    }
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v41 = *(void *)(result + 96);
    swift_retain();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v43 = swift_getKeyPath();
    sub_255BD03B0(0, v41, KeyPath, v43);
    swift_beginAccess();
    uint64_t v45 = *(void *)(v3 + 16);
    uint64_t v44 = *(void *)(v3 + 24);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_255BD053C(v21, v20, v3);
    uint64_t v96 = v45;
    uint64_t v97 = v44;
    sub_255AB638C();
    uint64_t result = swift_bridgeObjectRelease();
    if (v29)
    {
      uint64_t v46 = MEMORY[0x25A297D40](v29 + 32);
      if (v46)
      {
        uint64_t v47 = (void *)v46;
        uint64_t v48 = *(void *)(v29 + 40);
        uint64_t v49 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v48 + 16))(v49, v48);
      }
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AB7414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t result = sub_255C7DAD8();
  if (a3)
  {
    uint64_t v5 = qword_269F332D0;
    if (qword_269F332D0)
    {
      uint64_t result = MEMORY[0x25A297D40](qword_269F332D0 + 32);
      if (result)
      {
        uint64_t v6 = (void *)result;
        uint64_t v7 = *(void *)(v5 + 40);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
        swift_retain();
        v9(ObjectType, v7);

        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_255AB74F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = qword_269F332D0;
  if (qword_269F332D0)
  {
    uint64_t v7 = MEMORY[0x25A297D40](qword_269F332D0 + 32);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t v9 = *(void *)(v6 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 24);
      swift_retain();
      v11(ObjectType, v9);
    }
    else
    {
      swift_retain();
    }
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = *(void *)(result + 96);
    swift_retain();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v15 = swift_getKeyPath();
    sub_255BD03B0(0, v13, KeyPath, v15);
    swift_beginAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_255BD053C(a2, a3, a1);
    sub_255AB638C();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AB7694()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC11MediaCoreUI19NowPlayingViewModel13HostedContent__activeTransition;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2984E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_255AB7758()
{
  return _s13HostedContentCMa();
}

uint64_t _s13HostedContentCMa()
{
  uint64_t result = qword_26B298188;
  if (!qword_26B298188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255AB77AC()
{
  sub_255AB785C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_255AB785C()
{
  if (!qword_26B2984E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298168);
    unint64_t v0 = sub_255C7DAE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2984E8);
    }
  }
}

void *_s13HostedContentC10TransitionVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13HostedContentC10TransitionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s13HostedContentC10TransitionVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13HostedContentC10TransitionVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13HostedContentC10TransitionVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s13HostedContentC10TransitionVMa()
{
  return &_s13HostedContentC10TransitionVN;
}

uint64_t sub_255AB7A70@<X0>(uint64_t *a1@<X8>)
{
  _s13HostedContentCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255AB7AB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F230E8);
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x270FA5388](v2);
  int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F230F0);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = v1[1];
  long long v29 = *v1;
  long long v30 = v8;
  long long v10 = *v1;
  long long v9 = v1[1];
  *(_OWORD *)uint64_t v31 = v1[2];
  *(_DWORD *)&v31[15] = *(_DWORD *)((char *)v1 + 47);
  long long v26 = v10;
  long long v27 = v9;
  v28[0] = v1[2];
  *(_DWORD *)((char *)v28 + 15) = *(_DWORD *)((char *)v1 + 47);
  sub_255AB91A8((uint64_t)&v29);
  int v11 = sub_255AB8178();
  if (v11)
  {
    if (v11 != 1) {
      goto LABEL_9;
    }
  }
  else if ((v31[18] & 1) == 0)
  {
    sub_255C80228();
    goto LABEL_9;
  }
  if (qword_269F1FE60 != -1) {
    swift_once();
  }
  swift_retain();
LABEL_9:
  uint64_t v12 = sub_255AB91EC((uint64_t)&v29);
  MEMORY[0x270FA5388](v12);
  *(&v20 - 2) = (uint64_t)&v29;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F230F8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23100);
  uint64_t v15 = sub_255A09998(&qword_269F23108, &qword_269F230F8);
  unint64_t v16 = sub_255AB9238();
  sub_255C7FB58();
  swift_release();
  long long v26 = v29;
  long long v27 = v30;
  v28[0] = *(_OWORD *)v31;
  *(_DWORD *)((char *)v28 + 15) = *(_DWORD *)&v31[15];
  sub_255AB91A8((uint64_t)&v29);
  if (sub_255AB8178() < 2u)
  {
    sub_255C80228();
    sub_255C80258();
    swift_release();
  }
  uint64_t v17 = sub_255AB91EC((uint64_t)&v29);
  MEMORY[0x270FA5388](v17);
  *(&v20 - 2) = (uint64_t)&v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23138);
  *(void *)&long long v26 = v13;
  *((void *)&v26 + 1) = v14;
  *(void *)&long long v27 = v15;
  *((void *)&v27 + 1) = v16;
  swift_getOpaqueTypeConformance2();
  sub_255AB935C();
  uint64_t v18 = v24;
  sub_255C7FB58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v18);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v25, v7, v22);
}

uint64_t sub_255AB7F48@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23120);
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23100);
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *((unsigned char *)a2 + 49);
  if ((v12 & 1) != 0
    && (long long v13 = a2[1],
        long long v25 = *a2,
        long long v26 = v13,
        v27[0] = a2[2],
        *(_DWORD *)((char *)v27 + 15) = *(_DWORD *)((char *)a2 + 47),
        !sub_255AB8178()))
  {
    double v14 = 0.9;
  }
  else
  {
    double v14 = 1.0;
  }
  sub_255C80378();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23130);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, a1, v19);
  uint64_t v20 = (double *)&v8[*(int *)(v6 + 36)];
  *uint64_t v20 = v14;
  v20[1] = v14;
  *((void *)v20 + 2) = v16;
  *((void *)v20 + 3) = v18;
  double v21 = 0.0;
  if (v12)
  {
    long long v22 = a2[1];
    long long v25 = *a2;
    long long v26 = v22;
    v27[0] = a2[2];
    *(_DWORD *)((char *)v27 + 15) = *(_DWORD *)((char *)a2 + 47);
    if (sub_255AB8178() == 1)
    {
      if (*((unsigned char *)a2 + 50)) {
        double v21 = 0.95;
      }
      else {
        double v21 = 0.99;
      }
    }
  }
  sub_255AB93FC((uint64_t)v8, (uint64_t)v11);
  uint64_t v23 = &v11[*(int *)(v9 + 36)];
  *(void *)uint64_t v23 = 0;
  *((double *)v23 + 1) = v21;
  sub_255A095A4((uint64_t)v8, &qword_269F23120);
  return sub_255A10514((uint64_t)v11, a3, &qword_269F23100);
}

uint64_t sub_255AB8178()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  char v6 = *(unsigned char *)(v0 + 48);
  uint64_t v22 = v1;
  uint64_t v23 = v2;
  uint64_t v24 = v3;
  uint64_t v25 = v4;
  char v26 = v5;
  sub_255AB8EBC(v1, v2, v3, v4, v5);
  sub_255ABB854((uint64_t)&v19);
  sub_255AB8EB0(v1, v2, v3, v4, v5);
  uint64_t v7 = v20;
  if (v20 == 1) {
    return 2;
  }
  uint64_t v9 = v19;
  uint64_t v10 = v21;
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_255ABBAC4(v11, v6);
  swift_release();
  swift_getKeyPath();
  uint64_t v19 = v12;
  sub_255AB8E14((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  uint64_t v13 = *(void *)(v12 + 32);
  swift_release();
  if ((v13 & 0xFF0000) == 0x40000)
  {
    __break(1u);
    JUMPOUT(0x255AB83C0);
  }
  switch(BYTE2(v13))
  {
    case 1:
    case 3:
      uint64_t v14 = v9;
      uint64_t v15 = v7;
      goto LABEL_6;
    case 2:
      sub_255A8AFD4(v9, v7);
      uint64_t v16 = swift_retain();
      uint64_t v17 = sub_255ABBAC4(v16, v6);
      swift_release();
      swift_getKeyPath();
      uint64_t v19 = v17;
      sub_255C7D718();
      swift_release();
      char v18 = *(unsigned char *)(v17 + 136);
      swift_release();
      if (v18) {
        return 2;
      }
      return 0;
    default:
      uint64_t v14 = v9;
      if (!v7)
      {
        uint64_t v15 = 0;
LABEL_6:
        sub_255A8AFD4(v14, v15);
        return 1;
      }
      sub_255A8AFD4(v9, v7);
      return !v10;
  }
}

uint64_t sub_255AB83D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23138);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a2 + 49)) {
    double v10 = 0.0;
  }
  else {
    double v10 = 1.0;
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23150);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, a1, v11);
  *(double *)&v9[*(int *)(v7 + 44)] = v10;
  return sub_255A10514((uint64_t)v9, a3, &qword_269F23138);
}

uint64_t sub_255AB84D4()
{
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for WindowProperties();
  sub_255AB8E14((unint64_t *)&qword_26B298EB0, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7DD58();
  uint64_t v1 = swift_getKeyPath();
  sub_255C7DD58();
  sub_255AB8E5C();
  sub_255C7E068();
  sub_255AB8EB0(v1, 0, 0, 0, 0);
  swift_release();
  sub_255AB8EB0(KeyPath, 0, 0, 0, 0);
  swift_release();
  uint64_t v2 = swift_getKeyPath();
  sub_255C7DD58();
  uint64_t v5 = swift_getKeyPath();
  sub_255C7DD58();
  sub_255C7E068();
  sub_255AB8EB0(v5, 0, 0, 0, 0);
  swift_release();
  sub_255AB8EB0(v2, 0, 0, 0, 0);
  swift_release();
  uint64_t v3 = sub_255C7E008();
  swift_release();
  swift_release();
  return v3;
}

void sub_255AB872C(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_255AB8734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_255AB8D40(&qword_26B2982D0, &qword_26B2982C8, (void (*)(void))sub_255AB6280);

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

double sub_255AB87BC@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_255C8A520;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_255AB87D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_255AB8D40((unint64_t *)&qword_26B298170, &qword_26B298168, (void (*)(void))sub_255AB8DB8);

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

void sub_255AB8858(void *a1@<X8>)
{
  *a1 = CGSizeMake;
  a1[1] = 0;
}

uint64_t sub_255AB8870(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_255BD053C(v2, v3, v4);
  sub_255AB638C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_255AB8934@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 58);
  return result;
}

uint64_t sub_255AB897C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  swift_retain();

  return sub_255BD03B0(v2, v3, KeyPath, v5);
}

uint64_t sub_255AB89F0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  if (v3)
  {
    if (!v5)
    {
LABEL_19:
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    if (*a1 != *a2 || v3 != v5)
    {
      char v9 = sub_255C81428();
      uint64_t result = 0;
      if ((v9 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v5)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v4)
  {
    if (!v7) {
      return 1;
    }
    goto LABEL_20;
  }
  if (!v7) {
    goto LABEL_19;
  }
  if (v2 == v6 && v4 == v7) {
    return 1;
  }
  char v11 = sub_255C81428();
  uint64_t result = 0;
  if (v11) {
    return 1;
  }
  return result;
}

unint64_t sub_255AB8AE8()
{
  unint64_t result = qword_26B298138;
  if (!qword_26B298138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298138);
  }
  return result;
}

uint64_t sub_255AB8B3C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255AB8B74(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  char v5 = a2;
  return v3(a1, &v5);
}

uint64_t sub_255AB8BB4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 58);
  return result;
}

uint64_t sub_255AB8C00@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255AB8C50()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AB8C90()
{
  return sub_255AB7414(v0[2], v0[3], v0[4]);
}

uint64_t sub_255AB8C9C()
{
  return sub_255AB74F8(v0[2], v0[3], v0[4]);
}

unint64_t sub_255AB8CBC()
{
  unint64_t result = qword_26B2982E0;
  if (!qword_26B2982E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2982E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentActiveTransitionKey()
{
  return &type metadata for ContentActiveTransitionKey;
}

ValueMetadata *type metadata accessor for UpdateContentSelectionKey()
{
  return &type metadata for UpdateContentSelectionKey;
}

ValueMetadata *type metadata accessor for SelectedContentKey()
{
  return &type metadata for SelectedContentKey;
}

uint64_t sub_255AB8D40(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255AB8DB8()
{
  unint64_t result = qword_26B298160;
  if (!qword_26B298160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298160);
  }
  return result;
}

uint64_t sub_255AB8E14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255AB8E5C()
{
  unint64_t result = qword_269F230E0;
  if (!qword_269F230E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F230E0);
  }
  return result;
}

uint64_t sub_255AB8EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return sub_255A8AFD4(a1, a2);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_255AB8EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return sub_255A8B384(a1, a2);
  }
  else {
    return swift_retain();
  }
}

uint64_t destroy for HostedContentTransition(uint64_t a1)
{
  sub_255AB8EB0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  return swift_release();
}

uint64_t initializeWithCopy for HostedContentTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_255AB8EBC(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  char v9 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v9;
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HostedContentTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_255AB8EBC(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_255AB8EB0(v9, v10, v11, v12, v13);
  char v14 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v14;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  return a1;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HostedContentTransition(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 32) = v4;
  sub_255AB8EB0(v5, v6, v7, v8, v9);
  char v11 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v11;
  swift_release();
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for HostedContentTransition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 51)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HostedContentTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 51) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 51) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostedContentTransition()
{
  return &type metadata for HostedContentTransition;
}

uint64_t sub_255AB918C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AB91A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_255AB91EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_255AB9230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255AB7F48(a1, *(long long **)(v2 + 16), a2);
}

unint64_t sub_255AB9238()
{
  unint64_t result = qword_269F23110;
  if (!qword_269F23110)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23100);
    sub_255AB92B4();
    sub_255AA79F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23110);
  }
  return result;
}

unint64_t sub_255AB92B4()
{
  unint64_t result = qword_269F23118;
  if (!qword_269F23118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23120);
    sub_255A09998(&qword_269F23128, &qword_269F23130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23118);
  }
  return result;
}

uint64_t sub_255AB9354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255AB83D0(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_255AB935C()
{
  unint64_t result = qword_269F23140;
  if (!qword_269F23140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23138);
    sub_255A09998(&qword_269F23148, &qword_269F23150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23140);
  }
  return result;
}

uint64_t sub_255AB93FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AB9474()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AB9568(uint64_t a1, char a2)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_255C80BF8();
    char v9 = sub_255C7F148();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)char v11 = 136315138;
      uint64_t v14 = sub_255A7BEC4(0x726F6C6F43, 0xE500000000000000, &v15);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v12, -1, -1);
      MEMORY[0x25A297C00](v11, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_255AB9768(uint64_t a1, char a2)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_255C80BF8();
    char v9 = sub_255C7F148();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)char v11 = 136315138;
      uint64_t v14 = sub_255A7BEC4(0xD000000000000018, 0x8000000255C9D090, &v15);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v12, -1, -1);
      MEMORY[0x25A297C00](v11, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A087D0(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_255AB9974@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABA168(&qword_269F20CF0, MEMORY[0x263F19A00], 0xD000000000000013, 0x8000000255C9CE80, a1);
}

uint64_t sub_255AB99AC@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_255ABB134(a1, a2, (void (*)(uint64_t, void))sub_255A0877C, 0x7453726579616C50, 0xEB00000000656C79, (void (*)(void, void))sub_255A087D0, a3);
}

uint64_t sub_255AB99F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_255C7E8B8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)v1;
  if (*(unsigned char *)(v1 + 73) == 1)
  {
    char v9 = *(unsigned char *)(v1 + 72);
    char v10 = *(_DWORD *)(v1 + 32);
    uint64_t v12 = *(void *)(v1 + 16);
    uint64_t v11 = *(void *)(v1 + 24);
    uint64_t v13 = *(void *)(v1 + 8);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v13;
    *(unsigned char *)(a1 + 16) = v12 & 1;
    *(unsigned char *)(a1 + 17) = BYTE1(v12);
    *(unsigned char *)(a1 + 18) = BYTE2(v12);
    *(void *)(a1 + 24) = v11;
    *(unsigned char *)(a1 + 32) = v10 & 1;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
    *(unsigned char *)(a1 + 72) = v9 & 1;
  }
  else
  {
    sub_255A1D4DC(v1, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    os_log_type_t v14 = sub_255C80BF8();
    uint64_t v15 = sub_255C7F148();
    os_log_type_t v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v20[1] = v8;
      uint64_t v19 = v18;
      uint64_t v21 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      v20[0] = v17 + 4;
      _OWORD v20[2] = sub_255A7BEC4(0x654D656369766544, 0xED00007363697274, &v21);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v19, -1, -1);
      MEMORY[0x25A297C00](v17, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A1D4DC(v1, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_255AB9C8C(uint64_t a1, char a2)
{
  return sub_255ABC61C(a1, a2, 0xD00000000000001CLL, 0x8000000255C9D010, (void (*)(void, void))j__swift_release);
}

uint64_t sub_255AB9CBC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_255C80BF8();
    char v9 = sub_255C7F148();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_255A7BEC4(0xD000000000000015, 0x8000000255C9CFF0, &v15);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v12, -1, -1);
      MEMORY[0x25A297C00](v11, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A087D0(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_255AB9EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7E8B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) == 0)
  {
    swift_retain();
    os_log_type_t v10 = sub_255C80BF8();
    uint64_t v11 = sub_255C7F148();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v19 = v7;
      uint64_t v15 = v14;
      uint64_t v21 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v18 = v13 + 4;
      uint64_t v20 = sub_255A7BEC4(0xD000000000000042, 0x8000000255C9CFA0, &v21);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      uint64_t v16 = v15;
      uint64_t v7 = v19;
      MEMORY[0x25A297C00](v16, -1, -1);
      MEMORY[0x25A297C00](v13, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A31D88(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v21;
  }
  return a1;
}

uint64_t sub_255ABA0FC@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABAB84((uint64_t *)&unk_26B29EB20, &qword_26B29EE50, 0xD000000000000020, 0x8000000255C9CF50, a1);
}

uint64_t sub_255ABA128@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABA168(&qword_26B29B5A8, MEMORY[0x263F18DD8], 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_255ABA168@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_255C7E8B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A09540(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_255C80BF8();
    uint64_t v21 = sub_255C7F148();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v29 = sub_255A7BEC4(v28, v26, &v30);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v24, -1, -1);
      MEMORY[0x25A297C00](v23, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_255ABA420@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABDE28(&qword_26B29B580, (uint64_t (*)(void *, uint64_t))sub_255A524B4, 0xD00000000000001ALL, 0x8000000255C9CD90, a1);
}

uint64_t sub_255ABA458(uint64_t a1, char a2)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_255C80BF8();
    uint64_t v9 = sub_255C7F148();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_255A7BEC4(0xD000000000000015, 0x8000000255C9CE60, &v15);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v12, -1, -1);
      MEMORY[0x25A297C00](v11, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A525AC(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_255ABA66C@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABA168((uint64_t *)&unk_26B298500, MEMORY[0x263F19988], 0xD000000000000013, 0x8000000255C9CDE0, a1);
}

uint64_t sub_255ABA6A4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_255C80BF8();
  uint64_t v9 = sub_255C7F148();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_255A7BEC4(1819242306, 0xE400000000000000, &v15);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v12, -1, -1);
    MEMORY[0x25A297C00](v11, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  sub_255A087D0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_255ABA8A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A09540(v2, (uint64_t)v17, &qword_26B29B5B8);
  if (v18 == 1) {
    return sub_255A10514((uint64_t)v17, a1, (uint64_t *)&unk_26B29BF50);
  }
  os_log_type_t v9 = sub_255C80BF8();
  os_log_type_t v10 = sub_255C7F148();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v15[1] = a1;
    uint64_t v14 = v13;
    uint64_t v16 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    v15[2] = sub_255A7BEC4(0xD000000000000015, 0x8000000255C9D070, &v16);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v14, -1, -1);
    MEMORY[0x25A297C00](v12, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255ABAAE0@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABA168(&qword_269F22190, MEMORY[0x263F188C0], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_255ABAB20@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABA168(&qword_269F21EC0, MEMORY[0x263F18FD8], 0xD000000000000010, 0x8000000255C9CCB0, a1);
}

uint64_t sub_255ABAB58@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABAB84(&qword_269F21EC8, &qword_269F20AB0, 0xD000000000000012, 0x8000000255C9CC90, a1);
}

uint64_t sub_255ABAB84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_255C7E8B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A09540(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_255A10514((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = sub_255C80BF8();
  os_log_type_t v20 = sub_255C7F148();
  if (os_log_type_enabled(v20, v19))
  {
    unint64_t v25 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = a5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v28 = sub_255A7BEC4(v27, v25, &v29);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v23, -1, -1);
    MEMORY[0x25A297C00](v22, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_255ABAE0C@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABAB84(&qword_269F213A8, &qword_26B29F230, 0x6C616E6F6974704FLL, 0xED00003E4C52553CLL, a1);
}

uint64_t sub_255ABAE40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_255C7E8B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *a4 = a1;
    a4[1] = a2;
    return sub_255A7663C(a1, a2, 1);
  }
  else
  {
    sub_255A7663C(a1, a2, 0);
    os_log_type_t v12 = sub_255C80BF8();
    uint64_t v13 = sub_255C7F148();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = v9;
      uint64_t v17 = v16;
      uint64_t v23 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      os_log_type_t v20 = v15 + 4;
      uint64_t v22 = sub_255A7BEC4(0xD000000000000012, 0x8000000255C9CF30, &v23);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = v17;
      uint64_t v9 = v21;
      MEMORY[0x25A297C00](v18, -1, -1);
      MEMORY[0x25A297C00](v15, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A767C8(a1, a2, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_255ABB07C(uint64_t a1, char a2)
{
  return sub_255ABC61C(a1, a2, 0xD000000000000027, 0x8000000255C9D0D0, (void (*)(void, void))j__swift_release);
}

uint64_t sub_255ABB0AC@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_255ABD71C(a1, a2, (void (*)(uint64_t, void))sub_255A0877C, 0xD000000000000014, 0x8000000255C9D120, (void (*)(void, void))sub_255A087D0, a3);
}

uint64_t sub_255ABB0F0@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_255ABB134(a1, a2, (void (*)(uint64_t, void))sub_255AC0394, 0xD000000000000019, 0x8000000255C9D100, (void (*)(void, void))sub_255AC0398, a3);
}

uint64_t sub_255ABB134@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, void)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(void, void)@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v14 = sub_255C7E8B8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a7 = a1 & 1;
  }
  else
  {
    uint64_t v28 = a4;
    a3(a1, 0);
    os_log_type_t v19 = sub_255C80BF8();
    os_log_type_t v20 = sub_255C7F148();
    if (os_log_type_enabled(v20, v19))
    {
      v26[0] = a5;
      uint64_t v21 = swift_slowAlloc();
      v26[1] = (unint64_t)a7;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = a6;
      uint64_t v24 = v23;
      uint64_t v30 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v29 = sub_255A7BEC4(v28, v26[0], &v30);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v24;
      a6 = v27;
      MEMORY[0x25A297C00](v25, -1, -1);
      MEMORY[0x25A297C00](v22, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    a6(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

double sub_255ABB36C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_255C80BF8();
  uint64_t v9 = sub_255C7F148();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    double v15 = *(double *)&v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_255A7BEC4(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v12, -1, -1);
    MEMORY[0x25A297C00](v11, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  sub_255A087D0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_255ABB578@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_255ABD71C(a1, a2, (void (*)(uint64_t, void))sub_255A0877C, 0xD000000000000010, 0x8000000255C9CEA0, (void (*)(void, void))sub_255A087D0, a3);
}

uint64_t sub_255ABB5BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22EC0);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A09540(v2, (uint64_t)v10, &qword_269F22EC0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v10, v4);
  }
  os_log_type_t v12 = sub_255C80BF8();
  uint64_t v13 = sub_255C7F148();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    double v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)double v15 = 136315138;
    v18[2] = sub_255A7BEC4(0xD000000000000011, 0x8000000255C9CE00, &v19);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v17, -1, -1);
    MEMORY[0x25A297C00](v15, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255ABB854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_255C7E8B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    uint64_t v8 = *(void *)(v1 + 24);
    *(void *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(void *)(a1 + 24) = v8;
    return sub_255ABFD24(v1, (void (*)(void, void, void, void, void))sub_255AB8EBC);
  }
  else
  {
    sub_255ABFD24(v1, (void (*)(void, void, void, void, void))sub_255AB8EBC);
    os_log_type_t v10 = sub_255C80BF8();
    uint64_t v11 = sub_255C7F148();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v16[1] = v7;
      uint64_t v15 = v14;
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v16[0] = v13 + 4;
      v16[2] = sub_255A7BEC4(0xD000000000000014, 0x8000000255C9CCD0, &v17);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v15, -1, -1);
      MEMORY[0x25A297C00](v13, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255ABFC38(v1, (uint64_t (*)(void))sub_255A8AFD4);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_255ABBAC4(uint64_t a1, char a2)
{
  return sub_255ABD4D0(a1, a2, 0xD000000000000010, 0x8000000255C9D050);
}

uint64_t sub_255ABBAE0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_255C80BF8();
    uint64_t v9 = sub_255C7F148();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = sub_255A7BEC4(17481, 0xE200000000000000, &v15);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v12, -1, -1);
      MEMORY[0x25A297C00](v11, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A087D0(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_255ABBCDC@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_255ABD020(a1, a2, (void (*)(uint64_t, void))sub_255AC0394, 0x6E656D6563616C50, 0xE900000000000074, (void (*)(void, void))sub_255AC0398, a3);
}

uint64_t sub_255ABBD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_255C7E8B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *a4 = a1;
    a4[1] = a2;
    return sub_255A7663C(a1, a2, 1);
  }
  else
  {
    sub_255A7663C(a1, a2, 0);
    os_log_type_t v12 = sub_255C80BF8();
    uint64_t v13 = sub_255C7F148();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = v9;
      uint64_t v17 = v16;
      uint64_t v23 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      os_log_type_t v20 = v15 + 4;
      uint64_t v22 = sub_255A7BEC4(0xD000000000000023, 0x8000000255C9CDB0, &v23);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = v17;
      uint64_t v9 = v21;
      MEMORY[0x25A297C00](v18, -1, -1);
      MEMORY[0x25A297C00](v15, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A767C8(a1, a2, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_255ABBF5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = sub_255C7E8B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    os_log_type_t v9 = sub_255C80BF8();
    uint64_t v10 = sub_255C7F148();
    os_log_type_t v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v16 = v13;
      *(_DWORD *)os_log_type_t v12 = 136315138;
      v15[0] = v12 + 4;
      v15[1] = sub_255A7BEC4(0xD000000000000031, 0x8000000255C9CE20, &v16);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v13, -1, -1);
      MEMORY[0x25A297C00](v12, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255ABFD70();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v16;
  }
  return a1;
}

uint64_t sub_255ABC184@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABA168(&qword_26B29B598, MEMORY[0x263F18520], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_255ABC1C0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_255C80BF8();
  os_log_type_t v9 = sub_255C7F148();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)os_log_type_t v11 = 136315138;
    uint64_t v14 = sub_255A7BEC4(0xD000000000000041, 0x8000000255C9D140, &v15);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v12, -1, -1);
    MEMORY[0x25A297C00](v11, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  sub_255A087D0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_255ABC3D0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_255C7E8B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  os_log_type_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1;
  }
  else
  {
    sub_255A0877C(a1, 0);
    os_log_type_t v11 = sub_255C80BF8();
    uint64_t v12 = sub_255C7F148();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v17[1] = a3;
      uint64_t v16 = v15;
      uint64_t v18 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v17[2] = sub_255A7BEC4(0xD000000000000027, 0x8000000255C9CF00, &v18);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v16, -1, -1);
      MEMORY[0x25A297C00](v14, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A087D0(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_255ABC5EC(uint64_t a1, char a2)
{
  return sub_255ABC61C(a1, a2, 0xD000000000000017, 0x8000000255C9CF80, (void (*)(void, void))j_j__swift_release);
}

uint64_t sub_255ABC61C(uint64_t a1, char a2, uint64_t a3, unint64_t a4, void (*a5)(void, void))
{
  uint64_t v10 = sub_255C7E8B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v14 = sub_255C80BF8();
    uint64_t v15 = sub_255C7F148();
    if (os_log_type_enabled(v15, v14))
    {
      unint64_t v23 = a4;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = a5;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = a3;
      uint64_t v20 = v18;
      uint64_t v26 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v25 = sub_255A7BEC4(v19, v23, &v26);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v20, -1, -1);
      uint64_t v21 = v17;
      a5 = v24;
      MEMORY[0x25A297C00](v21, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    a5(a1, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v26;
  }
  return a1;
}

uint64_t sub_255ABC838@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABA168((uint64_t *)&unk_269F23E50, MEMORY[0x263F18D80], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_255ABC878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A09540(v2, (uint64_t)v10, &qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_255AC032C((uint64_t)v10, a1);
  }
  os_log_type_t v12 = sub_255C80BF8();
  os_log_type_t v13 = sub_255C7F148();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    v18[2] = sub_255A7BEC4(0xD000000000000012, 0x8000000255C9D0B0, &v19);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v17, -1, -1);
    MEMORY[0x25A297C00](v15, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255ABCB00@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABA168(&qword_26B29B588, MEMORY[0x263F18460], 0x616850656E656353, 0xEA00000000006573, a1);
}

double sub_255ABCB38()
{
  uint64_t v1 = sub_255C7E8B8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1) {
    return *(double *)v0;
  }
  swift_retain();
  os_log_type_t v6 = sub_255C80BF8();
  uint64_t v7 = sub_255C7F148();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    double v12 = *(double *)&v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    v11[0] = v9 + 4;
    v11[1] = sub_255A7BEC4(0x65736E4965676445, 0xEA00000000007374, (uint64_t *)&v12);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v10, -1, -1);
    MEMORY[0x25A297C00](v9, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  sub_255ABFD24((uint64_t)v0, (void (*)(void, void, void, void, void))sub_255ABFD64);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

uint64_t sub_255ABCD6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_255C7E8B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  if (*(unsigned char *)(v1 + 80) == 1)
  {
    uint64_t v8 = *(void *)(v1 + 40);
    *(void *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
    *(void *)(a1 + 40) = v8;
    long long v9 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    return sub_255ABFEB4(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
  }
  else
  {
    sub_255ABFEB4(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFE50);
    os_log_type_t v11 = sub_255C80BF8();
    double v12 = sub_255C7F148();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v17[1] = v7;
      uint64_t v16 = v15;
      uint64_t v18 = v15;
      *(_DWORD *)os_log_type_t v14 = 136315138;
      v17[0] = v14 + 4;
      v17[2] = sub_255A7BEC4(0x7363657053, 0xE500000000000000, &v18);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v16, -1, -1);
      MEMORY[0x25A297C00](v14, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255ABFEB4(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_255ABFF10);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_255ABCFE4@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_255ABD020(a1, a2, (void (*)(uint64_t, void))sub_255AC0394, 0x74756F79614CLL, 0xE600000000000000, (void (*)(void, void))sub_255AC0398, a3);
}

uint64_t sub_255ABD020@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, void)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(void, void)@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v14 = sub_255C7E8B8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a7 = a1;
  }
  else
  {
    uint64_t v28 = a4;
    a3(a1, 0);
    os_log_type_t v19 = sub_255C80BF8();
    uint64_t v20 = sub_255C7F148();
    if (os_log_type_enabled(v20, v19))
    {
      v26[0] = a5;
      uint64_t v21 = swift_slowAlloc();
      v26[1] = (unint64_t)a7;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = a6;
      uint64_t v24 = v23;
      uint64_t v30 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v29 = sub_255A7BEC4(v28, v26[0], &v30);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v24;
      a6 = v27;
      MEMORY[0x25A297C00](v25, -1, -1);
      MEMORY[0x25A297C00](v22, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    a6(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

void sub_255ABD254(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_255C7E8B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    *a5 = a1;
    a5[1] = a2;
    a5[2] = a3;
  }
  else
  {
    sub_255A322FC(a1, a2, a3, 0);
    os_log_type_t v14 = sub_255C80BF8();
    uint64_t v15 = sub_255C7F148();
    if (os_log_type_enabled(v15, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = a3;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v23 = a2;
      uint64_t v19 = v18;
      uint64_t v26 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      v22[1] = v17 + 4;
      uint64_t v25 = sub_255A7BEC4(0x676E6964646150, 0xE700000000000000, &v26);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      uint64_t v20 = v19;
      a2 = v23;
      MEMORY[0x25A297C00](v20, -1, -1);
      uint64_t v21 = v17;
      a3 = v24;
      MEMORY[0x25A297C00](v21, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A31D88(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_255ABD494(uint64_t a1, char a2)
{
  return sub_255ABD4D0(a1, a2, 0x78616C6C61726150, 0xEF747865746E6F43);
}

uint64_t sub_255ABD4B8(uint64_t a1, char a2)
{
  return sub_255ABD4D0(a1, a2, 0x7363697274654DLL, 0xE700000000000000);
}

uint64_t sub_255ABD4D0(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_255C7E8B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v12 = sub_255C80BF8();
    os_log_type_t v13 = sub_255C7F148();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      unint64_t v21 = a4;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = a3;
      uint64_t v18 = v16;
      uint64_t v23 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v22 = sub_255A7BEC4(v17, v21, &v23);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v18, -1, -1);
      MEMORY[0x25A297C00](v15, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v23;
  }
  return a1;
}

uint64_t sub_255ABD6D8@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_255ABD71C(a1, a2, (void (*)(uint64_t, void))sub_255AC0394, 0xD000000000000013, 0x8000000255C9D190, (void (*)(void, void))sub_255AC0398, a3);
}

uint64_t sub_255ABD71C@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, void)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(void, void)@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v14 = sub_255C7E8B8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a7 = a1;
  }
  else
  {
    uint64_t v28 = a4;
    a3(a1, 0);
    os_log_type_t v19 = sub_255C80BF8();
    uint64_t v20 = sub_255C7F148();
    if (os_log_type_enabled(v20, v19))
    {
      v26[0] = a5;
      uint64_t v21 = swift_slowAlloc();
      v26[1] = (unint64_t)a7;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = a6;
      uint64_t v24 = v23;
      uint64_t v30 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v29 = sub_255A7BEC4(v28, v26[0], &v30);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v24;
      a6 = v27;
      MEMORY[0x25A297C00](v25, -1, -1);
      MEMORY[0x25A297C00](v22, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    a6(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

uint64_t sub_255ABD950(uint64_t a1, char a2)
{
  return sub_255ABDBDC(a1, a2, 0xD000000000000013, 0x8000000255C9CD70);
}

uint64_t sub_255ABD96C()
{
  uint64_t v1 = sub_255C7E8B8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)v0;
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    sub_255ABFCD4(v5, *(void *)(v0 + 8));
  }
  else
  {
    swift_retain();
    os_log_type_t v6 = sub_255C80BF8();
    uint64_t v7 = sub_255C7F148();
    os_log_type_t v8 = v6;
    if (os_log_type_enabled(v7, v6))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v13 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      v12[0] = v9 + 4;
      v12[1] = sub_255A7BEC4(0xD000000000000043, 0x8000000255C9CD20, &v13);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v10, -1, -1);
      MEMORY[0x25A297C00](v9, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255ABFC38(v0, (uint64_t (*)(void))sub_255ABFC84);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v13;
  }
  return v5;
}

uint64_t sub_255ABDBC0(uint64_t a1, char a2)
{
  return sub_255ABDBDC(a1, a2, 0xD000000000000023, 0x8000000255C9CCF0);
}

uint64_t sub_255ABDBDC(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_255C7E8B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v12 = sub_255C80BF8();
    uint64_t v13 = sub_255C7F148();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      unint64_t v21 = a4;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = a3;
      uint64_t v18 = v16;
      uint64_t v23 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v22 = sub_255A7BEC4(v17, v21, &v23);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v18, -1, -1);
      MEMORY[0x25A297C00](v15, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A525AC(a1, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v23;
  }
  return a1;
}

uint64_t sub_255ABDDF0@<X0>(uint64_t a1@<X8>)
{
  return sub_255ABDE28(&qword_26B29B560, (uint64_t (*)(void *, uint64_t))sub_255A524B4, 0xD000000000000010, 0x8000000255C9D030, a1);
}

uint64_t sub_255ABDE28@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void *, uint64_t)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v5;
  uint64_t v12 = sub_255C7E8B8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A09540(v10, (uint64_t)v27, a1);
  if (v28 == 1) {
    return a2(v27, a5);
  }
  unint64_t v17 = v27[0];
  os_log_type_t v18 = sub_255C80BF8();
  os_log_type_t v19 = sub_255C7F148();
  if (os_log_type_enabled(v19, v18))
  {
    v25[0] = a4;
    uint64_t v20 = swift_slowAlloc();
    v25[1] = v17;
    unint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = a3;
    uint64_t v24 = v22;
    uint64_t v26 = v22;
    *(_DWORD *)unint64_t v21 = 136315138;
    v25[2] = sub_255A7BEC4(v23, v25[0], &v26);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v24, -1, -1);
    MEMORY[0x25A297C00](v21, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_255ABE060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_255C7E8B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  if (*(unsigned char *)(v1 + 33) == 1)
  {
    char v8 = *(unsigned char *)(v1 + 32);
    uint64_t v9 = *(void *)(v1 + 24);
    *(void *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v8;
    return sub_255ABFFE4(v1, (void (*)(void, void, void, void, void, void))sub_255ABFF74);
  }
  else
  {
    sub_255ABFFE4(v1, (void (*)(void, void, void, void, void, void))sub_255ABFF74);
    os_log_type_t v11 = sub_255C80BF8();
    uint64_t v12 = sub_255C7F148();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v17[1] = v7;
      uint64_t v16 = v15;
      uint64_t v18 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v17[0] = v14 + 4;
      v17[2] = sub_255A7BEC4(0x656D656854, 0xE500000000000000, &v18);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v16, -1, -1);
      MEMORY[0x25A297C00](v14, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255ABFFE4(v1, (void (*)(void, void, void, void, void, void))sub_255AC0028);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

double sub_255ABE2D0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_255C7E8B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v10 = sub_255C80BF8();
  os_log_type_t v11 = sub_255C7F148();
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v18[0] = a2;
    uint64_t v15 = v14;
    double v19 = *(double *)&v14;
    *(_DWORD *)os_log_type_t v13 = 136315138;
    v18[1] = sub_255A7BEC4(0x657A69534743, 0xE600000000000000, (uint64_t *)&v19);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v15;
    a2 = v18[0];
    MEMORY[0x25A297C00](v16, -1, -1);
    MEMORY[0x25A297C00](v13, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  sub_255ABFD7C(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v19;
}

uint64_t sub_255ABE4EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_255C7E8B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    uint64_t v8 = *(void *)(v1 + 24);
    *(void *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(void *)(a1 + 24) = v8;
    return sub_255ABFD24(v1, (void (*)(void, void, void, void, void))sub_255ABFD88);
  }
  else
  {
    sub_255ABFD24(v1, (void (*)(void, void, void, void, void))sub_255ABFD88);
    os_log_type_t v10 = sub_255C80BF8();
    os_log_type_t v11 = sub_255C7F148();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v16[1] = v7;
      uint64_t v15 = v14;
      uint64_t v17 = v14;
      *(_DWORD *)os_log_type_t v13 = 136315138;
      v16[0] = v13 + 4;
      v16[2] = sub_255A7BEC4(0xD000000000000014, 0x8000000255C9CEC0, &v17);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v15, -1, -1);
      MEMORY[0x25A297C00](v13, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255ABFD24(v1, (void (*)(void, void, void, void, void))sub_255ABFDEC);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

double sub_255ABE75C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_255C7E8B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v10 = sub_255C80BF8();
  os_log_type_t v11 = sub_255C7F148();
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v18[0] = a2;
    uint64_t v15 = v14;
    double v19 = *(double *)&v14;
    *(_DWORD *)os_log_type_t v13 = 136315138;
    v18[1] = sub_255A7BEC4(0x6D726F6665766157, 0xEC000000657A6953, (uint64_t *)&v19);
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v15;
    a2 = v18[0];
    MEMORY[0x25A297C00](v16, -1, -1);
    MEMORY[0x25A297C00](v13, -1, -1);
  }

  sub_255C7E8A8();
  swift_getAtKeyPath();
  sub_255ABFD7C(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v19;
}

void sub_255ABE984(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_255C7E8B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1 & 1;
  }
  else
  {
    sub_255A0877C(a1, 0);
    os_log_type_t v10 = sub_255C80BF8();
    os_log_type_t v11 = sub_255C7F148();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v16[1] = a3;
      uint64_t v15 = v14;
      uint64_t v17 = v14;
      *(_DWORD *)os_log_type_t v13 = 136315138;
      v16[2] = sub_255A7BEC4(0xD000000000000011, 0x8000000255C9CEE0, &v17);
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v15, -1, -1);
      MEMORY[0x25A297C00](v13, -1, -1);
    }

    sub_255C7E8A8();
    swift_getAtKeyPath();
    sub_255A087D0(a1, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t LibraryStandardButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_255C7EE48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23158);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23160);
  MEMORY[0x270FA5388](v22);
  uint64_t v21 = (uint64_t)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v1;
  char v12 = *(unsigned char *)(v1 + 8);
  sub_255C7EE58();
  uint64_t v13 = sub_255C801F8();
  uint64_t v15 = v14;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v16 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v16 = sub_255ABEE14;
  *((void *)v16 + 1) = 0;
  *((void *)v16 + 2) = v13;
  *((void *)v16 + 3) = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_255A0877C(v11, v12);
  LOBYTE(v13) = sub_255ABA6A4(v11, v12);
  sub_255A087D0(v11, v12);
  double v17 = 0.25;
  if (v13)
  {
    if (sub_255C7EE68()) {
      double v17 = 0.5;
    }
    else {
      double v17 = 1.0;
    }
  }
  uint64_t v18 = v21;
  sub_255A09540((uint64_t)v9, v21, &qword_269F23158);
  *(double *)(v18 + *(int *)(v22 + 36)) = v17;
  sub_255A095A4((uint64_t)v9, &qword_269F23158);
  return sub_255A10514(v18, v23, &qword_269F23160);
}

uint64_t sub_255ABEE14@<X0>(void *a1@<X8>)
{
  sub_255C7E0D8();
  *a1 = v2;
  a1[1] = v3;
  type metadata accessor for BackgroundCapsule();
  if (qword_269F20218 != -1) {
    swift_once();
  }
  sub_255ABFBC8();
  return sub_255C7DED8();
}

uint64_t sub_255ABEEB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C80038();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F231B0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F231B8);
  MEMORY[0x270FA5388](v36);
  char v12 = &v35[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F231C0);
  MEMORY[0x270FA5388](v38);
  uint64_t v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F231C8);
  MEMORY[0x270FA5388](v15);
  double v17 = &v35[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = *MEMORY[0x263F19860];
  uint64_t v19 = sub_255C7E988();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v6, v18, v19);
  id v20 = objc_msgSend(self, sel_tertiarySystemFillColor);
  uint64_t v21 = MEMORY[0x25A2955B0](v20);
  sub_255A395C4((uint64_t)v6, (uint64_t)v10);
  uint64_t v22 = *(int *)(v8 + 44);
  char v37 = v10;
  *(void *)&v10[v22] = v21;
  sub_255A38C38((uint64_t)v6);
  if (qword_269F20218 != -1) {
    swift_once();
  }
  type metadata accessor for BackgroundCapsule();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  sub_255C7DEE8();
  sub_255C7DEE8();
  sub_255C801F8();
  sub_255C7E588();
  uint64_t v23 = (uint64_t)v37;
  sub_255A09540((uint64_t)v37, (uint64_t)v12, &qword_269F231B0);
  uint64_t v24 = &v12[*(int *)(v36 + 36)];
  long long v25 = v44;
  v24[4] = v43;
  v24[5] = v25;
  v24[6] = v45;
  long long v26 = v40;
  *uint64_t v24 = v39;
  v24[1] = v26;
  long long v27 = v42;
  v24[2] = v41;
  v24[3] = v27;
  sub_255A095A4(v23, &qword_269F231B0);
  sub_255C7DEE8();
  sub_255C801F8();
  sub_255C7DFE8();
  sub_255A09540((uint64_t)v12, (uint64_t)v14, &qword_269F231B8);
  char v28 = &v14[*(int *)(v38 + 36)];
  long long v29 = v47;
  _OWORD *v28 = v46;
  v28[1] = v29;
  _OWORD v28[2] = v48;
  sub_255A095A4((uint64_t)v12, &qword_269F231B8);
  if (qword_269F20210 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_269F33398;
  uint64_t v31 = *v2;
  uint64_t v32 = v2[1];
  sub_255A09540((uint64_t)v14, (uint64_t)v17, &qword_269F231C0);
  CGRect v33 = (uint64_t *)&v17[*(int *)(v15 + 36)];
  *CGRect v33 = v30;
  v33[1] = v31;
  v33[2] = v32;
  swift_retain();
  sub_255A095A4((uint64_t)v14, &qword_269F231C0);
  return sub_255A10514((uint64_t)v17, a1, &qword_269F231C8);
}

uint64_t static MCUINamespace<A>.libraryStandard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_255ABF440@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255C7E848();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255ABF470@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255C7E848();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255ABF4A0()
{
  return sub_255C7E858();
}

uint64_t sub_255ABF4C8()
{
  return sub_255C7E858();
}

uint64_t sub_255ABF4F0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for LibraryStandardButtonStyle()
{
  return &type metadata for LibraryStandardButtonStyle;
}

uint64_t sub_255ABF51C()
{
  return sub_255AC0198(&qword_269F23168, &qword_269F23160, (void (*)(void))sub_255ABF560);
}

unint64_t sub_255ABF560()
{
  unint64_t result = qword_269F23170;
  if (!qword_269F23170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23158);
    sub_255AC02E4(&qword_26B297B78, MEMORY[0x263F1A0D0]);
    sub_255A09998(&qword_269F23178, &qword_269F23180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23170);
  }
  return result;
}

uint64_t *sub_255ABF630(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_255ABF700(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_255ABF76C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_255ABF7EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_255ABF874(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_255ABF8F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_255ABF974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255ABF988);
}

uint64_t sub_255ABF988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_255ABF9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255ABFA10);
}

uint64_t sub_255ABFA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23188);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for BackgroundCapsule()
{
  uint64_t result = qword_269F23190;
  if (!qword_269F23190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255ABFAD4()
{
  sub_255ABFB6C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_255ABFB6C()
{
  if (!qword_269F231A0)
  {
    sub_255ABFBC8();
    unint64_t v0 = sub_255C7DEF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F231A0);
    }
  }
}

unint64_t sub_255ABFBC8()
{
  unint64_t result = qword_269F231A8;
  if (!qword_269F231A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F231A8);
  }
  return result;
}

uint64_t sub_255ABFC1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255ABFC38(uint64_t a1, uint64_t (*a2)(void))
{
  return a1;
}

uint64_t sub_255ABFC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(void))
{
  if (a5) {
    return a6();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_255ABFC84(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_255ABFCD4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_255ABFD24(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_255ABFD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_255ABFD70()
{
  return swift_release();
}

uint64_t sub_255ABFD7C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

id sub_255ABFD88(void *a1, void *a2, void *a3, void *a4, char a5)
{
  if (a5)
  {
    id v8 = a1;
    id v9 = a2;
    id v10 = a3;
    return a4;
  }
  else
  {
    return (id)swift_retain();
  }
}

void sub_255ABFDEC(void *a1, void *a2, void *a3, void *a4, char a5)
{
  if (a5)
  {
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_255ABFE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11)
  {
    swift_retain();
    swift_retain();
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_255ABFEB4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 80);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), v4);
  return a1;
}

uint64_t sub_255ABFF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11)
  {
    swift_release();
    swift_release();
    swift_release();
  }

  return swift_release();
}

id sub_255ABFF74(id result, void *a2, void *a3, void *a4, char a5, char a6)
{
  if (a6) {
    return sub_255ABFF80(result, a2, a3, a4, a5);
  }
  else {
    return (id)swift_retain();
  }
}

id sub_255ABFF80(id result, void *a2, void *a3, void *a4, char a5)
{
  if (a5 != 1)
  {
    if (a5) {
      return result;
    }
    id v8 = result;
    id v9 = a2;
    id v10 = a3;
    uint64_t result = a4;
  }
  return result;
}

uint64_t sub_255ABFFE4(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

void sub_255AC0028(void *a1, void *a2, void *a3, void *a4, char a5, char a6)
{
  if (a6) {
    sub_255AC0034(a1, a2, a3, a4, a5);
  }
  else {
    swift_release();
  }
}

void sub_255AC0034(void *a1, void *a2, void *a3, void *a4, char a5)
{
  if (a5 != 1)
  {
    if (a5) {
      return;
    }

    a1 = a4;
  }
}

unint64_t sub_255AC009C()
{
  unint64_t result = qword_269F231D0;
  if (!qword_269F231D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F231C8);
    sub_255AC0198(&qword_269F231D8, &qword_269F231C0, (void (*)(void))sub_255AC0168);
    sub_255A09998(&qword_269F231F0, &qword_269F231F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F231D0);
  }
  return result;
}

uint64_t sub_255AC0168()
{
  return sub_255AC0198(&qword_269F231E0, &qword_269F231B8, (void (*)(void))sub_255AC0214);
}

uint64_t sub_255AC0198(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255AC0214()
{
  unint64_t result = qword_269F231E8;
  if (!qword_269F231E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F231B0);
    sub_255AC02E4(&qword_26B29EF28, MEMORY[0x263F1B7A0]);
    sub_255A09998(&qword_26B29BB58, &qword_26B29BB60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F231E8);
  }
  return result;
}

uint64_t sub_255AC02E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255AC032C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkCornerStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AC039C(double a1, uint64_t a2, unint64_t a3)
{
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    uint64_t result = sub_255C81238();
    __break(1u);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF9388]), sel_initWithCommonFormat_sampleRate_channels_interleaved_, 1, a3, 1, a1);
    if (!v3)
    {
      sub_255AC0798();
      swift_allocError();
      *uint64_t v4 = 0;
      swift_willThrow();
    }
    return (uint64_t)v3;
  }
  return result;
}

AudioQueueBufferRef sub_255AC04C8(void *a1, OpaqueAudioQueue *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  outBuffer[1] = *(AudioQueueBufferRef *)MEMORY[0x263EF8340];
  uint64_t v7 = (unsigned int *)objc_msgSend(a1, sel_streamDescription);
  unint64_t v8 = v7[5] * (unint64_t)v7[6];
  if ((v8 & 0xFFFFFFFF00000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((a5 & 0x8000000000000000) != 0 || HIDWORD(a5))
  {
    AudioQueueBufferRef result = (AudioQueueBufferRef)sub_255C81238();
    __break(1u);
    return result;
  }
  unint64_t v9 = a5 * (unint64_t)v8;
  if ((v9 & 0xFFFFFFFF00000000) != 0) {
LABEL_10:
  }
    __break(1u);
  outBuffer[0] = 0;
  OSStatus Buffer = AudioQueueAllocateBuffer(a2, v9, outBuffer);
  if (Buffer || (AudioQueueBufferRef result = outBuffer[0]) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F23200);
    sub_255AC0654();
    swift_allocError();
    *(unsigned char *)uint64_t v11 = 3;
    *(_DWORD *)(v11 + 4) = Buffer;
    return (AudioQueueBufferRef)swift_willThrow();
  }
  return result;
}

unint64_t sub_255AC0654()
{
  unint64_t result = qword_269F23208;
  if (!qword_269F23208)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23208);
  }
  return result;
}

AudioQueueRef sub_255AC06B0(void *a1, void *a2)
{
  v5[1] = *(AudioQueueRef *)MEMORY[0x263EF8340];
  v5[0] = 0;
  OSStatus v2 = AudioQueueNewInput((const AudioStreamBasicDescription *)objc_msgSend(a1, sel_streamDescription), (AudioQueueInputCallback)sub_255B548E0, a2, 0, 0, 0x800u, v5);
  if (v2 || (AudioQueueRef result = v5[0]) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F23200);
    sub_255AC0654();
    swift_allocError();
    *(unsigned char *)uint64_t v3 = 1;
    *(_DWORD *)(v3 + 4) = v2;
    return (AudioQueueRef)swift_willThrow();
  }
  return result;
}

unint64_t sub_255AC0798()
{
  unint64_t result = qword_269F23210;
  if (!qword_269F23210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23210);
  }
  return result;
}

uint64_t sub_255AC07EC(char a1)
{
  uint64_t v1 = a1 & 1;
  swift_getKeyPath();
  return v1;
}

uint64_t sub_255AC082C()
{
  return sub_255C7E8C8();
}

uint64_t sub_255AC086C(uint64_t a1)
{
  sub_255A09540(a1, (uint64_t)v3, (uint64_t *)&unk_26B29BF50);
  sub_255A09540((uint64_t)v3, (uint64_t)&v2, (uint64_t *)&unk_26B29BF50);
  sub_255AC724C();
  sub_255C7E8D8();
  return sub_255A095A4((uint64_t)v3, (uint64_t *)&unk_26B29BF50);
}

uint64_t sub_255AC08E0()
{
  sub_255AC70F0();

  return sub_255C7E8C8();
}

uint64_t sub_255AC0928@<X0>(unsigned char *a1@<X8>)
{
  sub_255AC72A0();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AC0978()
{
  return sub_255C7E8D8();
}

uint64_t static NowPlayingArtworkTreatment<>.standard.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255AC6438((uint64_t)&unk_270478510);
  *a1 = result;
  return result;
}

uint64_t NowPlayingArtworkTreatment.isEqual(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C80E88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v17[-v6 - 8];
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_255A53C38(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29AE08);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v7, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v7, a2);
    char v14 = sub_255C80578();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
  }
  else
  {
    v13(v7, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_255AC0C10()
{
  if (*(void *)(v0 + 112))
  {
    uint64_t v1 = *(void *)(v0 + 112);
  }
  else
  {
    uint64_t v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B4B0);
    sub_255A09998(&qword_26B29B4A8, &qword_26B29B4B0);
    uint64_t v1 = sub_255C7DAF8();
    *(void *)(v2 + 112) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_255AC0CC4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void *sub_255AC0D24()
{
  uint64_t v1 = v0;
  v0[5] = &type metadata for NowPlayingStandardArtworkTreatment;
  unint64_t v2 = sub_255AC7728();
  v1[6] = v2;
  v1[2] = sub_255AC6438((uint64_t)&unk_270478538);
  v1[7] = -1;
  v1[11] = &type metadata for NowPlayingStandardArtworkTreatment;
  v1[12] = v2;
  v1[8] = sub_255AC6438((uint64_t)&unk_270478560);
  sub_255AC6438((uint64_t)&unk_270478588);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B4B0);
  swift_allocObject();
  v1[13] = sub_255C7DA28();
  v1[14] = 0;
  _s14DefaultArtworkCMa();
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = 0;
  v1[15] = v3;
  _s7ArtworkC17BackgroundArtworkCMa();
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF18);
  sub_255C7DA88();
  v1[16] = v4;
  return v1;
}

uint64_t sub_255AC0E3C@<X0>(uint64_t *a1@<X8>)
{
  _s7ArtworkCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

BOOL static NowPlayingArtwork.Placement.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NowPlayingArtwork.Placement.hash(into:)()
{
  return sub_255C81588();
}

uint64_t NowPlayingArtwork.Placement.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t NowPlayingStandardArtworkTreatment.placements(for:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t static NowPlayingStandardArtworkTreatment.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_255AC0F14(*a1, *a2);
}

uint64_t sub_255AC0F14(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    int v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    sub_255C81578();
    sub_255C81588();
    uint64_t result = sub_255C815B8();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int8 *)(v19 + v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_255AC10F8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    int64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_255C81578();
    swift_bridgeObjectRetain();
    sub_255C806B8();
    uint64_t v18 = sub_255C815B8();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_255C81428() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        long long v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_255C81428() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_255AC139C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_255AC13A4(uint64_t *a1, uint64_t *a2)
{
  return sub_255AC0F14(*a1, *a2);
}

uint64_t static NowPlayingArtworkTreatment<>.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255AC6438((uint64_t)&unk_2704785B0);
  *a1 = result;
  return result;
}

uint64_t NowPlayingBackgroundStaticArtworkTreatment.placements(for:)(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 18) || (*(unsigned char *)(a1 + 32) & 1) == 0 && *(void *)(a1 + 24) == 1) {
    return sub_255AC6438((uint64_t)&unk_270478488);
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

id static NowPlayingArtworkTreatment<>.background(image:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_255AC6438((uint64_t)&unk_2704785D8);
  a2[1] = (uint64_t)a1;

  return a1;
}

uint64_t NowPlayingVideoPlayerArtworkTreatment.placements(for:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t static NowPlayingVideoPlayerArtworkTreatment.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  sub_255A43740(0, &qword_26B29D1B0);
  if ((sub_255C80DD8() & 1) == 0 || (sub_255AC1528(v2, v4) & 1) == 0) {
    return 0;
  }

  return sub_255AC0F14(v3, v5);
}

id sub_255AC1528(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_255C812B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_255C812B8();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x25A2969C0](0, v3))
  {
    unint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x25A2969C0](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    sub_255A43740(0, &qword_269F23218);
    char v14 = sub_255C80DD8();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x25A2969C0](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x25A2969C0](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = sub_255C80DD8();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      long long v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        long long v27 = *v25++;
        uint64_t v26 = v27;
        BOOL v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_255C80DD8();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_255AC1814(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2) {
      return 1;
    }
    uint64_t v3 = a2;
    uint64_t v4 = a1;
    if (a1 == a2) {
      return 1;
    }
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v15 = v2;
      uint64_t v6 = *(void *)(v4 + v5 + 56);
      char v7 = *(unsigned char *)(v4 + v5 + 64);
      uint64_t v17 = *(void *)(v4 + v5 + 48);
      uint64_t v8 = *(void *)(v3 + v5 + 48);
      uint64_t v9 = *(void *)(v3 + v5 + 56);
      char v10 = *(unsigned char *)(v3 + v5 + 64);
      if (*(void *)(v4 + v5 + 32) != *(void *)(v3 + v5 + 32)
        || *(void *)(v4 + v5 + 40) != *(void *)(v3 + v5 + 40))
      {
        char v10 = *(unsigned char *)(v3 + v5 + 64);
        uint64_t v8 = *(void *)(v3 + v5 + 48);
        uint64_t v9 = *(void *)(v3 + v5 + 56);
        if ((sub_255C81428() & 1) == 0) {
          break;
        }
      }
      swift_bridgeObjectRetain();
      sub_255A093E4(v17, v6, v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_255A093E4(v8, v9, v10);
      swift_bridgeObjectRetain();
      char v16 = sub_255C7F498();
      swift_bridgeObjectRelease();
      sub_255A094C0(v8, v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_255A094C0(v17, v6, v7);
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        break;
      }
      v5 += 48;
      uint64_t v4 = a1;
      uint64_t v2 = v15 - 1;
      uint64_t v3 = a2;
      if (v15 == 1) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_255AC19DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (double *)(a2 + 48);
    uint64_t v4 = (double *)(a1 + 48);
    do
    {
      double v5 = *v4;
      double v6 = *v3;
      if (*((void *)v4 - 2) == *((void *)v3 - 2) && *((void *)v4 - 1) == *((void *)v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_255C81428();
        uint64_t result = 0;
        if ((v8 & 1) == 0 || v5 != v6) {
          return result;
        }
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_255AC1A90()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_255AC1A98(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  sub_255A43740(0, &qword_26B29D1B0);
  if ((sub_255C80DD8() & 1) == 0 || (sub_255AC1528(v2, v4) & 1) == 0) {
    return 0;
  }

  return sub_255AC0F14(v3, v5);
}

uint64_t static NowPlayingArtworkTreatment<>.videoPlayer(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = self;
  id v5 = a1;
  id v6 = objc_msgSend(v4, sel_systemDefaultSpeeds);
  sub_255A43740(0, &qword_269F23218);
  uint64_t v7 = sub_255C807F8();

  *a2 = v5;
  a2[1] = v7;
  uint64_t result = sub_255AC6438((uint64_t)&unk_270478600);
  a2[2] = result;
  return result;
}

uint64_t static NowPlayingArtworkTreatment<>.videoPlayer(_:speeds:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = sub_255AC6438((uint64_t)&unk_270478628);
  id v4 = a1;

  return swift_bridgeObjectRetain();
}

uint64_t NowPlayingMPCVideoArtworkTreatment.placements(for:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t static NowPlayingMPCVideoArtworkTreatment.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_255AC0F14(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23220);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
  uint64_t v6 = MEMORY[0x263F8E4E0];

  return MEMORY[0x270FA1F98](v2, v3, v4, v5, v6);
}

uint64_t sub_255AC1CDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_255AC0F14(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23220);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
  uint64_t v6 = MEMORY[0x263F8E4E0];

  return MEMORY[0x270FA1F98](v2, v3, v4, v5, v6);
}

uint64_t static NowPlayingArtworkTreatment<>.mpcVideo(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_255AC6438((uint64_t)&unk_270478650);
  a2[1] = a1;

  return swift_retain();
}

uint64_t sub_255AC1DB8(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(unsigned char *))(v2 + 16))(&v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2982F0);
  uint64_t v3 = swift_dynamicCast();
  if (v3) {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  return v3;
}

uint64_t sub_255AC1EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v123 = v2 + 272;
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BA40) - 8;
  MEMORY[0x270FA5388](v122);
  uint64_t v79 = (uint64_t)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B798);
  MEMORY[0x270FA5388](v99);
  v120 = (void *)((char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v116 = *(void *)(a1 + 16);
  uint64_t v115 = v6;
  _s31PrimaryArtworkViewOrVideoPlayerVMa();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BA00);
  uint64_t v7 = sub_255C7E458();
  v132[19] = swift_getWitnessTable();
  v132[20] = MEMORY[0x263F18BF0];
  uint64_t v8 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = sub_255A09998((unint64_t *)&qword_26B29B9F8, &qword_26B29BA00);
  v132[17] = WitnessTable;
  v132[18] = v10;
  uint64_t v110 = v7;
  uint64_t v109 = swift_getWitnessTable();
  sub_255C7EBB8();
  uint64_t v11 = sub_255C7E458();
  uint64_t v121 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v101 = (char *)v78 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BB40);
  uint64_t v84 = v11;
  uint64_t v13 = sub_255C7E458();
  uint64_t v119 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v107 = (char *)v78 - v14;
  uint64_t v88 = v13;
  uint64_t v15 = sub_255C7E458();
  uint64_t v117 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v108 = (char *)v78 - v16;
  type metadata accessor for ArtworkCornerModifier(255);
  uint64_t v89 = v15;
  uint64_t v17 = sub_255C7E458();
  uint64_t v112 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v105 = (char *)v78 - v18;
  uint64_t v85 = v17;
  uint64_t v19 = sub_255C7E458();
  uint64_t v114 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v102 = (char *)v78 - v20;
  uint64_t v91 = v19;
  uint64_t v21 = sub_255C7E458();
  uint64_t v118 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v106 = (char *)v78 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29BF50);
  uint64_t v95 = v23;
  unint64_t v24 = sub_255AC838C();
  v78[1] = v24;
  uint64_t v25 = swift_getWitnessTable();
  v132[15] = v24;
  v132[16] = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v80 = v26;
  uint64_t v27 = sub_255A09998(&qword_26B29BB38, &qword_26B29BB40);
  v132[13] = v26;
  v132[14] = v27;
  uint64_t v86 = swift_getWitnessTable();
  v132[11] = v86;
  v132[12] = MEMORY[0x263F1A450];
  uint64_t v113 = v8;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v81 = v28;
  uint64_t v29 = sub_255AC90A4(qword_26B29A740, 255, (void (*)(uint64_t))type metadata accessor for ArtworkCornerModifier);
  v132[9] = v28;
  v132[10] = v29;
  uint64_t v82 = swift_getWitnessTable();
  v132[7] = v82;
  v132[8] = MEMORY[0x263F1A070];
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v90 = v30;
  unint64_t v31 = sub_255A101A0();
  v132[5] = v30;
  v132[6] = v31;
  uint64_t v92 = v21;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v94 = v32;
  unint64_t v93 = sub_255AC842C();
  v132[0] = v21;
  v132[1] = v23;
  v132[2] = v32;
  v132[3] = v93;
  uint64_t v33 = sub_255C7FEE8();
  uint64_t v96 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v83 = (char *)v78 - v34;
  uint64_t v98 = sub_255C7E458();
  uint64_t v103 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v87 = (char *)v78 - v35;
  uint64_t v36 = sub_255C7E458();
  uint64_t v104 = *(void *)(v36 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v97 = (char *)v78 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v100 = (char *)v78 - v39;
  uint64_t v40 = sub_255C7FC78();
  uint64_t v41 = sub_255C801D8();
  uint64_t v43 = v42;
  uint64_t v44 = v79;
  long long v45 = v111;
  uint64_t v46 = v116;
  uint64_t v47 = v115;
  sub_255AC2D84(v111, v116, v79);
  long long v48 = (uint64_t *)(v44 + *(int *)(v122 + 44));
  *long long v48 = v41;
  v48[1] = v43;
  uint64_t v49 = v120;
  sub_255A09540(v44, (uint64_t)v120 + *(int *)(v99 + 36), &qword_26B29BA40);
  *uint64_t v49 = v40;
  sub_255A095A4(v44, &qword_26B29BA40);
  sub_255C801D8();
  uint64_t v125 = v46;
  uint64_t v126 = v47;
  v127 = v45;
  uint64_t v50 = v101;
  sub_255C7F588();
  sub_255A095A4((uint64_t)v49, &qword_26B29B798);
  LOBYTE(v132[0]) = *(unsigned char *)(v123 + 1);
  uint64_t v51 = *((void *)v45 + 24);
  uint64_t v52 = *((unsigned __int8 *)v45 + 200);
  sub_255AC0394(v51, v52);
  sub_255ABBAE0(v51, v52);
  sub_255AC0398(v51, v52);
  sub_255C7EF68();
  sub_255C80378();
  sub_255AC84A4();
  uint64_t v53 = v107;
  uint64_t v54 = v84;
  sub_255C7F938();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v50, v54);
  sub_255C7E468();
  sub_255C7F198();
  uint64_t v55 = v108;
  uint64_t v56 = v88;
  sub_255C7F7D8();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v53, v56);
  uint64_t v57 = v105;
  uint64_t v58 = v89;
  sub_255B44710(v89, v81);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v55, v58);
  uint64_t v59 = v102;
  uint64_t v60 = v85;
  sub_255C7F7F8();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v57, v60);
  uint64_t v61 = *((void *)v45 + 26);
  uint64_t v62 = *((unsigned __int8 *)v45 + 216);
  sub_255AC0394(v61, v62);
  sub_255AB99AC(v61, v62, v132);
  sub_255AC0398(v61, v62);
  long long v63 = v106;
  uint64_t v64 = v91;
  sub_255C7F7E8();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v59, v64);
  sub_255ABA8A8((uint64_t)v132);
  uint64_t v65 = v83;
  uint64_t v66 = v92;
  sub_255C7F9D8();
  sub_255A095A4((uint64_t)v132, (uint64_t *)&unk_26B29BF50);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v63, v66);
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v68 = v87;
  sub_255C7F9E8();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v65, v33);
  LOBYTE(v61) = *((unsigned char *)v45 + 272);
  uint64_t v69 = swift_retain();
  uint64_t v70 = sub_255ABBAC4(v69, v61);
  swift_release();
  swift_getKeyPath();
  v132[0] = v70;
  sub_255AC90A4((unint64_t *)&qword_26B298EB0, 255, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  sub_255C7D718();
  swift_release();
  swift_release();
  unint64_t v71 = sub_255A2473C();
  uint64_t v130 = v67;
  unint64_t v131 = v71;
  uint64_t v72 = v98;
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v74 = v97;
  sub_255C7FAB8();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v68, v72);
  uint64_t v128 = v73;
  uint64_t v129 = MEMORY[0x263F18BF0];
  swift_getWitnessTable();
  uint64_t v75 = v100;
  sub_255A20F54(v74);
  uint64_t v76 = *(void (**)(char *, uint64_t))(v104 + 8);
  v76(v74, v36);
  sub_255A20F54(v75);
  return ((uint64_t (*)(char *, uint64_t))v76)(v75, v36);
}

uint64_t sub_255AC2D84@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v5 = type metadata accessor for ArtworkClipShape(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BA28);
  MEMORY[0x270FA5388](v34);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B780);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B888);
  MEMORY[0x270FA5388](v35);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B8D0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = a1[10];
  _OWORD v41[2] = a1[9];
  v42[0] = v17;
  *(_OWORD *)((char *)v42 + 10) = *(_OWORD *)((char *)a1 + 170);
  long long v18 = a1[8];
  v41[0] = a1[7];
  v41[1] = v18;
  sub_255A1D4DC((uint64_t)v41, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v38);
  sub_255A1D4DC((uint64_t)v41, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  if ((v40 & 1) != 0 || v39 != 1)
  {
    uint64_t v20 = sub_255C7FC78();
    uint64_t v21 = sub_255C801D8();
    uint64_t v32 = a3;
    uint64_t v22 = v21;
    uint64_t v23 = v14;
    uint64_t v24 = v13;
    uint64_t v26 = v25;
    sub_255AC3188((uint64_t)a1, (uint64_t)v9);
    uint64_t v27 = &v9[*(int *)(v34 + 36)];
    *(void *)uint64_t v27 = v22;
    *((void *)v27 + 1) = v26;
    uint64_t v13 = v24;
    uint64_t v14 = v23;
    uint64_t v28 = v36;
    sub_255A09540((uint64_t)v9, (uint64_t)v36 + *(int *)(v33 + 36), &qword_26B29BA28);
    uint64_t *v28 = v20;
    sub_255A095A4((uint64_t)v9, &qword_26B29BA28);
    *uint64_t v7 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    swift_storeEnumTagMultiPayload();
    sub_255AC8510((uint64_t)v7, (uint64_t)&v12[*(int *)(v35 + 36)]);
    sub_255A10514((uint64_t)v28, (uint64_t)v12, &qword_26B29B780);
    uint64_t KeyPath = swift_getKeyPath();
    sub_255A09540((uint64_t)v12, (uint64_t)v16, &qword_26B29B888);
    uint64_t v30 = &v16[*(int *)(v13 + 36)];
    *(void *)uint64_t v30 = KeyPath;
    a3 = v32;
    v30[8] = 1;
    sub_255A095A4((uint64_t)v12, &qword_26B29B888);
    sub_255A10514((uint64_t)v16, a3, &qword_26B29B8D0);
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, v19, 1, v13);
}

uint64_t sub_255AC3188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298650);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298538);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298560);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255AC3470(a1, (uint64_t)v5);
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = *(unsigned __int8 *)(a1 + 8);
  sub_255AC0394(v14, v15);
  sub_255ABBCDC(v14, v15, &v25);
  sub_255AC0398(v14, v15);
  if (v25 == 1) {
    double v16 = 1.0;
  }
  else {
    double v16 = 0.0;
  }
  sub_255A09540((uint64_t)v5, (uint64_t)v9, &qword_26B298650);
  *(double *)&v9[*(int *)(v7 + 44)] = v16;
  sub_255A095A4((uint64_t)v5, &qword_26B298650);
  sub_255AC0394(v14, v15);
  sub_255ABBCDC(v14, v15, &v24);
  sub_255AC0398(v14, v15);
  sub_255AC0394(v14, v15);
  sub_255ABBCDC(v14, v15, &v23);
  sub_255AC0398(v14, v15);
  sub_255C80228();
  uint64_t v17 = sub_255C80258();
  swift_release();
  sub_255AC0394(v14, v15);
  sub_255ABBCDC(v14, v15, &v22);
  sub_255AC0398(v14, v15);
  char v18 = v22;
  sub_255A09540((uint64_t)v9, (uint64_t)v13, &qword_26B298538);
  uint64_t v19 = &v13[*(int *)(v11 + 44)];
  *(void *)uint64_t v19 = v17;
  v19[8] = v18;
  sub_255A095A4((uint64_t)v9, &qword_26B298538);
  return sub_255A10514((uint64_t)v13, v21, &qword_26B298560);
}

uint64_t sub_255AC3470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985B8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v43 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298520);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v39 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298528);
  uint64_t v7 = MEMORY[0x270FA5388](v44);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v42 = (uint64_t)v38 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985A0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_255C7FD88();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 248))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    swift_release();
    if (v48[0])
    {
      id v18 = v48[0];
      sub_255C7FD68();
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F1B4B8], v14);
      uint64_t v19 = sub_255C7FDB8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      *(void *)uint64_t v13 = v19;
      *((void *)v13 + 1) = 0;
      *((_WORD *)v13 + 8) = 257;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23300);
      sub_255AC90F8(&qword_269F21F08, (uint64_t *)&unk_269F23300);
      sub_255AC862C();
      uint64_t v20 = v45;
      sub_255C7EBD8();
      swift_release();

      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2985A8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
    }
    sub_255ABA420((uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29AE08);
    if (swift_dynamicCast())
    {
      char v23 = v47;
      if (v47)
      {
        v38[1] = v46;
        type metadata accessor for NowPlayingArtworkMirrorReplicatorLayer();
        *(void *)(swift_allocObject() + 16) = v23;
        v38[0] = v23;
        char v24 = v39;
        sub_255C7DFD8();
        uint64_t v25 = sub_255C801F8();
        uint64_t v27 = v26;
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v29 = swift_getKeyPath();
        uint64_t v30 = v40;
        uint64_t v31 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v9, v24, v41);
        uint64_t v32 = &v9[*(int *)(v44 + 36)];
        *(void *)uint64_t v32 = KeyPath;
        v32[8] = 0;
        *((void *)v32 + 2) = v29;
        v32[24] = 0;
        *((void *)v32 + 4) = v25;
        *((void *)v32 + 5) = v27;
        (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
        uint64_t v33 = v42;
        sub_255A10514((uint64_t)v9, v42, (uint64_t *)&unk_26B298528);
        sub_255A09540(v33, (uint64_t)v13, (uint64_t *)&unk_26B298528);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23300);
        sub_255AC90F8(&qword_269F21F08, (uint64_t *)&unk_269F23300);
        sub_255AC862C();
        uint64_t v34 = (uint64_t)v43;
        sub_255C7EBD8();
        id v35 = v38[0];

        swift_bridgeObjectRelease();
        sub_255A095A4(v33, (uint64_t *)&unk_26B298528);
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2985A8);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
        return sub_255A10514(v34, v45, &qword_26B2985B8);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2985A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v45, 1, 1, v37);
  }
  else
  {
    _s7ArtworkC17BackgroundArtworkCMa();
    sub_255AC90A4((unint64_t *)&unk_26B299DA0, 255, (void (*)(uint64_t))_s7ArtworkC17BackgroundArtworkCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

void sub_255AC3B2C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMirrorReplicatorLayer_image);
  *(void *)(a1 + OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMirrorReplicatorLayer_image) = a2;
  id v3 = a2;

  sub_255C6E37C();
}

uint64_t sub_255AC3B90(void *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((unsigned __int8 *)a1 + 8);
  sub_255AC0394(*a1, v3);
  sub_255ABBCDC(v2, v3, &v22);
  sub_255AC0398(v2, v3);
  sub_255ABA420((uint64_t)v21);
  long long v4 = *((_OWORD *)a1 + 10);
  unint64_t v26[2] = *((_OWORD *)a1 + 9);
  v27[0] = v4;
  *(_OWORD *)((char *)v27 + 10) = *(_OWORD *)((char *)a1 + 170);
  long long v5 = *((_OWORD *)a1 + 8);
  v26[0] = *((_OWORD *)a1 + 7);
  v26[1] = v5;
  sub_255A1D4DC((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v24);
  uint64_t result = sub_255A1D4DC((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  if (v25 == 3)
  {
    __break(1u);
  }
  else
  {
    char v20 = v25;
    uint64_t v7 = a1[26];
    uint64_t v8 = *((unsigned __int8 *)a1 + 216);
    sub_255AC0394(v7, v8);
    sub_255AB99AC(v7, v8, &v19);
    sub_255AC0398(v7, v8);
    char v18 = v19;
    uint64_t v9 = a1[28];
    uint64_t v10 = a1[29];
    char v11 = *((unsigned char *)a1 + 240);
    sub_255A7663C(v9, v10, v11);
    sub_255ABBD20(v9, v10, v11, v17);
    sub_255A767C8(v9, v10, v11);
    long long v16 = *(_OWORD *)v17;
    sub_255AC3F60(&v22, v21, &v20, &v18, (uint64_t *)&v16, (uint64_t)v23);
    _s11ArtworkViewVMa();
    sub_255AC3FF4();
    uint64_t v12 = _s31PrimaryArtworkViewOrVideoPlayerVMa();
    swift_getWitnessTable();
    sub_255C7FAB8();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v12 - 8) + 8))(v23, v12);
    LOBYTE(v21[0]) = sub_255AC3FF4();
    uint64_t v13 = sub_255C7E458();
    swift_getWitnessTable();
    sub_255C7FB68();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v13 - 8) + 8))(v24, v13);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BA00);
    uint64_t v14 = sub_255C7E458();
    sub_255A09998((unint64_t *)&qword_26B29B9F8, &qword_26B29BA00);
    swift_getWitnessTable();
    sub_255A20F54(v23);
    uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(*(void *)(v14 - 8) + 8);
    v15(v23, v14);
    sub_255A20F54(v24);
    return ((uint64_t (*)(unsigned char *, uint64_t))v15)(v24, v14);
  }
  return result;
}

uint64_t sub_255AC3F60@<X0>(unsigned char *a1@<X0>, long long *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v7 = *a3;
  char v8 = *a4;
  uint64_t v9 = *a5;
  uint64_t v10 = a5[1];
  *(unsigned char *)a6 = *a1;
  sub_255A524B4(a2, a6 + 8);
  *(unsigned char *)(a6 + 48) = v7;
  *(unsigned char *)(a6 + 49) = v8;
  *(void *)(a6 + 56) = v9;
  *(void *)(a6 + 64) = v10;
  *(void *)(a6 + 72) = sub_255C7E628();
  *(void *)(a6 + 80) = v11;
  uint64_t result = swift_getKeyPath();
  *(void *)(a6 + 88) = result;
  *(void *)(a6 + 96) = 0;
  *(unsigned char *)(a6 + 104) = 0;
  return result;
}

BOOL sub_255AC3FF4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((unsigned __int8 *)v0 + 8);
  sub_255AC0394(*v0, v2);
  sub_255ABBCDC(v1, v2, v5);
  sub_255AC0398(v1, v2);
  BOOL result = 0;
  if (v5[0] == 1)
  {
    sub_255ABA420((uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29AE08);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();

      if (!v4) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_255AC40B0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v3 = a1 & 1;
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = swift_getKeyPath();
  *(unsigned char *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = swift_getKeyPath();
  *(unsigned char *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = swift_getKeyPath();
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_WORD *)(a2 + 184) = 0;
  *(void *)(a2 + 192) = swift_getKeyPath();
  *(unsigned char *)(a2 + 200) = 0;
  *(void *)(a2 + 208) = swift_getKeyPath();
  *(unsigned char *)(a2 + 216) = 0;
  *(void *)(a2 + 224) = swift_getKeyPath();
  *(void *)(a2 + 232) = 0;
  *(unsigned char *)(a2 + 240) = 0;
  _s7ArtworkC17BackgroundArtworkCMa();
  sub_255AC90A4((unint64_t *)&unk_26B299DA0, 255, (void (*)(uint64_t))_s7ArtworkC17BackgroundArtworkCMa);
  *(void *)(a2 + 248) = sub_255C7E628();
  *(void *)(a2 + 256) = v4;
  type metadata accessor for WindowProperties();
  sub_255AC90A4((unint64_t *)&qword_26B298EB0, 255, (void (*)(uint64_t))type metadata accessor for WindowProperties);
  uint64_t result = sub_255C7DD58();
  *(void *)(a2 + 264) = result;
  *(unsigned char *)(a2 + 272) = v6 & 1;
  *(unsigned char *)(a2 + 273) = v3;
  return result;
}

uint64_t sub_255AC4238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B778);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 16);
  _s9VideoViewVMa();
  sub_255C7E458();
  sub_255C7F0D8();
  sub_255C7E458();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_255C7E458();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v41 = sub_255AC8FFC();
  v19[1] = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_255C7E458();
  uint64_t v6 = sub_255C7EBE8();
  uint64_t v38 = swift_getWitnessTable();
  unint64_t v39 = sub_255AC9050();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = sub_255AC90A4((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v7 = swift_getWitnessTable();
  uint64_t v29 = v4;
  uint64_t v30 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v37;
  uint64_t v32 = v7;
  uint64_t v33 = swift_getWitnessTable();
  v19[0] = v6;
  swift_getWitnessTable();
  sub_255C7E598();
  uint64_t v8 = sub_255C7E458();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v19 - v13;
  uint64_t v29 = sub_255C7FC78();
  uint64_t v30 = 0;
  __int16 v31 = 1;
  uint64_t v24 = v20;
  uint64_t v25 = v3;
  uint64_t v26 = v21;
  sub_255C801F8();
  uint64_t v15 = sub_255AC90F8((unint64_t *)&qword_26B29B770, &qword_26B29B778);
  sub_255C7FAC8();
  swift_release();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v27 = v15;
  uint64_t v28 = v16;
  swift_getWitnessTable();
  sub_255A20F54(v12);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  sub_255A20F54(v14);
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
}

uint64_t sub_255AC46B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v84 = a4;
  uint64_t v91 = _s9VideoViewVMa();
  uint64_t v7 = sub_255C7E458();
  sub_255C7F0D8();
  uint64_t v85 = v7;
  uint64_t v8 = sub_255C7E458();
  uint64_t v81 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v80 = (char *)&v70 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v72 = (char *)&v70 - v14;
  uint64_t v15 = sub_255C7E458();
  uint64_t v78 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v77 = (char *)&v70 - v16;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v18 = sub_255AC8FFC();
  uint64_t v71 = AssociatedConformanceWitness;
  uint64_t v117 = AssociatedConformanceWitness;
  unint64_t v118 = v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v90 = v15;
  *(void *)&v112[0] = v15;
  *((void *)&v112[0] + 1) = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v75 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v74 = (char *)&v70 - v20;
  uint64_t v76 = v21;
  uint64_t v22 = sub_255C7E458();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v79 = (char *)&v70 - v27;
  uint64_t v86 = v8;
  uint64_t v88 = v28;
  uint64_t v29 = sub_255C7EBE8();
  uint64_t v82 = *(void *)(v29 - 8);
  uint64_t v83 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v87 = (char *)&v70 - v30;
  sub_255A53C38(a1 + 8, (uint64_t)v112);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29AE08);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2982F0);
  if (swift_dynamicCast())
  {
    sub_255A524B4(v114, (uint64_t)v116);
    sub_255A53C38((uint64_t)v116, (uint64_t)v112);
    sub_255C3C790(v112, (uint64_t)v114);
    uint64_t v31 = v91;
    uint64_t v32 = swift_getWitnessTable();
    sub_255B449D0(v31, v32);
    (*(void (**)(long long *, uint64_t))(*(void *)(v31 - 8) + 8))(v114, v31);
    unint64_t v33 = sub_255AC9050();
    uint64_t v96 = v32;
    unint64_t v97 = v33;
    uint64_t v34 = v85;
    uint64_t v35 = swift_getWitnessTable();
    sub_255B4C09C(0xD000000000000012, 0x8000000255C9D2D0, (uint64_t)&unk_270478678);
    swift_arrayDestroy();
    (*(void (**)(long long *, uint64_t))(*(void *)(v34 - 8) + 8))(v112, v34);
    uint64_t v36 = sub_255AC90A4((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    uint64_t v94 = v35;
    uint64_t v95 = v36;
    uint64_t v37 = v80;
    uint64_t v38 = v86;
    swift_getWitnessTable();
    sub_255A20F54(v11);
    unint64_t v39 = *(void (**)(char *, uint64_t))(v81 + 8);
    v39(v11, v38);
    sub_255A20F54(v37);
    *(void *)&v112[0] = v90;
    *((void *)&v112[0] + 1) = WitnessTable;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v93 = v36;
    swift_getWitnessTable();
    sub_255A44030((uint64_t)v11, v38);
    v39(v11, v38);
    v39(v37, v38);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
  }
  else
  {
    uint64_t v115 = 0;
    memset(v114, 0, sizeof(v114));
    sub_255A095A4((uint64_t)v114, qword_26B298300);
    uint64_t v40 = a1;
    sub_255C23448(*(void *)(a1 + 72));
    uint64_t v81 = v23;
    unint64_t v41 = *(void (**)(uint64_t, uint64_t))(a3 + 256);
    swift_unknownObjectRetain();
    uint64_t v42 = v72;
    v41(a2, a3);
    swift_unknownObjectRelease();
    uint64_t v43 = v77;
    sub_255B44A4C(AssociatedTypeWitness, v71);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v42, AssociatedTypeWitness);
    uint64_t v44 = _s31PrimaryArtworkViewOrVideoPlayerVMa();
    (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v112, v40, v44);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = a2;
    *(void *)(v45 + 24) = a3;
    long long v46 = v113[0];
    *(_OWORD *)(v45 + 96) = v112[4];
    *(_OWORD *)(v45 + 112) = v46;
    *(_OWORD *)(v45 + 121) = *(_OWORD *)((char *)v113 + 9);
    long long v47 = v112[1];
    *(_OWORD *)(v45 + 32) = v112[0];
    *(_OWORD *)(v45 + 48) = v47;
    long long v48 = v112[3];
    *(_OWORD *)(v45 + 64) = v112[2];
    *(_OWORD *)(v45 + 80) = v48;
    uint64_t v49 = v74;
    uint64_t v50 = WitnessTable;
    uint64_t v51 = v90;
    sub_255C7F738();
    swift_release();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v51);
    *(void *)&v112[0] = v51;
    *((void *)&v112[0] + 1) = v50;
    uint64_t v52 = swift_getOpaqueTypeConformance2();
    uint64_t v53 = v76;
    sub_255B4BFB8();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v53);
    uint64_t v54 = sub_255AC90A4((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    uint64_t v110 = v52;
    uint64_t v111 = v54;
    uint64_t v55 = v88;
    swift_getWitnessTable();
    uint64_t v56 = v79;
    sub_255A20F54(v26);
    uint64_t v57 = *(void (**)(char *, uint64_t))(v81 + 8);
    v57(v26, v55);
    sub_255A20F54(v56);
    uint64_t v58 = swift_getWitnessTable();
    unint64_t v59 = sub_255AC9050();
    uint64_t v108 = v58;
    unint64_t v109 = v59;
    uint64_t v106 = swift_getWitnessTable();
    uint64_t v107 = v54;
    uint64_t v60 = v86;
    swift_getWitnessTable();
    sub_255A44128((uint64_t)v26, v60, v55);
    v57(v26, v55);
    v57(v56, v55);
  }
  uint64_t v61 = swift_getWitnessTable();
  unint64_t v62 = sub_255AC9050();
  uint64_t v104 = v61;
  unint64_t v105 = v62;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = sub_255AC90A4((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v102 = v63;
  uint64_t v103 = v64;
  uint64_t v65 = swift_getWitnessTable();
  *(void *)&v112[0] = v90;
  *((void *)&v112[0] + 1) = WitnessTable;
  uint64_t v100 = swift_getOpaqueTypeConformance2();
  uint64_t v101 = v64;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v98 = v65;
  uint64_t v99 = v66;
  uint64_t v67 = v83;
  swift_getWitnessTable();
  uint64_t v68 = v87;
  sub_255A20F54(v87);
  return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v68, v67);
}

uint64_t sub_255AC524C(uint64_t result)
{
  if (*(unsigned char *)(result + 48) != 2)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 64))
    {
      if (qword_26B29B3F0 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_255C7D898();
      __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA4E8);
      uint64_t v3 = sub_255C7D878();
      os_log_type_t v4 = sub_255C80C08();
      if (os_log_type_enabled(v3, v4))
      {
        long long v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v5 = 0;
        _os_log_impl(&dword_255A00000, v3, v4, "Dismissing selected content because artwork was tapped", v5, 2u);
        MEMORY[0x25A297C00](v5, -1, -1);
      }

      uint64_t v6 = *(void *)(v1 + 88);
      uint64_t v7 = *(void *)(v1 + 96);
      char v8 = *(unsigned char *)(v1 + 104);
      sub_255AC86F0();
      uint64_t v9 = (void (*)(void *, char *))sub_255ABBF5C(v6, v7, v8);
      sub_255ABFD70();
      v11[0] = 0;
      v11[1] = 0;
      char v10 = 1;
      v9(v11, &v10);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_255AC53B8@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7 = a1 & 1;
  uint64_t v8 = sub_255C7FC78();
  uint64_t v9 = a3 & 1;
  sub_255AC0394(a2, v9);
  uint64_t v10 = sub_255ABBAE0(a2, v9);
  sub_255AC0398(a2, v9);
  LODWORD(v9) = sub_255C7EF68();
  uint64_t result = sub_255C80378();
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 8) = v7;
  *(void *)(a4 + 16) = v10;
  *(_DWORD *)(a4 + 24) = v9;
  *(void *)(a4 + 32) = v12;
  *(void *)(a4 + 40) = v13;
  *(unsigned char *)(a4 + 48) = 1;
  return result;
}

uint64_t sub_255AC5450@<X0>(uint64_t a1@<X8>)
{
  return sub_255AC53B8(*(unsigned char *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_255AC5468()
{
  uint64_t v24 = sub_255C7FC78();
  sub_255C801F8();
  _s18ArtworkPlaceholderVMa();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  sub_255C80E88();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255C7F588();
  swift_release();
  uint64_t v0 = v17;
  uint64_t v1 = v18;
  char v2 = v19;
  uint64_t v3 = v20;
  uint64_t v4 = v21;
  char v5 = v22;
  v12[0] = v16;
  v12[1] = v17;
  void v12[2] = v18;
  v12[3] = v19;
  v12[4] = v20;
  v12[5] = v21;
  char v13 = v22;
  long long v14 = v23;
  sub_255C7EBB8();
  sub_255C7E458();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(v12);
  swift_release();
  sub_255A1D730(v0, v1, v2, v3, v4, v5);
  uint64_t v6 = v25;
  uint64_t v7 = v26;
  LOBYTE(v3) = v27;
  uint64_t v8 = v28;
  uint64_t v9 = v29;
  char v10 = v30;
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  uint64_t v19 = v27;
  uint64_t v20 = v28;
  uint64_t v21 = v29;
  char v22 = v30;
  long long v23 = v31;
  sub_255A20F54(&v16);
  swift_release();
  return sub_255A1D730(v6, v7, v3, v8, v9, v10);
}

uint64_t sub_255AC56F8(uint64_t a1, char a2)
{
  uint64_t v3 = a2 & 1;
  sub_255AC0394(a1, v3);
  sub_255AB99AC(a1, v3, &v44);
  sub_255AC0398(a1, v3);
  if (v44 == 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    LOBYTE(v44) = 0;
    uint64_t v45 = KeyPath;
    LOBYTE(v46) = 0;
    uint64_t v5 = _s18ArtworkPlaceholderVMa();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_255A20F54(&v44);
    sub_255AC0398(KeyPath, 0);
    uint64_t v7 = swift_getKeyPath();
    LOBYTE(v44) = 1;
    uint64_t v45 = v7;
    LOBYTE(v46) = 0;
    sub_255A20F54(&v44);
    sub_255AC0398(v7, 0);
    char v29 = v36;
    uint64_t v30 = v37;
    unsigned __int8 v31 = v38;
    uint64_t v8 = v34;
    uint64_t v9 = v35;
    char v26 = v33;
    uint64_t v27 = v34;
    unsigned __int8 v28 = v35;
    v32[0] = &v29;
    v32[1] = &v26;
    sub_255AC0394(v37, v38);
    sub_255AC0394(v8, v9);
    v25[0] = v5;
    v25[1] = v5;
    uint64_t v23 = WitnessTable;
    uint64_t v24 = WitnessTable;
    sub_255AF64A0((uint64_t)v32, 2uLL, (uint64_t)v25);
    sub_255AC0398(v34, v35);
    sub_255AC0398(v37, v38);
    sub_255AC0398(v27, v28);
    sub_255AC0398(v30, v31);
    uint64_t v10 = v41;
    uint64_t v11 = BYTE8(v41);
    uint64_t v12 = *((void *)&v42 + 1);
    uint64_t v13 = v43;
    v21[0] = v40;
    v21[1] = v41;
    long long v21[2] = BYTE8(v41);
    v21[3] = v42;
    v21[4] = *((void *)&v42 + 1);
    unsigned __int8 v22 = v43;
    swift_getTupleTypeMetadata2();
    sub_255C80318();
    swift_getWitnessTable();
    sub_255A97640((uint64_t)v21, (uint64_t)&v44);
    sub_255AC0398(v10, v11);
    sub_255AC0398(v12, v13);
    uint64_t v14 = v44;
    uint64_t v15 = v45;
    uint64_t v16 = v46;
    uint64_t v17 = v47;
    uint64_t v18 = v48;
    char v19 = v49;
    _s18ArtworkPlaceholderVMa();
  }
  else
  {
    uint64_t v40 = 2;
    _s18ArtworkPlaceholderVMa();
    long long v41 = 0u;
    long long v42 = 0u;
    unsigned __int8 v43 = 0;
    swift_getTupleTypeMetadata2();
    sub_255C80318();
    swift_getWitnessTable();
    sub_255A97640((uint64_t)&v40, (uint64_t)&v44);
    uint64_t v14 = v44;
    uint64_t v15 = v45;
    uint64_t v16 = v46;
    uint64_t v17 = v47;
    uint64_t v18 = v48;
    char v19 = v49;
  }
  uint64_t v44 = v14;
  uint64_t v45 = v15;
  uint64_t v46 = v16;
  uint64_t v47 = v17;
  uint64_t v48 = v18;
  char v49 = v19;
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  sub_255C80E88();
  uint64_t v39 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(&v44);
  return sub_255A1D730(v14, v15, v16, v17, v18, v19);
}

uint64_t sub_255AC5ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_255AC5B10()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255AC5B88()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCCC11MediaCoreUI19NowPlayingViewModel7Artwork17BackgroundArtwork__snapshotImage;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B508);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255AC5C2C@<X0>(uint64_t *a1@<X8>)
{
  _s7ArtworkC17BackgroundArtworkCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255AC5C6C(char *a1, char *a2)
{
  return sub_255AF6994(*a1, *a2);
}

uint64_t sub_255AC5C78()
{
  return sub_255C815B8();
}

uint64_t sub_255AC5D00()
{
  sub_255C806B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255AC5D74()
{
  return sub_255C815B8();
}

uint64_t sub_255AC5DF8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_255C81338();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_255AC5E58(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746C7561666564;
  if (*v1) {
    uint64_t v2 = 0x756F72676B636162;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA0000000000646ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_255AC5E9C()
{
  qword_26B299248 = (uint64_t)&type metadata for NowPlayingStandardArtworkTreatment;
  qword_26B299250 = sub_255AC7728();
  uint64_t result = sub_255AC6438((uint64_t)&unk_2704786F8);
  qword_26B299230 = result;
  return result;
}

uint64_t sub_255AC5EE4@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B299260 != -1) {
    swift_once();
  }
  return sub_255A53C38((uint64_t)&qword_26B299230, a1);
}

uint64_t sub_255AC5F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  swift_beginAccess();
  sub_255A53C38(a2 + 64, (uint64_t)v11);
  char v8 = NowPlayingArtworkTreatment.isEqual(_:)((uint64_t)v11, a3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  if ((v8 & 1) == 0)
  {
    _s7ArtworkCMa();
    sub_255AC90A4(&qword_26B299F60, v9, (void (*)(uint64_t))_s7ArtworkCMa);
    sub_255C7D9E8();
    sub_255C7DA48();
    swift_release();
    sub_255C7DA18();
  }
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(a2 + 64);
  sub_255A524B4(&v12, a2 + 64);
  return swift_endAccess();
}

uint64_t sub_255AC60A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  swift_beginAccess();
  sub_255A53C38(a2 + 16, (uint64_t)v11);
  uint64_t v9 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  LOBYTE(v9) = NowPlayingArtworkTreatment.isEqual(_:)((uint64_t)&v13, v9);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  if ((v9 & 1) == 0) {
    sub_255AC61D8((uint64_t)boxed_opaque_existential_1, *(void *)(a2 + 56), a2, a3, a4);
  }
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(a2 + 16);
  sub_255A524B4(&v13, a2 + 16);
  return swift_endAccess();
}

uint64_t sub_255AC61D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v21[3] = a4;
  v21[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  if (a2 == 1
    && (sub_255A53C38((uint64_t)v21, (uint64_t)v19),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B29AE08),
        swift_dynamicCast()))
  {
    swift_bridgeObjectRelease();

    sub_255AC6438((uint64_t)&unk_27047D6C8);
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_255C3A584(v11, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_255A53C38((uint64_t)v21, (uint64_t)v19);
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v16 + 16))(v15, v13);
    sub_255AC5F44((uint64_t)v15, a3, a4, a5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
}

uint64_t _s11MediaCoreUI42NowPlayingBackgroundStaticArtworkTreatmentV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = (void *)a1[1];
  unint64_t v3 = (void *)a2[1];
  if (sub_255AC0F14(*a1, *a2))
  {
    if (v2)
    {
      if (v3)
      {
        sub_255A43740(0, (unint64_t *)&qword_26B29FCA0);
        id v4 = v3;
        id v5 = v2;
        char v6 = sub_255C80DD8();

        if (v6) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_255AC6438(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF78);
    uint64_t v3 = sub_255C810C8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_255C81578();
      sub_255C81588();
      uint64_t result = sub_255C815B8();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_255AC6580()
{
  unint64_t result = qword_26B2990F0[0];
  if (!qword_26B2990F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B2990F0);
  }
  return result;
}

unint64_t sub_255AC65D4(uint64_t a1)
{
  unint64_t result = sub_255AC65FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255AC65FC()
{
  unint64_t result = qword_26B29AF58;
  if (!qword_26B29AF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29AF58);
  }
  return result;
}

unint64_t sub_255AC6650(uint64_t a1)
{
  unint64_t result = sub_255AC6678();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255AC6678()
{
  unint64_t result = qword_269F23230;
  if (!qword_269F23230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23230);
  }
  return result;
}

unint64_t sub_255AC66CC(uint64_t a1)
{
  unint64_t result = sub_255AC66F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255AC66F4()
{
  unint64_t result = qword_269F23238;
  if (!qword_269F23238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23238);
  }
  return result;
}

unint64_t sub_255AC6748(uint64_t a1)
{
  unint64_t result = sub_255AC6770();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255AC6770()
{
  unint64_t result = qword_269F23240;
  if (!qword_269F23240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23240);
  }
  return result;
}

unint64_t sub_255AC67C4(uint64_t a1)
{
  unint64_t result = sub_255AC67EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255AC67EC()
{
  unint64_t result = qword_269F23248;
  if (!qword_269F23248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23248);
  }
  return result;
}

unint64_t sub_255AC6840(uint64_t a1)
{
  unint64_t result = sub_255AC6868();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255AC6868()
{
  unint64_t result = qword_269F23250[0];
  if (!qword_269F23250[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F23250);
  }
  return result;
}

uint64_t _s7ArtworkCMa()
{
  return self;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork()
{
  return &type metadata for NowPlayingArtwork;
}

uint64_t getEnumTagSinglePayload for NowPlayingArtwork.Placement(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NowPlayingArtwork.Placement(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255AC6A4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork.Placement()
{
  return &type metadata for NowPlayingArtwork.Placement;
}

uint64_t dispatch thunk of NowPlayingArtworkTreatment.placements(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for NowPlayingStandardArtworkTreatment()
{
  return &type metadata for NowPlayingStandardArtworkTreatment;
}

void *initializeBufferWithCopyOfBuffer for MicaBundle(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for MicaBundle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  int v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for NowPlayingBackgroundStaticArtworkTreatment(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[1];
  uint64_t v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for MicaBundle(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingBackgroundStaticArtworkTreatment()
{
  return &type metadata for NowPlayingBackgroundStaticArtworkTreatment;
}

uint64_t destroy for NowPlayingVideoPlayerArtworkTreatment(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s11MediaCoreUI37NowPlayingVideoPlayerArtworkTreatmentVwCP_0(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NowPlayingVideoPlayerArtworkTreatment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NowPlayingVideoPlayerArtworkTreatment(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientDefinedMotionCacheIndices(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientDefinedMotionCacheIndices(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingVideoPlayerArtworkTreatment()
{
  return &type metadata for NowPlayingVideoPlayerArtworkTreatment;
}

void *assignWithCopy for NowPlayingMPCVideoArtworkTreatment(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingMPCVideoArtworkTreatment()
{
  return &type metadata for NowPlayingMPCVideoArtworkTreatment;
}

uint64_t sub_255AC6E30()
{
  return _s7ArtworkC17BackgroundArtworkCMa();
}

uint64_t _s7ArtworkC17BackgroundArtworkCMa()
{
  uint64_t result = qword_26B299DB0;
  if (!qword_26B299DB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255AC6E84()
{
  sub_255AC6F14();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_255AC6F14()
{
  if (!qword_26B29B510)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BF18);
    unint64_t v0 = sub_255C7DAE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29B510);
    }
  }
}

uint64_t sub_255AC6F70(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  sub_255AC0394(*a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_255AC6FB8(uint64_t a1)
{
  return sub_255AC0398(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *sub_255AC6FC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  sub_255AC0394(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  sub_255AC0398(v5, v6);
  return a1;
}

uint64_t *sub_255AC701C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  sub_255AC0398(v5, v6);
  return a1;
}

uint64_t _s24HeaderArtworkPlaceholderVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255AC7074()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AC70B8()
{
  return sub_255AC56F8(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t _s18ArtworkPlaceholderVMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255AC70F0()
{
  unint64_t result = qword_26B299268;
  if (!qword_26B299268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299268);
  }
  return result;
}

uint64_t sub_255AC7144@<X0>(unsigned char *a1@<X8>)
{
  sub_255AC72A0();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AC7194()
{
  return sub_255C7E8D8();
}

uint64_t sub_255AC71E8()
{
  return sub_255C7E8C8();
}

unint64_t sub_255AC724C()
{
  unint64_t result = qword_26B298E38;
  if (!qword_26B298E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298E38);
  }
  return result;
}

unint64_t sub_255AC72A0()
{
  unint64_t result = qword_26B29AD20;
  if (!qword_26B29AD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29AD20);
  }
  return result;
}

uint64_t sub_255AC72FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F23328);
    uint64_t v3 = sub_255C810C8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      char v7 = *(unsigned char *)(v6 + v4);
      sub_255C81578();
      sub_255C7E278();
      sub_255C81598();
      uint64_t result = sub_255C815B8();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      if (((1 << v10) & v12) != 0)
      {
        int v14 = sub_255C7E278();
        uint64_t result = sub_255C7E278();
        if (v14 == result) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          int v16 = sub_255C7E278();
          uint64_t result = sub_255C7E278();
          if (v16 == result) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(*(void *)(v3 + 48) + v10) = v7;
      uint64_t v17 = *(void *)(v3 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v19;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_255AC746C(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_255C812B8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F232E0);
      uint64_t result = sub_255C810C8();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_255C812B8();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x25A2969C0](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    sub_255C7D9C8();
    sub_255AC90A4(&qword_269F232E8, 255, MEMORY[0x263EFDD18]);
    uint64_t result = sub_255C804E8();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_255AC90A4((unint64_t *)&unk_269F232F0, 255, MEMORY[0x263EFDD18]);
      do
      {
        uint64_t result = sub_255C80578();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_255AC7728()
{
  unint64_t result = qword_26B29AF68[0];
  if (!qword_26B29AF68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B29AF68);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkTreatmentKey()
{
  return &type metadata for ArtworkTreatmentKey;
}

uint64_t sub_255AC778C(uint64_t a1)
{
  sub_255AC0398(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  if (*(unsigned char *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  }
  else {
    swift_release();
  }
  if (*(unsigned char *)(a1 + 104))
  {
    if (*(void *)(a1 + 88)) {
      __swift_destroy_boxed_opaque_existential_0(a1 + 64);
    }
  }
  else
  {
    swift_release();
  }
  sub_255A1D054(*(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(unsigned char *)(a1 + 184), *(unsigned char *)(a1 + 185));
  sub_255AC0398(*(void *)(a1 + 192), *(unsigned __int8 *)(a1 + 200));
  sub_255AC0398(*(void *)(a1 + 208), *(unsigned __int8 *)(a1 + 216));
  sub_255A767C8(*(void *)(a1 + 224), *(void *)(a1 + 232), *(unsigned char *)(a1 + 240));
  swift_release();

  return swift_release();
}

uint64_t sub_255AC786C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unsigned __int8 v5 = *((unsigned char *)a2 + 8);
  sub_255AC0394(*a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = (void *)(a1 + 16);
  unint64_t v7 = a2 + 2;
  char v8 = *((unsigned char *)a2 + 56);
  if (v8)
  {
    long long v9 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v9;
    (**(void (***)(void *, void *))(v9 - 8))(v6, v7);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  *(unsigned char *)(a1 + 56) = v8;
  BOOL v10 = a2 + 8;
  if (a2[13])
  {
    uint64_t v11 = (_OWORD *)(a1 + 64);
    uint64_t v12 = a2[11];
    if (v12)
    {
      uint64_t v13 = a2[12];
      *(void *)(a1 + 88) = v12;
      *(void *)(a1 + 96) = v13;
      (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v11, v10);
    }
    else
    {
      long long v14 = *((_OWORD *)a2 + 5);
      *uint64_t v11 = *v10;
      *(_OWORD *)(a1 + 80) = v14;
      *(void *)(a1 + 96) = a2[12];
    }
    *(unsigned char *)(a1 + 104) = 1;
  }
  else
  {
    *(void *)(a1 + 64) = *(void *)v10;
    *(unsigned char *)(a1 + 104) = 0;
    swift_retain();
  }
  uint64_t v15 = a2[14];
  uint64_t v16 = a2[15];
  uint64_t v17 = a2[16];
  uint64_t v18 = a2[17];
  uint64_t v19 = a2[18];
  uint64_t v20 = a2[19];
  uint64_t v21 = a2[20];
  uint64_t v22 = a2[21];
  uint64_t v29 = a2[22];
  char v30 = *((unsigned char *)a2 + 184);
  char v31 = *((unsigned char *)a2 + 185);
  sub_255A1CFDC(v15, v16, v17, v18, v19, v20, v21, v22, v29, v30, v31);
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = v20;
  *(void *)(a1 + 160) = v21;
  *(void *)(a1 + 168) = v22;
  *(void *)(a1 + 176) = v29;
  *(unsigned char *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 185) = v31;
  uint64_t v23 = a2[24];
  LOBYTE(v16) = *((unsigned char *)a2 + 200);
  sub_255AC0394(v23, v16);
  *(void *)(a1 + 192) = v23;
  *(unsigned char *)(a1 + 200) = v16;
  uint64_t v24 = a2[26];
  LOBYTE(v16) = *((unsigned char *)a2 + 216);
  sub_255AC0394(v24, v16);
  *(void *)(a1 + 208) = v24;
  *(unsigned char *)(a1 + 216) = v16;
  uint64_t v25 = a2[28];
  uint64_t v26 = a2[29];
  LOBYTE(v17) = *((unsigned char *)a2 + 240);
  sub_255A7663C(v25, v26, v17);
  *(void *)(a1 + 224) = v25;
  *(void *)(a1 + 232) = v26;
  *(unsigned char *)(a1 + 240) = v17;
  uint64_t v27 = a2[32];
  *(void *)(a1 + 248) = a2[31];
  *(void *)(a1 + 256) = v27;
  LOBYTE(v27) = *((unsigned char *)a2 + 272);
  *(void *)(a1 + 264) = a2[33];
  *(unsigned char *)(a1 + 272) = v27;
  *(unsigned char *)(a1 + 273) = *((unsigned char *)a2 + 273);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *sub_255AC7AB8(uint64_t *a1, uint64_t *a2)
{
  char v49 = (char *)(a2 + 34);
  uint64_t v4 = *a2;
  unsigned __int8 v5 = *((unsigned char *)a2 + 8);
  sub_255AC0394(*a2, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((unsigned char *)a1 + 8) = v5;
  sub_255AC0398(v6, v7);
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)(a1 + 2), &qword_26B29B580);
    char v8 = *((unsigned char *)a2 + 56);
    if (v8)
    {
      uint64_t v9 = a2[5];
      a1[5] = v9;
      a1[6] = a2[6];
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
    }
    else
    {
      a1[2] = a2[2];
      swift_retain();
    }
    *((unsigned char *)a1 + 56) = v8;
    BOOL v10 = (long long *)(a2 + 8);
    sub_255A095A4((uint64_t)(a1 + 8), &qword_26B29B5B8);
    if (a2[13])
    {
      uint64_t v11 = a2[11];
      if (v11)
      {
        a1[11] = v11;
        a1[12] = a2[12];
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)(a1 + 8), (uint64_t)(a2 + 8));
      }
      else
      {
        long long v12 = *v10;
        long long v13 = *((_OWORD *)a2 + 5);
        a1[12] = a2[12];
        *((_OWORD *)a1 + 4) = v12;
        *((_OWORD *)a1 + 5) = v13;
      }
      *((unsigned char *)a1 + 104) = 1;
    }
    else
    {
      a1[8] = *(void *)v10;
      *((unsigned char *)a1 + 104) = 0;
      swift_retain();
    }
  }
  uint64_t v14 = a2[14];
  uint64_t v15 = a2[15];
  uint64_t v16 = a2[16];
  uint64_t v17 = a2[17];
  uint64_t v18 = a2[18];
  uint64_t v19 = a2[19];
  uint64_t v20 = a2[20];
  uint64_t v21 = a2[21];
  uint64_t v46 = a2[22];
  char v47 = *((unsigned char *)a2 + 184);
  char v48 = *((unsigned char *)a2 + 185);
  sub_255A1CFDC(v14, v15, v16, v17, v18, v19, v20, v21, v46, v47, v48);
  uint64_t v22 = a1[14];
  uint64_t v23 = a1[15];
  uint64_t v24 = a1[16];
  uint64_t v25 = a1[17];
  uint64_t v26 = a1[18];
  uint64_t v27 = a1[19];
  uint64_t v28 = a1[20];
  uint64_t v29 = a1[21];
  uint64_t v30 = a1[22];
  char v31 = *((unsigned char *)a1 + 184);
  char v32 = *((unsigned char *)a1 + 185);
  a1[14] = v14;
  a1[15] = v15;
  a1[16] = v16;
  a1[17] = v17;
  a1[18] = v18;
  a1[19] = v19;
  a1[20] = v20;
  a1[21] = v21;
  a1[22] = v46;
  *((unsigned char *)a1 + 184) = v47;
  *((unsigned char *)a1 + 185) = v48;
  sub_255A1D054(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v33 = a2[24];
  LOBYTE(v15) = *((unsigned char *)a2 + 200);
  sub_255AC0394(v33, v15);
  uint64_t v34 = a1[24];
  uint64_t v35 = *((unsigned __int8 *)a1 + 200);
  a1[24] = v33;
  *((unsigned char *)a1 + 200) = v15;
  sub_255AC0398(v34, v35);
  uint64_t v36 = a2[26];
  LOBYTE(v15) = *((unsigned char *)a2 + 216);
  sub_255AC0394(v36, v15);
  uint64_t v37 = a1[26];
  uint64_t v38 = *((unsigned __int8 *)a1 + 216);
  a1[26] = v36;
  *((unsigned char *)a1 + 216) = v15;
  sub_255AC0398(v37, v38);
  uint64_t v39 = a2[28];
  uint64_t v40 = a2[29];
  LOBYTE(v16) = *((unsigned char *)a2 + 240);
  sub_255A7663C(v39, v40, v16);
  uint64_t v41 = a1[28];
  uint64_t v42 = a1[29];
  char v43 = *((unsigned char *)a1 + 240);
  a1[28] = v39;
  a1[29] = v40;
  *((unsigned char *)a1 + 240) = v16;
  sub_255A767C8(v41, v42, v43);
  a1[31] = a2[31];
  swift_retain();
  swift_release();
  a1[32] = a2[32];
  char v44 = *v49;
  a1[33] = a2[33];
  *((unsigned char *)a1 + 272) = v44;
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + 273) = v49[1];
  return a1;
}

uint64_t *sub_255AC7DB8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = (char *)(a2 + 34);
  uint64_t v5 = *a2;
  char v6 = *((unsigned char *)a2 + 8);
  uint64_t v7 = *a1;
  uint64_t v8 = *((unsigned __int8 *)a1 + 8);
  *a1 = v5;
  *((unsigned char *)a1 + 8) = v6;
  sub_255AC0398(v7, v8);
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)(a1 + 2), &qword_26B29B580);
    long long v9 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v9;
    *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
    sub_255A095A4((uint64_t)(a1 + 8), &qword_26B29B5B8);
    long long v10 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v10;
    *(_OWORD *)((char *)a1 + 89) = *(_OWORD *)((char *)a2 + 89);
  }
  uint64_t v11 = a2[22];
  char v12 = *((unsigned char *)a2 + 184);
  char v13 = *((unsigned char *)a2 + 185);
  uint64_t v14 = a1[14];
  uint64_t v15 = a1[15];
  uint64_t v16 = a1[16];
  uint64_t v17 = a1[17];
  uint64_t v18 = a1[18];
  uint64_t v19 = a1[19];
  uint64_t v20 = a1[20];
  uint64_t v21 = a1[21];
  uint64_t v22 = a1[22];
  char v23 = *((unsigned char *)a1 + 184);
  char v24 = *((unsigned char *)a1 + 185);
  long long v25 = *((_OWORD *)a2 + 8);
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 8) = v25;
  long long v26 = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  *((_OWORD *)a1 + 10) = v26;
  a1[22] = v11;
  *((unsigned char *)a1 + 184) = v12;
  *((unsigned char *)a1 + 185) = v13;
  sub_255A1D054(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  char v27 = *((unsigned char *)a2 + 200);
  uint64_t v28 = a1[24];
  uint64_t v29 = *((unsigned __int8 *)a1 + 200);
  a1[24] = a2[24];
  *((unsigned char *)a1 + 200) = v27;
  sub_255AC0398(v28, v29);
  char v30 = *((unsigned char *)a2 + 216);
  uint64_t v31 = a1[26];
  uint64_t v32 = *((unsigned __int8 *)a1 + 216);
  a1[26] = a2[26];
  *((unsigned char *)a1 + 216) = v30;
  sub_255AC0398(v31, v32);
  char v33 = *((unsigned char *)a2 + 240);
  uint64_t v34 = a1[28];
  uint64_t v35 = a1[29];
  char v36 = *((unsigned char *)a1 + 240);
  *((_OWORD *)a1 + 14) = *((_OWORD *)a2 + 14);
  *((unsigned char *)a1 + 240) = v33;
  sub_255A767C8(v34, v35, v36);
  a1[31] = a2[31];
  swift_release();
  char v37 = *v4;
  *((_OWORD *)a1 + 16) = *((_OWORD *)a2 + 16);
  *((unsigned char *)a1 + 272) = v37;
  swift_release();
  *((unsigned char *)a1 + 273) = v4[1];
  return a1;
}

uint64_t sub_255AC7F30(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 274)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 248);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_255AC7F8C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 272) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 274) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 274) = 0;
    }
    if (a2) {
      *(void *)(result + 248) = a2;
    }
  }
  return result;
}

uint64_t _s11ArtworkViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255AC8044(uint64_t a1)
{
  return sub_255AC0398(*(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_255AC8054(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a2 + 16);
  sub_255AC0394(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return a1;
}

uint64_t sub_255AC80A4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a2 + 16);
  sub_255AC0394(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  sub_255AC0398(v5, v6);
  return a1;
}

uint64_t sub_255AC8100(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  sub_255AC0398(v5, v6);
  return a1;
}

uint64_t sub_255AC8148(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberLoadingConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_255AC81D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AC82EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AC8330()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s31PrimaryArtworkViewOrVideoPlayerVMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255AC838C()
{
  unint64_t result = qword_26B29B788;
  if (!qword_26B29B788)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B798);
    sub_255A09998((unint64_t *)&unk_26B29BA30, &qword_26B29BA40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B788);
  }
  return result;
}

unint64_t sub_255AC842C()
{
  unint64_t result = qword_26B29BF60;
  if (!qword_26B29BF60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29BF50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29BF60);
  }
  return result;
}

uint64_t sub_255AC8498()
{
  return sub_255AC3B90(*(void **)(v0 + 32));
}

unint64_t sub_255AC84A4()
{
  unint64_t result = qword_26B299078;
  if (!qword_26B299078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299078);
  }
  return result;
}

uint64_t sub_255AC8510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkClipShape(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AC8574@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255C7E7F8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255AC85A4()
{
  return sub_255C7E808();
}

uint64_t sub_255AC85CC()
{
  return swift_deallocObject();
}

void sub_255AC8604(uint64_t a1)
{
  sub_255AC3B2C(a1, *(void **)(v1 + 16));
}

unint64_t sub_255AC862C()
{
  unint64_t result = qword_269F23310;
  if (!qword_269F23310)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B298528);
    sub_255A09998(&qword_269F23318, &qword_26B298520);
    sub_255A09998(&qword_269F23320, &qword_26B29ECF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23310);
  }
  return result;
}

uint64_t sub_255AC86F0()
{
  return swift_retain();
}

uint64_t sub_255AC86FC(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return sub_255ABFD70();
}

uint64_t sub_255AC874C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(v2 + 49);
  uint64_t v5 = *(void *)(v2 + 64);
  *(void *)(a1 + 56) = *(void *)(v2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(v2 + 80);
  *(void *)(a1 + 72) = *(void *)(v2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(v2 + 88);
  uint64_t v8 = *(void *)(v2 + 96);
  LOBYTE(v2) = *(unsigned char *)(v2 + 104);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_255AC86F0();
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = v2;
  return a1;
}

uint64_t sub_255AC880C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(v2 + 49);
  *(void *)(a1 + 56) = *(void *)(v2 + 56);
  *(void *)(a1 + 64) = *(void *)(v2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(v2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 88);
  uint64_t v5 = *(void *)(v2 + 96);
  LOBYTE(v2) = *(unsigned char *)(v2 + 104);
  sub_255AC86F0();
  *(void *)(a1 + 88) = v4;
  *(void *)(a1 + 96) = v5;
  *(unsigned char *)(a1 + 104) = v2;
  sub_255ABFD70();
  return a1;
}

uint64_t sub_255AC88C4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 96);
  char v6 = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = v5;
  *(unsigned char *)(a1 + 104) = v6;
  sub_255ABFD70();
  return a1;
}

uint64_t sub_255AC8964(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255AC89AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArtworkGeometryID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255AC8AD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkGeometryID()
{
  return &type metadata for ArtworkGeometryID;
}

unint64_t sub_255AC8B10()
{
  unint64_t result = qword_26B29B7A0;
  if (!qword_26B29B7A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B7A8);
    sub_255A09998(&qword_26B29BB38, &qword_26B29BB40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B7A0);
  }
  return result;
}

uint64_t sub_255AC8BB0()
{
  return swift_getWitnessTable();
}

unint64_t sub_255AC8F64()
{
  unint64_t result = qword_26B299080;
  if (!qword_26B299080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299080);
  }
  return result;
}

uint64_t sub_255AC8FB8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255AC8FFC()
{
  unint64_t result = qword_26B29A5E0;
  if (!qword_26B29A5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A5E0);
  }
  return result;
}

unint64_t sub_255AC9050()
{
  unint64_t result = qword_26B29AD18;
  if (!qword_26B29AD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29AD18);
  }
  return result;
}

uint64_t sub_255AC90A4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255AC90EC@<X0>(uint64_t a1@<X8>)
{
  return sub_255AC46B8(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255AC90F8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255AC9164()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_255ABFD70();

  return swift_deallocObject();
}

uint64_t sub_255AC91B8()
{
  return sub_255AC524C(v0 + 32);
}

uint64_t sub_255AC91C4()
{
  return swift_getWitnessTable();
}

_OWORD *sub_255AC94A8(unsigned int a1, unint64_t a2, unint64_t a3, OpaqueAudioQueue *a4, uint64_t a5, double a6)
{
  uint64_t v46 = a4;
  uint64_t v7 = v6;
  uint64_t v49 = a5;
  unsigned int v48 = a1;
  uint64_t v11 = sub_255C7D898();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v7[9] = 0u;
  uint64_t v15 = (uint64_t)(v7 + 9);
  *((unsigned char *)v7 + 136) = 0;
  *((void *)v7 + 14) = 0;
  *((void *)v7 + 15) = 0;
  v7[10] = 0u;
  if (qword_26B29D050 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v11, (uint64_t)qword_26B2AA560);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  uint64_t v17 = sub_255C7D878();
  os_log_type_t v18 = sub_255C80C08();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = v7;
    unint64_t v20 = a2;
    unint64_t v21 = a3;
    uint64_t v22 = v19;
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_255A00000, v17, v18, "AudioTapQueueProcessor initialized, will enqueue buffer", v19, 2u);
    char v23 = v22;
    a3 = v21;
    a2 = v20;
    uint64_t v7 = v45;
    MEMORY[0x25A297C00](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  type metadata accessor for AudioTapCallbackWrapper();
  char v24 = (void *)swift_allocObject();
  uint64_t v25 = v49;
  v24[2] = v46;
  v24[3] = v25;
  swift_retain();
  uint64_t v26 = v48;
  uint64_t v27 = v47;
  uint64_t v28 = (void *)sub_255AC039C(a6, v48, a2);
  if (v27)
  {
    swift_release();
LABEL_9:
    sub_255A7D6B8(v15);
    type metadata accessor for AudioTapQueueProcessor();
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    return v7;
  }
  uint64_t v29 = v28;
  unint64_t v47 = a2;
  AudioQueueRef v30 = sub_255AC06B0(v28, v24);
  uint64_t v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFC0A0]), sel_initProcessTapWithFormat_PID_, v29, v26);
  uint64_t v46 = v30;
  uint64_t v32 = v31;
  id v33 = objc_allocWithZone(MEMORY[0x263EFC098]);
  uint64_t v45 = v32;
  uint64_t v34 = v32;
  uint64_t v35 = v46;
  id v44 = objc_msgSend(v33, sel_initWithTapDescription_, v34);
  OSStatus v36 = AudioQueueSetProperty(v35, 0x71746F62u, v44, 8u);
  if (v36)
  {
    OSStatus v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F23200);
    sub_255AC0654();
    swift_allocError();
    *(unsigned char *)uint64_t v38 = 2;
    *(_DWORD *)(v38 + 4) = v37;
    swift_willThrow();
    swift_release();

    goto LABEL_9;
  }

  uint64_t v40 = sub_255AC04C8(v29, v35, v26, v47, a3);
  *((void *)v7 + 14) = v35;
  *((void *)v7 + 15) = v40;
  *((void *)v7 + 16) = v24;
  swift_retain();
  OSStatus v41 = AudioQueueEnqueueBuffer(v35, v40, 0, 0);
  if (v41)
  {
    OSStatus v42 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F23200);
    sub_255AC0654();
    swift_allocError();
    *(unsigned char *)uint64_t v43 = 4;
    *(_DWORD *)(v43 + 4) = v42;
    swift_willThrow();
    swift_release();

    swift_release();
  }
  else
  {
    swift_release();
  }
  swift_release();
  return v7;
}

uint64_t sub_255AC9910()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v36 - v7;
  long long v9 = *(OpaqueAudioQueue **)(v1 + 112);
  if (v9) {
    AudioQueueStop(v9, 1u);
  }
  if (qword_26B29D050 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA560);
  uint64_t v39 = *(NSObject **)(v3 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v39)(v8, v10, v2);
  uint64_t v11 = sub_255C7D878();
  os_log_type_t v12 = sub_255C80C08();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = v6;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_255A00000, v11, v12, "AudioTapQueueProcessor deinitialized, will destroy audio tap setup", v14, 2u);
    uint64_t v15 = v14;
    unsigned int v6 = v13;
    MEMORY[0x25A297C00](v15, -1, -1);
  }

  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v8, v2);
  uint64_t v17 = *(OpaqueAudioQueue **)(v1 + 112);
  if (v17)
  {
    os_log_type_t v18 = *(AudioQueueBuffer **)(v1 + 120);
    if (v18 && (OSStatus v19 = AudioQueueFreeBuffer(*(AudioQueueRef *)(v1 + 112), v18)) != 0)
    {
      OSStatus v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F23200);
      sub_255AC0654();
      uint64_t v22 = (void *)swift_allocError();
      char v23 = 5;
    }
    else
    {
      OSStatus v24 = AudioQueueDispose(v17, 0);
      if (!v24) {
        goto LABEL_17;
      }
      OSStatus v20 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F23200);
      sub_255AC0654();
      uint64_t v22 = (void *)swift_allocError();
      char v23 = 7;
    }
    *(unsigned char *)uint64_t v21 = v23;
    *(_DWORD *)(v21 + 4) = v20;
    swift_willThrow();
    ((void (*)(char *, uint64_t, uint64_t))v39)(v6, v10, v2);
    id v25 = v22;
    id v26 = v22;
    uint64_t v27 = sub_255C7D878();
    os_log_type_t v28 = sub_255C80C08();
    uint64_t v39 = v27;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      AudioQueueRef v30 = (void *)swift_slowAlloc();
      OSStatus v37 = v16;
      uint64_t v38 = v6;
      *(_DWORD *)uint64_t v29 = 138412290;
      id v31 = v22;
      uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v40 = v32;
      uint64_t v16 = v37;
      unsigned int v6 = v38;
      sub_255C80F18();
      *AudioQueueRef v30 = v32;
      id v33 = v30;

      uint64_t v34 = v39;
      _os_log_impl(&dword_255A00000, v39, v28, "AudioTapQueueProcessor error during audio tap setup destruction: %@", v29, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F27D60);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v33, -1, -1);
      MEMORY[0x25A297C00](v29, -1, -1);
    }
    else
    {
    }
    v16(v6, v2);
  }
LABEL_17:
  swift_release();
  sub_255A7D6B8(v1 + 144);
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_255AC9D3C()
{
  sub_255AC9910();

  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for AudioTapQueueProcessor()
{
  return self;
}

BOOL static ApproximatelyEquatable.!=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((*(uint64_t (**)(void))(a4 + 8))() & 1) == 0;
}

uint64_t static ApproximatelyEquatable<>.==~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v21[0] = a2;
  v21[1] = a1;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v21 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v21 - v14;
  sub_255C804D8();
  uint64_t v16 = *(void *)(*(void *)(a5 + 16) + 8);
  long long v21[2] = a3;
  v21[3] = v16;
  v21[4] = a5;
  uint64_t KeyPath = swift_getKeyPath();
  os_log_type_t v18 = (void *)swift_allocObject();
  void v18[2] = v16;
  void v18[3] = a5;
  v18[4] = KeyPath;
  sub_255C804B8();
  sub_255C80AD8();
  OSStatus v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, a3);
  LOBYTE(KeyPath) = AdditiveArithmetic.isApproximatelyEqual<A>(to:absoluteTolerance:relativeTolerance:norm:)(v21[0], (uint64_t)v13, (uint64_t)v15, (void (*)(uint64_t))sub_255ACA030, (uint64_t)v18, a3, a3, *(void *)(v16 + 8), a5);
  v19(v13, a3);
  v19(v15, a3);
  swift_release();
  return KeyPath & 1;
}

uint64_t sub_255AC9FD8()
{
  return 24;
}

__n128 sub_255AC9FE4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_255AC9FF8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255ACA030(uint64_t a1)
{
  return j__swift_getAtKeyPath(a1, v1[4], v1[2], v1[3]);
}

BOOL sub_255ACA03C(double *a1, double *a2, uint64_t a3, uint64_t a4)
{
  return sub_255ACABC4(a1, a2, a3, a4, (uint64_t (*)(double, double, double, double, double, double, double, double))_sSo12UIEdgeInsetsV11MediaCoreUIE3eetoiySbAB_ABtFZ_0);
}

BOOL sub_255ACA054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ApproximatelyEquatable.!=~ infix(_:_:)(a1, a2, a3, a4);
}

uint64_t static ApproximatelyComparable<>.<=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_255ACA100(a1, a2, a3, a4, a5);
}

BOOL sub_255ACA088(double a1, double a2)
{
  if (a2 <= a1) {
    return 1;
  }
  double v2 = vabdd_f64(a1, a2);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0) {
    return 0;
  }
  double v4 = fabs(a1);
  double v5 = fabs(a2);
  if (v4 <= v5) {
    double v4 = v5;
  }
  return v2 <= fmax(v4 * 2.22044605e-16, COERCE_DOUBLE(1));
}

uint64_t static ApproximatelyComparable<>.>=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_255ACA100(a1, a2, a3, a4, a5);
}

uint64_t sub_255ACA100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v22 - v14;
  char v17 = v16(v13);
  os_log_type_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v15, a1, a3);
  v18(v12, a2, a3);
  if (v17) {
    char v19 = 1;
  }
  else {
    char v19 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t))(a5 + 8))(v15, v12, a3, a5);
  }
  OSStatus v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v12, a3);
  v20(v15, a3);
  return v19 & 1;
}

uint64_t static Optional<A>.==~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v7 = *(void **)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v29 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v28 = (char *)&v27 - v10;
  uint64_t v11 = sub_255C80E88();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = (char *)&v27 + *(int *)(v13 + 56) - v14;
  uint64_t v17 = *(void *)(v11 - 8);
  os_log_type_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18((char *)&v27 - v14, a1, v11);
  v18(v16, a2, v11);
  char v19 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  LODWORD(a2) = v19(v15, 1, a3);
  int v20 = v19(v16, 1, a3);
  if (a2 != 1)
  {
    if (v20 != 1)
    {
      uint64_t v22 = (void (*)(char *, char *, uint64_t))v7[4];
      char v23 = v28;
      v22(v28, v15, a3);
      OSStatus v24 = v29;
      v22(v29, v16, a3);
      char v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 8))(v23, v24, a3);
      id v25 = (void (*)(char *, uint64_t))v7[1];
      v25(v24, a3);
      v25(v23, a3);
      return v21 & 1;
    }
    ((void (*)(char *, uint64_t))v7[1])(v15, a3);
    goto LABEL_7;
  }
  if (v20 != 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v11);
LABEL_7:
    char v21 = 0;
    return v21 & 1;
  }
  char v21 = 1;
  return v21 & 1;
}

uint64_t sub_255ACA56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>.==~ infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t static Optional<A>.<=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v7 = *(void **)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v29 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v28 = (char *)&v27 - v10;
  uint64_t v11 = sub_255C80E88();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = (char *)&v27 + *(int *)(v13 + 56) - v14;
  uint64_t v17 = *(void *)(v11 - 8);
  os_log_type_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18((char *)&v27 - v14, a1, v11);
  v18(v16, a2, v11);
  char v19 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  LODWORD(a2) = v19(v15, 1, a3);
  int v20 = v19(v16, 1, a3);
  if (a2 != 1)
  {
    if (v20 != 1)
    {
      uint64_t v22 = (void (*)(char *, char *, uint64_t))v7[4];
      char v23 = v28;
      v22(v28, v15, a3);
      OSStatus v24 = v29;
      v22(v29, v16, a3);
      char v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 8))(v23, v24, a3);
      id v25 = (void (*)(char *, uint64_t))v7[1];
      v25(v24, a3);
      v25(v23, a3);
      return v21 & 1;
    }
    ((void (*)(char *, uint64_t))v7[1])(v15, a3);
    goto LABEL_7;
  }
  if (v20 != 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v11);
LABEL_7:
    char v21 = 0;
    return v21 & 1;
  }
  char v21 = 1;
  return v21 & 1;
}

uint64_t static Optional<A>.>=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v7 = *(void **)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v29 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v28 = (char *)&v27 - v10;
  uint64_t v11 = sub_255C80E88();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = (char *)&v27 + *(int *)(v13 + 56) - v14;
  uint64_t v17 = *(void *)(v11 - 8);
  os_log_type_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18((char *)&v27 - v14, a1, v11);
  v18(v16, a2, v11);
  char v19 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  LODWORD(a2) = v19(v15, 1, a3);
  int v20 = v19(v16, 1, a3);
  if (a2 != 1)
  {
    if (v20 != 1)
    {
      uint64_t v22 = (void (*)(char *, char *, uint64_t))v7[4];
      char v23 = v28;
      v22(v28, v15, a3);
      OSStatus v24 = v29;
      v22(v29, v16, a3);
      char v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 16))(v23, v24, a3);
      id v25 = (void (*)(char *, uint64_t))v7[1];
      v25(v24, a3);
      v25(v23, a3);
      return v21 & 1;
    }
    ((void (*)(char *, uint64_t))v7[1])(v15, a3);
    goto LABEL_7;
  }
  if (v20 != 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v11);
LABEL_7:
    char v21 = 0;
    return v21 & 1;
  }
  char v21 = 1;
  return v21 & 1;
}

uint64_t sub_255ACAB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>.<=~ infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t sub_255ACAB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Optional<A>.>=~ infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

BOOL sub_255ACAB58(double *a1, double *a2)
{
  return sub_255AA4810(*a1, *a2);
}

BOOL sub_255ACAB64(double *a1, double *a2)
{
  return sub_255AA46B8(*a1, *a2);
}

BOOL sub_255ACAB70(double *a1, double *a2)
{
  return sub_255C14648(*a1, *a2);
}

BOOL sub_255ACAB7C(double *a1, double *a2)
{
  return sub_255ACA088(*a1, *a2);
}

BOOL static CGPoint.==~ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return sub_255ACACAC(a1, a2, a3, a4);
}

BOOL static CGSize.==~ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return sub_255ACACAC(a1, a2, a3, a4);
}

BOOL sub_255ACABC4(double *a1, double *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(double, double, double, double, double, double, double, double))
{
  return (a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]) & 1) == 0;
}

BOOL sub_255ACABFC(double *a1, double *a2)
{
  return sub_255ACACAC(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_255ACAC20(double *a1, double *a2)
{
  return sub_255AA4608(*a1, a1[1], *a2, a2[1]);
}

BOOL static UIOffset.==~ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return sub_255ACACAC(a1, a2, a3, a4);
}

BOOL sub_255ACAC48(double *a1, double *a2)
{
  return !sub_255ACACAC(*a1, a1[1], *a2, a2[1]);
}

float64x2_t static UIOffset.*= infix(_:_:)(float64x2_t *a1, double a2)
{
  float64x2_t result = vmulq_n_f64(*a1, a2);
  *a1 = result;
  return result;
}

double static UIOffset.* infix(_:_:)(double a1, double a2, double a3)
{
  return a1 * a3;
}

double static UIOffset./ infix(_:_:)(double a1, double a2, double a3)
{
  return a1 / a3;
}

float64x2_t static UIOffset./= infix(_:_:)(float64x2_t *a1, double a2)
{
  float64x2_t result = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0));
  *a1 = result;
  return result;
}

BOOL sub_255ACACAC(double a1, double a2, double a3, double a4)
{
  if (a1 == a3) {
    return sub_255AA4810(a2, a4);
  }
  double v4 = vabdd_f64(a1, a3);
  double v5 = fabs(a1);
  double v6 = fabs(a3);
  if (v5 <= v6) {
    double v5 = v6;
  }
  return (~*(void *)&v4 & 0x7FF0000000000000) != 0
      && v4 <= fmax(v5 * 2.22044605e-16, COERCE_DOUBLE(1))
      && sub_255AA4810(a2, a4);
}

uint64_t dispatch thunk of static ApproximatelyEquatable.==~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static ApproximatelyEquatable.!=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of static ApproximatelyComparable.<=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static ApproximatelyComparable.>=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void *assignWithCopy for MicaBundle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  double v4 = (void *)a2[1];
  double v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

ValueMetadata *type metadata accessor for MicaBundle()
{
  return &type metadata for MicaBundle;
}

uint64_t sub_255ACADCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_255ACADEC, 0, 0);
}

uint64_t sub_255ACADEC()
{
  uint64_t v1 = sub_255C7D5D8();
  double v2 = *(uint64_t **)(v0 + 16);
  *double v2 = v1;
  v2[1] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_255ACAE7C(uint64_t a1)
{
  v1[21] = a1;
  uint64_t v2 = sub_255C7D5C8();
  v1[22] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[23] = v3;
  v1[24] = *(void *)(v3 + 64);
  v1[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  v1[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255ACAF74, 0, 0);
}

uint64_t sub_255ACAF74()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = sub_255C80988();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 1, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  uint64_t v9 = sub_255AE477C(v1, (uint64_t)&unk_269F23340, v8);
  v0[27] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[28] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
  v0[29] = v11;
  *uint64_t v10 = v0;
  v10[1] = sub_255ACB128;
  uint64_t v12 = MEMORY[0x263F06F78];
  uint64_t v13 = MEMORY[0x263F8E4E0];
  return MEMORY[0x270FA1FB8](v0 + 14, v9, v12, v11, v13);
}

uint64_t sub_255ACB128()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_255ACB240, 0, 0);
}

uint64_t sub_255ACB240()
{
  uint64_t v1 = *(void **)(v0 + 112);
  if (*(unsigned char *)(v0 + 128) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 176);
    uint64_t v3 = *(void *)(v0 + 184);
    uint64_t v4 = *(void *)(v0 + 168);
    *(void *)(v0 + 152) = v1;
    swift_willThrowTypedImpl();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    char v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  uint64_t v5 = (_OWORD *)(v0 + 80);
  unint64_t v6 = *(void *)(v0 + 120);
  sub_255A43740(0, &qword_26B29D188);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D208);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_255C8B5F0;
  *(void *)(v7 + 32) = sub_255A43740(0, &qword_26B29D198);
  *(void *)(v7 + 40) = sub_255A43740(0, &qword_26B29D190);
  *(void *)(v7 + 48) = sub_255A43740(0, (unint64_t *)&unk_26B29D1A0);
  *(void *)(v7 + 56) = sub_255A43740(0, &qword_26B29D1B8);
  *(void *)(v7 + 64) = sub_255A43740(0, &qword_26B29F148);
  sub_255C80C48();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 104)) {
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D140);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    uint64_t v20 = *(void *)(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 184);
    uint64_t v22 = *(void *)(v0 + 168);
    sub_255ACB838();
    swift_allocError();
    swift_willThrow();
    sub_255ACB82C(v1, v6, 0);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
    goto LABEL_21;
  }
  uint64_t v8 = *(void *)(v0 + 136);
  if (!*(void *)(v8 + 16)
    || (unint64_t v9 = sub_255B39E20(0x6579614C746F6F72, 0xE900000000000072), (v10 & 1) == 0)
    || (sub_255A42E30(*(void *)(v8 + 56) + 32 * v9, v0 + 16), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v5 = (_OWORD *)(v0 + 48);
  uint64_t v11 = *(void **)(v0 + 144);
  if (*(void *)(v8 + 16) && (unint64_t v12 = sub_255B39E20(0xD000000000000010, 0x8000000255C9D350), (v13 & 1) != 0))
  {
    sub_255A42E30(*(void *)(v8 + 56) + 32 * v12, v0 + 48);
  }
  else
  {
    *uint64_t v5 = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 72))
  {

LABEL_19:
    sub_255A7D6B8((uint64_t)v5);
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_20;
  }
  uint64_t v14 = *(void *)(v0 + 176);
  uint64_t v15 = *(void *)(v0 + 184);
  uint64_t v16 = *(void *)(v0 + 168);
  sub_255ACB82C(v1, v6, 0);
  uint64_t v17 = *(void *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v18 = *(uint64_t (**)(uint64_t, void *))(v0 + 8);
  return v18(v17, v11);
}

uint64_t sub_255ACB678()
{
  uint64_t v1 = sub_255C7D5C8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255ACB744(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_255C7D5C8() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unint64_t v6 = v2;
  v6[2] = a1;
  v6[3] = v5;
  v6[1] = sub_255A160B0;
  return MEMORY[0x270FA2498](sub_255ACADEC, 0, 0);
}

void sub_255ACB82C(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_255A69D74((uint64_t)a1, a2);
  }
}

unint64_t sub_255ACB838()
{
  unint64_t result = qword_269F23348;
  if (!qword_269F23348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23348);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MicaBundle.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x255ACB928);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MicaBundle.Error()
{
  return &type metadata for MicaBundle.Error;
}

unint64_t sub_255ACB964()
{
  unint64_t result = qword_269F23350[0];
  if (!qword_269F23350[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F23350);
  }
  return result;
}

uint64_t sub_255ACB9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = *v2;
  if (*v2)
  {
    swift_beginAccess();
    if (*(unsigned char *)(v3 + 16)) {
      double v5 = 1.0;
    }
    else {
      double v5 = 0.73;
    }
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 24);
    uint64_t v8 = swift_allocObject();
    uint64_t v28 = a1;
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    *(double *)(v8 + 32) = v5;
    MEMORY[0x270FA5388](v8);
    v23[2] = v6;
    v23[3] = v7;
    v23[4] = v2;
    sub_255ACC128((uint64_t)sub_255ACD894, (uint64_t)v23, (uint64_t)&v94);
    swift_release();
    uint64_t v27 = v2;
    long long v9 = v96;
    char v10 = v97[0];
    long long v81 = v94;
    *(void *)&long long v82 = v95;
    WORD4(v82) = WORD4(v95);
    long long v83 = v96;
    LOBYTE(v84[0]) = v97[0];
    *(_OWORD *)((char *)v84 + 8) = *(_OWORD *)((char *)v97 + 8);
    int v24 = sub_255C7F1A8();
    sub_255ACCAF4(a1, (uint64_t)&v46);
    v23[6] = v46;
    _s27DefaultArtworkContainerViewV6LayoutVMa();
    swift_getWitnessTable();
    sub_255C7DE68();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B778);
    _s18ArtworkPlaceholderVMa();
    sub_255C80E88();
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_255C7E598();
    sub_255C7E458();
    swift_getWitnessTable();
    sub_255C7E1B8();
    uint64_t v11 = swift_getWitnessTable();
    unint64_t v12 = sub_255A1D6BC();
    uint64_t v13 = swift_getWitnessTable();
    unint64_t v39 = v12;
    uint64_t v40 = v13;
    uint64_t v26 = MEMORY[0x263F18E48];
    uint64_t v14 = swift_getWitnessTable();
    uint64_t v37 = v11;
    uint64_t v38 = v14;
    uint64_t v15 = swift_getWitnessTable();
    sub_255C7FAF8();
    swift_release();
    sub_255ACD8B8(v9, *((uint64_t *)&v9 + 1), v10);
    long long v16 = v63;
    char v17 = v64;
    long long v94 = v60;
    *(void *)&long long v95 = v61;
    WORD4(v95) = v62;
    long long v96 = v63;
    LOBYTE(v97[0]) = v64;
    *(_OWORD *)((char *)v97 + 8) = v65;
    BYTE8(v97[1]) = v66;
    long long v98 = v67;
    long long v99 = v68;
    LOBYTE(v100) = v69;
    sub_255C7F188();
    sub_255ACCAF4(v28, (uint64_t)&v81);
    sub_255C7E458();
    uint64_t v35 = v15;
    uint64_t v36 = MEMORY[0x263F18C10];
    uint64_t v18 = swift_getWitnessTable();
    sub_255C7FAF8();
    swift_release();
    sub_255ACD8B8(v16, *((uint64_t *)&v16 + 1), v17);
    v42[8] = v78;
    v42[9] = v79;
    v42[4] = v74;
    v42[5] = v75;
    v42[6] = v76;
    v42[7] = v77;
    v42[0] = v70;
    v42[1] = v71;
    v42[2] = v72;
    _OWORD v42[3] = v73;
    long long v101 = v78;
    long long v102 = v79;
    v97[1] = v74;
    long long v98 = v75;
    long long v100 = v77;
    long long v99 = v76;
    long long v94 = v70;
    long long v95 = v71;
    char v43 = v80;
    LOBYTE(v103) = v80;
    v97[0] = v73;
    long long v96 = v72;
    sub_255C7F1B8();
    sub_255ACCAF4(v28, (uint64_t)&v46);
    sub_255C7E458();
    uint64_t v33 = v18;
    uint64_t v19 = MEMORY[0x263F18C10];
    uint64_t v34 = MEMORY[0x263F18C10];
    uint64_t v20 = swift_getWitnessTable();
    sub_255C7FAF8();
    sub_255ACD8D8((uint64_t)v42);
    v44[10] = v90;
    v44[11] = v91;
    v44[12] = v92;
    v44[6] = v86;
    v44[7] = v87;
    v44[8] = v88;
    v44[9] = v89;
    v44[2] = v83;
    v44[3] = v84[0];
    v44[4] = v84[1];
    v44[5] = v85;
    v44[0] = v81;
    v44[1] = v82;
    long long v56 = v90;
    long long v57 = v91;
    long long v58 = v92;
    long long v52 = v86;
    long long v53 = v87;
    long long v54 = v88;
    long long v55 = v89;
    long long v48 = v83;
    long long v49 = v84[0];
    long long v50 = v84[1];
    long long v51 = v85;
    char v45 = v93;
    char v59 = v93;
    long long v46 = v81;
    long long v47 = v82;
    sub_255C7E458();
    uint64_t v31 = v20;
    uint64_t v32 = v19;
    swift_getWitnessTable();
    sub_255A20F54(&v46);
    sub_255ACD8D8((uint64_t)v44);
    long long v56 = v103;
    long long v57 = v104;
    long long v58 = v105;
    long long v52 = v99;
    long long v53 = v100;
    long long v54 = v101;
    long long v55 = v102;
    long long v48 = v96;
    long long v49 = v97[0];
    long long v50 = v97[1];
    long long v51 = v98;
    long long v46 = v94;
    long long v47 = v95;
    v29[10] = v103;
    v29[11] = v104;
    v29[12] = v105;
    v29[6] = v99;
    v29[7] = v100;
    v29[8] = v101;
    v29[9] = v102;
    v29[2] = v96;
    v29[3] = v97[0];
    v29[4] = v97[1];
    v29[5] = v98;
    char v59 = v106;
    char v30 = v106;
    v29[0] = v94;
    v29[1] = v95;
    sub_255A20F54(v29);
    return sub_255ACD8D8((uint64_t)&v46);
  }
  else
  {
    _s14DefaultArtworkCMa();
    sub_255ACDE4C(&qword_26B299E98, v22, (void (*)(uint64_t))_s14DefaultArtworkCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255ACC128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = _s27DefaultArtworkContainerViewV6LayoutVMa();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B778);
  _s18ArtworkPlaceholderVMa();
  sub_255C80E88();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255C7E598();
  uint64_t v7 = sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255A1D6BC();
  swift_getWitnessTable();
  uint64_t v9 = swift_getWitnessTable();
  return sub_255AF6EAC(a1, a2, v6, v7, WitnessTable, v9, a3);
}

uint64_t sub_255ACC2B8()
{
  uint64_t v0 = sub_255C7FC78();
  uint64_t v1 = _s27DefaultArtworkContainerViewVMa();
  uint64_t v24 = v0;
  uint64_t v25 = 0x3FF0000000000000;
  char v26 = 0;
  char v27 = sub_255ACC538(v1) & 1;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B778);
  _s18ArtworkPlaceholderVMa();
  sub_255C80E88();
  sub_255A1D6BC();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255C7FAC8();
  swift_release();
  uint64_t v2 = v20;
  uint64_t v3 = v21;
  char v4 = v22;
  v8[0] = v16;
  v8[1] = v17;
  char v9 = v18;
  char v10 = v19;
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  char v13 = v22;
  long long v14 = v23;
  sub_255C7E598();
  sub_255C7E458();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(v8);
  swift_release();
  sub_255ACD8B8(v2, v3, v4);
  uint64_t v5 = v28;
  uint64_t v6 = v29;
  LOBYTE(v3) = v30;
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  char v18 = v26;
  char v19 = v27;
  uint64_t v20 = v28;
  uint64_t v21 = v29;
  char v22 = v30;
  long long v23 = v31;
  sub_255A20F54(&v16);
  swift_release();
  return sub_255ACD8B8(v5, v6, v3);
}

uint64_t sub_255ACC538(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_255ABA420((uint64_t)v15);
  uint64_t v4 = v16;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  LOBYTE(v4) = sub_255AC1DB8(v4);
  uint64_t v5 = *(void *)(a1 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v10, v2, a1);
  if (v4)
  {
    v17[2] = v13;
    v18[0] = v14[0];
    *(_OWORD *)((char *)v18 + 10) = *(_OWORD *)((char *)v14 + 10);
    v17[0] = v11;
    v17[1] = v12;
    sub_255A1D4DC((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)v8);
    sub_255A1D4DC((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, a1);
    if (v9)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
      return 1;
    }
    uint64_t v7 = v8[3];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    if (v7 != 1) {
      return 1;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, a1);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  return 0;
}

uint64_t sub_255ACC6C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  char v3 = *(unsigned char *)(a1 + 152);
  sub_255A0877C(v2, v3);
  sub_255AB99AC(v2, v3, v43);
  sub_255A087D0(v2, v3);
  int v4 = LOBYTE(v43[0]);
  uint64_t v5 = _s27DefaultArtworkContainerViewVMa();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void, void, void))(v6 + 16);
  v7(v43, a1, v5);
  if (v4 == 1)
  {
    v49[2] = v47;
    v50[0] = v48[0];
    *(_OWORD *)((char *)v50 + 10) = *(_OWORD *)((char *)v48 + 10);
    v49[0] = v45;
    v49[1] = v46;
    sub_255A1D4DC((uint64_t)v49, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v33);
    sub_255A1D4DC((uint64_t)v49, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    int v8 = v36;
    if (v36 == 3)
    {
      v7(&v33, v43, v5);
    }
    else
    {
      v7(&v33, v43, v5);
      if (v8 == 2)
      {
        char v9 = *(void (**)(void, void))(v6 + 8);
        v9(&v33, v5);
        v9(v43, v5);
        goto LABEL_9;
      }
    }
    uint64_t v10 = v37;
    uint64_t v11 = v38;
    char v12 = v39;
    sub_255A7663C(v37, v38, v39);
    sub_255ABBD20(v10, v11, v12, (uint64_t *)&v41);
    sub_255A767C8(v10, v11, v12);
    long long v13 = *(void (**)(void, void))(v6 + 8);
    v13(&v33, v5);
    v13(v43, v5);
    uint64_t v14 = *((void *)&v41 + 1);
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_8;
    }
LABEL_9:
    char v18 = sub_255AC07EC(0);
    uint64_t v20 = v19;
    LOBYTE(v41) = v18 & 1;
    char v22 = v21 & 1;
    *((void *)&v41 + 1) = v19;
    char v42 = v21 & 1;
    _s18ArtworkPlaceholderVMa();
    swift_getWitnessTable();
    sub_255A20F54(&v41);
    sub_255A087D0(v20, v22);
    uint64_t v23 = v34;
    char v24 = v35;
    LOBYTE(v41) = v33;
    *((void *)&v41 + 1) = v34;
    char v42 = v35;
    sub_255A20F54(&v41);
    sub_255A087D0(v23, v24);
    uint64_t v25 = v31;
    char v26 = v32;
    v28[0] = v30;
    v28[1] = v31;
    char v29 = v32;
    sub_255A97640((uint64_t)v28, (uint64_t)&v41);
    sub_255A087D0(v25, v26);
    uint64_t v16 = *((void *)&v41 + 1);
    uint64_t v15 = v41;
    char v17 = v42;
    goto LABEL_10;
  }
  (*(void (**)(void *, uint64_t))(v6 + 8))(v43, v5);
LABEL_8:
  long long v41 = xmmword_255C8B6D0;
  char v42 = 0;
  _s18ArtworkPlaceholderVMa();
  swift_getWitnessTable();
  sub_255A97640((uint64_t)&v41, (uint64_t)&v33);
  uint64_t v15 = v33;
  uint64_t v16 = v34;
  char v17 = v35;
LABEL_10:
  v43[0] = v15;
  v43[1] = v16;
  char v44 = v17;
  _s18ArtworkPlaceholderVMa();
  sub_255C80E88();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(v43);
  return sub_255ACD8B8(v15, v16, v17);
}

void sub_255ACCAF4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  sub_255ABA420((uint64_t)v23);
  uint64_t v6 = v24;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  LOBYTE(v6) = sub_255AC1DB8(v6);
  uint64_t v7 = *(void *)(a1 - 8);
  (*(void (**)(unsigned char *, _OWORD *, uint64_t))(v7 + 16))(v18, v3, a1);
  if ((v6 & 1) == 0)
  {
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v18, a1);
    goto LABEL_6;
  }
  v29[2] = v21;
  v30[0] = v22[0];
  *(_OWORD *)((char *)v30 + 10) = *(_OWORD *)((char *)v22 + 10);
  v29[0] = v19;
  v29[1] = v20;
  sub_255A1D4DC((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v25);
  sub_255A1D4DC((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v18, a1);
  int v8 = BYTE2(v26);
  if (BYTE2(v26) == 3)
  {
LABEL_6:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    goto LABEL_7;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  if (v8)
  {
LABEL_7:
    long long v13 = v3[7];
    long long v27 = v3[6];
    v28[0] = v13;
    *(_OWORD *)((char *)v28 + 10) = *(_OWORD *)((char *)v3 + 122);
    long long v14 = v3[5];
    long long v25 = v3[4];
    long long v26 = v14;
    sub_255A1D4DC((uint64_t)&v25, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
    sub_255AB99F4((uint64_t)&v17);
    sub_255A1D4DC((uint64_t)&v25, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
    sub_255ACCE00((double *)&v15);
    long long v12 = v15;
    uint64_t v11 = v16;
    goto LABEL_8;
  }
  long long v9 = v3[7];
  long long v27 = v3[6];
  v28[0] = v9;
  *(_OWORD *)((char *)v28 + 10) = *(_OWORD *)((char *)v3 + 122);
  long long v10 = v3[5];
  long long v25 = v3[4];
  long long v26 = v10;
  sub_255A1D4DC((uint64_t)&v25, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)&v17);
  sub_255A1D4DC((uint64_t)&v25, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  sub_255ACCE00((double *)&v15);
  uint64_t v11 = v16;
  *(void *)&long long v12 = v15;
LABEL_8:
  *(_OWORD *)a2 = v12;
  *(void *)(a2 + 16) = v11;
}

uint64_t sub_255ACCDE0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_255ACDBC8(a1, a2, a3, a4);
}

uint64_t sub_255ACCDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CGSizeMake(a2, a3);
}

void sub_255ACCE00(double *a1@<X8>)
{
  uint64_t v3 = *(char *)(v1 + 17);
  switch(*(unsigned char *)(v1 + 18))
  {
    case 1:
      sub_255BE5ABC((uint64_t)v7);
      double v4 = v8;
      double v6 = 16.0;
      double v5 = 33.0;
      break;
    case 2:
      double v4 = 0.0;
      if (*(unsigned __int8 *)(v1 + 17) >= 7u)
      {
        double v5 = 75.0;
        double v6 = 0.0;
      }
      else
      {
        double v6 = dbl_255C8B980[v3];
        double v5 = dbl_255C8B9B8[v3];
      }
      break;
    case 3:
      if (qword_269F201D8 != -1) {
        swift_once();
      }
      double v4 = *((double *)&xmmword_269F26408 + 1);
      double v5 = *(double *)&xmmword_269F26408;
      double v6 = *(double *)&qword_269F26418;
      break;
    default:
      switch(*(unsigned char *)(v1 + 17))
      {
        case 0:
          sub_255BE59C0((uint64_t)v7);
          double v4 = v8;
          double v6 = 8.0;
          double v5 = 36.0;
          break;
        case 1:
        case 4:
          sub_255BE59C0((uint64_t)v7);
          double v4 = v8 + -8.0;
          double v5 = 30.0;
          double v6 = 10.0;
          break;
        case 2:
        case 5:
          sub_255BE59C0((uint64_t)v7);
          double v4 = v8 + -8.0;
          double v5 = 26.0;
          double v6 = 10.0;
          break;
        default:
          sub_255BE59C0((uint64_t)v7);
          double v4 = v8 + -8.0;
          double v5 = 26.0;
          double v6 = 23.0;
          break;
      }
      break;
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v6;
}

uint64_t sub_255ACD0C4@<X0>(uint64_t a1@<X8>)
{
  _s14DefaultArtworkCMa();
  sub_255ACDE4C(&qword_26B299E98, v2, (void (*)(uint64_t))_s14DefaultArtworkCMa);
  *(void *)a1 = sub_255C7E628();
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = swift_getKeyPath();
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = swift_getKeyPath();
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_WORD *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = swift_getKeyPath();
  *(unsigned char *)(a1 + 152) = 0;
  uint64_t result = swift_getKeyPath();
  *(void *)(a1 + 160) = result;
  *(void *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = 0;
  return result;
}

uint64_t _s14DefaultArtworkCMa()
{
  return self;
}

uint64_t sub_255ACD1BC@<X0>(uint64_t *a1@<X8>)
{
  _s14DefaultArtworkCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255ACD220(uint64_t a1)
{
  swift_release();
  if (*(unsigned char *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  }
  else {
    swift_release();
  }
  sub_255A1D054(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(unsigned char *)(a1 + 136), *(unsigned char *)(a1 + 137));
  sub_255A087D0(*(void *)(a1 + 144), *(unsigned char *)(a1 + 152));
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 168);
  char v4 = *(unsigned char *)(a1 + 176);

  return sub_255A767C8(v2, v3, v4);
}

uint64_t sub_255ACD2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  double v5 = (void *)(a1 + 16);
  double v6 = (void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 56);
  swift_retain();
  if (v7)
  {
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, void *))(v8 - 8))(a1 + 16, v6);
  }
  else
  {
    *double v5 = *v6;
    swift_retain();
  }
  *(unsigned char *)(a1 + 56) = v7;
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 104);
  uint64_t v15 = *(void *)(a2 + 112);
  uint64_t v16 = *(void *)(a2 + 120);
  uint64_t v22 = *(void *)(a2 + 128);
  char v23 = *(unsigned char *)(a2 + 136);
  char v24 = *(unsigned char *)(a2 + 137);
  sub_255A1CFDC(v9, v10, v11, v12, v13, v14, v15, v16, v22, v23, v24);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = v22;
  *(unsigned char *)(a1 + 136) = v23;
  *(unsigned char *)(a1 + 137) = v24;
  uint64_t v17 = *(void *)(a2 + 144);
  LOBYTE(v10) = *(unsigned char *)(a2 + 152);
  sub_255A0877C(v17, v10);
  *(void *)(a1 + 144) = v17;
  *(unsigned char *)(a1 + 152) = v10;
  uint64_t v18 = *(void *)(a2 + 160);
  uint64_t v19 = *(void *)(a2 + 168);
  char v20 = *(unsigned char *)(a2 + 176);
  sub_255A7663C(v18, v19, v20);
  *(void *)(a1 + 160) = v18;
  *(void *)(a1 + 168) = v19;
  *(unsigned char *)(a1 + 176) = v20;
  return a1;
}

uint64_t sub_255ACD430(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    sub_255A095A4(a1 + 16, &qword_26B29B580);
    if (*(unsigned char *)(a2 + 56))
    {
      uint64_t v4 = *(void *)(a2 + 40);
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      *(unsigned char *)(a1 + 56) = 1;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 56) = 0;
      swift_retain();
    }
  }
  uint64_t v5 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 104);
  uint64_t v11 = *(void *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 120);
  uint64_t v34 = *(void *)(a2 + 128);
  char v35 = *(unsigned char *)(a2 + 136);
  char v36 = *(unsigned char *)(a2 + 137);
  sub_255A1CFDC(v5, v6, v7, v8, v9, v10, v11, v12, v34, v35, v36);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v18 = *(void *)(a1 + 104);
  uint64_t v19 = *(void *)(a1 + 112);
  uint64_t v20 = *(void *)(a1 + 120);
  uint64_t v21 = *(void *)(a1 + 128);
  char v22 = *(unsigned char *)(a1 + 136);
  char v23 = *(unsigned char *)(a1 + 137);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = v11;
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = v34;
  *(unsigned char *)(a1 + 136) = v35;
  *(unsigned char *)(a1 + 137) = v36;
  sub_255A1D054(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v24 = *(void *)(a2 + 144);
  LOBYTE(v6) = *(unsigned char *)(a2 + 152);
  sub_255A0877C(v24, v6);
  uint64_t v25 = *(void *)(a1 + 144);
  char v26 = *(unsigned char *)(a1 + 152);
  *(void *)(a1 + 144) = v24;
  *(unsigned char *)(a1 + 152) = v6;
  sub_255A087D0(v25, v26);
  uint64_t v27 = *(void *)(a2 + 160);
  uint64_t v28 = *(void *)(a2 + 168);
  char v29 = *(unsigned char *)(a2 + 176);
  sub_255A7663C(v27, v28, v29);
  uint64_t v30 = *(void *)(a1 + 160);
  uint64_t v31 = *(void *)(a1 + 168);
  char v32 = *(unsigned char *)(a1 + 176);
  *(void *)(a1 + 160) = v27;
  *(void *)(a1 + 168) = v28;
  *(unsigned char *)(a1 + 176) = v29;
  sub_255A767C8(v30, v31, v32);
  return a1;
}

__n128 __swift_memcpy177_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t sub_255ACD65C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    sub_255A095A4(a1 + 16, &qword_26B29B580);
    long long v4 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v4;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  uint64_t v5 = *(void *)(a2 + 128);
  char v6 = *(unsigned char *)(a2 + 136);
  char v7 = *(unsigned char *)(a2 + 137);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 120);
  uint64_t v16 = *(void *)(a1 + 128);
  char v17 = *(unsigned char *)(a1 + 136);
  char v18 = *(unsigned char *)(a1 + 137);
  long long v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v19;
  long long v20 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v20;
  *(void *)(a1 + 128) = v5;
  *(unsigned char *)(a1 + 136) = v6;
  *(unsigned char *)(a1 + 137) = v7;
  sub_255A1D054(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  char v21 = *(unsigned char *)(a2 + 152);
  uint64_t v22 = *(void *)(a1 + 144);
  char v23 = *(unsigned char *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = v21;
  sub_255A087D0(v22, v23);
  char v24 = *(unsigned char *)(a2 + 176);
  uint64_t v25 = *(void *)(a1 + 160);
  uint64_t v26 = *(void *)(a1 + 168);
  char v27 = *(unsigned char *)(a1 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = v24;
  sub_255A767C8(v25, v26, v27);
  return a1;
}

uint64_t sub_255ACD758(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 177)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_255ACD7B4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 177) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t _s27DefaultArtworkContainerViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255ACD850()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255ACD894()
{
  return sub_255ACC2B8();
}

uint64_t _s27DefaultArtworkContainerViewV6LayoutVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255ACD8B8(uint64_t result, uint64_t a2, char a3)
{
  if (result != 2) {
    return sub_255A087D0(a2, a3 & 1);
  }
  return result;
}

uint64_t sub_255ACD8D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 48);
  swift_release();
  sub_255ACD8B8(v2, v3, v4);
  return a1;
}

uint64_t sub_255ACD924()
{
  return sub_255ACC6C4(*(void *)(v0 + 32));
}

uint64_t sub_255ACD930()
{
  return swift_deallocObject();
}

uint64_t sub_255ACD940()
{
  return swift_getWitnessTable();
}

uint64_t sub_255ACDBAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_255ACDBC8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_255C7E158();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255C7E288();
  sub_255ACDE4C((unint64_t *)&qword_26B29F290, 255, MEMORY[0x263F18AB8]);
  sub_255C80B68();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_255A095A4((uint64_t)v10, &qword_26B29D470);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v17.origin.CGFloat x = a1;
  v17.origin.CGFloat y = a2;
  v17.size.CGFloat width = a3;
  v17.size.CGFloat height = a4;
  CGRectGetMidX(v17);
  v18.origin.CGFloat x = a1;
  v18.origin.CGFloat y = a2;
  v18.size.CGFloat width = a3;
  v18.size.CGFloat height = a4;
  CGRectGetMidY(v18);
  sub_255C80378();
  v16[24] = 0;
  v16[16] = 0;
  sub_255C7E128();
  v16[8] = 0;
  v16[0] = 0;
  sub_255C7E138();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_255ACDE4C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_255ACDE9C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12D90]), sel_init);
  objc_msgSend(v3, sel_setPaused_, 1);
  objc_msgSend(v3, sel_setPreferredFramesPerSecond_, 0);
  objc_msgSend(v3, sel_setEnableSetNeedsDisplay_, 0);
  objc_msgSend(v3, sel_setDelegate_, v1);
  objc_msgSend(v3, sel_setDevice_, *(void *)(v2 + 16));
  objc_msgSend(v3, sel_setColorPixelFormat_, *(void *)(v2 + 48));
  objc_msgSend(v3, sel_setAlpha_, 0.0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23420);
  sub_255C7EFB8();
  swift_unknownObjectWeakAssign();

  return v3;
}

void sub_255ACDFB0(uint64_t a1)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source + 16);
  if (v3 == 255) {
    return;
  }
  uint64_t v4 = v1;
  char v6 = *(void **)a1;
  uint64_t v5 = *(void **)(a1 + 8);
  int v7 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v8 = *(void **)v2;
  uint64_t v9 = *(void **)(v2 + 8);
  uint64_t v26 = *(void **)v2;
  char v27 = v9;
  char v28 = v3;
  if (v7 == 255)
  {
    sub_255ACF47C(v8, v9, v3);
    sub_255A22540(v8, v9, v3 & 1);
    sub_255A22540(v8, v9, v3 & 1);
    sub_255A21FCC(v8, v9, v3 & 1);
    sub_255ACF494(v8, v9, v3);
    sub_255ACF494(v6, v5, 0xFFu);
LABEL_6:
    if (v3)
    {
      uint64_t v11 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalContext)
                     + 40);
      id v12 = objc_allocWithZone((Class)type metadata accessor for MetalImageTextureProvider());
      sub_255ACF47C(v8, v9, v3);
      uint64_t v13 = (uint64_t)sub_255BE921C(v8, v11);
      uint64_t v14 = &off_270489E60;
    }
    else
    {
      uint64_t v15 = *(objc_class **)(v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalContext);
      float v16 = (float)*(uint64_t *)(v4
                              + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_preferredFramesPerSecond);
      id v17 = objc_allocWithZone((Class)type metadata accessor for MetalVideoTextureProvider());
      id v18 = v8;
      id v19 = v9;
      swift_retain();
      uint64_t v13 = sub_255A816A8(v19, v8, v15, v16);
      uint64_t v14 = &off_270481640;
    }
    long long v20 = (uint64_t *)(v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_textureProvider);
    *long long v20 = v13;
    v20[1] = (uint64_t)v14;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    if (*v20)
    {
      uint64_t v21 = v20[1];
      uint64_t v22 = *(void *)(v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_renderer);
      if (v22)
      {
        *(void *)(v22 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider + 8) = v21;
        swift_unknownObjectWeakAssign();
      }
      uint64_t v23 = swift_unknownObjectRetain();
      sub_255ACE398(v23, v21);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  v24[0] = v6;
  v24[1] = v5;
  char v25 = v7 & 1;
  sub_255ACF47C(v8, v9, v3);
  sub_255ACF47C(v8, v9, v3);
  sub_255ACF47C(v8, v9, v3);
  char v10 = _s11MediaCoreUI18MetalTextureSourceO2eeoiySbAC_ACtFZ_0((uint64_t)&v26, (uint64_t)v24);
  sub_255A21FCC(v26, v27, v28);
  sub_255ACF494(v8, v9, v3);
  if ((v10 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_14:

  sub_255ACF494(v8, v9, v3);
}

uint64_t sub_255ACE278()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_renderer);
  *uint64_t v1 = 0;
  v1[1] = 0;
  swift_unknownObjectRelease();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_textureProvider);
  *uint64_t v2 = 0;
  v2[1] = 0;
  swift_unknownObjectRelease();
  if (*v2)
  {
    uint64_t v3 = v2[1];
    if (*v1)
    {
      *(void *)(*v1 + OBJC_IVAR____TtC11MediaCoreUI16MaterialRenderer_textureProvider + 8) = v3;
      swift_unknownObjectWeakAssign();
    }
    uint64_t v4 = swift_unknownObjectRetain();
    sub_255ACE398(v4, v3);
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_displayModeObserver) = 0;

  return swift_release();
}

void sub_255ACE334(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x25A297D40](a1 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalView);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_setAlpha_, 1.0);
  }
}

uint64_t sub_255ACE398(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23428);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23430);
  uint64_t v10 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  id v22 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23438);
  sub_255A09998(&qword_269F23440, &qword_269F23438);
  sub_255A7CADC();
  sub_255C7DB88();
  swift_release();
  sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  id v22 = (id)sub_255C80C88();
  uint64_t v14 = sub_255C80C78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
  sub_255A09998(&qword_269F23448, &qword_269F23428);
  sub_255A42F64();
  sub_255C7DB68();
  sub_255ACF4AC((uint64_t)v5);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_allocObject();
  uint64_t v15 = v21;
  swift_unknownObjectWeakInit();
  sub_255A09998(&qword_269F23450, &qword_269F23430);
  uint64_t v16 = v20;
  uint64_t v17 = sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v16);
  *(void *)(v15 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_displayModeObserver) = v17;
  return swift_release();
}

void sub_255ACE744(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x25A297D40](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    uint64_t v6 = (void *)MEMORY[0x25A297D40](v4 + OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalView);
    if (!v6)
    {
      uint64_t v7 = v5;
LABEL_12:

      return;
    }
    uint64_t v7 = v6;
    if (v2)
    {
      if (v2 == 1)
      {
        objc_msgSend(v6, sel_setEnableSetNeedsDisplay_, 1);
        objc_msgSend(v7, sel_setNeedsDisplay);
        char v8 = v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded];
        v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded] = 1;
        if ((v8 & 1) == 0)
        {
          uint64_t v9 = self;
          uint64_t v10 = swift_allocObject();
          *(void *)(v10 + 16) = v5;
          uint64_t v20 = sub_255ACF594;
          uint64_t v21 = v10;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v17 = 1107296256;
          uint64_t v11 = &block_descriptor_30;
LABEL_10:
          id v18 = sub_255AE4914;
          uint64_t v19 = v11;
          uint64_t v14 = _Block_copy(&aBlock);
          uint64_t v15 = v5;
          swift_release();
          objc_msgSend(v9, sel_animateWithDuration_delay_options_animations_completion_, 0, v14, 0, 0.2, 0.0);
          _Block_release(v14);
        }
      }
      else
      {
        objc_msgSend(v6, sel_setEnableSetNeedsDisplay_, 0);
        objc_msgSend(v7, sel_setPaused_, 0);
        objc_msgSend(v7, sel_setPreferredFramesPerSecond_, *(void *)&v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_preferredFramesPerSecond]);
        char v12 = v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded];
        v5[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded] = 1;
        if ((v12 & 1) == 0)
        {
          uint64_t v9 = self;
          uint64_t v13 = swift_allocObject();
          *(void *)(v13 + 16) = v5;
          uint64_t v20 = sub_255ACF584;
          uint64_t v21 = v13;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v17 = 1107296256;
          uint64_t v11 = &block_descriptor_10;
          goto LABEL_10;
        }
      }
    }

    goto LABEL_12;
  }
}

id sub_255ACE9E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetalTextureView.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_255ACEAB0()
{
}

uint64_t sub_255ACEAB8()
{
  return sub_255ACE278();
}

uint64_t sub_255ACEADC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v5 = v1[6];
  id v7 = objc_allocWithZone((Class)type metadata accessor for MetalTextureView.Coordinator());
  swift_unknownObjectRetain();
  swift_retain();
  id v8 = sub_255ACF370(v3, v4, v6, v5);
  swift_unknownObjectRelease();
  uint64_t result = swift_release();
  *a1 = v8;
  return result;
}

uint64_t sub_255ACEB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255ACF248();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_255ACEBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255ACF248();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_255ACEC28()
{
}

uint64_t _s11MediaCoreUI18MetalTextureSourceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  objc_super v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void **)a2;
  unint64_t v6 = *(void **)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0)
    {
      sub_255A43740(0, &qword_26B29D1B0);
      sub_255A22540(v5, v6, 0);
      sub_255A22540(v2, v3, 0);
      id v9 = v2;
      id v10 = v5;
      id v11 = v3;
      id v12 = v6;
      char v13 = sub_255C80DD8();

      if (v13)
      {
        char v8 = sub_255C80DD8();

        char v4 = 0;
        char v7 = 0;
        goto LABEL_10;
      }

      char v4 = 0;
      char v7 = 0;
LABEL_9:
      char v8 = 0;
      goto LABEL_10;
    }
LABEL_5:
    sub_255A22540(*(void **)a2, *(void **)(a2 + 8), v7);
    sub_255A22540(v2, v3, v4);
    goto LABEL_9;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    goto LABEL_5;
  }
  sub_255A43740(0, &qword_26B29D1B0);
  char v4 = 1;
  sub_255A22540(v5, v6, 1);
  sub_255A22540(v2, v3, 1);
  char v8 = sub_255C80DD8();
  char v7 = 1;
LABEL_10:
  sub_255A21FCC(v2, v3, v4);
  sub_255A21FCC(v5, v6, v7);
  return v8 & 1;
}

void destroy for MetalTextureSource(uint64_t a1)
{
}

uint64_t _s11MediaCoreUI18MetalTextureSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_255A22540(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MetalTextureSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_255A22540(*(void **)a2, v4, v5);
  unint64_t v6 = *(void **)a1;
  char v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_255A21FCC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MetalTextureSource(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  char v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_255A21FCC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetalTextureSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetalTextureSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_255ACEF84(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_255ACEF8C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MetalTextureSource()
{
  return &type metadata for MetalTextureSource;
}

uint64_t type metadata accessor for MetalTextureView.Coordinator()
{
  return self;
}

uint64_t destroy for MetalTextureView(uint64_t a1)
{
  sub_255A21FCC(*(void **)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for MetalTextureView(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  char v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_255A22540(*(void **)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MetalTextureView(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  char v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_255A22540(*(void **)a2, v5, v6);
  uint64_t v7 = *(void **)a1;
  char v8 = *(void **)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_255A21FCC(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for MetalTextureView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  char v5 = *(void **)a1;
  char v6 = *(void **)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_255A21FCC(v5, v6, v7);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetalTextureView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetalTextureView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetalTextureView()
{
  return &type metadata for MetalTextureView;
}

unint64_t sub_255ACF248()
{
  unint64_t result = qword_269F23418;
  if (!qword_269F23418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23418);
  }
  return result;
}

void sub_255ACF29C()
{
  uint64_t v1 = *(void **)v0;
  unint64_t v2 = *(void **)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23420);
  sub_255C7EFB8();
  char v4 = v11;
  char v5 = &v11[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source];
  char v6 = *(void **)&v11[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source];
  char v7 = *(void **)&v11[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source + 8];
  *(void *)char v5 = v1;
  *((void *)v5 + 1) = v2;
  unsigned __int8 v8 = v5[16];
  v5[16] = v3;
  sub_255A22540(v1, v2, v3);
  sub_255ACF47C(v6, v7, v8);
  sub_255ACF494(v6, v7, v8);
  v9[0] = v6;
  v9[1] = v7;
  unsigned __int8 v10 = v8;
  sub_255ACDFB0((uint64_t)v9);
  sub_255ACF494(v6, v7, v8);
}

id sub_255ACF370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v9 = &v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_renderer];
  *char v9 = 0;
  v9[1] = 0;
  unsigned __int8 v10 = &v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_source];
  *(void *)unsigned __int8 v10 = 0;
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = -1;
  id v11 = &v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_textureProvider];
  *id v11 = 0;
  v11[1] = 0;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_isLoaded] = 0;
  *(void *)&v4[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_displayModeObserver] = 0;
  *char v9 = a1;
  v9[1] = a2;
  id v12 = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)&v12[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_metalContext] = a3;
  *(void *)&v12[OBJC_IVAR____TtCV11MediaCoreUI16MetalTextureView11Coordinator_preferredFramesPerSecond] = a4;
  swift_retain();

  v14.receiver = v12;
  v14.super_class = (Class)type metadata accessor for MetalTextureView.Coordinator();
  return objc_msgSendSuper2(&v14, sel_init);
}

id sub_255ACF47C(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_255A22540(result, a2, a3 & 1);
  }
  return result;
}

void sub_255ACF494(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    sub_255A21FCC(a1, a2, a3 & 1);
  }
}

uint64_t sub_255ACF4AC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255ACF50C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_255ACF544(unsigned __int8 *a1)
{
  sub_255ACE744(a1, v1);
}

uint64_t sub_255ACF54C()
{
  return swift_deallocObject();
}

void sub_255ACF584()
{
  sub_255ACE334(*(void *)(v0 + 16));
}

void *sub_255ACF59C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_255C80CD8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  MEMORY[0x270FA5388](v5);
  unsigned __int8 v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29B470);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  uint64_t v46 = v10;
  MEMORY[0x270FA5388](v9);
  char v42 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F236B0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F236A8);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23680);
  swift_allocObject();
  v0[3] = sub_255C7DA08();
  v0[4] = 0;
  uint64_t v20 = (char *)v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator__looper;
  id v47 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F234D8);
  sub_255C7DA88();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  uint64_t v21 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator__error;
  LOBYTE(v47) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F234E8);
  sub_255C7DA88();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v15, v12);
  uint64_t v22 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_errorSubject;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F224F0);
  swift_allocObject();
  *(void *)((char *)v1 + v22) = sub_255C7DA08();
  *(void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator____lazy_storage___errorPublisher) = 0;
  uint64_t v23 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize;
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v24 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_signposts;
  type metadata accessor for MotionSignposts();
  swift_allocObject();
  *(void *)((char *)v1 + v24) = sub_255A43844();
  *((unsigned char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_shouldResetOnSizeChange) = 1;
  char v25 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_lastCommandExecution;
  uint64_t v26 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  char v27 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution;
  *(void *)char v27 = 0;
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  *((unsigned char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_placementContext) = 0;
  char v28 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
  uint64_t v29 = sub_255C7D5C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  uint64_t v30 = (char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_playbackStartDate;
  uint64_t v31 = sub_255C7D668();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  *(void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatus) = 0;
  *(void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask) = 0;
  uint64_t v32 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_mediaServicesWereResetPublisher;
  *(void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_mediaServicesWereResetPublisher) = 0;
  *(void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatusPublisher) = 0;
  *(void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperTimeControlStatusPublisher) = 0;
  *(void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperCurrentItemsPublisher) = 0;
  uint64_t v33 = (void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
  *uint64_t v33 = 0;
  v33[1] = 0;
  uint64_t v34 = (void *)((char *)v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
  *uint64_t v34 = 0;
  v34[1] = 0;
  id v35 = objc_msgSend(self, sel_defaultCenter);
  sub_255C80CE8();

  sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  id v47 = (id)sub_255C80C88();
  uint64_t v36 = sub_255C80C78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v4, 1, 1, v36);
  sub_255AD8710(&qword_26B29BEE8, MEMORY[0x263F07CB0]);
  sub_255A8654C((unint64_t *)&qword_26B29F110, (unint64_t *)&qword_26B29FC80);
  uint64_t v38 = v42;
  uint64_t v37 = v43;
  sub_255C7DB68();
  sub_255A095A4((uint64_t)v4, (uint64_t *)&unk_26B29F010);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v37);
  swift_allocObject();
  swift_weakInit();
  sub_255A09998((unint64_t *)&qword_26B29B460, (uint64_t *)&unk_26B29B470);
  uint64_t v39 = v45;
  uint64_t v40 = sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v39);
  *(void *)((char *)v1 + v32) = v40;
  swift_release();
  return v1;
}

uint64_t sub_255ACFCD8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_255C7D5C8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C7D898();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v39 = v6;
    uint64_t v41 = v4;
    uint64_t v42 = v3;
    uint64_t v13 = result + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext;
    uint64_t v15 = *(void **)(result + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
    uint64_t v14 = *(void *)(result + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
    uint64_t v16 = *(void *)(result + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID + 8);
    uint64_t v38 = *(void *)(result + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_cacheBucketID);
    uint64_t v17 = qword_26B297CF8;
    swift_bridgeObjectRetain();
    uint64_t v40 = v16;
    swift_bridgeObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v7, (uint64_t)qword_26B2AA500);
    uint64_t v34 = *(void (**)(char *))(v8 + 16);
    uint64_t v35 = v18;
    v34(v10);
    os_log_type_t v19 = sub_255C80C08();
    uint64_t v37 = v15;
    v45[0] = v15;
    v45[1] = v14;
    sub_255B54FC4(v19, 0xD00000000000003FLL, 0x8000000255C9DAE0, (uint64_t)v45);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v8 + 8);
    v36(v10, v7);
    uint64_t v20 = v14;
    uint64_t v21 = v12 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
    swift_beginAccess();
    sub_255A09540(v21, (uint64_t)v2, &qword_26B29F230);
    uint64_t v22 = v41;
    uint64_t v23 = v42;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v2, 1, v42) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_255A095A4((uint64_t)v2, &qword_26B29F230);
    }
    else
    {
      uint64_t v33 = v20;
      uint64_t v24 = (uint64_t)v39;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v39, v2, v23);
      char v25 = (double *)(v12 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize);
      if (*(unsigned char *)(v12 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize + 16))
      {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        double v27 = *v25;
        double v26 = v25[1];
        ((void (*)(char *, uint64_t, uint64_t))v34)(v10, v35, v7);
        char v28 = *(void **)v13;
        uint64_t v29 = *(void *)(v13 + 8);
        swift_bridgeObjectRetain();
        os_log_type_t v30 = sub_255C80C08();
        uint64_t v43 = v28;
        uint64_t v44 = v29;
        sub_255B54FC4(v30, 0x6E69747465736552, 0xEC0000002E2E2E67, (uint64_t)&v43);
        swift_bridgeObjectRelease();
        v36(v10, v7);
        uint64_t v31 = *(void *)(v12 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask);
        *(void *)(v12 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask) = 0;
        sub_255AD6974(v31);
        swift_release();
        uint64_t v43 = v37;
        uint64_t v44 = v33;
        sub_255AD0B04(v24, v38, v40, &v43, v27, v26);
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_255AD0160()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask))
  {
    swift_retain();
    sub_255C80A18();
    swift_release();
  }

  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator__looper;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F236A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator__error;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F236B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  sub_255A095A4(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_lastCommandExecution, &qword_269F23530);
  sub_255A095A4(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL, &qword_26B29F230);
  sub_255A095A4(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_playbackStartDate, &qword_269F23F20);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_255AD0358()
{
  sub_255AD0160();

  return swift_deallocClassInstance();
}

void sub_255AD03B0(void *a1)
{
  uint64_t v2 = v1;
  id v3 = a1;
  uint64_t v4 = *(void **)(v1 + 16);
  if (!v4)
  {
    if (!a1) {
      return;
    }
    goto LABEL_6;
  }
  if (!a1)
  {
LABEL_10:
    id v8 = v4;
    sub_255C7D9F8();

    return;
  }
  sub_255A43740(0, &qword_269F23540);
  id v5 = v4;
  id v3 = v3;
  char v6 = sub_255C80DD8();

  if ((v6 & 1) == 0)
  {
LABEL_6:
    objc_msgSend(v3, sel_pause);
    uint64_t v4 = *(void **)(v2 + 16);
    if (!v4)
    {
      uint64_t v7 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperTimeControlStatusPublisher;
      if (*(void *)(v2 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperTimeControlStatusPublisher))
      {
        swift_retain();
        sub_255C7D9B8();
        swift_release();
      }
      *(void *)(v2 + v7) = 0;
      swift_release();
      uint64_t v4 = *(void **)(v2 + 16);
    }
    goto LABEL_10;
  }
}

uint64_t sub_255AD04B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23678);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 32))
  {
    uint64_t v6 = *(void *)(v0 + 32);
  }
  else
  {
    v8[1] = *(void *)(v0 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F23680);
    sub_255A09998(&qword_269F23688, &qword_269F23680);
    sub_255AD9100();
    sub_255C7DB88();
    sub_255A09998(&qword_269F236A0, &qword_269F23678);
    uint64_t v6 = sub_255C7DAF8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 32) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

void sub_255AD0654()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();

  if (!v3)
  {
    uint64_t v1 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatusPublisher;
    if (*(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatusPublisher))
    {
      swift_retain();
      sub_255C7D9B8();
      swift_release();
    }
    *(void *)(v0 + v1) = 0;
    swift_release();
    uint64_t v2 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperCurrentItemsPublisher;
    if (*(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperCurrentItemsPublisher))
    {
      swift_retain();
      sub_255C7D9B8();
      swift_release();
    }
    *(void *)(v0 + v2) = 0;
    swift_release();
  }
}

uint64_t sub_255AD0744()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255AD07B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255AD082C()
{
  return sub_255C7D9F8();
}

uint64_t sub_255AD0954()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23668);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator____lazy_storage___errorPublisher;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator____lazy_storage___errorPublisher))
  {
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator____lazy_storage___errorPublisher);
  }
  else
  {
    v9[1] = *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_errorSubject);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F224F0);
    sub_255A09998(&qword_269F224F8, &qword_269F224F0);
    sub_255C7DB88();
    sub_255A09998(&qword_269F23670, &qword_269F23668);
    uint64_t v7 = sub_255C7DAF8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + v6) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

void sub_255AD0B04(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, double a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v81 = a2;
  uint64_t v88 = a1;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v12 - 8);
  long long v82 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23550);
  MEMORY[0x270FA5388](v14);
  uint64_t v75 = (uint64_t)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  os_log_type_t v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  long long v73 = (char *)&v73 - v24;
  MEMORY[0x270FA5388](v23);
  double v26 = (char *)&v73 - v25;
  uint64_t v27 = sub_255C7D5C8();
  uint64_t v85 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v84 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v73 - v30;
  uint64_t v32 = v7 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize;
  char v33 = *(unsigned char *)(v7 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize + 16);
  uint64_t v83 = a3;
  uint64_t v80 = v34;
  long long v77 = v19;
  long long v76 = v22;
  if (v33)
  {
    BOOL v35 = 1;
  }
  else if (*(unsigned char *)(v7 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_shouldResetOnSizeChange) == 1)
  {
    BOOL v35 = *(double *)(v32 + 8) != a6 || *(double *)v32 != a5;
  }
  else
  {
    BOOL v35 = 0;
  }
  long long v87 = *a4;
  long long v79 = a4[1];
  uint64_t v36 = v85;
  uint64_t v38 = v85 + 16;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
  v37((char *)&v73 - v30, v88, v27);
  uint64_t v86 = v7;
  uint64_t v78 = v38;
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v27);
LABEL_16:
    uint64_t v45 = (void *)(v7 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
    uint64_t v46 = v87;
    uint64_t v47 = v27;
    uint64_t v74 = v27;
    uint64_t v48 = v7;
    long long v49 = v79;
    *uint64_t v45 = v87;
    v45[1] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v50 = v37;
    uint64_t v51 = (uint64_t)v76;
    v50(v76, v88, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v51, 0, 1, v47);
    uint64_t v52 = (uint64_t)v77;
    sub_255A10514(v51, (uint64_t)v77, &qword_26B29F230);
    uint64_t v53 = v48 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
    swift_beginAccess();
    sub_255AD83F4(v52, v53, &qword_26B29F230);
    swift_endAccess();
    *(double *)uint64_t v32 = a5;
    *(double *)(v32 + 8) = a6;
    *(unsigned char *)(v32 + 16) = 0;
    v89[3] = &type metadata for MCUILoggingContext;
    v89[4] = (id)sub_255AD83A0();
    v89[0] = v46;
    v89[1] = v49;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_255C28F74((const char *)v89);
    swift_endAccess();
    sub_255A095A4((uint64_t)v89, &qword_269F279D0);
    id v54 = objc_msgSend(self, sel_sharedApplication);
    LODWORD(v85) = objc_msgSend(v54, sel_launchedToTest);

    uint64_t v55 = sub_255C80988();
    uint64_t v56 = v36;
    uint64_t v57 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v82, 1, 1, v55);
    uint64_t v58 = swift_allocObject();
    swift_weakInit();
    char v59 = v84;
    uint64_t v60 = v74;
    v50(v84, v88, v74);
    unint64_t v61 = (*(unsigned __int8 *)(v56 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    unint64_t v62 = (v80 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = 0;
    *(void *)(v63 + 24) = 0;
    *(void *)(v63 + 32) = v87;
    *(void *)(v63 + 40) = v49;
    *(void *)(v63 + 48) = v58;
    *(unsigned char *)(v63 + 56) = v85;
    (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v63 + v61, v59, v60);
    char v64 = (double *)(v63 + v62);
    *char v64 = a5;
    v64[1] = a6;
    long long v65 = (void *)(v63 + ((v62 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v66 = v83;
    *long long v65 = v81;
    v65[1] = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_255A812C8(v57, (uint64_t)&unk_269F23560, v63);
    sub_255A095A4(v57, (uint64_t *)&unk_26B29F0C0);
    uint64_t v68 = *(void *)(v86 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask);
    *(void *)(v86 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask) = v67;
    swift_retain();
    sub_255AD6974(v68);
    swift_release();
    swift_release();
    return;
  }
  v37(v26, (uint64_t)v31, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v26, 0, 1, v27);
  uint64_t v39 = v7 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
  swift_beginAccess();
  uint64_t v40 = v75;
  uint64_t v41 = v75 + *(int *)(v14 + 48);
  sub_255A09540((uint64_t)v26, v75, &qword_26B29F230);
  sub_255A09540(v39, v41, &qword_26B29F230);
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v42(v40, 1, v27) == 1)
  {
    sub_255A095A4((uint64_t)v26, &qword_26B29F230);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v27);
    int v43 = v42(v41, 1, v27);
    uint64_t v7 = v86;
    if (v43 == 1)
    {
      sub_255A095A4(v40, &qword_26B29F230);
      goto LABEL_19;
    }
LABEL_15:
    sub_255A095A4(v40, &qword_269F23550);
    goto LABEL_16;
  }
  sub_255A09540(v40, (uint64_t)v73, &qword_26B29F230);
  if (v42(v41, 1, v27) == 1)
  {
    sub_255A095A4((uint64_t)v26, &qword_26B29F230);
    uint64_t v44 = *(void (**)(char *, uint64_t))(v36 + 8);
    v44(v31, v27);
    v44(v73, v27);
    uint64_t v7 = v86;
    goto LABEL_15;
  }
  char v69 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v84, v41, v27);
  sub_255AD8710(&qword_269F213B8, MEMORY[0x263F06EA8]);
  char v70 = sub_255C80578();
  long long v71 = *(void (**)(char *, uint64_t))(v85 + 8);
  uint64_t v36 = v85;
  v71(v69, v27);
  sub_255A095A4((uint64_t)v26, &qword_26B29F230);
  v71(v31, v27);
  v71(v73, v27);
  sub_255A095A4(v75, &qword_26B29F230);
  uint64_t v7 = v86;
  if ((v70 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_19:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  id v72 = v89[0];

  if (v72)
  {
    if (*(void *)(v7 + 16)) {
      sub_255AD5398();
    }
  }
}

uint64_t sub_255AD1458(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  *(void *)(v10 + 104) = v22;
  *(void *)(v10 + 112) = v23;
  *(double *)(v10 + 88) = a1;
  *(double *)(v10 + 96) = a2;
  *(unsigned char *)(v10 + 568) = a9;
  *(void *)(v10 + 72) = a8;
  *(void *)(v10 + 80) = a10;
  *(void *)(v10 + 56) = a6;
  *(void *)(v10 + 64) = a7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23568);
  *(void *)(v10 + 120) = v11;
  *(void *)(v10 + 128) = *(void *)(v11 - 8);
  *(void *)(v10 + 136) = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23570);
  *(void *)(v10 + 144) = v12;
  *(void *)(v10 + 152) = *(void *)(v12 - 8);
  *(void *)(v10 + 160) = swift_task_alloc();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23578);
  *(void *)(v10 + 168) = v13;
  *(void *)(v10 + 176) = *(void *)(v13 - 8);
  *(void *)(v10 + 184) = swift_task_alloc();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23580);
  *(void *)(v10 + 192) = v14;
  *(void *)(v10 + 200) = *(void *)(v14 - 8);
  *(void *)(v10 + 208) = swift_task_alloc();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23588);
  *(void *)(v10 + 216) = v15;
  *(void *)(v10 + 224) = *(void *)(v15 - 8);
  *(void *)(v10 + 232) = swift_task_alloc();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23590);
  *(void *)(v10 + 240) = v16;
  *(void *)(v10 + 248) = *(void *)(v16 - 8);
  *(void *)(v10 + 256) = swift_task_alloc();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23598);
  *(void *)(v10 + 264) = v17;
  *(void *)(v10 + 272) = *(void *)(v17 - 8);
  *(void *)(v10 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  *(void *)(v10 + 288) = swift_task_alloc();
  uint64_t v18 = sub_255C7D5C8();
  *(void *)(v10 + 296) = v18;
  *(void *)(v10 + 304) = *(void *)(v18 - 8);
  *(void *)(v10 + 312) = swift_task_alloc();
  uint64_t v19 = sub_255C7D898();
  *(void *)(v10 + 320) = v19;
  *(void *)(v10 + 328) = *(void *)(v19 - 8);
  *(void *)(v10 + 336) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255AD185C, 0, 0);
}

uint64_t sub_255AD185C()
{
  uint64_t v41 = v0;
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)qword_26B2AA500);
  *(void *)(v0 + 344) = v6;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(void *)(v0 + 352) = v7;
  *(void *)(v0 + 360) = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v6, v3);
  os_log_type_t v8 = sub_255C80BD8();
  uint64_t v39 = v5;
  uint64_t v40 = v4;
  sub_255B54FC4(v8, 0xD000000000000022, 0x8000000255C9D870, (uint64_t)&v39);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 368) = v9;
  *(void *)(v0 + 376) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v1, v3);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 384) = Strong;
  if (!Strong) {
    goto LABEL_6;
  }
  if (sub_255C80A48())
  {
    uint64_t v11 = *(void *)(v0 + 336);
    uint64_t v12 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v14 = v6;
    uint64_t v15 = *(void *)(v0 + 320);
    ((void (*)(uint64_t, uint64_t))v7)(v11, v14);
    os_log_type_t v16 = sub_255C80BD8();
    uint64_t v39 = v12;
    uint64_t v40 = v13;
    sub_255B54FC4(v16, 0xD000000000000038, 0x8000000255C9D9F0, (uint64_t)&v39);
    swift_release();
    v9(v11, v15);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  if (*(unsigned char *)(v0 + 568) == 1)
  {
    uint64_t v20 = *(void *)(v0 + 56);
    uint64_t v19 = *(void *)(v0 + 64);
    v7(*(void *)(v0 + 336), v6, *(void *)(v0 + 320));
    os_log_type_t v21 = sub_255C80BE8();
    uint64_t v39 = v20;
    uint64_t v40 = v19;
    sub_255B54FC4(v21, 0xD000000000000046, 0x8000000255C9D9A0, (uint64_t)&v39);
    (*(void (**)(void, void))(v0 + 368))(*(void *)(v0 + 336), *(void *)(v0 + 320));
    uint64_t v22 = (void *)sub_255C7D548();
    id v23 = objc_msgSend(self, sel_assetWithURL_, v22);

    if (!v23)
    {
      swift_release();
      goto LABEL_6;
    }
    *(void *)(v0 + 488) = v23;
    uint64_t v24 = (objc_class *)MEMORY[0x263EFA860];
    id v25 = v23;
    id v26 = objc_msgSend(objc_allocWithZone(v24), sel_init);
    *(void *)(v0 + 496) = v26;
    if (sub_255C80A48())
    {
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
      uint64_t v28 = *(void *)(v0 + 336);
      uint64_t v29 = *(void *)(v0 + 320);
      uint64_t v31 = *(void *)(v0 + 56);
      uint64_t v30 = *(void *)(v0 + 64);
      (*(void (**)(uint64_t, void, uint64_t))(v0 + 352))(v28, *(void *)(v0 + 344), v29);
      os_log_type_t v32 = sub_255C80BD8();
      uint64_t v39 = v31;
      uint64_t v40 = v30;
      sub_255B54FC4(v32, 0xD00000000000003BLL, 0x8000000255C9D930, (uint64_t)&v39);
      swift_release();

      v27(v28, v29);
      goto LABEL_6;
    }
    *(void *)(v0 + 504) = sub_255C80958();
    *(void *)(v0 + 512) = sub_255C80948();
    uint64_t v36 = sub_255C80908();
    uint64_t v38 = v37;
    uint64_t v34 = sub_255AD2BBC;
    uint64_t v33 = v36;
    uint64_t v35 = v38;
  }
  else
  {
    if (qword_269F202D8 != -1) {
      swift_once();
    }
    uint64_t v33 = qword_269F33430;
    uint64_t v34 = sub_255AD1CE8;
    uint64_t v35 = 0;
  }
  return MEMORY[0x270FA2498](v34, v33, v35);
}

uint64_t sub_255AD1CE8()
{
  if (qword_269F202E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_255AD1D78, 0, 0);
}

uint64_t sub_255AD1D78()
{
  return MEMORY[0x270FA2498](sub_255AD1D98, qword_269F33430, 0);
}

uint64_t sub_255AD1D98()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255AD1E2C;
  return sub_255C5ABB0();
}

uint64_t sub_255AD1E2C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_255AD1F28, 0, 0);
}

uint64_t sub_255AD1F28()
{
  return MEMORY[0x270FA2498](sub_255AD1F44, 0, 0);
}

uint64_t sub_255AD1F44()
{
  return MEMORY[0x270FA2498](sub_255AD1F64, qword_269F33430, 0);
}

uint64_t sub_255AD1F64()
{
  *(void *)(v0 + 400) = qword_269F33438;
  return MEMORY[0x270FA2498](sub_255AD1F8C, 0, 0);
}

uint64_t sub_255AD1F8C()
{
  return MEMORY[0x270FA2498](sub_255AD1FAC, qword_269F33430, 0);
}

uint64_t sub_255AD1FAC()
{
  sub_255C5B89C();
  *(unsigned char *)(v0 + 569) = v1 & 1;
  return MEMORY[0x270FA2498](sub_255AD201C, 0, 0);
}

uint64_t sub_255AD201C()
{
  uint64_t v30 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 569);
  (*(void (**)(void, void, void))(*(void *)(v0 + 304) + 16))(*(void *)(v0 + 312), *(void *)(v0 + 80), *(void *)(v0 + 296));
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v4 = *(void *)(v0 + 296);
  if (v1 == 1)
  {
    char v5 = sub_255C7D4F8();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    if ((v5 & 1) == 0)
    {
      uint64_t v6 = sub_255AD234C;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
LABEL_13:
      return MEMORY[0x270FA2498](v6, v7, v8);
    }
  }
  else
  {
    (*(void (**)(void, void))(v3 + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
  }
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 64);
  (*(void (**)(void, void, void))(v0 + 352))(*(void *)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 320));
  os_log_type_t v11 = sub_255C80BE8();
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  sub_255B54FC4(v11, 0xD00000000000003ALL, 0x8000000255C9D8A0, (uint64_t)&v28);
  (*(void (**)(void, void))(v0 + 368))(*(void *)(v0 + 336), *(void *)(v0 + 320));
  uint64_t v12 = (void *)sub_255C7D548();
  id v13 = objc_msgSend(self, sel_assetWithURL_, v12);

  if (v13)
  {
    *(void *)(v0 + 488) = v13;
    uint64_t v14 = (objc_class *)MEMORY[0x263EFA860];
    id v15 = v13;
    id v16 = objc_msgSend(objc_allocWithZone(v14), sel_init);
    *(void *)(v0 + 496) = v16;
    if ((sub_255C80A48() & 1) == 0)
    {
      *(void *)(v0 + 504) = sub_255C80958();
      *(void *)(v0 + 512) = sub_255C80948();
      uint64_t v25 = sub_255C80908();
      uint64_t v27 = v26;
      uint64_t v6 = sub_255AD2BBC;
      uint64_t v7 = v25;
      uint64_t v8 = v27;
      goto LABEL_13;
    }
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v18 = *(void *)(v0 + 336);
    uint64_t v19 = *(void *)(v0 + 320);
    uint64_t v20 = *(void *)(v0 + 56);
    uint64_t v21 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 352))(v18, *(void *)(v0 + 344), v19);
    os_log_type_t v22 = sub_255C80BD8();
    uint64_t v28 = v20;
    uint64_t v29 = v21;
    sub_255B54FC4(v22, 0xD00000000000003BLL, 0x8000000255C9D930, (uint64_t)&v28);
    swift_release();

    v17(v18, v19);
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_255AD234C()
{
  return MEMORY[0x270FA2498](sub_255AD236C, qword_269F33430, 0);
}

uint64_t sub_255AD236C()
{
  *(void *)(v0 + 408) = qword_269F33438;
  return MEMORY[0x270FA2498](sub_255AD2394, 0, 0);
}

uint64_t sub_255AD2394()
{
  v0[52] = self;
  v0[53] = sub_255C80958();
  v0[54] = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD243C, v2, v1);
}

uint64_t sub_255AD243C()
{
  uint64_t v1 = *(void **)(v0 + 416);
  swift_release();
  *(void *)(v0 + 440) = objc_msgSend(v1, sel_mainScreen);
  return MEMORY[0x270FA2498](sub_255AD24C4, 0, 0);
}

uint64_t sub_255AD24C4()
{
  *(void *)(v0 + 448) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD2550, v2, v1);
}

uint64_t sub_255AD2550()
{
  uint64_t v1 = *(void **)(v0 + 440);
  swift_release();
  objc_msgSend(v1, sel_scale);
  *(void *)(v0 + 456) = v2;

  return MEMORY[0x270FA2498](sub_255AD25D0, 0, 0);
}

uint64_t sub_255AD25D0()
{
  *(void *)(v0 + 464) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD265C, v2, v1);
}

uint64_t sub_255AD265C()
{
  double v1 = *(double *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 384);
  double v4 = *(double *)(v0 + 88);
  double v3 = *(double *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  swift_release();
  char v7 = *(unsigned char *)(v2 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_placementContext);
  *(void *)(v0 + 40) = v6;
  *(void *)(v0 + 48) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_255AD2750;
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v11 = *(void *)(v0 + 80);
  return sub_255C5BB2C(v11, v9, v10, v7, (_OWORD *)(v0 + 40), v1 * v4, v1 * v3);
}

uint64_t sub_255AD2750(uint64_t a1)
{
  *(void *)(*(void *)v1 + 480) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_255AD2850, 0, 0);
}

uint64_t sub_255AD2850()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void **)(v0 + 480);
  if (!v1)
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 336);
    uint64_t v12 = *(void *)(v0 + 320);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 352))(v11, *(void *)(v0 + 344), v12);
    os_log_type_t v15 = sub_255C80BE8();
    uint64_t v29 = v14;
    uint64_t v30 = v13;
    sub_255B54FC4(v15, 0xD000000000000025, 0x8000000255C9D970, (uint64_t)&v29);
    v10(v11, v12);
    goto LABEL_5;
  }
  if (v1 == (void *)1)
  {
    uint64_t v2 = *(void *)(v0 + 288);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v5 = sub_255C80988();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v7 = sub_255C80948();
    uint64_t v8 = (void *)swift_allocObject();
    uint64_t v9 = MEMORY[0x263F8F500];
    void v8[2] = v7;
    v8[3] = v9;
    void v8[4] = v4;
    v8[5] = v3;
    v8[6] = v6;
    swift_release();
    sub_255B5DB70(v2, (uint64_t)&unk_269F23620, (uint64_t)v8);
    swift_release();
LABEL_5:
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
  *(void *)(v0 + 488) = v1;
  id v16 = (objc_class *)MEMORY[0x263EFA860];
  id v17 = v1;
  id v18 = objc_msgSend(objc_allocWithZone(v16), sel_init);
  *(void *)(v0 + 496) = v18;
  if (sub_255C80A48())
  {
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v20 = *(void *)(v0 + 336);
    uint64_t v21 = *(void *)(v0 + 320);
    uint64_t v23 = *(void *)(v0 + 56);
    uint64_t v22 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 352))(v20, *(void *)(v0 + 344), v21);
    os_log_type_t v24 = sub_255C80BD8();
    uint64_t v29 = v23;
    uint64_t v30 = v22;
    sub_255B54FC4(v24, 0xD00000000000003BLL, 0x8000000255C9D930, (uint64_t)&v29);
    swift_release();

    v19(v20, v21);
    goto LABEL_8;
  }
  *(void *)(v0 + 504) = sub_255C80958();
  *(void *)(v0 + 512) = sub_255C80948();
  uint64_t v28 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD2BBC, v28, v27);
}

uint64_t sub_255AD2BBC()
{
  uint64_t v1 = (void *)v0[62];
  uint64_t v2 = v0[36];
  swift_release();
  objc_msgSend(v1, sel_setAutomaticallyWaitsToMinimizeStalling_, 1);
  objc_msgSend(v1, sel_setAllowsExternalPlayback_, 0);
  objc_msgSend(v1, sel_setPreventsDisplaySleepDuringVideoPlayback_, 0);
  objc_msgSend(v1, sel_setPreventsAutomaticBackgroundingDuringVideoPlayback_, 0);
  objc_msgSend(v1, sel__setSuppressesAudioRendering_, 1);
  objc_msgSend(v1, sel_setMuted_, 1);
  uint64_t v3 = sub_255C80988();
  v0[65] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v0[66] = v5;
  v0[67] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v5(v2, 1, 1, v3);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v1;
  id v7 = v1;
  v0[68] = sub_255AE7A14(v2, (uint64_t)&unk_269F235A0, (uint64_t)v6);
  sub_255A095A4(v2, (uint64_t *)&unk_26B29F0C0);
  return MEMORY[0x270FA2498](sub_255AD2D58, 0, 0);
}

uint64_t sub_255AD2D58()
{
  id v1 = *(id *)(v0 + 488);
  *(void *)(v0 + 552) = sub_255C80948();
  uint64_t v3 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD2DEC, v3, v2);
}

uint64_t sub_255AD2DEC()
{
  id v1 = *(void **)(v0 + 488);
  swift_release();
  *(void *)(v0 + 560) = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA800]), sel_initWithAsset_, v1);

  return MEMORY[0x270FA2498](sub_255AD2E7C, 0, 0);
}

uint64_t sub_255AD2E7C()
{
  uint64_t v63 = v0;
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 528);
  uint64_t v55 = *(void *)(v0 + 520);
  id v1 = *(void **)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v53 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v43 = *(void *)(v0 + 216);
  uint64_t v44 = *(void *)(v0 + 224);
  uint64_t v40 = *(void *)(v0 + 232);
  uint64_t v41 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v39 = *(void *)(v0 + 192);
  uint64_t v37 = *(void *)(v0 + 208);
  uint64_t v38 = *(void *)(v0 + 176);
  uint64_t v35 = *(void *)(v0 + 264);
  uint64_t v36 = *(void *)(v0 + 168);
  uint64_t v51 = *(void *)(v0 + 144);
  uint64_t v52 = *(void *)(v0 + 152);
  uint64_t v47 = *(void *)(v0 + 160);
  uint64_t v48 = *(void *)(v0 + 128);
  uint64_t v45 = *(void *)(v0 + 136);
  uint64_t v46 = *(void *)(v0 + 120);
  uint64_t v60 = *(void *)(v0 + 64);
  uint64_t v49 = *(void *)(v0 + 56);
  id v42 = objc_msgSend(self, sel_playerLooperWithPlayer_templateItem_, v1, *(void *)(v0 + 560));
  objc_msgSend(v1, sel__setDisallowsVideoLayerDisplayCompositing_, 1);
  swift_getKeyPath();
  sub_255C7D4E8();
  swift_release();
  sub_255A09998(&qword_269F235A8, &qword_269F23590);
  sub_255AD8710(&qword_269F235B0, type metadata accessor for Status);
  sub_255C7DB88();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  swift_allocObject();
  swift_weakInit();
  sub_255A09998(&qword_269F235B8, &qword_269F23598);
  uint64_t v61 = sub_255C7DB98();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v35);
  swift_getKeyPath();
  sub_255C7D4E8();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_255A09998(&qword_269F235C0, &qword_269F23578);
  sub_255C7DB08();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v7, v36);
  sub_255A09998(&qword_269F235C8, &qword_269F23580);
  sub_255C7DB88();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v37, v39);
  swift_allocObject();
  swift_weakInit();
  sub_255A09998(&qword_269F235D0, &qword_269F23588);
  uint64_t v8 = sub_255C7DB98();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v40, v43);
  swift_getKeyPath();
  sub_255C7D4E8();
  swift_release();
  sub_255A09998(&qword_269F235D8, &qword_269F23568);
  sub_255AD88D8();
  sub_255C7DB88();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v45, v46);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = v49;
  v10[4] = v60;
  v10[5] = v42;
  sub_255A09998(&qword_269F235F0, &qword_269F23570);
  swift_bridgeObjectRetain();
  id v50 = v42;
  uint64_t v11 = sub_255C7DB98();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v47, v51);
  v57(v53, 1, 1, v55);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = sub_255C80948();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  v14[2] = v13;
  _OWORD v14[3] = v15;
  _OWORD v14[4] = v12;
  v14[5] = v61;
  v14[6] = v8;
  v14[7] = v11;
  swift_release();
  sub_255B5DB70(v53, (uint64_t)&unk_269F23600, (uint64_t)v14);
  swift_release();
  char v16 = sub_255C80A48();
  char v59 = *(void **)(v0 + 560);
  uint64_t v17 = *(void *)(v0 + 544);
  if (v16)
  {
    uint64_t v19 = *(void **)(v0 + 488);
    id v18 = *(void **)(v0 + 496);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
    uint64_t v20 = *(void *)(v0 + 336);
    uint64_t v21 = *(void *)(v0 + 320);
    uint64_t v23 = *(void *)(v0 + 56);
    uint64_t v22 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 352))(v20, *(void *)(v0 + 344), v21);
    os_log_type_t v24 = sub_255C80BD8();
    v62[0] = v23;
    v62[1] = v22;
    sub_255B54FC4(v24, 0xD00000000000004ELL, 0x8000000255C9D8E0, (uint64_t)v62);
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    v58(v20, v21);
  }
  else
  {
    uint64_t v25 = *(void **)(v0 + 496);
    uint64_t v26 = *(void **)(v0 + 488);
    uint64_t v27 = *(void *)(v0 + 288);
    uint64_t v56 = *(void *)(v0 + 64);
    uint64_t v54 = *(void *)(v0 + 56);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 528))(v27, 1, 1, *(void *)(v0 + 520));
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    swift_bridgeObjectRetain();
    id v29 = v25;
    id v30 = v50;
    swift_retain();
    swift_retain();
    uint64_t v31 = sub_255C80948();
    uint64_t v32 = (void *)swift_allocObject();
    void v32[2] = v31;
    v32[3] = MEMORY[0x263F8F500];
    v32[4] = v28;
    v32[5] = v17;
    v32[6] = v54;
    v32[7] = v56;
    v32[8] = v30;
    v32[9] = v29;
    swift_release();
    sub_255B5DB70(v27, (uint64_t)&unk_269F23610, (uint64_t)v32);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_255AD3794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = sub_255C7D898();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  sub_255C80958();
  v6[11] = sub_255C80948();
  uint64_t v9 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD388C, v9, v8);
}

uint64_t sub_255AD388C()
{
  uint64_t v11 = v0;
  swift_release();
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)qword_26B2AA500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  os_log_type_t v7 = sub_255C80BE8();
  v10[0] = v5;
  v10[1] = v4;
  sub_255B54FC4(v7, 0xD00000000000001ELL, 0x8000000255C9DA30, (uint64_t)v10);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_255AD082C();
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_255AD39F4(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *a1;
  uint64_t v6 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_255C80958();
  swift_retain();
  uint64_t v8 = sub_255C80948();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8F500];
  void v9[2] = v8;
  v9[3] = v10;
  _OWORD v9[4] = v7;
  v9[5] = v5;
  swift_release();
  sub_255B5DB70((uint64_t)v4, (uint64_t)&unk_269F23660, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_255AD3B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  sub_255C80958();
  v5[8] = sub_255C80948();
  uint64_t v7 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD3C18, v7, v6);
}

uint64_t sub_255AD3C18()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    uint64_t v1 = (void *)v0[5];

    if (v1) {
      sub_255AD6B2C(v0[7]);
    }
    swift_release();
  }
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void sub_255AD3D14(void *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  if (*a1 == 2 && (v4 = a2 + 16, swift_beginAccess(), (uint64_t v5 = (void *)MEMORY[0x25A297D40](v4)) != 0))
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_rate);
    float v8 = v7;

    BOOL v9 = v8 == 1.0;
  }
  else
  {
    BOOL v9 = 0;
  }
  *a3 = v9;
}

uint64_t sub_255AD3DA4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_255C80958();
  swift_retain();
  uint64_t v5 = sub_255C80948();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x263F8F500];
  v6[2] = v5;
  v6[3] = v7;
  v6[4] = v4;
  swift_release();
  sub_255B5DB70((uint64_t)v2, (uint64_t)&unk_269F23650, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_255AD3F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  sub_255C80958();
  *(void *)(v4 + 72) = sub_255C80948();
  uint64_t v6 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD3FB8, v6, v5);
}

uint64_t sub_255AD3FB8()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    swift_retain();
    sub_255C2981C();
    swift_endAccess();
    swift_release();
    swift_release();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_255AD40A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_loopingPlayerItems);
  sub_255A43740(0, (unint64_t *)&qword_269F228F8);
  uint64_t v4 = sub_255C807F8();

  *a2 = v4;
}

uint64_t sub_255AD4118(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v39 - v13;
  unint64_t v15 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_255C812B8();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v18) {
        return swift_release();
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v18) {
        return swift_release();
      }
    }
    if (v18 >= 1)
    {
      id v40 = a5;
      uint64_t v41 = v17;
      id v42 = v14;
      uint64_t v43 = a3;
      uint64_t v44 = a4;
      unint64_t v47 = v15 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      uint64_t v19 = 0;
      uint64_t v46 = MEMORY[0x263F8EE60] + 8;
      uint64_t v48 = v18;
      unint64_t v49 = v15;
      while (1)
      {
        if (v47) {
          id v20 = (id)MEMORY[0x25A2969C0](v19, v15);
        }
        else {
          id v20 = *(id *)(v15 + 8 * v19 + 32);
        }
        uint64_t v21 = v20;
        uint64_t v22 = sub_255C80988();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
        v45(v12, 1, 1, v22);
        os_log_type_t v24 = (void *)swift_allocObject();
        void v24[2] = 0;
        uint64_t v25 = v24 + 2;
        v24[3] = 0;
        v24[4] = v21;
        int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22);
        id v27 = v21;
        if (v26 == 1)
        {
          sub_255A095A4((uint64_t)v12, (uint64_t *)&unk_26B29F0C0);
          if (*v25) {
            goto LABEL_13;
          }
        }
        else
        {
          sub_255C80978();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
          if (*v25)
          {
LABEL_13:
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v28 = sub_255C80908();
            uint64_t v30 = v29;
            swift_unknownObjectRelease();
            if (v30 | v28)
            {
              uint64_t v50 = 0;
              uint64_t v51 = 0;
              uint64_t v52 = v28;
              uint64_t v53 = v30;
            }
          }
        }
        ++v19;
        swift_task_create();

        swift_release();
        unint64_t v15 = v49;
        if (v48 == v19)
        {
          swift_bridgeObjectRelease();
          uint64_t v31 = (uint64_t)v42;
          v45(v42, 1, 1, v22);
          sub_255C80958();
          uint64_t v32 = v44;
          swift_bridgeObjectRetain();
          id v33 = v40;
          uint64_t v34 = v41;
          swift_retain();
          uint64_t v35 = sub_255C80948();
          uint64_t v36 = (void *)swift_allocObject();
          uint64_t v37 = MEMORY[0x263F8F500];
          v36[2] = v35;
          v36[3] = v37;
          uint64_t v38 = v43;
          _DWORD v36[4] = v34;
          v36[5] = v38;
          v36[6] = v32;
          v36[7] = v33;
          sub_255B5DB70(v31, (uint64_t)&unk_269F23640, (uint64_t)v36);
          swift_release();
          return swift_release();
        }
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_255AD4530()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A160B0;
  return sub_255C18124();
}

uint64_t sub_255AD45C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  uint64_t v8 = sub_255C7D898();
  v7[6] = v8;
  v7[7] = *(void *)(v8 - 8);
  unsigned char v7[8] = swift_task_alloc();
  sub_255C80958();
  v7[9] = sub_255C80948();
  uint64_t v10 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD46B8, v10, v9);
}

uint64_t sub_255AD46B8()
{
  unint64_t v15 = v0;
  uint64_t v1 = v0[2];
  swift_release();
  uint64_t v2 = (double *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution + 16) & 1) == 0)
  {
    double v4 = *v2;
    double v3 = v2[1];
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[7];
    uint64_t v5 = v0[8];
    uint64_t v7 = v0[6];
    uint64_t v9 = v0[3];
    uint64_t v8 = v0[4];
    uint64_t v10 = __swift_project_value_buffer(v7, (uint64_t)qword_26B2AA500);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v10, v7);
    sub_255C810E8();
    sub_255C806E8();
    sub_255C80A78();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C80A78();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    os_log_type_t v11 = sub_255C80BD8();
    v14[0] = v9;
    v14[1] = v8;
    sub_255B54FC4(v11, 0, 0xE000000000000000, (uint64_t)v14);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_255C18574(v4, v3);
  }
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_255AD48F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  unsigned char v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  sub_255C80958();
  v7[9] = sub_255C80948();
  uint64_t v9 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AD4990, v9, v8);
}

uint64_t sub_255AD4990()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v4 = v0[7];
    uint64_t v3 = v0[8];
    *(void *)(Strong + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatusPublisher) = v0[6];
    swift_retain();
    swift_release();
    *(void *)(v2 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperTimeControlStatusPublisher) = v4;
    swift_retain();
    swift_release();
    *(void *)(v2 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperCurrentItemsPublisher) = v3;
    swift_retain();
    swift_release();
    swift_release();
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_255AD4A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = a8;
  v8[17] = v14;
  v8[14] = a6;
  v8[15] = a7;
  v8[12] = a4;
  v8[13] = a5;
  uint64_t v9 = sub_255C7D898();
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  sub_255C80958();
  v8[21] = sub_255C80948();
  uint64_t v11 = sub_255C80908();
  v8[22] = v11;
  v8[23] = v10;
  return MEMORY[0x270FA2498](sub_255AD4B98, v11, v10);
}

uint64_t sub_255AD4B98()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[24] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[25] = v2;
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210);
    v0[26] = v3;
    *uint64_t v2 = v0;
    v2[1] = sub_255AD4CC4;
    uint64_t v4 = v0[13];
    uint64_t v5 = MEMORY[0x263F8EE60] + 8;
    uint64_t v6 = MEMORY[0x263F8E4E0];
    return MEMORY[0x270FA1FA8](v3, v4, v5, v3, v6);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_255AD4CC4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v5 = sub_255AD500C;
  }
  else {
    uint64_t v5 = sub_255AD4E00;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_255AD4E00()
{
  uint64_t v17 = v0;
  swift_release();
  uint64_t v1 = v0[24];
  uint64_t v3 = (void *)v0[16];
  uint64_t v2 = (void *)v0[17];
  swift_beginAccess();
  swift_retain();
  sub_255C2981C();
  swift_endAccess();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[11] = v3;
  id v4 = v3;
  swift_retain();
  sub_255C7DAD8();
  sub_255AD0654();
  uint64_t v5 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = v2;
  id v6 = v2;
  sub_255AD03B0(v5);

  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[19];
  uint64_t v7 = v0[20];
  uint64_t v9 = v0[18];
  uint64_t v11 = v0[14];
  uint64_t v10 = v0[15];
  uint64_t v12 = __swift_project_value_buffer(v9, (uint64_t)qword_26B2AA500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v12, v9);
  os_log_type_t v13 = sub_255C80C08();
  v16[0] = v11;
  v16[1] = v10;
  sub_255B54FC4(v13, 0xD00000000000001BLL, 0x8000000255C9DA80, (uint64_t)v16);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_255AD5398();
  swift_release();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_255AD500C()
{
  uint64_t v28 = v0;
  swift_release();
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[14];
  unint64_t v5 = v0[15];
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2AA500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v7, v4);
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_255C810E8();
  v0[8] = 0;
  v0[9] = 0xE000000000000000;
  sub_255C806E8();
  v0[10] = v1;
  sub_255C81228();
  sub_255C806E8();
  uint64_t v9 = v0[8];
  unint64_t v8 = v0[9];
  os_log_type_t v10 = sub_255C80BE8();
  uint64_t v26 = v6;
  unint64_t v27 = v5;
  sub_255B54FC4(v10, v9, v8, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  sub_255AD082C();

  uint64_t v11 = v0[24];
  os_log_type_t v13 = (void *)v0[16];
  uint64_t v12 = (void *)v0[17];
  swift_beginAccess();
  swift_retain();
  sub_255C2981C();
  swift_endAccess();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[11] = v13;
  id v14 = v13;
  swift_retain();
  sub_255C7DAD8();
  sub_255AD0654();
  unint64_t v15 = *(void **)(v11 + 16);
  *(void *)(v11 + 16) = v12;
  id v16 = v12;
  sub_255AD03B0(v15);

  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v18 = v0[19];
  uint64_t v17 = v0[20];
  uint64_t v19 = v0[18];
  uint64_t v21 = v0[14];
  unint64_t v20 = v0[15];
  uint64_t v22 = __swift_project_value_buffer(v19, (uint64_t)qword_26B2AA500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v22, v19);
  os_log_type_t v23 = sub_255C80C08();
  uint64_t v26 = v21;
  unint64_t v27 = v20;
  sub_255B54FC4(v23, 0xD00000000000001BLL, 0x8000000255C9DA80, (uint64_t)&v26);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  sub_255AD5398();
  swift_release();
  swift_task_dealloc();
  os_log_type_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_255AD5370(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2) {
    JUMPOUT(0x25A292E00);
  }
  return 0;
}

void sub_255AD5398()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F20);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  unint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = sub_255C7D898();
  uint64_t v35 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (unsigned __int8 *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23530);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void **)(v1 + 16);
  if (v18)
  {
    uint64_t v34 = v5;
    uint64_t v19 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_lastCommandExecution;
    swift_beginAccess();
    sub_255A09540(v19, (uint64_t)v17, &qword_269F23530);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11))
    {
      sub_255A095A4((uint64_t)v17, &qword_269F23530);
    }
    else
    {
      sub_255AD8188((uint64_t)v17, (uint64_t)v14);
      id v20 = v18;
      sub_255A095A4((uint64_t)v17, &qword_269F23530);
      int v21 = *v14;
      sub_255AD81EC((uint64_t)v14);
      if (v21 == 2)
      {
        swift_beginAccess();
        sub_255C2981C();
        swift_endAccess();
        if (qword_26B297CF8 != -1) {
          swift_once();
        }
        uint64_t v22 = __swift_project_value_buffer(v8, (uint64_t)qword_26B2AA500);
        uint64_t v23 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v10, v22, v8);
        os_log_type_t v24 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
        uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
        uint64_t v26 = *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
        swift_bridgeObjectRetain();
        os_log_type_t v27 = sub_255C80C08();
        uint64_t v36 = v25;
        uint64_t v37 = v26;
        sub_255B54FC4(v27, 0x20676E696C6C6143, 0xEF2E2E2E79616C70, (uint64_t)&v36);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
        objc_msgSend(v20, sel_play);
        uint64_t v38 = &type metadata for MCUILoggingContext;
        unint64_t v39 = sub_255AD83A0();
        uint64_t v28 = v24[1];
        uint64_t v36 = *v24;
        uint64_t v37 = v28;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_255C28F74((const char *)&v36);
        swift_endAccess();
        sub_255A095A4((uint64_t)&v36, &qword_269F279D0);
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_placementContext) == 1)
        {
          sub_255C7D648();

          uint64_t v29 = sub_255C7D668();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v7, 0, 1, v29);
        }
        else
        {

          uint64_t v30 = sub_255C7D668();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v7, 1, 1, v30);
        }
        uint64_t v31 = (uint64_t)v34;
        sub_255A10514((uint64_t)v7, (uint64_t)v34, &qword_269F23F20);
        uint64_t v32 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_playbackStartDate;
        swift_beginAccess();
        sub_255AD83F4(v31, v32, &qword_269F23F20);
        swift_endAccess();
      }
      else
      {
      }
    }
  }
}

uint64_t sub_255AD58A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, double a6, double a7)
{
  uint64_t v95 = a4;
  uint64_t v94 = a3;
  uint64_t v106 = a1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v11 - 8);
  long long v89 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F20);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v90 = (uint64_t)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_255C7D668();
  uint64_t v91 = *(void *)(v92 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v92);
  long long v87 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v88 = (char *)&v87 - v17;
  uint64_t v18 = sub_255C7D898();
  uint64_t v99 = *(void *)(v18 - 8);
  uint64_t v100 = v18;
  MEMORY[0x270FA5388](v18);
  long long v101 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23528);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23530);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v98 = (uint64_t)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v97 = (uint64_t)&v87 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (unsigned __int8 *)&v87 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v87 - v32;
  uint64_t v34 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (unsigned __int8 *)&v87 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  uint64_t v41 = (char *)&v87 - v40;
  unint64_t v42 = a5[1];
  unint64_t v103 = *a5;
  unint64_t v104 = v42;
  uint64_t v43 = (char *)&v87 + *(int *)(v39 + 20) - v40;
  uint64_t v44 = sub_255C7D5C8();
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
  uint64_t v93 = a2;
  v45(v43, a2, v44);
  uint64_t v46 = v105;
  *uint64_t v41 = v106;
  uint64_t v47 = v46 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_lastCommandExecution;
  swift_beginAccess();
  long long v102 = v41;
  sub_255AD8188((uint64_t)v41, (uint64_t)v33);
  long long v96 = *(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56);
  v96(v33, 0, 1, v34);
  uint64_t v48 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_255A09540(v47, (uint64_t)v23, &qword_269F23530);
  sub_255A09540((uint64_t)v33, v48, &qword_269F23530);
  unint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v49((uint64_t)v23, 1, v34) == 1)
  {
    sub_255A095A4((uint64_t)v33, &qword_269F23530);
    if (v49(v48, 1, v34) == 1)
    {
      sub_255A095A4((uint64_t)v23, &qword_269F23530);
      uint64_t v50 = (uint64_t)v102;
      return sub_255AD81EC(v50);
    }
    uint64_t v51 = &qword_269F23528;
  }
  else
  {
    sub_255A09540((uint64_t)v23, (uint64_t)v31, &qword_269F23530);
    if (v49(v48, 1, v34) == 1)
    {
      uint64_t v51 = &qword_269F23528;
    }
    else
    {
      sub_255AD833C(v48, (uint64_t)v38);
      if (*v31 == *v38)
      {
        char v52 = MEMORY[0x25A292E00](&v31[*(int *)(v34 + 20)], &v38[*(int *)(v34 + 20)]);
        sub_255AD81EC((uint64_t)v38);
        sub_255A095A4((uint64_t)v33, &qword_269F23530);
        sub_255AD81EC((uint64_t)v31);
        sub_255A095A4((uint64_t)v23, &qword_269F23530);
        uint64_t v53 = v101;
        uint64_t v50 = (uint64_t)v102;
        if (v52) {
          return sub_255AD81EC(v50);
        }
        goto LABEL_13;
      }
      sub_255AD81EC((uint64_t)v38);
      uint64_t v51 = &qword_269F23530;
    }
    sub_255A095A4((uint64_t)v33, &qword_269F23530);
    sub_255AD81EC((uint64_t)v31);
  }
  uint64_t v50 = (uint64_t)v102;
  sub_255A095A4((uint64_t)v23, v51);
  uint64_t v53 = v101;
LABEL_13:
  uint64_t v54 = v97;
  sub_255AD8188(v50, v97);
  v96((char *)v54, 0, 1, v34);
  uint64_t v55 = v98;
  sub_255A10514(v54, v98, &qword_269F23530);
  swift_beginAccess();
  sub_255AD83F4(v55, v47, &qword_269F23530);
  swift_endAccess();
  if (qword_26B297CF8 != -1) {
    swift_once();
  }
  uint64_t v56 = v100;
  uint64_t v57 = __swift_project_value_buffer(v100, (uint64_t)qword_26B2AA500);
  uint64_t v58 = v99;
  char v59 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 16);
  v59(v53, v57, v56);
  unint64_t v108 = 0;
  unint64_t v109 = 0xE000000000000000;
  sub_255C810E8();
  swift_bridgeObjectRelease();
  unint64_t v108 = 0xD000000000000013;
  unint64_t v109 = 0x8000000255C9D790;
  char v60 = v106;
  char v107 = v106;
  sub_255C80658();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  int64_t v61 = v108;
  unint64_t v62 = v109;
  os_log_type_t v63 = sub_255C80C08();
  unint64_t v108 = v103;
  unint64_t v109 = v104;
  sub_255B54FC4(v63, v61, v62, (uint64_t)&v108);
  swift_bridgeObjectRelease();
  uint64_t v64 = *(void (**)(char *, uint64_t))(v58 + 8);
  v64(v53, v56);
  switch(v60)
  {
    case 1:
      uint64_t v67 = *(void **)(v105 + 16);
      if (v67) {
        objc_msgSend(v67, sel_pause);
      }
      unint64_t v65 = v103;
      unint64_t v66 = v104;
      goto LABEL_20;
    case 3:
      v59(v53, v57, v56);
      uint64_t v69 = v105;
      unint64_t v71 = *(void *)(v105 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
      unint64_t v70 = *(void *)(v105 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
      swift_bridgeObjectRetain();
      os_log_type_t v72 = sub_255C80C08();
      unint64_t v108 = v71;
      unint64_t v109 = v70;
      sub_255B54FC4(v72, 0x6E69747465736552, 0xEC0000002E2E2E67, (uint64_t)&v108);
      swift_bridgeObjectRelease();
      v64(v53, v56);
      uint64_t v73 = *(void *)(v69 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask);
      *(void *)(v69 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_configurationTask) = 0;
      sub_255AD6974(v73);
      swift_release();
      uint64_t v74 = v69 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_playbackStartDate;
      swift_beginAccess();
      uint64_t v75 = v74;
      uint64_t v76 = v90;
      sub_255A09540(v75, v90, &qword_269F23F20);
      uint64_t v77 = v91;
      uint64_t v78 = v92;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v76, 1, v92) == 1)
      {
        sub_255AD81EC(v50);
        return sub_255A095A4(v76, &qword_269F23F20);
      }
      long long v79 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v88, v76, v78);
      uint64_t v80 = v87;
      sub_255C7D648();
      sub_255C7D618();
      uint64_t v82 = v81;
      uint64_t v83 = *(void (**)(char *, uint64_t))(v77 + 8);
      v83(v80, v78);
      uint64_t v84 = sub_255C80988();
      uint64_t v85 = (uint64_t)v89;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v89, 1, 1, v84);
      uint64_t v86 = (void *)swift_allocObject();
      v86[2] = 0;
      v86[3] = 0;
      v86[4] = v82;
      sub_255A812C8(v85, (uint64_t)&unk_269F23538, (uint64_t)v86);
      swift_release();
      sub_255A095A4(v85, (uint64_t *)&unk_26B29F0C0);
      v83(v79, v78);
      break;
    default:
      unint64_t v65 = v103;
      unint64_t v66 = v104;
LABEL_20:
      unint64_t v108 = v65;
      unint64_t v109 = v66;
      sub_255AD0B04(v93, v94, v95, (void **)&v108, a6, a7);
      return sub_255AD81EC(v50);
  }
  return sub_255AD81EC(v50);
}

uint64_t sub_255AD6318()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (double *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution + 16) & 1) == 0)
  {
    double v9 = *v7;
    double v8 = v7[1];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    os_log_type_t v10 = (void *)v18;
    if (v18)
    {
      sub_255C18574(v9, v8);
    }
    if (qword_26B297CF8 != -1) {
      swift_once();
    }
    uint64_t v11 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2AA500);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v11, v2);
    unint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_255C810E8();
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xD000000000000020;
    unint64_t v19 = 0x8000000255C9D840;
    void v17[5] = 540702524;
    v17[6] = 0xE400000000000000;
    sub_255C80A78();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C80A78();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    uint64_t v12 = v18;
    unint64_t v13 = v19;
    unint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
    unint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
    swift_bridgeObjectRetain();
    os_log_type_t v16 = sub_255C80C08();
    unint64_t v18 = v15;
    unint64_t v19 = v14;
    sub_255B54FC4(v16, v12, v13, (uint64_t)&v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_255AD6974(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    sub_255C80A18();
    uint64_t v7 = sub_255C7D5C8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    uint64_t v8 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentURL;
    swift_beginAccess();
    sub_255AD83F4((uint64_t)v6, v8, &qword_26B29F230);
    swift_endAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    v12[1] = 0;
    swift_retain();
    sub_255C7DAD8();
    sub_255AD0654();
    double v9 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = 0;
    sub_255AD03B0(v9);

    uint64_t v10 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_currentPresentationSize;
    *(void *)uint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    *(unsigned char *)(v10 + 16) = 1;
    uint64_t v11 = v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperItemResolution;
    *(void *)uint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    *(unsigned char *)(v11 + 16) = 1;
    sub_255AD6318();
    return swift_release();
  }
  return result;
}

void sub_255AD6B2C(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatus;
  if (*(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_looperStatus) != a1)
  {
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext);
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI18LooperConfigurator_loggingContext + 8);
    if (a1 < 2)
    {
      uint64_t v14 = qword_26B297CF8;
      swift_bridgeObjectRetain();
      if (v14 != -1) {
        swift_once();
      }
      uint64_t v15 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2AA500);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
      *(void *)&long long v47 = 0;
      *((void *)&v47 + 1) = 0xE000000000000000;
      sub_255C810E8();
      swift_bridgeObjectRelease();
      *(void *)&long long v47 = 0xD00000000000001FLL;
      *((void *)&v47 + 1) = 0x8000000255C9D770;
      AVPlayerLooperStatus.description.getter(*(void *)(v2 + v8));
      sub_255C806E8();
      swift_bridgeObjectRelease();
      sub_255C806E8();
      AVPlayerLooperStatus.description.getter(a1);
      sub_255C806E8();
      swift_bridgeObjectRelease();
      sub_255C806E8();
      unint64_t v17 = *((void *)&v47 + 1);
      uint64_t v16 = v47;
      os_log_type_t v18 = sub_255C80C08();
LABEL_23:
      *(void *)&long long v47 = v10;
      *((void *)&v47 + 1) = v9;
      sub_255B54FC4(v18, v16, v17, (uint64_t)&v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
LABEL_28:
      *(void *)(v2 + v8) = a1;
      return;
    }
    if (a1 != 2)
    {
      if (a1 == 3)
      {
        uint64_t v11 = qword_26B297CF8;
        swift_bridgeObjectRetain();
        if (v11 != -1) {
          swift_once();
        }
        uint64_t v12 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2AA500);
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
        os_log_type_t v13 = sub_255C80BE8();
        *(void *)&long long v47 = v10;
        *((void *)&v47 + 1) = v9;
        sub_255B54FC4(v13, 0xD000000000000010, 0x8000000255C9D6F0, (uint64_t)&v47);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        swift_bridgeObjectRelease();
        sub_255AD082C();
        goto LABEL_28;
      }
      uint64_t v32 = qword_26B297CF8;
      swift_bridgeObjectRetain();
      if (v32 != -1) {
        swift_once();
      }
      uint64_t v33 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2AA500);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v33, v4);
      *(void *)&long long v47 = 0;
      *((void *)&v47 + 1) = 0xE000000000000000;
      sub_255C810E8();
      swift_bridgeObjectRelease();
      *(void *)&long long v47 = 0xD000000000000029;
      *((void *)&v47 + 1) = 0x8000000255C9D6C0;
      AVPlayerLooperStatus.description.getter(a1);
      sub_255C806E8();
      swift_bridgeObjectRelease();
      unint64_t v17 = *((void *)&v47 + 1);
      uint64_t v16 = v47;
      os_log_type_t v18 = sub_255C80BF8();
      goto LABEL_23;
    }
    uint64_t v19 = qword_26B297CF8;
    swift_bridgeObjectRetain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2AA500);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v42 = v20;
    uint64_t v43 = v21;
    ((void (*)(char *))v21)(v7);
    os_log_type_t v22 = sub_255C80BE8();
    uint64_t v45 = v10;
    *(void *)&long long v47 = v10;
    *((void *)&v47 + 1) = v9;
    sub_255B54FC4(v22, 0x66207265706F6F4CLL, 0xEE002E64656C6961, (uint64_t)&v47);
    uint64_t v44 = *(void (**)(char *, uint64_t))(v5 + 8);
    v44(v7, v4);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    uint64_t v23 = (void *)v47;
    if ((void)v47
      && (id v24 = objc_msgSend((id)v47, sel_error), v23, v24)
      && (*(void *)&long long v47 = v24,
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D210),
          sub_255A43740(0, (unint64_t *)&qword_269F24C10),
          (swift_dynamicCast() & 1) != 0)
      && (id v25 = v46) != 0)
    {
      id v26 = objc_msgSend(v46, sel_userInfo);
      uint64_t v41 = (void *)sub_255C80458();

      uint64_t v27 = v41;
      uint64_t v28 = sub_255C80628();
      if (v27[2])
      {
        v40[1] = v29;
        unint64_t v30 = sub_255B39E20(v28, v29);
        if (v31)
        {
          sub_255A42E30(v27[7] + 32 * v30, (uint64_t)&v47);
        }
        else
        {
          long long v47 = 0u;
          long long v48 = 0u;
        }
      }
      else
      {
        long long v47 = 0u;
        long long v48 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v48 + 1))
      {
        type metadata accessor for AVError(0);
        if (swift_dynamicCast())
        {
          uint64_t v41 = v46;
          sub_255AD8710((unint64_t *)&unk_269F208B0, type metadata accessor for AVError);
          sub_255C7D488();

          uint64_t v34 = v42;
          uint64_t v35 = v43;
          if ((unint64_t)(v47 + 11819) < 2)
          {
            v43(v7, v42, v4);
            os_log_type_t v39 = sub_255C80C08();
            *(void *)&long long v47 = v45;
            *((void *)&v47 + 1) = v9;
            sub_255B54FC4(v39, 0xD00000000000003ALL, 0x8000000255C9D730, (uint64_t)&v47);

            v44(v7, v4);
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_27;
        }
LABEL_26:
        uint64_t v34 = v42;
        uint64_t v35 = v43;
LABEL_27:
        v35(v7, v34, v4);
        *(void *)&long long v47 = 0;
        *((void *)&v47 + 1) = 0xE000000000000000;
        sub_255C810E8();
        swift_bridgeObjectRelease();
        *(void *)&long long v47 = 0xD00000000000001ALL;
        *((void *)&v47 + 1) = 0x8000000255C9D710;
        id v46 = v25;
        id v36 = v25;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F23520);
        sub_255C80658();
        sub_255C806E8();
        swift_bridgeObjectRelease();
        long long v37 = v47;
        os_log_type_t v38 = sub_255C80BE8();
        *(void *)&long long v47 = v45;
        *((void *)&v47 + 1) = v9;
        sub_255B54FC4(v38, v37, *((unint64_t *)&v37 + 1), (uint64_t)&v47);
        swift_bridgeObjectRelease();
        v44(v7, v4);
        swift_bridgeObjectRelease();
        sub_255AD082C();

        goto LABEL_28;
      }
    }
    else
    {
      id v25 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
    }
    sub_255A095A4((uint64_t)&v47, &qword_26B297D00);
    goto LABEL_26;
  }
}

unint64_t AVPlayerLooperStatus.description.getter(uint64_t a1)
{
  return sub_255AD736C(a1);
}

unint64_t sub_255AD734C()
{
  return AVPlayerLooperStatus.description.getter(*v0);
}

unint64_t MPCScriptedLooperStatus.description.getter(uint64_t a1)
{
  return sub_255AD736C(a1);
}

unint64_t sub_255AD736C(uint64_t a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x7964616572;
      break;
    case 2:
      unint64_t result = 0x64656C696166;
      break;
    case 3:
      unint64_t result = 0x656C6C65636E6163;
      break;
    default:
      sub_255C810E8();
      swift_bridgeObjectRelease();
      MEMORY[0xE700000000000000](a1);
      sub_255C806E8();
      swift_bridgeObjectRelease();
      unint64_t result = 0xD000000000000011;
      break;
  }
  return result;
}

unint64_t sub_255AD7490()
{
  return MPCScriptedLooperStatus.description.getter(*v0);
}

uint64_t sub_255AD7498()
{
  return type metadata accessor for LooperConfigurator(0);
}

uint64_t type metadata accessor for LooperConfigurator(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F234C0);
}

void sub_255AD74C0()
{
  sub_255A1522C(319, &qword_269F234D0, &qword_269F234D8);
  if (v0 <= 0x3F)
  {
    sub_255A1522C(319, &qword_269F234E0, &qword_269F234E8);
    if (v1 <= 0x3F)
    {
      sub_255AD7738(319, &qword_269F234F0, (void (*)(uint64_t))type metadata accessor for LooperConfigurator.CommandExecution);
      if (v2 <= 0x3F)
      {
        sub_255AD7738(319, &qword_26B297D08, MEMORY[0x263F06EA8]);
        if (v3 <= 0x3F)
        {
          sub_255AD7738(319, (unint64_t *)&qword_269F234F8, MEMORY[0x263F07490]);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for LooperConfigurator.CommandExecution(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F23500);
}

void sub_255AD7738(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_255C80E88();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_255AD778C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_255C7D5C8();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_255AD7858(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_255C7D5C8();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *sub_255AD78C0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_255C7D5C8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_255AD793C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_255C7D5C8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *sub_255AD79B8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_255C7D5C8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_255AD7A34(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_255C7D5C8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_255AD7AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255AD7AC4);
}

uint64_t sub_255AD7AC4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 252)
  {
    unsigned int v4 = *a1;
    if (v4 >= 4) {
      return v4 - 3;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_255C7D5C8();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255AD7B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255AD7B80);
}

unsigned char *sub_255AD7B80(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 252)
  {
    *unint64_t result = a2 + 3;
  }
  else
  {
    uint64_t v7 = sub_255C7D5C8();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_255AD7C24()
{
  uint64_t result = sub_255C7D5C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LooperConfigurator.LooperError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255AD7D88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LooperConfigurator.LooperError()
{
  return &type metadata for LooperConfigurator.LooperError;
}

uint64_t getEnumTagSinglePayload for MotionPlaybackCommand(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MotionPlaybackCommand(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255AD7F1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MotionPlaybackCommand()
{
  return &type metadata for MotionPlaybackCommand;
}

unint64_t sub_255AD7F58()
{
  unint64_t result = qword_269F23510;
  if (!qword_269F23510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23510);
  }
  return result;
}

unint64_t sub_255AD7FB0()
{
  unint64_t result = qword_269F23518;
  if (!qword_269F23518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23518);
  }
  return result;
}

uint64_t sub_255AD8004@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_255AD8084(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  sub_255C7DAD8();
  sub_255AD0654();
}

uint64_t sub_255AD8100@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_255AD8188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AD81EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255AD8248()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AD8280()
{
  double v2 = *(double *)(v0 + 32);
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_255A160B0;
  return sub_255BB392C(v2);
}

uint64_t sub_255AD833C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LooperConfigurator.CommandExecution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_255AD83A0()
{
  unint64_t result = qword_269F23548;
  if (!qword_269F23548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23548);
  }
  return result;
}

uint64_t sub_255AD83F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_255AD8458()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255AD8490()
{
  uint64_t v1 = sub_255C7D5C8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AD8594(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_255C7D5C8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  char v11 = *(unsigned char *)(v1 + 56);
  uint64_t v12 = v1 + v4;
  double v13 = *(double *)(v1 + v5);
  double v14 = *(double *)(v1 + v5 + 8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_255A16A8C;
  return sub_255AD1458(v13, v14, a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_255AD8710(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255AD875C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_255A16A8C;
  return sub_255C187F4(a1, v4, v5, v6);
}

id sub_255AD8810@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_status);
  *a2 = result;
  return result;
}

uint64_t sub_255AD8844(uint64_t *a1)
{
  return sub_255AD39F4(a1);
}

id sub_255AD884C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_timeControlStatus);
  *a2 = result;
  return result;
}

uint64_t sub_255AD8880()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_255AD88B8(void *a1@<X0>, BOOL *a2@<X8>)
{
  sub_255AD3D14(a1, v2, a2);
}

uint64_t sub_255AD88C0()
{
  return sub_255AD3DA4();
}

char *keypath_get_selector_loopingPlayerItems()
{
  return sel_loopingPlayerItems;
}

unint64_t sub_255AD88D8()
{
  unint64_t result = qword_269F235E0;
  if (!qword_269F235E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F235E8);
    sub_255A8654C(&qword_269F22910, (unint64_t *)&qword_269F228F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F235E0);
  }
  return result;
}

uint64_t sub_255AD8978()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AD89C0(unint64_t *a1)
{
  return sub_255AD4118(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_255AD89CC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255AD8A24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_255A16A8C;
  return sub_255AD48F4(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_255AD8AF8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AD8B58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  char v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *char v11 = v2;
  v11[1] = sub_255A16A8C;
  return sub_255AD4A94(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_255AD8C44()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255AD8C8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_255A16A8C;
  return sub_255AD3794(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_255AD8D58()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255A160B0;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_255A160B0;
  return sub_255C18124();
}

uint64_t sub_255AD8E2C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AD8E7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_255A16A8C;
  return sub_255AD45C0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_255AD8F50()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255AD8F58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_255A16A8C;
  return sub_255AD3F20(a1, v4, v5, v6);
}

uint64_t sub_255AD900C()
{
  return objectdestroy_189Tm();
}

uint64_t sub_255AD9014(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_255A16A8C;
  return sub_255AD3B80(a1, v4, v5, v7, v6);
}

uint64_t sub_255AD90D8()
{
  return sub_255AD082C();
}

unint64_t sub_255AD9100()
{
  unint64_t result = qword_269F23690;
  if (!qword_269F23690)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F225F0);
    sub_255A8654C(&qword_269F23698, &qword_269F23540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23690);
  }
  return result;
}

uint64_t sub_255AD91A0()
{
  return sub_255ACFCD8();
}

uint64_t sub_255AD91A8@<X0>(uint64_t a1@<X8>)
{
  _s17TransportControlsCMa();
  sub_255AE36A8((unint64_t *)&qword_26B299800, v2, (void (*)(uint64_t))_s17TransportControlsCMa);
  *(void *)a1 = sub_255C7E2B8();
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = sub_255C7E628();
  *(void *)(a1 + 24) = v4;
  type metadata accessor for NowPlayingViewControllerProxy();
  swift_getWitnessTable();
  *(void *)(a1 + 32) = sub_255C7E628();
  *(void *)(a1 + 40) = v5;
  uint64_t result = swift_getKeyPath();
  *(void *)(a1 + 48) = result;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

double sub_255AD9298@<D0>(uint64_t a1@<X8>)
{
  _s17TransportControlsCMa();
  sub_255AE36A8((unint64_t *)&qword_26B299800, v2, (void (*)(uint64_t))_s17TransportControlsCMa);
  *(void *)a1 = sub_255C7E2B8();
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = sub_255C7E628();
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = swift_getKeyPath();
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_255AD935C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v4 = sub_255C7E378();
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v70 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7E398();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v67 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC00);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v60 = *(void *)(a1 + 16);
  uint64_t v66 = v8;
  _s21CenterTransportButtonVMa();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7F0D8();
  sub_255C7E458();
  swift_getTupleTypeMetadata3();
  uint64_t v9 = sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v57 = v9;
  v52[0] = WitnessTable;
  uint64_t v11 = sub_255C7FED8();
  uint64_t v64 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int64_t v61 = (char *)v52 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCE0);
  uint64_t v13 = sub_255C7E458();
  uint64_t v63 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v58 = (char *)v52 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC70);
  uint64_t v15 = sub_255C7E458();
  uint64_t v65 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v62 = (char *)v52 - v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = sub_255A09998(&qword_26B29BCD8, &qword_26B29BCE0);
  v52[1] = v17;
  uint64_t v80 = v17;
  uint64_t v81 = v18;
  uint64_t v59 = v13;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = sub_255A09998(&qword_26B29BC68, &qword_26B29BC70);
  v52[2] = v19;
  uint64_t v78 = v19;
  uint64_t v79 = v20;
  uint64_t v21 = swift_getWitnessTable();
  *(void *)&v82[0] = v15;
  *((void *)&v82[0] + 1) = v21;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v23 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v53 = (char *)v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v52 - v26;
  *(_OWORD *)((char *)v86 + 10) = *(_OWORD *)((char *)v2 + 90);
  long long v28 = v2[5];
  long long v85 = v2[4];
  v86[0] = v28;
  long long v29 = v2[3];
  long long v83 = v2[2];
  long long v84 = v29;
  long long v30 = v2[1];
  v82[0] = *v2;
  v82[1] = v30;
  *(_OWORD *)((char *)v89 + 10) = *(_OWORD *)((char *)v86 + 10);
  v88[2] = v85;
  v89[0] = v28;
  v88[0] = v83;
  v88[1] = v29;
  *(_OWORD *)((char *)v87 + 10) = *(_OWORD *)((char *)v86 + 10);
  v86[4] = v85;
  v87[0] = v28;
  v86[2] = v83;
  v86[3] = v29;
  sub_255A1D4DC((uint64_t)v88, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4((uint64_t)v74);
  uint64_t result = sub_255A1D4DC((uint64_t)v88, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
  double v55 = *(double *)&v21;
  uint64_t v56 = v23;
  uint64_t v54 = v27;
  if (v77)
  {
    double v32 = 68.0;
    uint64_t v33 = v60;
    uint64_t v34 = v66;
  }
  else
  {
    if (v75)
    {
      __break(1u);
      return result;
    }
    double v32 = 30.0;
    uint64_t v33 = v60;
    uint64_t v34 = v66;
    if (v74[0] >= 375.0) {
      double v32 = 48.0;
    }
  }
  if (v77 | v76) {
    BOOL v35 = 1;
  }
  else {
    BOOL v35 = v76 == 9;
  }
  if (v35) {
    double v36 = 40.0;
  }
  else {
    double v36 = 32.0;
  }
  uint64_t v37 = sub_255C7E928();
  MEMORY[0x270FA5388](v37);
  v52[-6] = v33;
  v52[-5] = v34;
  v52[-4] = v82;
  *(double *)&v52[-3] = v32;
  *(double *)&v52[-2] = v36;
  os_log_type_t v38 = v61;
  sub_255C7FEC8();
  swift_getKeyPath();
  uint64_t v40 = v67;
  uint64_t v39 = v68;
  uint64_t v41 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, *MEMORY[0x263F18DC8], v69);
  uint64_t v42 = v58;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v11);
  swift_getKeyPath();
  LOBYTE(v74[0]) = 1;
  uint64_t v43 = v62;
  uint64_t v44 = v59;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v44);
  id v46 = v70;
  uint64_t v45 = v71;
  uint64_t v47 = v72;
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, *MEMORY[0x263F18D10], v72);
  long long v48 = v53;
  double v49 = v55;
  sub_255C7F7A8();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v15);
  *(void *)&v74[0] = v15;
  v74[1] = v49;
  swift_getOpaqueTypeConformance2();
  uint64_t v50 = v54;
  sub_255A20F54(v48);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v56 + 8);
  v51(v48, OpaqueTypeMetadata2);
  sub_255A20F54(v50);
  return ((uint64_t (*)(char *, uint64_t))v51)(v50, OpaqueTypeMetadata2);
}

uint64_t sub_255AD9BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v122 = a4;
  uint64_t v132 = a2;
  uint64_t v133 = a3;
  *(void *)&long long v113 = _s21CenterTransportButtonVMa();
  *(void *)&long long v114 = sub_255C7E458();
  uint64_t v116 = sub_255C7E458();
  uint64_t v5 = sub_255C7E458();
  sub_255C7F0D8();
  uint64_t v117 = (void (*)(char *, uint64_t))v5;
  uint64_t v131 = sub_255C7E458();
  uint64_t v128 = *(void *)(v131 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v131);
  uint64_t v130 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v129 = (char *)&v110 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEE0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EBF8);
  uint64_t v13 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v15 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC00);
  uint64_t v16 = MEMORY[0x270FA5388](v118);
  uint64_t v120 = (uint64_t)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v121 = (uint64_t)&v110 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v119 = (uint64_t)&v110 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v110 - v22;
  uint64_t v24 = *(void *)(a1 + 8);
  swift_beginAccess();
  int v25 = *(unsigned __int8 *)(v24 + 32);
  uint64_t v125 = v10;
  uint64_t v126 = v23;
  uint64_t v111 = v9;
  uint64_t v123 = v15;
  uint64_t v124 = v12;
  if (v25 == 255)
  {
    uint64_t v53 = 1;
  }
  else
  {
    uint64_t v27 = *(void *)(v24 + 16);
    uint64_t v115 = *(void (**)(void, void, void, void))(v24 + 24);
    uint64_t v26 = v115;
    *(void *)&long long v112 = v27;
    *((void *)&v155 + 1) = &type metadata for NowPlayingViewModel.LeadingTransportButtonConfiguration;
    *(void *)&v156[0] = sub_255AE05F0();
    *(void *)&long long v154 = v27;
    *((void *)&v154 + 1) = v26;
    LOBYTE(v155) = v25 & 1;
    swift_beginAccess();
    LOBYTE(v26) = *(unsigned char *)(v24 + 57);
    uint64_t v28 = swift_allocObject();
    uint64_t v30 = v132;
    uint64_t v29 = v133;
    *(void *)(v28 + 16) = v132;
    *(void *)(v28 + 24) = v29;
    long long v31 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v28 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v28 + 112) = v31;
    *(_OWORD *)(v28 + 122) = *(_OWORD *)(a1 + 90);
    long long v32 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v28 + 48) = v32;
    long long v33 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v28 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v28 + 80) = v33;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v30;
    *(void *)(v34 + 24) = v29;
    long long v35 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v34 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v34 + 112) = v35;
    *(_OWORD *)(v34 + 122) = *(_OWORD *)(a1 + 90);
    long long v36 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v34 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v34 + 48) = v36;
    long long v37 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v34 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v34 + 80) = v37;
    uint64_t v38 = swift_allocObject();
    uint64_t v134 = v13;
    uint64_t v39 = v38;
    *(void *)(v38 + 16) = v30;
    *(void *)(v38 + 24) = v29;
    long long v40 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v38 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v38 + 112) = v40;
    *(_OWORD *)(v38 + 122) = *(_OWORD *)(a1 + 90);
    long long v41 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v38 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v38 + 48) = v41;
    long long v42 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v38 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v38 + 80) = v42;
    sub_255A524B4(&v154, (uint64_t)&v162);
    BYTE8(v164[0]) = (_BYTE)v26;
    *(void *)&v164[1] = sub_255AE4478;
    *((void *)&v164[1] + 1) = v28;
    *(void *)&long long v165 = sub_255AE0678;
    *((void *)&v165 + 1) = v34;
    *(void *)&long long v166 = sub_255AE06A4;
    *((void *)&v166 + 1) = v39;
    sub_255AE0580((uint64_t)&v162, (uint64_t)&v154);
    *(void *)&long long v159 = 0x3FF0000000000000;
    WORD4(v159) = 0;
    sub_255AE43C4(a1);
    sub_255AE43C4(a1);
    sub_255AE43C4(a1);
    sub_255ADFC50(v112, (uint64_t)v115, v25);
    sub_255AE05B8(&v162);
    uint64_t v43 = sub_255C7F248();
    uint64_t KeyPath = swift_getKeyPath();
    sub_255A09540((uint64_t)&v154, (uint64_t)&v162, &qword_26B29B630);
    *(void *)&long long v168 = KeyPath;
    *((void *)&v168 + 1) = v43;
    sub_255A095A4((uint64_t)&v154, &qword_26B29B630);
    sub_255C7F278();
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC70);
    unint64_t v46 = sub_255AE42E4();
    uint64_t v47 = v124;
    sub_255C7F5B8();
    sub_255A095A4((uint64_t)&v162, &qword_26B29EC70);
    id v48 = objc_msgSend(self, sel_mainBundle);
    uint64_t v49 = sub_255B4C6B8();
    uint64_t v51 = v50;

    *(void *)&long long v162 = v49;
    *((void *)&v162 + 1) = v51;
    uint64_t v23 = v126;
    sub_255C806E8();
    sub_255C806E8();
    *(void *)&long long v162 = v45;
    *((void *)&v162 + 1) = v46;
    swift_getOpaqueTypeConformance2();
    uint64_t v52 = (uint64_t)v123;
    sub_255C7F978();
    uint64_t v13 = v134;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v125 + 8))(v47, v9);
    sub_255A10514(v52, (uint64_t)v23, &qword_26B29EBF8);
    uint64_t v53 = 0;
  }
  uint64_t v54 = *(void (**)(void, void, void, void))(v13 + 56);
  uint64_t v134 = v13 + 56;
  uint64_t v115 = v54;
  v54(v23, v53, 1, v127);
  swift_retain();
  uint64_t v55 = sub_255C7E628();
  uint64_t v57 = v56;
  _s17TransportControlsCMa();
  sub_255AE36A8((unint64_t *)&qword_26B299800, v58, (void (*)(uint64_t))_s17TransportControlsCMa);
  uint64_t v59 = sub_255C7E2B8();
  *(void *)&long long v170 = v55;
  *((void *)&v170 + 1) = v57;
  *(void *)&long long v171 = v59;
  *((void *)&v171 + 1) = v60;
  long long v172 = xmmword_255C8BF20;
  sub_255A10514((uint64_t)&v172, (uint64_t)v175, &qword_26B29F258);
  long long v173 = v170;
  long long v174 = v171;
  long long v162 = v170;
  long long v163 = v171;
  v164[0] = v172;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F628();
  sub_255AE01A8((uint64_t)&v173);
  sub_255AE01D4((uint64_t)&v174);
  sub_255AE0200((uint64_t)v175);
  long long v112 = v154;
  long long v142 = v154;
  long long v143 = v155;
  *(void *)&v144[0] = *(void *)&v156[0];
  long long v113 = *(_OWORD *)((char *)v156 + 8);
  *(_OWORD *)((char *)v144 + 8) = *(_OWORD *)((char *)v156 + 8);
  WORD4(v144[1]) = WORD4(v156[1]);
  sub_255C801F8();
  uint64_t v152 = WitnessTable;
  uint64_t v153 = MEMORY[0x263F198F8];
  uint64_t v62 = swift_getWitnessTable();
  sub_255C7FA38();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  long long v114 = v162;
  long long v142 = v162;
  long long v143 = v163;
  *(void *)&v144[0] = *(void *)&v164[0];
  long long v113 = *(_OWORD *)((char *)v164 + 8);
  *(_OWORD *)((char *)v144 + 8) = *(_OWORD *)((char *)v164 + 8);
  WORD4(v144[1]) = WORD4(v164[1]);
  *(void *)&long long v145 = v165;
  BYTE8(v145) = BYTE8(v165);
  *(void *)&long long v146 = v166;
  BYTE8(v146) = BYTE8(v166);
  long long v147 = v167;
  sub_255C7F188();
  uint64_t v150 = v62;
  uint64_t v151 = MEMORY[0x263F18860];
  uint64_t v63 = swift_getWitnessTable();
  sub_255C7FAF8();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  long long v167 = v159;
  long long v168 = v160;
  v169[0] = v161[0];
  *(_OWORD *)((char *)v169 + 9) = *(_OWORD *)((char *)v161 + 9);
  v164[0] = v156[0];
  v164[1] = v156[1];
  long long v165 = v157;
  long long v166 = v158;
  long long v162 = v154;
  long long v163 = v155;
  long long v147 = v159;
  long long v148 = v160;
  v149[0] = v161[0];
  *(_OWORD *)((char *)v149 + 9) = *(_OWORD *)((char *)v161 + 9);
  v144[0] = v156[0];
  v144[1] = v156[1];
  long long v145 = v157;
  long long v146 = v158;
  long long v142 = v154;
  long long v143 = v155;
  uint64_t v140 = v63;
  uint64_t v141 = MEMORY[0x263F18C10];
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v65 = v130;
  sub_255B4BFB8();
  sub_255AE41B4((uint64_t)&v162);
  uint64_t v66 = sub_255AE36A8((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v138 = v64;
  uint64_t v139 = v66;
  uint64_t v67 = v131;
  uint64_t v116 = swift_getWitnessTable();
  sub_255A20F54(v65);
  uint64_t v117 = *(void (**)(char *, uint64_t))(v128 + 8);
  v117(v65, v67);
  uint64_t v68 = *(void *)(a1 + 8);
  swift_beginAccess();
  int v69 = *(unsigned __int8 *)(v68 + 56);
  if (v69 == 255)
  {
    uint64_t v99 = v119;
    uint64_t v100 = 1;
  }
  else
  {
    uint64_t v72 = v68 + 40;
    uint64_t v70 = *(void *)(v68 + 40);
    *(void *)&long long v114 = *(void *)(v72 + 8);
    uint64_t v71 = v114;
    *(void *)&long long v113 = v70;
    *((void *)&v143 + 1) = &type metadata for NowPlayingViewModel.TrailingTransportButtonConfiguration;
    *(void *)&v144[0] = sub_255AE04A8();
    *(void *)&long long v142 = v70;
    *((void *)&v142 + 1) = v71;
    LOBYTE(v143) = v69 & 1;
    uint64_t v73 = *(void *)(a1 + 8);
    swift_beginAccess();
    LOBYTE(v73) = *(unsigned char *)(v73 + 57);
    uint64_t v74 = swift_allocObject();
    uint64_t v76 = v132;
    uint64_t v75 = v133;
    *(void *)(v74 + 16) = v132;
    *(void *)(v74 + 24) = v75;
    long long v77 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v74 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v74 + 112) = v77;
    *(_OWORD *)(v74 + 122) = *(_OWORD *)(a1 + 90);
    long long v78 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v74 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v74 + 48) = v78;
    long long v79 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v74 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v74 + 80) = v79;
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = v76;
    *(void *)(v80 + 24) = v75;
    long long v81 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v80 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v80 + 112) = v81;
    *(_OWORD *)(v80 + 122) = *(_OWORD *)(a1 + 90);
    long long v82 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v80 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v80 + 48) = v82;
    long long v83 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v80 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v80 + 80) = v83;
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = v76;
    *(void *)(v84 + 24) = v75;
    long long v85 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v84 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v84 + 112) = v85;
    *(_OWORD *)(v84 + 122) = *(_OWORD *)(a1 + 90);
    long long v86 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v84 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v84 + 48) = v86;
    long long v87 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v84 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v84 + 80) = v87;
    sub_255A524B4(&v142, (uint64_t)&v154);
    BYTE8(v156[0]) = v73;
    *(void *)&v156[1] = sub_255AE4388;
    *((void *)&v156[1] + 1) = v74;
    *(void *)&long long v157 = sub_255AE0530;
    *((void *)&v157 + 1) = v80;
    *(void *)&long long v158 = sub_255AE055C;
    *((void *)&v158 + 1) = v84;
    sub_255AE0580((uint64_t)&v154, (uint64_t)&v142);
    *(void *)&long long v147 = 0x3FF0000000000000;
    WORD4(v147) = 0;
    sub_255AE43C4(a1);
    sub_255AE43C4(a1);
    sub_255AE43C4(a1);
    sub_255ADFC50(v113, v114, v69);
    sub_255AE05B8(&v154);
    uint64_t v88 = sub_255C7F248();
    uint64_t v89 = swift_getKeyPath();
    sub_255A09540((uint64_t)&v142, (uint64_t)&v154, &qword_26B29B630);
    *(void *)&long long v160 = v89;
    *((void *)&v160 + 1) = v88;
    sub_255A095A4((uint64_t)&v142, &qword_26B29B630);
    sub_255C7F278();
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC70);
    unint64_t v91 = sub_255AE42E4();
    uint64_t v92 = v124;
    sub_255C7F5B8();
    sub_255A095A4((uint64_t)&v154, &qword_26B29EC70);
    id v93 = objc_msgSend(self, sel_mainBundle);
    uint64_t v94 = sub_255B4C6B8();
    uint64_t v96 = v95;

    *(void *)&long long v154 = v94;
    *((void *)&v154 + 1) = v96;
    sub_255C806E8();
    sub_255C806E8();
    *(void *)&long long v154 = v90;
    *((void *)&v154 + 1) = v91;
    swift_getOpaqueTypeConformance2();
    uint64_t v97 = (uint64_t)v123;
    uint64_t v98 = v111;
    sub_255C7F978();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v125 + 8))(v92, v98);
    uint64_t v99 = v119;
    sub_255A10514(v97, v119, &qword_26B29EBF8);
    uint64_t v100 = 0;
  }
  v115(v99, v100, 1, v127);
  uint64_t v101 = (uint64_t)v126;
  uint64_t v102 = v121;
  sub_255A09540((uint64_t)v126, v121, &qword_26B29EC00);
  *(void *)&long long v154 = v102;
  unint64_t v103 = v129;
  uint64_t v105 = v130;
  uint64_t v104 = v131;
  (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v130, v129, v131);
  *((void *)&v154 + 1) = v105;
  uint64_t v106 = v120;
  sub_255A09540(v99, v120, &qword_26B29EC00);
  *(void *)&long long v155 = v106;
  *(void *)&long long v142 = v118;
  *((void *)&v142 + 1) = v104;
  *(void *)&long long v143 = v118;
  uint64_t v135 = sub_255AE1AD0(&qword_26B29EC08, &qword_26B29EC00, (void (*)(void))sub_255AE4200);
  uint64_t v136 = v116;
  uint64_t v137 = v135;
  sub_255AF64A0((uint64_t)&v154, 3uLL, (uint64_t)&v142);
  sub_255A095A4(v99, &qword_26B29EC00);
  char v107 = v103;
  unint64_t v108 = v117;
  v117(v107, v104);
  sub_255A095A4(v101, &qword_26B29EC00);
  sub_255A095A4(v106, &qword_26B29EC00);
  v108(v105, v104);
  return sub_255A095A4(v102, &qword_26B29EC00);
}

uint64_t sub_255ADAB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255C23448(*(void *)(a1 + 16));
  uint64_t v5 = *(void (**)(void, uint64_t, uint64_t))(a3 + 232);
  swift_unknownObjectRetain();
  v5(0, a2, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_255ADABF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_255C23448(*(void *)(a1 + 16));
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 232);
  swift_unknownObjectRetain();
  v7(a4, a2, a3);

  return swift_unknownObjectRelease();
}

uint64_t sub_255ADAC7C()
{
  return swift_release();
}

uint64_t sub_255ADACE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255C23448(*(void *)(a1 + 16));
  uint64_t v5 = *(void (**)(void, uint64_t, uint64_t))(a3 + 240);
  swift_unknownObjectRetain();
  v5(0, a2, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_255ADAD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_255C23448(*(void *)(a1 + 16));
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 240);
  swift_unknownObjectRetain();
  v7(a4, a2, a3);

  return swift_unknownObjectRelease();
}

uint64_t sub_255ADADE8()
{
  sub_255AE0154();
  sub_255C7E8C8();
  return v1;
}

uint64_t sub_255ADAE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v4 = sub_255C7E398();
  uint64_t v48 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B8F8);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v62 = *(void *)(a1 + 16);
  uint64_t v60 = v6;
  _s21CenterTransportButtonVMa();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7F0D8();
  sub_255C7E458();
  swift_getTupleTypeMetadata3();
  uint64_t v7 = sub_255C80318();
  swift_getWitnessTable();
  v47[1] = v7;
  uint64_t v8 = sub_255C7FED8();
  uint64_t v50 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v47 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCE0);
  uint64_t v11 = sub_255C7E458();
  uint64_t v52 = *(void **)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v47 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC70);
  uint64_t v51 = v11;
  uint64_t v14 = sub_255C7E458();
  uint64_t v56 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v53 = (char *)v47 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BA10);
  uint64_t v57 = v14;
  uint64_t v58 = sub_255C7E458();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v58);
  uint64_t v54 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v55 = (char *)v47 - v18;
  *(_OWORD *)&v71[9] = *(_OWORD *)((char *)v2 + 41);
  long long v19 = v2[1];
  v70[0] = *v2;
  v70[1] = v19;
  *(_OWORD *)uint64_t v71 = v2[2];
  uint64_t v20 = *(void *)&v71[16];
  char v21 = v71[24];
  sub_255A0877C(*(uint64_t *)&v71[16], v71[24]);
  sub_255ABB578(v20, v21, &v69);
  sub_255A087D0(v20, v21);
  if (v69)
  {
    if (qword_26B29C0D0 != -1) {
      swift_once();
    }
    uint64_t v22 = &qword_26B29C0B0;
  }
  else
  {
    if (qword_26B29AB58 != -1) {
      swift_once();
    }
    uint64_t v22 = &qword_26B29AB30;
  }
  uint64_t v23 = v4;
  uint64_t v26 = v22[1];
  uint64_t v25 = v22[2];
  uint64_t v27 = *v22;
  v47[0] = v22[3];
  uint64_t v24 = v47[0];
  uint64_t v28 = swift_retain();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = v60;
  v47[-8] = v62;
  v47[-7] = v29;
  v47[-6] = v70;
  v47[-5] = v27;
  v47[-4] = v26;
  v47[-3] = v25;
  v47[-2] = v24;
  sub_255C7E928();
  sub_255C7FEC8();
  swift_getKeyPath();
  uint64_t v30 = v48;
  long long v31 = v49;
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v49, *MEMORY[0x263F18DC8], v4);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v8);
  swift_getKeyPath();
  char v69 = 0;
  uint64_t v33 = sub_255A09998(&qword_26B29BCD8, &qword_26B29BCE0);
  uint64_t v67 = WitnessTable;
  uint64_t v68 = v33;
  uint64_t v34 = v51;
  uint64_t v35 = swift_getWitnessTable();
  long long v36 = v53;
  sub_255C7F678();
  swift_release();
  uint64_t v37 = ((uint64_t (*)(char *, uint64_t))v52[1])(v13, v34);
  uint64_t v52 = v47;
  MEMORY[0x270FA5388](v37);
  v47[-4] = v62;
  v47[-3] = v29;
  v47[-2] = v70;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B620);
  uint64_t v38 = sub_255A09998(&qword_26B29BC68, &qword_26B29BC70);
  uint64_t v65 = v35;
  uint64_t v66 = v38;
  uint64_t v39 = v57;
  uint64_t v40 = swift_getWitnessTable();
  sub_255A09998(&qword_26B29B618, &qword_26B29B620);
  long long v41 = v54;
  sub_255C7F588();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v39);
  uint64_t v42 = sub_255A09998(&qword_26B29BA08, &qword_26B29BA10);
  uint64_t v63 = v40;
  uint64_t v64 = v42;
  uint64_t v43 = v58;
  swift_getWitnessTable();
  uint64_t v44 = v55;
  sub_255A20F54(v41);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v59 + 8);
  v45(v41, v43);
  sub_255A20F54(v44);
  return ((uint64_t (*)(char *, uint64_t))v45)(v44, v43);
}

uint64_t sub_255ADB6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v108 = a3;
  uint64_t v109 = a4;
  uint64_t v93 = a2;
  uint64_t v105 = a5;
  _s21CenterTransportButtonVMa();
  *(void *)&long long v98 = sub_255C7E458();
  uint64_t v6 = sub_255C7E458();
  sub_255C7F0D8();
  uint64_t v99 = (void (*)(char *, uint64_t))v6;
  uint64_t v113 = sub_255C7E458();
  uint64_t v110 = *(void *)(v113 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v113);
  long long v112 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v111 = (char *)&v92 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B8F0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v92 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B8F8);
  uint64_t v13 = MEMORY[0x270FA5388](v101);
  uint64_t v103 = (uint64_t)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v104 = (uint64_t)&v92 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v102 = (uint64_t)&v92 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v92 - v19;
  uint64_t v21 = *(void *)(a1 + 48);
  char v22 = *(unsigned char *)(a1 + 56);
  sub_255A0877C(v21, v22);
  sub_255ABB578(v21, v22, &v127);
  sub_255A087D0(v21, v22);
  uint64_t v106 = v20;
  if (v127 == 1
    || (sub_255A0877C(v21, v22), sub_255ABB578(v21, v22, &v127), sub_255A087D0(v21, v22), v127 == 2))
  {
    uint64_t v23 = *(void *)(a1 + 8);
    swift_beginAccess();
    int v24 = *(unsigned __int8 *)(v23 + 32);
    if (v24 == 255)
    {
      uint64_t v45 = 1;
    }
    else
    {
      uint64_t v27 = v23 + 16;
      uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 16);
      uint64_t v100 = *(void *)(v27 + 8);
      uint64_t v26 = v100;
      uint64_t v97 = v25;
      *((void *)&v128 + 1) = &type metadata for NowPlayingViewModel.LeadingTransportButtonConfiguration;
      *(void *)uint64_t v129 = sub_255AE05F0();
      *(void *)&long long v127 = v25;
      *((void *)&v127 + 1) = v26;
      LOBYTE(v128) = v24 & 1;
      uint64_t v28 = *(void *)(a1 + 8);
      swift_beginAccess();
      LODWORD(v96) = *(unsigned __int8 *)(v28 + 57);
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = v108;
      uint64_t v31 = v109;
      *(void *)(v29 + 16) = v108;
      *(void *)(v29 + 24) = v31;
      long long v32 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v29 + 32) = *(_OWORD *)a1;
      *(_OWORD *)(v29 + 48) = v32;
      *(_OWORD *)(v29 + 64) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v29 + 73) = *(_OWORD *)(a1 + 41);
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v30;
      *(void *)(v33 + 24) = v31;
      long long v34 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v33 + 32) = *(_OWORD *)a1;
      *(_OWORD *)(v33 + 48) = v34;
      *(_OWORD *)(v33 + 64) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v33 + 73) = *(_OWORD *)(a1 + 41);
      uint64_t v35 = swift_allocObject();
      uint64_t v107 = v11;
      uint64_t v36 = v10;
      uint64_t v37 = v35;
      *(void *)(v35 + 16) = v30;
      *(void *)(v35 + 24) = v31;
      long long v38 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v35 + 32) = *(_OWORD *)a1;
      *(_OWORD *)(v35 + 48) = v38;
      *(_OWORD *)(v35 + 64) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v35 + 73) = *(_OWORD *)(a1 + 41);
      sub_255A524B4(&v127, (uint64_t)&v114);
      LOBYTE(v117) = v96;
      *((void *)&v117 + 1) = sub_255AE064C;
      uint64_t v118 = v29;
      uint64_t v119 = sub_255AE0678;
      uint64_t v120 = v33;
      uint64_t v121 = sub_255AE06A4;
      uint64_t v122 = v37;
      sub_255AE0580((uint64_t)&v114, (uint64_t)&v127);
      *(void *)&long long v135 = 0x3FF0000000000000;
      WORD4(v135) = 0;
      sub_255AE00D4(a1);
      sub_255AE00D4(a1);
      sub_255AE00D4(a1);
      sub_255ADFC50((uint64_t)v97, v100, v24);
      sub_255AE05B8(&v114);
      sub_255C801F8();
      sub_255C7DFE8();
      sub_255A09540((uint64_t)&v127, (uint64_t)&v114, &qword_26B29B630);
      long long v124 = v151;
      long long v125 = v152;
      long long v126 = v153;
      sub_255A095A4((uint64_t)&v127, &qword_26B29B630);
      uint64_t KeyPath = swift_getKeyPath();
      sub_255A09540((uint64_t)&v114, (uint64_t)&v127, &qword_26B29B800);
      uint64_t v136 = KeyPath;
      uint64_t v137 = v93;
      swift_retain();
      sub_255A095A4((uint64_t)&v114, &qword_26B29B800);
      id v40 = objc_msgSend(self, sel_mainBundle);
      uint64_t v41 = sub_255B4C6B8();
      uint64_t v43 = v42;

      *(void *)&long long v114 = v41;
      *((void *)&v114 + 1) = v43;
      sub_255C806E8();
      sub_255C806E8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B8A8);
      sub_255AE02DC();
      uint64_t v44 = (uint64_t)v92;
      uint64_t v20 = v106;
      sub_255C7F978();
      uint64_t v10 = v36;
      uint64_t v11 = v107;
      swift_bridgeObjectRelease();
      sub_255A095A4((uint64_t)&v127, &qword_26B29B8A8);
      sub_255A10514(v44, (uint64_t)v20, &qword_26B29B8F0);
      uint64_t v45 = 0;
    }
  }
  else
  {
    uint64_t v45 = 1;
  }
  unint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v100 = v10;
  uint64_t v107 = v11 + 56;
  uint64_t v97 = v46;
  v46((uint64_t)v20, v45, 1, v10);
  swift_retain();
  uint64_t v47 = sub_255C7E628();
  uint64_t v49 = v48;
  _s17TransportControlsCMa();
  sub_255AE36A8((unint64_t *)&qword_26B299800, v50, (void (*)(uint64_t))_s17TransportControlsCMa);
  uint64_t v51 = sub_255C7E2B8();
  *(void *)&long long v154 = v47;
  *((void *)&v154 + 1) = v49;
  *(void *)&long long v155 = v51;
  *((void *)&v155 + 1) = v52;
  long long v156 = xmmword_255C8BF30;
  sub_255A10514((uint64_t)&v156, (uint64_t)v159, &qword_26B29F258);
  long long v157 = v154;
  long long v158 = v155;
  long long v127 = v154;
  long long v128 = v155;
  *(_OWORD *)uint64_t v129 = v156;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F628();
  sub_255AE01A8((uint64_t)&v157);
  sub_255AE01D4((uint64_t)&v158);
  sub_255AE0200((uint64_t)v159);
  long long v95 = v114;
  long long v147 = v114;
  long long v148 = v115;
  *(void *)v149 = v116;
  long long v94 = v117;
  *(_OWORD *)&v149[8] = v117;
  __int16 v150 = v118;
  sub_255C801F8();
  uint64_t v96 = a1;
  uint64_t v145 = WitnessTable;
  uint64_t v146 = MEMORY[0x263F198F8];
  uint64_t v54 = swift_getWitnessTable();
  sub_255C7FA38();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  long long v98 = v127;
  long long v114 = v127;
  long long v115 = v128;
  uint64_t v116 = *(void *)v129;
  long long v95 = *(_OWORD *)&v129[8];
  long long v117 = *(_OWORD *)&v129[8];
  LOWORD(v118) = v130;
  uint64_t v119 = v131;
  LOBYTE(v120) = v132;
  uint64_t v121 = v133;
  LOBYTE(v122) = v134;
  long long v123 = v135;
  uint64_t v55 = v96;
  uint64_t v143 = v54;
  uint64_t v144 = MEMORY[0x263F18860];
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = v112;
  sub_255B4BFB8();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v58 = sub_255AE36A8((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v141 = v56;
  uint64_t v142 = v58;
  uint64_t v59 = v113;
  *(void *)&long long v98 = swift_getWitnessTable();
  sub_255A20F54(v57);
  uint64_t v99 = *(void (**)(char *, uint64_t))(v110 + 8);
  v99(v57, v59);
  uint64_t v60 = *(void *)(v55 + 8);
  swift_beginAccess();
  int v61 = *(unsigned __int8 *)(v60 + 56);
  if (v61 == 255)
  {
    uint64_t v81 = v102;
    uint64_t v82 = 1;
  }
  else
  {
    uint64_t v64 = v60 + 40;
    uint64_t v62 = *(void *)(v60 + 40);
    *(void *)&long long v95 = *(void *)(v64 + 8);
    uint64_t v63 = v95;
    *(void *)&long long v94 = v62;
    *((void *)&v128 + 1) = &type metadata for NowPlayingViewModel.TrailingTransportButtonConfiguration;
    *(void *)uint64_t v129 = sub_255AE04A8();
    *(void *)&long long v127 = v62;
    *((void *)&v127 + 1) = v63;
    LOBYTE(v128) = v61 & 1;
    uint64_t v65 = *(void *)(v55 + 8);
    swift_beginAccess();
    char v66 = *(unsigned char *)(v65 + 57);
    uint64_t v67 = swift_allocObject();
    uint64_t v69 = v108;
    uint64_t v68 = v109;
    *(void *)(v67 + 16) = v108;
    *(void *)(v67 + 24) = v68;
    long long v70 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)(v67 + 32) = *(_OWORD *)v55;
    *(_OWORD *)(v67 + 48) = v70;
    *(_OWORD *)(v67 + 64) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(v67 + 73) = *(_OWORD *)(v55 + 41);
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = v69;
    *(void *)(v71 + 24) = v68;
    long long v72 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)(v71 + 32) = *(_OWORD *)v55;
    *(_OWORD *)(v71 + 48) = v72;
    *(_OWORD *)(v71 + 64) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(v71 + 73) = *(_OWORD *)(v55 + 41);
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = v69;
    *(void *)(v73 + 24) = v68;
    long long v74 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)(v73 + 32) = *(_OWORD *)v55;
    *(_OWORD *)(v73 + 48) = v74;
    *(_OWORD *)(v73 + 64) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(v73 + 73) = *(_OWORD *)(v55 + 41);
    sub_255A524B4(&v127, (uint64_t)&v114);
    LOBYTE(v117) = v66;
    *((void *)&v117 + 1) = sub_255AE0504;
    uint64_t v118 = v67;
    uint64_t v119 = sub_255AE0530;
    uint64_t v120 = v71;
    uint64_t v121 = sub_255AE055C;
    uint64_t v122 = v73;
    sub_255AE0580((uint64_t)&v114, (uint64_t)&v127);
    *(void *)&long long v135 = 0x3FF0000000000000;
    WORD4(v135) = 0;
    sub_255AE00D4(v55);
    sub_255AE00D4(v55);
    sub_255AE00D4(v55);
    sub_255ADFC50(v94, v95, v61);
    sub_255AE05B8(&v114);
    sub_255C801F8();
    sub_255C7DFE8();
    sub_255A09540((uint64_t)&v127, (uint64_t)&v114, &qword_26B29B630);
    long long v124 = v147;
    long long v125 = v148;
    long long v126 = *(_OWORD *)v149;
    sub_255A095A4((uint64_t)&v127, &qword_26B29B630);
    uint64_t v75 = swift_getKeyPath();
    sub_255A09540((uint64_t)&v114, (uint64_t)&v127, &qword_26B29B800);
    uint64_t v136 = v75;
    uint64_t v137 = v93;
    swift_retain();
    sub_255A095A4((uint64_t)&v114, &qword_26B29B800);
    id v76 = objc_msgSend(self, sel_mainBundle);
    uint64_t v77 = sub_255B4C6B8();
    uint64_t v79 = v78;

    *(void *)&long long v114 = v77;
    *((void *)&v114 + 1) = v79;
    sub_255C806E8();
    sub_255C806E8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B8A8);
    sub_255AE02DC();
    uint64_t v80 = (uint64_t)v92;
    sub_255C7F978();
    swift_bridgeObjectRelease();
    sub_255A095A4((uint64_t)&v127, &qword_26B29B8A8);
    uint64_t v81 = v102;
    sub_255A10514(v80, v102, &qword_26B29B8F0);
    uint64_t v82 = 0;
  }
  v97(v81, v82, 1, v100);
  uint64_t v83 = (uint64_t)v106;
  uint64_t v84 = v104;
  sub_255A09540((uint64_t)v106, v104, &qword_26B29B8F8);
  *(void *)&long long v127 = v84;
  long long v85 = v111;
  long long v87 = v112;
  uint64_t v86 = v113;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v112, v111, v113);
  *((void *)&v127 + 1) = v87;
  uint64_t v88 = v103;
  sub_255A09540(v81, v103, &qword_26B29B8F8);
  *(void *)&long long v128 = v88;
  *(void *)&long long v114 = v101;
  *((void *)&v114 + 1) = v86;
  *(void *)&long long v115 = v101;
  uint64_t v138 = sub_255AE1AD0(&qword_26B29B900, &qword_26B29B8F8, (void (*)(void))sub_255AE022C);
  uint64_t v139 = v98;
  uint64_t v140 = v138;
  sub_255AF64A0((uint64_t)&v127, 3uLL, (uint64_t)&v114);
  sub_255A095A4(v81, &qword_26B29B8F8);
  uint64_t v89 = v85;
  uint64_t v90 = v99;
  v99(v89, v86);
  sub_255A095A4(v83, &qword_26B29B8F8);
  sub_255A095A4(v88, &qword_26B29B8F8);
  v90(v87, v86);
  return sub_255A095A4(v84, &qword_26B29B8F8);
}

uint64_t sub_255ADC568(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_255C7EC88();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7ED98();
  sub_255C7E0E8();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v22[5] = sub_255C7FC78();
  v22[1] = v12;
  void v22[2] = v14;
  v22[3] = v16;
  _OWORD v22[4] = v18;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  long long v20 = a2[1];
  *(_OWORD *)(v19 + 32) = *a2;
  *(_OWORD *)(v19 + 48) = v20;
  *(_OWORD *)(v19 + 64) = a2[2];
  *(_OWORD *)(v19 + 73) = *(_OWORD *)((char *)a2 + 41);
  *(void *)(v19 + 96) = v12;
  *(void *)(v19 + 104) = v14;
  *(void *)(v19 + 112) = v16;
  *(void *)(v19 + 120) = v18;
  sub_255AE00D4((uint64_t)a2);
  type metadata accessor for CGRect(0);
  sub_255AE36A8(&qword_26B29BF00, 255, type metadata accessor for CGRect);
  sub_255C7FB48();
  swift_release();
  return swift_release();
}

uint64_t sub_255ADC770(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v9 = *(void *)(a1 + 32);
  type metadata accessor for NowPlayingViewControllerProxy();
  swift_getWitnessTable();
  sub_255C23448(v9);
  *(double *)uint64_t v11 = a2;
  *(double *)&v11[1] = a3;
  *(double *)&void v11[2] = a4;
  *(double *)&void v11[3] = a5;
  char v12 = 0;
  swift_retain();
  sub_255C535B0((uint64_t)v11);

  return swift_release();
}

uint64_t sub_255ADC830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v64 = a2;
  uint64_t v62 = sub_255C7EBF8();
  uint64_t v63 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  int v61 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_255C7E5B8();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v58 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for TransportButtonStyle();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v51 - v11;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDF0);
  uint64_t v13 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD90);
  uint64_t v57 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v51 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29B760);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v52 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298548);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *v3;
  long long v74 = v3[1];
  long long v75 = v20;
  sub_255A10514((uint64_t)(v3 + 2), (uint64_t)v73, &qword_26B29F258);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = *(void *)(a1 + 24);
  *(void *)(v21 + 16) = v22;
  *(void *)(v21 + 24) = v23;
  long long v24 = v3[1];
  *(_OWORD *)(v21 + 32) = *v3;
  *(_OWORD *)(v21 + 48) = v24;
  *(_OWORD *)(v21 + 64) = v3[2];
  uint64_t v65 = v22;
  uint64_t v66 = v23;
  uint64_t v67 = v3;
  sub_255AE1234((uint64_t)&v75);
  sub_255AE1260((uint64_t)&v74);
  sub_255AE128C((uint64_t)v73);
  sub_255AE12B8();
  sub_255C7FEA8();
  char v72 = 0;
  sub_255C80018();
  uint64_t v25 = v68;
  uint64_t v26 = v69;
  LOBYTE(a1) = v70;
  *uint64_t v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = (char *)v10 + v7[5];
  *(void *)uint64_t v27 = swift_getKeyPath();
  v27[8] = 0;
  uint64_t v28 = (char *)v10 + v7[6];
  *(void *)uint64_t v28 = swift_getKeyPath();
  v28[8] = 0;
  *(uint64_t *)((char *)v10 + v7[7]) = 0x3FED70A3D70A3D71;
  uint64_t v29 = (char *)v10 + v7[8];
  *(void *)uint64_t v29 = v25;
  *((void *)v29 + 1) = v26;
  v29[16] = a1;
  sub_255AE131C((uint64_t)v10, (uint64_t)v12);
  uint64_t v30 = sub_255A09998(&qword_26B29BDE8, &qword_26B29BDF0);
  uint64_t v31 = sub_255AE36A8((unint64_t *)&unk_26B29A730, 255, (void (*)(uint64_t))type metadata accessor for TransportButtonStyle);
  long long v32 = v51;
  uint64_t v33 = v53;
  sub_255C7F648();
  sub_255AE1380((uint64_t)v12);
  long long v34 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v35 = v33;
  v34(v15, v33);
  swift_retain();
  uint64_t v36 = sub_255ADD748();
  uint64_t v38 = v37;
  LOBYTE(v33) = v39;
  swift_release();
  uint64_t v68 = v35;
  uint64_t v69 = v7;
  uint64_t v70 = v30;
  uint64_t v71 = v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v40 = (uint64_t)v52;
  uint64_t v41 = v56;
  sub_255C7F858();
  sub_255A094C0(v36, v38, v33 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v41);
  uint64_t v42 = v58;
  sub_255C7E5A8();
  uint64_t v43 = (uint64_t)v54;
  uint64_t v44 = &v54[*(int *)(v55 + 36)];
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985D8);
  uint64_t v46 = v59;
  uint64_t v47 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(&v44[*(int *)(v45 + 40)], v42, v60);
  *(void *)uint64_t v44 = 0xC024000000000000;
  v44[8] = 0;
  sub_255A09540(v40, v43, (uint64_t *)&unk_26B29B760);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v47);
  sub_255A095A4(v40, (uint64_t *)&unk_26B29B760);
  uint64_t v48 = v61;
  sub_255C7E5F8();
  sub_255AE13DC();
  sub_255AE36A8(&qword_26B29D388, 255, MEMORY[0x263F19B68]);
  uint64_t v49 = v62;
  sub_255C7F688();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v49);
  return sub_255A095A4(v43, &qword_26B298548);
}

uint64_t sub_255ADCFF4(uint64_t *a1, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  _s21CenterTransportButtonVMa();
  sub_255C23448(*a1);
  swift_unknownObjectRetain();
  sub_255BCF3F0(a2, a3);

  return swift_unknownObjectRelease();
}

uint64_t sub_255ADD06C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _s21CenterTransportButtonVMa();
  uint64_t v4 = a1[3];
  swift_beginAccess();
  uint64_t v5 = 8 * *(char *)(v4 + 33);
  uint64_t v6 = *(void *)&aPlay_3[v5];
  uint64_t v7 = *(void *)((char *)&unk_255C8C770 + v5);
  uint64_t v9 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v8;
  *(void *)a2 = 0xD000000000000018;
  *(void *)(a2 + 8) = 0x8000000255C9DCB0;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = sub_255AE1610;
  *(void *)(a2 + 40) = v10;
  *(unsigned char *)(a2 + 48) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_255ADD144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255ADC830(a1, a2);
}

double sub_255ADD180(uint64_t a1)
{
  return sub_255ADD1B4((__n128)xmmword_255C8BF40, a1, (__n128 *)&qword_26B29AB30, &qword_26B29AB40, &qword_26B29AB48);
}

double sub_255ADD19C(uint64_t a1)
{
  __asm { FMOV            V0.2D, #26.0 }
  return sub_255ADD1B4(_Q0, a1, (__n128 *)&qword_26B29C0B0, &qword_26B29C0C0, &qword_26B29C0C8);
}

double sub_255ADD1B4(__n128 a1, uint64_t a2, __n128 *a3, void *a4, uint64_t *a5)
{
  __n128 v14 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD88);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7F278();
  uint64_t v11 = sub_255C7F258();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = sub_255C7F2A8();
  sub_255A095A4((uint64_t)v10, &qword_26B29BD88);
  double result = v14.n128_f64[0];
  *a3 = v14;
  *a4 = 0x403E000000000000;
  *a5 = v12;
  return result;
}

uint64_t sub_255ADD2C4@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 16) = v5;
  return sub_255ADFC50(v3, v4, v5);
}

void sub_255ADD314(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + 33);
  swift_beginAccess();
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6573756170;
  if (*(unsigned char *)(v1 + 33) != 1)
  {
    uint64_t v5 = 1886352499;
    unint64_t v4 = 0xE400000000000000;
  }
  if (*(unsigned char *)(v1 + 33)) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 2036427888;
  }
  if (*(unsigned char *)(v1 + 33)) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v8 = 0x6573756170;
    }
    else {
      uint64_t v8 = 1886352499;
    }
    if (a1 == 1) {
      unint64_t v9 = 0xE500000000000000;
    }
    else {
      unint64_t v9 = 0xE400000000000000;
    }
    if (v6 != v8) {
      goto LABEL_21;
    }
  }
  else
  {
    unint64_t v9 = 0xE400000000000000;
    if (v6 != 2036427888) {
      goto LABEL_21;
    }
  }
  if (v7 == v9)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_21:
  char v10 = sub_255C81428();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    if (qword_26B29B3F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_255C7D898();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B2AA4E8);
    swift_retain_n();
    uint64_t v12 = sub_255C7D878();
    os_log_type_t v13 = sub_255C80C08();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v22 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      if (a1)
      {
        if (a1 == 1) {
          uint64_t v16 = 0x6573756170;
        }
        else {
          uint64_t v16 = 1886352499;
        }
        if (a1 == 1) {
          unint64_t v17 = 0xE500000000000000;
        }
        else {
          unint64_t v17 = 0xE400000000000000;
        }
      }
      else
      {
        unint64_t v17 = 0xE400000000000000;
        uint64_t v16 = 2036427888;
      }
      sub_255A7BEC4(v16, v17, &v22);
      sub_255C80F18();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      unint64_t v18 = 0xE500000000000000;
      uint64_t v19 = 0x6573756170;
      if (*v3 != 1)
      {
        uint64_t v19 = 1886352499;
        unint64_t v18 = 0xE400000000000000;
      }
      if (*v3) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 2036427888;
      }
      if (*v3) {
        unint64_t v21 = v18;
      }
      else {
        unint64_t v21 = 0xE400000000000000;
      }
      sub_255A7BEC4(v20, v21, &v22);
      sub_255C80F18();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255A00000, v12, v13, "TransportControls.center button changed from %{public}s to %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v15, -1, -1);
      MEMORY[0x25A297C00](v14, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_255ADD65C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_255ADD690@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v5;
  return sub_255ADFC50(v3, v4, v5);
}

uint64_t sub_255ADD6E0()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_255ADD714()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_255ADD748()
{
  uint64_t v1 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_255C805E8();
  MEMORY[0x270FA5388](v2 - 8);
  swift_beginAccess();
  if (!*(unsigned char *)(v0 + 33))
  {
    sub_255C80588();
    if (qword_26B29F398 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + 33) == 1)
  {
    sub_255C80588();
    if (qword_26B29F398 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  sub_255C80588();
  if (qword_26B29F398 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  id v3 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  sub_255C80648();
  sub_255A1D78C();
  return sub_255C7F548();
}

uint64_t sub_255ADD9A4()
{
  sub_255ADFC28(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_255ADFC28(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return swift_deallocClassInstance();
}

uint64_t sub_255ADD9EC@<X0>(uint64_t *a1@<X8>)
{
  _s17TransportControlsCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

BOOL static NowPlayingViewModel.TransportButtonAction.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t NowPlayingViewModel.TransportButtonAction.hash(into:)()
{
  return sub_255C81588();
}

uint64_t NowPlayingViewModel.TransportButtonAction.hashValue.getter()
{
  return sub_255C815B8();
}

unint64_t sub_255ADDAAC()
{
  unint64_t result = qword_269F236B8;
  if (!qword_269F236B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F236B8);
  }
  return result;
}

uint64_t _s17TransportControlsCMa()
{
  return self;
}

unsigned char *_s21TransportButtonActionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255ADDBF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingViewModel.TransportButtonAction()
{
  return &type metadata for NowPlayingViewModel.TransportButtonAction;
}

uint64_t sub_255ADDC28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v25 = sub_255C7EBF8();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  int v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985D8);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_255C7E5B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298558);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (_OWORD *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255ADDFC4((void *)v1, (uint64_t)v28);
  char v15 = *(unsigned char *)(v1 + 40);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = (v15 & 1) == 0;
  *((void *)&v29 + 1) = KeyPath;
  *(void *)&long long v30 = sub_255AE1680;
  *((void *)&v30 + 1) = v17;
  sub_255C7E5A8();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v7[*(int *)(v5 + 48)], v11, v8);
  *(void *)unint64_t v7 = 0xC014000000000000;
  unsigned char v7[8] = 0;
  sub_255A09540((uint64_t)v7, (uint64_t)v14 + *(int *)(v12 + 36), &qword_26B2985D8);
  long long v18 = v28[7];
  v14[6] = v28[6];
  v14[7] = v18;
  long long v19 = v30;
  v14[8] = v29;
  v14[9] = v19;
  long long v20 = v28[3];
  v14[2] = v28[2];
  void v14[3] = v20;
  long long v21 = v28[5];
  _OWORD v14[4] = v28[4];
  v14[5] = v21;
  long long v22 = v28[1];
  *uint64_t v14 = v28[0];
  v14[1] = v22;
  sub_255AE1698((uint64_t)v28);
  sub_255A095A4((uint64_t)v7, &qword_26B2985D8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_255AE17F8((uint64_t)v28);
  sub_255C7E5F8();
  sub_255AE1958();
  sub_255AE36A8(&qword_26B29D388, 255, MEMORY[0x263F19B68]);
  uint64_t v23 = v25;
  sub_255C7F688();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v23);
  return sub_255A095A4((uint64_t)v14, &qword_26B298558);
}

__n128 sub_255ADDFC4@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  if (v10)
  {
    uint64_t v17 = a1[8];
    uint64_t v18 = a1[9];
    uint64_t v19 = a1[10];
    uint64_t v20 = a1[11];
    uint64_t v32 = a1[7];
    uint64_t v33 = a1[6];
    sub_255A0DE10(v33);
    sub_255A0DE10(v17);
    sub_255A0DE10(v19);
    sub_255C7FE58();
    char v31 = v52;
    uint64_t v30 = *((void *)&v52 + 1);
    LOBYTE(v35) = 0;
    sub_255C7FE58();
    char v21 = v52;
    uint64_t v22 = *((void *)&v52 + 1);
    sub_255A53C38((uint64_t)a1, (uint64_t)v51);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F236C8);
    double v23 = 1.0;
    if (swift_dynamicCast())
    {
      sub_255ADFC40();
      double v23 = -1.0;
    }
    sub_255C80378();
    LOBYTE(v35) = v31;
    uint64_t v36 = v30;
    LOBYTE(v37) = v21;
    uint64_t v38 = v22;
    uint64_t v39 = v8;
    uint64_t v40 = v9;
    uint64_t v41 = v33;
    uint64_t v42 = v32;
    uint64_t v43 = v17;
    uint64_t v44 = v18;
    uint64_t v45 = v19;
    uint64_t v46 = v20;
    double v47 = v23;
    uint64_t v48 = 0x3FF0000000000000;
    uint64_t v49 = v24;
    uint64_t v50 = v25;
    sub_255AE1C8C((uint64_t)&v35);
    sub_255A10514((uint64_t)&v35, (uint64_t)v34, &qword_26B298598);
  }
  else
  {
    uint64_t v11 = a1[6];
    uint64_t v12 = a1[7];
    uint64_t v13 = a1[8];
    uint64_t v14 = a1[9];
    uint64_t v15 = a1[10];
    uint64_t v16 = a1[11];
    uint64_t v35 = v6;
    uint64_t v36 = v7;
    uint64_t v37 = v11;
    uint64_t v38 = v12;
    uint64_t v39 = v13;
    uint64_t v40 = v14;
    uint64_t v41 = v15;
    uint64_t v42 = v16;
    sub_255AE1C98((uint64_t)&v35);
    sub_255A10514((uint64_t)&v35, (uint64_t)v34, &qword_26B298598);
    sub_255A0DE10(v11);
    sub_255A0DE10(v13);
    sub_255A0DE10(v15);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B640);
  sub_255AE1BE4();
  sub_255AE03D8(&qword_26B29B638, &qword_26B29B640, (void (*)(void))sub_255AE1C38);
  sub_255C7EBD8();
  long long v26 = v59;
  *(_OWORD *)(a2 + 96) = v58;
  *(_OWORD *)(a2 + 112) = v26;
  *(unsigned char *)(a2 + 128) = v60;
  long long v27 = v55;
  *(_OWORD *)(a2 + 32) = v54;
  *(_OWORD *)(a2 + 48) = v27;
  long long v28 = v57;
  *(_OWORD *)(a2 + 64) = v56;
  *(_OWORD *)(a2 + 80) = v28;
  __n128 result = v53;
  *(_OWORD *)a2 = v52;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_255ADE264@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, char *a3@<X8>)
{
  long long v54 = a3;
  uint64_t v50 = type metadata accessor for TransportButtonStyle();
  uint64_t v5 = MEMORY[0x270FA5388](v50);
  uint64_t v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (uint64_t)&v43 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE00);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B7E0);
  MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BD98);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v48 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v49 = (char *)&v43 - v16;
  long long v59 = *a2;
  uint64_t v17 = *((void *)a2 + 2);
  uint64_t v18 = *((void *)a2 + 4);
  uint64_t v19 = *((void *)a2 + 6);
  uint64_t v43 = *((void *)a2 + 7);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  long long v21 = a2[1];
  v20[1] = *a2;
  _OWORD v20[2] = v21;
  long long v22 = a2[3];
  void v20[3] = a2[2];
  v20[4] = v22;
  swift_retain();
  sub_255AE128C((uint64_t)&v59);
  sub_255A0DE10(v17);
  sub_255A0DE10(v18);
  sub_255A0DE10(v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B7C8);
  sub_255AE3790();
  sub_255C7FEA8();
  uint64_t v24 = v46;
  uint64_t v23 = v47;
  uint64_t v25 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v44, v11, v47);
  *(unsigned char *)(v25 + *(int *)(v45 + 36)) = 0;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v23);
  char v55 = 0;
  sub_255C80018();
  uint64_t v26 = v56;
  uint64_t v27 = v57;
  LOBYTE(v18) = v58;
  *uint64_t v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  long long v28 = (int *)v50;
  long long v29 = (char *)v7 + *(int *)(v50 + 20);
  *(void *)long long v29 = swift_getKeyPath();
  v29[8] = 0;
  uint64_t v30 = (char *)v7 + v28[6];
  *(void *)uint64_t v30 = swift_getKeyPath();
  v30[8] = 0;
  *(uint64_t *)((char *)v7 + v28[7]) = 0x3FF0000000000000;
  char v31 = (char *)v7 + v28[8];
  *(void *)char v31 = v26;
  *((void *)v31 + 1) = v27;
  v31[16] = v18;
  uint64_t v32 = v53;
  sub_255AE131C((uint64_t)v7, v53);
  sub_255AE3804();
  sub_255AE36A8((unint64_t *)&unk_26B29A730, 255, (void (*)(uint64_t))type metadata accessor for TransportButtonStyle);
  uint64_t v33 = v48;
  sub_255C7F648();
  sub_255AE1380(v32);
  sub_255A095A4(v25, &qword_26B29B7E0);
  uint64_t v34 = v51;
  uint64_t v35 = v52;
  uint64_t v36 = v49;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v49, v33, v52);
  uint64_t v37 = v34;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v38(v33, v36, v35);
  uint64_t v39 = v54;
  *(void *)long long v54 = a1;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B7D0);
  v38(&v39[*(int *)(v40 + 48)], v33, v35);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  swift_retain();
  v41(v36, v35);
  v41(v33, v35);
  return swift_release();
}

uint64_t sub_255ADE790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = sub_255C7F198();
  sub_255C7DC08();
  *(void *)a2 = a1;
  *(unsigned char *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v8;
  *(unsigned char *)(a2 + 48) = 0;

  return swift_retain();
}

double sub_255ADE7F4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v6 = sub_255C7E158();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255C7E298();
  v13[8] = a2 & 1;
  v13[0] = a4 & 1;
  sub_255C7E128();
  double v11 = v10;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t sub_255ADE91C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v14 = sub_255C7E158();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v19[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255C7E298();
  v20.origin.CGFloat x = a1;
  v20.origin.CGFloat y = a2;
  v20.size.CGFloat width = a3;
  v20.size.CGFloat height = a4;
  CGRectGetMidX(v20);
  v21.origin.CGFloat x = a1;
  v21.origin.CGFloat y = a2;
  v21.size.CGFloat width = a3;
  v21.size.CGFloat height = a4;
  CGRectGetMidY(v21);
  sub_255C80378();
  v19[8] = a6 & 1;
  v19[0] = a8 & 1;
  sub_255C7E138();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_255ADEA98@<X0>(char *a1@<X8>)
{
  long long v3 = v1[1];
  v7[0] = *v1;
  v7[1] = v3;
  long long v4 = v1[3];
  v7[2] = v1[2];
  v7[3] = v4;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_255C7FD78();
  sub_255ADE264(v5, v7, a1);

  return swift_release();
}

uint64_t sub_255ADEB14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  long long v3 = (int *)type metadata accessor for TransportButtonStyle();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F236D0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F236D8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  uint64_t v35 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (_OWORD *)swift_allocObject();
  long long v18 = *(_OWORD *)(v2 + 48);
  _OWORD v17[3] = *(_OWORD *)(v2 + 32);
  v17[4] = v18;
  long long v19 = *(_OWORD *)(v2 + 80);
  void v17[5] = *(_OWORD *)(v2 + 64);
  v17[6] = v19;
  long long v20 = *(_OWORD *)(v2 + 16);
  v17[1] = *(_OWORD *)v2;
  v17[2] = v20;
  uint64_t v37 = v2;
  sub_255AE3904((void *)v2);
  sub_255AE3998();
  sub_255C7FEA8();
  CGRect v21 = (_OWORD *)swift_allocObject();
  long long v22 = *(_OWORD *)(v2 + 48);
  v21[3] = *(_OWORD *)(v2 + 32);
  v21[4] = v22;
  long long v23 = *(_OWORD *)(v2 + 80);
  uint64_t v21[5] = *(_OWORD *)(v2 + 64);
  uint64_t v21[6] = v23;
  long long v24 = *(_OWORD *)(v2 + 16);
  v21[1] = *(_OWORD *)v2;
  long long v21[2] = v24;
  sub_255AE3904((void *)v2);
  uint64_t v25 = sub_255A09998(&qword_269F236E8, &qword_269F236D0);
  sub_255C7F8B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  long long v38 = *(_OWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  sub_255C7FE88();
  uint64_t v26 = v39;
  uint64_t v27 = v40;
  LOBYTE(v10) = v41;
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  long long v28 = (char *)v6 + v3[5];
  *(void *)long long v28 = swift_getKeyPath();
  _OWORD v28[8] = 0;
  long long v29 = (char *)v6 + v3[6];
  *(void *)long long v29 = swift_getKeyPath();
  v29[8] = 0;
  *(uint64_t *)((char *)v6 + v3[7]) = 0x3FF0000000000000;
  uint64_t v30 = (char *)v6 + v3[8];
  *(void *)uint64_t v30 = v26;
  *((void *)v30 + 1) = v27;
  v30[16] = v10;
  sub_255AE131C((uint64_t)v6, (uint64_t)v8);
  uint64_t v39 = v9;
  uint64_t v40 = v25;
  swift_getOpaqueTypeConformance2();
  sub_255AE36A8((unint64_t *)&unk_26B29A730, 255, (void (*)(uint64_t))type metadata accessor for TransportButtonStyle);
  uint64_t v31 = v34;
  sub_255C7F648();
  sub_255AE1380((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v31);
}

uint64_t sub_255ADEF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  uint64_t result = sub_255C7FE68();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = sub_255B8E214;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_255ADEFF0@<X0>(uint64_t a1@<X8>)
{
  return sub_255ADEB14(a1);
}

uint64_t sub_255ADF034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v82 = a1;
  uint64_t v79 = sub_255C7EE78();
  uint64_t v78 = *(void *)(v79 - 8);
  uint64_t v80 = *(void *)(v78 + 64);
  MEMORY[0x270FA5388](v79);
  uint64_t v77 = &v64[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for TransportButtonStyle();
  uint64_t v4 = v3 - 8;
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v75 = *(void *)(v76 + 64);
  MEMORY[0x270FA5388](v3);
  long long v74 = &v64[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v67 = sub_255C7EE48();
  uint64_t v6 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v8 = &v64[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B720);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v64[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B848);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v64[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B8C8) - 8;
  MEMORY[0x270FA5388](v68);
  long long v18 = &v64[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B910) - 8;
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = &v64[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B298570);
  MEMORY[0x270FA5388](v85);
  uint64_t v83 = &v64[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298640);
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v71 = &v64[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255C7EE58();
  int v22 = sub_255C7ECD8();
  uint64_t v23 = v67;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v12, v8, v67);
  *(_DWORD *)&v12[*(int *)(v10 + 44)] = v22;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v23);
  uint64_t v24 = v84;
  uint64_t v25 = v84 + *(int *)(v4 + 28);
  uint64_t v26 = *(void *)v25;
  LOBYTE(v8) = *(unsigned char *)(v25 + 8);
  sub_255A0877C(*(void *)v25, (char)v8);
  LOBYTE(v22) = sub_255ABA6A4(v26, (char)v8);
  sub_255A087D0(v26, (char)v8);
  if (v22) {
    double v27 = 1.0;
  }
  else {
    double v27 = 0.5;
  }
  sub_255A09540((uint64_t)v12, (uint64_t)v16, &qword_26B29B720);
  *(double *)&v16[*(int *)(v14 + 44)] = v27;
  sub_255A095A4((uint64_t)v12, &qword_26B29B720);
  if (sub_255C7EE68()) {
    double v28 = *(double *)(v24 + *(int *)(v4 + 36)) * 0.8;
  }
  else {
    double v28 = *(double *)(v24 + *(int *)(v4 + 36));
  }
  sub_255C80378();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_255A09540((uint64_t)v16, (uint64_t)v18, &qword_26B29B848);
  uint64_t v33 = (double *)&v18[*(int *)(v68 + 44)];
  *uint64_t v33 = v28;
  v33[1] = v28;
  *((void *)v33 + 2) = v30;
  *((void *)v33 + 3) = v32;
  sub_255A095A4((uint64_t)v16, &qword_26B29B848);
  sub_255C7EE68();
  uint64_t v34 = sub_255C802B8();
  char v35 = sub_255C7EE68();
  uint64_t v36 = v69;
  sub_255A09540((uint64_t)v18, (uint64_t)v69, &qword_26B29B8C8);
  uint64_t v37 = &v36[*(int *)(v70 + 44)];
  *(void *)uint64_t v37 = v34;
  v37[8] = v35 & 1;
  sub_255A095A4((uint64_t)v18, &qword_26B29B8C8);
  uint64_t v70 = sub_255C801F8();
  uint64_t v68 = v38;
  sub_255ADF854(v24, (uint64_t)&v86);
  uint64_t v39 = v86;
  char v40 = v87;
  char v41 = v88;
  uint64_t v42 = v89;
  char v43 = v90;
  uint64_t v44 = v91;
  char v45 = v92;
  uint64_t v67 = v93;
  uint64_t v66 = v94;
  uint64_t v46 = v95;
  uint64_t v47 = v96;
  int v65 = v97;
  uint64_t v48 = v83;
  sub_255A09540((uint64_t)v36, (uint64_t)v83, &qword_26B29B910);
  uint64_t v49 = &v48[*(int *)(v85 + 36)];
  *(void *)uint64_t v49 = v39;
  v49[8] = v40;
  v49[9] = v41;
  *((void *)v49 + 2) = v42;
  v49[24] = v43;
  *((void *)v49 + 4) = v44;
  v49[40] = v45;
  uint64_t v50 = v66;
  *((void *)v49 + 6) = v67;
  *((void *)v49 + 7) = v50;
  *((void *)v49 + 8) = v46;
  *((void *)v49 + 9) = v47;
  v49[80] = v65;
  uint64_t v51 = v68;
  *((void *)v49 + 11) = v70;
  *((void *)v49 + 12) = v51;
  sub_255A095A4((uint64_t)v36, &qword_26B29B910);
  uint64_t v52 = v82;
  LOBYTE(v86) = sub_255C7EE68() & 1;
  uint64_t v53 = v74;
  sub_255AE3128(v84, (uint64_t)v74);
  uint64_t v54 = v78;
  char v55 = v77;
  uint64_t v56 = v79;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v78 + 16))(v77, v52, v79);
  unint64_t v57 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  uint64_t v58 = v54;
  unint64_t v59 = (v75 + *(unsigned __int8 *)(v54 + 80) + v57) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v60 = swift_allocObject();
  sub_255AE131C((uint64_t)v53, v60 + v57);
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v58 + 32))(v60 + v59, v55, v56);
  sub_255AE3438();
  int v61 = v71;
  uint64_t v62 = v83;
  sub_255C7FB48();
  swift_release();
  sub_255A095A4((uint64_t)v62, &qword_26B298570);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v72 + 32))(v81, v61, v73);
}

uint64_t sub_255ADF854@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_255C7DCC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v25 - v9;
  sub_255C7EE68();
  sub_255ABC184((uint64_t)v10);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, *MEMORY[0x263F184F8], v4);
  char v11 = sub_255C7DCB8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  if (v11) {
    sub_255C7FC88();
  }
  else {
    sub_255C7FC68();
  }
  uint64_t v26 = sub_255C7FCA8();
  swift_release();
  uint64_t v13 = a1 + *(int *)(type metadata accessor for TransportButtonStyle() + 24);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_255A0877C(*(void *)v13, v15);
  sub_255ABC1C0(v14, v15);
  sub_255A087D0(v14, v15);
  sub_255A0877C(v14, v15);
  sub_255ABC1C0(v14, v15);
  sub_255A087D0(v14, v15);
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v16 = v27;
  char v17 = v28;
  uint64_t v18 = v29;
  char v19 = v30;
  uint64_t v21 = v31;
  uint64_t v20 = v32;
  if (sub_255C7EE68()) {
    double v22 = 1.0;
  }
  else {
    double v22 = 0.0;
  }
  uint64_t v23 = sub_255C802B8();
  uint64_t result = sub_255C7EE68();
  *(void *)a2 = v26;
  *(_WORD *)(a2 + 8) = 256;
  *(void *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v20;
  *(double *)(a2 + 64) = v22;
  *(void *)(a2 + 72) = v23;
  *(unsigned char *)(a2 + 80) = result & 1;
  return result;
}

uint64_t sub_255ADFB48()
{
  return sub_255C7FFE8();
}

uint64_t sub_255ADFBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255AE10D4();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_255ADFC28(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_255ADFC40();
  }
  return result;
}

uint64_t sub_255ADFC40()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_255ADFC48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_255ADFC50(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_255ADFC48();
  }
  return result;
}

uint64_t sub_255ADFC78(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);

  return sub_255A087D0(v2, v3);
}

uint64_t sub_255ADFCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  char v7 = *(unsigned char *)(a2 + 56);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_255A0877C(v6, v7);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  return a1;
}

uint64_t sub_255ADFD44(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = v2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = v2[3];
  *(void *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = v2[5];
  uint64_t v4 = v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_255A0877C(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_255A087D0(v5, v6);
  return a1;
}

uint64_t sub_255ADFDFC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v5;
  sub_255A087D0(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for WindowPropertiesReader(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WindowPropertiesReader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s31MiniPlayerTransportControlsViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255ADFF20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s21CenterTransportButtonVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255ADFF7C@<X0>(uint64_t a1@<X8>)
{
  return sub_255ADB6FC(v1[4], v1[8], v1[2], v1[3], a1);
}

uint64_t sub_255ADFF9C@<X0>(unsigned char *a1@<X8>)
{
  sub_255AE0154();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255ADFFEC()
{
  return sub_255C7E8D8();
}

uint64_t sub_255AE0038@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  char v3 = *(long long **)(v1 + 32);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  v4[1] = *(_OWORD *)(v1 + 16);
  long long v5 = *v3;
  long long v6 = v3[1];
  long long v7 = v3[2];
  *(_OWORD *)((char *)v4 + 73) = *(long long *)((char *)v3 + 41);
  v4[3] = v6;
  v4[4] = v7;
  v4[2] = v5;
  *a1 = sub_255AE00C8;
  a1[1] = (uint64_t (*)(uint64_t))v4;

  return sub_255AE00D4((uint64_t)v3);
}

uint64_t sub_255AE00C0()
{
  return objectdestroyTm_6();
}

uint64_t sub_255AE00C8(uint64_t a1)
{
  return sub_255ADC568(a1, (_OWORD *)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_255AE00D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_255A0877C(v2, v3);
  return a1;
}

uint64_t sub_255AE0138()
{
  return objectdestroyTm_6();
}

uint64_t sub_255AE0140()
{
  return sub_255ADC770((uint64_t)(v0 + 4), v0[12], v0[13], v0[14], v0[15]);
}

unint64_t sub_255AE0154()
{
  unint64_t result = qword_26B29AF28;
  if (!qword_26B29AF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29AF28);
  }
  return result;
}

uint64_t sub_255AE01A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_255AE01D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_255AE0200(uint64_t a1)
{
  return a1;
}

unint64_t sub_255AE022C()
{
  unint64_t result = qword_26B29B8E8;
  if (!qword_26B29B8E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B8F0);
    sub_255AE02DC();
    sub_255AE36A8((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B8E8);
  }
  return result;
}

unint64_t sub_255AE02DC()
{
  unint64_t result = qword_26B29B8A0;
  if (!qword_26B29B8A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B8A8);
    sub_255AE03D8(&qword_26B29B7F8, &qword_26B29B800, (void (*)(void))sub_255AE03A8);
    sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B8A0);
  }
  return result;
}

uint64_t sub_255AE03A8()
{
  return sub_255AE03D8(&qword_26B29B628, &qword_26B29B630, (void (*)(void))sub_255AE0454);
}

uint64_t sub_255AE03D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255AE0454()
{
  unint64_t result = qword_26B298DB0;
  if (!qword_26B298DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298DB0);
  }
  return result;
}

unint64_t sub_255AE04A8()
{
  unint64_t result = qword_26B299A70;
  if (!qword_26B299A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B299A70);
  }
  return result;
}

uint64_t sub_255AE04FC()
{
  return objectdestroyTm_6();
}

uint64_t sub_255AE0504()
{
  return sub_255ADAD60(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), 0);
}

uint64_t sub_255AE0528()
{
  return objectdestroyTm_6();
}

uint64_t sub_255AE0530()
{
  return sub_255ADAD60(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), 1);
}

uint64_t sub_255AE0554()
{
  return objectdestroyTm_6();
}

uint64_t sub_255AE055C()
{
  return sub_255ADAD60(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), 2);
}

uint64_t sub_255AE0580(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_255AE05B8(void *a1)
{
  return a1;
}

unint64_t sub_255AE05F0()
{
  unint64_t result = qword_26B29C0A8;
  if (!qword_26B29C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29C0A8);
  }
  return result;
}

uint64_t sub_255AE0644()
{
  return objectdestroyTm_6();
}

uint64_t sub_255AE064C()
{
  return sub_255ADABF4(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), 0);
}

uint64_t sub_255AE0670()
{
  return objectdestroyTm_6();
}

uint64_t sub_255AE0678()
{
  return sub_255ADABF4(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), 1);
}

uint64_t sub_255AE069C()
{
  return objectdestroyTm_6();
}

uint64_t sub_255AE06A4()
{
  return sub_255ADABF4(v0 + 32, *(void *)(v0 + 16), *(void *)(v0 + 24), 2);
}

ValueMetadata *type metadata accessor for TransportControlsPlacementKey()
{
  return &type metadata for TransportControlsPlacementKey;
}

unsigned char *storeEnumTagSinglePayload for TransportControlsPlacement(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255AE07A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportControlsPlacement()
{
  return &type metadata for TransportControlsPlacement;
}

uint64_t sub_255AE07DC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255AE0820(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_255AE0880(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255AE0910(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255AE0970(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255AE09B8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t destroy for TransportButton(void *a1)
{
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  if (a1[6]) {
    uint64_t result = swift_release();
  }
  if (a1[8]) {
    uint64_t result = swift_release();
  }
  if (a1[10])
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TransportButton(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v7 = *(void *)(a2 + 64);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v9 = *(void *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  return a1;
}

uint64_t assignWithCopy for TransportButton(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a1 + 48);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  if (v4)
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v5;
      *(void *)(a1 + 56) = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = v9;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v10;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  uint64_t v11 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v11;
      *(void *)(a1 + 88) = v13;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for TransportButton(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v5;
      *(void *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = v9;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v10;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  uint64_t v11 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v11;
      *(void *)(a1 + 88) = v13;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportButton()
{
  return &type metadata for TransportButton;
}

uint64_t sub_255AE0E8C()
{
  return swift_getWitnessTable();
}

unint64_t sub_255AE10D4()
{
  unint64_t result = qword_269F236C0;
  if (!qword_269F236C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F236C0);
  }
  return result;
}

uint64_t sub_255AE1128()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AE1144()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TransportButtonStyle()
{
  uint64_t result = qword_26B2981B8;
  if (!qword_26B2981B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_255AE11D4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AE121C()
{
  return sub_255ADCFF4((uint64_t *)(v0 + 32), *(void *)(v0 + 16), *(uint64_t (***)(uint64_t, uint64_t))(v0 + 24));
}

uint64_t sub_255AE1228@<X0>(uint64_t a1@<X8>)
{
  return sub_255ADD06C(*(void **)(v1 + 32), a1);
}

uint64_t sub_255AE1234(uint64_t a1)
{
  return a1;
}

uint64_t sub_255AE1260(uint64_t a1)
{
  return a1;
}

uint64_t sub_255AE128C(uint64_t a1)
{
  return a1;
}

unint64_t sub_255AE12B8()
{
  unint64_t result = qword_26B2986B0;
  if (!qword_26B2986B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2986B0);
  }
  return result;
}

uint64_t sub_255AE131C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransportButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AE1380(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TransportButtonStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_255AE13DC()
{
  unint64_t result = qword_26B298540;
  if (!qword_26B298540)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298548);
    sub_255AE147C();
    sub_255A09998(&qword_26B2985D0, &qword_26B2985D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298540);
  }
  return result;
}

unint64_t sub_255AE147C()
{
  unint64_t result = qword_26B29B758;
  if (!qword_26B29B758)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B29B760);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BDF0);
    type metadata accessor for TransportButtonStyle();
    sub_255A09998(&qword_26B29BDE8, &qword_26B29BDF0);
    sub_255AE36A8((unint64_t *)&unk_26B29A730, 255, (void (*)(uint64_t))type metadata accessor for TransportButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_255AE36A8((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B758);
  }
  return result;
}

uint64_t sub_255AE15D8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AE1610()
{
  return sub_255B8CDA8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_255AE1618@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255C7E848();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255AE1648()
{
  return sub_255C7E858();
}

uint64_t sub_255AE1670()
{
  return swift_deallocObject();
}

unsigned char *sub_255AE1680(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_255AE1698(uint64_t a1)
{
  return a1;
}

uint64_t sub_255AE171C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a17)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_255A0DE10(a7);
    sub_255A0DE10(a9);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_255A0DE10(a3);
    sub_255A0DE10(a5);
    a11 = a7;
  }

  return sub_255A0DE10(a11);
}

uint64_t sub_255AE17F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_255AE187C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a17)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_255A0DE20(a7);
    sub_255A0DE20(a9);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_255A0DE20(a3);
    sub_255A0DE20(a5);
    a11 = a7;
  }

  return sub_255A0DE20(a11);
}

unint64_t sub_255AE1958()
{
  unint64_t result = qword_26B298550;
  if (!qword_26B298550)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298558);
    sub_255AE19F8();
    sub_255A09998(&qword_26B2985D0, &qword_26B2985D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298550);
  }
  return result;
}

unint64_t sub_255AE19F8()
{
  unint64_t result = qword_26B29B7B0;
  if (!qword_26B29B7B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B7B8);
    sub_255AE1AD0(&qword_26B29BDB8, &qword_26B29BDC0, (void (*)(void))sub_255AE1B3C);
    sub_255A09998(&qword_26B29BD78, &qword_26B29BD80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B7B0);
  }
  return result;
}

uint64_t sub_255AE1AD0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255AE1B3C()
{
  unint64_t result = qword_26B29BA50;
  if (!qword_26B29BA50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BA58);
    sub_255AE1BE4();
    sub_255AE03D8(&qword_26B29B638, &qword_26B29B640, (void (*)(void))sub_255AE1C38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29BA50);
  }
  return result;
}

unint64_t sub_255AE1BE4()
{
  unint64_t result = qword_26B29A9B8;
  if (!qword_26B29A9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A9B8);
  }
  return result;
}

unint64_t sub_255AE1C38()
{
  unint64_t result = qword_26B29A9D0;
  if (!qword_26B29A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A9D0);
  }
  return result;
}

uint64_t sub_255AE1C8C(uint64_t result)
{
  *(unsigned char *)(result + 128) = 1;
  return result;
}

uint64_t sub_255AE1C98(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

uint64_t *sub_255AE1CA0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7DCC8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_255A0877C(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[6];
    char v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = v16[8];
    sub_255A0877C(*(void *)v16, v18);
    *(void *)char v15 = v17;
    v15[8] = v18;
    uint64_t v19 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    v20[16] = v21[16];
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_255AE1E34(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_255A087D0(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));
  sub_255A087D0(*(void *)(a1 + *(int *)(a2 + 24)), *(unsigned char *)(a1 + *(int *)(a2 + 24) + 8));
  swift_release();

  return swift_release();
}

void *sub_255AE1F08(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7DCC8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_255A0877C(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  char v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  char v16 = v14[8];
  sub_255A0877C(*(void *)v14, v16);
  *(void *)char v13 = v15;
  v13[8] = v16;
  uint64_t v17 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  char v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)char v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  v18[16] = v19[16];
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_255AE2050(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, &qword_26B29B598);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_255A0877C(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_255A087D0(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  char v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_255A0877C(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = v18;
  sub_255A087D0(v19, v20);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_retain();
  swift_release();
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_retain();
  swift_release();
  v22[16] = v23[16];
  return a1;
}

char *sub_255AE21E8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7DCC8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v15 = &a1[v14];
  char v16 = &a2[v14];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  return a1;
}

char *sub_255AE2308(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, &qword_26B29B598);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_255C7DCC8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_255A087D0(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  char v16 = &a2[v14];
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = v16[8];
  uint64_t v18 = *(void *)v15;
  char v19 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = (char)v16;
  sub_255A087D0(v18, v19);
  uint64_t v20 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)&a1[v20] = *(void *)v22;
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_release();
  v21[16] = v22[16];
  return a1;
}

uint64_t sub_255AE2474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255AE2488);
}

uint64_t sub_255AE2488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_255AE2550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255AE2564);
}

uint64_t sub_255AE2564(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

void sub_255AE2628()
{
  sub_255AE26D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_255AE26D8()
{
  if (!qword_26B29B5A0)
  {
    sub_255C7DCC8();
    unint64_t v0 = sub_255C7DD38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29B5A0);
    }
  }
}

uint64_t destroy for AnimatedTransportButton(void *a1)
{
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (a1[6]) {
    uint64_t result = swift_release();
  }
  if (a1[8]) {
    uint64_t result = swift_release();
  }
  if (a1[10])
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for AnimatedTransportButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v6;
  }
  uint64_t v8 = *(void *)(a2 + 64);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v10 = *(void *)(a2 + 80);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v10;
    *(void *)(a1 + 88) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  return a1;
}

uint64_t assignWithCopy for AnimatedTransportButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v4;
      *(void *)(a1 + 56) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v9;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v10;
      *(void *)(a1 + 88) = v12;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AnimatedTransportButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v5;
      *(void *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = v9;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v10;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_15:
  uint64_t v11 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v11;
      *(void *)(a1 + 88) = v13;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimatedTransportButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimatedTransportButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimatedTransportButton()
{
  return &type metadata for AnimatedTransportButton;
}

uint64_t destroy for SymbolTransportButton(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a1[2]) {
    uint64_t result = swift_release();
  }
  if (a1[4]) {
    uint64_t result = swift_release();
  }
  if (a1[6])
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for SymbolTransportButton(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = a2 + 2;
  uint64_t v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  uint64_t v8 = a2[4];
  if (v8)
  {
    uint64_t v9 = a2[5];
    a1[4] = v8;
    a1[5] = v9;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  uint64_t v10 = a2[6];
  if (v10)
  {
    uint64_t v11 = a2[7];
    a1[6] = v10;
    a1[7] = v11;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  return a1;
}

void *assignWithCopy for SymbolTransportButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  if (a1[2])
  {
    if (v4)
    {
      uint64_t v5 = a2[3];
      a1[2] = v4;
      a1[3] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[3];
    a1[2] = v4;
    a1[3] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  uint64_t v7 = a2[4];
  if (a1[4])
  {
    if (v7)
    {
      uint64_t v8 = a2[5];
      a1[4] = v7;
      a1[5] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[5];
    a1[4] = v7;
    a1[5] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_15:
  uint64_t v10 = a2[6];
  if (!a1[6])
  {
    if (v10)
    {
      uint64_t v12 = a2[7];
      a1[6] = v10;
      a1[7] = v12;
      swift_retain();
      return a1;
    }
LABEL_21:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = a2[7];
  a1[6] = v10;
  a1[7] = v11;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for SymbolTransportButton(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  if (a1[2])
  {
    if (v5)
    {
      uint64_t v6 = a2[3];
      a1[2] = v5;
      a1[3] = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  uint64_t v8 = a2[4];
  if (a1[4])
  {
    if (v8)
    {
      uint64_t v9 = a2[5];
      a1[4] = v8;
      a1[5] = v9;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = a2[5];
    a1[4] = v8;
    a1[5] = v10;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_15:
  uint64_t v11 = a2[6];
  if (!a1[6])
  {
    if (v11)
    {
      uint64_t v13 = a2[7];
      a1[6] = v11;
      a1[7] = v13;
      return a1;
    }
LABEL_21:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v12 = a2[7];
  a1[6] = v11;
  a1[7] = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolTransportButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolTransportButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolTransportButton()
{
  return &type metadata for SymbolTransportButton;
}

uint64_t sub_255AE3094(uint64_t a1)
{
  return get_witness_table_11MediaCoreUI20NowPlayingControllerRzlqd0__05SwiftC04ViewHD3_AcDPACE11hoverEffect_9isEnabledQrqd___SbtAC011CustomHoverJ0Rd__lFQOyAC15ModifiedContentVyAJyAeCE11buttonStyleyQrqd__AC06ButtonR0Rd__lFQOyAC0S0VyAA09CAPackageH0VG_AA09TransportsR033_855B558EBF42837AEC5F9AECC17AAF2ALLVQo_AC31AccessibilityAttachmentModifierVGAC01_P17ShapeKindModifierVyAC6CircleV6_InsetVGG_AC09AutomaticnJ0VQo_HOTm(a1, &qword_26B298548, (void (*)(void))sub_255AE13DC);
}

uint64_t sub_255AE30B4(uint64_t a1)
{
  return get_witness_table_11MediaCoreUI20NowPlayingControllerRzlqd0__05SwiftC04ViewHD3_AcDPACE11hoverEffect_9isEnabledQrqd___SbtAC011CustomHoverJ0Rd__lFQOyAC15ModifiedContentVyAJyAeCE11buttonStyleyQrqd__AC06ButtonR0Rd__lFQOyAC0S0VyAA09CAPackageH0VG_AA09TransportsR033_855B558EBF42837AEC5F9AECC17AAF2ALLVQo_AC31AccessibilityAttachmentModifierVGAC01_P17ShapeKindModifierVyAC6CircleV6_InsetVGG_AC09AutomaticnJ0VQo_HOTm(a1, &qword_26B298558, (void (*)(void))sub_255AE1958);
}

uint64_t sub_255AE30D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AE30F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AE310C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AE3128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransportButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AE318C()
{
  uint64_t v1 = type metadata accessor for TransportButtonStyle();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_255C7EE78();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7DCC8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v2, v8);
  }
  else
  {
    swift_release();
  }
  sub_255A087D0(*(void *)(v7 + *(int *)(v1 + 20)), *(unsigned char *)(v7 + *(int *)(v1 + 20) + 8));
  sub_255A087D0(*(void *)(v7 + *(int *)(v1 + 24)), *(unsigned char *)(v7 + *(int *)(v1 + 24) + 8));
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_255AE336C()
{
  type metadata accessor for TransportButtonStyle();
  sub_255C7EE78();

  return sub_255ADFB48();
}

unint64_t sub_255AE3438()
{
  unint64_t result = qword_26B298568;
  if (!qword_26B298568)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298570);
    sub_255AE34D8();
    sub_255A09998(&qword_26B298588, &qword_26B298590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298568);
  }
  return result;
}

unint64_t sub_255AE34D8()
{
  unint64_t result = qword_26B29B908;
  if (!qword_26B29B908)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B910);
    sub_255AE03D8(&qword_26B29B8C0, &qword_26B29B8C8, (void (*)(void))sub_255AE35A4);
    sub_255A09998((unint64_t *)&qword_26B29B9F8, &qword_26B29BA00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B908);
  }
  return result;
}

uint64_t sub_255AE35A4()
{
  return sub_255AE03D8(&qword_26B29B840, &qword_26B29B848, (void (*)(void))sub_255AE35D4);
}

unint64_t sub_255AE35D4()
{
  unint64_t result = qword_26B29B718;
  if (!qword_26B29B718)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B720);
    sub_255AE36A8(&qword_26B297B78, 255, MEMORY[0x263F1A0D0]);
    sub_255A09998(&qword_26B29BB48, &qword_26B29BB50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B718);
  }
  return result;
}

uint64_t sub_255AE36A8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255AE36F0()
{
  swift_bridgeObjectRelease();
  if (v0[4]) {
    swift_release();
  }
  if (v0[6]) {
    swift_release();
  }
  if (v0[8]) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255AE3758()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 32);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_255AE3788@<X0>(uint64_t a1@<X8>)
{
  return sub_255ADE790(v1, a1);
}

unint64_t sub_255AE3790()
{
  unint64_t result = qword_26B29B7C0;
  if (!qword_26B29B7C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B7C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B7C0);
  }
  return result;
}

unint64_t sub_255AE3804()
{
  unint64_t result = qword_26B29B7D8;
  if (!qword_26B29B7D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B7E0);
    sub_255A09998(&qword_26B29BDF8, &qword_26B29BE00);
    sub_255A09998(&qword_26B29BA70, &qword_26B29BA78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B7D8);
  }
  return result;
}

uint64_t sub_255AE38CC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 64);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_255AE38FC@<X0>(uint64_t a1@<X8>)
{
  return sub_255ADEF6C(*(void *)(v1 + 16), a1);
}

void *sub_255AE3904(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[10];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_255A0DE10(v2);
  sub_255A0DE10(v3);
  sub_255A0DE10(v4);
  return a1;
}

unint64_t sub_255AE3998()
{
  unint64_t result = qword_269F236E0;
  if (!qword_269F236E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F236E0);
  }
  return result;
}

uint64_t objectdestroy_92Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0[8]) {
    swift_release();
  }
  if (v0[10]) {
    swift_release();
  }
  if (v0[12]) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255AE3A68()
{
  return sub_255C7FE78();
}

ValueMetadata *type metadata accessor for SymbolTransportButton.ButtonLayout()
{
  return &type metadata for SymbolTransportButton.ButtonLayout;
}

uint64_t sub_255AE3AC4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255AE3B38()
{
  unint64_t result = qword_26B29B608;
  if (!qword_26B29B608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B610);
    sub_255A09998(&qword_26B29B5C0, &qword_26B29B5C8);
    sub_255A09998(&qword_26B29BE60, &qword_26B29BE68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B608);
  }
  return result;
}

uint64_t sub_255AE3BFC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255AE3D08()
{
  unint64_t result = qword_26B29A9B0;
  if (!qword_26B29A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A9B0);
  }
  return result;
}

uint64_t sub_255AE3D6C(uint64_t a1)
{
  return sub_255A1D054(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104), *(unsigned char *)(a1 + 105));
}

uint64_t sub_255AE3DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 88);
  char v11 = *(unsigned char *)(a2 + 104);
  char v12 = *(unsigned char *)(a2 + 105);
  swift_retain();
  swift_unknownObjectRetain();
  sub_255A1CFDC(v16, v15, v5, v6, v7, v8, v9, v14, v10, v11, v12);
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v10;
  *(unsigned char *)(a1 + 104) = v11;
  *(unsigned char *)(a1 + 105) = v12;
  return a1;
}

uint64_t sub_255AE3EBC(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = v2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = v2[3];
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[8];
  uint64_t v9 = v2[9];
  uint64_t v10 = v2[10];
  uint64_t v11 = v2[11];
  uint64_t v24 = v2[12];
  char v25 = *((unsigned char *)v2 + 104);
  LOBYTE(v2) = *((unsigned char *)v2 + 105);
  sub_255A1CFDC(v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, (char)v2);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v19 = *(void *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 96);
  char v21 = *(unsigned char *)(a1 + 104);
  char v22 = *(unsigned char *)(a1 + 105);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v24;
  *(unsigned char *)(a1 + 104) = v25;
  *(unsigned char *)(a1 + 105) = (_BYTE)v2;
  sub_255A1D054(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

uint64_t sub_255AE3FF0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  char v4 = *(unsigned char *)(a2 + 104);
  char v5 = *(unsigned char *)(a2 + 105);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 96);
  char v15 = *(unsigned char *)(a1 + 104);
  char v16 = *(unsigned char *)(a1 + 105);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v4;
  *(unsigned char *)(a1 + 105) = v5;
  sub_255A1D054(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t sub_255AE40A4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 106)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255AE40EC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 104) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 106) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 106) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s21TransportControlsViewVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255AE4160()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AE41A4@<X0>(uint64_t a1@<X8>)
{
  return sub_255AD9BFC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255AE41B4(uint64_t a1)
{
  return a1;
}

unint64_t sub_255AE4200()
{
  unint64_t result = qword_26B29EBF0;
  if (!qword_26B29EBF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EBF8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC70);
    sub_255AE42E4();
    swift_getOpaqueTypeConformance2();
    sub_255AE36A8((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EBF0);
  }
  return result;
}

unint64_t sub_255AE42E4()
{
  unint64_t result = qword_26B29EC68;
  if (!qword_26B29EC68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC70);
    sub_255AE03A8();
    sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EC68);
  }
  return result;
}

uint64_t sub_255AE4388()
{
  return sub_255ADAC7C();
}

uint64_t sub_255AE43C4(uint64_t a1)
{
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  char v9 = *(unsigned char *)(a1 + 105);
  swift_unknownObjectRetain();
  swift_retain();
  sub_255A1CFDC(v13, v12, v11, v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_255AE4478()
{
  return sub_255ADAC7C();
}

uint64_t objectdestroy_112Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_255A1D054(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(unsigned char *)(v0 + 136), *(unsigned char *)(v0 + 137));

  return swift_deallocObject();
}

uint64_t sub_255AE4528()
{
  return sub_255ADAB74(v0[4], v0[2], v0[3]);
}

uint64_t sub_255AE4548()
{
  return sub_255ADACE0(v0[4], v0[2], v0[3]);
}

uint64_t sub_255AE4568()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255AE477C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255AE4798(a1, a2, a3);
}

uint64_t sub_255AE4788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255AE4798(a1, a2, a3);
}

uint64_t sub_255AE4798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_255C80988();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_255C80978();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_255A910C0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_255C80908();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_255AE4914(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_255AE4958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v161 = a5;
  uint64_t v165 = a3;
  uint64_t v154 = a6;
  uint64_t v152 = *(void *)(a2 - 8);
  uint64_t v153 = *(void *)(v152 + 64);
  MEMORY[0x270FA5388](a1);
  long long v151 = (char *)v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_255C7DD88();
  uint64_t v166 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  uint64_t v11 = (char *)v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = a2;
  uint64_t v169 = a4;
  uint64_t v12 = MEMORY[0x263F1B1D0];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v130 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v156 = (char *)v118 - v14;
  uint64_t v168 = a2;
  uint64_t v169 = a4;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = OpaqueTypeMetadata2;
  uint64_t v169 = OpaqueTypeConformance2;
  uint64_t v16 = OpaqueTypeMetadata2;
  uint64_t v120 = OpaqueTypeMetadata2;
  uint64_t v17 = OpaqueTypeConformance2;
  uint64_t v121 = OpaqueTypeConformance2;
  uint64_t v18 = swift_getOpaqueTypeMetadata2();
  uint64_t v134 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v119 = (char *)v118 - v19;
  uint64_t v168 = v16;
  uint64_t v169 = v17;
  uint64_t v20 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = v18;
  uint64_t v169 = v20;
  uint64_t v21 = v18;
  uint64_t v123 = v18;
  uint64_t v22 = v20;
  uint64_t v124 = v20;
  uint64_t v23 = swift_getOpaqueTypeMetadata2();
  uint64_t v138 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v122 = (char *)v118 - v24;
  uint64_t v168 = v21;
  uint64_t v169 = v22;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = v23;
  uint64_t v169 = v25;
  uint64_t v26 = v23;
  uint64_t v125 = v23;
  uint64_t v27 = v25;
  uint64_t v126 = v25;
  uint64_t v28 = swift_getOpaqueTypeMetadata2();
  uint64_t v141 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  long long v157 = (char *)v118 - v29;
  uint64_t v168 = v26;
  uint64_t v169 = v27;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = v28;
  uint64_t v169 = v30;
  uint64_t v31 = v28;
  uint64_t v127 = v28;
  uint64_t v32 = v30;
  uint64_t v128 = v30;
  uint64_t v33 = swift_getOpaqueTypeMetadata2();
  uint64_t v142 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  long long v158 = (char *)v118 - v34;
  uint64_t v168 = v31;
  uint64_t v169 = v32;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = v33;
  uint64_t v169 = v35;
  uint64_t v36 = v33;
  uint64_t v132 = v33;
  uint64_t v37 = v35;
  uint64_t v133 = v35;
  uint64_t v38 = swift_getOpaqueTypeMetadata2();
  uint64_t v143 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v131 = (char *)v118 - v39;
  uint64_t v168 = v36;
  uint64_t v169 = v37;
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = v38;
  uint64_t v169 = v40;
  uint64_t v41 = v38;
  uint64_t v136 = v38;
  uint64_t v42 = v40;
  uint64_t v137 = v40;
  uint64_t v43 = swift_getOpaqueTypeMetadata2();
  uint64_t v144 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  long long v135 = (char *)v118 - v44;
  uint64_t v168 = v41;
  uint64_t v169 = v42;
  uint64_t v45 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = v43;
  uint64_t v169 = v45;
  uint64_t v139 = v43;
  uint64_t v46 = v45;
  uint64_t v140 = v45;
  uint64_t v147 = v12;
  uint64_t v47 = swift_getOpaqueTypeMetadata2();
  uint64_t v145 = v47;
  uint64_t v148 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  long long v159 = (char *)v118 - v48;
  uint64_t v168 = v43;
  uint64_t v169 = v46;
  uint64_t v146 = swift_getOpaqueTypeConformance2();
  uint64_t v168 = v47;
  uint64_t v169 = v146;
  uint64_t v49 = swift_getOpaqueTypeMetadata2();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v149 = v49;
  uint64_t v150 = v50;
  MEMORY[0x270FA5388](v49);
  long long v160 = (char *)v118 - v51;
  sub_255C7DD98();
  uint64_t v52 = (void *)swift_allocObject();
  uint64_t v53 = a2;
  v52[2] = a2;
  uint64_t v54 = v165;
  void v52[3] = v165;
  v52[4] = a4;
  uint64_t v55 = a4;
  uint64_t v56 = v161;
  v52[5] = v161;
  v52[6] = a1;
  uint64_t v167 = a1;
  swift_unknownObjectRetain();
  uint64_t v57 = v53;
  uint64_t v164 = v53;
  uint64_t v58 = v55;
  uint64_t v162 = v55;
  sub_255C7FA78();
  swift_release();
  unint64_t v59 = *(void (**)(char *, uint64_t))(v166 + 8);
  v166 += 8;
  uint64_t v60 = v163;
  v59(v11, v163);
  v118[1] = 0xD00000000000001FLL;
  sub_255C7DD98();
  int v61 = (void *)swift_allocObject();
  v61[2] = v57;
  v61[3] = v54;
  uint64_t v62 = v54;
  v61[4] = v58;
  v61[5] = v56;
  v61[6] = v167;
  swift_unknownObjectRetain();
  uint64_t v63 = v119;
  uint64_t v64 = v120;
  int v65 = v156;
  sub_255C7FA78();
  swift_release();
  uint64_t v66 = v60;
  v59(v11, v60);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v65, v64);
  sub_255C7DD98();
  uint64_t v67 = (void *)swift_allocObject();
  v67[2] = v164;
  v67[3] = v62;
  uint64_t v68 = v162;
  v67[4] = v162;
  v67[5] = v56;
  v67[6] = v167;
  swift_unknownObjectRetain();
  uint64_t v69 = v122;
  uint64_t v70 = v123;
  sub_255C7FA78();
  swift_release();
  v59(v11, v66);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v63, v70);
  sub_255C7DD98();
  uint64_t v71 = (void *)swift_allocObject();
  uint64_t v72 = v164;
  uint64_t v73 = v165;
  v71[2] = v164;
  v71[3] = v73;
  v71[4] = v68;
  uint64_t v74 = v161;
  v71[5] = v161;
  v71[6] = v167;
  swift_unknownObjectRetain();
  uint64_t v75 = v125;
  sub_255C7FA78();
  swift_release();
  uint64_t v76 = v163;
  v59(v11, v163);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v69, v75);
  sub_255C7DD98();
  uint64_t v77 = (void *)swift_allocObject();
  v77[2] = v72;
  v77[3] = v73;
  uint64_t v78 = v162;
  v77[4] = v162;
  v77[5] = v74;
  v77[6] = v167;
  swift_unknownObjectRetain();
  uint64_t v79 = v157;
  uint64_t v80 = v127;
  sub_255C7FA78();
  swift_release();
  uint64_t v81 = v76;
  uint64_t v82 = v59;
  long long v155 = v59;
  v59(v11, v81);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v79, v80);
  sub_255C7DD98();
  uint64_t v83 = (void *)swift_allocObject();
  v83[2] = v72;
  uint64_t v84 = v165;
  v83[3] = v165;
  v83[4] = v78;
  v83[5] = v74;
  v83[6] = v167;
  swift_unknownObjectRetain();
  uint64_t v85 = v131;
  uint64_t v86 = v132;
  char v87 = v158;
  sub_255C7FA78();
  swift_release();
  uint64_t v88 = v163;
  v82(v11, v163);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v87, v86);
  sub_255C7DD98();
  uint64_t v89 = (void *)swift_allocObject();
  uint64_t v90 = v164;
  v89[2] = v164;
  _OWORD v89[3] = v84;
  uint64_t v91 = v161;
  v89[4] = v78;
  id v89[5] = v91;
  v89[6] = v167;
  swift_unknownObjectRetain();
  char v92 = v135;
  uint64_t v93 = v136;
  uint64_t v94 = v85;
  sub_255C7FA78();
  swift_release();
  uint64_t v95 = v88;
  uint64_t v96 = v88;
  unsigned __int8 v97 = v155;
  v155(v11, v95);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v94, v93);
  sub_255C7DD98();
  long long v98 = (void *)swift_allocObject();
  v98[2] = v90;
  uint64_t v99 = v165;
  uint64_t v100 = v162;
  v98[3] = v165;
  v98[4] = v100;
  v98[5] = v91;
  v98[6] = v167;
  swift_unknownObjectRetain();
  uint64_t v101 = v139;
  sub_255C7FA78();
  swift_release();
  v97(v11, v96);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v92, v101);
  sub_255C7DD98();
  uint64_t v102 = v151;
  uint64_t v103 = v152;
  uint64_t v104 = v164;
  (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v151, v129, v164);
  unint64_t v105 = (*(unsigned __int8 *)(v103 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
  uint64_t v106 = (char *)swift_allocObject();
  *((void *)v106 + 2) = v104;
  *((void *)v106 + 3) = v99;
  uint64_t v107 = v162;
  *((void *)v106 + 4) = v162;
  *((void *)v106 + 5) = v91;
  *((void *)v106 + 6) = v167;
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(&v106[v105], v102, v104);
  swift_unknownObjectRetain();
  uint64_t v108 = v159;
  uint64_t v109 = v145;
  uint64_t v110 = v146;
  sub_255C7FA78();
  swift_release();
  uint64_t v111 = v163;
  long long v112 = v155;
  v155(v11, v163);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v108, v109);
  sub_255C7DD98();
  uint64_t v113 = (void *)swift_allocObject();
  uint64_t v114 = v165;
  _OWORD v113[2] = v164;
  v113[3] = v114;
  v113[4] = v107;
  v113[5] = v91;
  v113[6] = v167;
  swift_unknownObjectRetain();
  uint64_t v168 = v109;
  uint64_t v169 = v110;
  swift_getOpaqueTypeConformance2();
  uint64_t v115 = v149;
  uint64_t v116 = v160;
  sub_255C7FA78();
  swift_release();
  v112(v11, v111);
  return (*(uint64_t (**)(char *, uint64_t))(v150 + 8))(v116, v115);
}

uint64_t sub_255AE59E8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255AE5A20(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_270484868, (uint64_t)sub_255AEE6F8, (uint64_t)&block_descriptor_154);
}

uint64_t sub_255AE5A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 208))(a4, a6);
  if (*(void *)(result + 104))
  {
    v11[0] = 0;
    v11[1] = 0;
    swift_retain();
    sub_255AB6824(v11, 0);
    swift_release();
    swift_release();
    return sub_255AE5B04(a1, a2, a4, a6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AE5B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_255C7DDB8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7DDA8();
  uint64_t v15 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_255C80958();
  swift_unknownObjectRetain();
  uint64_t v16 = sub_255C80948();
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  uint64_t v19 = MEMORY[0x263F8F500];
  *((void *)v18 + 2) = v16;
  *((void *)v18 + 3) = v19;
  *((void *)v18 + 4) = a3;
  *((void *)v18 + 5) = a4;
  *((void *)v18 + 6) = a1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v11, v8);
  sub_255AE4798((uint64_t)v14, (uint64_t)&unk_269F23798, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_255AE5D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v43 = a6;
  uint64_t v44 = a8;
  uint64_t v38 = a7;
  uint64_t v39 = a3;
  uint64_t v41 = a2;
  uint64_t v42 = a5;
  uint64_t v40 = a4;
  uint64_t v35 = a1;
  uint64_t v45 = a9;
  uint64_t v47 = sub_255C803B8();
  uint64_t v50 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v46 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_255C803E8();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_255C7DDB8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = sub_255C80408();
  uint64_t v37 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v33 - v21;
  sub_255A6C3AC();
  uint64_t v34 = sub_255C80C88();
  sub_255C803F8();
  MEMORY[0x25A295CA0](v19, 0.2);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v17 + 8);
  v36(v19, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v13);
  unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  uint64_t v25 = v40;
  uint64_t v26 = v41;
  *((void *)v24 + 2) = v39;
  *((void *)v24 + 3) = v25;
  uint64_t v27 = v43;
  *((void *)v24 + 4) = v42;
  *((void *)v24 + 5) = v27;
  *((void *)v24 + 6) = v26;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v24[v23], (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = v44;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255AE4914;
  aBlock[3] = v45;
  uint64_t v28 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  sub_255C803D8();
  uint64_t v51 = MEMORY[0x263F8EE78];
  sub_255AED288((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
  sub_255AB4994();
  uint64_t v30 = v46;
  uint64_t v29 = v47;
  sub_255C80F78();
  uint64_t v31 = (void *)v34;
  MEMORY[0x25A2964E0](v22, v12, v30, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v49);
  v36(v22, v37);
  return swift_release();
}

uint64_t sub_255AE61B0(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_2704847F0, (uint64_t)sub_255AEE42C, (uint64_t)&block_descriptor_141);
}

uint64_t sub_255AE61D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 208))(a4, a6);
  if (*(void *)(result + 104))
  {
    long long v11 = xmmword_255C8C790;
    swift_retain();
    sub_255AB6824((uint64_t *)&v11, 0);
    swift_release();
    swift_release();
    return sub_255AE5B04(a1, a2, a4, a6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AE629C(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_270484750, (uint64_t)sub_255AEDFFC, (uint64_t)&block_descriptor_122);
}

uint64_t sub_255AE62C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a3;
  uint64_t v29 = a5;
  uint64_t v27 = sub_255C7DDB8();
  uint64_t v10 = *(void *)(v27 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v27);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  double v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a4;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double))(a6 + 208))(a4, a6, v14);
  if (*(void *)(result + 104))
  {
    v30[0] = 0;
    v30[1] = 0;
    swift_retain();
    sub_255AB6824(v30, 0);
    swift_release();
    swift_release();
    LOBYTE(v30[0]) = 1;
    NowPlayingController.transition(to:animated:)((unsigned __int8 *)v30, 0, a4, a6);
    sub_255C7DDA8();
    uint64_t v19 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v16, 1, 1, v19);
    uint64_t v20 = a2;
    uint64_t v21 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v27);
    sub_255C80958();
    swift_unknownObjectRetain();
    uint64_t v22 = sub_255C80948();
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v24 = (char *)swift_allocObject();
    uint64_t v25 = MEMORY[0x263F8F500];
    *((void *)v24 + 2) = v22;
    *((void *)v24 + 3) = v25;
    *((void *)v24 + 4) = v28;
    *((void *)v24 + 5) = v17;
    *((void *)v24 + 6) = v29;
    *((void *)v24 + 7) = a6;
    *((void *)v24 + 8) = a1;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v24[v23], v12, v21);
    sub_255B5DB70((uint64_t)v16, (uint64_t)&unk_269F23770, (uint64_t)v24);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AE656C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v13;
  void v8[4] = a6;
  v8[5] = a7;
  void v8[2] = a4;
  v8[3] = a5;
  v8[8] = sub_255C80958();
  v8[9] = sub_255C80948();
  uint64_t v10 = sub_255C80908();
  v8[10] = v10;
  v8[11] = v9;
  return MEMORY[0x270FA2498](sub_255AE6618, v10, v9);
}

uint64_t sub_255AE6618()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 32);
  *(void *)(v0 + 96) = sub_255C80948();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = v6;
  *(_OWORD *)(v2 + 32) = v5;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_255AE6738;
  return MEMORY[0x270FA2318]();
}

uint64_t sub_255AE6738()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return MEMORY[0x270FA2498](sub_255AE6898, v3, v2);
}

uint64_t sub_255AE6898()
{
  swift_release();
  sub_255C7DD78();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AE6900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23778);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0;
  *((void *)v18 + 4) = a3;
  *((void *)v18 + 5) = a4;
  uint64_t v19 = v22;
  *((void *)v18 + 6) = v21;
  *((void *)v18 + 7) = v19;
  *((void *)v18 + 8) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  swift_unknownObjectRetain();
  sub_255AE7A14((uint64_t)v15, (uint64_t)&unk_269F23788, (uint64_t)v18);
  swift_release();
  return sub_255A910C0((uint64_t)v15);
}

uint64_t sub_255AE6B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a7;
  v7[7] = v11;
  long long v7[4] = a4;
  v7[5] = a5;
  uint64_t v8 = sub_255C81208();
  unsigned char v7[8] = v8;
  v7[9] = *(void *)(v8 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_255AE6BF0, 0, 0);
}

uint64_t sub_255AE6BF0()
{
  sub_255C811F8();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255AE6CB8;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_255AE6CB8()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 96);
  uint64_t v4 = *(void *)(*(void *)v1 + 72);
  uint64_t v5 = *(void *)(*(void *)v1 + 64);
  v2[14] = v0;
  swift_task_dealloc();
  long long v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[15] = v6;
  v2[16] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  if (v0) {
    uint64_t v7 = sub_255AE6EE4;
  }
  else {
    uint64_t v7 = sub_255AE6E3C;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_255AE6E3C()
{
  uint64_t v1 = v0[7];
  v0[17] = *(void *)(v1 + 208);
  v0[18] = (v1 + 208) & 0xFFFFFFFFFFFFLL | 0x3906000000000000;
  v0[19] = sub_255C80958();
  v0[20] = 0;
  v0[21] = sub_255C80948();
  uint64_t v3 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AE6F64, v3, v2);
}

uint64_t sub_255AE6EE4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AE6F64()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[17];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  swift_release();
  v0[22] = v1(v3, v2);
  return MEMORY[0x270FA2498](sub_255AE6FF8, 0, 0);
}

uint64_t sub_255AE6FF8()
{
  *(void *)(v0 + 184) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AE7084, v2, v1);
}

uint64_t sub_255AE7084()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = swift_release();
  if (*(void *)(v1 + 104))
  {
    *(_OWORD *)(v0 + 16) = xmmword_255C8C790;
    swift_retain();
    sub_255AB6824((uint64_t *)(v0 + 16), 1);
    swift_release();
    swift_release();
    uint64_t v2 = (uint64_t)sub_255AE7138;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_255AE7138()
{
  sub_255C811F8();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255AE7200;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_255AE7200()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 120))(*(void *)(v2 + 88), *(void *)(v2 + 64));
  if (v0) {
    uint64_t v3 = sub_255AE77FC;
  }
  else {
    uint64_t v3 = sub_255AE7370;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_255AE7370()
{
  *(void *)(v0 + 208) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AE73FC, v2, v1);
}

uint64_t sub_255AE73FC()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[17];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  swift_release();
  v0[27] = v1(v3, v2);
  return MEMORY[0x270FA2498](sub_255AE7490, 0, 0);
}

uint64_t sub_255AE7490()
{
  *(void *)(v0 + 224) = sub_255C80948();
  uint64_t v2 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AE751C, v2, v1);
}

uint64_t sub_255AE751C()
{
  uint64_t v7 = v0;
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = swift_release();
  if (*(void *)(v1 + 104))
  {
    v6[0] = 0;
    v6[1] = 0;
    swift_retain();
    sub_255AB6824(v6, 1);
    swift_release();
    swift_release();
    uint64_t v2 = (uint64_t)sub_255AE75C4;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_255AE75C4()
{
  sub_255C811F8();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255AE768C;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_255AE768C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 120))(*(void *)(v2 + 80), *(void *)(v2 + 64));
  if (v0) {
    uint64_t v3 = sub_255AE7994;
  }
  else {
    uint64_t v3 = sub_255AE787C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_255AE77FC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AE787C()
{
  if (v0[20] == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F23778);
    sub_255C80928();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    ++v0[20];
    v0[21] = sub_255C80948();
    uint64_t v4 = sub_255C80908();
    return MEMORY[0x270FA2498](sub_255AE6F64, v4, v3);
  }
}

uint64_t sub_255AE7994()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AE7A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A864A8(a1, (uint64_t)v7);
  uint64_t v8 = sub_255C80988();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_255A910C0((uint64_t)v7);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  else
  {
    sub_255C80978();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v10 = sub_255C80908();
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    void v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_255AE7BD4(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_2704846D8, (uint64_t)sub_255AEDDAC, (uint64_t)&block_descriptor_110_0);
}

uint64_t sub_255AE7BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a5;
  uint64_t v31 = a8;
  uint64_t v28 = a7;
  uint64_t v29 = a3;
  uint64_t v27 = a2;
  uint64_t v11 = sub_255C7DDB8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  double v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double))(a6 + 208))(a4, a6, v16);
  if (*(void *)(result + 104))
  {
    v32[0] = 0;
    v32[1] = 0;
    swift_retain();
    sub_255AB6824(v32, 0);
    swift_release();
    swift_release();
    LOBYTE(v32[0]) = 1;
    NowPlayingController.transition(to:animated:)((unsigned __int8 *)v32, 0, a4, a6);
    uint64_t v20 = v27;
    sub_255C7DDA8();
    uint64_t v21 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v11);
    sub_255C80958();
    swift_unknownObjectRetain();
    uint64_t v22 = sub_255C80948();
    unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v24 = (char *)swift_allocObject();
    uint64_t v25 = MEMORY[0x263F8F500];
    *((void *)v24 + 2) = v22;
    *((void *)v24 + 3) = v25;
    *((void *)v24 + 4) = v29;
    *((void *)v24 + 5) = a4;
    *((void *)v24 + 6) = v30;
    *((void *)v24 + 7) = a6;
    *((void *)v24 + 8) = a1;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v23], v14, v11);
    sub_255AE4798((uint64_t)v18, v31, (uint64_t)v24);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AE7E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a8;
  v8[12] = v15;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  uint64_t v9 = sub_255C811E8();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  uint64_t v10 = sub_255C81208();
  v8[17] = v10;
  v8[18] = *(void *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_255C80958();
  v8[20] = sub_255C80948();
  uint64_t v12 = sub_255C80908();
  v8[21] = v12;
  v8[22] = v11;
  return MEMORY[0x270FA2498](sub_255AE8000, v12, v11);
}

uint64_t sub_255AE8000()
{
  *(void *)(v0 + 184) = 0;
  sub_255C811F8();
  *(_OWORD *)(v0 + 40) = xmmword_255C8C7A0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return MEMORY[0x270FA2498](sub_255AE8084, 0, 0);
}

uint64_t sub_255AE8084()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_255AED288(&qword_26B29D458, MEMORY[0x263F8F710]);
  sub_255C814C8();
  sub_255AED288(&qword_26B29D778, MEMORY[0x263F8F6D8]);
  sub_255C81218();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v5;
  v0[25] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[26] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_255AE8218;
  uint64_t v8 = v0[16];
  uint64_t v7 = v0[17];
  return MEMORY[0x270FA2380](v8, v0 + 2, v7, v4);
}

uint64_t sub_255AE8218()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    uint64_t v3 = sub_255AE84EC;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 144);
    uint64_t v6 = *(void *)(v2 + 152);
    uint64_t v8 = *(void *)(v2 + 136);
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = *(void *)(v2 + 176);
    uint64_t v3 = sub_255AE8378;
  }
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_255AE8378()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v2;
  sub_255C802A8();
  sub_255C7E1E8();
  swift_release();
  swift_task_dealloc();
  if (v1 == 9)
  {
    swift_release();
    sub_255C7DD78();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    ++*(void *)(v0 + 184);
    sub_255C811F8();
    *(_OWORD *)(v0 + 40) = xmmword_255C8C7A0;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    return MEMORY[0x270FA2498](sub_255AE8084, 0, 0);
  }
}

uint64_t sub_255AE84EC()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  return MEMORY[0x270FA2498](sub_255AE8560, v1, v2);
}

uint64_t sub_255AE8560()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AE85E8(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_270484660, (uint64_t)sub_255AEDC48, (uint64_t)&block_descriptor_98);
}

uint64_t sub_255AE8610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a8;
  v8[12] = v15;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  uint64_t v9 = sub_255C811E8();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  uint64_t v10 = sub_255C81208();
  v8[17] = v10;
  v8[18] = *(void *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_255C80958();
  v8[20] = sub_255C80948();
  uint64_t v12 = sub_255C80908();
  v8[21] = v12;
  v8[22] = v11;
  return MEMORY[0x270FA2498](sub_255AE8780, v12, v11);
}

uint64_t sub_255AE8780()
{
  *(void *)(v0 + 184) = 0;
  sub_255C811F8();
  *(_OWORD *)(v0 + 40) = xmmword_255C8C7B0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return MEMORY[0x270FA2498](sub_255AE8804, 0, 0);
}

uint64_t sub_255AE8804()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_255AED288(&qword_26B29D458, MEMORY[0x263F8F710]);
  sub_255C814C8();
  sub_255AED288(&qword_26B29D778, MEMORY[0x263F8F6D8]);
  sub_255C81218();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v5;
  v0[25] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[26] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_255AE8998;
  uint64_t v8 = v0[16];
  uint64_t v7 = v0[17];
  return MEMORY[0x270FA2380](v8, v0 + 2, v7, v4);
}

uint64_t sub_255AE8998()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    uint64_t v3 = sub_255AE8C6C;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 144);
    uint64_t v6 = *(void *)(v2 + 152);
    uint64_t v8 = *(void *)(v2 + 136);
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = *(void *)(v2 + 176);
    uint64_t v3 = sub_255AE8AF8;
  }
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_255AE8AF8()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v2;
  sub_255C802A8();
  sub_255C7E1E8();
  swift_release();
  swift_task_dealloc();
  if (v1 == 9)
  {
    swift_release();
    sub_255C7DD78();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    ++*(void *)(v0 + 184);
    sub_255C811F8();
    *(_OWORD *)(v0 + 40) = xmmword_255C8C7B0;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    return MEMORY[0x270FA2498](sub_255AE8804, 0, 0);
  }
}

uint64_t sub_255AE8C6C()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  return MEMORY[0x270FA2498](sub_255AEE7B8, v1, v2);
}

uint64_t sub_255AE8CE0(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_2704845E8, (uint64_t)sub_255AEDAE4, (uint64_t)&block_descriptor_84);
}

uint64_t sub_255AE8D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a8;
  v8[9] = v14;
  v8[6] = a6;
  v8[7] = a7;
  void v8[4] = a4;
  v8[5] = a5;
  uint64_t v9 = sub_255C81208();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  v8[14] = swift_task_alloc();
  sub_255C80958();
  v8[15] = sub_255C80948();
  uint64_t v11 = sub_255C80908();
  v8[16] = v11;
  v8[17] = v10;
  return MEMORY[0x270FA2498](sub_255AE8E28, v11, v10);
}

uint64_t sub_255AE8E28()
{
  *(void *)(v0 + 144) = 0;
  sub_255C811F8();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255AE8EF4;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_255AE8EF4()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[14];
  uint64_t v4 = v2[11];
  uint64_t v5 = v2[10];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v6 = v4 + 8;
  uint64_t v7 = v8;
  if (v0)
  {
    v7(v3, v5);
    uint64_t v9 = v2[16];
    uint64_t v10 = v2[17];
    uint64_t v11 = sub_255AE934C;
  }
  else
  {
    v2[21] = v7;
    v2[22] = v6 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v3, v5);
    uint64_t v9 = v2[16];
    uint64_t v10 = v2[17];
    uint64_t v11 = sub_255AE9074;
  }
  return MEMORY[0x270FA2498](v11, v9, v10);
}

uint64_t sub_255AE9074()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[9];
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 208);
  v0[23] = (uint64_t)v3;
  v0[24] = (v2 + 208) & 0xFFFFFFFFFFFFLL | 0x3906000000000000;
  uint64_t result = v3(v1);
  if (*(void *)(result + 104))
  {
    *((_OWORD *)v0 + 1) = xmmword_255C8C790;
    swift_retain();
    sub_255AB6824(v0 + 2, 1);
    swift_release();
    swift_release();
    sub_255C811F8();
    uint64_t v6 = (char *)&dword_269F23700 + dword_269F23700;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[25] = (uint64_t)v5;
    *uint64_t v5 = v0;
    v5[1] = sub_255AE91BC;
    return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v6)(300000000000000000, 0, 0, 0, 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AE91BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 168))(*(void *)(v2 + 104), *(void *)(v2 + 80));
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_255AE96A0;
  }
  else {
    uint64_t v5 = sub_255AE93D4;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_255AE934C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AE93D4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 32) = v3;
  *(void *)(v2 + 48) = v1;
  sub_255C802A8();
  sub_255C7E1E8();
  swift_release();
  swift_task_dealloc();
  sub_255C811F8();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_255AE9510;
  return v6(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_255AE9510()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 168))(*(void *)(v2 + 96), *(void *)(v2 + 80));
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_255AE98CC;
  }
  else {
    uint64_t v5 = sub_255AE9728;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_255AE96A0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AE9728()
{
  uint64_t v7 = v0;
  uint64_t result = (*(uint64_t (**)(void, void))(v0 + 184))(*(void *)(v0 + 56), *(void *)(v0 + 72));
  if (*(void *)(result + 104))
  {
    uint64_t v2 = *(void *)(v0 + 144);
    v6[0] = 0;
    v6[1] = 0;
    swift_retain();
    sub_255AB6824(v6, 1);
    swift_release();
    swift_release();
    if (v2 == 2)
    {
      swift_release();
      sub_255C7DD78();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
      return v3();
    }
    else
    {
      ++*(void *)(v0 + 144);
      sub_255C811F8();
      uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269F23700 + dword_269F23700);
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_255AE8EF4;
      return v5(2000000000000000000, 0, 0, 0, 1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AE98CC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AE9954(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_270484570, (uint64_t)sub_255AED980, (uint64_t)&block_descriptor_72);
}

uint64_t sub_255AE997C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a8;
  v8[12] = v15;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  uint64_t v9 = sub_255C811E8();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  uint64_t v10 = sub_255C81208();
  v8[17] = v10;
  v8[18] = *(void *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_255C80958();
  v8[20] = sub_255C80948();
  uint64_t v12 = sub_255C80908();
  v8[21] = v12;
  v8[22] = v11;
  return MEMORY[0x270FA2498](sub_255AE9AEC, v12, v11);
}

uint64_t sub_255AE9AEC()
{
  *(void *)(v0 + 184) = 0;
  sub_255C811F8();
  *(_OWORD *)(v0 + 40) = xmmword_255C8C7A0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return MEMORY[0x270FA2498](sub_255AE9B70, 0, 0);
}

uint64_t sub_255AE9B70()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_255AED288(&qword_26B29D458, MEMORY[0x263F8F710]);
  sub_255C814C8();
  sub_255AED288(&qword_26B29D778, MEMORY[0x263F8F6D8]);
  sub_255C81218();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v5;
  v0[25] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[26] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_255AE9D04;
  uint64_t v8 = v0[16];
  uint64_t v7 = v0[17];
  return MEMORY[0x270FA2380](v8, v0 + 2, v7, v4);
}

uint64_t sub_255AE9D04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    uint64_t v3 = sub_255AE8C6C;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 144);
    uint64_t v6 = *(void *)(v2 + 152);
    uint64_t v8 = *(void *)(v2 + 136);
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = *(void *)(v2 + 176);
    uint64_t v3 = sub_255AE9E64;
  }
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_255AE9E64()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v2;
  sub_255C802A8();
  sub_255C7E1E8();
  swift_release();
  swift_task_dealloc();
  if (v1 == 9)
  {
    swift_release();
    sub_255C7DD78();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    ++*(void *)(v0 + 184);
    sub_255C811F8();
    *(_OWORD *)(v0 + 40) = xmmword_255C8C7A0;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    return MEMORY[0x270FA2498](sub_255AE9B70, 0, 0);
  }
}

uint64_t sub_255AE9FD8(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_2704844F8, (uint64_t)sub_255AED804, (uint64_t)&block_descriptor_60);
}

uint64_t sub_255AEA000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a5;
  uint64_t v31 = a8;
  uint64_t v28 = a7;
  uint64_t v29 = a3;
  uint64_t v27 = a2;
  uint64_t v11 = sub_255C7DDB8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  double v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double))(a6 + 208))(a4, a6, v16);
  if (*(void *)(result + 104))
  {
    long long v32 = xmmword_255C8C790;
    swift_retain();
    sub_255AB6824((uint64_t *)&v32, 0);
    swift_release();
    swift_release();
    LOBYTE(v32) = 1;
    NowPlayingController.transition(to:animated:)((unsigned __int8 *)&v32, 0, a4, a6);
    uint64_t v20 = v27;
    sub_255C7DDA8();
    uint64_t v21 = sub_255C80988();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v11);
    sub_255C80958();
    swift_unknownObjectRetain();
    uint64_t v22 = sub_255C80948();
    unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v24 = (char *)swift_allocObject();
    uint64_t v25 = MEMORY[0x263F8F500];
    *((void *)v24 + 2) = v22;
    *((void *)v24 + 3) = v25;
    *((void *)v24 + 4) = v29;
    *((void *)v24 + 5) = a4;
    *((void *)v24 + 6) = v30;
    *((void *)v24 + 7) = a6;
    *((void *)v24 + 8) = a1;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v23], v14, v11);
    sub_255AE4798((uint64_t)v18, v31, (uint64_t)v24);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255AEA29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a8;
  v8[12] = v15;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  uint64_t v9 = sub_255C811E8();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  uint64_t v10 = sub_255C81208();
  v8[17] = v10;
  v8[18] = *(void *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_255C80958();
  v8[20] = sub_255C80948();
  uint64_t v12 = sub_255C80908();
  v8[21] = v12;
  v8[22] = v11;
  return MEMORY[0x270FA2498](sub_255AEA40C, v12, v11);
}

uint64_t sub_255AEA40C()
{
  *(void *)(v0 + 184) = 0;
  sub_255C811F8();
  *(_OWORD *)(v0 + 40) = xmmword_255C8C7B0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return MEMORY[0x270FA2498](sub_255AEA490, 0, 0);
}

uint64_t sub_255AEA490()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_255AED288(&qword_26B29D458, MEMORY[0x263F8F710]);
  sub_255C814C8();
  sub_255AED288(&qword_26B29D778, MEMORY[0x263F8F6D8]);
  sub_255C81218();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v5;
  v0[25] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[26] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_255AEA624;
  uint64_t v8 = v0[16];
  uint64_t v7 = v0[17];
  return MEMORY[0x270FA2380](v8, v0 + 2, v7, v4);
}

uint64_t sub_255AEA624()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    uint64_t v3 = sub_255AE8C6C;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 144);
    uint64_t v6 = *(void *)(v2 + 152);
    uint64_t v8 = *(void *)(v2 + 136);
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = *(void *)(v2 + 176);
    uint64_t v3 = sub_255AEA784;
  }
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_255AEA784()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v2;
  sub_255C802A8();
  sub_255C7E1E8();
  swift_release();
  swift_task_dealloc();
  if (v1 == 9)
  {
    swift_release();
    sub_255C7DD78();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    ++*(void *)(v0 + 184);
    sub_255C811F8();
    *(_OWORD *)(v0 + 40) = xmmword_255C8C7B0;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    return MEMORY[0x270FA2498](sub_255AEA490, 0, 0);
  }
}

uint64_t sub_255AEA8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v53 = a6;
  uint64_t v54 = a7;
  uint64_t v51 = a5;
  uint64_t v42 = a4;
  uint64_t v47 = a3;
  uint64_t v50 = a2;
  uint64_t v45 = a1;
  uint64_t v56 = sub_255C803B8();
  uint64_t v59 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_255C803E8();
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v52 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v41 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_255C7DDB8();
  uint64_t v14 = *(void *)(v40 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v40);
  double v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_255C80408();
  uint64_t v48 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v44 = (char *)&v40 - v22;
  sub_255A6C3AC();
  uint64_t v46 = sub_255C80C88();
  sub_255C803F8();
  MEMORY[0x25A295CA0](v20, 0.2);
  unint64_t v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v43 = v18 + 8;
  uint64_t v49 = v23;
  v23(v20, v17);
  uint64_t v24 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v45, v40);
  uint64_t v25 = v41;
  uint64_t v26 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v41, v47, v42);
  unint64_t v27 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v28 = (v15 + *(unsigned __int8 *)(v11 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  uint64_t v31 = v50;
  uint64_t v30 = v51;
  *((void *)v29 + 2) = v26;
  *((void *)v29 + 3) = v30;
  uint64_t v32 = v54;
  *((void *)v29 + 4) = v53;
  *((void *)v29 + 5) = v32;
  *((void *)v29 + 6) = v31;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v29[v27], v16, v24);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v29[v28], v25, v26);
  aBlock[4] = sub_255AED420;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255AE4914;
  aBlock[3] = &block_descriptor_46;
  uint64_t v33 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  uint64_t v34 = v52;
  sub_255C803D8();
  uint64_t v60 = MEMORY[0x263F8EE78];
  sub_255AED288((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
  sub_255AB4994();
  uint64_t v36 = v55;
  uint64_t v35 = v56;
  sub_255C80F78();
  uint64_t v37 = v44;
  uint64_t v38 = (void *)v46;
  MEMORY[0x25A2964E0](v44, v34, v36, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v35);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v58);
  v49(v37, v48);
  return swift_release();
}

uint64_t sub_255AEAE94()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255AEAF58(uint64_t a1)
{
  return sub_255AEA8F8(a1, v1[6], (uint64_t)v1+ ((*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80)), v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_255AEAFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a6;
  uint64_t v41 = a2;
  uint64_t v42 = a5;
  uint64_t v47 = a3;
  uint64_t v11 = sub_255C7DDB8();
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v46 = v11;
  uint64_t v48 = *(void *)(v45 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v44 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a4;
  uint64_t v13 = *(void *)(a4 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v40 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v18;
  unsigned __int8 v51 = 1;
  NowPlayingController.transition(to:animated:)(&v51, 0, a5, a7);
  uint64_t v43 = a7;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(a7 + 208);
  uint64_t v37 = a1;
  v19(a5, a7);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v50 = &unk_270478720;
  swift_retain();
  sub_255C7DAD8();
  sub_255BDBAA0();
  swift_release();
  uint64_t v20 = v41;
  sub_255C7DDA8();
  uint64_t v21 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
  uint64_t v22 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v40, v47, a4);
  unint64_t v23 = v44;
  uint64_t v24 = v45;
  uint64_t v25 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v20, v46);
  sub_255C80958();
  swift_unknownObjectRetain();
  uint64_t v26 = sub_255C80948();
  unint64_t v27 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v28 = (v14 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = v24;
  unint64_t v30 = (*(unsigned __int8 *)(v24 + 80) + v28 + 8) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v31 = (char *)swift_allocObject();
  uint64_t v32 = MEMORY[0x263F8F500];
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v32;
  uint64_t v33 = v42;
  *((void *)v31 + 4) = v38;
  *((void *)v31 + 5) = v33;
  uint64_t v34 = v43;
  *((void *)v31 + 6) = v49;
  *((void *)v31 + 7) = v34;
  (*(void (**)(char *, char *))(v13 + 32))(&v31[v27], v22);
  *(void *)&v31[v28] = v37;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v31[v30], v23, v25);
  sub_255B5DB70((uint64_t)v39, (uint64_t)&unk_269F23710, (uint64_t)v31);
  return swift_release();
}

uint64_t sub_255AEB35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = v14;
  v7[6] = v15;
  v7[3] = a6;
  long long v7[4] = a7;
  v7[2] = a5;
  v7[7] = sub_255C80958();
  unsigned char v7[8] = sub_255C80948();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_269F21940 + dword_269F21940);
  uint64_t v10 = (void *)swift_task_alloc();
  v7[9] = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_255AEB454;
  return v12(a5, v15, a7, v14, 0.0);
}

uint64_t sub_255AEB454()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_269F21940 + dword_269F21940);
  unint64_t v3 = (void *)swift_task_alloc();
  v1[10] = v3;
  *unint64_t v3 = v2;
  v3[1] = sub_255AEB5F0;
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[2];
  return v9(v7, v4, v6, v5, 0.2);
}

uint64_t sub_255AEB5F0()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_269F21940 + dword_269F21940);
  unint64_t v3 = (void *)swift_task_alloc();
  v1[11] = v3;
  *unint64_t v3 = v2;
  v3[1] = sub_255AEB78C;
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[2];
  return v9(v7, v4, v6, v5, 0.4);
}

uint64_t sub_255AEB78C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_255C80908();
  return MEMORY[0x270FA2498](sub_255AEB8C8, v1, v0);
}

uint64_t sub_255AEB8C8()
{
  swift_release();
  sub_255C7DD78();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AEB930(uint64_t a1)
{
  return sub_255AEB958(a1, (uint64_t)&unk_270484408, (uint64_t)sub_255AEBC64, (uint64_t)&block_descriptor_11);
}

uint64_t sub_255AEB958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255AE5D18(a1, v4[6], v4[2], v4[3], v4[4], v4[5], a2, a3, a4);
}

uint64_t sub_255AEB994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a3;
  uint64_t v28 = a5;
  uint64_t v24 = a2;
  uint64_t v25 = a4;
  uint64_t v26 = sub_255C7DDB8();
  uint64_t v9 = *(void *)(v26 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v26);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F0C0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v30 = 1;
  NowPlayingController.transition(to:animated:)(&v30, 0, a4, a6);
  (*(void (**)(uint64_t, uint64_t))(a6 + 208))(a4, a6);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v29 = &unk_270478788;
  swift_retain();
  sub_255C7DAD8();
  sub_255BDBAA0();
  swift_release();
  uint64_t v14 = v24;
  sub_255C7DDA8();
  uint64_t v15 = sub_255C80988();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  uint64_t v16 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v26);
  sub_255C80958();
  swift_unknownObjectRetain();
  uint64_t v17 = sub_255C80948();
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = MEMORY[0x263F8F500];
  *((void *)v19 + 2) = v17;
  *((void *)v19 + 3) = v20;
  uint64_t v21 = v25;
  *((void *)v19 + 4) = v27;
  *((void *)v19 + 5) = v21;
  *((void *)v19 + 6) = v28;
  *((void *)v19 + 7) = a6;
  *((void *)v19 + 8) = a1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v19[v18], (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  sub_255AE4798((uint64_t)v13, (uint64_t)&unk_269F236F8, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_255AEBC64()
{
  return sub_255AEE710((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AEB994);
}

uint64_t sub_255AEBC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v7[4] = a7;
  v7[5] = v13;
  v7[2] = a4;
  v7[3] = a5;
  uint64_t v8 = sub_255C81208();
  v7[6] = v8;
  v7[7] = *(void *)(v8 - 8);
  unsigned char v7[8] = swift_task_alloc();
  sub_255C80958();
  v7[9] = sub_255C80948();
  uint64_t v10 = sub_255C80908();
  v7[10] = v10;
  v7[11] = v9;
  return MEMORY[0x270FA2498](sub_255AEBD7C, v10, v9);
}

uint64_t sub_255AEBD7C()
{
  (*(void (**)(void))(v0[5] + 216))(v0[4]);
  sub_255C811F8();
  uint64_t v3 = (char *)&dword_269F23700 + dword_269F23700;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255AEBE68;
  return ((uint64_t (*)(unint64_t, uint64_t, void, void, uint64_t))v3)(0xA055690D9DB80000, 1, 0, 0, 1);
}

uint64_t sub_255AEBE68()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *(void *)(*v1 + 48);
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v8 = sub_255AEC074;
  }
  else {
    uint64_t v8 = sub_255AEC000;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_255AEC000()
{
  swift_release();
  sub_255C7DD78();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AEC074()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AEC0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  uint64_t v8 = sub_255C811E8();
  v7[16] = v8;
  v7[17] = *(void *)(v8 - 8);
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  uint64_t v9 = sub_255C81208();
  v7[21] = v9;
  v7[22] = *(void *)(v9 - 8);
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  sub_255C80958();
  v7[25] = sub_255C80948();
  uint64_t v11 = sub_255C80908();
  v7[26] = v11;
  v7[27] = v10;
  return MEMORY[0x270FA2498](sub_255AEC260, v11, v10);
}

uint64_t sub_255AEC260()
{
  *(void *)(v0 + 224) = 0;
  sub_255C811F8();
  *(_OWORD *)(v0 + 64) = xmmword_255C8C7C0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return MEMORY[0x270FA2498](sub_255AEC2E4, 0, 0);
}

uint64_t sub_255AEC2E4()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = sub_255AED288(&qword_26B29D458, MEMORY[0x263F8F710]);
  v0[29] = v4;
  sub_255C814C8();
  v0[30] = sub_255AED288(&qword_26B29D778, MEMORY[0x263F8F6D8]);
  sub_255C81218();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[31] = v5;
  v0[32] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[33] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_255AEC480;
  uint64_t v8 = v0[20];
  uint64_t v7 = v0[21];
  return MEMORY[0x270FA2380](v8, v0 + 2, v7, v4);
}

uint64_t sub_255AEC480()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 248))(*(void *)(v2 + 160), *(void *)(v2 + 128));
    uint64_t v3 = sub_255AEC90C;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 192);
    uint64_t v7 = *(void *)(v2 + 168);
    uint64_t v8 = *(void *)(v2 + 176);
    (*(void (**)(void, void))(v2 + 248))(*(void *)(v2 + 160), *(void *)(v2 + 128));
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    *(void *)(v2 + 280) = v9;
    *(void *)(v2 + 288) = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v6, v7);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = *(void *)(v2 + 216);
    uint64_t v3 = sub_255AEC5F0;
  }
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_255AEC5F0()
{
  uint64_t v5 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  unsigned __int8 v4 = 1;
  NowPlayingController.transition(to:animated:)(&v4, 1, v1, v2);
  sub_255C811F8();
  *(_OWORD *)(v0 + 80) = xmmword_255C8C7C0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 56) = 1;
  return MEMORY[0x270FA2498](sub_255AEC694, 0, 0);
}

uint64_t sub_255AEC694()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[16];
  sub_255C814C8();
  sub_255C81218();
  v1(v2, v3);
  unsigned __int8 v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  *unsigned __int8 v4 = v0;
  v4[1] = sub_255AEC7A8;
  uint64_t v5 = v0[29];
  uint64_t v6 = v0[21];
  uint64_t v7 = v0[18];
  return MEMORY[0x270FA2380](v7, v0 + 5, v6, v5);
}

uint64_t sub_255AEC7A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 248))(*(void *)(v2 + 144), *(void *)(v2 + 128));
    uint64_t v3 = sub_255AECB74;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 280);
    uint64_t v7 = *(void *)(v2 + 184);
    uint64_t v8 = *(void *)(v2 + 168);
    (*(void (**)(void, void))(v2 + 248))(*(void *)(v2 + 144), *(void *)(v2 + 128));
    v6(v7, v8);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = *(void *)(v2 + 216);
    uint64_t v3 = sub_255AECA28;
  }
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_255AEC90C()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[24], v0[21]);
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  return MEMORY[0x270FA2498](sub_255AEC980, v1, v2);
}

uint64_t sub_255AEC980()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AECA28()
{
  uint64_t v7 = v0;
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  unsigned __int8 v6 = 0;
  NowPlayingController.transition(to:animated:)(&v6, 1, v2, v3);
  if (v1 == 2)
  {
    swift_release();
    sub_255C7DD78();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    ++*(void *)(v0 + 224);
    sub_255C811F8();
    *(_OWORD *)(v0 + 64) = xmmword_255C8C7C0;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    return MEMORY[0x270FA2498](sub_255AEC2E4, 0, 0);
  }
}

uint64_t sub_255AECB74()
{
  (*(void (**)(void, void))(v0 + 280))(*(void *)(v0 + 184), *(void *)(v0 + 168));
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  return MEMORY[0x270FA2498](sub_255AECBE0, v1, v2);
}

uint64_t sub_255AECBE0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AECC94(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[8];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_255A16A8C;
  return sub_255AEBC7C(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t sub_255AECDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_255C811E8();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_255AECEC0, 0, 0);
}

uint64_t sub_255AECEC0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_255C81208();
  uint64_t v5 = sub_255AED288(&qword_26B29D458, MEMORY[0x263F8F710]);
  sub_255C814C8();
  sub_255AED288(&qword_26B29D778, MEMORY[0x263F8F6D8]);
  sub_255C81218();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_255AED060;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_255AED060()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_255AED21C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_255AED21C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255AED288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255AED2D0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_255C7DDB8();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 - 8);
  unint64_t v6 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);

  return swift_deallocObject();
}

uint64_t sub_255AED420()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = *(void *)(sub_255C7DDB8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0[6];
  uint64_t v8 = (uint64_t)v0
     + ((v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));

  return sub_255AEAFA0(v7, (uint64_t)v0 + v6, v8, v1, v2, v3, v4);
}

uint64_t sub_255AED50C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_255C7DDB8();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_255AED670(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = v1[4];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v7 = (*(void *)(*(void *)(v5 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_255C7DDB8() - 8) + 80);
  uint64_t v9 = v7 + v8 + 8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = (uint64_t)v1 + v6;
  uint64_t v13 = *(void *)((char *)v1 + v7);
  uint64_t v14 = (uint64_t)v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_255A16A8C;
  return sub_255AEB35C(a1, v10, v11, v12, v13, v14, v5);
}

uint64_t sub_255AED804()
{
  return sub_255AEDDE0((uint64_t)&unk_270484548, (uint64_t)&unk_269F23720, (uint64_t (*)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AEA000);
}

uint64_t sub_255AED83C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[8];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_255A16A8C;
  return sub_255AEA29C(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_255AED964()
{
  return sub_255AEDFB4();
}

uint64_t sub_255AED980()
{
  return sub_255AEDDE0((uint64_t)&unk_2704845C0, (uint64_t)&unk_269F23730, (uint64_t (*)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AEA000);
}

uint64_t sub_255AED9B8(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[8];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_255A16A8C;
  return sub_255AE997C(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_255AEDAE4()
{
  return sub_255AEDDE0((uint64_t)&unk_270484638, (uint64_t)&unk_269F23740, (uint64_t (*)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AE7BFC);
}

uint64_t sub_255AEDB1C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[8];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_255A16A8C;
  return sub_255AE8D08(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_255AEDC48()
{
  return sub_255AEDDE0((uint64_t)&unk_2704846B0, (uint64_t)&unk_269F23750, (uint64_t (*)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AE7BFC);
}

uint64_t sub_255AEDC80(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[8];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_255A16A8C;
  return sub_255AE8610(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_255AEDDAC()
{
  return sub_255AEDDE0((uint64_t)&unk_270484728, (uint64_t)&unk_269F23760, (uint64_t (*)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AE7BFC);
}

uint64_t sub_255AEDDE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *((void *)v3 + 2);
  uint64_t v8 = *((void *)v3 + 3);
  uint64_t v9 = *((void *)v3 + 4);
  uint64_t v10 = *((void *)v3 + 5);
  uint64_t v11 = *(void *)(sub_255C7DDB8() - 8);
  return a3(*((void *)v3 + 6), &v3[(*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)], v7, v8, v9, v10, a1, a2);
}

uint64_t sub_255AEDE8C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[8];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_255A16A8C;
  return sub_255AE7E90(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_255AEDFB4()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 + 40) + 240))(0, *(void *)(v0 + 24));
}

uint64_t sub_255AEDFFC()
{
  return sub_255AEE710((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AE62C4);
}

uint64_t objectdestroy_34Tm()
{
  uint64_t v1 = sub_255C7DDB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255AEE0EC(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[8];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_255A160B0;
  return sub_255AE656C(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_255AEE214(uint64_t a1)
{
  return sub_255AE6900(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_255AEE224()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23778);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255AEE2FC(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F23778) - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[8];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_255A16A8C;
  return sub_255AE6B08(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t sub_255AEE42C()
{
  return sub_255AEE710((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AE61D8);
}

uint64_t sub_255AEE444()
{
  uint64_t v1 = sub_255C7DDB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255AEE518(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_255A160B0;
  return sub_255AEC0E0(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v1 = sub_255C7DDB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255AEE6F8()
{
  return sub_255AEE710((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_255AE5A48);
}

uint64_t sub_255AEE710(uint64_t (*a1)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(sub_255C7DDB8() - 8);
  uint64_t v7 = v1[6];
  uint64_t v8 = (char *)v1 + ((*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a1(v7, v8, v2, v3, v4, v5);
}

uint64_t sub_255AEE824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  type metadata accessor for MaterialMotionContentObserver(0);

  return sub_255C802D8();
}

uint64_t sub_255AEE8A8()
{
  type metadata accessor for MaterialMotionContentObserver(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  sub_255C7D748();
  swift_getKeyPath();
  sub_255AF2684();
  sub_255C7D708();
  swift_release();
  swift_getKeyPath();
  sub_255C7D708();
  swift_release();
  return v0;
}

uint64_t sub_255AEE9C0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B3D8);
  sub_255C7FE58();
  return v1;
}

uint64_t sub_255AEEA10()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F237D8);
  sub_255C7FE68();
  return v1;
}

uint64_t sub_255AEEA74()
{
  return sub_255C7FE78();
}

uint64_t NowPlayingArtworkBackground.init(videoURL:namespace:treatment:staticArt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void (*a4)(uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v25 = a4;
  uint64_t v12 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v15;
  uint64_t v17 = (int *)type metadata accessor for NowPlayingArtworkBackground();
  sub_255AEE824((uint64_t)sub_255AEE8A8, 0);
  uint64_t v18 = a7 + v17[13];
  *(void *)uint64_t v18 = sub_255AEE9C0();
  *(unsigned char *)(v18 + 8) = v19 & 1;
  *(void *)(v18 + 16) = v20;
  uint64_t v21 = sub_255A28344(a1, a7);
  uint64_t v22 = a7 + v17[9];
  *(void *)uint64_t v22 = a2;
  *(unsigned char *)(v22 + 8) = a3 & 1;
  v25(v21);
  sub_255A28104(a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a7 + v17[10], v14, a6);
  *(unsigned char *)(a7 + v17[11]) = v16;
  return result;
}

uint64_t type metadata accessor for NowPlayingArtworkBackground()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t NowPlayingArtworkBackground.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v7 + *(int *)(v5 + 36);
  uint64_t v37 = *(void *)v8;
  int v36 = *(unsigned __int8 *)(v8 + 8);
  (*(void (**)(char *))(v3 + 16))(v6);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v35 = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)(v10 + 16) = v11;
  *(void *)(v10 + 24) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, v6, a1);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F27520);
  sub_255C7E458();
  sub_255C7E458();
  sub_255C80E88();
  uint64_t v64 = v12;
  uint64_t v65 = MEMORY[0x263F18880];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = MEMORY[0x263F1BB78];
  swift_getWitnessTable();
  sub_255C7EBB8();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  v32[3] = sub_255C7FF98();
  *(void *)&long long v70 = v11;
  *((void *)&v70 + 1) = v11;
  *(void *)&long long v71 = v12;
  *((void *)&v71 + 1) = v12;
  type metadata accessor for MotionView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EA0);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237A8);
  uint64_t v13 = sub_255C7E458();
  uint64_t v14 = type metadata accessor for MaterialMotionContentObserver(255);
  uint64_t v15 = swift_getWitnessTable();
  v32[1] = MEMORY[0x263F1A420];
  uint64_t v16 = sub_255A09998((unint64_t *)&qword_269F22EA8, &qword_269F22EA0);
  uint64_t v61 = v15;
  uint64_t v62 = v16;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v60 = MEMORY[0x263F198F8];
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v32[2] = MEMORY[0x263F19128];
  uint64_t v18 = sub_255A09998(&qword_269F237B0, &qword_269F237A8);
  uint64_t v57 = v17;
  uint64_t v58 = v18;
  uint64_t v19 = swift_getWitnessTable();
  unint64_t v20 = sub_255AF2684();
  *(void *)&long long v70 = v13;
  *((void *)&v70 + 1) = v14;
  *(void *)&long long v71 = v19;
  *((void *)&v71 + 1) = v20;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237B8);
  sub_255C7E458();
  sub_255C80E88();
  *(void *)&long long v70 = v13;
  *((void *)&v70 + 1) = v14;
  *(void *)&long long v71 = v19;
  *((void *)&v71 + 1) = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_255A09998(&qword_269F237C0, &qword_269F237B8);
  uint64_t v55 = OpaqueTypeConformance2;
  uint64_t v56 = v22;
  uint64_t v54 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29ECF8);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB40);
  sub_255C7E458();
  sub_255C7E458();
  uint64_t v23 = sub_255C7E458();
  uint64_t v33 = sub_255A09998(&qword_269F237C8, (uint64_t *)&unk_269F27520);
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v52 = v24;
  uint64_t v53 = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = sub_255A09998(&qword_269F23320, &qword_26B29ECF8);
  uint64_t v50 = v26;
  uint64_t v51 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = sub_255A09998(&qword_26B29EB38, &qword_26B29EB40);
  uint64_t v48 = v28;
  uint64_t v49 = v29;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = MEMORY[0x263F1A070];
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = MEMORY[0x263F18860];
  uint64_t v30 = swift_getWitnessTable();
  *(void *)&long long v70 = v34;
  *((void *)&v70 + 1) = v23;
  *(void *)&long long v71 = v33;
  *((void *)&v71 + 1) = v30;
  sub_255C7E568();
  swift_getWitnessTable();
  sub_255C7E268();
  sub_255C7E458();
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = MEMORY[0x263F1A450];
  swift_getWitnessTable();
  sub_255B8BAE0(v37, v36, (uint64_t)sub_255AEFBA0, v35, (uint64_t)&v70);
  long long v39 = v70;
  long long v40 = v71;
  uint64_t v41 = v72;
  type metadata accessor for WithNamespace();
  swift_getWitnessTable();
  sub_255A20F54(&v39);
  sub_255AF26DC((uint64_t)&v70);
  long long v39 = v66;
  LOBYTE(v40) = v67;
  *((void *)&v40 + 1) = v68;
  uint64_t v41 = v69;
  sub_255A20F54(&v39);
  return swift_release();
}

uint64_t sub_255AEF408@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v7 = type metadata accessor for NowPlayingArtworkBackground();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v34 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v34 - v9, a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v37 = v12;
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, v10, v7);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F27520);
  sub_255C7E458();
  sub_255C7E458();
  sub_255C80E88();
  unint64_t v67 = a3;
  uint64_t v68 = MEMORY[0x263F18880];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = MEMORY[0x263F1BB78];
  swift_getWitnessTable();
  sub_255C7EBB8();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  v34[2] = sub_255C7FF98();
  uint64_t v62 = a2;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  unint64_t v65 = a3;
  type metadata accessor for MotionView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EA0);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237A8);
  uint64_t v13 = sub_255C7E458();
  uint64_t v14 = type metadata accessor for MaterialMotionContentObserver(255);
  uint64_t v15 = swift_getWitnessTable();
  v34[0] = MEMORY[0x263F1A420];
  uint64_t v16 = sub_255A09998((unint64_t *)&qword_269F22EA8, &qword_269F22EA0);
  uint64_t v60 = v15;
  uint64_t v61 = v16;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = MEMORY[0x263F198F8];
  uint64_t v17 = swift_getWitnessTable();
  v34[1] = MEMORY[0x263F19128];
  uint64_t v18 = sub_255A09998(&qword_269F237B0, &qword_269F237A8);
  uint64_t v56 = v17;
  uint64_t v57 = v18;
  uint64_t v19 = swift_getWitnessTable();
  unint64_t v20 = sub_255AF2684();
  uint64_t v62 = v13;
  uint64_t v63 = v14;
  uint64_t v64 = v19;
  unint64_t v65 = v20;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237B8);
  sub_255C7E458();
  sub_255C80E88();
  uint64_t v62 = v13;
  uint64_t v63 = v14;
  uint64_t v64 = v19;
  unint64_t v65 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_255A09998(&qword_269F237C0, &qword_269F237B8);
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v55 = v22;
  uint64_t v53 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29ECF8);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB40);
  sub_255C7E458();
  sub_255C7E458();
  uint64_t v23 = sub_255C7E458();
  uint64_t v35 = sub_255A09998(&qword_269F237C8, (uint64_t *)&unk_269F27520);
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v51 = v24;
  uint64_t v52 = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = sub_255A09998(&qword_269F23320, &qword_26B29ECF8);
  uint64_t v49 = v26;
  uint64_t v50 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = sub_255A09998(&qword_26B29EB38, &qword_26B29EB40);
  uint64_t v47 = v28;
  uint64_t v48 = v29;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = MEMORY[0x263F1A070];
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = MEMORY[0x263F18860];
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v62 = v36;
  uint64_t v63 = v23;
  uint64_t v64 = v35;
  unint64_t v65 = v30;
  sub_255C7E568();
  swift_getWitnessTable();
  uint64_t v62 = sub_255C7E258();
  uint64_t v63 = v31;
  sub_255C7E468();
  sub_255C7F198();
  sub_255C7E268();
  uint64_t v32 = swift_getWitnessTable();
  sub_255C7F7D8();
  swift_release();
  v41[0] = v69;
  v41[1] = v70;
  _OWORD v41[2] = v71;
  char v42 = v72;
  sub_255C7E458();
  uint64_t v39 = v32;
  uint64_t v40 = MEMORY[0x263F1A450];
  swift_getWitnessTable();
  sub_255A20F54(v41);
  swift_release();
  uint64_t v69 = v62;
  uint64_t v70 = v63;
  uint64_t v71 = v64;
  char v72 = v65;
  sub_255A20F54(&v69);
  return swift_release();
}

uint64_t sub_255AEFBA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for NowPlayingArtworkBackground() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_255AEF408(v6, v3, v4, a1);
}

uint64_t sub_255AEFC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v99 = a1;
  uint64_t v104 = a5;
  uint64_t v7 = type metadata accessor for NowPlayingArtworkBackground();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v101 = v7;
  uint64_t v102 = v8;
  uint64_t v103 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v100 = (char *)v71 - v9;
  sub_255C7E458();
  sub_255C7E458();
  sub_255C80E88();
  unint64_t v140 = a4;
  uint64_t v141 = MEMORY[0x263F18880];
  uint64_t v10 = (char *)MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v94 = MEMORY[0x263F1BB78];
  swift_getWitnessTable();
  sub_255C7EBB8();
  sub_255C7E458();
  swift_getTupleTypeMetadata2();
  uint64_t v96 = sub_255C80318();
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v105 = sub_255C7FF98();
  uint64_t v98 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v95 = (char *)v71 - v11;
  unint64_t v106 = a4;
  uint64_t v107 = a3;
  uint64_t v135 = a3;
  uint64_t v136 = a3;
  uint64_t v137 = a4;
  unint64_t v138 = a4;
  type metadata accessor for MotionView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EA0);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237A8);
  uint64_t v12 = sub_255C7E458();
  uint64_t v13 = type metadata accessor for MaterialMotionContentObserver(255);
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v93 = MEMORY[0x263F1A420];
  uint64_t v15 = sub_255A09998((unint64_t *)&qword_269F22EA8, &qword_269F22EA0);
  uint64_t v133 = v14;
  uint64_t v134 = v15;
  uint64_t v131 = swift_getWitnessTable();
  uint64_t v132 = MEMORY[0x263F198F8];
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v82 = MEMORY[0x263F19128];
  uint64_t v17 = sub_255A09998(&qword_269F237B0, &qword_269F237A8);
  uint64_t v129 = v16;
  uint64_t v130 = v17;
  uint64_t v79 = v10;
  uint64_t v18 = swift_getWitnessTable();
  unint64_t v19 = sub_255AF2684();
  uint64_t v135 = v12;
  uint64_t v136 = v13;
  uint64_t v137 = v18;
  unint64_t v138 = v19;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237B8);
  sub_255C7E458();
  uint64_t v20 = sub_255C80E88();
  uint64_t v135 = v12;
  uint64_t v136 = v13;
  uint64_t v137 = v18;
  unint64_t v138 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_255A09998(&qword_269F237C0, &qword_269F237B8);
  uint64_t v127 = OpaqueTypeConformance2;
  uint64_t v128 = v22;
  uint64_t v126 = swift_getWitnessTable();
  uint64_t v90 = v20;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v78 = sub_255C7E598();
  uint64_t v23 = sub_255C7E458();
  uint64_t v93 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  char v87 = (char *)v71 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29ECF8);
  uint64_t v73 = v23;
  uint64_t v25 = sub_255C7E458();
  uint64_t v92 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v86 = (char *)v71 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EB40);
  uint64_t v74 = v25;
  uint64_t v27 = sub_255C7E458();
  uint64_t v88 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v85 = (char *)v71 - v28;
  uint64_t v29 = sub_255C7E458();
  uint64_t v91 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v83 = (char *)v71 - v30;
  uint64_t v76 = v29;
  uint64_t v31 = sub_255C7E458();
  uint64_t v94 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v84 = (char *)v71 - v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F27520);
  uint64_t v81 = v33;
  uint64_t v34 = sub_255A09998(&qword_269F237C8, (uint64_t *)&unk_269F27520);
  uint64_t v80 = v34;
  uint64_t v35 = swift_getWitnessTable();
  v71[0] = v35;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v124 = v35;
  uint64_t v125 = v36;
  uint64_t v37 = swift_getWitnessTable();
  v71[2] = v37;
  uint64_t v38 = sub_255A09998(&qword_269F23320, &qword_26B29ECF8);
  uint64_t v122 = v37;
  uint64_t v123 = v38;
  uint64_t v39 = swift_getWitnessTable();
  v71[1] = v39;
  uint64_t v40 = sub_255A09998(&qword_26B29EB38, &qword_26B29EB40);
  uint64_t v120 = v39;
  uint64_t v121 = v40;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v118 = v72;
  uint64_t v119 = MEMORY[0x263F1A070];
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v116 = v75;
  uint64_t v117 = MEMORY[0x263F18860];
  uint64_t v77 = v31;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v135 = v33;
  uint64_t v136 = v31;
  uint64_t v137 = v34;
  unint64_t v138 = v78;
  uint64_t v41 = sub_255C7E568();
  uint64_t v82 = *(void *)(v41 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)v71 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v79 = (char *)v71 - v45;
  unint64_t v46 = v106;
  uint64_t v47 = v107;
  uint64_t v113 = v107;
  unint64_t v114 = v106;
  uint64_t v48 = v108;
  uint64_t v115 = v108;
  sub_255C7EA58();
  uint64_t v49 = v95;
  sub_255C7FF88();
  sub_255C801D8();
  uint64_t v109 = v47;
  unint64_t v110 = v46;
  uint64_t v111 = v48;
  uint64_t v112 = v99;
  uint64_t v50 = v87;
  uint64_t v51 = v105;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v49, v51);
  sub_255C801F8();
  sub_255AF48BC();
  uint64_t v52 = v86;
  uint64_t v53 = v73;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v50, v53);
  uint64_t v54 = v85;
  uint64_t v55 = v74;
  sub_255C7FAA8();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v55);
  uint64_t v56 = v83;
  sub_255C7F7F8();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v27);
  sub_255C7E0D8();
  sub_255C7E0D8();
  sub_255C801F8();
  uint64_t v57 = v84;
  uint64_t v58 = v76;
  sub_255C7FA38();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v56, v58);
  uint64_t v59 = v101;
  uint64_t v60 = v108;
  uint64_t v135 = sub_255AF2368();
  uint64_t v61 = v102;
  uint64_t v62 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v100, v60, v59);
  uint64_t v63 = v61;
  unint64_t v64 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v65 = swift_allocObject();
  unint64_t v66 = v106;
  *(void *)(v65 + 16) = v107;
  *(void *)(v65 + 24) = v66;
  (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v65 + v64, v62, v59);
  uint64_t v67 = v77;
  sub_255C7FBB8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  swift_getWitnessTable();
  uint64_t v68 = v79;
  sub_255A20F54(v44);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v82 + 8);
  v69(v44, v41);
  sub_255A20F54(v68);
  return ((uint64_t (*)(char *, uint64_t))v69)(v68, v41);
}

uint64_t sub_255AF08D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v7 = sub_255C7E458();
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v23 - v8;
  sub_255C7E458();
  uint64_t v10 = sub_255C80E88();
  v34[7] = a3;
  v34[8] = MEMORY[0x263F18880];
  v23[2] = MEMORY[0x263F18E48];
  v34[6] = swift_getWitnessTable();
  v23[1] = v10;
  v23[0] = swift_getWitnessTable();
  void v23[3] = sub_255C7EBB8();
  uint64_t v11 = sub_255C7E458();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v23 - v16;
  type metadata accessor for NowPlayingArtworkBackground();
  sub_255C7F628();
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a1;
  sub_255C801F8();
  v34[4] = a3;
  v34[5] = MEMORY[0x263F198F8];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7F588();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  uint64_t v19 = swift_getWitnessTable();
  v34[2] = WitnessTable;
  void v34[3] = v19;
  uint64_t v20 = swift_getWitnessTable();
  sub_255A20F54(v15);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  uint64_t v32 = 0;
  char v33 = 1;
  v34[0] = v15;
  v34[1] = &v32;
  v31[0] = v11;
  v31[1] = MEMORY[0x263F1B6B0];
  uint64_t v29 = v20;
  uint64_t v30 = MEMORY[0x263F1B698];
  sub_255AF64A0((uint64_t)v34, 2uLL, (uint64_t)v31);
  v21(v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v21)(v15, v11);
}

uint64_t sub_255AF0CC0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  uint64_t v3 = sub_255C7E458();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_255C80E88();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v21[0] = (uint64_t)v21 - v15;
  uint64_t v22 = a1;
  type metadata accessor for NowPlayingArtworkBackground();
  if (sub_255C7DCD8())
  {
    sub_255C80368();
    uint64_t v16 = v22;
    sub_255C7F6C8();
    uint64_t v23 = v16;
    uint64_t v24 = MEMORY[0x263F18880];
    swift_getWitnessTable();
    sub_255A20F54(v7);
    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v7, v3);
    sub_255A20F54(v9);
    v17(v9, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v14, 1, 1, v3);
    uint64_t v28 = v22;
    uint64_t v29 = MEMORY[0x263F18880];
    swift_getWitnessTable();
  }
  uint64_t v18 = v21[0];
  sub_255A97640((uint64_t)v14, v21[0]);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  uint64_t v26 = v22;
  uint64_t v27 = MEMORY[0x263F18880];
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(v18);
  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v18, v10);
}

uint64_t sub_255AF1078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v118 = a5;
  uint64_t v137 = a3;
  uint64_t v138 = a3;
  uint64_t v93 = a3;
  uint64_t v139 = a4;
  unint64_t v140 = a4;
  unint64_t v92 = a4;
  uint64_t v6 = type metadata accessor for MotionView();
  uint64_t v107 = type metadata accessor for MCUINamespace();
  uint64_t v106 = *(void *)(v107 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v107);
  uint64_t v104 = (uint64_t)&v86 - v8;
  uint64_t v100 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v96 = (uint64_t)&v86 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F22EA0);
  uint64_t v10 = sub_255C7E458();
  uint64_t v103 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v102 = (char *)&v86 - v11;
  uint64_t v12 = sub_255C7E458();
  uint64_t v108 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v105 = (char *)&v86 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237A8);
  uint64_t v14 = sub_255C7E458();
  uint64_t v111 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v109 = (char *)&v86 - v15;
  uint64_t v16 = type metadata accessor for MaterialMotionContentObserver(255);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = sub_255A09998((unint64_t *)&qword_269F22EA8, &qword_269F22EA0);
  uint64_t v89 = WitnessTable;
  uint64_t v135 = WitnessTable;
  uint64_t v136 = v18;
  uint64_t v91 = v10;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v133 = v90;
  uint64_t v134 = MEMORY[0x263F198F8];
  uint64_t v110 = v12;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = sub_255A09998(&qword_269F237B0, &qword_269F237A8);
  uint64_t v94 = v19;
  uint64_t v131 = v19;
  uint64_t v132 = v20;
  uint64_t v21 = swift_getWitnessTable();
  unint64_t v22 = sub_255AF2684();
  uint64_t v120 = v16;
  uint64_t v121 = v14;
  uint64_t v137 = v14;
  uint64_t v138 = v16;
  uint64_t v119 = v21;
  uint64_t v139 = v21;
  unint64_t v140 = v22;
  unint64_t v122 = v22;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v95 = (char *)&v86 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237B8);
  uint64_t v99 = OpaqueTypeMetadata2;
  uint64_t v25 = sub_255C7E458();
  uint64_t v115 = *(void *)(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v98 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v101 = (char *)&v86 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_255C7D5C8();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v86 - v37;
  uint64_t v117 = sub_255C80E88();
  uint64_t v114 = *(void *)(v117 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v117);
  uint64_t v113 = (char *)&v86 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v116 = (uint64_t)&v86 - v41;
  sub_255A28344(a1, (uint64_t)v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    sub_255A28104((uint64_t)v31);
    uint64_t v42 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56))(v113, 1, 1, v25);
    uint64_t v43 = v120;
    uint64_t v137 = v121;
    uint64_t v138 = v120;
    uint64_t v44 = v119;
    uint64_t v139 = v119;
    unint64_t v140 = v122;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v46 = sub_255A09998(&qword_269F237C0, &qword_269F237B8);
    uint64_t v129 = OpaqueTypeConformance2;
    uint64_t v130 = v46;
    swift_getWitnessTable();
    uint64_t v47 = v116;
    sub_255A97640(v42, v116);
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
    uint64_t v49 = v42;
  }
  else
  {
    uint64_t v88 = v33;
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    uint64_t v86 = v38;
    uint64_t v87 = v32;
    v50(v38, v31, v32);
    uint64_t v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v33 + 16))(v36, v38, v32);
    uint64_t v52 = MEMORY[0x270FA5388](v51);
    uint64_t v53 = v93;
    uint64_t v54 = v92;
    MEMORY[0x270FA5388](v52);
    uint64_t v83 = v54;
    uint64_t v84 = v54;
    uint64_t v55 = v96;
    sub_255A231D0((uint64_t)v36, (uint64_t)sub_255AF4A0C, (void (*)(uint64_t))sub_255AF4A0C, (uint64_t)(&v86 - 6), 0, 0, v96, v53);
    uint64_t v56 = v104;
    View.mcui.getter(v6, v104);
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v55, v6);
    LOBYTE(v137) = 1;
    uint64_t v57 = v102;
    uint64_t v58 = v107;
    MCUINamespace<A>.motionCacheDownload(policy:)((uint64_t)&v137, v107);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v56, v58);
    type metadata accessor for NowPlayingArtworkBackground();
    uint64_t v107 = v25;
    uint64_t v59 = v105;
    uint64_t v60 = v91;
    sub_255C7F628();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v57, v60);
    uint64_t v61 = sub_255C801D8();
    MEMORY[0x270FA5388](v61);
    uint64_t v82 = v53;
    uint64_t v83 = v54;
    uint64_t v84 = a1;
    uint64_t v85 = v112;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F237F8);
    sub_255AF4A9C();
    uint64_t v62 = v109;
    uint64_t v63 = v110;
    sub_255C7FAC8();
    uint64_t v64 = v121;
    uint64_t v65 = v59;
    uint64_t v66 = v107;
    (*(void (**)(char *, uint64_t))(v108 + 8))(v65, v63);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F237A0);
    sub_255C802E8();
    uint64_t v43 = v120;
    uint64_t v67 = swift_checkMetadataState();
    uint64_t v68 = v95;
    uint64_t v44 = v119;
    unint64_t v69 = v122;
    sub_255C7F668();
    swift_release();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v62, v64);
    swift_getKeyPath();
    char v125 = 1;
    uint64_t v137 = v64;
    uint64_t v138 = v67;
    uint64_t v139 = v44;
    unint64_t v140 = v69;
    uint64_t v70 = swift_getOpaqueTypeConformance2();
    uint64_t v71 = v98;
    uint64_t v72 = v99;
    sub_255C7F678();
    swift_release();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v68, v72);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v86, v87);
    uint64_t v73 = sub_255A09998(&qword_269F237C0, &qword_269F237B8);
    uint64_t v123 = v70;
    uint64_t v124 = v73;
    swift_getWitnessTable();
    uint64_t v74 = v101;
    sub_255A20F54(v71);
    uint64_t v75 = v115;
    uint64_t v76 = *(void (**)(char *, uint64_t))(v115 + 8);
    v76(v71, v66);
    uint64_t v77 = (uint64_t)v113;
    sub_255A20F54(v74);
    v76(v74, v66);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v77, 0, 1, v66);
    uint64_t v47 = v116;
    sub_255A97640(v77, v116);
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
    uint64_t v49 = v77;
  }
  uint64_t v78 = v117;
  v48(v49, v117);
  uint64_t v137 = v121;
  uint64_t v138 = v43;
  uint64_t v139 = v44;
  unint64_t v140 = v122;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  uint64_t v80 = sub_255A09998(&qword_269F237C0, &qword_269F237B8);
  uint64_t v127 = v79;
  uint64_t v128 = v80;
  uint64_t v126 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255A20F54(v47);
  return ((uint64_t (*)(uint64_t, uint64_t))v48)(v47, v78);
}

uint64_t sub_255AF1F30@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v20[1] = a1;
  uint64_t v22 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23820);
  uint64_t v21 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23810);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NowPlayingArtworkBackground();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F237A0);
  sub_255C802E8();
  uint64_t v9 = v23;
  swift_getKeyPath();
  *(void *)&long long v23 = v9;
  sub_255AF2684();
  sub_255C7D718();
  swift_release();
  uint64_t v10 = *(void **)(v9 + 16);
  id v11 = v10;
  swift_release();
  if (!v10) {
    goto LABEL_6;
  }
  if (sub_255C7DCD8() & 1) == 0 || (sub_255AEEA10(), (v12))
  {

LABEL_6:
    uint64_t v18 = 1;
    uint64_t v17 = v22;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, v18, 1, v5);
  }
  type metadata accessor for NowPlayingArtworkMotionReplicatorLayer();
  *(void *)(swift_allocObject() + 16) = v11;
  id v13 = v11;
  sub_255C7DFD8();
  sub_255C7E0D8();
  sub_255C7E0D8();
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v14 = v21;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v8, v4, v2);

  uint64_t v15 = &v8[*(int *)(v5 + 36)];
  long long v16 = v24;
  *(_OWORD *)uint64_t v15 = v23;
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v25;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v2);
  uint64_t v17 = v22;
  sub_255AF4C8C((uint64_t)v8, v22);
  uint64_t v18 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, v18, 1, v5);
}

void sub_255AF2264(char *a1, uint64_t a2)
{
  id v3 = objc_msgSend(self, sel_playerLayerWithPlayer_, a2);
  uint64_t v4 = OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMotionReplicatorLayer_originalContent;
  uint64_t v5 = *(void **)&a1[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMotionReplicatorLayer_originalContent];
  *(void *)&a1[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMotionReplicatorLayer_originalContent] = v3;
  id v6 = v3;
  objc_msgSend(v5, sel_removeFromSuperlayer);
  if (*(void *)&a1[v4]) {
    objc_msgSend(a1, sel_addSublayer_);
  }
}

uint64_t sub_255AF231C@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = KeyPath;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_255AF2368()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F237E0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F27510);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F237A0);
  sub_255C802E8();
  uint64_t v8 = v14;
  swift_getKeyPath();
  uint64_t v14 = v8;
  sub_255AF2684();
  sub_255C7D718();
  swift_release();
  uint64_t v9 = *(void **)(v8 + 16);
  id v10 = v9;
  swift_release();
  if (v9)
  {
    swift_getKeyPath();
    sub_255C7D4E8();

    swift_release();
    sub_255A09998(&qword_269F237E8, (uint64_t *)&unk_269F27510);
    uint64_t v11 = sub_255C7DAF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF60);
    sub_255C7DA78();
    sub_255A09998(&qword_269F237F0, &qword_269F237E0);
    uint64_t v11 = sub_255C7DAF8();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v11;
}

uint64_t sub_255AF2620(uint64_t result)
{
  if ((*(unsigned char *)(result + 16) & 1) == 0 && (*(double *)result != 0.0 || *(double *)(result + 8) != 0.0))
  {
    type metadata accessor for NowPlayingArtworkBackground();
    return sub_255AEEA74();
  }
  return result;
}

unint64_t sub_255AF2684()
{
  unint64_t result = qword_269F224E8;
  if (!qword_269F224E8)
  {
    type metadata accessor for MaterialMotionContentObserver(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F224E8);
  }
  return result;
}

uint64_t sub_255AF26DC(uint64_t a1)
{
  return a1;
}

id sub_255AF2708@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_presentationSize);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t NowPlayingArtworkBackgroundTreatment.contentMode.getter()
{
  return *v0;
}

uint64_t NowPlayingArtworkBackgroundTreatment.init(contentMode:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result & 1;
  return result;
}

uint64_t sub_255AF2754()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_255AF2798()
{
  sub_255AF40AC(319, &qword_26B297D08, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_255AF40AC(319, (unint64_t *)&qword_26B29D138, type metadata accessor for MaterialMotionContentObserver, MEMORY[0x263F1BA20]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_255AF2918(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = sub_255C7D5C8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v36 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v36 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v13 & 0xF8 | 7;
  uint64_t v15 = *(void *)(v12 + 64) + 7;
  unsigned int v16 = v8 | *(_DWORD *)(v5 + 80) & 0xF8 | v13 & 0xF8;
  int v17 = (v13 | *(_DWORD *)(v5 + 80) | v8) & 0x100000;
  if (v16 > 7
    || v17 != 0
    || (v15 & 0xFFFFFFFFFFFFFFF8)
     + ((v14
       + v10
       + ((v8 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~(unint64_t)v8)
       + 1) & ~v14)
     + 32 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v21 = (uint64_t *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
  }
  else
  {
    unint64_t v32 = ~(unint64_t)v8;
    uint64_t v33 = ~v14;
    unint64_t v34 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v35 = v11;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      uint64_t v21 = a1;
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      uint64_t v21 = a1;
    }
    unint64_t v22 = ((unint64_t)v21 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = *(void *)v23;
    *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
    *(void *)unint64_t v22 = v24;
    uint64_t v25 = (v22 + v8 + 9) & v32;
    uint64_t v26 = (v23 + v9 + 9) & v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v25, v26, v36);
    *(unsigned char *)(v25 + v10) = *(unsigned char *)(v26 + v10);
    uint64_t v27 = (v25 + v10 + v14 + 1) & v33;
    uint64_t v28 = (v26 + v10 + v14 + 1) & v33;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v27, v28, v35);
    *(void *)((v15 + v27) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v15 + v28) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v29 = v27 + v34;
    uint64_t v30 = *(void *)(v28 + v34);
    *(unsigned char *)(v29 + 8) = *(unsigned char *)(v28 + v34 + 8);
    *(void *)unint64_t v29 = v30;
    *(void *)(v29 + 16) = *(void *)(v28 + v34 + 16);
    swift_retain();
  }
  swift_retain();
  return v21;
}

uint64_t sub_255AF2C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7D5C8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v6;
  }
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v7 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  uint64_t v10 = *(void *)(v8 + 56);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  (*(void (**)(unint64_t, uint64_t))(v12 + 8))((v10 + v13 + v9 + 1) & ~v13, v11);
  swift_release();

  return swift_release();
}

void *sub_255AF2E24(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = v9;
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    uint64_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 56;
    v12(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v11 + 28);
    size_t v9 = *(void *)(v11 + 8);
  }
  if (v8) {
    size_t v13 = v9;
  }
  else {
    size_t v13 = v9 + 1;
  }
  size_t v14 = v13 + 7;
  unint64_t v15 = ((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = v17;
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v19 = v18 + 16;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = (v20 + 9 + v15) & ~v20;
  uint64_t v22 = (v20 + 9 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v21, v22);
  uint64_t v23 = *(void *)(v19 + 48);
  uint64_t v24 = (unsigned char *)(v23 + v21);
  uint64_t v25 = (unsigned char *)(v23 + v22);
  *uint64_t v24 = *v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = v27 + 16;
  uint64_t v29 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v30 = v29 + 8;
  unint64_t v31 = (unint64_t)&v24[v29 + 8];
  unint64_t v32 = ~v29 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = v31 & v32;
  unint64_t v34 = (unint64_t)&v25[v30] & v32;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 16))(v31 & v32, v34, v26);
  uint64_t v35 = *(void *)(v28 + 48) + 7;
  *(void *)((v35 + v33) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v35 + v34) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v37 = v36 + v33;
  unint64_t v38 = v36 + v34;
  char v39 = *(unsigned char *)(v38 + 8);
  *(void *)unint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = v39;
  *(void *)(v37 + 16) = *(void *)(v38 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_255AF307C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v14 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v15 = v14 + 7;
  unint64_t v16 = ((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = ((unint64_t)a2 + v15) & 0xFFFFFFFFFFFFFFF8;
  char v18 = *(unsigned char *)(v17 + 8);
  *(void *)unint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = v18;
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v20 = v19 + 24;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = (v21 + 9 + v16) & ~v21;
  uint64_t v23 = (v21 + 9 + v17) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  uint64_t v24 = *(void *)(v20 + 40);
  uint64_t v25 = (unsigned char *)(v24 + v22);
  uint64_t v26 = (unsigned char *)(v24 + v23);
  *uint64_t v25 = *v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = v28 + 24;
  uint64_t v30 = *(_DWORD *)(v28 + 80) & 0xF8;
  uint64_t v31 = v30 + 8;
  unint64_t v32 = (unint64_t)&v25[v30 + 8];
  unint64_t v33 = ~v30 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = v32 & v33;
  unint64_t v35 = (unint64_t)&v26[v31] & v33;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v28 + 24))(v32 & v33, v35, v27);
  uint64_t v36 = *(void *)(v29 + 40) + 7;
  *(void *)((v36 + v34) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v36 + v35) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v37 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v38 = v37 + v34;
  unint64_t v39 = v37 + v35;
  uint64_t v40 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  *(void *)unint64_t v38 = v40;
  *(void *)(v38 + 16) = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_255AF3364(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = v9;
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    size_t v12 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 56;
    v12(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v11 + 28);
    size_t v9 = *(void *)(v11 + 8);
  }
  if (v8) {
    size_t v13 = v9;
  }
  else {
    size_t v13 = v9 + 1;
  }
  size_t v14 = v13 + 7;
  unint64_t v15 = ((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = v17;
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v19 = v18 + 32;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = (v20 + 9 + v15) & ~v20;
  uint64_t v22 = (v20 + 9 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v21, v22);
  uint64_t v23 = *(void *)(v19 + 32);
  uint64_t v24 = (unsigned char *)(v23 + v21);
  uint64_t v25 = (unsigned char *)(v23 + v22);
  *uint64_t v24 = *v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = v27 + 32;
  uint64_t v29 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v30 = v29 + 8;
  unint64_t v31 = (unint64_t)&v24[v29 + 8];
  unint64_t v32 = ~v29 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = v31 & v32;
  unint64_t v34 = (unint64_t)&v25[v30] & v32;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 32))(v31 & v32, v34, v26);
  uint64_t v35 = *(void *)(v28 + 32) + 7;
  *(void *)((v35 + v33) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v35 + v34) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v37 = v36 + v33;
  unint64_t v38 = v36 + v34;
  uint64_t v39 = *(void *)(v38 + 16);
  *(_OWORD *)unint64_t v37 = *(_OWORD *)v38;
  *(void *)(v37 + 16) = v39;
  return a1;
}

void *sub_255AF35A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v14 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v15 = v14 + 7;
  unint64_t v16 = ((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = ((unint64_t)a2 + v15) & 0xFFFFFFFFFFFFFFF8;
  char v18 = *(unsigned char *)(v17 + 8);
  *(void *)unint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = v18;
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = (v21 + 9 + v16) & ~v21;
  uint64_t v23 = (v21 + 9 + v17) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  uint64_t v24 = *(void *)(v20 + 24);
  uint64_t v25 = (unsigned char *)(v24 + v22);
  uint64_t v26 = (unsigned char *)(v24 + v23);
  *uint64_t v25 = *v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = v28 + 40;
  uint64_t v30 = *(_DWORD *)(v28 + 80) & 0xF8;
  uint64_t v31 = v30 + 8;
  unint64_t v32 = (unint64_t)&v25[v30 + 8];
  unint64_t v33 = ~v30 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = v32 & v33;
  unint64_t v35 = (unint64_t)&v26[v31] & v33;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v28 + 40))(v32 & v33, v35, v27);
  uint64_t v36 = *(void *)(v29 + 24) + 7;
  *(void *)((v36 + v34) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v36 + v35) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v37 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v38 = v37 + v34;
  unint64_t v39 = v37 + v35;
  uint64_t v40 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  *(void *)unint64_t v38 = v40;
  *(void *)(v38 + 16) = *(void *)(v39 + 16);
  swift_release();
  return a1;
}

uint64_t sub_255AF3880(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v40 = *(void *)(a3 + 16);
  uint64_t v41 = v6;
  uint64_t v10 = *(void *)(v40 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v9) {
    unsigned int v12 = v9;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130) - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v13 + 64);
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v13 + 84);
  }
  if (v12 <= v17) {
    unsigned int v18 = v17;
  }
  else {
    unsigned int v18 = v12;
  }
  if (v8) {
    uint64_t v19 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v7 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v20 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  uint64_t v21 = *(void *)(v10 + 64) + 1;
  uint64_t v22 = v16 + 7;
  unint64_t v23 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v18 < a2)
  {
    unint64_t v24 = v23 + ((v21 + v20 + ((v15 + ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v15)) & ~v20) + 32;
    if ((v24 & 0xFFFFFFF8) != 0) {
      unsigned int v25 = 2;
    }
    else {
      unsigned int v25 = a2 - v18 + 1;
    }
    if (v25 >= 0x10000) {
      unsigned int v26 = 4;
    }
    else {
      unsigned int v26 = 2;
    }
    if (v25 < 0x100) {
      unsigned int v26 = 1;
    }
    if (v25 >= 2) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    switch(v27)
    {
      case 1:
        int v28 = *((unsigned __int8 *)a1 + v24);
        if (!*((unsigned char *)a1 + v24)) {
          break;
        }
        goto LABEL_33;
      case 2:
        int v28 = *(unsigned __int16 *)((char *)a1 + v24);
        if (*(_WORD *)((char *)a1 + v24)) {
          goto LABEL_33;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255AF3C38);
      case 4:
        int v28 = *(_DWORD *)((char *)a1 + v24);
        if (!v28) {
          break;
        }
LABEL_33:
        int v29 = v28 - 1;
        if ((v24 & 0xFFFFFFF8) != 0)
        {
          int v29 = 0;
          int v30 = *a1;
        }
        else
        {
          int v30 = 0;
        }
        int v37 = v18 + (v30 | v29);
        return (v37 + 1);
      default:
        break;
    }
  }
  if (v9 == v18)
  {
    if (v8 < 2) {
      return 0;
    }
    unsigned int v34 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(a1, v8, v41);
    if (v34 >= 2) {
      return v34 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v32 = ((((unint64_t)a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) + v15 + 9) & ~v15;
    if (v11 == v18)
    {
      unint64_t v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
      return v33(v32, v11, v40);
    }
    else
    {
      unint64_t v35 = (v21 + v32 + v20) & ~v20;
      if (v17 >= v12)
      {
        if (v14 < 0x7FFFFFFE)
        {
          unint64_t v39 = *(void *)((v22 + v35) & 0xFFFFFFFFFFFFFFF8);
          if (v39 >= 0xFFFFFFFF) {
            LODWORD(v39) = -1;
          }
          if ((v39 + 1) >= 2) {
            return v39;
          }
          else {
            return 0;
          }
        }
        else
        {
          unint64_t v38 = *(uint64_t (**)(unint64_t))(v13 + 48);
          return v38(v35);
        }
      }
      else
      {
        unint64_t v36 = *(void *)(v35 + v23 + 8 + 16);
        if (v36 >= 0xFFFFFFFF) {
          LODWORD(v36) = -1;
        }
        int v37 = v36 - 1;
        if (v37 < 0) {
          int v37 = -1;
        }
        return (v37 + 1);
      }
    }
  }
}

void sub_255AF3C4C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = sub_255C7D5C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v42 = v7;
  uint64_t v43 = v6;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v41 = *(void *)(a4 + 16);
  uint64_t v10 = *(void *)(v41 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v9) {
    unsigned int v12 = v9;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D130);
  int v14 = 0;
  uint64_t v15 = *(void *)(v13 - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v18 = 2147483646;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v15 + 84);
  }
  if (v12 <= v18) {
    unsigned int v19 = v18;
  }
  else {
    unsigned int v19 = v12;
  }
  if (v8) {
    uint64_t v20 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v21 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  uint64_t v22 = *(void *)(v10 + 64) + 1;
  uint64_t v23 = *(void *)(*(void *)(v13 - 8) + 64) + 7;
  unint64_t v24 = (v23 & 0xFFFFFFFFFFFFFFF8)
      + ((v22 + v21 + ((v17 + ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v17)) & ~v21)
      + 32;
  if (v19 < a3)
  {
    if ((v23 & 0xFFFFFFF8)
       + ((v22 + v21 + ((v17 + ((v20 + 7) & 0xFFFFFFF8) + 9) & ~v17)) & ~v21) == -32)
      unsigned int v25 = a3 - v19 + 1;
    else {
      unsigned int v25 = 2;
    }
    if (v25 >= 0x10000) {
      int v26 = 4;
    }
    else {
      int v26 = 2;
    }
    if (v25 < 0x100) {
      int v26 = 1;
    }
    if (v25 >= 2) {
      int v14 = v26;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v19)
  {
    if ((v23 & 0xFFFFFFF8)
       + ((v22 + v21 + ((v17 + ((v20 + 7) & 0xFFFFFFF8) + 9) & ~v17)) & ~v21) == -32)
      int v27 = a2 - v19;
    else {
      int v27 = 1;
    }
    if ((v23 & 0xFFFFFFF8)
       + ((v22 + v21 + ((v17 + ((v20 + 7) & 0xFFFFFFF8) + 9) & ~v17)) & ~v21) != -32)
    {
      unsigned int v28 = ~v19 + a2;
      bzero(a1, (v23 & 0xFFFFFFFFFFFFFFF8)+ ((v22 + v21 + ((v17 + ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v17)) & ~v21)+ 32);
      *a1 = v28;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v24) = v27;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v24) = v27;
        return;
      case 3:
        goto LABEL_66;
      case 4:
        *(unsigned int *)((char *)a1 + v24) = v27;
        return;
      default:
        return;
    }
  }
  size_t v29 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v31 = (unint64_t)a1;
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v24) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 2:
      *(_WORD *)((char *)a1 + v24) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 3:
LABEL_66:
      __break(1u);
      JUMPOUT(0x255AF4084);
    case 4:
      *(unsigned int *)((char *)a1 + v24) = 0;
      goto LABEL_42;
    default:
LABEL_42:
      if (!a2) {
        return;
      }
LABEL_43:
      if (v9 == v19)
      {
        uint64_t v32 = a2 + 1;
        uint64_t v33 = v43;
        unsigned int v34 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
        uint64_t v35 = v8;
LABEL_46:
        v34(v31, v32, v35, v33);
        return;
      }
      unint64_t v31 = ((((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) + v17 + 9) & ~v17;
      if (v11 == v19)
      {
        unsigned int v34 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
        uint64_t v32 = a2;
        uint64_t v35 = v11;
        uint64_t v33 = v41;
        goto LABEL_46;
      }
      uint64_t v30 = ~v21;
      unint64_t v36 = (_DWORD *)((v22 + v31 + v21) & ~v21);
      if (v18 >= v12)
      {
        if (v18 >= a2)
        {
          if (v16 < 0x7FFFFFFE)
          {
            uint64_t v40 = (void *)(((unint64_t)v36 + v23) & 0xFFFFFFFFFFFFFFF8);
            if (a2 > 0x7FFFFFFE)
            {
              *uint64_t v40 = 0;
              *(_DWORD *)uint64_t v40 = a2 - 0x7FFFFFFF;
            }
            else
            {
              *uint64_t v40 = a2;
            }
          }
          else
          {
            unint64_t v38 = *(void (**)(unint64_t, void))(v15 + 56);
            unint64_t v39 = (v22 + v31 + v21) & v30;
            v38(v39, a2);
          }
        }
        else if ((v23 & 0xFFFFFFF8) != 0xFFFFFFF8)
        {
          unsigned int v37 = ~v18 + a2;
          bzero((void *)((v22 + v31 + v21) & v30), v29);
          *unint64_t v36 = v37;
        }
      }
      else
      {
        *(void *)((char *)v36 + v29 + 16) = a2;
      }
      return;
  }
}

void sub_255AF40AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for NowPlayingArtworkBackgroundTreatment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255AF41DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtworkBackgroundTreatment()
{
  return &type metadata for NowPlayingArtworkBackgroundTreatment;
}

uint64_t sub_255AF4214()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AF4808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  unint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for NowPlayingArtworkBackground() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_255AEFC3C(a1, v8, v5, v6, a2);
}

uint64_t sub_255AF48A4@<X0>(uint64_t a1@<X8>)
{
  return sub_255AF08D8(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_255AF48B0@<X0>(uint64_t a1@<X8>)
{
  return sub_255AF1078(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_255AF48BC()
{
  unint64_t result = qword_269F237D0;
  if (!qword_269F237D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F237D0);
  }
  return result;
}

uint64_t sub_255AF4914(uint64_t a1)
{
  type metadata accessor for NowPlayingArtworkBackground();

  return sub_255AF2620(a1);
}

char *keypath_get_selector_presentationSize()
{
  return sel_presentationSize;
}

id sub_255AF49B8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_presentationSize);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_255AF4A10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for NowPlayingArtworkBackground() + 40);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v6(a1, v5, v3);
}

uint64_t sub_255AF4A90@<X0>(uint64_t a1@<X8>)
{
  return sub_255AF1F30(*(void *)(v1 + 40), a1);
}

unint64_t sub_255AF4A9C()
{
  unint64_t result = qword_269F23800;
  if (!qword_269F23800)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F237F8);
    sub_255AF4B10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23800);
  }
  return result;
}

unint64_t sub_255AF4B10()
{
  unint64_t result = qword_269F23808;
  if (!qword_269F23808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23810);
    sub_255A09998(&qword_269F23818, &qword_269F23820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23808);
  }
  return result;
}

uint64_t sub_255AF4BB0@<X0>(unsigned char *a1@<X8>)
{
  sub_255A27FFC();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AF4C00()
{
  return sub_255C7E8D8();
}

uint64_t sub_255AF4C4C()
{
  return swift_deallocObject();
}

void sub_255AF4C84(char *a1)
{
  sub_255AF2264(a1, *(void *)(v1 + 16));
}

uint64_t sub_255AF4C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255AF4CF4@<X0>(uint64_t a1@<X8>)
{
  return sub_255AF0CC0(*(void *)(v1 + 24), a1);
}

uint64_t sub_255AF4D00()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255AF4D38@<X0>(uint64_t *a1@<X8>)
{
  return sub_255B9EE30(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_255AF4D40()
{
  sub_255A76144(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_255AF4D64()
{
  sub_255A76220(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t PresentedViewState.isPresented.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255AF4E18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255AF4E48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255AF4E78()
{
  return PresentedViewState.isPresented.setter();
}

uint64_t sub_255AF4EA0()
{
  return PresentedViewState.isPresented.setter();
}

uint64_t sub_255AF4EC8()
{
  return 8;
}

void *sub_255AF4ED4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t PresentedViewState.isPresented.setter()
{
  return sub_255C7DAD8();
}

void (*PresentedViewState.isPresented.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_255C7DAB8();
  return sub_255AF5034;
}

void sub_255AF5034(void *a1)
{
  unsigned __int8 v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t PresentedViewState.$isPresented.getter()
{
  return swift_endAccess();
}

uint64_t sub_255AF5100(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F090);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return PresentedViewState.$isPresented.setter((uint64_t)v4);
}

uint64_t PresentedViewState.$isPresented.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F090);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F098);
  sub_255C7DAA8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*PresentedViewState.$isPresented.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F090);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  _OWORD v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  PresentedViewState.$isPresented.getter();
  return sub_255AF53C8;
}

void sub_255AF53C8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    PresentedViewState.$isPresented.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PresentedViewState.$isPresented.setter(*(void *)(*(void *)a1 + 32));
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t PresentedViewState.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v4 = sub_255C80E88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PresentedViewState.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PresentedViewState.init()();
  return v0;
}

uint64_t *PresentedViewState.init()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F098);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v1;
  uint64_t v7 = (uint64_t)v0 + qword_26B29D978;
  uint64_t v8 = *(void *)(v6 + 80);
  v10[15] = 0;
  sub_255C7DA88();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v3 + 32))(v7, v5, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))((uint64_t)v0 + *(void *)(*v0 + 96), 1, 1, v8);
  return v0;
}

uint64_t PresentedViewState.present(_:animated:)(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = sub_255C80E88();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v13 - v8, a1, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v5);
  uint64_t v11 = v2 + *(void *)(*(void *)v2 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v11, v9, v6);
  swift_endAccess();
  if ((a2 & 1) == 0) {
    return PresentedViewState.isPresented.setter();
  }
  sub_255C802A8();
  sub_255C7E1E8();
  return swift_release();
}

uint64_t sub_255AF5894()
{
  return PresentedViewState.isPresented.setter();
}

uint64_t PresentedViewState.deinit()
{
  uint64_t v1 = v0 + qword_26B29D978;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F098);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v4 = sub_255C80E88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t PresentedViewState.__deallocating_deinit()
{
  PresentedViewState.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_255AF59F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t View.viewPresenting<A, B>(_:modifier:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  v15[0] = a5;
  v15[1] = a6;
  uint64_t v10 = sub_255C7E458();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v15 - v12;
  MEMORY[0x25A295390](a1, a2, a3, a4);
  type metadata accessor for PresentedViewState();
  void v15[2] = a4;
  void v15[3] = v15[0];
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_255C7F828();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t type metadata accessor for PresentedViewState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255AF5BEC()
{
  return 8;
}

uint64_t sub_255AF5BF8()
{
  return PresentedViewState.$isPresented.getter();
}

uint64_t sub_255AF5C20()
{
  return 8;
}

void sub_255AF5C2C()
{
  sub_255AF5D28();
  if (v0 <= 0x3F)
  {
    sub_255C80E88();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t method lookup function for PresentedViewState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PresentedViewState);
}

uint64_t dispatch thunk of PresentedViewState.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_255AF5D28()
{
  if (!qword_26B29F000)
  {
    unint64_t v0 = sub_255C7DAE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29F000);
    }
  }
}

uint64_t sub_255AF5D80()
{
  return swift_getWitnessTable();
}

uint64_t sub_255AF5E68()
{
  sub_255A79EFC();

  return sub_255C7E8C8();
}

BOOL static VideoGravity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t VideoGravity.hash(into:)()
{
  return sub_255C81588();
}

uint64_t VideoGravity.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t MCUINamespace<A>.videoGravity(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = (char *)MEMORY[0x270FA5388](a1);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *v5;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, v3);
  swift_getKeyPath();
  v10[15] = v8;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_255AF6060@<X0>(unsigned char *a1@<X8>)
{
  sub_255A79EFC();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255AF60B0()
{
  return sub_255C7E8D8();
}

uint64_t sub_255AF60FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255AF626C();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t View.videoGravity(_:)(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MCUINamespace();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-v6];
  LOBYTE(a1) = *a1;
  View.mcui.getter(a2, (uint64_t)&v9[-v6]);
  char v10 = (char)a1;
  MCUINamespace<A>.videoGravity(_:)((uint64_t)&v10, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_255AF626C()
{
  unint64_t result = qword_269F23828;
  if (!qword_269F23828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23828);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VideoGravity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255AF638CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoGravity()
{
  return &type metadata for VideoGravity;
}

uint64_t sub_255AF63C4()
{
  return swift_getWitnessTable();
}

unint64_t sub_255AF6434()
{
  unint64_t result = qword_26B29D0E0;
  if (!qword_26B29D0E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D0E0);
  }
  return result;
}

ValueMetadata *_s10GravityKeyVMa()
{
  return &_s10GravityKeyVN;
}

uint64_t sub_255AF64A0(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  unsigned int v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      char v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unsigned int v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unsigned int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_255C80328();
}

uint64_t sub_255AF6664(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E69646E61707865;
  unint64_t v3 = 0xE900000000000067;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E69646E61707865;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000020;
      unint64_t v3 = 0x8000000255C9A770;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6465646E61707865;
      break;
    case 3:
      unint64_t v3 = 0x8000000255C9A7A0;
      unint64_t v5 = 0xD000000000000017;
      break;
    case 4:
      unint64_t v5 = 0x697370616C6C6F63;
      unint64_t v3 = 0xEA0000000000676ELL;
      break;
    case 5:
      unint64_t v5 = 0x657370616C6C6F63;
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE900000000000067;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x8000000255C9A770;
      if (v5 == 0xD000000000000020) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6465646E61707865) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0x8000000255C9A7A0;
      if (v5 != 0xD000000000000017) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x697370616C6C6F63;
      unint64_t v6 = 0xEA0000000000676ELL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x657370616C6C6F63) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_255C81428();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_255AF68A0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6573756170;
    }
    else {
      uint64_t v3 = 1886352499;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6573756170;
      }
      else {
        uint64_t v6 = 1886352499;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 2036427888;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 2036427888)
  {
LABEL_21:
    char v8 = sub_255C81428();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_255AF6994(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x756F72676B636162;
  }
  else {
    uint64_t v3 = 0x746C7561666564;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEA0000000000646ELL;
  }
  if (a2) {
    uint64_t v5 = 0x756F72676B636162;
  }
  else {
    uint64_t v5 = 0x746C7561666564;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000646ELL;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_255C81428();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_255AF6A40(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x676E696B63617274;
    }
    else {
      uint64_t v3 = 0x6172656C65636564;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xEC000000676E6974;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x676E696B63617274;
      }
      else {
        uint64_t v6 = 0x6172656C65636564;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xEC000000676E6974;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701602409;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701602409)
  {
LABEL_21:
    char v8 = sub_255C81428();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_255AF6B5C(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_255C811B8();
    for (unint64_t i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      uint64_t v9 = *(i - 1);
      uint64_t v10 = *i;
      v11[0] = *(i - 2);
      v11[1] = v9;
      uint64_t v11[2] = v10;
      swift_bridgeObjectRetain();
      a1(&v12, v11);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      sub_255C81198();
      sub_255C811C8();
      sub_255C811D8();
      sub_255C811A8();
      if (!--v5) {
        return v13;
      }
    }
    return swift_release();
  }
  return result;
}

void *sub_255AF6C68(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v15)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  uint64_t v15 = (void *(*)(uint64_t *__return_ptr, uint64_t *))result;
  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v5) {
    return (void *)v7;
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t result = (void *)sub_255B16D0C(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v18;
    if (a4 <= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a4;
    }
    uint64_t v11 = a3;
    while (a4 != v11)
    {
      unsigned int v16 = v11;
      uint64_t result = v15(&v17, &v16);
      if (v6)
      {
        swift_release();
        return (void *)v7;
      }
      uint64_t v6 = 0;
      uint64_t v12 = v17;
      uint64_t v18 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        uint64_t result = (void *)sub_255B16D0C(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v18;
      }
      *(void *)(v7 + 16) = v14 + 1;
      *(void *)(v7 + 8 * v14 + 32) = v12;
      if (a4 < a3) {
        goto LABEL_19;
      }
      if (v10 == v11) {
        goto LABEL_20;
      }
      if (a4 == ++v11) {
        return (void *)v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_255AF6DBC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  if (!a2)
  {
    uint64_t v12 = *(void *)(a4 + 16);
    uint64_t v6 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    uint64_t v12 = *(void *)(a4 + 16);
    uint64_t v6 = 0;
    goto LABEL_14;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v6)
  {
LABEL_16:
    uint64_t v12 = 0;
    goto LABEL_14;
  }
  char v8 = a2;
  uint64_t v9 = 0;
  uint64_t v10 = (uint64_t *)(a4 + 24 * v6 + 24);
  uint64_t v11 = a3 - 1;
  while (1)
  {
    uint64_t v12 = v6 + v9 - 1;
    uint64_t v13 = *(v10 - 1);
    uint64_t v14 = *v10;
    *char v8 = *(v10 - 2);
    v8[1] = v13;
    void v8[2] = v14;
    if (!(v11 + v9)) {
      break;
    }
    if (v6 + v9 == 1) {
      goto LABEL_11;
    }
    uint64_t v12 = *(void *)(a4 + 16);
    swift_bridgeObjectRetain();
    --v9;
    v10 -= 3;
    v8 += 3;
    if (v6 + v9 > v12)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v6 = a3;
LABEL_11:
  swift_bridgeObjectRetain();
LABEL_14:
  *a1 = a4;
  a1[1] = v12;
  return v6;
}

uint64_t sub_255AF6EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v18[0] = a6;
  v18[1] = a7;
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_255C7DE68();
  MEMORY[0x270FA5388](v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  sub_255C7DE78();
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = v18[0];
  v18[8] = a1;
  v18[9] = a2;
  swift_getWitnessTable();
  return sub_255C7E1C8();
}

uint64_t sub_255AF7054@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_255C7E698();
  *a1 = v3;
  return result;
}

uint64_t sub_255AF7080()
{
  return sub_255C7E6A8();
}

uint64_t sub_255AF70A8()
{
  return sub_255C7E718();
}

uint64_t sub_255AF70CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255B17CB8(a1, a2, a3, a4, MEMORY[0x263F18DD8], MEMORY[0x263F19340]);
}

id sub_255AF70F8()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA8B8]), sel_init);
  id result = objc_msgSend(v0, sel_setStyle_, 1);
  qword_269F33098 = (uint64_t)v0;
  return result;
}

id sub_255AF7148()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA8B8]), sel_init);
  id result = objc_msgSend(v0, sel_setStyle_, 2);
  qword_269F330A0 = (uint64_t)v0;
  return result;
}

uint64_t sub_255AF7198()
{
  uint64_t v0 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_255C805E8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t result = sub_255C80648();
  qword_269F330A8 = result;
  unk_269F330B0 = v4;
  return result;
}

uint64_t sub_255AF72D8()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  return v1;
}

uint64_t sub_255AF7388@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_255B21264;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_255AF7460(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  swift_retain();
  sub_255C7D708();
  swift_release();
  return swift_release();
}

uint64_t sub_255AF757C()
{
  uint64_t v1 = 0x2D2D3A2D2DLL;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(*(void *)(v2 + 72) + 80);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  if ((*(unsigned char *)(v3 + 32) & 1) == 0)
  {
    double v4 = *(double *)(v3 + 24);
    swift_getKeyPath();
    sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
    sub_255C7D718();
    swift_release();
    if ((*(unsigned char *)(v0 + 57) & 1) == 0)
    {
      if (qword_269F1FF20 != -1) {
        swift_once();
      }
      uint64_t v5 = (void *)qword_269F330A0;
      uint64_t v6 = *(void *)(v2 + 72);
      swift_getKeyPath();
      sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
      sub_255C7D718();
      swift_release();
      id v7 = objc_msgSend(v5, sel_stringFromSeconds_, v4 - (double)*(uint64_t *)(v6 + 64));
      uint64_t v1 = sub_255C80628();
    }
  }
  return v1;
}

void sub_255AF77B0(uint64_t a1)
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  if (*(void *)(v1 + 40) != a1)
  {
    UIAccessibilityNotifications v3 = *MEMORY[0x263F83188];
    swift_getKeyPath();
    sub_255C7D718();
    swift_release();
    sub_255AF78CC(*(void *)(v1 + 40));
    double v4 = (void *)sub_255C805F8();
    swift_bridgeObjectRelease();
    UIAccessibilityPostNotification(v3, v4);
  }
}

uint64_t sub_255AF78CC(uint64_t a1)
{
  uint64_t v2 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_255C805E8();
  MEMORY[0x270FA5388](v3 - 8);
  switch(a1)
  {
    case 0:
      sub_255C80588();
      if (qword_26B29F398 != -1) {
        goto LABEL_12;
      }
      goto LABEL_10;
    case 1:
      sub_255C80588();
      if (qword_26B29F398 == -1) {
        goto LABEL_10;
      }
      goto LABEL_12;
    case 2:
      sub_255C80588();
      if (qword_26B29F398 == -1) {
        goto LABEL_10;
      }
      goto LABEL_12;
    case 3:
      sub_255C80588();
      if (qword_26B29F398 == -1) {
        goto LABEL_10;
      }
LABEL_12:
      swift_once();
LABEL_10:
      id v5 = (id)qword_26B2AA660;
      sub_255C7D6B8();
      uint64_t result = sub_255C80648();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_255AF7BE0()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + 40);
}

uint64_t sub_255AF7C80@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + 40);
  return result;
}

uint64_t sub_255AF7D28()
{
  return swift_release();
}

uint64_t sub_255AF7DF4(char *a1, double a2)
{
  uint64_t v3 = v2;
  char v4 = *a1;
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v5 + 72);
  double v7 = *(double *)(v6 + 96);
  *(double *)(v6 + 96) = a2;
  sub_255B01C88(v7);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_255AFD45C(v8);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v11 = v3;
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  uint64_t v9 = *(void (**)(uint64_t *))(v3 + 24);
  uint64_t v11 = *(void *)(*(void *)(v5 + 72) + 96);
  char v12 = v4;
  swift_retain();
  v9(&v11);
  return swift_release();
}

void sub_255AF7F70(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24090);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F24098);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F010);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F240A8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(void *)(v2 + 48) = MEMORY[0x263F8EE88];
  swift_bridgeObjectRelease();
  uint64_t v45 = v2 + 48;
  if (a1)
  {
    uint64_t v39 = v7;
    uint64_t v46 = *(void *)(a1 + 16);
    uint64_t v44 = a1;
    sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
    uint64_t v40 = v6;
    swift_retain();
    id v47 = (id)sub_255C80C88();
    uint64_t v17 = sub_255C80C78();
    uint64_t v38 = v8;
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)(v17 - 8);
    unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v37 = v19 + 56;
    v36(v12, 1, 1, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F23980);
    sub_255A09998(&qword_269F240D8, &qword_269F23980);
    uint64_t v35 = sub_255A8654C((unint64_t *)&qword_26B29F110, (unint64_t *)&qword_26B29FC80);
    sub_255C7DB68();
    sub_255A095A4((uint64_t)v12, (uint64_t *)&unk_26B29F010);

    swift_release();
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = v20;
    sub_255A09998(&qword_269F240E0, &qword_269F240A8);
    sub_255C7DB98();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_beginAccess();
    sub_255C7D9A8();
    swift_endAccess();
    swift_release();
    uint64_t v46 = *(void *)(v44 + 24);
    swift_retain();
    id v47 = (id)sub_255C80C88();
    v36(v12, 1, 1, v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2984C8);
    sub_255A09998((unint64_t *)&unk_26B2984B8, &qword_26B2984C8);
    int v23 = v43;
    a1 = v44;
    uint64_t v6 = v40;
    sub_255C7DB68();
    sub_255A095A4((uint64_t)v12, (uint64_t *)&unk_26B29F010);

    swift_release();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v25;
    *(void *)(v26 + 24) = v24;
    sub_255A09998(&qword_269F240D0, (uint64_t *)&unk_269F24098);
    uint64_t v27 = v39;
    sub_255C7DB98();
    swift_release();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v27);
    swift_beginAccess();
    sub_255C7D9A8();
    swift_endAccess();
    swift_release();
  }
  id v28 = objc_msgSend(self, sel_sharedApplication);
  unsigned int v29 = objc_msgSend(v28, sel_launchedToTest);

  if (a1)
  {
    if (v29)
    {
      uint64_t v46 = *(void *)(a1 + 32);
      sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
      swift_retain();
      id v47 = (id)sub_255C80C88();
      uint64_t v30 = sub_255C80C78();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 1, 1, v30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D360);
      sub_255A09998((unint64_t *)&unk_269F240B0, &qword_26B29D360);
      sub_255A8654C((unint64_t *)&qword_26B29F110, (unint64_t *)&qword_26B29FC80);
      sub_255C7DB68();
      sub_255A095A4((uint64_t)v12, (uint64_t *)&unk_26B29F010);

      swift_release();
      uint64_t v31 = swift_allocObject();
      swift_weakInit();
      uint64_t v32 = swift_allocObject();
      swift_weakInit();
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      *(void *)(v33 + 24) = v31;
      sub_255A09998((unint64_t *)&unk_269F240C0, &qword_269F24090);
      uint64_t v34 = v42;
      sub_255C7DB98();
      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v34);
      swift_beginAccess();
      sub_255C7D9A8();
      swift_endAccess();
      swift_release();
    }
  }
}

uint64_t sub_255AF883C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7D898();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  swift_retain_n();
  char v12 = sub_255C7D878();
  os_log_type_t v13 = sub_255C80C08();
  if (os_log_type_enabled(v12, v13))
  {
    unint64_t v26[2] = a3 + 16;
    uint64_t v14 = swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    v28[0] = v26[0];
    *(_DWORD *)uint64_t v14 = 134218242;
    uint64_t v27 = v10;
    sub_255C80F18();
    *(_WORD *)(v14 + 12) = 2082;
    v26[1] = a2;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v27 = Strong;
      uint64_t v16 = sub_255C80658();
      unint64_t v18 = v17;
      swift_release();
    }
    else
    {
      unint64_t v18 = 0xE300000000000000;
      uint64_t v16 = 7104878;
    }
    uint64_t v27 = sub_255A7BEC4(v16, v18, v28);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v12, v13, "ScrubberViewModel seeking to time %f requested by proxy %{public}s", (uint8_t *)v14, 0x16u);
    uint64_t v19 = v26[0];
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v19, -1, -1);
    MEMORY[0x25A297C00](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  uint64_t v20 = swift_weakLoadStrong();
  if (v20)
  {
    uint64_t v21 = *(void *)(*(void *)(v20 + 16) + 72);
    double v22 = *(double *)(v21 + 96);
    *(void *)(v21 + 96) = v10;
    sub_255B01C88(v22);
    uint64_t v23 = *(void *)(v21 + 80);
    swift_getKeyPath();
    uint64_t v27 = v23;
    sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
    sub_255C7D718();
    swift_release();
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_255AFD45C(v24);
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_255AF8C48();
    return swift_release();
  }
  return result;
}

uint64_t sub_255AF8C48()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D708();
  swift_release();
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_255AFD45C(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255AF8DB8(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_255C7D898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = *a1;
  uint64_t v10 = a3 + 16;
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  swift_retain_n();
  char v12 = sub_255C7D878();
  os_log_type_t v13 = sub_255C80C08();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v23 = v10;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v26[0] = v22;
    *(_DWORD *)uint64_t v14 = 134218242;
    double v25 = v9;
    sub_255C80F18();
    *(_WORD *)(v14 + 12) = 2082;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v24 = Strong;
      uint64_t v16 = sub_255C80658();
      unint64_t v18 = v17;
      swift_release();
    }
    else
    {
      unint64_t v18 = 0xE300000000000000;
      uint64_t v16 = 7104878;
    }
    uint64_t v24 = sub_255A7BEC4(v16, v18, v26);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v12, v13, "ScrubberViewModel notifying jumped by %f requested by proxy %{public}s", (uint8_t *)v14, 0x16u);
    uint64_t v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v19, -1, -1);
    MEMORY[0x25A297C00](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_255AFE68C(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_255AF90F4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_255C7D898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v9) = *a1;
  uint64_t v10 = a3 + 16;
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  swift_retain_n();
  char v12 = sub_255C7D878();
  os_log_type_t v13 = sub_255C80C08();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v28 = v10;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v32[0] = v27;
    *(_DWORD *)uint64_t v14 = 136315394;
    unint64_t v15 = 0xE800000000000000;
    uint64_t v16 = 0x676E696B63617274;
    if (v9 != 1)
    {
      uint64_t v16 = 0x6172656C65636564;
      unint64_t v15 = 0xEC000000676E6974;
    }
    int v29 = v9;
    if (v9) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 1701602409;
    }
    if (v9) {
      unint64_t v18 = v15;
    }
    else {
      unint64_t v18 = 0xE400000000000000;
    }
    uint64_t v30 = sub_255A7BEC4(v17, v18, v32);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v31 = Strong;
      uint64_t v20 = sub_255C80658();
      unint64_t v9 = v21;
      swift_release();
    }
    else
    {
      unint64_t v9 = 0xE300000000000000;
      uint64_t v20 = 7104878;
    }
    uint64_t v31 = sub_255A7BEC4(v20, v9, v32);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v12, v13, "ScrubberViewModel scrubState changed to %s requested by proxy %{public}s", (uint8_t *)v14, 0x16u);
    uint64_t v22 = v27;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v22, -1, -1);
    MEMORY[0x25A297C00](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v9) = v29;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v24 = *(void *)(*(void *)(result + 16) + 72);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v26 - 2) = v24;
    *((unsigned char *)&v26 - 8) = v9;
    uint64_t v31 = v24;
    sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
    sub_255C7D708();
    swift_release();
    sub_255AFBE70();
    return swift_release();
  }
  return result;
}

uint64_t ScrubState.rawValue.getter()
{
  uint64_t v1 = 0x676E696B63617274;
  if (*v0 != 1) {
    uint64_t v1 = 0x6172656C65636564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701602409;
  }
}

uint64_t sub_255AF95C4()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_255AF9664@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 56);
  return result;
}

uint64_t sub_255AF970C()
{
  return swift_release();
}

uint64_t sub_255AF97DC()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_255AF987C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 57);
  return result;
}

uint64_t sub_255AF9924()
{
  return swift_release();
}

uint64_t sub_255AF99F4()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_255AF9A94@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 58);
  return result;
}

uint64_t sub_255AF9B3C()
{
  return swift_release();
}

uint64_t sub_255AF9C0C(double *a1)
{
  double v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v40 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v39 = &v35[-v8];
  MEMORY[0x270FA5388](v7);
  uint64_t v38 = &v35[-v9];
  int v10 = *(unsigned __int8 *)a1;
  int v11 = *((unsigned __int8 *)a1 + 2);
  int v43 = *((unsigned __int8 *)a1 + 1);
  int v44 = v11;
  double v42 = a1[1];
  int v41 = *((unsigned __int8 *)a1 + 16);
  swift_getKeyPath();
  uint64_t v12 = *(void *)&v2 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel___observationRegistrar;
  double v46 = v2;
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  if (v10 == *(unsigned __int8 *)(*(void *)&v2 + 56))
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(double *)&v35[-16] = v2;
    int v36 = v10 ^ 1;
    v35[-8] = v10 ^ 1;
    double v46 = v2;
    uint64_t v37 = v12;
    sub_255C7D708();
    swift_release();
    if (qword_269F1FFD8 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
    uint64_t v16 = v38;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v45 + 16))(v38, v15, v4);
    uint64_t v17 = sub_255C7D878();
    os_log_type_t v18 = sub_255C80C08();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 67109120;
      LODWORD(v46) = v36;
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v17, v18, "ScrubberViewModel.isInteractionEnabled changed to %{BOOL}d", v19, 8u);
      MEMORY[0x25A297C00](v19, -1, -1);
    }

    uint64_t v13 = v45;
    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v16, v4);
  }
  else
  {
    uint64_t v13 = v45;
  }
  swift_getKeyPath();
  double v46 = v2;
  sub_255C7D718();
  swift_release();
  char v20 = v43;
  if (v43 != *(unsigned __int8 *)(*(void *)&v2 + 57))
  {
    uint64_t v21 = swift_getKeyPath();
    MEMORY[0x270FA5388](v21);
    *(double *)&v35[-16] = v2;
    v35[-8] = v20;
    double v46 = v2;
    sub_255C7D708();
    swift_release();
    if (qword_269F1FFD8 != -1) {
      swift_once();
    }
    uint64_t v22 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v39, v22, v4);
    uint64_t v23 = sub_255C7D878();
    os_log_type_t v24 = sub_255C80C08();
    if (os_log_type_enabled(v23, v24))
    {
      double v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)double v25 = 67109120;
      LODWORD(v46) = v43;
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v23, v24, "ScrubberViewModel.showPlaceholderLabels changed to %{BOOL}d", v25, 8u);
      MEMORY[0x25A297C00](v25, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v39, v4);
  }
  swift_getKeyPath();
  double v46 = v2;
  sub_255C7D718();
  swift_release();
  char v26 = v44;
  if (v44 != *(unsigned __int8 *)(*(void *)&v2 + 58))
  {
    uint64_t v27 = swift_getKeyPath();
    MEMORY[0x270FA5388](v27);
    *(double *)&v35[-16] = v2;
    v35[-8] = v26;
    double v46 = v2;
    sub_255C7D708();
    swift_release();
    if (qword_269F1FFD8 != -1) {
      swift_once();
    }
    uint64_t v28 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v40, v28, v4);
    int v29 = sub_255C7D878();
    os_log_type_t v30 = sub_255C80C08();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 67109120;
      LODWORD(v46) = v44;
      sub_255C80F18();
      _os_log_impl(&dword_255A00000, v29, v30, "ScrubberViewModel.showSpinner changed to %{BOOL}d", v31, 8u);
      MEMORY[0x25A297C00](v31, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v40, v4);
  }
  swift_getKeyPath();
  double v46 = v2;
  sub_255C7D718();
  uint64_t result = swift_release();
  if (*(unsigned char *)(*(void *)&v2 + 72))
  {
    char v33 = v41;
    if (v41) {
      return result;
    }
LABEL_27:
    double v46 = v42;
    char v47 = v33;
    return sub_255C7D9F8();
  }
  char v33 = v41;
  if (*(double *)(*(void *)&v2 + 64) == v42) {
    char v34 = v41;
  }
  else {
    char v34 = 1;
  }
  if (v34) {
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_255AFA3A0()
{
  uint64_t v1 = sub_255C7D898();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v1, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  swift_retain_n();
  uint64_t v6 = sub_255C7D878();
  os_log_type_t v7 = sub_255C80C08();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = v15;
    *(_DWORD *)uint64_t v8 = 136446210;
    v14[1] = v8 + 4;
    swift_getKeyPath();
    uint64_t v16 = v0;
    sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
    sub_255C7D718();
    swift_release();
    char v9 = *(unsigned char *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 64);
    char v17 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF58);
    uint64_t v10 = sub_255C80658();
    uint64_t v16 = sub_255A7BEC4(v10, v11, &v18);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v6, v7, "ScrubberViewModel.availableDuration changed to %{public}s", v8, 0xCu);
    uint64_t v12 = v15;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v12, -1, -1);
    MEMORY[0x25A297C00](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_255AFA690()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + 64);
}

uint64_t sub_255AFA734@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 72);
  *(void *)a2 = *(void *)(v3 + 64);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_255AFA7E4()
{
  return swift_release();
}

uint64_t sub_255AFA8B8()
{
  return swift_retain();
}

uint64_t sub_255AFA95C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  *a2 = *(void *)(v3 + 80);
  return swift_retain();
}

uint64_t sub_255AFAA08()
{
  return swift_release();
}

uint64_t sub_255AFAAE8()
{
  uint64_t v1 = v0;
  uint64_t v23 = sub_255C80E58();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24148);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v4);
  os_log_type_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F24150);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrubberInteractionViewModel(0);
  uint64_t v12 = swift_allocObject();
  sub_255AFFE44();
  *(void *)(v1 + 16) = v12;
  *(void *)(v1 + 24) = CGSizeMake;
  *(void *)(v1 + 32) = 0;
  uint64_t v13 = MEMORY[0x263F8EE88];
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = v13;
  *(_WORD *)(v1 + 56) = 0;
  *(unsigned char *)(v1 + 58) = 0;
  *(void *)(v1 + 64) = 0;
  *(unsigned char *)(v1 + 72) = 1;
  *(void *)(v1 + 80) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2984A8);
  swift_allocObject();
  uint64_t v14 = sub_255C7DA08();
  *(void *)(v1 + 88) = v14;
  uint64_t v22 = v1 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel___observationRegistrar;
  sub_255C7D748();
  uint64_t v31 = v14;
  swift_retain();
  sub_255C80E48();
  id v15 = objc_msgSend(self, sel_mainRunLoop);
  id v30 = v15;
  sub_255A43740(0, (unint64_t *)&unk_269F24160);
  sub_255A09998((unint64_t *)&qword_26B298498, (uint64_t *)&unk_26B2984A8);
  sub_255A8654C(&qword_269F24170, (unint64_t *)&unk_269F24160);
  sub_255C7DB78();

  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v23);
  swift_release();
  sub_255A09998(&qword_269F24178, &qword_269F24148);
  sub_255B1E6CC();
  uint64_t v16 = v24;
  sub_255C7DB88();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v16);
  swift_allocObject();
  swift_weakInit();
  sub_255A09998((unint64_t *)&unk_269F24180, (uint64_t *)&unk_269F24150);
  uint64_t v17 = v26;
  uint64_t v18 = sub_255C7DB98();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v17);
  swift_getKeyPath();
  uint64_t v28 = v1;
  uint64_t v29 = v18;
  uint64_t v31 = v1;
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D708();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255AFAFD8(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  int v2 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_255AFB04C(v1, v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_255AFB04C(uint64_t a1, int a2)
{
  int v12 = a2;
  uint64_t v13 = sub_255C7F018();
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  uint64_t v14 = v2;
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v2 + 72) == 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(void *)&v11[-32] = v2;
    *(void *)&v11[-24] = 0;
    v11[-16] = 0;
    uint64_t v14 = v2;
    sub_255C7D708();
    swift_release();
  }
  if (qword_269F1FFD0 != -1) {
    swift_once();
  }
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = swift_weakInit();
  MEMORY[0x270FA5388](v9);
  *(void *)&v11[-32] = a1;
  v11[-24] = v12 & 1;
  *(void *)&v11[-16] = v8;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_255C7EFF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F229E8);
  sub_255C7E1D8();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_255AFB35C@<X0>(char a1@<W1>, char *a2@<X8>)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_getKeyPath();
        sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
        sub_255C7D718();
        swift_release();
        swift_release();
      }
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
      sub_255C7D708();
      swift_release();
      goto LABEL_9;
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v4 = swift_getKeyPath();
      MEMORY[0x270FA5388](v4);
      sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
      sub_255C7D708();
      swift_release();
LABEL_9:
      uint64_t result = swift_release();
      char v5 = 0;
      goto LABEL_10;
    }
  }
  char v5 = 1;
LABEL_10:
  *a2 = v5;
  return result;
}

uint64_t sub_255AFB65C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(*(void *)(*(void *)(result + 16) + 72) + 80);
    swift_getKeyPath();
    sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
    sub_255C7D718();
    swift_release();
    if (*(unsigned char *)(v2 + 32)) {
      return swift_release();
    }
    double v3 = *(double *)(v2 + 24);
    swift_getKeyPath();
    sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
    sub_255C7D718();
    swift_release();
    if ((*(unsigned char *)(v1 + 72) & 1) != 0 || v3 > *(double *)(v1 + 64))
    {
      return swift_release();
    }
    else
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      sub_255C7D708();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_255AFB860()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI17ScrubberViewModel___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255AFB928()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v1 + 80);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v2 + 32)) {
    return 0x2D2D3A2D2DLL;
  }
  if (qword_269F1FF18 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_269F33098;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  id v5 = objc_msgSend(v4, sel_stringFromSeconds_, (double)*(uint64_t *)(v1 + 64));
  uint64_t v3 = sub_255C80628();

  return v3;
}

uint64_t sub_255AFBAC4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F20);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = &v16[-v8];
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = &v16[-v10];
  uint64_t v12 = *(void *)(v1 + 16);
  sub_255A09540(a1, (uint64_t)&v16[-v10], &qword_269F23F20);
  uint64_t v13 = *(void *)(v12 + 72);
  sub_255A09540((uint64_t)v11, (uint64_t)v9, &qword_269F23F20);
  uint64_t v14 = v13 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead_latestDate;
  swift_beginAccess();
  sub_255A09540(v14, (uint64_t)v6, &qword_269F23F20);
  swift_beginAccess();
  sub_255B1E9F4((uint64_t)v9, v14);
  swift_endAccess();
  sub_255B02324((uint64_t)v6);
  sub_255A095A4((uint64_t)v9, &qword_269F23F20);
  sub_255A095A4((uint64_t)v6, &qword_269F23F20);
  sub_255A095A4((uint64_t)v11, &qword_269F23F20);
  return sub_255A095A4(a1, &qword_269F23F20);
}

uint64_t sub_255AFBC48()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + 16);
}

uint64_t sub_255AFBCEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 24);
  *(void *)a2 = *(void *)(v3 + 16);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_255AFBD9C()
{
  return swift_release();
}

void sub_255AFBE70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7F018();
  uint64_t v20 = *(void *)(v2 - 8);
  uint64_t v21 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v19 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 72);
  swift_getKeyPath();
  aBlock[0] = v4;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v4 + 57) && *(unsigned char *)(v4 + 57) == 1)
  {
    swift_bridgeObjectRelease();
    double v5 = 1.05;
  }
  else
  {
    char v6 = sub_255C81428();
    swift_bridgeObjectRelease();
    if (v6) {
      double v5 = 1.05;
    }
    else {
      double v5 = 1.0;
    }
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v19 - 2) = (char *)v0;
  *((double *)&v19 - 1) = v5;
  aBlock[0] = v0;
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D708();
  swift_release();
  swift_getKeyPath();
  aBlock[0] = v4;
  sub_255C7D718();
  swift_release();
  if (!*(unsigned char *)(v4 + 57))
  {
    objc_msgSend(*(id *)(v0 + 112), sel_invalidate);
    uint64_t v8 = self;
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_255B20910;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_255A7BAD0;
    aBlock[3] = &block_descriptor_509;
    uint64_t v10 = _Block_copy(aBlock);
    swift_release();
    id v11 = objc_msgSend(v8, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v10, 1.0);
    _Block_release(v10);
    uint64_t v12 = *(void **)(v1 + 112);
    *(void *)(v1 + 112) = v11;
LABEL_13:

    return;
  }
  if (*(unsigned char *)(v4 + 57) != 1)
  {
    uint64_t v13 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer), sel_invalidate);
    uint64_t v12 = *(void **)(v1 + v13);
    *(void *)(v1 + v13) = 0;
    goto LABEL_13;
  }
  objc_msgSend(*(id *)(v0 + 112), sel_invalidate);
  swift_getKeyPath();
  aBlock[0] = v0;
  sub_255C7D718();
  swift_release();
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8) & 1) == 0) {
    sub_255C7E1E8();
  }
  swift_getKeyPath();
  aBlock[0] = v0;
  sub_255C7D718();
  uint64_t v14 = swift_release();
  if ((*(unsigned char *)(v0 + 104) & 1) == 0)
  {
    if (qword_269F1FFC8 != -1) {
      uint64_t v14 = swift_once();
    }
    MEMORY[0x270FA5388](v14);
    *(&v19 - 2) = (char *)v0;
    *((unsigned char *)&v19 - 8) = 1;
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = 1;
    *(void *)(v15 + 24) = v0;
    swift_retain();
    uint64_t v16 = v19;
    sub_255C7EFF8();
    sub_255C7E1D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v21);
  }
  char v17 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) = 0;
  sub_255AFF228(v17);
  swift_getKeyPath();
  aBlock[0] = v0;
  sub_255C7D718();
  swift_release();
  if ((*(unsigned char *)(v0 + 104) & 1) == 0)
  {
    uint64_t v18 = swift_getKeyPath();
    MEMORY[0x270FA5388](v18);
    *(&v19 - 2) = (char *)v0;
    *((unsigned char *)&v19 - 8) = 0;
    aBlock[0] = v0;
    sub_255C7D708();
    swift_release();
  }
  sub_255AFF8E0();
}

uint64_t sub_255AFC4F4()
{
  return swift_release();
}

double sub_255AFC5D0()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  return *(double *)(v0 + 32);
}

__n128 sub_255AFC674@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  __n128 result = *(__n128 *)(v3 + 32);
  long long v5 = *(_OWORD *)(v3 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_255AFC71C()
{
  return swift_release();
}

double sub_255AFC804()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  return *(double *)(v0 + 64);
}

double sub_255AFC8A4@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  double result = *(double *)(v3 + 64);
  *a2 = result;
  return result;
}

uint64_t sub_255AFC94C()
{
  return swift_release();
}

void sub_255AFCA24(double *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = *a1;
  uint64_t v8 = *((void *)a1 + 1);
  double v10 = a1[2];
  swift_getKeyPath();
  uint64_t v11 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel___observationRegistrar;
  uint64_t v30 = v2;
  uint64_t v12 = sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  uint64_t v13 = *(void *)(v2 + 88);
  if (v13)
  {
    if (v8)
    {
      double v14 = *(double *)(v2 + 96);
      if (*(void *)(v2 + 80) == *(void *)&v9 && v13 == v8 || (sub_255C81428()) && v14 == v10) {
        return;
      }
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
  }
  else if (!v8)
  {
    return;
  }
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v29 = v12;
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
  swift_retain_n();
  uint64_t v16 = sub_255C7D878();
  os_log_type_t v17 = sub_255C80C08();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v32 = v28;
    *(_DWORD *)uint64_t v18 = 136446210;
    swift_getKeyPath();
    uint64_t v30 = v2;
    sub_255C7D718();
    swift_release();
    if (*(void *)(v2 + 88))
    {
      v27[1] = v11;
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_255C810E8();
      sub_255C806E8();
      swift_bridgeObjectRetain();
      sub_255C806E8();
      swift_bridgeObjectRelease();
      sub_255C806E8();
      sub_255C80A88();
      sub_255C806E8();
      uint64_t v19 = v30;
      unint64_t v20 = v31;
    }
    else
    {
      unint64_t v20 = 0xE300000000000000;
      uint64_t v19 = 7104878;
    }
    uint64_t v30 = sub_255A7BEC4(v19, v20, &v32);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v16, v17, "ScrubberInteractionViewModel.currentSection changed to %{public}s", v18, 0xCu);
    uint64_t v21 = v28;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v21, -1, -1);
    MEMORY[0x25A297C00](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v22 = *(void *)(v2 + 72);
  swift_getKeyPath();
  uint64_t v30 = v22;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v22 + 57))
  {
    char v23 = sub_255C81428();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      v27[-2] = v2;
      LOBYTE(v27[-1]) = 0;
      uint64_t v30 = v2;
      sub_255C7D708();
      swift_release();
      char v25 = *(unsigned char *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub);
      *(unsigned char *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) = 0;
      sub_255AFF228(v25);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  uint64_t v30 = v22;
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v22 + 57) && *(unsigned char *)(v22 + 57) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_255C81428();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      return;
    }
  }
  sub_255AFF8E0();
}

uint64_t ScrubberSection.debugDescription.getter()
{
  return 0;
}

uint64_t sub_255AFD194@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  *(void *)a1 = *(void *)(v1 + 80);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_255AFD24C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  *(void *)a2 = *(void *)(v3 + 80);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_255AFD304()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_255AFD3F4(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v4 = a1[10];
  double v5 = a1[11];
  double v6 = a1[12];
  *((void *)a1 + 10) = a2;
  *((void *)a1 + 11) = a3;
  *((void *)a1 + 12) = a4;
  swift_bridgeObjectRetain();
  v8[0] = v4;
  v8[1] = v5;
  void v8[2] = v6;
  sub_255AFCA24(v8);
  return swift_bridgeObjectRelease();
}

void sub_255AFD45C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = *(void *)(v1 + 72);
    swift_retain();
    double v5 = (double *)(a1 + 24 * v2 + 24);
    while (1)
    {
      double v6 = *v5;
      swift_getKeyPath();
      sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
      swift_bridgeObjectRetain();
      sub_255C7D718();
      swift_release();
      double v7 = *(double *)(v4 + 72);
      swift_bridgeObjectRelease();
      if (v6 <= v7) {
        break;
      }
      v5 -= 3;
      if (!--v2)
      {
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        double v10 = 0.0;
        goto LABEL_8;
      }
    }
    uint64_t v8 = *((void *)v5 - 2);
    uint64_t v9 = *((void *)v5 - 1);
    double v10 = *v5;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    double v10 = 0.0;
  }
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  uint64_t v11 = *(void *)(v1 + 88);
  if (v11)
  {
    if (v9)
    {
      double v12 = *(double *)(v1 + 96);
      if (*(void *)(v1 + 80) == v8 && v11 == v9 || (sub_255C81428()) && v12 == v10)
      {
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
  }
  else if (!v9)
  {
    return;
  }
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  swift_bridgeObjectRetain();
  sub_255C7D708();
  swift_release();
  swift_bridgeObjectRelease();
  if (v9)
  {
    UIAccessibilityNotifications v14 = *MEMORY[0x263F83188];
    uint64_t v15 = (void *)sub_255C805F8();
    swift_bridgeObjectRelease();
    UIAccessibilityPostNotification(v14, v15);
  }
}

uint64_t sub_255AFD75C(char a1)
{
  uint64_t v2 = v1;
  int v3 = a1 & 1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v20 = v1;
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  if (*(unsigned __int8 *)(v1 + 104) != v3)
  {
    if (qword_269F1FFD8 != -1) {
      swift_once();
    }
    uint64_t v9 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
    swift_retain_n();
    double v10 = sub_255C7D878();
    os_log_type_t v11 = sub_255C80C08();
    int v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      int v18 = v12;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = v5;
      UIAccessibilityNotifications v14 = v13;
      *(_DWORD *)uint64_t v13 = 67109120;
      swift_getKeyPath();
      uint64_t v20 = v2;
      sub_255C7D718();
      swift_release();
      int v15 = *(unsigned __int8 *)(v2 + 104);
      swift_release();
      LODWORD(v20) = v15;
      sub_255C80F18();
      swift_release();
      _os_log_impl(&dword_255A00000, v10, (os_log_type_t)v18, "ScrubberInteractionViewModel.isTooltipPresented changed to %{BOOL}d", v14, 8u);
      uint64_t v16 = v14;
      uint64_t v5 = v19;
      MEMORY[0x25A297C00](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_255AFDA24()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_255AFDAC4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 104);
  return result;
}

uint64_t sub_255AFDB6C()
{
  return swift_release();
}

uint64_t sub_255AFDC3C()
{
  return swift_release();
}

uint64_t sub_255AFDD18(uint64_t result)
{
  if ((result & 1) == 0)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
    sub_255C7D708();
    return swift_release();
  }
  return result;
}

uint64_t sub_255AFDE1C(void *a1)
{
  uint64_t v2 = sub_255C7F018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_invalidate);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    swift_getKeyPath();
    void v10[2] = v7;
    sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
    sub_255C7D718();
    uint64_t v8 = swift_release();
    if (*(unsigned char *)(v7 + 104))
    {
      if (qword_269F1FFC8 != -1) {
        uint64_t v8 = swift_once();
      }
      MEMORY[0x270FA5388](v8);
      v10[-2] = v7;
      LOBYTE(v10[-1]) = 0;
      uint64_t v9 = swift_allocObject();
      *(unsigned char *)(v9 + 16) = 0;
      *(void *)(v9 + 24) = v7;
      swift_retain();
      sub_255C7EFF8();
      sub_255C7E1D8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_255AFE09C(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_255AFE0CC(uint64_t a1, char a2)
{
  double v3 = v2;
  uint64_t v6 = sub_255C7D898();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  double v27 = v2;
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  uint64_t v11 = *(void *)&v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession;
  if (*(unsigned char *)(*(void *)&v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8))
  {
    if (a2) {
      return result;
    }
  }
  else if ((a2 & 1) == 0 && *(double *)v11 == *(double *)&a1)
  {
    return result;
  }
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v6, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  swift_retain_n();
  uint64_t v13 = sub_255C7D878();
  os_log_type_t v14 = sub_255C80C08();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    int v25 = v15;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v29 = v24;
    char v23 = v16;
    *(_DWORD *)uint64_t v16 = 136446210;
    uint64_t v22 = v16 + 4;
    swift_getKeyPath();
    uint64_t v26 = v7;
    double v27 = v3;
    sub_255C7D718();
    swift_release();
    char v17 = *(unsigned char *)(v11 + 8);
    double v27 = *(double *)v11;
    char v28 = v17;
    uint64_t v18 = sub_255C80658();
    double v27 = COERCE_DOUBLE(sub_255A7BEC4(v18, v19, &v29));
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v20 = v23;
    _os_log_impl(&dword_255A00000, v13, (os_log_type_t)v25, "ScrubberInteractionViewModel.tooltipSession changed to %{public}s", v23, 0xCu);
    uint64_t v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v21, -1, -1);
    MEMORY[0x25A297C00](v20, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_255AFE44C()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession);
}

uint64_t sub_255AFE4FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8);
  *(void *)a2 = *(void *)(v3 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_255AFE5B8()
{
  return swift_release();
}

uint64_t sub_255AFE68C(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7F018();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7D668();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  double v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v29 - v11;
  objc_msgSend(*(id *)(v1 + 112), sel_invalidate);
  uint64_t v13 = self;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_255B20910;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255A7BAD0;
  aBlock[3] = &block_descriptor_481;
  int v15 = _Block_copy(aBlock);
  swift_release();
  id v16 = objc_msgSend(v13, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v15, 1.0);
  _Block_release(v15);
  char v17 = *(void **)(v2 + 112);
  *(void *)(v2 + 112) = v16;

  swift_getKeyPath();
  aBlock[0] = v2;
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t v18 = swift_release();
  uint64_t v19 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession;
  double v20 = 0.0;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8) & 1) == 0)
  {
    sub_255C7D658();
    uint64_t v21 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_latestJumpDate;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v21, v6);
    sub_255C7D618();
    double v23 = v22;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v10, v6);
    uint64_t v18 = ((uint64_t (*)(char *, uint64_t))v24)(v12, v6);
    if (v23 <= 3.0)
    {
      swift_getKeyPath();
      aBlock[0] = v2;
      sub_255C7D718();
      uint64_t v18 = swift_release();
      if (*(unsigned char *)(v19 + 8)) {
        double v20 = 0.0;
      }
      else {
        double v20 = *(double *)v19;
      }
    }
  }
  MEMORY[0x270FA5388](v18);
  *(&v29 - 4) = v2;
  *((double *)&v29 - 3) = v20;
  *((double *)&v29 - 2) = a1;
  sub_255C7E1E8();
  sub_255C7D658();
  uint64_t v25 = v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_latestJumpDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v25, v12, v6);
  swift_endAccess();
  swift_getKeyPath();
  aBlock[0] = v2;
  sub_255C7D718();
  uint64_t result = swift_release();
  if ((*(unsigned char *)(v2 + 104) & 1) == 0)
  {
    if (qword_269F1FFC8 != -1) {
      uint64_t result = swift_once();
    }
    MEMORY[0x270FA5388](result);
    *(&v29 - 2) = v2;
    *((unsigned char *)&v29 - 8) = 1;
    uint64_t v27 = swift_allocObject();
    *(unsigned char *)(v27 + 16) = 1;
    *(void *)(v27 + 24) = v2;
    swift_retain();
    char v28 = v30;
    sub_255C7EFF8();
    sub_255C7E1D8();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v28, v32);
  }
  return result;
}

uint64_t sub_255AFEC28()
{
  return swift_release();
}

uint64_t sub_255AFED10(char a1)
{
  uint64_t v2 = v1;
  int v4 = a1 & 1;
  uint64_t v5 = sub_255C7D898();
  uint64_t v16 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v17 = v1;
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  uint64_t v9 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating) != v4)
  {
    if (qword_269F1FFD8 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v5, (uint64_t)qword_269F33190);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v7, v10, v5);
    swift_retain_n();
    uint64_t v11 = sub_255C7D878();
    os_log_type_t v12 = sub_255C80C08();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 67109376;
      LODWORD(v17) = a1 & 1;
      sub_255C80F18();
      *(_WORD *)(v13 + 8) = 1024;
      swift_getKeyPath();
      uint64_t v17 = v2;
      os_log_type_t v14 = v12;
      sub_255C7D718();
      swift_release();
      int v15 = *(unsigned __int8 *)(v2 + v9);
      swift_release();
      LODWORD(v17) = v15;
      sub_255C80F18();
      swift_release();
      _os_log_impl(&dword_255A00000, v11, v14, "ScrubberInteractionViewModel.isMarqueeAnimating changed from %{BOOL}d to %{BOOL}d", (uint8_t *)v13, 0xEu);
      MEMORY[0x25A297C00](v13, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v5);
  }
  return result;
}

uint64_t sub_255AFF000()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating);
}

uint64_t sub_255AFF0A8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating);
  return result;
}

uint64_t sub_255AFF158()
{
  return swift_release();
}

void sub_255AFF228(char a1)
{
  uint64_t v2 = v1;
  int v4 = a1 & 1;
  uint64_t v5 = sub_255C7D898();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub;
  if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) != v4)
  {
    if (qword_269F1FFD8 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v5, (uint64_t)qword_269F33190);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
    swift_retain();
    uint64_t v11 = sub_255C7D878();
    os_log_type_t v12 = sub_255C80C08();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 67109376;
      LODWORD(v18) = a1 & 1;
      sub_255C80F18();
      *(_WORD *)(v13 + 8) = 1024;
      LODWORD(v18) = *(unsigned __int8 *)(v2 + v9);
      sub_255C80F18();
      swift_release();
      _os_log_impl(&dword_255A00000, v11, v12, "ScrubberInteractionViewModel.hasPausedMidScrub changed from %{BOOL}d to %{BOOL}d", (uint8_t *)v13, 0xEu);
      MEMORY[0x25A297C00](v13, -1, -1);
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (*(unsigned char *)(v2 + v9) == 1)
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      *(&v17 - 2) = v2;
      *((unsigned char *)&v17 - 8) = 1;
      uint64_t v18 = v2;
      sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
      sub_255C7D708();
      swift_release();
      UIAccessibilityNotifications v15 = *MEMORY[0x263F83188];
      sub_255AFF564();
      uint64_t v16 = (void *)sub_255C805F8();
      swift_bridgeObjectRelease();
      UIAccessibilityPostNotification(v15, v16);
    }
  }
}

uint64_t sub_255AFF564()
{
  uint64_t v1 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_255C805E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_255C805C8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_255B15388();
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  if (*(void *)(v0 + 88))
  {
    swift_bridgeObjectRetain();
    sub_255C805B8();
    sub_255C805A8();
    sub_255C80598();
    swift_bridgeObjectRelease();
    sub_255C805A8();
    sub_255C80598();
    sub_255C805A8();
    sub_255C80598();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_255C805A8();
    sub_255C805D8();
    if (qword_26B29F398 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  sub_255C805B8();
  sub_255C805A8();
  sub_255C80598();
  sub_255C805A8();
  sub_255C80598();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255C805A8();
  sub_255C805D8();
  if (qword_26B29F398 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v4 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  return sub_255C80648();
}

void sub_255AFF8E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer), sel_invalidate);
  uint64_t v3 = *(void **)(v0 + v2);
  *(void *)(v0 + v2) = 0;

  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating) & 1) == 0)
  {
    uint64_t v4 = sub_255AFFAA4();
    if ((v5 & 1) == 0)
    {
      *(void *)(v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_relativePointPositionAtLastTimerTick) = v4;
      uint64_t v6 = self;
      uint64_t v7 = swift_allocObject();
      swift_weakInit();
      unsigned char v11[4] = sub_255B208C8;
      v11[5] = v7;
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 1107296256;
      uint64_t v11[2] = sub_255A7BAD0;
      void v11[3] = &block_descriptor_471;
      uint64_t v8 = _Block_copy(v11);
      swift_release();
      id v9 = objc_msgSend(v6, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v8, 1.0);
      _Block_release(v8);
      uint64_t v10 = *(void **)(v1 + v2);
      *(void *)(v1 + v2) = v9;
    }
  }
}

uint64_t sub_255AFFAA4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v1 + 80);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v2 + 32)) {
    goto LABEL_3;
  }
  double v3 = *(double *)(v2 + 24);
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  swift_retain();
  sub_255C7D718();
  swift_release();
  double v4 = *(double *)(v1 + 72);
  swift_release();
  uint64_t v5 = *(void *)(v1 + 80);
  swift_getKeyPath();
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v5 + 48))
  {
LABEL_3:
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    float v7 = v4 / v3;
    *(double *)&uint64_t result = *(double *)(v5 + 40) * v7;
  }
  return result;
}

uint64_t sub_255AFFC5C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_255AFFAA4();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = v2;
      uint64_t v5 = OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_relativePointPositionAtLastTimerTick;
      double v6 = vabdd_f64(*(double *)&v2, *(double *)(v1+ OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_relativePointPositionAtLastTimerTick));
      if (qword_269F1FF98 != -1) {
        swift_once();
      }
      char v7 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub);
      *(unsigned char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) = v6 < *(double *)&qword_269F33120;
      sub_255AFF228(v7);
      *(void *)(v1 + v5) = v4;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_255AFFD38()
{
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_latestJumpDate;
  uint64_t v2 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel___observationRegistrar;
  uint64_t v4 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_255AFFE44()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  long long v2 = *(_OWORD *)(MEMORY[0x263F834E8] + 16);
  *(_OWORD *)(v0 + 32) = *MEMORY[0x263F834E8];
  *(_OWORD *)(v0 + 48) = v2;
  *(void *)(v0 + 64) = 0x3FF0000000000000;
  type metadata accessor for ScrubberPlayhead(0);
  uint64_t v3 = swift_allocObject();
  sub_255B02718();
  *(void *)(v1 + 112) = 0;
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 0;
  sub_255C7D608();
  uint64_t v4 = v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession;
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_pauseDetectionTimer) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_relativePointPositionAtLastTimerTick) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel_hasPausedMidScrub) = 0;
  sub_255C7D748();
  return v1;
}

uint64_t sub_255AFFF24()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 80);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  uint64_t result = swift_release();
  if ((*(unsigned char *)(v1 + 32) & 1) == 0)
  {
    swift_getKeyPath();
    sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
    swift_retain();
    sub_255C7D718();
    swift_release();
    swift_release();
    swift_getKeyPath();
    sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
    sub_255C7D718();
    return swift_release();
  }
  return result;
}

uint64_t sub_255B0014C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  return *(void *)(v1 + 48);
}

uint64_t sub_255B001F0()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + 32);
}

uint64_t sub_255B00294@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 40);
  *(void *)a2 = *(void *)(v3 + 32);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_255B00344()
{
  return swift_release();
}

uint64_t sub_255B00418()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + 48);
}

uint64_t sub_255B004BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 56);
  *(void *)a2 = *(void *)(v3 + 48);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_255B0056C()
{
  return swift_release();
}

uint64_t sub_255B00640(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v45 - v9;
  int v11 = *a1;
  swift_getKeyPath();
  uint64_t v48 = v2;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v2 + 57))
  {
    if (*(unsigned char *)(v2 + 57) == 1)
    {
      unint64_t v12 = 0xE800000000000000;
      uint64_t v13 = 0x676E696B63617274;
      if (!v11)
      {
LABEL_10:
        unint64_t v14 = 0xE400000000000000;
        if (v13 != 1701602409) {
          goto LABEL_15;
        }
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v13 = 0x6172656C65636564;
      unint64_t v12 = 0xEC000000676E6974;
      if (!v11) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    unint64_t v12 = 0xE400000000000000;
    uint64_t v13 = 1701602409;
    if (!v11) {
      goto LABEL_10;
    }
  }
  if (v11 == 1)
  {
    unint64_t v14 = 0xE800000000000000;
    if (v13 != 0x676E696B63617274) {
      goto LABEL_15;
    }
  }
  else
  {
    unint64_t v14 = 0xEC000000676E6974;
    if (v13 != 0x6172656C65636564) {
      goto LABEL_15;
    }
  }
LABEL_13:
  if (v12 == v14) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_15:
  uint64_t v46 = v5;
  char v16 = sub_255C81428();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    swift_getKeyPath();
    uint64_t v48 = v2;
    sub_255C7D718();
    swift_release();
    LOBYTE(v48) = *(unsigned char *)(v2 + 57);
    LOBYTE(v47) = v11;
    if (sub_255B00E54(&v47))
    {
      uint64_t v17 = v46;
      if (qword_269F1FFD8 != -1) {
        swift_once();
      }
      uint64_t v18 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v8, v18, v4);
      swift_retain_n();
      uint64_t v19 = sub_255C7D878();
      os_log_type_t v20 = sub_255C80C08();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v48 = v45;
        *(_DWORD *)uint64_t v21 = 136446466;
        unint64_t v22 = 0xE800000000000000;
        uint64_t v23 = 0x676E696B63617274;
        if (v11 != 1)
        {
          uint64_t v23 = 0x6172656C65636564;
          unint64_t v22 = 0xEC000000676E6974;
        }
        if (v11) {
          uint64_t v24 = v23;
        }
        else {
          uint64_t v24 = 1701602409;
        }
        if (v11) {
          unint64_t v25 = v22;
        }
        else {
          unint64_t v25 = 0xE400000000000000;
        }
        uint64_t v47 = sub_255A7BEC4(v24, v25, &v48);
        sub_255C80F18();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2082;
        swift_getKeyPath();
        uint64_t v47 = v2;
        sub_255C7D718();
        swift_release();
        unint64_t v26 = 0xE800000000000000;
        uint64_t v27 = 0x676E696B63617274;
        if (*(unsigned char *)(v2 + 57) != 1)
        {
          uint64_t v27 = 0x6172656C65636564;
          unint64_t v26 = 0xEC000000676E6974;
        }
        if (*(unsigned char *)(v2 + 57)) {
          uint64_t v28 = v27;
        }
        else {
          uint64_t v28 = 1701602409;
        }
        if (*(unsigned char *)(v2 + 57)) {
          unint64_t v29 = v26;
        }
        else {
          unint64_t v29 = 0xE400000000000000;
        }
        uint64_t v47 = sub_255A7BEC4(v28, v29, &v48);
        sub_255C80F18();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255A00000, v19, v20, "ScrubberInteractionViewModel.scrubState changed from %{public}s to %{public}s", (uint8_t *)v21, 0x16u);
        uint64_t v30 = v45;
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v30, -1, -1);
        MEMORY[0x25A297C00](v21, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v8, v4);
      }
      else
      {

        swift_release_n();
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v8, v4);
      }
    }
    else
    {
      uint64_t v31 = v46;
      if (qword_269F1FFD8 != -1) {
        swift_once();
      }
      uint64_t v32 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v10, v32, v4);
      swift_retain_n();
      char v33 = sub_255C7D878();
      os_log_type_t v34 = sub_255C80BF8();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v48 = v45;
        *(_DWORD *)uint64_t v35 = 136446466;
        unint64_t v36 = 0xE800000000000000;
        uint64_t v37 = 0x676E696B63617274;
        if (v11 != 1)
        {
          uint64_t v37 = 0x6172656C65636564;
          unint64_t v36 = 0xEC000000676E6974;
        }
        if (v11) {
          uint64_t v38 = v37;
        }
        else {
          uint64_t v38 = 1701602409;
        }
        if (v11) {
          unint64_t v39 = v36;
        }
        else {
          unint64_t v39 = 0xE400000000000000;
        }
        uint64_t v47 = sub_255A7BEC4(v38, v39, &v48);
        sub_255C80F18();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 12) = 2082;
        swift_getKeyPath();
        uint64_t v47 = v2;
        sub_255C7D718();
        swift_release();
        unint64_t v40 = 0xE800000000000000;
        uint64_t v41 = 0x676E696B63617274;
        if (*(unsigned char *)(v2 + 57) != 1)
        {
          uint64_t v41 = 0x6172656C65636564;
          unint64_t v40 = 0xEC000000676E6974;
        }
        if (*(unsigned char *)(v2 + 57)) {
          uint64_t v42 = v41;
        }
        else {
          uint64_t v42 = 1701602409;
        }
        if (*(unsigned char *)(v2 + 57)) {
          unint64_t v43 = v40;
        }
        else {
          unint64_t v43 = 0xE400000000000000;
        }
        uint64_t v47 = sub_255A7BEC4(v42, v43, &v48);
        sub_255C80F18();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255A00000, v33, v34, "ScrubberInteractionViewModel.scrubState underwent illegal transition from %{public}s to %{public}s. This could cause animation and behavioural issues.", (uint8_t *)v35, 0x16u);
        uint64_t v44 = v45;
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v44, -1, -1);
        MEMORY[0x25A297C00](v35, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v10, v4);
      }
      else
      {

        swift_release_n();
        return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v4);
      }
    }
  }
  return result;
}

uint64_t sub_255B00E54(unsigned char *a1)
{
  unsigned int v2 = *a1;
  int v3 = *v1;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x676E696B63617274;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6172656C65636564;
    unint64_t v4 = 0xEC000000676E6974;
  }
  if (*a1) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 1701602409;
  }
  if (v2) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  unint64_t v8 = 0xE800000000000000;
  uint64_t v9 = 0x676E696B63617274;
  if (v3 != 1)
  {
    uint64_t v9 = 0x6172656C65636564;
    unint64_t v8 = 0xEC000000676E6974;
  }
  if (*v1) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 1701602409;
  }
  if (*v1) {
    unint64_t v11 = v8;
  }
  else {
    unint64_t v11 = 0xE400000000000000;
  }
  if (v6 != v10 || v7 != v11)
  {
    char v13 = sub_255C81428();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      if (v3)
      {
        if (v3 == 1) {
          goto LABEL_24;
        }
        if (v2 == 1)
        {
          char v12 = 1;
          goto LABEL_20;
        }
      }
      else if (v2 > 1)
      {
        char v12 = 1;
        goto LABEL_20;
      }
      char v12 = sub_255C81428();
      goto LABEL_20;
    }
LABEL_24:
    char v12 = 1;
    return v12 & 1;
  }
  swift_bridgeObjectRelease();
  char v12 = 1;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_255B01038@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a1 = *(unsigned char *)(v1 + 57);
  return result;
}

uint64_t sub_255B010E0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 57);
  return result;
}

uint64_t sub_255B01188()
{
  return swift_release();
}

uint64_t sub_255B01258()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + 64);
}

uint64_t sub_255B012F8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + 64);
  return result;
}

uint64_t sub_255B013A0()
{
  return swift_release();
}

double sub_255B0146C()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  return *(double *)(v0 + 72);
}

double sub_255B0150C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  double result = *(double *)(v3 + 72);
  *a2 = result;
  return result;
}

uint64_t sub_255B015B4()
{
  return swift_release();
}

uint64_t sub_255B0168C(double a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F20);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = sub_255C7D898();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v9, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_retain_n();
  unint64_t v14 = sub_255C7D878();
  os_log_type_t v15 = sub_255C80C08();
  if (os_log_type_enabled(v14, v15))
  {
    char v16 = (_DWORD *)swift_slowAlloc();
    uint64_t v23 = v6;
    uint64_t v17 = v16;
    *char v16 = 134218240;
    double v24 = a1;
    sub_255C80F18();
    *((_WORD *)v17 + 6) = 2048;
    unint64_t v22 = (char *)v17 + 14;
    swift_getKeyPath();
    double v24 = v1;
    sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
    sub_255C7D718();
    swift_release();
    double v24 = *(double *)(*(void *)&v1 + 88);
    sub_255C80F18();
    swift_release_n();
    _os_log_impl(&dword_255A00000, v14, v15, "ScrubberViewModel.playbackRate changed from %f to %f", (uint8_t *)v17, 0x16u);
    uint64_t v18 = v17;
    uint64_t v6 = v23;
    MEMORY[0x25A297C00](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_255B028A0();
  uint64_t v19 = sub_255C7D668();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
  uint64_t v20 = *(void *)&v1 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead_latestDate;
  swift_beginAccess();
  sub_255A09540(v20, (uint64_t)v6, &qword_269F23F20);
  swift_beginAccess();
  sub_255B1E9F4((uint64_t)v8, v20);
  swift_endAccess();
  sub_255B02324((uint64_t)v6);
  sub_255A095A4((uint64_t)v8, &qword_269F23F20);
  return sub_255A095A4((uint64_t)v6, &qword_269F23F20);
}

double sub_255B01A68()
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  return *(double *)(v0 + 88);
}

double sub_255B01B08@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  double result = *(double *)(v3 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_255B01BB0()
{
  return swift_release();
}

uint64_t sub_255B01C88(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D668();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v34 - v9;
  uint64_t v11 = *(void *)(v1 + 80);
  swift_getKeyPath();
  uint64_t v35 = v11;
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  uint64_t result = swift_release();
  if ((*(unsigned char *)(v11 + 32) & 1) == 0 && (*(unsigned char *)(v1 + 24) & 1) == 0 && *(double *)(v1 + 96) != a1)
  {
    double v13 = *(double *)(v11 + 24);
    double v14 = *(double *)(v1 + 16);
    swift_getKeyPath();
    uint64_t v15 = v1 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead___observationRegistrar;
    uint64_t v35 = v2;
    sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
    sub_255C7D718();
    swift_release();
    if (*(unsigned char *)(v2 + 57))
    {
      char v16 = sub_255C81428();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        double v28 = *(double *)(v2 + 96);
        if ((~*(void *)&v28 & 0x7FF0000000000000) != 0)
        {
          if (v28 > -9.22337204e18)
          {
            if (v28 < 9.22337204e18)
            {
              uint64_t v29 = (uint64_t)v28;
              uint64_t KeyPath = swift_getKeyPath();
              MEMORY[0x270FA5388](KeyPath);
              v34[-2] = v2;
              v34[-1] = v29;
              uint64_t v35 = v2;
              sub_255C7D708();
              swift_release();
              uint64_t v31 = *(void *)(v2 + 96);
              uint64_t v32 = swift_getKeyPath();
              MEMORY[0x270FA5388](v32);
              v34[-2] = v2;
              v34[-1] = v31;
              uint64_t v35 = v2;
              sub_255C7D708();
              return swift_release();
            }
            goto LABEL_30;
          }
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    double v17 = *(double *)(v2 + 96);
    v34[0] = v15;
    if (v17 >= 9.22337204e18) {
      goto LABEL_20;
    }
    if ((~*(void *)&v17 & 0x7FF0000000000000) != 0)
    {
      if (v17 > -9.22337204e18)
      {
        uint64_t v18 = (uint64_t)v17;
        swift_getKeyPath();
        uint64_t v35 = v2;
        sub_255C7D718();
        uint64_t result = swift_release();
        if (*(void *)(v2 + 64) != v18)
        {
          double v19 = *(double *)(v2 + 96);
          if (v13 < v19) {
            double v19 = v13;
          }
          double v20 = floor(v19);
          if ((~*(void *)&v20 & 0x7FF0000000000000) != 0)
          {
            if (v20 > -9.22337204e18)
            {
              if (v20 < 9.22337204e18)
              {
                uint64_t v21 = (uint64_t)v20;
                swift_getKeyPath();
                uint64_t v35 = v2;
                sub_255C7D718();
                swift_release();
                if (*(void *)(v2 + 64) != v21)
                {
                  uint64_t v33 = swift_getKeyPath();
                  MEMORY[0x270FA5388](v33);
                  v34[-2] = v2;
                  v34[-1] = v21;
                  uint64_t v35 = v2;
                  sub_255C7D708();
                  swift_release();
                }
                goto LABEL_20;
              }
LABEL_33:
              __break(1u);
              return result;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_20:
        sub_255C7D658();
        uint64_t v22 = v2 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead_playheadPositionTimeLastSet;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v22, v4);
        sub_255C7D618();
        double v24 = v23;
        unint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
        v25(v8, v4);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v10, v4);
        if (v14 < v24)
        {
          uint64_t v26 = *(void *)(v2 + 96);
          uint64_t v27 = swift_getKeyPath();
          MEMORY[0x270FA5388](v27);
          v34[-2] = v2;
          v34[-1] = v26;
          v34[1] = v2;
          sub_255C7D708();
          swift_release();
          sub_255C7D648();
          swift_beginAccess();
          (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v22, v10, v4);
          return swift_endAccess();
        }
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_255B02324(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F20);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_255C7D668();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v14 = (char *)&v33 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead_latestDate;
  swift_beginAccess();
  sub_255A09540(v15, (uint64_t)v8, &qword_269F23F20);
  char v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v36 = v9;
  if (v16(v8, 1, v9) == 1) {
    return sub_255A095A4((uint64_t)v8, &qword_269F23F20);
  }
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  double v19 = v8;
  uint64_t v20 = v36;
  v18(v14, v19, v36);
  sub_255A09540(a1, (uint64_t)v6, &qword_269F23F20);
  if (v16(v6, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v20);
    return sub_255A095A4((uint64_t)v6, &qword_269F23F20);
  }
  else
  {
    uint64_t v33 = v10;
    os_log_type_t v34 = v14;
    uint64_t v21 = v35;
    v18(v35, v6, v20);
    uint64_t v22 = *(void *)(v1 + 80);
    swift_getKeyPath();
    uint64_t v37 = v22;
    sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
    sub_255C7D718();
    swift_release();
    if (*(unsigned char *)(v22 + 32))
    {
      double v23 = *(void (**)(char *, uint64_t))(v33 + 8);
      uint64_t v24 = v36;
      v23(v21, v36);
      return ((uint64_t (*)(char *, uint64_t))v23)(v34, v24);
    }
    else
    {
      double v25 = *(double *)(v22 + 24);
      uint64_t v26 = v34;
      sub_255C7D618();
      double v28 = v27;
      swift_getKeyPath();
      uint64_t v37 = v1;
      sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
      sub_255C7D718();
      swift_release();
      double v29 = *(double *)(v1 + 96);
      double v30 = v29 + v28 * *(double *)(v1 + 88);
      if (v30 <= 0.0) {
        double v30 = 0.0;
      }
      if (v25 < v30) {
        double v30 = v25;
      }
      *(double *)(v1 + 96) = v30;
      sub_255B01C88(v29);
      uint64_t v31 = *(void (**)(char *, uint64_t))(v33 + 8);
      uint64_t v32 = v36;
      v31(v21, v36);
      return ((uint64_t (*)(char *, uint64_t))v31)(v26, v32);
    }
  }
}

uint64_t sub_255B02718()
{
  uint64_t v1 = sub_255C7D668();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  *(void *)(v0 + 48) = 0;
  *(_WORD *)(v0 + 56) = 1;
  type metadata accessor for ScrubberSections(0);
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v5 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 1;
  *(void *)(v5 + 40) = 0;
  *(unsigned char *)(v5 + 48) = 1;
  *(void *)(v5 + 56) = v6;
  sub_255C7D748();
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = 0x3FF0000000000000;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v0 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead_latestDate, 1, 1, v1);
  sub_255C7D748();
  *(void *)(v0 + 96) = 0;
  sub_255C7D608();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v0 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead_playheadPositionTimeLastSet, v4, v1);
  sub_255B028A0();
  return v0;
}

uint64_t sub_255B028A0()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v0 + 56) == 1)
  {
    id v2 = objc_msgSend(self, sel_mainScreen);
    id v3 = objc_msgSend(v2, sel_maximumFramesPerSecond);
  }
  else
  {
    id v3 = *(id *)(v0 + 48);
  }
  double v4 = 1.0 / (double)(uint64_t)v3;
  uint64_t v5 = *(void *)(v1 + 80);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  uint64_t result = swift_release();
  if ((*(unsigned char *)(v5 + 32) & 1) == 0)
  {
    double v7 = *(double *)(v5 + 24);
    swift_getKeyPath();
    sub_255C7D718();
    uint64_t result = swift_release();
    if ((*(unsigned char *)(v5 + 48) & 1) == 0)
    {
      double v8 = *(double *)(v5 + 40);
      swift_getKeyPath();
      sub_255C7D718();
      uint64_t result = swift_release();
      if ((*(unsigned char *)(v1 + 40) & 1) == 0)
      {
        double v9 = v7 / (v8 * *(double *)(v1 + 32));
        swift_getKeyPath();
        sub_255C7D718();
        uint64_t result = swift_release();
        if (v9 * (1.0 / *(double *)(v1 + 88)) * 0.5 > v4) {
          double v4 = v9 * (1.0 / *(double *)(v1 + 88)) * 0.5;
        }
      }
    }
  }
  *(double *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_255B02B10()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead_playheadPositionTimeLastSet;
  uint64_t v2 = sub_255C7D668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_255A095A4(v0 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead_latestDate, &qword_269F23F20);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberPlayhead___observationRegistrar;
  uint64_t v4 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

id sub_255B02C14()
{
  uint64_t v1 = sub_255C7EA18();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_defaultConfiguration);
  id v6 = objc_msgSend(self, sel_hiddenConfiguration);
  objc_msgSend(v5, sel_setLabelsConfiguration_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24040);
  sub_255C7EFB8();
  double v7 = v14;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA9A0]), sel_initWithSource_, v14);

  objc_msgSend(v8, sel_setConfiguration_, v5);
  sub_255C7EFB8();
  double v9 = v14;
  objc_msgSend(v8, sel_setDelegate_, v14);

  sub_255C7EFB8();
  uint64_t v10 = v14;
  type metadata accessor for MediaTimelineControl(0);
  sub_255ABA66C((uint64_t)v4);
  uint64_t v11 = *v0;
  swift_getKeyPath();
  uint64_t v13 = v11;
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  sub_255B04168((uint64_t)v4, (*(unsigned char *)(v11 + 56) & 1) == 0, v8);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

void sub_255B02E8C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = sub_255C7EA18();
  uint64_t v6 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  id v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)v2 + *(int *)(type metadata accessor for MediaTimelineControl(0) + 24);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_255A0877C(*(void *)v9, v11);
  sub_255ABC3D0(v10, v11, (uint64_t *)&v35);
  sub_255A087D0(v10, v11);
  objc_msgSend(a1, sel_setFineScrubbingStyle_, v35 & 3);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(*v3 + 16) + 72) + 80);
  swift_getKeyPath();
  id v35 = (id)v12;
  uint64_t v13 = sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v12 + 32))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F24040);
    sub_255C7EFB8();
    id v14 = v35;
    LODWORD(v15) = 1.0;
    objc_msgSend(v35, sel_setMaxValue_, v15);

    sub_255C7EFB8();
    id v16 = v35;
    objc_msgSend(v35, sel_setCurrentValue_, 0.0);

LABEL_8:
    sub_255C7EFB8();
    id v30 = v35;
    sub_255A43740(0, (unint64_t *)&unk_269F24048);
    uint64_t v31 = (void *)sub_255C807E8();
    goto LABEL_9;
  }
  uint64_t v32 = v13;
  double v17 = *(double *)(v12 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24040);
  sub_255C7EFB8();
  id v18 = v35;
  sub_255ABA66C((uint64_t)v8);
  uint64_t v19 = *v3;
  swift_getKeyPath();
  uint64_t v34 = v19;
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  sub_255B04168((uint64_t)v8, (*(unsigned char *)(v19 + 56) & 1) == 0, a1);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v33);
  sub_255C7EFB8();
  id v20 = v35;
  *(float *)&double v21 = v17;
  objc_msgSend(v35, sel_setMaxValue_, v21);

  sub_255C7EFB8();
  id v22 = v35;
  uint64_t v23 = *(void *)(*(void *)(*v3 + 16) + 72);
  swift_getKeyPath();
  uint64_t v34 = v23;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  double v24 = *(double *)(v23 + 72);
  *(float *)&double v24 = v24;
  objc_msgSend(v22, sel_setCurrentValue_, v24);

  double v25 = *(unsigned char **)(*(void *)(*v3 + 16) + 72);
  swift_getKeyPath();
  id v35 = v25;
  sub_255C7D718();
  swift_release();
  if (v25[57] && v25[57] == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_255C81428();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      goto LABEL_8;
    }
  }
  double v27 = *(void **)(*(void *)(*(void *)(*v3 + 16) + 72) + 80);
  swift_getKeyPath();
  id v35 = v27;
  sub_255C7D718();
  uint64_t v28 = swift_release();
  uint64_t v29 = v27[7];
  MEMORY[0x270FA5388](v28);
  *(&v32 - 2) = a2;
  swift_bridgeObjectRetain();
  sub_255AF6B5C((void (*)(uint64_t *__return_ptr, void *))sub_255B1EFC4, (uint64_t)(&v32 - 4), v29);
  swift_bridgeObjectRelease();
  sub_255C7EFB8();
  id v30 = v35;
  sub_255A43740(0, (unint64_t *)&unk_269F24048);
  uint64_t v31 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
LABEL_9:
  objc_msgSend(v30, sel_setTimeRangeMarks_, v31);
}

void sub_255B03484(uint64_t a1@<X0>, void *a2@<X8>)
{
  double v3 = *(double *)(a1 + 16);
  float v4 = v3;
  float v5 = v3 + 1.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24040);
  sub_255C7EFB8();
  id v6 = objc_allocWithZone(MEMORY[0x263EFA9E0]);
  uint64_t v7 = (void *)sub_255C805F8();
  *(float *)&double v8 = v4;
  *(float *)&double v9 = v5;
  id v10 = objc_msgSend(v6, sel_initWithStartValue_endValue_identifier_markUIProvider_, v7, v11, v8, v9);

  *a2 = v10;
}

id sub_255B03544()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (objc_class *)type metadata accessor for MediaTimelineControl.Coordinator(0);
  double v3 = objc_allocWithZone(v2);
  *(_DWORD *)&v3[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_maxValue] = 1065353216;
  *(_DWORD *)&v3[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_currentValue] = 0;
  *(void *)&v3[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_timeRangeMarks] = MEMORY[0x263F8EE78];
  v3[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState] = 0;
  float v4 = &v3[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_contrast];
  uint64_t v5 = sub_255C7EA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v3[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_isDisabled] = 0;
  *(void *)&v3[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel] = v1;
  v7.receiver = v3;
  v7.super_class = v2;
  swift_retain();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_255B038A8(void *a1)
{
  uint64_t v3 = sub_255C7D898();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v3, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  double v8 = v1;
  double v9 = sub_255C7D878();
  os_log_type_t v10 = sub_255C80BC8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134218240;
    double v18 = 0.0;
    sub_255C80F18();
    *(_WORD *)(v11 + 12) = 2048;
    [v8 maxValue];
    double v18 = v12;
    sub_255C80F18();

    _os_log_impl(&dword_255A00000, v9, v10, "MediaTimelineControl.Coordinator: will begin changing (min=%f, max=%f)", (uint8_t *)v11, 0x16u);
    MEMORY[0x25A297C00](v11, -1, -1);
  }
  else
  {

    double v9 = v8;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *((unsigned char *)&v8->isa + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState) = 1;
  double v13 = *(double *)((*(void **)((char *)&v8->isa
                                + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel))[2]
                  + 72);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *((double *)&v17 - 2) = v13;
  *((unsigned char *)&v17 - 8) = 1;
  double v18 = v13;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  swift_retain();
  sub_255C7D708();
  swift_release();
  sub_255AFBE70();
  swift_release();
  swift_retain();
  [v8 currentValue];
  LOBYTE(v18) = 0;
  sub_255AF7DF4((char *)&v18, v15);
  swift_release();
  return sub_255B04870(a1, 1);
}

uint64_t sub_255B03CE8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  double v9 = sub_255C7D878();
  os_log_type_t v10 = sub_255C80BC8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_255A00000, v9, v10, "MediaTimelineControl.Coordinator: did end tracking", v11, 2u);
    MEMORY[0x25A297C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(unsigned char *)(v2 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState) = 2;
  uint64_t v12 = *(void *)(*(void *)(*(void *)(v2
                                          + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel)
                              + 16)
                  + 72);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v15[-2] = v12;
  LOBYTE(v15[-1]) = 2;
  v15[1] = v12;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  swift_retain();
  sub_255C7D708();
  swift_release();
  sub_255AFBE70();
  swift_release();
  return sub_255B04870(a1, 0);
}

uint64_t sub_255B04168(uint64_t a1, int a2, void *a3)
{
  uint64_t v54 = a3;
  int v56 = a2;
  uint64_t v52 = type metadata accessor for ScrubberSpecs.TrackEffects(0);
  MEMORY[0x270FA5388](v52);
  uint64_t v53 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_255C7EA18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v57 = &v44[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F24080);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24078);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v50 = &v44[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v46 = &v44[-v17];
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = &v44[-v18];
  uint64_t v55 = v3;
  uint64_t v20 = v3 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_contrast;
  swift_beginAccess();
  double v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v51 = a1;
  uint64_t v47 = v21;
  v21(v19, a1, v6);
  uint64_t v48 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56);
  v48(v19, 0, 1, v6);
  uint64_t v22 = (uint64_t)&v12[*(int *)(v10 + 56)];
  uint64_t v49 = v20;
  sub_255A09540(v20, (uint64_t)v12, &qword_269F24078);
  sub_255A09540((uint64_t)v19, v22, &qword_269F24078);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v23((uint64_t)v12, 1, v6) != 1)
  {
    uint64_t v29 = v46;
    sub_255A09540((uint64_t)v12, (uint64_t)v46, &qword_269F24078);
    if (v23(v22, 1, v6) != 1)
    {
      id v30 = v57;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 32))(v57, v22, v6);
      sub_255B12C70(&qword_26B298580, MEMORY[0x263F19988]);
      uint64_t v31 = v30;
      int v45 = sub_255C80578();
      uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
      v32(v31, v6);
      sub_255A095A4((uint64_t)v19, &qword_269F24078);
      v32(v46, v6);
      uint64_t result = sub_255A095A4((uint64_t)v12, &qword_269F24078);
      char v27 = v56;
      uint64_t v28 = v55;
      double v25 = &qword_269F23000;
      if ((v45 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    sub_255A095A4((uint64_t)v19, &qword_269F24078);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v29, v6);
    double v25 = &qword_269F23000;
LABEL_6:
    sub_255A095A4((uint64_t)v12, (uint64_t *)&unk_269F24080);
    char v27 = v56;
    uint64_t v28 = v55;
    goto LABEL_9;
  }
  sub_255A095A4((uint64_t)v19, &qword_269F24078);
  unsigned int v24 = v23(v22, 1, v6);
  double v25 = &qword_269F23000;
  if (v24 != 1) {
    goto LABEL_6;
  }
  uint64_t result = sub_255A095A4((uint64_t)v12, &qword_269F24078);
  char v27 = v56;
  uint64_t v28 = v55;
LABEL_8:
  if (*(unsigned char *)(v28 + v25[337]) == (v27 & 1)) {
    return result;
  }
LABEL_9:
  uint64_t v33 = (uint64_t)v50;
  v47(v50, v51, v6);
  v48((unsigned char *)v33, 0, 1, v6);
  uint64_t v34 = v49;
  swift_beginAccess();
  sub_255B207BC(v33, v34);
  swift_endAccess();
  *(unsigned char *)(v28 + v25[337]) = v27 & 1;
  id v35 = v57;
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v57, *MEMORY[0x263F19978], v6);
  char v36 = sub_255C7DCB8();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v35, v6);
  if (v36)
  {
    uint64_t v38 = (uint64_t)v53;
    uint64_t v37 = v54;
    if (qword_269F1FFA0 != -1) {
      swift_once();
    }
    unint64_t v39 = qword_269F33128;
  }
  else
  {
    uint64_t v38 = (uint64_t)v53;
    uint64_t v37 = v54;
    if (qword_269F1FFA8 != -1) {
      swift_once();
    }
    unint64_t v39 = qword_269F33140;
  }
  uint64_t v40 = __swift_project_value_buffer(v52, (uint64_t)v39);
  sub_255B206A4(v40, v38, type metadata accessor for ScrubberSpecs.TrackEffects);
  id v41 = objc_msgSend(v37, sel_configuration);
  if (*(unsigned char *)(v28 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState)
    && *(unsigned char *)(v28 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState) == 1)
  {
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  char v42 = sub_255C81428();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_21:
    unint64_t v43 = (void *)(v38 + 16);
    goto LABEL_24;
  }
  unint64_t v43 = (void *)v38;
  if (v42) {
LABEL_23:
  }
    unint64_t v43 = (void *)(v38 + 8);
LABEL_24:
  objc_msgSend(v41, sel_setCurrentValueVisualEffect_, *v43);
  objc_msgSend(v41, sel_setMaxValueVisualEffect_, *(void *)(v38 + 24));
  objc_msgSend(v37, sel_setConfiguration_, v41);

  return sub_255B2075C(v38, type metadata accessor for ScrubberSpecs.TrackEffects);
}

uint64_t sub_255B04870(void *a1, int a2)
{
  int v31 = a2;
  uint64_t v4 = type metadata accessor for ScrubberSpecs.TrackEffects(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24078);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_255C7EA18();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v30[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v30[-v15];
  uint64_t v17 = v2 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_contrast;
  swift_beginAccess();
  sub_255A09540(v17, (uint64_t)v9, &qword_269F24078);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t v18 = *(void (**)(unsigned char *, void, uint64_t))(v11 + 104);
    v18(v16, *MEMORY[0x263F19968], v10);
    sub_255A095A4((uint64_t)v9, &qword_269F24078);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v16, v9, v10);
    uint64_t v18 = *(void (**)(unsigned char *, void, uint64_t))(v11 + 104);
  }
  v18(v14, *MEMORY[0x263F19978], v10);
  char v19 = sub_255C7DCB8();
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
  v20(v14, v10);
  if (v19)
  {
    if (qword_269F1FFA0 != -1) {
      swift_once();
    }
    double v21 = qword_269F33128;
  }
  else
  {
    if (qword_269F1FFA8 != -1) {
      swift_once();
    }
    double v21 = qword_269F33140;
  }
  uint64_t v22 = __swift_project_value_buffer(v4, (uint64_t)v21);
  sub_255B206A4(v22, (uint64_t)v6, type metadata accessor for ScrubberSpecs.TrackEffects);
  id v23 = objc_msgSend(a1, sel_configuration);
  unsigned int v24 = v23;
  uint64_t v25 = 8;
  if ((v31 & 1) == 0) {
    uint64_t v25 = 0;
  }
  objc_msgSend(v23, sel_setCurrentValueVisualEffect_, *(void *)&v6[v25]);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a1;
  *(void *)(v26 + 24) = v24;
  id v27 = a1;
  id v28 = v24;
  sub_255B1F00C((uint64_t)sub_255B2074C, v26);

  swift_release();
  sub_255B2075C((uint64_t)v6, type metadata accessor for ScrubberSpecs.TrackEffects);
  return ((uint64_t (*)(unsigned char *, uint64_t))v20)(v16, v10);
}

id sub_255B04C7C()
{
  return sub_255B10998(type metadata accessor for MediaTimelineControl.Coordinator);
}

uint64_t sub_255B04CEC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24130);
  sub_255C7FE68();
  return v1;
}

id sub_255B04D40@<X0>(void *a1@<X8>)
{
  id result = sub_255B03544();
  *a1 = result;
  return result;
}

uint64_t sub_255B04D68(uint64_t a1, char a2)
{
  if (qword_269F1FF30 != -1) {
    swift_once();
  }
  if (qword_269F1FF38 != -1) {
    swift_once();
  }
  if (a2) {
    return 0x4024000000000000;
  }
  else {
    return a1;
  }
}

uint64_t sub_255B04E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255B12C70(&qword_269F23E78, (void (*)(uint64_t))type metadata accessor for MediaTimelineControl);

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_255B04EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255B12C70(&qword_269F23E78, (void (*)(uint64_t))type metadata accessor for MediaTimelineControl);

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_255B04F48()
{
}

uint64_t sub_255B04FA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  j__swift_retain();
  uint64_t v3 = sub_255ABC5EC(v1, v2);
  j_j__swift_release(v1, v2);
  return v3;
}

uint64_t sub_255B04FF8(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 44);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_255A0877C(*(void *)v2, v4);
  char v5 = sub_255ABA6A4(v3, v4);
  sub_255A087D0(v3, v4);
  return v5 & 1;
}

MediaCoreUI::ScrubberLoadingConfiguration __swiftcall ScrubberLoadingConfiguration.init(disableInteraction:showPlaceholderLabels:showSpinner:availableDuration:)(Swift::Bool disableInteraction, Swift::Bool showPlaceholderLabels, Swift::Bool showSpinner, Swift::Double_optional availableDuration)
{
  *(unsigned char *)uint64_t v5 = disableInteraction;
  *(unsigned char *)(v5 + 1) = showPlaceholderLabels;
  *(unsigned char *)(v5 + 2) = showSpinner;
  *(void *)(v5 + 8) = *(void *)&availableDuration.is_nil;
  *(unsigned char *)(v5 + 16) = v4 & 1;
  result.availableDuration.value = availableDuration.value;
  result.availableDuration.is_nil = showPlaceholderLabels;
  result.disableInteraction = disableInteraction;
  return result;
}

uint64_t Scrubber.init(duration:loadingConfiguration:playbackRate:sections:accessoryView:onScrub:)@<X0>(double a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X3>, void (*a5)(__n128)@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  char v11 = *a3;
  char v12 = a3[1];
  char v13 = a3[2];
  uint64_t v25 = *((void *)a3 + 1);
  char v24 = a3[16];
  type metadata accessor for ScrubberViewModel(0);
  swift_allocObject();
  sub_255AFAAE8();
  sub_255C7FE58();
  *(void *)a6 = v28;
  *(void *)(a6 + 8) = v29;
  type metadata accessor for ScrubberProxy(0);
  sub_255B12C70((unint64_t *)&unk_269F23848, (void (*)(uint64_t))type metadata accessor for ScrubberProxy);
  *(void *)(a6 + 16) = sub_255C7DD48();
  *(unsigned char *)(a6 + 24) = v14 & 1;
  uint64_t v15 = (int *)type metadata accessor for Scrubber();
  uint64_t v16 = (uint64_t *)(a6 + v15[10]);
  *uint64_t v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a6 + v15[11];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(unsigned char *)(v17 + 8) = 0;
  uint64_t v18 = a6 + v15[12];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(unsigned char *)(v18 + 8) = 0;
  v19.n128_f64[0] = a1;
  if (a2 & 1 | (a1 <= 0.0)) {
    double v20 = 0.0;
  }
  else {
    double v20 = a1;
  }
  uint64_t v21 = a6 + v15[13];
  *(double *)uint64_t v21 = v20;
  *(unsigned char *)(v21 + 8) = a2 & 1 | (a1 <= 0.0);
  uint64_t v22 = a6 + v15[14];
  *(unsigned char *)uint64_t v22 = v11;
  *(unsigned char *)(v22 + 1) = v12;
  *(unsigned char *)(v22 + 2) = v13;
  *(void *)(v22 + 8) = v25;
  *(unsigned char *)(v22 + 16) = v24;
  *(double *)(a6 + v15[15]) = a7;
  *(void *)(a6 + v15[16]) = a4;
  a5(v19);
  sub_255B04CEC();
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D708();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for ScrubberViewModel(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F239D0);
}

uint64_t type metadata accessor for ScrubberProxy(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F23CF8);
}

uint64_t type metadata accessor for Scrubber()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Scrubber.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v137 = a2;
  uint64_t v3 = sub_255C7E398();
  uint64_t v135 = *(void *)(v3 - 8);
  uint64_t v136 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v134 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = (char *)sub_255C7EF58();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23868);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v142 = *(void *)(a1 + 16);
  uint64_t v143 = (int *)a1;
  uint64_t v141 = v5;
  type metadata accessor for Scrubber.CompanionViews();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23870);
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F189A8];
  uint64_t v177 = WitnessTable;
  uint64_t v178 = MEMORY[0x263F189A8];
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v9 = sub_255A09998(&qword_269F23878, &qword_269F23870);
  uint64_t v175 = v8;
  uint64_t v176 = v9;
  uint64_t v10 = swift_getWitnessTable();
  unint64_t v11 = sub_255AA79F0();
  uint64_t v173 = v10;
  unint64_t v174 = v11;
  uint64_t v171 = swift_getWitnessTable();
  uint64_t v172 = v7;
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23888);
  uint64_t v12 = sub_255C7E458();
  uint64_t v13 = sub_255C7D668();
  unint64_t v14 = sub_255B15F24();
  uint64_t v15 = swift_getWitnessTable();
  unint64_t v169 = v14;
  uint64_t v170 = v15;
  uint64_t v167 = swift_getWitnessTable();
  uint64_t v168 = MEMORY[0x263F18880];
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = sub_255A09998(&qword_269F23908, &qword_269F23888);
  uint64_t v165 = v16;
  uint64_t v166 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = sub_255B12C70(&qword_26B29DE10, MEMORY[0x263F07490]);
  uint64_t v154 = v12;
  uint64_t v155 = v13;
  uint64_t v156 = v18;
  uint64_t v157 = v19;
  swift_getOpaqueTypeMetadata2();
  sub_255C7E458();
  sub_255B12C70(&qword_26B29EE68, MEMORY[0x263F1A1B0]);
  sub_255C7DF58();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23910);
  swift_getTupleTypeMetadata2();
  uint64_t v20 = sub_255C80318();
  uint64_t v116 = (uint64_t *)swift_getWitnessTable();
  uint64_t v117 = v20;
  uint64_t v21 = sub_255C7FF98();
  uint64_t v110 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v118 = (char *)&v109 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23918);
  uint64_t v111 = v21;
  uint64_t v23 = sub_255C7E458();
  uint64_t v119 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v139 = (char *)&v109 - v24;
  uint64_t v120 = v25;
  uint64_t v26 = sub_255C7E458();
  uint64_t v122 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v121 = (char *)&v109 - v27;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F23920);
  uint64_t v123 = v26;
  uint64_t v28 = sub_255C7E458();
  uint64_t v125 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v124 = (char *)&v109 - v29;
  uint64_t v126 = v30;
  uint64_t v31 = sub_255C7E458();
  uint64_t v130 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v127 = (char *)&v109 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BCE0);
  uint64_t v131 = v31;
  uint64_t v33 = sub_255C7E458();
  uint64_t v132 = *(void *)(v33 - 8);
  uint64_t v133 = v33;
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v128 = (char *)&v109 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v129 = (char *)&v109 - v37;
  uint64_t v38 = v143;
  uint64_t v39 = *((void *)v143 - 1);
  uint64_t v40 = MEMORY[0x270FA5388](v36);
  uint64_t v114 = v41;
  uint64_t v115 = (char *)&v109 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  unint64_t v43 = (uint64_t *)((char *)&v109 - v42);
  uint64_t v44 = v140;
  uint64_t v45 = *(void *)(*(void *)(sub_255B04CEC() + 16) + 72);
  swift_getKeyPath();
  uint64_t v154 = v45;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  double v46 = *(double *)(v45 + 88);
  swift_release();
  uint64_t v138 = v39;
  uint64_t v47 = *(void (**)(uint64_t *, uint64_t, int *))(v39 + 16);
  uint64_t v48 = v44;
  uint64_t v49 = v38;
  v47(v43, v48, v38);
  uint64_t v112 = (void (*)(char *, uint64_t, int *))v47;
  uint64_t v113 = v39 + 16;
  if (v46 == 0.0)
  {
    char v50 = 1;
  }
  else
  {
    uint64_t v53 = v43[1];
    uint64_t v154 = *v43;
    uint64_t v155 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F24130);
    sub_255C7FE68();
    uint64_t v54 = *(void *)(*(void *)(v179 + 16) + 72);
    swift_getKeyPath();
    uint64_t v154 = v54;
    sub_255C7D718();
    swift_release();
    int v55 = *(unsigned __int8 *)(v54 + 57);
    swift_release();
    if (v55)
    {
      uint64_t v51 = v110;
      uint64_t v52 = v111;
      char v56 = sub_255C81428();
      swift_bridgeObjectRelease();
      char v50 = v56 ^ 1;
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    char v50 = 0;
  }
  uint64_t v51 = v110;
  uint64_t v52 = v111;
LABEL_6:
  uint64_t v57 = (*(uint64_t (**)(uint64_t *, int *))(v138 + 8))(v43, v49);
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = v141;
  uint64_t v58 = v142;
  *(&v109 - 4) = v142;
  *(&v109 - 3) = v59;
  uint64_t v60 = v58;
  *((unsigned char *)&v109 - 16) = v50 & 1;
  uint64_t v61 = v140;
  *(&v109 - 1) = v140;
  sub_255C7EA58();
  uint64_t v62 = v118;
  uint64_t v63 = sub_255C7FF88();
  uint64_t v116 = &v109;
  MEMORY[0x270FA5388](v63);
  *(&v109 - 4) = v60;
  *(&v109 - 3) = v59;
  *(&v109 - 2) = v61;
  sub_255C801F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23940);
  uint64_t v117 = swift_getWitnessTable();
  sub_255B162F8();
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v62, v52);
  uint64_t v64 = v143;
  uint64_t v65 = sub_255B04CEC();
  uint64_t v118 = (char *)v65;
  uint64_t v66 = v61 + v64[13];
  uint64_t v67 = *(void *)v66;
  LOBYTE(v59) = *(unsigned char *)(v66 + 8);
  uint64_t v68 = v61 + v64[14];
  LOBYTE(v60) = *(unsigned char *)v68;
  LODWORD(v116) = *(unsigned __int8 *)(v68 + 1);
  LODWORD(v111) = *(unsigned __int8 *)(v68 + 2);
  uint64_t v69 = v64[16];
  uint64_t v70 = *(void *)(v61 + v64[15]);
  uint64_t v71 = *(void *)(v68 + 8);
  LOBYTE(v62) = *(unsigned char *)(v68 + 16);
  uint64_t v72 = *(void *)(v61 + v69);
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_255B04FA0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v154 = v65;
  uint64_t v155 = v67;
  LOBYTE(v156) = v59;
  LOBYTE(v157) = v60;
  BYTE1(v157) = (_BYTE)v116;
  BYTE2(v157) = v111;
  uint64_t v158 = v71;
  char v159 = (char)v62;
  uint64_t v160 = v70;
  uint64_t v161 = v72;
  uint64_t v162 = v73;
  uint64_t v163 = KeyPath;
  uint64_t v75 = KeyPath;
  char v164 = 0;
  uint64_t v76 = sub_255A09998(&qword_269F23960, &qword_269F23918);
  uint64_t v152 = v117;
  uint64_t v153 = v76;
  uint64_t v77 = MEMORY[0x263F18E48];
  uint64_t v78 = v120;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v80 = v121;
  uint64_t v81 = v139;
  MEMORY[0x25A295390](&v154, v78, &type metadata for ScrubberStateChangeModifier, v79);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_255A087D0(v75, 0);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v81, v78);
  uint64_t v82 = v115;
  uint64_t v83 = v143;
  v112(v115, v61, v143);
  uint64_t v84 = v138;
  unint64_t v85 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
  uint64_t v86 = swift_allocObject();
  uint64_t v87 = v141;
  *(void *)(v86 + 16) = v142;
  *(void *)(v86 + 24) = v87;
  (*(void (**)(unint64_t, char *, int *))(v84 + 32))(v86 + v85, v82, v83);
  unint64_t v88 = sub_255B16474();
  uint64_t v150 = v79;
  unint64_t v151 = v88;
  uint64_t v89 = v77;
  uint64_t v90 = v123;
  uint64_t v91 = swift_getWitnessTable();
  sub_255A1A1D4();
  unint64_t v92 = v124;
  sub_255C7F818();
  swift_release();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v80, v90);
  uint64_t v154 = sub_255B04CEC();
  uint64_t v93 = sub_255A09998(&qword_269F22F78, (uint64_t *)&unk_269F23920);
  uint64_t v148 = v91;
  uint64_t v149 = v93;
  uint64_t v117 = v89;
  uint64_t v94 = v126;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v96 = v127;
  MEMORY[0x25A295390](&v154, v94, &type metadata for ScrubberWindowPropertiesModifier, v95);
  swift_release();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v92, v94);
  swift_getKeyPath();
  uint64_t v98 = v134;
  uint64_t v97 = v135;
  uint64_t v99 = v136;
  (*(void (**)(char *, void, uint64_t))(v135 + 104))(v134, *MEMORY[0x263F18DC8], v136);
  unint64_t v100 = sub_255B1652C();
  uint64_t v146 = v95;
  unint64_t v147 = v100;
  uint64_t v101 = v131;
  uint64_t v102 = swift_getWitnessTable();
  uint64_t v103 = v128;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v96, v101);
  uint64_t v104 = sub_255A09998(&qword_26B29BCD8, &qword_26B29BCE0);
  uint64_t v144 = v102;
  uint64_t v145 = v104;
  uint64_t v105 = v133;
  swift_getWitnessTable();
  uint64_t v106 = v129;
  sub_255A20F54(v103);
  uint64_t v107 = *(void (**)(char *, uint64_t))(v132 + 8);
  v107(v103, v105);
  sub_255A20F54(v106);
  return ((uint64_t (*)(char *, uint64_t))v107)(v106, v105);
}

uint64_t sub_255B06388@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v54 = a2;
  int v53 = a1;
  uint64_t v55 = a5;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v52 = type metadata accessor for Scrubber();
  uint64_t v50 = *(void *)(v52 - 8);
  uint64_t v51 = *(void *)(v50 + 64);
  MEMORY[0x270FA5388](v52);
  uint64_t v49 = (char *)&v39 - v5;
  uint64_t v56 = sub_255C7EF58();
  MEMORY[0x270FA5388](v56);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23868);
  type metadata accessor for Scrubber.CompanionViews();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23870);
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = MEMORY[0x263F189A8];
  uint64_t v77 = WitnessTable;
  uint64_t v78 = MEMORY[0x263F189A8];
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = sub_255A09998(&qword_269F23878, &qword_269F23870);
  uint64_t v75 = v10;
  uint64_t v76 = v11;
  uint64_t v12 = swift_getWitnessTable();
  unint64_t v13 = sub_255AA79F0();
  uint64_t v73 = v12;
  unint64_t v74 = v13;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v72 = v9;
  swift_getWitnessTable();
  sub_255C7E598();
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23888);
  uint64_t v14 = sub_255C7E458();
  uint64_t v15 = sub_255C7D668();
  unint64_t v45 = v15;
  unint64_t v16 = sub_255B15F24();
  uint64_t v17 = swift_getWitnessTable();
  unint64_t v69 = v16;
  uint64_t v70 = v17;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v68 = MEMORY[0x263F18880];
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = sub_255A09998(&qword_269F23908, &qword_269F23888);
  uint64_t v65 = v18;
  uint64_t v66 = v19;
  uint64_t v46 = v14;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v44 = v20;
  uint64_t v43 = sub_255B12C70(&qword_26B29DE10, MEMORY[0x263F07490]);
  uint64_t v61 = v14;
  unint64_t v62 = v15;
  uint64_t v63 = v20;
  uint64_t v64 = v43;
  uint64_t v42 = MEMORY[0x263F1B270];
  swift_getOpaqueTypeMetadata2();
  uint64_t v39 = sub_255C7E458();
  uint64_t v41 = sub_255B12C70(&qword_26B29EE68, MEMORY[0x263F1A1B0]);
  uint64_t v21 = sub_255C7DF58();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v40 = (char *)&v39 - v26;
  sub_255C7EF48();
  uint64_t v27 = v50;
  uint64_t v28 = v49;
  uint64_t v29 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v54, v52);
  unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v48;
  *(void *)(v31 + 16) = v47;
  *(void *)(v31 + 24) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v31 + v30, v28, v29);
  uint64_t v61 = v46;
  unint64_t v62 = v45;
  uint64_t v63 = v44;
  uint64_t v64 = v43;
  v60[3] = swift_getOpaqueTypeConformance2();
  v60[4] = MEMORY[0x263F18C10];
  uint64_t v33 = v39;
  uint64_t v34 = swift_getWitnessTable();
  sub_255B08EA8((uint64_t)v7, (uint64_t)sub_255B20CD0, v31, v56, v33, v41, v34);
  v60[2] = v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = v40;
  sub_255A20F54(v25);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v22 + 8);
  v37(v25, v21);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v36, v21);
  uint64_t v61 = 0x2D2D3A2D2DLL;
  unint64_t v62 = 0xE500000000000000;
  LOBYTE(v63) = 0;
  v60[0] = v25;
  v60[1] = &v61;
  v59[0] = v21;
  v59[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23910);
  uint64_t v57 = v35;
  uint64_t v58 = sub_255B160B0(&qword_269F24118, &qword_269F23910, (void (*)(void))sub_255B1E418, (void (*)(void))sub_255B20D98);
  sub_255AF64A0((uint64_t)v60, 2uLL, (uint64_t)v59);
  v37(v36, v21);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v37)(v25, v21);
}

uint64_t sub_255B06B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v175 = a2;
  uint64_t v163 = a1;
  uint64_t v169 = a5;
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68);
  uint64_t v167 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v162 = v7;
  uint64_t v166 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = a3;
  uint64_t v173 = a4;
  uint64_t v176 = type metadata accessor for Scrubber();
  uint64_t v161 = *(void *)(v176 - 8);
  uint64_t v159 = *(void *)(v161 + 64);
  MEMORY[0x270FA5388](v176);
  uint64_t v160 = (char *)&v120 - v8;
  uint64_t v172 = sub_255C7D668();
  uint64_t v165 = *(void *)(v172 - 8);
  MEMORY[0x270FA5388](v172);
  char v164 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_255C7EA18();
  uint64_t v155 = *(void *)(v156 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v156);
  uint64_t v152 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v151 = (uint64_t)&v120 - v12;
  uint64_t v158 = sub_255C802C8();
  uint64_t v157 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  uint64_t v154 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for MediaTimelineControl(0) - 8;
  MEMORY[0x270FA5388](v120);
  uint64_t v15 = (uint64_t *)((char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F238D0) - 8;
  MEMORY[0x270FA5388](v122);
  uint64_t v121 = (uint64_t)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F238C0) - 8;
  MEMORY[0x270FA5388](v124);
  uint64_t v123 = (uint64_t)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F238B0) - 8;
  MEMORY[0x270FA5388](v125);
  uint64_t v170 = (uint64_t)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F238A0);
  MEMORY[0x270FA5388](v130);
  uint64_t v138 = (uint64_t)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23868);
  MEMORY[0x270FA5388](v20);
  uint64_t v143 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Scrubber.CompanionViews();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23870);
  sub_255C7E458();
  sub_255C7E458();
  uint64_t v22 = sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = MEMORY[0x263F189A8];
  uint64_t v199 = WitnessTable;
  uint64_t v200 = MEMORY[0x263F189A8];
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = sub_255A09998(&qword_269F23878, &qword_269F23870);
  uint64_t v197 = v25;
  uint64_t v198 = v26;
  uint64_t v27 = swift_getWitnessTable();
  unint64_t v28 = sub_255AA79F0();
  uint64_t v195 = v27;
  unint64_t v196 = v28;
  uint64_t v193 = swift_getWitnessTable();
  uint64_t v194 = v24;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v134 = v22;
  uint64_t v128 = v29;
  sub_255C7E598();
  uint64_t v144 = v20;
  uint64_t v30 = sub_255C7E458();
  uint64_t v132 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v131 = (char *)&v120 - v31;
  uint64_t v32 = sub_255C7E458();
  uint64_t v136 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v135 = (char *)&v120 - v33;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23888);
  uint64_t v34 = sub_255C7E458();
  uint64_t v150 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v171 = (char *)&v120 - v35;
  unint64_t v36 = sub_255B15F24();
  uint64_t v37 = swift_getWitnessTable();
  unint64_t v126 = v36;
  unint64_t v191 = v36;
  uint64_t v192 = v37;
  uint64_t v133 = v30;
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v189 = v127;
  uint64_t v190 = MEMORY[0x263F18880];
  uint64_t v137 = v32;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = sub_255A09998(&qword_269F23908, &qword_269F23888);
  uint64_t v129 = v38;
  uint64_t v187 = v38;
  uint64_t v188 = v39;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = sub_255B12C70(&qword_26B29DE10, MEMORY[0x263F07490]);
  uint64_t v153 = v34;
  uint64_t v179 = v34;
  uint64_t v180 = v172;
  uint64_t v146 = v40;
  uint64_t v181 = v40;
  uint64_t v140 = v41;
  uint64_t v182 = v41;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v145 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v139 = (char *)&v120 - v43;
  uint64_t v147 = v44;
  uint64_t v149 = sub_255C7E458();
  uint64_t v148 = *(void *)(v149 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v149);
  uint64_t v141 = (char *)&v120 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v142 = (char *)&v120 - v47;
  *uint64_t v15 = sub_255B04CEC();
  uint64_t v48 = v120;
  uint64_t v49 = (uint64_t *)((char *)v15 + *(int *)(v120 + 28));
  *uint64_t v49 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = (char *)v15 + *(int *)(v48 + 32);
  *(void *)uint64_t v50 = swift_getKeyPath();
  v50[8] = 0;
  uint64_t v51 = sub_255B04CEC();
  uint64_t v52 = v121;
  sub_255B206A4((uint64_t)v15, v121, type metadata accessor for MediaTimelineControl);
  *(void *)(v52 + *(int *)(v122 + 44)) = v51;
  sub_255B2075C((uint64_t)v15, type metadata accessor for MediaTimelineControl);
  uint64_t v53 = sub_255B04CEC();
  swift_getKeyPath();
  uint64_t v179 = v53;
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  LOBYTE(v51) = *(unsigned char *)(v53 + 56);
  swift_release();
  uint64_t v54 = v123;
  sub_255A09540(v52, v123, &qword_269F238D0);
  *(unsigned char *)(v54 + *(int *)(v124 + 44)) = v51;
  sub_255A095A4(v52, &qword_269F238D0);
  *(void *)&long long v124 = sub_255C801F8();
  uint64_t v56 = v55;
  sub_255B0821C((uint64_t)&v179);
  LOBYTE(v53) = v179;
  uint64_t v57 = v180;
  LOBYTE(v52) = v181;
  uint64_t v58 = v182;
  LOBYTE(v36) = v183;
  uint64_t v59 = v184;
  char v60 = v185;
  uint64_t v61 = v186;
  uint64_t v62 = v170;
  sub_255A09540(v54, v170, &qword_269F238C0);
  uint64_t v63 = v62 + *(int *)(v125 + 44);
  *(void *)uint64_t v63 = v124;
  *(void *)(v63 + 8) = v56;
  *(unsigned char *)(v63 + 16) = v53;
  *(void *)(v63 + 24) = v57;
  *(unsigned char *)(v63 + 32) = v52;
  *(void *)(v63 + 40) = v58;
  *(unsigned char *)(v63 + 48) = v36;
  *(void *)(v63 + 56) = v59;
  *(unsigned char *)(v63 + 64) = v60;
  *(void *)(v63 + 72) = v61;
  sub_255A095A4(v54, &qword_269F238C0);
  uint64_t v64 = *(void *)(*(void *)(sub_255B04CEC() + 16) + 72);
  swift_getKeyPath();
  uint64_t v179 = v64;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  LODWORD(v56) = *(unsigned __int8 *)(v64 + 57);
  swift_release();
  if (v56 == 1) {
    char v65 = 1;
  }
  else {
    char v65 = sub_255C81428();
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = v175;
  uint64_t v67 = *(void *)(sub_255B04CEC() + 16);
  swift_getKeyPath();
  uint64_t v179 = v67;
  uint64_t v125 = sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  long long v124 = *(_OWORD *)(v67 + 32);
  uint64_t v68 = *(void *)(v67 + 48);
  uint64_t v69 = *(void *)(v67 + 56);
  swift_release();
  uint64_t v70 = v170;
  uint64_t v71 = v138;
  sub_255A09540(v170, v138, &qword_269F238B0);
  uint64_t v72 = v71 + *(int *)(v130 + 36);
  *(unsigned char *)uint64_t v72 = v65 & 1;
  *(_OWORD *)(v72 + 8) = v124;
  *(void *)(v72 + 24) = v68;
  *(void *)(v72 + 32) = v69;
  sub_255A095A4(v70, &qword_269F238B0);
  uint64_t v73 = v151;
  sub_255ABA66C(v151);
  uint64_t v74 = v155;
  uint64_t v75 = v152;
  uint64_t v76 = v156;
  (*(void (**)(char *, void, uint64_t))(v155 + 104))(v152, *MEMORY[0x263F19978], v156);
  sub_255B12C70(&qword_26B298580, MEMORY[0x263F19988]);
  char v77 = sub_255C80578();
  uint64_t v78 = *(void (**)(char *, uint64_t))(v74 + 8);
  v78(v75, v76);
  v78((char *)v73, v76);
  uint64_t v79 = (unsigned int *)MEMORY[0x263F1B998];
  if ((v77 & 1) == 0) {
    uint64_t v79 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v80 = v157;
  uint64_t v81 = v154;
  uint64_t v82 = v158;
  (*(void (**)(char *, void, uint64_t))(v157 + 104))(v154, *v79, v158);
  uint64_t v83 = (uint64_t)v143;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(&v143[*(int *)(v144 + 36)], v81, v82);
  sub_255A09540(v71, v83, &qword_269F238A0);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
  sub_255A095A4(v71, &qword_269F238A0);
  uint64_t v84 = sub_255C801E8();
  MEMORY[0x270FA5388](v84);
  uint64_t v85 = v173;
  *(&v120 - 4) = v174;
  *(&v120 - 3) = v85;
  *(&v120 - 2) = v66;
  uint64_t v86 = v131;
  sub_255C7FAC8();
  sub_255A095A4(v83, &qword_269F23868);
  uint64_t v87 = *(void *)(sub_255B04CEC() + 16);
  swift_getKeyPath();
  uint64_t v179 = v87;
  sub_255C7D718();
  swift_release();
  swift_release();
  sub_255C80378();
  unint64_t v88 = v135;
  uint64_t v89 = v133;
  sub_255C7F6D8();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v86, v89);
  if (qword_269F1FFC0 != -1) {
    swift_once();
  }
  uint64_t v90 = v176;
  uint64_t v91 = v175;
  uint64_t v92 = *(void *)(sub_255B04CEC() + 16);
  swift_getKeyPath();
  uint64_t v179 = v92;
  sub_255C7D718();
  swift_release();
  uint64_t v93 = *(void *)(v92 + 64);
  swift_release();
  uint64_t v179 = v93;
  uint64_t v94 = v137;
  sub_255C7FB68();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v88, v94);
  uint64_t v95 = v164;
  uint64_t v96 = v168;
  uint64_t v97 = v163;
  sub_255C7DF28();
  uint64_t v98 = v91;
  uint64_t v99 = v161;
  unint64_t v100 = v160;
  (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v160, v98, v90);
  uint64_t v101 = v167;
  uint64_t v102 = v166;
  (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v166, v97, v96);
  unint64_t v103 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
  unint64_t v104 = (v159 + *(unsigned __int8 *)(v101 + 80) + v103) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  uint64_t v105 = swift_allocObject();
  uint64_t v106 = v173;
  *(void *)(v105 + 16) = v174;
  *(void *)(v105 + 24) = v106;
  (*(void (**)(unint64_t, char *, uint64_t))(v99 + 32))(v105 + v103, v100, v90);
  (*(void (**)(unint64_t, char *, uint64_t))(v101 + 32))(v105 + v104, v102, v96);
  uint64_t v107 = v139;
  uint64_t v108 = v153;
  uint64_t v109 = v172;
  uint64_t v110 = v146;
  uint64_t v111 = v140;
  uint64_t v112 = v171;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v165 + 8))(v95, v109);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v112, v108);
  sub_255C7F1F8();
  if (qword_269F1FF38 != -1) {
    swift_once();
  }
  uint64_t v179 = v108;
  uint64_t v180 = v109;
  uint64_t v181 = v110;
  uint64_t v182 = v111;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v114 = v141;
  uint64_t v115 = v147;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v107, v115);
  uint64_t v177 = OpaqueTypeConformance2;
  uint64_t v178 = MEMORY[0x263F18C10];
  uint64_t v116 = v149;
  swift_getWitnessTable();
  uint64_t v117 = v142;
  sub_255A20F54(v114);
  uint64_t v118 = *(void (**)(char *, uint64_t))(v148 + 8);
  v118(v114, v116);
  sub_255A20F54(v117);
  return ((uint64_t (*)(char *, uint64_t))v118)(v117, v116);
}

uint64_t sub_255B0821C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Scrubber();
  uint64_t v2 = sub_255B04CEC();
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  char v12 = *(unsigned char *)(v2 + 72);
  swift_release();
  uint64_t v3 = *(void *)(*(void *)(*(void *)(sub_255B04CEC() + 16) + 72) + 80);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  uint64_t v11 = *(void *)(v3 + 24);
  char v10 = *(unsigned char *)(v3 + 32);
  swift_release();
  uint64_t v4 = sub_255B04CEC();
  swift_getKeyPath();
  sub_255C7D718();
  swift_release();
  uint64_t v5 = *(void *)(v4 + 64);
  LOBYTE(v3) = *(unsigned char *)(v4 + 72);
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(*(void *)(sub_255B04CEC() + 16) + 72) + 80);
  swift_getKeyPath();
  sub_255C7D718();
  swift_release();
  uint64_t v7 = *(void *)(v6 + 40);
  LOBYTE(v2) = *(unsigned char *)(v6 + 48);
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(*(void *)(sub_255B04CEC() + 16) + 72) + 96);
  uint64_t result = swift_release();
  *(unsigned char *)a1 = (v12 & 1) == 0;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v2;
  *(void *)(a1 + 56) = v8;
  return result;
}

uint64_t sub_255B084B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v63 = a3;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Scrubber.CompanionViews();
  uint64_t v50 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v48 - v9;
  uint64_t v48 = v11;
  uint64_t v12 = sub_255C7E458();
  uint64_t v54 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v48 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23870);
  uint64_t v52 = v12;
  uint64_t v15 = sub_255C7E458();
  uint64_t v55 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v53 = (char *)&v48 - v16;
  uint64_t v56 = v17;
  uint64_t v18 = sub_255C7E458();
  uint64_t v60 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v57 = (char *)&v48 - v19;
  uint64_t v61 = v20;
  uint64_t v21 = sub_255C7E458();
  uint64_t v62 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v58 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v59 = (char *)&v48 - v24;
  uint64_t v25 = type metadata accessor for Scrubber();
  uint64_t v26 = sub_255B04CEC();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v25 + 68), a2);
  uint64_t v49 = v10;
  sub_255B08CFC(v26, (uint64_t)v7, a2, v10);
  uint64_t v51 = a1;
  uint64_t v27 = *(void *)(*(void *)(sub_255B04CEC() + 16) + 72);
  swift_getKeyPath();
  uint64_t v72 = v27;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  LODWORD(v26) = *(unsigned __int8 *)(v27 + 57);
  swift_release();
  if (v26 != 1) {
    sub_255C81428();
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = v48;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = v49;
  sub_255C7FA68();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v28);
  if (qword_269F1FFC0 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)(*(void *)(sub_255B04CEC() + 16) + 72);
  swift_getKeyPath();
  uint64_t v72 = v31;
  sub_255C7D718();
  swift_release();
  char v32 = *(unsigned char *)(v31 + 57);
  swift_release();
  LOBYTE(v72) = v32;
  uint64_t v33 = MEMORY[0x263F189A8];
  uint64_t v70 = WitnessTable;
  uint64_t v71 = MEMORY[0x263F189A8];
  uint64_t v34 = v52;
  uint64_t v35 = swift_getWitnessTable();
  sub_255B18E4C();
  unint64_t v36 = v53;
  sub_255C7FB68();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v34);
  uint64_t v37 = sub_255A09998(&qword_269F23878, &qword_269F23870);
  uint64_t v68 = v35;
  uint64_t v69 = v37;
  uint64_t v38 = v56;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v57;
  sub_255AA78A8(v38, v39, 0.0, 1.0);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v38);
  if (qword_269F1FF38 != -1) {
    swift_once();
  }
  unint64_t v41 = sub_255AA79F0();
  uint64_t v66 = v39;
  unint64_t v67 = v41;
  uint64_t v42 = v61;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v58;
  sub_255C7FA68();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v42);
  uint64_t v64 = v43;
  uint64_t v65 = v33;
  swift_getWitnessTable();
  uint64_t v45 = v59;
  sub_255A20F54(v44);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v62 + 8);
  v46(v44, v21);
  sub_255A20F54(v45);
  return ((uint64_t (*)(char *, uint64_t))v46)(v45, v21);
}

uint64_t sub_255B08CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  *(void *)a4 = a1;
  uint64_t v7 = type metadata accessor for Scrubber.CompanionViews();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(&a4[*(int *)(v7 + 36)], a2, a3);
  uint64_t v8 = &a4[*(int *)(v7 + 40)];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v8 = result;
  v8[8] = 0;
  return result;
}

uint64_t sub_255B08D98()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F20);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Scrubber();
  sub_255B04CEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68);
  sub_255C7DF28();
  uint64_t v3 = sub_255C7D668();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  sub_255AFBAC4((uint64_t)v2);
  return swift_release();
}

uint64_t sub_255B08EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a4;
  _OWORD v17[3] = a5;
  v17[4] = a6;
  void v17[5] = a7;
  v17[6] = a2;
  void v17[7] = a3;
  sub_255C7DF48();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, a4);
}

uint64_t sub_255B09000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1)@<X8>)
{
  uint64_t v8 = type metadata accessor for Scrubber();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v17 - v11;
  uint64_t result = sub_255B04FF8(v10);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v16, v12, v8);
    uint64_t v14 = sub_255B20CAC;
  }
  *a4 = v14;
  a4[1] = (uint64_t (*)(uint64_t))v15;
  return result;
}

uint64_t sub_255B09150@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_255C7EC88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ScrubberTooltipModifier(0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (CGFloat *)((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25[0] = sub_255C7FC78();
  type metadata accessor for Scrubber();
  uint64_t v10 = *(void *)(sub_255B04CEC() + 16);
  swift_retain();
  swift_release();
  sub_255C7ED98();
  sub_255C7E0E8();
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v26.origin.CGFloat x = v12;
  v26.origin.CGFloat y = v14;
  v26.size.CGFloat width = v16;
  v26.size.CGFloat height = v18;
  CGFloat MinX = CGRectGetMinX(v26);
  *(void *)uint64_t v9 = v10;
  v9[1] = MinX;
  v25[1] = 0;
  sub_255C7FE58();
  uint64_t v20 = v25[3];
  void v9[2] = *(CGFloat *)&v25[2];
  *((void *)v9 + 3) = v20;
  uint64_t v21 = (uint64_t *)((char *)v9 + *(int *)(v7 + 36));
  *uint64_t v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)((char *)v9 + *(int *)(v7 + 40));
  *uint64_t v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24110);
  sub_255B206A4((uint64_t)v9, (uint64_t)a1 + *(int *)(v23 + 36), type metadata accessor for ScrubberTooltipModifier);
  *a1 = v25[0];
  return sub_255B2075C((uint64_t)v9, type metadata accessor for ScrubberTooltipModifier);
}

uint64_t sub_255B093F8()
{
  return swift_release();
}

uint64_t sub_255B09508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v18[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23DF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23DF8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  sub_255C7FED8();
  type metadata accessor for Scrubber.SensitivityLabel();
  sub_255C7EBE8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23E00);
  swift_getTupleTypeMetadata3();
  sub_255C80318();
  sub_255A09998(&qword_269F23E08, &qword_269F23DF0);
  uint64_t v6 = sub_255C7E1B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  CGFloat v12 = (char *)v18 - v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v4;
  *(void *)(v13 + 24) = v5;
  uint64_t v20 = v4;
  uint64_t v21 = v5;
  uint64_t v22 = v2;
  sub_255B097C8((uint64_t)sub_255B1E27C, (uint64_t)v19, (uint64_t)v10);
  swift_release();
  uint64_t v14 = sub_255A09998(&qword_269F23E10, &qword_269F23DF0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = v14;
  uint64_t v24 = WitnessTable;
  swift_getWitnessTable();
  sub_255A20F54(v10);
  CGFloat v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v10, v6);
  sub_255A20F54(v12);
  return ((uint64_t (*)(char *, uint64_t))v16)(v12, v6);
}

uint64_t sub_255B097C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23DF8);
  sub_255C7FED8();
  type metadata accessor for Scrubber.SensitivityLabel();
  sub_255C7EBE8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23E00);
  swift_getTupleTypeMetadata3();
  uint64_t v6 = sub_255C80318();
  unint64_t v7 = sub_255B1E5BC();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_255AF6EAC(a1, a2, (uint64_t)&type metadata for ScrubberCompanionViewLayout, v6, v7, WitnessTable, a3);
}

uint64_t sub_255B098D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v111 = a4;
  uint64_t v7 = type metadata accessor for Scrubber.SensitivityLabel();
  uint64_t v98 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v97 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v96 = (char *)&v93 - v10;
  uint64_t v11 = sub_255C7FED8();
  uint64_t v95 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v94 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v93 = (char *)&v93 - v14;
  uint64_t v107 = v7;
  uint64_t v15 = sub_255C7EBE8();
  uint64_t v109 = *(void *)(v15 - 8);
  uint64_t v110 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v108 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v116 = (char *)&v93 - v18;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23E18);
  MEMORY[0x270FA5388](v101);
  uint64_t v20 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = a2;
  uint64_t v104 = a3;
  uint64_t v21 = type metadata accessor for Scrubber.CompanionViews();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v100 = (char *)&v93 - v23;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23DF8);
  uint64_t v24 = MEMORY[0x270FA5388](v114);
  uint64_t v106 = (uint64_t)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v93 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v115 = (uint64_t)&v93 - v29;
  uint64_t v105 = a1;
  uint64_t v30 = *a1;
  swift_getKeyPath();
  *(void *)&v142[0] = v30;
  uint64_t v112 = sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  uint64_t v31 = v21;
  if (*(unsigned char *)(v30 + 57))
  {
    uint64_t v32 = 0xE500000000000000;
    uint64_t v99 = 0x2D2D3A2D2DLL;
  }
  else
  {
    uint64_t v99 = sub_255AFB928();
    uint64_t v32 = v33;
  }
  uint64_t v34 = *(void *)(*(void *)(v30 + 16) + 72);
  swift_getKeyPath();
  *(void *)&v142[0] = v34;
  uint64_t v102 = sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  swift_release();
  int v35 = *(unsigned __int8 *)(v34 + 57);
  uint64_t v113 = v11;
  if (v35)
  {
    uint64_t v36 = v31;
    if (v35 == 1)
    {
      char v37 = 1;
      uint64_t v38 = v100;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v36 = v31;
  }
  uint64_t v38 = v100;
  char v37 = sub_255C81428();
LABEL_9:
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_255C80208();
  sub_255A589AC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v154, 0.0, 1, 0.0, 1, v39, v40, v99, v32, v37 & 1);
  swift_bridgeObjectRelease();
  long long v151 = v154[6];
  long long v152 = v154[7];
  uint64_t v153 = v155;
  long long v147 = v154[2];
  long long v148 = v154[3];
  long long v149 = v154[4];
  long long v150 = v154[5];
  long long v145 = v154[0];
  long long v146 = v154[1];
  unint64_t v41 = v105;
  uint64_t v42 = *v105;
  swift_getKeyPath();
  *(void *)&v142[0] = v42;
  sub_255C7D718();
  swift_release();
  char v43 = *(unsigned char *)(v42 + 58);
  (*(void (**)(char *, uint64_t *, uint64_t))(v22 + 16))(v38, v41, v36);
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v38, v36);
    double v44 = 0.0;
  }
  else
  {
    uint64_t v45 = &v38[*(int *)(v36 + 40)];
    uint64_t v46 = *(void *)v45;
    char v47 = v45[8];
    sub_255A0877C(*(void *)v45, v47);
    char v48 = sub_255ABA6A4(v46, v47);
    sub_255A087D0(v46, v47);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v38, v36);
    if (v48) {
      double v44 = 1.0;
    }
    else {
      double v44 = 0.0;
    }
  }
  uint64_t v49 = sub_255C80208();
  uint64_t v51 = v50;
  sub_255B0A65C(v41, (uint64_t)v20);
  uint64_t v52 = (uint64_t *)&v20[*(int *)(v101 + 36)];
  *uint64_t v52 = v49;
  v52[1] = v51;
  sub_255A09540((uint64_t)v20, (uint64_t)&v28[*(int *)(v114 + 36)], &qword_269F23E18);
  long long v53 = v152;
  *((_OWORD *)v28 + 6) = v151;
  *((_OWORD *)v28 + 7) = v53;
  *((void *)v28 + 16) = v153;
  long long v54 = v148;
  *((_OWORD *)v28 + 2) = v147;
  *((_OWORD *)v28 + 3) = v54;
  long long v55 = v150;
  *((_OWORD *)v28 + 4) = v149;
  *((_OWORD *)v28 + 5) = v55;
  long long v56 = v146;
  *(_OWORD *)uint64_t v28 = v145;
  *((_OWORD *)v28 + 1) = v56;
  *((double *)v28 + 17) = v44;
  sub_255A095A4((uint64_t)v20, &qword_269F23E18);
  sub_255A10514((uint64_t)v28, v115, &qword_269F23DF8);
  uint64_t v57 = *v41;
  swift_getKeyPath();
  *(void *)&v142[0] = v57;
  sub_255C7D718();
  swift_release();
  if (*(void *)(v57 + 40))
  {
    uint64_t v58 = *v41;
    swift_getKeyPath();
    *(void *)&v142[0] = v58;
    sub_255C7D718();
    swift_release();
    uint64_t v59 = v97;
    sub_255B0AA9C(*(void *)(v58 + 40), v97);
    uint64_t v60 = v107;
    swift_getWitnessTable();
    uint64_t v61 = v96;
    sub_255A20F54(v59);
    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v62(v59, v60);
    sub_255A20F54(v61);
    uint64_t v63 = v113;
    swift_getWitnessTable();
    sub_255A44128(v59, v63, v60);
    v62(v59, v60);
    uint64_t v64 = v61;
    uint64_t v65 = v60;
  }
  else
  {
    uint64_t v66 = sub_255C7E908();
    MEMORY[0x270FA5388](v66);
    uint64_t v67 = (uint64_t)v94;
    sub_255C7FEC8();
    uint64_t v68 = v113;
    swift_getWitnessTable();
    uint64_t v69 = v93;
    sub_255A20F54(v67);
    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
    v62(v67, v68);
    sub_255A20F54(v69);
    swift_getWitnessTable();
    sub_255A44030(v67, v68);
    v62(v67, v68);
    uint64_t v64 = v69;
    uint64_t v65 = v68;
  }
  v62((uint64_t)v64, v65);
  uint64_t v70 = *v41;
  uint64_t v71 = sub_255AF757C();
  uint64_t v73 = v72;
  uint64_t v74 = *(void *)(*(void *)(v70 + 16) + 72);
  swift_getKeyPath();
  *(void *)&v142[0] = v74;
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v74 + 57) && *(unsigned char *)(v74 + 57) == 1) {
    char v75 = 1;
  }
  else {
    char v75 = sub_255C81428();
  }
  swift_bridgeObjectRelease();
  uint64_t v76 = sub_255C80218();
  sub_255A589AC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v143, 0.0, 1, 0.0, 1, v76, v77, v71, v73, v75 & 1);
  swift_bridgeObjectRelease();
  uint64_t v78 = (char *)v41 + *(int *)(v36 + 40);
  uint64_t v79 = *(void *)v78;
  char v80 = v78[8];
  sub_255A0877C(*(void *)v78, v80);
  char v81 = sub_255ABA6A4(v79, v80);
  sub_255A087D0(v79, v80);
  if (v81) {
    double v82 = 1.0;
  }
  else {
    double v82 = 0.0;
  }
  long long v139 = v143[6];
  long long v140 = v143[7];
  uint64_t v141 = v144;
  long long v135 = v143[2];
  long long v136 = v143[3];
  long long v137 = v143[4];
  long long v138 = v143[5];
  long long v133 = v143[0];
  long long v134 = v143[1];
  uint64_t v83 = v115;
  uint64_t v84 = v106;
  sub_255A09540(v115, v106, &qword_269F23DF8);
  v132[0] = v84;
  uint64_t v86 = v108;
  uint64_t v85 = v109;
  uint64_t v87 = v116;
  uint64_t v88 = v110;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v108, v116, v110);
  long long v129 = v139;
  long long v130 = v140;
  *(void *)&long long v131 = v141;
  long long v125 = v135;
  long long v126 = v136;
  long long v127 = v137;
  long long v128 = v138;
  long long v123 = v133;
  long long v124 = v134;
  *((double *)&v131 + 1) = v82;
  v132[1] = v86;
  v132[2] = &v123;
  v122[0] = v114;
  v122[1] = v88;
  v122[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23E00);
  unint64_t v119 = sub_255B1E2A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v117 = WitnessTable;
  uint64_t v118 = v90;
  uint64_t v120 = swift_getWitnessTable();
  uint64_t v121 = sub_255B1E39C(&qword_269F23E28, &qword_269F23E00, (void (*)(void))sub_255B1E36C);
  sub_255AF64A0((uint64_t)v132, 3uLL, (uint64_t)v122);
  uint64_t v91 = *(void (**)(char *, uint64_t))(v85 + 8);
  v91(v87, v88);
  sub_255A095A4(v83, &qword_269F23DF8);
  v142[6] = v129;
  v142[7] = v130;
  v142[8] = v131;
  v142[2] = v125;
  v142[3] = v126;
  v142[4] = v127;
  v142[5] = v128;
  v142[0] = v123;
  v142[1] = v124;
  sub_255AE0200((uint64_t)v142);
  v91(v86, v88);
  return sub_255A095A4(v84, &qword_269F23DF8);
}

uint64_t sub_255B0A65C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_255C7DCE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29EB58);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EBE0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  swift_getKeyPath();
  uint64_t v27 = v14;
  sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v14 + 58) == 1)
  {
    sub_255C7DEC8();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F18560], v3);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v16 = (uint64_t *)&v13[*(int *)(v10 + 36)];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EEA8);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v16 + *(int *)(v17 + 28), v6, v3);
    *uint64_t v16 = KeyPath;
    uint64_t v19 = v24;
    uint64_t v18 = v25;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v13, v9, v25);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v18);
    uint64_t v20 = v26;
    sub_255A10514((uint64_t)v13, v26, &qword_26B29EBE0);
    uint64_t v21 = 0;
    uint64_t v22 = v20;
  }
  else
  {
    uint64_t v21 = 1;
    uint64_t v22 = v26;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v22, v21, 1, v10);
}

uint64_t sub_255B0A9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Scrubber.CompanionViews();
  sub_255A20F54(a1 + *(int *)(v7 + 36));
  sub_255A20F54(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a2);
}

uint64_t sub_255B0AA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = swift_getKeyPath();
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for Scrubber.SensitivityLabel() + 40));
  *uint64_t v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23E50);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_255B0AB34()
{
  return sub_255B12B88((void (*)(void))sub_255B2128C);
}

uint64_t sub_255B0AB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24310);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24318);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24320);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFB8 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_269F33180;
  uint64_t v16 = *(void *)algn_269F33188;
  sub_255B0AD90(v3, *(void *)(a1 + 24), (uint64_t)v8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_255A09540((uint64_t)v8, (uint64_t)v11, &qword_269F24310);
  uint64_t v18 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *uint64_t v18 = KeyPath;
  v18[1] = v15;
  swift_retain();
  sub_255A095A4((uint64_t)v8, &qword_269F24310);
  sub_255A09540((uint64_t)v11, (uint64_t)v14, &qword_269F24318);
  *(void *)&v14[*(int *)(v12 + 36)] = v16;
  swift_retain();
  sub_255A095A4((uint64_t)v11, &qword_269F24318);
  sub_255A09540((uint64_t)v14, a2, &qword_269F24320);
  *(_WORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F24328) + 36)) = 256;
  return sub_255A095A4((uint64_t)v14, &qword_269F24320);
}

uint64_t sub_255B0AD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v54 = a3;
  uint64_t v4 = sub_255C7E378();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24330);
  MEMORY[0x270FA5388](v55);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24338);
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v53 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v51 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 8);
  char v16 = *(unsigned char *)(a1 + 16);
  sub_255A0877C(v15, v16);
  char v17 = sub_255ABA6A4(v15, v16);
  sub_255A087D0(v15, v16);
  if (v17)
  {
    uint64_t v56 = sub_255AF78CC(*(void *)a1);
    unint64_t v57 = v18;
    sub_255A1D78C();
    uint64_t v19 = sub_255C7F548();
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v50 = v22;
    char v25 = v24 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v27 = swift_getKeyPath();
    uint64_t v56 = v19;
    unint64_t v57 = v21;
    char v58 = v25;
    uint64_t v59 = v23;
    uint64_t v60 = KeyPath;
    uint64_t v61 = 2;
    char v62 = 0;
    uint64_t v63 = v27;
    char v64 = 1;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24350);
    unint64_t v29 = sub_255B23124();
    uint64_t v30 = v51;
    sub_255C7F898();
    sub_255A094C0(v19, v21, v25);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v32 = v52;
    uint64_t v31 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v12, v30, v53);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B748);
    uint64_t v56 = v28;
    unint64_t v57 = v29;
    swift_getOpaqueTypeConformance2();
    sub_255A53AF4();
    sub_255C7EBD8();
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v30, v31);
  }
  else
  {
    type metadata accessor for Scrubber.SensitivityLabel();
    sub_255ABC838((uint64_t)v10);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, *MEMORY[0x263F18D38], v4);
    sub_255B12C70((unint64_t *)&qword_269F24340, MEMORY[0x263F18D80]);
    char v34 = sub_255C80548();
    int v35 = *(void (**)(char *, uint64_t))(v5 + 8);
    v35(v8, v4);
    v35(v10, v4);
    uint64_t v36 = *(void *)a1;
    if (v34) {
      uint64_t v37 = sub_255B0B2B8(v36);
    }
    else {
      uint64_t v37 = sub_255AF78CC(v36);
    }
    uint64_t v56 = v37;
    unint64_t v57 = v38;
    sub_255A1D78C();
    uint64_t v39 = sub_255C7F548();
    uint64_t v41 = v40;
    char v43 = v42;
    uint64_t v45 = v44;
    uint64_t v46 = swift_getKeyPath();
    *(void *)uint64_t v12 = v39;
    *((void *)v12 + 1) = v41;
    v12[16] = v43 & 1;
    *((void *)v12 + 3) = v45;
    *((void *)v12 + 4) = v46;
    *((void *)v12 + 5) = 1;
    v12[48] = 0;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B748);
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24350);
    unint64_t v48 = sub_255B23124();
    uint64_t v56 = v47;
    unint64_t v57 = v48;
    swift_getOpaqueTypeConformance2();
    sub_255A53AF4();
    return sub_255C7EBD8();
  }
}

uint64_t sub_255B0B2B8(uint64_t a1)
{
  uint64_t v2 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_255C805E8();
  MEMORY[0x270FA5388](v3 - 8);
  switch(a1)
  {
    case 0:
      sub_255C80588();
      if (qword_26B29F398 != -1) {
        goto LABEL_12;
      }
      goto LABEL_10;
    case 1:
      sub_255C80588();
      if (qword_26B29F398 == -1) {
        goto LABEL_10;
      }
      goto LABEL_12;
    case 2:
      sub_255C80588();
      if (qword_26B29F398 == -1) {
        goto LABEL_10;
      }
      goto LABEL_12;
    case 3:
      sub_255C80588();
      if (qword_26B29F398 == -1) {
        goto LABEL_10;
      }
LABEL_12:
      swift_once();
LABEL_10:
      id v5 = (id)qword_26B2AA660;
      sub_255C7D6B8();
      uint64_t result = sub_255C80648();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_255B0B5D4()
{
  return sub_255B12B88((void (*)(void))sub_255B20BBC);
}

uint64_t sub_255B0B5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v58[1] = a1;
  uint64_t v71 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23EB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23EB8);
  uint64_t v61 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23EC0);
  uint64_t v65 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v59 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23EC8);
  uint64_t v68 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v63 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23ED0);
  uint64_t v70 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v66 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = v2[3];
  *(_OWORD *)&v80[16] = v2[2];
  long long v81 = v12;
  long long v82 = v2[4];
  char v83 = *((unsigned char *)v2 + 80);
  long long v13 = *v2;
  long long v14 = v2[1];
  char v62 = &v82;
  long long v79 = v13;
  *(_OWORD *)char v80 = v14;
  sub_255A10514((uint64_t)&v79 + 8, (uint64_t)v85, &qword_26B29EF58);
  sub_255A10514((uint64_t)v85, (uint64_t)&v73, &qword_26B29EF58);
  uint64_t v15 = swift_allocObject();
  long long v16 = v81;
  *(_OWORD *)(v15 + 48) = *(_OWORD *)&v80[16];
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = v82;
  *(unsigned char *)(v15 + 96) = v83;
  long long v17 = *(_OWORD *)v80;
  *(_OWORD *)(v15 + 16) = v79;
  *(_OWORD *)(v15 + 32) = v17;
  sub_255B1E668((uint64_t)&v79);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23ED8);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF58);
  uint64_t v20 = sub_255A09998(&qword_269F23EE0, &qword_269F23ED8);
  unint64_t v21 = sub_255B1E6CC();
  sub_255C7FB48();
  swift_release();
  long long v77 = *(_OWORD *)&v80[8];
  char v78 = v80[24];
  uint64_t v22 = swift_allocObject();
  long long v23 = v81;
  *(_OWORD *)(v22 + 48) = *(_OWORD *)&v80[16];
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 80) = v82;
  *(unsigned char *)(v22 + 96) = v83;
  long long v24 = *(_OWORD *)v80;
  *(_OWORD *)(v22 + 16) = v79;
  *(_OWORD *)(v22 + 32) = v24;
  sub_255B1E668((uint64_t)&v79);
  uint64_t v73 = v18;
  uint64_t v74 = (ValueMetadata *)v19;
  uint64_t v75 = v20;
  unint64_t v76 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v26 = sub_255B1E768();
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(void *)&long long v77 = v81;
  uint64_t v27 = swift_allocObject();
  long long v28 = v81;
  *(_OWORD *)(v27 + 48) = *(_OWORD *)&v80[16];
  *(_OWORD *)(v27 + 64) = v28;
  *(_OWORD *)(v27 + 80) = v82;
  *(unsigned char *)(v27 + 96) = v83;
  long long v29 = *(_OWORD *)v80;
  *(_OWORD *)(v27 + 16) = v79;
  *(_OWORD *)(v27 + 32) = v29;
  sub_255B1E668((uint64_t)&v79);
  uint64_t v73 = v3;
  uint64_t v74 = &type metadata for ScrubberLoadingConfiguration;
  uint64_t v75 = OpaqueTypeConformance2;
  unint64_t v76 = v26;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = (ValueMetadata *)MEMORY[0x263F8D538];
  unint64_t v32 = MEMORY[0x263F8D568];
  uint64_t v33 = v59;
  uint64_t v34 = v60;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v8, v34);
  *(void *)&long long v77 = *((void *)&v81 + 1);
  uint64_t v84 = *((void *)&v81 + 1);
  uint64_t v35 = swift_allocObject();
  long long v36 = v81;
  *(_OWORD *)(v35 + 48) = *(_OWORD *)&v80[16];
  *(_OWORD *)(v35 + 64) = v36;
  *(_OWORD *)(v35 + 80) = v82;
  *(unsigned char *)(v35 + 96) = v83;
  long long v37 = *(_OWORD *)v80;
  *(_OWORD *)(v35 + 16) = v79;
  *(_OWORD *)(v35 + 32) = v37;
  sub_255B1E668((uint64_t)&v79);
  sub_255B1E7D4((uint64_t)&v77);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23EF8);
  uint64_t v73 = v34;
  uint64_t v74 = v31;
  uint64_t v75 = v30;
  unint64_t v76 = v32;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = sub_255B22DF8(&qword_269F23F00, &qword_269F23EF8, (void (*)(void))sub_255B18C94);
  uint64_t v41 = v63;
  uint64_t v42 = v64;
  sub_255C7FB48();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v42);
  sub_255A10514((uint64_t)v62, (uint64_t)&v84, &qword_269F23F08);
  sub_255A10514((uint64_t)&v84, (uint64_t)&v72, &qword_269F23F08);
  uint64_t v43 = swift_allocObject();
  long long v44 = v81;
  *(_OWORD *)(v43 + 48) = *(_OWORD *)&v80[16];
  *(_OWORD *)(v43 + 64) = v44;
  *(_OWORD *)(v43 + 80) = v82;
  *(unsigned char *)(v43 + 96) = v83;
  long long v45 = *(_OWORD *)v80;
  *(_OWORD *)(v43 + 16) = v79;
  *(_OWORD *)(v43 + 32) = v45;
  sub_255B1E668((uint64_t)&v79);
  sub_255A12480((uint64_t)&v84);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F08);
  uint64_t v73 = v42;
  uint64_t v74 = (ValueMetadata *)v38;
  uint64_t v75 = v39;
  unint64_t v76 = v40;
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  unint64_t v48 = sub_255B1E830();
  uint64_t v49 = v66;
  uint64_t v50 = v67;
  sub_255C7FB48();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v50);
  uint64_t v51 = *((void *)&v82 + 1);
  LOBYTE(v42) = v83;
  sub_255A0877C(*((uint64_t *)&v82 + 1), v83);
  double v52 = sub_255ABB36C(v51, v42);
  sub_255A087D0(v51, v42);
  double v72 = v52;
  uint64_t v53 = swift_allocObject();
  long long v54 = v81;
  *(_OWORD *)(v53 + 48) = *(_OWORD *)&v80[16];
  *(_OWORD *)(v53 + 64) = v54;
  *(_OWORD *)(v53 + 80) = v82;
  *(unsigned char *)(v53 + 96) = v83;
  long long v55 = *(_OWORD *)v80;
  *(_OWORD *)(v53 + 16) = v79;
  *(_OWORD *)(v53 + 32) = v55;
  sub_255B1E668((uint64_t)&v79);
  uint64_t v73 = v50;
  uint64_t v74 = (ValueMetadata *)v46;
  uint64_t v75 = v47;
  unint64_t v76 = v48;
  swift_getOpaqueTypeConformance2();
  sub_255A1A1D4();
  uint64_t v56 = v69;
  sub_255C7FB48();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v49, v56);
}

uint64_t sub_255B0BFFC()
{
  return sub_255B028A0();
}

uint64_t sub_255B0C0E8()
{
  return swift_release();
}

void sub_255B0C1C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  swift_bridgeObjectRetain();
  sub_255C7D708();
  swift_release();
  swift_bridgeObjectRelease();
  sub_255AFD45C(v1);
}

uint64_t sub_255B0C2C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 72);
  char v2 = *(unsigned char *)(a1 + 80);
  sub_255A0877C(v1, v2);
  sub_255ABB36C(v1, v2);
  sub_255A087D0(v1, v2);
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D708();
  return swift_release();
}

uint64_t sub_255B0C3DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23EA8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_255B0C44C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23FD8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v35 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFB0 != -1) {
    swift_once();
  }
  uint64_t v9 = (uint64_t *)&unk_269F33160;
  uint64_t v34 = qword_269F33158;
  if ((a3 & 1) == 0) {
    uint64_t v9 = (uint64_t *)&unk_269F33170;
  }
  uint64_t v10 = *v9;
  if (a3) {
    uint64_t v11 = &qword_269F33168;
  }
  else {
    uint64_t v11 = &qword_269F33178;
  }
  uint64_t v12 = *v11;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_255C7F548();
  int v33 = a3;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  swift_retain();
  swift_retain();
  uint64_t v37 = v10;
  uint64_t v38 = v12;
  sub_255B1EE04();
  uint64_t v19 = sub_255C7F468();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  sub_255A094C0(v14, v16, v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_269F1FFC0 != -1) {
    swift_once();
  }
  char v26 = v23 & 1;
  uint64_t v27 = qword_269F23830;
  swift_retain();
  uint64_t v28 = sub_255C7F218();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v37 = v19;
  uint64_t v38 = v21;
  char v39 = v23 & 1;
  uint64_t v40 = v25;
  uint64_t v41 = v27;
  char v42 = v33 & 1;
  uint64_t v43 = KeyPath;
  uint64_t v44 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23FE8);
  sub_255B1E39C(&qword_269F23FF0, &qword_269F23FE8, (void (*)(void))sub_255B1EE60);
  uint64_t v30 = (uint64_t)v35;
  sub_255C7F8D8();
  sub_255A094C0(v19, v21, v26);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_255A10514(v30, v36, &qword_269F23FD8);
}

uint64_t sub_255B0C718@<X0>(uint64_t a1@<X8>)
{
  return sub_255B0C44C(*(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

__n128 sub_255B0C724@<Q0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  if ((*a1 & 1) == 0
    || (sub_255A10514((uint64_t)(a1 + 8), (uint64_t)v30, &qword_26B29EF58),
        sub_255A10514((uint64_t)v30, (uint64_t)&v31, &qword_26B29EF58),
        (v32 & 1) != 0)
    || (sub_255A10514((uint64_t)(a1 + 40), (uint64_t)v29, &qword_26B29EF58),
        sub_255A10514((uint64_t)v29, (uint64_t)&v33, &qword_26B29EF58),
        (v34 & 1) != 0))
  {
    v16[0] = sub_255C7FC68();
    sub_255B1EFA0((uint64_t)v16);
  }
  else
  {
    uint64_t v10 = sub_255C7E928();
    sub_255B0C98C((uint64_t)v11);
    *(_OWORD *)&v13[71] = v11[4];
    *(_OWORD *)&v13[55] = v11[3];
    *(_OWORD *)&v13[119] = v11[7];
    *(_OWORD *)&v13[135] = v11[8];
    *(_OWORD *)&v13[151] = v11[9];
    *(_OWORD *)&v13[167] = v12;
    *(_OWORD *)&v13[87] = v11[5];
    *(_OWORD *)&v13[103] = v11[6];
    *(_OWORD *)&v13[7] = v11[0];
    *(_OWORD *)&v13[23] = v11[1];
    *(_OWORD *)&v13[39] = v11[2];
    long long v26 = *(_OWORD *)&v13[128];
    long long v27 = *(_OWORD *)&v13[144];
    *(_OWORD *)uint64_t v28 = *(_OWORD *)&v13[160];
    long long v22 = *(_OWORD *)&v13[64];
    long long v23 = *(_OWORD *)&v13[80];
    long long v24 = *(_OWORD *)&v13[96];
    long long v25 = *(_OWORD *)&v13[112];
    long long v18 = *(_OWORD *)v13;
    long long v19 = *(_OWORD *)&v13[16];
    long long v20 = *(_OWORD *)&v13[32];
    char v14 = 0;
    v16[0] = v10;
    v16[1] = 0;
    char v17 = 0;
    *(void *)&v28[15] = *((void *)&v12 + 1);
    long long v21 = *(_OWORD *)&v13[48];
    sub_255B1EFAC((uint64_t)v16);
  }
  sub_255A10514((uint64_t)v16, (uint64_t)v15, &qword_269F24028);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24030);
  sub_255A09998(&qword_269F24038, &qword_269F24030);
  sub_255C7EBD8();
  long long v4 = v46[0];
  *(_OWORD *)(a2 + 160) = v45;
  *(_OWORD *)(a2 + 176) = v4;
  *(_OWORD *)(a2 + 185) = *(_OWORD *)((char *)v46 + 9);
  long long v5 = v42;
  *(_OWORD *)(a2 + 96) = v41;
  *(_OWORD *)(a2 + 112) = v5;
  long long v6 = v44;
  *(_OWORD *)(a2 + 128) = v43;
  *(_OWORD *)(a2 + 144) = v6;
  long long v7 = v38;
  *(_OWORD *)(a2 + 32) = v37;
  *(_OWORD *)(a2 + 48) = v7;
  long long v8 = v40;
  *(_OWORD *)(a2 + 64) = v39;
  *(_OWORD *)(a2 + 80) = v8;
  __n128 result = v36;
  *(_OWORD *)a2 = v35;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

double sub_255B0C98C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v6 = sub_255C7FC68();
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v5 = sub_255C7FC68();
  sub_255C801F8();
  sub_255C7DFE8();
  sub_255C7FC68();
  uint64_t v2 = sub_255C7FCA8();
  swift_release();
  uint64_t v3 = sub_255C7FC68();
  sub_255C801F8();
  sub_255C7DFE8();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(unsigned char *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v17;
  *(void *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v2;
  *(void *)(a1 + 120) = v3;
  *(void *)(a1 + 128) = v19;
  *(unsigned char *)(a1 + 136) = v20;
  *(void *)(a1 + 144) = v21;
  *(unsigned char *)(a1 + 152) = v22;
  double result = *(double *)&v23;
  *(_OWORD *)(a1 + 160) = v23;
  return result;
}

uint64_t sub_255B0CB68@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v17[0] = *v1;
  v17[1] = v3;
  long long v4 = v1[3];
  v17[2] = v1[2];
  _OWORD v17[3] = v4;
  sub_255B0C724(v17, (uint64_t)v18);
  char v5 = sub_255C7F188();
  uint64_t result = sub_255C7DC08();
  long long v7 = v18[11];
  *(_OWORD *)(a1 + 160) = v18[10];
  *(_OWORD *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 192) = v18[12];
  long long v8 = v18[7];
  *(_OWORD *)(a1 + 96) = v18[6];
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = v18[9];
  *(_OWORD *)(a1 + 128) = v18[8];
  *(_OWORD *)(a1 + 144) = v9;
  long long v10 = v18[3];
  *(_OWORD *)(a1 + 32) = v18[2];
  *(_OWORD *)(a1 + 48) = v10;
  long long v11 = v18[5];
  *(_OWORD *)(a1 + 64) = v18[4];
  *(_OWORD *)(a1 + 80) = v11;
  long long v12 = v18[1];
  *(_OWORD *)a1 = v18[0];
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 208) = v5;
  *(void *)(a1 + 216) = v13;
  *(void *)(a1 + 224) = v14;
  *(void *)(a1 + 232) = v15;
  *(void *)(a1 + 240) = v16;
  *(_WORD *)(a1 + 248) = 0;
  return result;
}

uint64_t sub_255B0CC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v183 = type metadata accessor for ScrubberTooltipModifier(0);
  uint64_t v198 = *(void *)(v183 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v183);
  uint64_t v202 = (uint64_t)v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v185 = (uint64_t)v163 - v6;
  uint64_t v179 = sub_255C7EA18();
  uint64_t v178 = *(void *)(v179 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v179);
  uint64_t v177 = (char *)v163 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v176 = (uint64_t)v163 - v9;
  uint64_t v188 = sub_255C7DCC8();
  uint64_t v212 = *(void *)(v188 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v188);
  uint64_t v169 = (char *)v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v168 = (uint64_t)v163 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v187 = (char *)v163 - v14;
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EE60);
  MEMORY[0x270FA5388](v172);
  uint64_t v175 = (char *)v163 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_255C801A8();
  uint64_t v173 = *(void *)(v174 - 8);
  MEMORY[0x270FA5388](v174);
  uint64_t v170 = (char *)v163 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F68);
  MEMORY[0x270FA5388](v171);
  v211 = (_OWORD *)((char *)v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F70);
  MEMORY[0x270FA5388](v180);
  uint64_t v182 = (char *)v163 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F78);
  MEMORY[0x270FA5388](v181);
  uint64_t v186 = (uint64_t)v163 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F80);
  MEMORY[0x270FA5388](v184);
  uint64_t v194 = (uint64_t)v163 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F88);
  MEMORY[0x270FA5388](v191);
  uint64_t v193 = (uint64_t)v163 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F90);
  MEMORY[0x270FA5388](v190);
  uint64_t v192 = (uint64_t)v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F98);
  MEMORY[0x270FA5388](v189);
  uint64_t v196 = (uint64_t)v163 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23FA0);
  MEMORY[0x270FA5388](v195);
  uint64_t v199 = (uint64_t)v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23FA8);
  MEMORY[0x270FA5388](v197);
  uint64_t v203 = (uint64_t)v163 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23FB0);
  MEMORY[0x270FA5388](v201);
  uint64_t v205 = (uint64_t)v163 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23FB8);
  MEMORY[0x270FA5388](v204);
  v210 = (char *)v163 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23FC0);
  MEMORY[0x270FA5388](v208);
  uint64_t v209 = (uint64_t)v163 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23FC8);
  uint64_t v213 = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v207 = (uint64_t)v163 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v206 = (uint64_t)v163 - v32;
  uint64_t v33 = *(void *)a1;
  uint64_t v34 = *(void *)(*(void *)(*(void *)a1 + 72) + 80);
  swift_getKeyPath();
  *(void *)&long long v223 = v34;
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v34 + 48)) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v213 + 56))(a2, 1, 1, v29);
  }
  double v35 = *(double *)(v34 + 40);
  uint64_t v36 = *(void *)(*(void *)(v33 + 72) + 80);
  swift_getKeyPath();
  *(void *)&long long v223 = v36;
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v36 + 32)) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v213 + 56))(a2, 1, 1, v29);
  }
  double v38 = *(double *)(v36 + 24);
  uint64_t v39 = *(void *)(v33 + 72);
  swift_getKeyPath();
  *(void *)&long long v223 = v39;
  uint64_t v40 = sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  swift_retain();
  uint64_t v167 = v40;
  sub_255C7D718();
  swift_release();
  double v41 = *(double *)(v39 + 72);
  swift_release();
  float v42 = v41 / v38;
  swift_getKeyPath();
  *(void *)&long long v223 = v33;
  uint64_t v43 = sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  double v44 = (v35 * *(double *)(v33 + 64) - v35) * 0.5;
  double v45 = *(double *)(a1 + 8);
  if (qword_269F1FF80 != -1) {
    swift_once();
  }
  double v46 = ((float)(v42 + v42) + -1.0) * v44;
  double v47 = -(v45 - *(double *)&qword_269F33108);
  swift_getKeyPath();
  *(void *)&long long v223 = v33;
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(v33 + 24) == 1)
  {
    uint64_t v48 = *(void *)(a1 + 16);
    uint64_t v49 = *(void *)(a1 + 24);
    double v50 = v35;
  }
  else
  {
    double v51 = *(double *)(v33 + 16);
    uint64_t v48 = *(void *)(a1 + 16);
    uint64_t v49 = *(void *)(a1 + 24);
    *(void *)&long long v223 = v48;
    *((void *)&v223 + 1) = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDE0);
    sub_255C7FE68();
    double v50 = v51 - v214 - v45 - *(double *)&qword_269F33108;
  }
  *(void *)&long long v223 = v48;
  *((void *)&v223 + 1) = v49;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDE0);
  sub_255C7FE68();
  double v53 = v46 + v35 * v42 - v214 * 0.5;
  if (v53 < v47) {
    double v54 = v47;
  }
  else {
    double v54 = v53;
  }
  if (v50 >= v54) {
    double v55 = v54;
  }
  else {
    double v55 = v50;
  }
  sub_255AFFF24();
  double v57 = v56;
  double v58 = v53 - v55;
  *(void *)&long long v223 = v48;
  *((void *)&v223 + 1) = v49;
  v163[0] = v52;
  sub_255C7FE68();
  double v59 = v214 * 0.5;
  if (qword_269F1FF90 != -1) {
    swift_once();
  }
  double v60 = v57 + v58;
  double v61 = v59 + *(double *)&qword_269F33118 * -0.5;
  if (qword_269F1FF40 != -1) {
    swift_once();
  }
  v163[1] = v43;
  uint64_t v164 = v29;
  uint64_t v166 = a1;
  uint64_t v165 = a2;
  double v62 = -(v61 - *(double *)&qword_269F330C8);
  if (v60 >= v62) {
    double v62 = v60;
  }
  if (v61 - *(double *)&qword_269F330C8 >= v62) {
    double v63 = v62;
  }
  else {
    double v63 = v61 - *(double *)&qword_269F330C8;
  }
  uint64_t v64 = qword_269F1FF78;
  swift_retain();
  if (v64 != -1) {
    swift_once();
  }
  double v65 = *(double *)&qword_269F33100;
  uint64_t v66 = sub_255C801F8();
  sub_255A58B88(0.0, 1, 0.0, 1, v65, 0, 0.0, 1, (uint64_t)&v223, 0.0, 1, 0.0, 1, v66, v67, v33);
  swift_release();
  uint64_t v68 = *((void *)&v223 + 1);
  uint64_t v69 = v223;
  uint64_t v70 = *((void *)&v224 + 1);
  uint64_t v71 = *((void *)&v225 + 1);
  uint64_t v72 = *((void *)&v226 + 1);
  uint64_t v73 = *((void *)&v227 + 1);
  uint64_t v74 = *((void *)&v228 + 1);
  uint64_t v76 = *((void *)&v229 + 1);
  uint64_t v75 = v230;
  char v222 = v224;
  char v221 = v225;
  char v220 = v226;
  char v219 = v227;
  char v218 = v228;
  char v217 = v229;
  char v77 = sub_255C7F1B8();
  if (qword_269F1FF88 != -1) {
    swift_once();
  }
  sub_255C7DC08();
  *(void *)&long long v223 = v69;
  *((void *)&v223 + 1) = v68;
  LOBYTE(v224) = v222;
  *((void *)&v224 + 1) = v70;
  LOBYTE(v225) = v221;
  *((void *)&v225 + 1) = v71;
  LOBYTE(v226) = v220;
  *((void *)&v226 + 1) = v72;
  LOBYTE(v227) = v219;
  *((void *)&v227 + 1) = v73;
  LOBYTE(v228) = v218;
  *((void *)&v228 + 1) = v74;
  LOBYTE(v229) = v217;
  *((void *)&v229 + 1) = v76;
  *(void *)&long long v230 = v75;
  WORD4(v230) = 1;
  LOBYTE(v231) = v77;
  *((void *)&v231 + 1) = v78;
  *(void *)v232 = v79;
  *(void *)&v232[8] = v80;
  *(void *)&v232[16] = v81;
  v232[24] = 0;
  long long v82 = v170;
  sub_255C80188();
  char v83 = sub_255C7F198();
  uint64_t v84 = v173;
  uint64_t v85 = (uint64_t)v175;
  uint64_t v86 = v174;
  (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v175, v82, v174);
  *(unsigned char *)(v85 + *(int *)(v172 + 36)) = v83;
  uint64_t v87 = v211;
  sub_255A09540(v85, (uint64_t)v211 + *(int *)(v171 + 36), &qword_26B29EE60);
  long long v88 = *(_OWORD *)v232;
  v87[8] = v231;
  v87[9] = v88;
  *(_OWORD *)((char *)v87 + 153) = *(_OWORD *)&v232[9];
  long long v89 = v228;
  v87[4] = v227;
  v87[5] = v89;
  long long v90 = v230;
  v87[6] = v229;
  v87[7] = v90;
  long long v91 = v224;
  *uint64_t v87 = v223;
  v87[1] = v91;
  long long v92 = v226;
  _OWORD v87[2] = v225;
  v87[3] = v92;
  sub_255A12480((uint64_t)&v223);
  sub_255A095A4(v85, &qword_26B29EE60);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v86);
  swift_release();
  uint64_t v93 = v166;
  uint64_t v94 = v176;
  sub_255ABA66C(v176);
  uint64_t v95 = v178;
  uint64_t v96 = v177;
  uint64_t v97 = v179;
  (*(void (**)(char *, void, uint64_t))(v178 + 104))(v177, *MEMORY[0x263F19978], v179);
  sub_255B12C70(&qword_26B298580, MEMORY[0x263F19988]);
  char v98 = sub_255C80578();
  uint64_t v99 = *(void (**)(char *, uint64_t))(v95 + 8);
  v99(v96, v97);
  uint64_t v100 = v94;
  uint64_t v101 = v93;
  v99((char *)v100, v97);
  uint64_t v102 = v185;
  sub_255B206A4(v93, v185, type metadata accessor for ScrubberTooltipModifier);
  if ((v98 & 1) == 0)
  {
    sub_255B2075C(v102, type metadata accessor for ScrubberTooltipModifier);
    uint64_t v106 = *(void (**)(char *, uint64_t, uint64_t))(v212 + 104);
    uint64_t v111 = v188;
    goto LABEL_32;
  }
  uint64_t v103 = v168;
  sub_255ABC184(v168);
  uint64_t v104 = *MEMORY[0x263F18508];
  uint64_t v105 = v212;
  uint64_t v106 = *(void (**)(char *, uint64_t, uint64_t))(v212 + 104);
  uint64_t v107 = v169;
  uint64_t v108 = v188;
  v106(v169, v104, v188);
  char v109 = sub_255C7DCB8();
  uint64_t v110 = *(void (**)(char *, uint64_t))(v105 + 8);
  v110(v107, v108);
  v110((char *)v103, v108);
  sub_255B2075C(v102, type metadata accessor for ScrubberTooltipModifier);
  if (v109)
  {
    uint64_t v111 = v108;
    uint64_t v101 = v166;
LABEL_32:
    uint64_t v112 = v187;
    v106(v187, *MEMORY[0x263F184F8], v111);
    goto LABEL_34;
  }
  uint64_t v113 = v187;
  v106(v187, v104, v108);
  uint64_t v111 = v108;
  uint64_t v112 = v113;
  uint64_t v101 = v166;
LABEL_34:
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v115 = (uint64_t)v182;
  uint64_t v116 = (uint64_t *)&v182[*(int *)(v180 + 36)];
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BCD0);
  uint64_t v118 = v212;
  (*(void (**)(char *, char *, uint64_t))(v212 + 16))((char *)v116 + *(int *)(v117 + 28), v112, v111);
  *uint64_t v116 = KeyPath;
  uint64_t v119 = (uint64_t)v211;
  sub_255A09540((uint64_t)v211, v115, &qword_269F23F68);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v112, v111);
  sub_255A095A4(v119, &qword_269F23F68);
  uint64_t v120 = v186;
  sub_255A09540(v115, v186, &qword_269F23F70);
  *(unsigned char *)(v120 + *(int *)(v181 + 36)) = 0;
  sub_255A095A4(v115, &qword_269F23F70);
  uint64_t v121 = v202;
  sub_255B206A4(v101, v202, type metadata accessor for ScrubberTooltipModifier);
  unint64_t v122 = (*(unsigned __int8 *)(v198 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
  uint64_t v123 = swift_allocObject();
  sub_255B23238(v121, v123 + v122, type metadata accessor for ScrubberTooltipModifier);
  uint64_t v124 = v194;
  sub_255A09540(v120, v194, &qword_269F23F78);
  long long v125 = (void *)(v124 + *(int *)(v184 + 36));
  *long long v125 = sub_255B0E6DC;
  v125[1] = 0;
  v125[2] = sub_255B1ED2C;
  v125[3] = v123;
  sub_255A095A4(v120, &qword_269F23F78);
  double v126 = *(double *)(*(void *)v101 + 72);
  swift_getKeyPath();
  double v214 = v126;
  sub_255C7D718();
  swift_release();
  if (!*(unsigned char *)(*(void *)&v126 + 57))
  {
    uint64_t v127 = (uint64_t)v210;
    goto LABEL_38;
  }
  uint64_t v127 = (uint64_t)v210;
  if (*(unsigned char *)(*(void *)&v126 + 57) != 1)
  {
LABEL_38:
    char v128 = sub_255C81428();
    goto LABEL_39;
  }
  char v128 = 1;
LABEL_39:
  swift_bridgeObjectRelease();
  uint64_t v129 = v193;
  sub_255A09540(v124, v193, &qword_269F23F80);
  uint64_t v130 = v129 + *(int *)(v191 + 36);
  *(void *)uint64_t v130 = 0;
  *(unsigned char *)(v130 + 8) = v128 & 1;
  sub_255A095A4(v124, &qword_269F23F80);
  uint64_t v131 = qword_269F33110;
  uint64_t v132 = v192;
  sub_255A09540(v129, v192, &qword_269F23F88);
  uint64_t v133 = v132 + *(int *)(v190 + 36);
  *(void *)uint64_t v133 = v131;
  *(double *)(v133 + 8) = v63;
  *(_WORD *)(v133 + 16) = 256;
  sub_255A095A4(v129, &qword_269F23F88);
  uint64_t v134 = v196;
  sub_255A09540(v132, v196, &qword_269F23F90);
  uint64_t v135 = v134 + *(int *)(v189 + 36);
  *(void *)uint64_t v135 = 0;
  *(double *)(v135 + 8) = v57;
  sub_255A095A4(v132, &qword_269F23F90);
  double v136 = *(double *)v101;
  swift_getKeyPath();
  double v214 = v136;
  sub_255C7D718();
  swift_release();
  double v137 = 1.0;
  if (*(unsigned char *)(*(void *)&v136 + 104)) {
    double v138 = 1.0;
  }
  else {
    double v138 = 0.0;
  }
  uint64_t v139 = v199;
  sub_255A09540(v134, v199, &qword_269F23F98);
  *(double *)(v139 + *(int *)(v195 + 36)) = v138;
  sub_255A095A4(v134, &qword_269F23F98);
  double v140 = *(double *)v101;
  swift_getKeyPath();
  double v214 = v140;
  sub_255C7D718();
  swift_release();
  if (!*(unsigned char *)(*(void *)&v140 + 104)) {
    double v137 = 0.5;
  }
  uint64_t v141 = *(void *)(v101 + 24);
  double v214 = *(double *)(v101 + 16);
  uint64_t v215 = v141;
  sub_255C7FE68();
  double v142 = v63 / v216 + 0.5;
  uint64_t v143 = v203;
  sub_255A09540(v139, v203, &qword_269F23FA0);
  uint64_t v144 = v143 + *(int *)(v197 + 36);
  *(double *)uint64_t v144 = v137;
  *(double *)(v144 + 8) = v137;
  *(double *)(v144 + 16) = v142;
  *(void *)(v144 + 24) = 0x3FF4000000000000;
  sub_255A095A4(v139, &qword_269F23FA0);
  if (qword_269F1FF48 != -1) {
    swift_once();
  }
  double v145 = -*(double *)&qword_269F330D0;
  uint64_t v146 = v205;
  sub_255A09540(v143, v205, &qword_269F23FA8);
  long long v147 = (double *)(v146 + *(int *)(v201 + 36));
  *long long v147 = v55;
  v147[1] = v145;
  sub_255A095A4(v143, &qword_269F23FA8);
  double v148 = *(double *)(*(void *)v101 + 72);
  swift_getKeyPath();
  double v214 = v148;
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(*(void *)&v148 + 57) && *(unsigned char *)(*(void *)&v148 + 57) == 1)
  {
    swift_bridgeObjectRelease();
    double v149 = 0.0;
  }
  else
  {
    char v150 = sub_255C81428();
    swift_bridgeObjectRelease();
    if (v150) {
      double v149 = 0.0;
    }
    else {
      double v149 = 5.0;
    }
  }
  sub_255A09540(v146, v127, &qword_269F23FB0);
  uint64_t v151 = v127 + *(int *)(v204 + 36);
  *(void *)uint64_t v151 = 0;
  *(double *)(v151 + 8) = v149;
  sub_255A095A4(v146, &qword_269F23FB0);
  if (qword_269F1FFC0 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_269F23830;
  double v153 = *(double *)(*(void *)v101 + 72);
  swift_getKeyPath();
  double v214 = v153;
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(*(void *)&v153 + 57) && *(unsigned char *)(*(void *)&v153 + 57) == 1) {
    char v154 = 1;
  }
  else {
    char v154 = sub_255C81428();
  }
  swift_bridgeObjectRelease();
  uint64_t v155 = v209;
  sub_255A09540(v127, v209, &qword_269F23FB8);
  uint64_t v156 = v155 + *(int *)(v208 + 36);
  *(void *)uint64_t v156 = v152;
  *(unsigned char *)(v156 + 8) = v154 & 1;
  swift_retain();
  sub_255A095A4(v127, &qword_269F23FB8);
  uint64_t v157 = v207;
  sub_255A09540(v155, v207, &qword_269F23FC0);
  uint64_t v158 = v164;
  *(_OWORD *)(v157 + *(int *)(v164 + 36)) = xmmword_255C8CCB0;
  sub_255A095A4(v155, &qword_269F23FC0);
  uint64_t v159 = v157;
  uint64_t v160 = v206;
  sub_255A10514(v159, v206, (uint64_t *)&unk_269F23FC8);
  uint64_t v161 = v160;
  uint64_t v162 = v165;
  sub_255A10514(v161, v165, (uint64_t *)&unk_269F23FC8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v213 + 56))(v162, 0, 1, v158);
}

uint64_t sub_255B0E6DC@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_255C7E0D8();
  *a1 = v3;
  return result;
}

uint64_t sub_255B0E708()
{
  return sub_255C7FE78();
}

uint64_t sub_255B0E75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_255C801B8();
  uint64_t v7 = v6;
  uint64_t v8 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F23F48) + 36);
  sub_255B0CC1C(v2, v8);
  uint64_t v9 = (uint64_t *)(v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F23F50) + 36));
  *uint64_t v9 = v5;
  v9[1] = v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23F58);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);

  return v11(a2, a1, v10);
}

uint64_t sub_255B0E820(uint64_t a1)
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  uint64_t v2 = (double *)(a1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8)) {
    return sub_255AFB928();
  }
  double v4 = *v2;
  BOOL v5 = *v2 < 0.0;
  uint64_t v6 = 43;
  if (v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = 0xE100000000000000;
  if (v5) {
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v9 = v6;
  unint64_t v11 = v7;
  if (qword_269F1FF18 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend((id)qword_269F33098, sel_stringFromSeconds_, v4, v9, v11);
  sub_255C80628();

  sub_255C806E8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_255B0E984(uint64_t a1)
{
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  swift_release();
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession + 8) != 1) {
    return 0;
  }
  swift_getKeyPath();
  sub_255C7D718();
  swift_release();
  if (!*(void *)(a1 + 88)) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 80);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_255B0EA98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_255B0E820(*v1);
  uint64_t v6 = v5;
  uint64_t v7 = sub_255B0E984(v3);
  uint64_t v9 = v8;
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v11 = *(unsigned char *)(v3 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v11;
  return result;
}

double sub_255B0EB80(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7)
{
  double v24 = a7;
  uint64_t v13 = sub_255C7E988();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FF90 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_269F33118;
  v37.origin.CGFloat x = a2;
  v37.origin.CGFloat y = a3;
  v37.size.CGFloat width = a4;
  v37.size.CGFloat height = a5;
  v22[1] = CGRectGetMinX(v37);
  v38.origin.CGFloat x = a2;
  v38.origin.CGFloat y = a3;
  v38.size.CGFloat width = a4;
  v38.size.CGFloat height = a5;
  v22[0] = CGRectGetMinY(v38);
  v39.origin.CGFloat x = a2;
  v39.origin.CGFloat y = a3;
  v39.size.CGFloat width = a4;
  v39.size.CGFloat height = a5;
  CGRectGetWidth(v39);
  v40.origin.CGFloat x = a2;
  v40.origin.CGFloat y = a3;
  v40.size.CGFloat width = a4;
  v40.size.CGFloat height = a5;
  CGRectGetHeight(v40);
  if (qword_269F1FF40 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F19860], v13);
  uint64_t v31 = 0x3FF0000000000000;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0x3FF0000000000000;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  sub_255C7F398();
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  long long v18 = *(_OWORD *)(a1 + 16);
  v29[0] = *(_OWORD *)a1;
  v29[1] = v18;
  char v30 = *(unsigned char *)(a1 + 32);
  MEMORY[0x270FA5388](v17);
  *(CGFloat *)&v22[-8] = a2;
  *(CGFloat *)&v22[-7] = a3;
  *(CGFloat *)&v22[-6] = a4;
  *(CGFloat *)&v22[-5] = a5;
  double v19 = v24;
  *(double *)&v22[-4] = a6;
  *(double *)&v22[-3] = v19;
  v22[-2] = v23;
  sub_255C7F3F8();
  sub_255C7F3B8();
  sub_255B23318((uint64_t)v25);
  sub_255B23318((uint64_t)v29);
  double result = *(double *)&v26;
  long long v21 = v27;
  *(_OWORD *)a1 = v26;
  *(_OWORD *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 32) = v28;
  return result;
}

uint64_t sub_255B0EE7C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGRectGetMidX(*(CGRect *)&a1);
  v9.origin.CGFloat x = a1;
  v9.origin.CGFloat y = a2;
  v9.size.CGFloat width = a3;
  v9.size.CGFloat height = a4;
  CGRectGetMaxY(v9);
  sub_255C7F3A8();
  v10.origin.CGFloat x = a1;
  v10.origin.CGFloat y = a2;
  v10.size.CGFloat width = a3;
  v10.size.CGFloat height = a4;
  CGRectGetMaxY(v10);
  sub_255C7F3C8();
  v11.origin.CGFloat x = a1;
  v11.origin.CGFloat y = a2;
  v11.size.CGFloat width = a3;
  v11.size.CGFloat height = a4;
  CGRectGetMaxY(v11);
  return sub_255C7F3C8();
}

double sub_255B0EF50@<D0>(uint64_t a1@<X8>)
{
  sub_255C7F3F8();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

double sub_255B0EFC0@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 8);
  *a1 = result;
  return result;
}

double sub_255B0EFCC(double *a1)
{
  double result = *a1;
  *(double *)(v1 + 8) = *a1;
  return result;
}

double (*sub_255B0EFD8(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_255B0F004;
}

double sub_255B0F004(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + 8) = *(void *)a1;
  return result;
}

uint64_t sub_255B0F014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255B23368();

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_255B0F078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255B23368();

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_255B0F0DC(uint64_t a1)
{
  unint64_t v2 = sub_255B23368();

  return MEMORY[0x270F047E0](a1, v2);
}

double sub_255B0F128@<D0>(uint64_t a1@<X8>)
{
  if (qword_269F1FF60 != -1) {
    swift_once();
  }
  uint64_t v57 = qword_269F330E8;
  uint64_t v56 = sub_255C7EA58();
  sub_255A10514((uint64_t)(v1 + 2), (uint64_t)v67, &qword_26B29F258);
  sub_255A10514((uint64_t)v67, (uint64_t)&v70, &qword_26B29F258);
  uint64_t v3 = v71;
  if (v71)
  {
    uint64_t v4 = v70;
    unsigned __int8 v5 = sub_255C7F158();
    unsigned __int8 v6 = sub_255C7F178();
    char v7 = sub_255C7F168();
    sub_255C7F168();
    if (sub_255C7F168() != v5) {
      char v7 = sub_255C7F168();
    }
    sub_255C7F168();
    if (sub_255C7F168() != v6) {
      char v7 = sub_255C7F168();
    }
    sub_255B0F61C(v4, v3, (uint64_t)v1, (uint64_t)__src);
    memcpy((char *)v58 + 7, __src, 0x121uLL);
    v59[0] = v7;
    memcpy(&v59[1], v58, 0x128uLL);
    CGSizeMake(v59, v8);
  }
  else
  {
    sub_255B24708(v59);
  }
  sub_255A10514((uint64_t)v59, (uint64_t)v72, (uint64_t *)&unk_269F24410);
  uint64_t v9 = *v1;
  uint64_t v10 = v1[1];
  *(void *)double v59 = v9;
  *(void *)&v59[8] = v10;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_255C7F548();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v16 = sub_255C7F478();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  char v23 = v19 & 1;
  sub_255A094C0(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_255A10514((uint64_t)v72, (uint64_t)v64, (uint64_t *)&unk_269F24410);
  sub_255A10514((uint64_t)v64, (uint64_t)v65, (uint64_t *)&unk_269F24410);
  swift_bridgeObjectRetain();
  sub_255B248C8((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_255B2473C);
  sub_255A093E4(v16, v18, v23);
  sub_255A094C0(v16, v18, v23);
  swift_bridgeObjectRelease();
  sub_255A10514((uint64_t)v64, (uint64_t)__src, (uint64_t *)&unk_269F24410);
  sub_255B248C8((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_255B2495C);
  sub_255C7F2E8();
  uint64_t v24 = sub_255C7F238();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  char v26 = sub_255C7F1A8();
  sub_255A10514((uint64_t)v67, (uint64_t)v68, &qword_26B29F258);
  if (!v69)
  {
    if (qword_269F1FF50 == -1) {
      goto LABEL_14;
    }
    goto LABEL_19;
  }
  if (qword_269F1FF58 != -1) {
LABEL_19:
  }
    swift_once();
LABEL_14:
  sub_255A10514((uint64_t)v65, (uint64_t)v58, (uint64_t *)&unk_269F24410);
  v58[38] = v16;
  v58[39] = v18;
  LOBYTE(v58[40]) = v20 & 1;
  v58[41] = v22;
  char v60 = 0;
  memcpy(&v59[7], v58, 0x150uLL);
  sub_255C7DC08();
  uint64_t v54 = v28;
  uint64_t v55 = v27;
  double v52 = v30;
  uint64_t v53 = v29;
  char v61 = 0;
  char v31 = sub_255C7F1B8();
  if (qword_269F1FF50 != -1) {
    swift_once();
  }
  sub_255C7DC08();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  char v40 = v61;
  char v62 = 0;
  char v41 = sub_255C7F188();
  if (qword_269F1FF68 != -1) {
    swift_once();
  }
  sub_255C7DC08();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  char v50 = v62;
  char v63 = 0;
  *(void *)a1 = v56;
  *(void *)(a1 + 8) = v57;
  *(unsigned char *)(a1 + 16) = 0;
  memcpy((void *)(a1 + 17), v59, 0x157uLL);
  *(void *)(a1 + 360) = KeyPath;
  *(void *)(a1 + 368) = v24;
  *(unsigned char *)(a1 + 376) = v26;
  *(void *)(a1 + 384) = v55;
  *(void *)(a1 + 392) = v54;
  double result = v52;
  *(void *)(a1 + 400) = v53;
  *(double *)(a1 + 408) = v52;
  *(unsigned char *)(a1 + 416) = v40;
  *(unsigned char *)(a1 + 424) = v31;
  *(void *)(a1 + 432) = v33;
  *(void *)(a1 + 440) = v35;
  *(void *)(a1 + 448) = v37;
  *(void *)(a1 + 456) = v39;
  *(unsigned char *)(a1 + 464) = v50;
  *(unsigned char *)(a1 + 472) = v41;
  *(void *)(a1 + 480) = v43;
  *(void *)(a1 + 488) = v45;
  *(void *)(a1 + 496) = v47;
  *(void *)(a1 + 504) = v49;
  *(unsigned char *)(a1 + 512) = v63;
  return result;
}

uint64_t sub_255B0F61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&v43[0] = a1;
  *((void *)&v43[0] + 1) = a2;
  sub_255A1D78C();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_255C7F548();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  char v13 = *(unsigned char *)(a3 + 32);
  uint64_t v14 = qword_26B298DA0;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  double v15 = *(double *)&qword_26B298D98;
  if (qword_26B298D90 != -1) {
    swift_once();
  }
  LOBYTE(v43[0]) = 1;
  sub_255BEAC78(v13, 0, 0x100000000, (uint64_t)v51, v15, *(double *)&qword_26B298D80, 0.0);
  if (qword_269F1FF70 != -1) {
    swift_once();
  }
  char v16 = v10 & 1;
  uint64_t v17 = qword_269F330F8;
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF98);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_255C855F0;
  *(unsigned char *)(v19 + 32) = 0;
  *(void *)(v19 + 40) = v17;
  *(unsigned char *)(v19 + 48) = 1;
  *(void *)(v19 + 56) = v17;
  unint64_t v20 = sub_255A1897C(v19);
  long long v37 = v51[10];
  long long v38 = v51[11];
  long long v39 = v51[12];
  LOBYTE(v40) = v52;
  long long v33 = v51[6];
  long long v34 = v51[7];
  long long v35 = v51[8];
  long long v36 = v51[9];
  long long v29 = v51[2];
  long long v30 = v51[3];
  long long v31 = v51[4];
  long long v32 = v51[5];
  long long v27 = v51[0];
  long long v28 = v51[1];
  uint64_t v21 = (void *)sub_255C805F8();
  unsigned __int8 v22 = objc_msgSend(v21, sel__isNaturallyRTL);

  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = swift_getKeyPath();
  *(_OWORD *)&__src[160] = v37;
  *(_OWORD *)&__src[176] = v38;
  *(_OWORD *)&__src[192] = v39;
  *(_OWORD *)&__src[96] = v33;
  *(_OWORD *)&__src[112] = v34;
  *(_OWORD *)&__src[128] = v35;
  *(_OWORD *)&__src[144] = v36;
  *(_OWORD *)&__src[32] = v29;
  *(_OWORD *)&__src[48] = v30;
  *(_OWORD *)&__src[64] = v31;
  *(_OWORD *)&__src[80] = v32;
  *(_OWORD *)__src = v27;
  *(_OWORD *)&__src[16] = v28;
  *(void *)&__src[208] = v40;
  *(void *)&__src[216] = KeyPath;
  *(void *)&__src[224] = v20;
  *(void *)&__src[232] = v23;
  __src[240] = v22;
  *(void *)&__src[248] = v24;
  __src[256] = 0;
  char v42 = v16;
  memcpy((void *)(a4 + 32), __src, 0x101uLL);
  char v25 = v42;
  *(void *)a4 = v6;
  *(void *)(a4 + 8) = v8;
  *(unsigned char *)(a4 + 16) = v25;
  *(void *)(a4 + 24) = v12;
  v43[10] = v37;
  v43[11] = v38;
  v43[12] = v39;
  v43[6] = v33;
  v43[7] = v34;
  v43[8] = v35;
  v43[9] = v36;
  void v43[2] = v29;
  v43[3] = v30;
  v43[4] = v31;
  v43[5] = v32;
  v43[0] = v27;
  v43[1] = v28;
  uint64_t v44 = v40;
  uint64_t v45 = KeyPath;
  unint64_t v46 = v20;
  uint64_t v47 = v23;
  unsigned __int8 v48 = v22;
  uint64_t v49 = v24;
  char v50 = 0;
  sub_255A093E4(v6, v8, v16);
  swift_bridgeObjectRetain();
  sub_255B24B00((uint64_t)__src);
  sub_255B24C34((uint64_t)v43);
  sub_255A094C0(v6, v8, v16);
  return swift_bridgeObjectRelease();
}

double sub_255B0F978@<D0>(uint64_t a1@<X8>)
{
  return sub_255B0F128(a1);
}

uint64_t sub_255B0F9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F28);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v10 = (char *)&v23 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - v11;
  type metadata accessor for ScrubberInteractionViewModel(0);
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  swift_retain();
  sub_255C80128();
  sub_255C80118();
  swift_getKeyPath();
  sub_255C80138();
  swift_release();
  char v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v10, v3);
  long long v25 = v30;
  uint64_t v14 = v31;
  int v24 = v32;
  sub_255C80118();
  swift_getKeyPath();
  sub_255C80138();
  swift_release();
  v13(v7, v3);
  long long v23 = v27;
  uint64_t v15 = v28;
  char v16 = v29;
  uint64_t v17 = sub_255C801F8();
  uint64_t v19 = v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a2, v26, v20);
  uint64_t v21 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F23F40) + 36);
  *(_OWORD *)uint64_t v21 = v25;
  *(void *)(v21 + 16) = v14;
  *(unsigned char *)(v21 + 24) = v24;
  *(_OWORD *)(v21 + 32) = v23;
  *(void *)(v21 + 48) = v15;
  *(unsigned char *)(v21 + 56) = v16;
  *(void *)(v21 + 64) = v17;
  *(void *)(v21 + 72) = v19;
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, v3);
}

uint64_t sub_255B0FC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 56);
  *(void *)a2 = *(void *)(v3 + 48);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_255B0FD30()
{
  return swift_release();
}

uint64_t sub_255B0FE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255B0F9B4(a1, a2);
}

id sub_255B0FE10()
{
  v12[0] = *v0;
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v0 + 9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24068);
  sub_255C7FFF8();
  uint64_t v1 = v14;
  char v2 = v15;
  v12[0] = v0[2];
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v0 + 41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24070);
  sub_255C7FFF8();
  long long v10 = v13;
  uint64_t v3 = v14;
  char v4 = v15;
  char v5 = (objc_class *)type metadata accessor for WindowPropertiesReaderViewController();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC11MediaCoreUIP33_E92D59AEB5FF02FAFDF5606CD409BD2A36WindowPropertiesReaderViewController__windowWidth];
  *(_OWORD *)uint64_t v7 = v13;
  *((void *)v7 + 2) = v1;
  v7[24] = v2;
  uint64_t v8 = &v6[OBJC_IVAR____TtC11MediaCoreUIP33_E92D59AEB5FF02FAFDF5606CD409BD2A36WindowPropertiesReaderViewController__maximumFramesPerSecond];
  *(_OWORD *)uint64_t v8 = v10;
  *((void *)v8 + 2) = v3;
  v8[24] = v4;
  v11.receiver = v6;
  v11.super_class = v5;
  return objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, 0, 0);
}

id sub_255B0FF1C()
{
  return sub_255B0FE10();
}

uint64_t sub_255B0FF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255B232A0();

  return MEMORY[0x270F02710](a1, a2, a3, v6);
}

uint64_t sub_255B0FFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_255B232A0();

  return MEMORY[0x270F026D8](a1, a2, a3, v6);
}

void sub_255B1003C()
{
}

id sub_255B100C0(char a1)
{
  char v2 = v1;
  v24.receiver = v2;
  v24.super_class = (Class)type metadata accessor for WindowPropertiesReaderViewController();
  objc_msgSendSuper2(&v24, sel_viewIsAppearing_, a1 & 1);
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  char v5 = result;
  id v6 = objc_msgSend(result, sel_window);

  if (v6)
  {
    objc_msgSend(v6, sel_bounds);
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;

    v25.origin.CGFloat x = v8;
    v25.origin.CGFloat y = v10;
    v25.size.CGFloat width = v12;
    v25.size.CGFloat height = v14;
    double Width = CGRectGetWidth(v25);
  }
  else
  {
    double Width = 0.0;
  }
  long long v21 = *(_OWORD *)&v2[OBJC_IVAR____TtC11MediaCoreUIP33_E92D59AEB5FF02FAFDF5606CD409BD2A36WindowPropertiesReaderViewController__windowWidth];
  uint64_t v22 = *(void *)&v2[OBJC_IVAR____TtC11MediaCoreUIP33_E92D59AEB5FF02FAFDF5606CD409BD2A36WindowPropertiesReaderViewController__windowWidth
                     + 16];
  LOBYTE(v23) = v2[OBJC_IVAR____TtC11MediaCoreUIP33_E92D59AEB5FF02FAFDF5606CD409BD2A36WindowPropertiesReaderViewController__windowWidth
                 + 24];
  double v19 = Width;
  LOBYTE(v20) = v6 == 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24068);
  sub_255C7FFE8();
  id result = objc_msgSend(v2, sel_view, *(void *)&v19, v20, v21, v22, v23);
  if (!result) {
    goto LABEL_10;
  }
  char v16 = result;
  id v17 = objc_msgSend(result, sel_window);

  if (v17)
  {
    id v18 = objc_msgSend(v17, sel_screen);

    objc_msgSend(v18, sel_maximumFramesPerSecond);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24070);
  return (id)sub_255C7FFE8();
}

uint64_t sub_255B10320(uint64_t a1, double a2, double a3)
{
  char v4 = v3;
  uint64_t v8 = sub_255C803B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_255C803E8();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  CGFloat v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = (objc_class *)type metadata accessor for WindowPropertiesReaderViewController();
  v23.receiver = v4;
  v23.super_class = v15;
  objc_msgSendSuper2(&v23, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  sub_255A43740(0, (unint64_t *)&qword_26B29FC80);
  char v16 = (void *)sub_255C80C88();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_255B2067C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255AE4914;
  aBlock[3] = &block_descriptor_12;
  id v18 = _Block_copy(aBlock);
  swift_release();
  sub_255C803D8();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_255B12C70((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
  sub_255A09998((unint64_t *)&qword_26B29FC50, &qword_26B29F390);
  sub_255C80F78();
  MEMORY[0x25A296510](0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v21);
}

void sub_255B10640(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x25A297D40](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_beginAccess();
    char v4 = (void *)MEMORY[0x25A297D40](v1);
    if (v4)
    {
      char v5 = v4;
      id v6 = objc_msgSend(v4, sel_view);

      if (!v6)
      {
        __break(1u);
        goto LABEL_15;
      }
      id v7 = objc_msgSend(v6, sel_window);

      if (v7)
      {
        objc_msgSend(v7, sel_bounds);
        CGFloat v9 = v8;
        CGFloat v11 = v10;
        CGFloat v13 = v12;
        CGFloat v15 = v14;

        v23.origin.CGFloat x = v9;
        v23.origin.CGFloat y = v11;
        v23.size.CGFloat width = v13;
        v23.size.CGFloat height = v15;
        CGRectGetWidth(v23);
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F24068);
    sub_255C7FFE8();
  }
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x25A297D40](v1);
  if (!v16) {
    return;
  }
  uint64_t v17 = (void *)v16;
  swift_beginAccess();
  id v18 = (void *)MEMORY[0x25A297D40](v1);
  if (v18)
  {
    double v19 = v18;
    id v20 = objc_msgSend(v18, sel_view);

    if (v20)
    {
      id v21 = objc_msgSend(v20, sel_window);

      if (v21)
      {
        id v22 = objc_msgSend(v21, sel_screen);

        objc_msgSend(v22, sel_maximumFramesPerSecond);
      }
      goto LABEL_12;
    }
LABEL_15:
    __break(1u);
    return;
  }
LABEL_12:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24070);
  sub_255C7FFE8();
}

id sub_255B10980()
{
  return sub_255B10998((uint64_t (*)(void))type metadata accessor for WindowPropertiesReaderViewController);
}

id sub_255B10998(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_255B10A3C()
{
  qword_269F330B8 = 0x402E000000000000;
}

void sub_255B10A4C()
{
  qword_269F330C0 = 0x4020000000000000;
}

void sub_255B10A5C()
{
  qword_269F330C8 = 0x4020000000000000;
}

void sub_255B10A6C()
{
  qword_269F330D0 = 0x4018000000000000;
}

void sub_255B10A7C()
{
  qword_269F330D8 = 0x4024000000000000;
}

void sub_255B10A8C()
{
  qword_269F330E0 = 0x4020000000000000;
}

void sub_255B10A9C()
{
  qword_269F330E8 = 0x4000000000000000;
}

void sub_255B10AAC()
{
  qword_269F330F0 = 0x402C000000000000;
}

void sub_255B10ABC()
{
  qword_269F330F8 = 0x4030000000000000;
}

void sub_255B10ACC()
{
  qword_269F33100 = 0x4060000000000000;
}

void sub_255B10ADC()
{
  qword_269F33108 = 0x4020000000000000;
}

void sub_255B10AEC()
{
  qword_269F33110 = 0x4014000000000000;
}

double sub_255B10AFC()
{
  if (qword_269F1FF88 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_269F33110 + *(double *)&qword_269F33110;
  *(double *)&qword_269F33118 = *(double *)&qword_269F33110 + *(double *)&qword_269F33110;
  return result;
}

void sub_255B10B54()
{
  qword_269F33120 = 0x4014000000000000;
}

void sub_255B10B64()
{
  uint64_t v0 = type metadata accessor for ScrubberSpecs.TrackEffects(0);
  __swift_allocate_value_buffer(v0, qword_269F33128);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_269F33128);
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_systemGrayColor);
  char v4 = self;
  id v5 = objc_msgSend(v4, sel_effectCompositingColor_, v3);

  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v6 = objc_msgSend(v2, sel_labelColor);
  id v7 = objc_msgSend(v4, sel_effectCompositingColor_, v6);

  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v8 = objc_msgSend(v2, sel_systemGrayColor);
  id v9 = objc_msgSend(v4, sel_effectCompositingColor_, v8);

  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v10 = objc_msgSend(v2, sel_systemFillColor);
  id v11 = objc_msgSend(v4, sel_effectCompositingColor_, v10);

  if (v11)
  {
    double v12 = (char *)v1 + *(int *)(v0 + 32);
    uint64_t v13 = *MEMORY[0x263F1B998];
    uint64_t v14 = sub_255C802C8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
    *uint64_t v1 = v5;
    v1[1] = v7;
    v1[2] = v9;
    v1[3] = v11;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_255B10D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x270EFEE50](a1, a2, a5, a3, a6, a4);
}

uint64_t sub_255B10D6C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_255C7EA18();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v16 - v8;
  uint64_t v10 = *v1;
  uint64_t v11 = v1[1];
  sub_255C7E778();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F19978], v3);
  char v12 = sub_255C7DCB8();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v7, v3);
  v13(v9, v3);
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = v10;
  }
  *a1 = v14;
  return swift_retain();
}

void sub_255B10ED0()
{
  uint64_t v0 = type metadata accessor for ScrubberSpecs.TrackEffects(0);
  __swift_allocate_value_buffer(v0, qword_269F33140);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_269F33140);
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_whiteColor);
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_effectCompositingColor_withMode_alpha_, v3, 0, 0.45);

  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v6 = objc_msgSend(v2, sel_whiteColor);
  id v7 = objc_msgSend(v4, sel_effectCompositingColor_withMode_alpha_, v6, 0, 1.0);

  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v8 = objc_msgSend(v2, sel_whiteColor);
  id v9 = objc_msgSend(v4, sel_effectCompositingColor_withMode_alpha_, v8, 0, 0.45);

  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v10 = objc_msgSend(v2, sel_whiteColor);
  id v11 = objc_msgSend(v4, sel_effectCompositingColor_withMode_alpha_, v10, 0, 0.18);

  if (v11)
  {
    char v12 = (char *)v1 + *(int *)(v0 + 32);
    uint64_t v13 = *MEMORY[0x263F1B968];
    uint64_t v14 = sub_255C802C8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
    *uint64_t v1 = v5;
    v1[1] = v7;
    v1[2] = v9;
    v1[3] = v11;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_255B110E4()
{
  uint64_t v0 = sub_255C802C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C90);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v9 = (uint64_t *)((char *)&v20 - v8);
  sub_255C7F2E8();
  uint64_t v20 = sub_255C7F238();
  swift_release();
  if (qword_269F1FEF8 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_269F33048;
  swift_retain();
  int v11 = sub_255C7ECD8();
  uint64_t v21 = v10;
  swift_retain();
  uint64_t v12 = sub_255C7DFF8();
  LODWORD(v21) = v11;
  uint64_t v13 = sub_255C7DFF8();
  swift_release();
  if (qword_269F1FF08 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_269F33058;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F1B968], v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))((char *)v9 + *(int *)(v4 + 36), v3, v0);
  *id v9 = v14;
  CGFloat v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  swift_retain_n();
  v15(v3, v0);
  swift_release();
  int v16 = sub_255C7ECE8();
  sub_255A09540((uint64_t)v9, (uint64_t)v7, &qword_269F21C90);
  sub_255A09998(&qword_269F24020, &qword_269F21C90);
  uint64_t v17 = sub_255C7DFF8();
  LODWORD(v21) = v16;
  uint64_t v18 = sub_255C7DFF8();
  uint64_t result = sub_255A095A4((uint64_t)v9, &qword_269F21C90);
  qword_269F33158 = v20;
  unk_269F33160 = v12;
  qword_269F33168 = v13;
  unk_269F33170 = v17;
  qword_269F33178 = v18;
  return result;
}

uint64_t sub_255B11410()
{
  uint64_t v0 = sub_255C802C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C90);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v9 = (uint64_t *)((char *)&v15 - v8);
  sub_255C7F2E8();
  uint64_t v10 = sub_255C7F238();
  swift_release();
  if (qword_269F1FF08 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_269F33058;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F1B968], v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))((char *)v9 + *(int *)(v4 + 36), v3, v0);
  *id v9 = v11;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  swift_retain();
  v12(v3, v0);
  sub_255A09540((uint64_t)v9, (uint64_t)v7, &qword_269F21C90);
  sub_255A09998(&qword_269F24020, &qword_269F21C90);
  uint64_t v13 = sub_255C7DFF8();
  uint64_t result = sub_255A095A4((uint64_t)v9, &qword_269F21C90);
  qword_269F33180 = v10;
  *(void *)algn_269F33188 = v13;
  return result;
}

uint64_t sub_255B11660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_255C7E158();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_255C7E288();
  sub_255B12C70((unint64_t *)&qword_26B29F290, MEMORY[0x263F18AB8]);
  sub_255C80B08();
  sub_255C80B48();
  uint64_t v13 = sub_255C80B38();
  if (v13 == 3)
  {
    sub_255C7E298();
    uint64_t v14 = &v11[*(int *)(v8 + 24)];
    sub_255C7E298();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  }
  else
  {
    if (v13 != 2)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      uint64_t v15 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v15, 1, v8);
    }
    sub_255C7E298();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v11[*(int *)(v8 + 24)], 1, 1, v4);
  }
  sub_255C7E298();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(&v11[*(int *)(v8 + 20)], v7, v4);
  sub_255B23238((uint64_t)v11, a2, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
  uint64_t v15 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v15, 1, v8);
}

double sub_255B1197C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_255B1F844(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_255B11994(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_255B1FB04(a9, a1, a2, a3, a4);
}

double ScrubContext.time.getter()
{
  return *(double *)v0;
}

void ScrubContext.event.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

BOOL static ScrubContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
}

BOOL static ScrubEvent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL sub_255B119F4(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
}

uint64_t ScrubEvent.hash(into:)()
{
  return sub_255C81588();
}

uint64_t ScrubEvent.hashValue.getter()
{
  return sub_255C815B8();
}

uint64_t ScrubberReader.init(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for ScrubberProxy(0);
  uint64_t v6 = (void *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F23980);
  swift_allocObject();
  uint64_t v6[2] = sub_255C7DA28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2984C8);
  swift_allocObject();
  v6[3] = sub_255C7DA08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D360);
  swift_allocObject();
  v6[4] = sub_255C7DA08();
  sub_255C7D748();
  uint64_t result = sub_255C7FE58();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  a3[3] = v8;
  return result;
}

uint64_t ScrubberReader.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v27 = v4;
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  v24[0] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ScrubberProxy(255);
  v24[1] = v6;
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v7 = v26;
  uint64_t v25 = sub_255B12C70((unint64_t *)&unk_269F23848, (void (*)(uint64_t))type metadata accessor for ScrubberProxy);
  uint64_t v32 = v4;
  uint64_t v33 = v6;
  uint64_t v34 = v7;
  uint64_t v35 = v25;
  uint64_t v28 = MEMORY[0x263F1A970];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v29 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v14 = *(void (**)(uint64_t))v2;
  uint64_t v15 = *(void *)(v2 + 24);
  uint64_t v32 = *(void *)(v2 + 16);
  uint64_t v16 = v32;
  uint64_t v33 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24108);
  sub_255C7FE68();
  uint64_t v17 = v24[0];
  v14(v36);
  swift_release();
  uint64_t v32 = v16;
  uint64_t v33 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24108);
  sub_255C7FE68();
  uint64_t v18 = swift_checkMetadataState();
  uint64_t v20 = v26;
  uint64_t v19 = v27;
  uint64_t v21 = v25;
  sub_255C7F668();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v17, v19);
  uint64_t v32 = v19;
  uint64_t v33 = v18;
  uint64_t v34 = v20;
  uint64_t v35 = v21;
  swift_getOpaqueTypeConformance2();
  sub_255A20F54(v11);
  id v22 = *(void (**)(char *, uint64_t))(v29 + 8);
  v22(v11, OpaqueTypeMetadata2);
  sub_255A20F54(v13);
  return ((uint64_t (*)(char *, uint64_t))v22)(v13, OpaqueTypeMetadata2);
}

Swift::Void __swiftcall ScrubberProxy.seek(to:)(Swift::Double to)
{
  double v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_retain_n();
  uint64_t v9 = sub_255C7D878();
  os_log_type_t v10 = sub_255C80C08();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(double *)&uint64_t v16 = COERCE_DOUBLE(swift_slowAlloc());
    Swift::Double v17 = v2;
    Swift::Double v18 = *(double *)&v16;
    *(_DWORD *)uint64_t v11 = 136446466;
    uint64_t v12 = sub_255C80658();
    Swift::Double v17 = COERCE_DOUBLE(sub_255A7BEC4(v12, v13, (uint64_t *)&v18));
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    Swift::Double v17 = to;
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v9, v10, "ScrubberReader proxy %{public}s seeking to time %f", (uint8_t *)v11, 0x16u);
    uint64_t v14 = v16;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v14, -1, -1);
    MEMORY[0x25A297C00](v11, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  Swift::Double v18 = to;
  sub_255C7DA18();
}

Swift::Void __swiftcall ScrubberProxy.notifyJumped(by:)(Swift::Double by)
{
  double v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_retain_n();
  uint64_t v9 = sub_255C7D878();
  os_log_type_t v10 = sub_255C80C08();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(double *)&uint64_t v16 = COERCE_DOUBLE(swift_slowAlloc());
    Swift::Double v17 = v2;
    Swift::Double v18 = *(double *)&v16;
    *(_DWORD *)uint64_t v11 = 136446466;
    uint64_t v12 = sub_255C80658();
    Swift::Double v17 = COERCE_DOUBLE(sub_255A7BEC4(v12, v13, (uint64_t *)&v18));
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    Swift::Double v17 = by;
    sub_255C80F18();
    _os_log_impl(&dword_255A00000, v9, v10, "ScrubberReader proxy %{public}s notifying jumped by interval %f", (uint8_t *)v11, 0x16u);
    uint64_t v14 = v16;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v14, -1, -1);
    MEMORY[0x25A297C00](v11, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  Swift::Double v18 = by;
  sub_255C7D9F8();
}

Swift::Void __swiftcall ScrubberProxy._pptChangeScrubberInteractionState(to:)(MediaCoreUI::ScrubState to)
{
  uint64_t v2 = v1;
  id v3 = (unsigned __int8 *)to;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v8) = *v3;
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  swift_retain_n();
  os_log_type_t v10 = sub_255C7D878();
  int v11 = sub_255C80C08();
  if (os_log_type_enabled(v10, (os_log_type_t)v11))
  {
    int v21 = v11;
    int v12 = v8;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v2;
    uint64_t v25 = v20;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v13 = sub_255C80658();
    uint64_t v24 = sub_255A7BEC4(v13, v14, &v25);
    sub_255C80F18();
    uint64_t v22 = v2;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    unint64_t v15 = 0xE800000000000000;
    uint64_t v16 = 0x676E696B63617274;
    if (v12 != 1)
    {
      uint64_t v16 = 0x6172656C65636564;
      unint64_t v15 = 0xEC000000676E6974;
    }
    int v23 = v12;
    if (v12) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 1701602409;
    }
    if (v12) {
      unint64_t v18 = v15;
    }
    else {
      unint64_t v18 = 0xE400000000000000;
    }
    uint64_t v24 = sub_255A7BEC4(v17, v18, &v25);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v10, (os_log_type_t)v21, "ScrubberReader proxy %{public}s changing interaction state to %s", (uint8_t *)v8, 0x16u);
    uint64_t v19 = v20;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v19, -1, -1);
    MEMORY[0x25A297C00](v8, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    LOBYTE(v8) = v23;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  LOBYTE(v25) = v8;
  sub_255C7D9F8();
}

BOOL static ScrubberProxy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t ScrubberProxy.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI13ScrubberProxy___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScrubberProxy.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI13ScrubberProxy___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t ScrubberSection.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double ScrubberSection.startTime.getter()
{
  return *(double *)(v0 + 16);
}

MediaCoreUI::ScrubberSection __swiftcall ScrubberSection.init(title:startTime:)(Swift::String title, Swift::Double startTime)
{
  *(Swift::String *)uint64_t v2 = title;
  *(Swift::Double *)(v2 + 16) = startTime;
  result.title = title;
  result.startTime = startTime;
  return result;
}

BOOL static ScrubberSection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_255C81428();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t ScrubberSection.hash(into:)()
{
  return sub_255C815A8();
}

uint64_t ScrubberSection.hashValue.getter()
{
  return sub_255C815B8();
}

BOOL sub_255B129F4(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_255C81428();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_255B12A58()
{
  return sub_255C815A8();
}

uint64_t sub_255B12AB8()
{
  return sub_255C815B8();
}

uint64_t ScrubberLoadingConfiguration.disableInteraction.getter()
{
  return *v0;
}

uint64_t ScrubberLoadingConfiguration.showPlaceholderLabels.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ScrubberLoadingConfiguration.showSpinner.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t ScrubberLoadingConfiguration.availableDuration.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t MCUINamespace<A>.scrubberTooltipEnabled(_:)(uint64_t a1, uint64_t a2)
{
  return sub_255B12E30(a1, a2);
}

uint64_t sub_255B12B68()
{
  return sub_255B12B88((void (*)(void))sub_255B212E0);
}

uint64_t sub_255B12B88(void (*a1)(void))
{
  a1();
  sub_255C7E8C8();
  return v2;
}

uint64_t sub_255B12BD0@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_2Tm((void (*)(void))sub_255B212E0, a1);
}

uint64_t sub_255B12BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_255B212E0);
}

uint64_t sub_255B12C10@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_2Tm((void (*)(void))sub_255B2128C, a1);
}

uint64_t sub_255B12C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_255B2128C);
}

uint64_t sub_255B12C58()
{
  return sub_255B21224();
}

uint64_t sub_255B12C70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MCUINamespace<A>.scrubberSensitivityInteraction(direction:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  char v5 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, v3);
  swift_getKeyPath();
  v10[1] = v8;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_255B12DDC()
{
  sub_255B20C10();

  return sub_255C7E8C8();
}

uint64_t MCUINamespace<A>.scrubberTimeLabelsVisible(_:)(uint64_t a1, uint64_t a2)
{
  return sub_255B12E30(a1, a2);
}

uint64_t sub_255B12E30(uint64_t a1, uint64_t a2)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  swift_getKeyPath();
  unsigned char v9[15] = v3;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ScrubberSensitivityInteractionDirection.rawValue.getter()
{
  return *(void *)v0;
}

MediaCoreUI::ScrubberSensitivityInteractionDirection __swiftcall ScrubberSensitivityInteractionDirection.init(rawValue:)(MediaCoreUI::ScrubberSensitivityInteractionDirection rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static ScrubberSensitivityInteractionDirection.none.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static ScrubberSensitivityInteractionDirection.up.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static ScrubberSensitivityInteractionDirection.down.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_255B12F88(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_255B12F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_255B18D9C();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t MCUINamespace<A>.scrubberForceSensitivityTextToSingleLine(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  char v7 = a1;
  v23[0] = a4;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](a1);
  int v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BD20);
  uint64_t v12 = sub_255C7E458();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v23 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v11, v5, v8, v17);
  swift_getKeyPath();
  char v24 = v7 ^ 1;
  sub_255C7F678();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v20 = sub_255A09998(&qword_26B29BD18, &qword_26B29BD20);
  v23[1] = a3;
  v23[2] = v20;
  swift_getWitnessTable();
  sub_255A20F54(v15);
  int v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v15, v12);
  sub_255A20F54(v19);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, v12);
}

uint64_t sub_255B13278()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_255B1331C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_255B133C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_255B134A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_255C7D898();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v27 = v2;
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v2 + 32))
  {
    if (a2) {
      return result;
    }
  }
  else if ((a2 & 1) == 0 && *(double *)(v2 + 24) == *(double *)&a1)
  {
    return result;
  }
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  swift_retain_n();
  uint64_t v12 = sub_255C7D878();
  os_log_type_t v13 = sub_255C80C08();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v7;
    uint64_t v16 = v15;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v16 = 136446466;
    int v24 = v14;
    uint64_t v27 = a1;
    char v28 = a2 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF58);
    uint64_t v17 = sub_255C80658();
    uint64_t v27 = sub_255A7BEC4(v17, v18, &v29);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v23[1] = v16 + 14;
    swift_getKeyPath();
    uint64_t v27 = v3;
    sub_255C7D718();
    swift_release();
    char v19 = *(unsigned char *)(v3 + 32);
    uint64_t v27 = *(void *)(v3 + 24);
    char v28 = v19;
    uint64_t v20 = sub_255C80658();
    uint64_t v27 = sub_255A7BEC4(v20, v21, &v29);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v12, (os_log_type_t)v24, "ScrubberSections.duration changed from %{public}s to %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v22, -1, -1);
    MEMORY[0x25A297C00](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_255B146B0();
}

uint64_t sub_255B13878()
{
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + 24);
}

uint64_t sub_255B1391C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 32);
  *(void *)a2 = *(void *)(v3 + 24);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_255B139CC()
{
  return swift_release();
}

uint64_t sub_255B13AA0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_255C7D898();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v27 = v2;
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v2 + 48))
  {
    if (a2) {
      return result;
    }
  }
  else if ((a2 & 1) == 0 && *(double *)(v2 + 40) == *(double *)&a1)
  {
    return result;
  }
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  swift_retain_n();
  uint64_t v12 = sub_255C7D878();
  os_log_type_t v13 = sub_255C80C08();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v7;
    uint64_t v16 = v15;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v16 = 136446466;
    int v24 = v14;
    uint64_t v27 = a1;
    char v28 = a2 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EF58);
    uint64_t v17 = sub_255C80658();
    uint64_t v27 = sub_255A7BEC4(v17, v18, &v29);
    sub_255C80F18();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v23[1] = v16 + 14;
    swift_getKeyPath();
    uint64_t v27 = v3;
    sub_255C7D718();
    swift_release();
    char v19 = *(unsigned char *)(v3 + 48);
    uint64_t v27 = *(void *)(v3 + 40);
    char v28 = v19;
    uint64_t v20 = sub_255C80658();
    uint64_t v27 = sub_255A7BEC4(v20, v21, &v29);
    sub_255C80F18();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255A00000, v12, (os_log_type_t)v24, "ScrubberSections.scrubberWidth changed from %{public}s to %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x25A297C00](v22, -1, -1);
    MEMORY[0x25A297C00](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_255B146B0();
}

uint64_t sub_255B13E70()
{
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  return *(void *)(v0 + 40);
}

uint64_t sub_255B13F14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 48);
  *(void *)a2 = *(void *)(v3 + 40);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_255B13FC4()
{
  return swift_release();
}

uint64_t sub_255B14098(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v30 = v1;
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  uint64_t result = sub_255AC19DC(*(void *)(v1 + 56), a1);
  if ((result & 1) == 0)
  {
    if (qword_269F1FFD8 != -1) {
      swift_once();
    }
    uint64_t v9 = __swift_project_value_buffer(v4, (uint64_t)qword_269F33190);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v10 = sub_255C7D878();
    os_log_type_t v11 = sub_255C80C08();
    int v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v28 = v5;
      uint64_t v14 = v13;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v30 = v27;
      *(_DWORD *)uint64_t v14 = 136315394;
      os_log_t v26 = v10;
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x25A296080](v15, &type metadata for ScrubberSection);
      HIDWORD(v25) = v12;
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_255A7BEC4(v16, v18, &v30);
      sub_255C80F18();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      swift_getKeyPath();
      uint64_t v29 = v2;
      sub_255C7D718();
      swift_release();
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v20 = MEMORY[0x25A296080](v19, &type metadata for ScrubberSection);
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_255A7BEC4(v20, v22, &v30);
      sub_255C80F18();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v23 = v26;
      _os_log_impl(&dword_255A00000, v26, BYTE4(v25), "ScrubberSections.visibleSections changed from %s to %{public}s", (uint8_t *)v14, 0x16u);
      uint64_t v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x25A297C00](v24, -1, -1);
      MEMORY[0x25A297C00](v14, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v7, v4);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return result;
}

uint64_t sub_255B14480()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_255B14524@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_255B145D0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_255B146B0()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  uint64_t v46 = v0;
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  if (!*(void *)(*(void *)(v0 + 16) + 16)) {
    goto LABEL_10;
  }
  swift_getKeyPath();
  uint64_t v46 = v0;
  sub_255C7D718();
  swift_release();
  if ((*(unsigned char *)(v0 + 32) & 1) != 0
    || (double v2 = *(double *)(v0 + 24), v2 <= 0.0)
    || (swift_getKeyPath(), uint64_t v46 = v0, sub_255C7D718(), swift_release(), (*(unsigned char *)(v0 + 48) & 1) != 0)
    || (double v3 = *(double *)(v0 + 40), v3 <= 0.0))
  {
LABEL_10:
    swift_getKeyPath();
    uint64_t v46 = v0;
    sub_255C7D718();
    uint64_t result = swift_release();
    if (!*(void *)(*(void *)(v0 + 56) + 16)) {
      return result;
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    uint64_t v46 = v0;
LABEL_12:
    sub_255C7D708();
    return swift_release();
  }
  if (qword_269F1FF30 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_269F330B8;
  swift_getKeyPath();
  sub_255C7D718();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_255B2038C(v2);
  swift_bridgeObjectRelease();
  uint64_t v46 = v5;
  swift_bridgeObjectRetain();
  sub_255B17D88(&v46);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v46 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    double v8 = v4 * 0.5;
    uint64_t v9 = (double *)(v46 + 48);
    do
    {
      double v15 = *v9;
      double v16 = v3 * vabdd_f64(0.0, *v9) / v2;
      if (v8 + 1.9047619 < v3 * vabdd_f64(v2, *v9) / v2 && v8 < v16)
      {
        uint64_t v19 = *((void *)v9 - 2);
        uint64_t v18 = *((void *)v9 - 1);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v46 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_255B16D4C(0, *(void *)(v7 + 16) + 1, 1);
          uint64_t v7 = v46;
        }
        unint64_t v13 = *(void *)(v7 + 16);
        unint64_t v12 = *(void *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_255B16D4C(v12 > 1, v13 + 1, 1);
          uint64_t v7 = v46;
        }
        *(void *)(v7 + 16) = v13 + 1;
        uint64_t v14 = (double *)(v7 + 24 * v13);
        *((void *)v14 + 4) = v19;
        *((void *)v14 + 5) = v18;
        v14[6] = v15;
      }
      v9 += 3;
      --v6;
    }
    while (v6);
  }
  swift_release();
  unint64_t v21 = *(void *)(v7 + 16);
  if (!v21)
  {
    swift_release();
    swift_getKeyPath();
    uint64_t v46 = v1;
    sub_255C7D718();
    uint64_t result = swift_release();
    if (!*(void *)(*(void *)(v1 + 56) + 16)) {
      return result;
    }
    uint64_t v41 = swift_getKeyPath();
    MEMORY[0x270FA5388](v41);
    uint64_t v46 = v1;
    goto LABEL_12;
  }
  unint64_t v22 = v21 - 1;
  os_log_t v23 = (uint64_t *)(v7 + 32 + 24 * (v21 - 1));
  uint64_t v24 = v23[1];
  uint64_t v44 = *v23;
  uint64_t v25 = v23[2];
  swift_bridgeObjectRetain();
  os_log_t v26 = sub_255C16218(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  unint64_t v29 = v28 + 1;
  if (v28 >= v27 >> 1) {
    os_log_t v26 = sub_255C16218((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  unint64_t v26[2] = v29;
  uint64_t v30 = &v26[3 * v28];
  unsigned char v30[4] = v44;
  v30[5] = v24;
  v30[6] = v25;
  if (v21 < 2)
  {
LABEL_39:
    swift_release();
    sub_255B16AC4((uint64_t)v26);
    swift_bridgeObjectRelease();
    uint64_t v40 = swift_getKeyPath();
    MEMORY[0x270FA5388](v40);
    uint64_t v46 = v1;
    sub_255C7D708();
    swift_release();
    return swift_release();
  }
  uint64_t v31 = v7 + 16;
  while (v22 < *(void *)(v7 + 16))
  {
    double v32 = *(double *)(v7 + 32 + 24 * v22 + 16);
    uint64_t v33 = (double *)(v31 + 24 * v22);
    while (1)
    {
      unint64_t v34 = v22 - 1;
      double v35 = v33[1];
      if (v3 * vabdd_f64(v32, v35) / v2 >= 6.0) {
        break;
      }
      v33 -= 3;
      --v22;
      if (v34 + 1 <= 1) {
        goto LABEL_39;
      }
    }
    double v36 = *v33;
    uint64_t v42 = *((void *)v33 - 1);
    uint64_t v43 = v31;
    int64_t v45 = v29 + 1;
    unint64_t v37 = v26[3];
    swift_bridgeObjectRetain();
    if (v29 >= v37 >> 1) {
      os_log_t v26 = sub_255C16218((void *)(v37 > 1), v45, 1, v26);
    }
    uint64_t v31 = v43;
    unint64_t v26[2] = v45;
    long long v38 = (double *)&v26[3 * v29];
    *((void *)v38 + 4) = v42;
    v38[5] = v36;
    v38[6] = v35;
    ++v29;
    if (v22-- <= 1) {
      goto LABEL_39;
    }
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_255B14D68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MediaCoreUI16ScrubberSections___observationRegistrar;
  uint64_t v2 = sub_255C7D758();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_255B14E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void v31[2] = a1;
  uint64_t v37 = a3;
  uint64_t v4 = sub_255C805C8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_255C7D6C8();
  MEMORY[0x270FA5388](v5 - 8);
  double v36 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_255C805E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_255C7EFA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23E80);
  uint64_t v12 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23E88);
  uint64_t v15 = MEMORY[0x270FA5388](v35);
  uint64_t v33 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v34 = (char *)v31 - v17;
  uint64_t v38 = a2;
  v31[0] = sub_255B15388();
  v31[1] = v18;
  v31[3] = v20;
  v31[4] = v19;
  sub_255C7EF78();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23E90);
  uint64_t v22 = sub_255A09998((unint64_t *)&unk_269F23E98, &qword_269F23E90);
  sub_255C7F8F8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_255C80588();
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v23 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v41 = sub_255C80648();
  uint64_t v42 = v24;
  uint64_t v39 = v21;
  uint64_t v40 = v22;
  swift_getOpaqueTypeConformance2();
  sub_255A1D78C();
  uint64_t v25 = v32;
  uint64_t v26 = (uint64_t)v33;
  sub_255C7F868();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  sub_255C805B8();
  sub_255C805A8();
  sub_255C80598();
  sub_255C805A8();
  sub_255C80598();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255C805A8();
  sub_255C805D8();
  id v27 = (id)qword_26B2AA660;
  sub_255C7D6B8();
  uint64_t v41 = sub_255C80648();
  uint64_t v42 = v28;
  uint64_t v29 = (uint64_t)v34;
  sub_255C7E3E8();
  swift_bridgeObjectRelease();
  sub_255A095A4(v26, &qword_269F23E88);
  swift_retain();
  sub_255C7E438();
  swift_release();
  return sub_255A095A4(v29, &qword_269F23E88);
}

uint64_t sub_255B15388()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 80);
  swift_getKeyPath();
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  if ((*(unsigned char *)(v1 + 32) & 1) == 0)
  {
    swift_getKeyPath();
    sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
    sub_255C7D718();
    swift_release();
    id v2 = (id)AXDurationStringForDuration();
    if (v2)
    {
      double v3 = v2;
      uint64_t v4 = sub_255C80628();

      id v5 = (id)AXDurationStringForDuration();
      if (v5)
      {
        uint64_t v6 = v5;
        sub_255C80628();

        return v4;
      }
      swift_bridgeObjectRelease();
    }
  }
  if (qword_269F1FF28 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_269F330A8;
  swift_bridgeObjectRetain_n();
  return v4;
}

uint64_t sub_255B15570(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D898();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x270FA5388](v4);
  int64_t v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7F0F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v41 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v49 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(*(void *)(v49 + 72) + 80);
  swift_getKeyPath();
  uint64_t v51 = v16;
  uint64_t v48 = sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  uint64_t result = swift_release();
  if ((*(unsigned char *)(v16 + 32) & 1) == 0)
  {
    double v18 = *(double *)(v16 + 24);
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v19(v15, a1, v6);
    int v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v15, v6);
    if (v20 == *MEMORY[0x263F1A498])
    {
      double v21 = v18 * 0.05;
    }
    else if (v20 == *MEMORY[0x263F1A490])
    {
      double v21 = v18 * -0.05;
    }
    else
    {
      uint64_t v44 = v19;
      if (qword_269F1FFD8 != -1) {
        swift_once();
      }
      uint64_t v22 = v47;
      uint64_t v23 = __swift_project_value_buffer(v47, (uint64_t)qword_269F33190);
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v23, v22);
      v44(v13, a1, v6);
      uint64_t v24 = sub_255C7D878();
      os_log_type_t v25 = sub_255C80BF8();
      uint64_t v43 = v24;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v51 = v42;
        uint64_t v41 = v26;
        *(_DWORD *)uint64_t v26 = 136315138;
        v44(v10, (uint64_t)v13, v6);
        uint64_t v27 = sub_255C80658();
        uint64_t v50 = sub_255A7BEC4(v27, v28, &v51);
        sub_255C80F18();
        swift_bridgeObjectRelease();
        uint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
        v29(v13, v6);
        uint64_t v30 = v43;
        os_log_type_t v31 = v25;
        uint64_t v32 = v41;
        _os_log_impl(&dword_255A00000, v43, v31, "Unknown case AccessibilityAdjustmentDirection.%s", v41, 0xCu);
        uint64_t v33 = v42;
        swift_arrayDestroy();
        MEMORY[0x25A297C00](v33, -1, -1);
        MEMORY[0x25A297C00](v32, -1, -1);
      }
      else
      {
        uint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
        v29(v13, v6);
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
      v29(v15, v6);
      double v21 = 0.0;
    }
    uint64_t v34 = v49;
    uint64_t v35 = *(void *)(v49 + 72);
    double v36 = *(double *)(v35 + 96);
    double v37 = v21 + v36;
    if (v37 <= 0.0) {
      double v37 = 0.0;
    }
    if (v18 < v37) {
      double v37 = v18;
    }
    *(double *)(v35 + 96) = v37;
    sub_255B01C88(v36);
    uint64_t v38 = *(void *)(v35 + 80);
    swift_getKeyPath();
    uint64_t v51 = v38;
    sub_255C7D718();
    swift_release();
    uint64_t v39 = swift_bridgeObjectRetain();
    sub_255AFD45C(v39);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    uint64_t v51 = v2;
    sub_255B12C70(&qword_269F23860, (void (*)(uint64_t))type metadata accessor for ScrubberViewModel);
    sub_255C7D718();
    swift_release();
    uint64_t v40 = *(void (**)(uint64_t *))(v2 + 24);
    uint64_t v51 = *(void *)(*(void *)(v34 + 72) + 96);
    char v52 = 2;
    swift_retain();
    v40(&v51);
    return swift_release();
  }
  return result;
}

uint64_t sub_255B15B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255B14E18(a1, *v2, a2);
}

uint64_t sub_255B15B54()
{
  uint64_t result = sub_255C80248();
  qword_269F23830 = result;
  return result;
}

uint64_t sub_255B15B8C()
{
  uint64_t result = sub_255C80298();
  qword_269F23838 = result;
  return result;
}

uint64_t sub_255B15BB8()
{
  uint64_t result = sub_255C80298();
  qword_269F23840 = result;
  return result;
}

uint64_t sub_255B15BEC()
{
  uint64_t v0 = sub_255C7D898();
  __swift_allocate_value_buffer(v0, qword_269F33190);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F33190);
  return sub_255C7D888();
}

MediaCoreUI::ScrubState_optional __swiftcall ScrubState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_255C81338();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_255B15CC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_255AF6A40(*a1, *a2);
}

uint64_t sub_255B15CCC()
{
  return sub_255C815B8();
}

uint64_t sub_255B15D70()
{
  sub_255C806B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255B15E00()
{
  return sub_255C815B8();
}

MediaCoreUI::ScrubState_optional sub_255B15EA0(Swift::String *a1)
{
  return ScrubState.init(rawValue:)(*a1);
}

void sub_255B15EAC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x676E696B63617274;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6172656C65636564;
    unint64_t v4 = 0xEC000000676E6974;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701602409;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t type metadata accessor for Scrubber.CompanionViews()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255B15F24()
{
  unint64_t result = qword_269F23890;
  if (!qword_269F23890)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23868);
    sub_255B160B0(&qword_269F23898, &qword_269F238A0, (void (*)(void))sub_255B15FD8, (void (*)(void))sub_255B16258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23890);
  }
  return result;
}

unint64_t sub_255B15FD8()
{
  unint64_t result = qword_269F238A8;
  if (!qword_269F238A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F238B0);
    sub_255B160B0(&qword_269F238B8, &qword_269F238C0, (void (*)(void))sub_255B16138, (void (*)(void))sub_255A101A0);
    sub_255A09998(&qword_269F238F0, &qword_269F238F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F238A8);
  }
  return result;
}

uint64_t sub_255B160B0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B16138()
{
  unint64_t result = qword_269F238C8;
  if (!qword_269F238C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F238D0);
    sub_255B12C70(&qword_269F238D8, (void (*)(uint64_t))type metadata accessor for MediaTimelineControl);
    sub_255B16204();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F238C8);
  }
  return result;
}

uint64_t type metadata accessor for MediaTimelineControl(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F23DE0);
}

unint64_t sub_255B16204()
{
  unint64_t result = qword_269F238E0;
  if (!qword_269F238E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F238E0);
  }
  return result;
}

unint64_t sub_255B16258()
{
  unint64_t result = qword_269F23900;
  if (!qword_269F23900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23900);
  }
  return result;
}

uint64_t type metadata accessor for ScrubberPlayhead(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F23A48);
}

uint64_t sub_255B162DC@<X0>(uint64_t a1@<X8>)
{
  return sub_255B06388(*(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_255B162EC@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  return sub_255B09000(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_255B162F8()
{
  unint64_t result = qword_269F23948;
  if (!qword_269F23948)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23940);
    sub_255A09998(&qword_269F23950, &qword_269F23958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23948);
  }
  return result;
}

uint64_t sub_255B16390@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_255C7E698();
  *a1 = v3;
  return result;
}

uint64_t sub_255B163BC()
{
  return sub_255C7E6A8();
}

uint64_t sub_255B163E8()
{
  type metadata accessor for Scrubber();

  return sub_255B093F8();
}

unint64_t sub_255B16474()
{
  unint64_t result = qword_269F23968;
  if (!qword_269F23968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23968);
  }
  return result;
}

uint64_t sub_255B164C8()
{
  return sub_255C7E718();
}

uint64_t sub_255B164EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255B17CB8(a1, a2, a3, a4, MEMORY[0x263F18DD8], MEMORY[0x263F19340]);
}

unint64_t sub_255B1652C()
{
  unint64_t result = qword_269F23970;
  if (!qword_269F23970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23970);
  }
  return result;
}

uint64_t sub_255B16580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void (*)(void))MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v14 - v10;
  v9();
  sub_255A20F54(v8);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a4);
  sub_255A20F54(v11);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a4);
}

uint64_t sub_255B166B4@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a6;
  uint64_t v26 = a5;
  uint64_t v23 = a3;
  uint64_t v24 = a2;
  uint64_t v22 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v21 - v15;
  uint64_t v17 = sub_255C7DF38();
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t result = v17 - 8;
  if (*(void *)(v19 + 64) == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v7);
    v24((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(char *, uint64_t))(v8 + 8))((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    sub_255A20F54(v14);
    int v20 = *(void (**)(char *, uint64_t))(v11 + 8);
    v20(v14, a4);
    sub_255A20F54(v16);
    return ((uint64_t (*)(char *, uint64_t))v20)(v16, a4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_255B168F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F180);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  _OWORD v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_255B17870((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_255B20BB4();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_255B169DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F240F0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  _OWORD v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_255B17A6C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_255B20BB4();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_255B16AC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24058);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  _OWORD v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_255AF6DBC(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_255B16B94(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D1F0);
    uint64_t v4 = 8 * a2;
    uint64_t v5 = (char *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = 2 * (v7 >> 3);
    uint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 8 * a2);
      return (uint64_t)v5;
    }
  }
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B16CCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_255B16DAC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_255B16CEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_255B16F18(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_255B16D0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_255B17078(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_255B16D2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_255B171D8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_255B16D4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_255B17418(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_255B16D6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_255B175A0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_255B16D8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_255B17710(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_255B16DAC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BFA8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B16F18(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F388);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B17078(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29D1E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B171D8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F240E8);
  uint64_t v10 = *(void *)(sub_255C7D5C8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_255C7D5C8() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  double v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B17418(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F24058);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B175A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B17710(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D1F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B17870(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    AudioQueueRef v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *int64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_255B17A6C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    AudioQueueRef v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *int64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_255B17C68()
{
  return sub_255C7E688();
}

uint64_t sub_255B17C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255B17CB8(a1, a2, a3, a4, MEMORY[0x263F18570], MEMORY[0x263F19248]);
}

uint64_t sub_255B17CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_255B17D88(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_255B189A8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_255B17DF4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_255B17DF4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_255C813C8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v88 = *a1;
      uint64_t v89 = *a1 + 16;
      uint64_t v90 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v92 = *(double *)(v88 + 24 * i + 16);
        uint64_t v93 = v90;
        uint64_t v94 = v89;
        do
        {
          if (v92 >= *(double *)v94) {
            break;
          }
          if (!v88) {
            goto LABEL_141;
          }
          uint64_t v95 = *(void *)(v94 + 8);
          uint64_t v96 = *(void *)(v94 + 16);
          *(_OWORD *)(v94 + 8) = *(_OWORD *)(v94 - 16);
          *(void *)(v94 + 24) = *(void *)v94;
          *(void *)(v94 - 16) = v95;
          *(void *)(v94 - 8) = v96;
          *(double *)uint64_t v94 = v92;
          v94 -= 24;
        }
        while (!__CFADD__(v93++, 1));
        v89 += 24;
        --v90;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v106 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      char v98 = v12;
      uint64_t v108 = v9;
      if (v13 >= 2)
      {
        uint64_t v99 = *v106;
        do
        {
          unint64_t v100 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v99) {
            goto LABEL_145;
          }
          uint64_t v101 = v98;
          uint64_t v102 = *(void *)&v98[16 * v100 + 32];
          uint64_t v103 = *(void *)&v98[16 * v13 + 24];
          sub_255B18508((double *)(v99 + 24 * v102), (double *)(v99 + 24 * *(void *)&v98[16 * v13 + 16]), v99 + 24 * v103, __dst);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v101 = sub_255B18994((uint64_t)v101);
          }
          if (v100 >= *((void *)v101 + 2)) {
            goto LABEL_134;
          }
          uint64_t v104 = &v101[16 * v100 + 32];
          *(void *)uint64_t v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v101 + 2);
          if (v13 > v105) {
            goto LABEL_135;
          }
          memmove(&v101[16 * v13 + 16], &v101[16 * v13 + 32], 16 * (v105 - v13));
          char v98 = v101;
          *((void *)v101 + 2) = v105 - 1;
          unint64_t v13 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v108 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_255C80858();
    *(void *)(v8 + 16) = v7;
    uint64_t v108 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v107 = *a1 + 64;
  int64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v109 = v6;
  uint64_t v110 = v3;
  uint64_t v111 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 24 * v10 + 16);
      double v16 = *(double *)(v11 + 24 * v14 + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        int64_t v17 = (double *)(v107 + 24 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 24 * v10;
          uint64_t v21 = 24 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = v11 + v20;
              uint64_t v26 = *(void *)(v11 + v21);
              uint64_t v27 = *(void *)(v11 + v21 + 8);
              uint64_t v28 = *(void *)(v11 + v21 + 16);
              uint64_t v29 = *(void *)(v11 + v20 - 8);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 24);
              *(void *)(v24 + 16) = v29;
              *(void *)(v25 - 24) = v26;
              *(void *)(v25 - 16) = v27;
              *(void *)(v25 - 8) = v28;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v30 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v30 >= v3) {
      uint64_t v30 = v3;
    }
    if (v30 < v14) {
      break;
    }
    if (v10 != v30)
    {
      os_log_type_t v31 = (double *)(v11 + 24 * v10);
      do
      {
        double v32 = *(double *)(v11 + 24 * v10 + 16);
        uint64_t v33 = v14;
        uint64_t v34 = v31;
        do
        {
          if (v32 >= *(v34 - 1)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v35 = *v34;
          uint64_t v36 = *((void *)v34 + 1);
          *(_OWORD *)uint64_t v34 = *(_OWORD *)(v34 - 3);
          v34[2] = *(v34 - 1);
          *((void *)v34 - 2) = v36;
          *(v34 - 1) = v32;
          *(v34 - 3) = v35;
          v34 -= 3;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 3;
      }
      while (v10 != v30);
      uint64_t v10 = v30;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v12 = sub_255B187C8(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v38 = *((void *)v12 + 2);
    unint64_t v37 = *((void *)v12 + 3);
    unint64_t v13 = v38 + 1;
    uint64_t v11 = v111;
    if (v38 >= v37 >> 1)
    {
      uint64_t v87 = sub_255B187C8((char *)(v37 > 1), v38 + 1, 1, v12);
      uint64_t v11 = v111;
      int64_t v12 = v87;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v39 = v12 + 32;
    uint64_t v40 = &v12[16 * v38 + 32];
    *(void *)uint64_t v40 = v14;
    *((void *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        unint64_t v41 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v46 = &v39[16 * v13];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_120;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_121;
          }
          unint64_t v53 = v13 - 2;
          uint64_t v54 = &v39[16 * v13 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_123;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_126;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_130;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v70 = *((void *)v12 + 4);
            uint64_t v71 = *((void *)v12 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_77;
          }
          uint64_t v43 = *((void *)v12 + 4);
          uint64_t v42 = *((void *)v12 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_122;
        }
        unint64_t v53 = v13 - 2;
        double v59 = &v39[16 * v13 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_125;
        }
        double v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_128;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_129;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_83:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v64) {
          goto LABEL_124;
        }
        uint64_t v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_127;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v81 = v12;
        long long v82 = &v39[16 * v80];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v39[16 * v41];
        uint64_t v85 = *((void *)v84 + 1);
        sub_255B18508((double *)(v11 + 24 * *(void *)v82), (double *)(v11 + 24 * *(void *)v84), v11 + 24 * v85, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v85 < v83) {
          goto LABEL_117;
        }
        if (v41 > *((void *)v81 + 2)) {
          goto LABEL_118;
        }
        *(void *)long long v82 = v83;
        *(void *)&v39[16 * v80 + 8] = v85;
        unint64_t v86 = *((void *)v81 + 2);
        if (v41 >= v86) {
          goto LABEL_119;
        }
        int64_t v12 = v81;
        unint64_t v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((void *)v81 + 2) = v86 - 1;
        uint64_t v11 = v111;
        if (v86 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v109;
    uint64_t v3 = v110;
    if (v10 >= v110)
    {
      uint64_t v9 = v108;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_255C81238();
  __break(1u);
  return result;
}

uint64_t sub_255B18508(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v26 = __src;
  uint64_t v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[3 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      int64_t v17 = &v4[3 * v11];
      uint64_t v24 = (char *)v17;
      uint64_t v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v18 = a3 - 24;
        do
        {
          double v19 = (double *)(v18 + 24);
          if (*(v17 - 1) >= *(v6 - 1))
          {
            uint64_t v24 = (char *)(v17 - 3);
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              long long v22 = *(_OWORD *)(v17 - 3);
              *(double *)(v18 + 16) = *(v17 - 1);
              *(_OWORD *)unint64_t v18 = v22;
            }
            uint64_t v20 = v6;
            v17 -= 3;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v20 = v6 - 3;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              long long v21 = *(_OWORD *)v20;
              *(double *)(v18 + 16) = *(v6 - 1);
              *(_OWORD *)unint64_t v18 = v21;
            }
            uint64_t v26 = v6 - 3;
            if (v20 <= v7) {
              break;
            }
          }
          v18 -= 24;
          uint64_t v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_255B188C4((void **)&v26, (const void **)&v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[3 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    int64_t v12 = &v4[3 * v9];
    uint64_t v24 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (v6[2] >= v13[2])
        {
          uint64_t v4 = v13 + 3;
          double v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 3;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 3;
          }
        }
        else
        {
          uint64_t v14 = v6 + 3;
          double v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        v7[2] = v15[2];
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 3;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v25 = v4;
        uint64_t v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

char *sub_255B187C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F24060);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_255B188C4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_255C81308();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_255B18994(uint64_t a1)
{
  return sub_255B187C8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_255B189A8(uint64_t a1)
{
  return sub_255B17418(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t _s11MediaCoreUI28ScrubberLoadingConfigurationV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  uint64_t result = 0;
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
    && ((*((unsigned __int8 *)a1 + 1) ^ *((unsigned __int8 *)a2 + 1)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 2) ^ *((unsigned __int8 *)a2 + 2)) & 1) == 0)
  {
    if ((_BYTE)a1[2])
    {
      if (((_BYTE)a2[2] & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (a1[1] == a2[1]) {
        char v4 = *((unsigned char *)a2 + 16);
      }
      else {
        char v4 = 1;
      }
      if (v4) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_255B18A28@<X0>(void *a1@<X8>)
{
  sub_255B20C10();
  uint64_t result = sub_255C7E8C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255B18A78()
{
  return sub_255C7E8D8();
}

uint64_t sub_255B18AC4@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_2Tm((void (*)(void))sub_255B20BBC, a1);
}

uint64_t keypath_get_2Tm@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = sub_255C7E8C8();
  *a2 = v4;
  return result;
}

uint64_t sub_255B18B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_255B20BBC);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_255C7E8D8();
}

uint64_t sub_255B18BB0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B18BF8()
{
  unint64_t result = qword_269F23990;
  if (!qword_269F23990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23990);
  }
  return result;
}

uint64_t sub_255B18C4C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B18C94()
{
  unint64_t result = qword_269F23998;
  if (!qword_269F23998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23998);
  }
  return result;
}

unint64_t sub_255B18CEC()
{
  unint64_t result = qword_269F239A0;
  if (!qword_269F239A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F239A0);
  }
  return result;
}

unint64_t sub_255B18D44()
{
  unint64_t result = qword_269F239A8;
  if (!qword_269F239A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F239A8);
  }
  return result;
}

unint64_t sub_255B18D9C()
{
  unint64_t result = qword_269F239B0;
  if (!qword_269F239B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F239B0);
  }
  return result;
}

unint64_t sub_255B18DF4()
{
  unint64_t result = qword_269F239B8;
  if (!qword_269F239B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F239B8);
  }
  return result;
}

unint64_t sub_255B18E4C()
{
  unint64_t result = qword_269F239C0;
  if (!qword_269F239C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F239C0);
  }
  return result;
}

uint64_t sub_255B18EA0()
{
  return type metadata accessor for ScrubberViewModel(0);
}

uint64_t sub_255B18EA8()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_255B18F94()
{
  return type metadata accessor for ScrubberInteractionViewModel(0);
}

uint64_t type metadata accessor for ScrubberInteractionViewModel(uint64_t a1)
{
  return sub_255A151B4(a1, qword_269F23A20);
}

uint64_t sub_255B18FBC()
{
  uint64_t result = sub_255C7D668();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_255C7D758();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_255B190EC()
{
  return type metadata accessor for ScrubberPlayhead(0);
}

void sub_255B190F4()
{
  sub_255C7D668();
  if (v0 <= 0x3F)
  {
    sub_255B24014(319, (unint64_t *)&qword_269F234F8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      sub_255C7D758();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_255B19264()
{
  return type metadata accessor for MediaTimelineControl.Coordinator(0);
}

uint64_t type metadata accessor for MediaTimelineControl.Coordinator(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F23BB8);
}

void sub_255B1928C()
{
  sub_255B24014(319, qword_269F23BC8, MEMORY[0x263F19988], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_255B1938C()
{
  sub_255B24014(319, (unint64_t *)&qword_26B298510, MEMORY[0x263F19988], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_255B194D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7EA18();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8 & 0xF8 | 7;
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = *(void *)(v7 + 64);
  }
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  unint64_t v14 = ((v13
        + 8
        + ((((v10 + (((v8 & 0xF8) + 32) & ~v9) + 80) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13)
      + *(void *)(v12 + 64);
  int v15 = (*(_DWORD *)(v12 + 80) | v8) & 0x100000;
  uint64_t v16 = *a2;
  *a1 = *a2;
  if ((v13 | v9) != 7 || v15 != 0 || v14 > 0x18)
  {
    a1 = (uint64_t *)(v16 + (((v13 | v9) + 16) & ~(v13 | v9)));
    swift_retain();
  }
  else
  {
    uint64_t v57 = v7;
    uint64_t v58 = v6;
    uint64_t v59 = v13 + 8;
    uint64_t v60 = v12;
    uint64_t v61 = v11;
    uint64_t v19 = ~v9;
    a1[1] = a2[1];
    unint64_t v20 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v21 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = *(void *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    swift_retain();
    swift_retain();
    j__swift_retain();
    *(void *)unint64_t v20 = v22;
    *(unsigned char *)(v20 + 8) = v23;
    uint64_t v24 = (void *)((v20 + v9 + 9) & v19);
    uint64_t v25 = (unsigned __int8 *)((v21 + v9 + 9) & v19);
    unsigned int v26 = v25[v10];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v28 = v10;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v25;
          goto LABEL_22;
        case 2:
          int v29 = *(unsigned __int16 *)v25;
          goto LABEL_22;
        case 3:
          int v29 = *(unsigned __int16 *)v25 | (*(unsigned __int8 *)(((v21 + v9 + 9) & v19) + 2) << 16);
          goto LABEL_22;
        case 4:
          int v29 = *(_DWORD *)v25;
LABEL_22:
          int v30 = (v29 | (v27 << (8 * v10))) + 2;
          unsigned int v26 = v29 + 2;
          if (v10 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v31 = v10 + 1;
    uint64_t v32 = ~v13;
    if (v26 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v57 + 16))(v24, v25, v58);
      char v33 = 1;
    }
    else
    {
      *uint64_t v24 = *(void *)v25;
      swift_retain();
      char v33 = 0;
    }
    *((unsigned char *)v24 + v10) = v33;
    uint64_t v34 = (char *)v24 + v31;
    double v35 = &v25[v31];
    unint64_t v36 = ((unint64_t)v24 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = (unint64_t)(v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v38 = *(void *)v37;
    char v39 = *(unsigned char *)(v37 + 8);
    sub_255A0877C(*(void *)v37, v39);
    *(void *)unint64_t v36 = v38;
    *(unsigned char *)(v36 + 8) = v39;
    unint64_t v40 = (unint64_t)(v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = (unint64_t)(v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = *(void *)v41;
    char v43 = *(unsigned char *)(v41 + 8);
    sub_255A0877C(*(void *)v41, v43);
    *(void *)unint64_t v40 = v42;
    *(unsigned char *)(v40 + 8) = v43;
    unint64_t v44 = (unint64_t)(v34 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v45 = (unint64_t)(v35 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v46 = *(void *)v45;
    *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
    *(void *)unint64_t v44 = v46;
    unint64_t v47 = (unint64_t)(v34 + 55) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = (unint64_t)(v35 + 55) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v46) = *(unsigned char *)(v48 + 16);
    *(_OWORD *)unint64_t v47 = *(_OWORD *)v48;
    *(unsigned char *)(v47 + 16) = v46;
    uint64_t v49 = (void *)((unint64_t)(v34 + 79) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v50 = (void *)((unint64_t)(v35 + 79) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v49 = *v50;
    uint64_t v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
    BOOL v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v51 = *v52;
    unint64_t v53 = ((unint64_t)v51 + v59) & v32;
    unint64_t v54 = ((unint64_t)v52 + v59) & v32;
    uint64_t v55 = *(void (**)(unint64_t, unint64_t, uint64_t))(v60 + 16);
    swift_bridgeObjectRetain();
    v55(v53, v54, v61);
  }
  return a1;
}

uint64_t sub_255B19878(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  unint64_t v4 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  j_j__swift_release(*(void *)v4, *(unsigned __int8 *)(v4 + 8));
  uint64_t v5 = sub_255C7EA18();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  int v8 = (unsigned __int8 *)((v4 + v7 + 9) & ~v7);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = *(void *)(v6 + 64);
  }
  unsigned int v10 = v8[v9];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *v8;
        goto LABEL_13;
      case 2:
        int v13 = *(unsigned __int16 *)v8;
        goto LABEL_13;
      case 3:
        int v13 = *(unsigned __int16 *)v8 | (v8[2] << 16);
        goto LABEL_13;
      case 4:
        int v13 = *(_DWORD *)v8;
LABEL_13:
        int v14 = (v13 | (v11 << (8 * v9))) + 2;
        unsigned int v10 = v13 + 2;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(v8, v5);
  }
  else {
    swift_release();
  }
  int v15 = &v8[v9];
  sub_255A087D0(*(void *)((unint64_t)(v15 + 8) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)(v15 + 8) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_255A087D0(*(void *)((unint64_t)(v15 + 24) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)(v15 + 24) & 0xFFFFFFFFFFFFFFF8) + 8));
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(*(void *)(a2 + 16) - 8);
  int64_t v17 = *(uint64_t (**)(unint64_t))(v16 + 8);
  unint64_t v18 = (((((unint64_t)(v15 + 80) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + *(unsigned __int8 *)(v16 + 80)
       + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);

  return v17(v18);
}

void *sub_255B19A7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  unint64_t v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(void *)unint64_t v6 = v8;
  *(unsigned char *)(v6 + 8) = v9;
  uint64_t v10 = sub_255C7EA18();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  uint64_t v13 = v12 + 16;
  unint64_t v14 = v12 + 16 + v6;
  unint64_t v15 = ~v12 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = (void *)(v14 & v15);
  int64_t v17 = (unsigned __int8 *)((v13 + v7) & v15);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        goto LABEL_13;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        goto LABEL_13;
      case 3:
        int v22 = *(unsigned __int16 *)((v13 + v7) & v15) | (*(unsigned __int8 *)(((v13 + v7) & v15) + 2) << 16);
        goto LABEL_13;
      case 4:
        int v22 = *(_DWORD *)v17;
LABEL_13:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v11 + 16))(v16, v17, v10);
    char v24 = 1;
  }
  else
  {
    *uint64_t v16 = *(void *)v17;
    swift_retain();
    char v24 = 0;
  }
  *((unsigned char *)v16 + v18) = v24;
  uint64_t v25 = v18 + 1;
  unsigned int v26 = (char *)v16 + v18 + 1;
  unsigned int v27 = &v17[v25];
  unint64_t v28 = (unint64_t)(v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (unint64_t)&v17[v25 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = *(void *)v29;
  char v31 = *(unsigned char *)(v29 + 8);
  sub_255A0877C(*(void *)v29, v31);
  *(void *)unint64_t v28 = v30;
  *(unsigned char *)(v28 + 8) = v31;
  unint64_t v32 = (unint64_t)(v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (unint64_t)(v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = *(void *)v33;
  char v35 = *(unsigned char *)(v33 + 8);
  sub_255A0877C(*(void *)v33, v35);
  *(void *)unint64_t v32 = v34;
  *(unsigned char *)(v32 + 8) = v35;
  unint64_t v36 = (unint64_t)(v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (unint64_t)(v27 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  *(void *)unint64_t v36 = v38;
  unint64_t v39 = (unint64_t)(v26 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = (unint64_t)(v27 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v38) = *(unsigned char *)(v40 + 16);
  *(_OWORD *)unint64_t v39 = *(_OWORD *)v40;
  *(unsigned char *)(v39 + 16) = v38;
  unint64_t v41 = (void *)((unint64_t)(v26 + 79) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v42 = (void *)((unint64_t)(v27 + 79) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v41 = *v42;
  char v43 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v44 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v43 = *v44;
  uint64_t v45 = *(void *)(a3 + 16);
  uint64_t v46 = *(void *)(v45 - 8);
  unint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
  uint64_t v48 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v49 = ((unint64_t)v43 + v48 + 8) & ~v48;
  uint64_t v50 = ((unint64_t)v44 + v48 + 8) & ~v48;
  swift_bridgeObjectRetain();
  v47(v49, v50, v45);
  return a1;
}

void *sub_255B19D64(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  j__swift_retain();
  uint64_t v10 = *(void *)v6;
  uint64_t v11 = *(unsigned __int8 *)(v6 + 8);
  *(void *)unint64_t v6 = v8;
  *(unsigned char *)(v6 + 8) = v9;
  j_j__swift_release(v10, v11);
  uint64_t v12 = sub_255C7EA18();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = v14 + 16;
  unint64_t v16 = v14 + 16 + v6;
  unint64_t v17 = ~v14 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (unsigned __int8 *)(v16 & v17);
  unsigned int v19 = (unsigned __int8 *)((v15 + v7) & v17);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  if (v18 != v19)
  {
    uint64_t v21 = v12;
    unsigned int v22 = v18[v20];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v24 = v20;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *v18;
          if (v20 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v25 = *(unsigned __int16 *)v18;
          if (v20 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v25 = *(unsigned __int16 *)(v16 & v17) | (*(unsigned __int8 *)((v16 & v17) + 2) << 16);
          if (v20 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v25 = *(_DWORD *)v18;
          if (v20 < 4)
          {
LABEL_15:
            unsigned int v22 = (v25 | (v23 << (8 * v20))) + 2;
            break;
          }
LABEL_19:
          if (v25 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v22 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v13 + 8))(v18, v12);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v26 = v19[v20];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v28 = v20;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v19;
          if (v20 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v29 = *(unsigned __int16 *)v19;
          if (v20 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v29 = *(unsigned __int16 *)v19 | (v19[2] << 16);
          if (v20 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v29 = *(_DWORD *)v19;
          if (v20 < 4)
          {
LABEL_31:
            unsigned int v26 = (v29 | (v27 << (8 * v20))) + 2;
            break;
          }
LABEL_35:
          if (v29 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v13 + 16))(v18, v19, v21);
      v18[v20] = 1;
    }
    else
    {
LABEL_36:
      *(void *)uint64_t v18 = *(void *)v19;
      v18[v20] = 0;
      swift_retain();
    }
  }
  uint64_t v30 = &v18[v20 + 1];
  char v31 = &v19[v20 + 1];
  unint64_t v32 = (unint64_t)(v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (unint64_t)(v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = *(void *)v33;
  char v35 = *(unsigned char *)(v33 + 8);
  sub_255A0877C(*(void *)v33, v35);
  uint64_t v36 = *(void *)v32;
  char v37 = *(unsigned char *)(v32 + 8);
  *(void *)unint64_t v32 = v34;
  *(unsigned char *)(v32 + 8) = v35;
  sub_255A087D0(v36, v37);
  unint64_t v38 = (unint64_t)(v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (unint64_t)(v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = *(void *)v39;
  char v41 = *(unsigned char *)(v39 + 8);
  sub_255A0877C(*(void *)v39, v41);
  uint64_t v42 = *(void *)v38;
  char v43 = *(unsigned char *)(v38 + 8);
  *(void *)unint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = v41;
  sub_255A087D0(v42, v43);
  unint64_t v44 = (unint64_t)(v30 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = (unint64_t)(v31 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(void *)unint64_t v44 = v46;
  unint64_t v47 = (unint64_t)(v30 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (unint64_t)(v31 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v47 = *(unsigned char *)v48;
  *(unsigned char *)(v47 + 1) = *(unsigned char *)(v48 + 1);
  *(unsigned char *)(v47 + 2) = *(unsigned char *)(v48 + 2);
  uint64_t v49 = *(void *)(v48 + 8);
  *(unsigned char *)(v47 + 16) = *(unsigned char *)(v48 + 16);
  *(void *)(v47 + 8) = v49;
  uint64_t v50 = (void *)((unint64_t)(v30 + 79) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void *)((unint64_t)(v31 + 79) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v50 = *v51;
  BOOL v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  *BOOL v52 = *v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v54 + 24))(((unint64_t)v52 + *(unsigned __int8 *)(v54 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80), ((unint64_t)v53 + *(unsigned __int8 *)(v54 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
  return a1;
}

_OWORD *sub_255B1A1A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)v6;
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(v6 + 8);
  *(void *)unint64_t v5 = v7;
  uint64_t v8 = sub_255C7EA18();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v11 = v10 + 16;
  unint64_t v12 = v10 + 16 + v5;
  unint64_t v13 = ~v10 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = (void *)(v12 & v13);
  uint64_t v15 = (unsigned __int8 *)((v11 + v6) & v13);
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  unsigned int v17 = v15[v16];
  unsigned int v18 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *v15;
        goto LABEL_13;
      case 2:
        int v20 = *(unsigned __int16 *)v15;
        goto LABEL_13;
      case 3:
        int v20 = *(unsigned __int16 *)v15 | (v15[2] << 16);
        goto LABEL_13;
      case 4:
        int v20 = *(_DWORD *)v15;
LABEL_13:
        int v21 = (v20 | (v18 << (8 * v16))) + 2;
        unsigned int v17 = v20 + 2;
        if (v16 < 4) {
          unsigned int v17 = v21;
        }
        break;
      default:
        break;
    }
  }
  if (v17 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 32))(v14, v15, v8);
    char v22 = 1;
  }
  else
  {
    char v22 = 0;
    *uint64_t v14 = *(void *)v15;
  }
  *((unsigned char *)v14 + v16) = v22;
  unsigned int v23 = (char *)v14 + v16 + 1;
  uint64_t v24 = &v15[v16 + 1];
  unint64_t v25 = (unint64_t)(v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (unint64_t)(v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = v27;
  unint64_t v28 = (unint64_t)(v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (unint64_t)(v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(void *)unint64_t v28 = v30;
  unint64_t v31 = (unint64_t)(v23 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (unint64_t)(v24 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  *(void *)unint64_t v31 = v33;
  unint64_t v34 = (unint64_t)(v23 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (unint64_t)(v24 + 55) & 0xFFFFFFFFFFFFFFF8;
  long long v36 = *(_OWORD *)v35;
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
  *(_OWORD *)unint64_t v34 = v36;
  char v37 = (void *)((unint64_t)(v23 + 79) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v38 = (void *)((unint64_t)(v24 + 79) & 0xFFFFFFFFFFFFFFF8);
  *char v37 = *v38;
  unint64_t v39 = (void *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = (void *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v39 = *v40;
  uint64_t v41 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 32))(((unint64_t)v39 + *(unsigned __int8 *)(v41 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), ((unint64_t)v40 + *(unsigned __int8 *)(v41 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

void *sub_255B1A444(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  unint64_t v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v8 = *(unsigned char *)(v7 + 8);
  uint64_t v9 = *(void *)v6;
  uint64_t v10 = *(unsigned __int8 *)(v6 + 8);
  *(void *)unint64_t v6 = *(void *)v7;
  *(unsigned char *)(v6 + 8) = v8;
  j_j__swift_release(v9, v10);
  uint64_t v11 = sub_255C7EA18();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v14 = v13 + 16;
  unint64_t v15 = v13 + 16 + v6;
  unint64_t v16 = ~v13 & 0xFFFFFFFFFFFFFFF8;
  unsigned int v17 = (unsigned __int8 *)(v15 & v16);
  unsigned int v18 = (unsigned __int8 *)((v14 + v7) & v16);
  if (*(void *)(v12 + 64) <= 8uLL) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v11 - 8) + 64);
  }
  if (v17 != v18)
  {
    uint64_t v20 = v11;
    unsigned int v21 = v17[v19];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v19 <= 3) {
        uint64_t v23 = v19;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v17;
          goto LABEL_14;
        case 2:
          int v24 = *(unsigned __int16 *)v17;
          goto LABEL_14;
        case 3:
          int v24 = *(unsigned __int16 *)(v15 & v16) | (*(unsigned __int8 *)((v15 & v16) + 2) << 16);
          goto LABEL_14;
        case 4:
          int v24 = *(_DWORD *)v17;
LABEL_14:
          int v25 = (v24 | (v22 << (8 * v19))) + 2;
          unsigned int v21 = v24 + 2;
          if (v19 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(v17, v11);
    }
    else {
      swift_release();
    }
    unsigned int v26 = v18[v19];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v19 <= 3) {
        uint64_t v28 = v19;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v18;
          goto LABEL_28;
        case 2:
          int v29 = *(unsigned __int16 *)v18;
          goto LABEL_28;
        case 3:
          int v29 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_28;
        case 4:
          int v29 = *(_DWORD *)v18;
LABEL_28:
          int v30 = (v29 | (v27 << (8 * v19))) + 2;
          unsigned int v26 = v29 + 2;
          if (v19 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 32))(v17, v18, v20);
      char v31 = 1;
    }
    else
    {
      char v31 = 0;
      *(void *)unsigned int v17 = *(void *)v18;
    }
    v17[v19] = v31;
  }
  unint64_t v32 = &v17[v19 + 1];
  uint64_t v33 = &v18[v19 + 1];
  unint64_t v34 = (unint64_t)(v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (unint64_t)(v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = *(void *)v35;
  LOBYTE(v35) = *(unsigned char *)(v35 + 8);
  uint64_t v37 = *(void *)v34;
  char v38 = *(unsigned char *)(v34 + 8);
  *(void *)unint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = v35;
  sub_255A087D0(v37, v38);
  unint64_t v39 = (unint64_t)(v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = (unint64_t)(v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = *(void *)v40;
  LOBYTE(v40) = *(unsigned char *)(v40 + 8);
  uint64_t v42 = *(void *)v39;
  char v43 = *(unsigned char *)(v39 + 8);
  *(void *)unint64_t v39 = v41;
  *(unsigned char *)(v39 + 8) = v40;
  sub_255A087D0(v42, v43);
  unint64_t v44 = (unint64_t)(v32 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = (unint64_t)(v33 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(void *)unint64_t v44 = v46;
  unint64_t v47 = (unint64_t)(v32 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (unint64_t)(v33 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v47 = *(unsigned char *)v48;
  *(unsigned char *)(v47 + 1) = *(unsigned char *)(v48 + 1);
  *(unsigned char *)(v47 + 2) = *(unsigned char *)(v48 + 2);
  uint64_t v49 = *(void *)(v48 + 8);
  *(unsigned char *)(v47 + 16) = *(unsigned char *)(v48 + 16);
  *(void *)(v47 + 8) = v49;
  uint64_t v50 = (void *)((unint64_t)(v32 + 79) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void *)((unint64_t)(v33 + 79) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v50 = *v51;
  BOOL v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  *BOOL v52 = *v53;
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v54 + 40))(((unint64_t)v52 + *(unsigned __int8 *)(v54 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80), ((unint64_t)v53 + *(unsigned __int8 *)(v54 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
  return a1;
}

uint64_t sub_255B1A810(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_255C7EA18() - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  int v10 = *(_DWORD *)(v6 + 80);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v8 + 64);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v10 & 0xF8;
  uint64_t v15 = v14 | 7;
  uint64_t v16 = v11 + 8;
  if (a2 <= v13) {
    goto LABEL_27;
  }
  uint64_t v17 = ((v16 + ((((v7 + ((v14 + 32) & ~v15) + 80) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11) + v12;
  char v18 = 8 * v17;
  if (v17 <= 3)
  {
    unsigned int v21 = ((a2 - v13 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      int v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v21 > 0xFF)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(unsigned __int16 *)((char *)a1 + v17)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v21 < 2)
    {
LABEL_27:
      if ((v9 & 0x80000000) != 0)
      {
        unsigned int v26 = *(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 48);
        return v26((v16
                  + ((((v7 + (((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v15 + 9) & ~v15) + 24) & 0xFFFFFFFFFFFFFFF8)
                    + 71) & 0xFFFFFFFFFFFFFFF8)) & ~v11);
      }
      else
      {
        uint64_t v25 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v25) = -1;
        }
        return (v25 + 1);
      }
    }
  }
  int v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((unsigned char *)a1 + v17)) {
    goto LABEL_27;
  }
LABEL_17:
  int v22 = (v19 - 1) << v18;
  if (v17 > 3) {
    int v22 = 0;
  }
  if (v17)
  {
    if (v17 <= 3) {
      int v23 = v17;
    }
    else {
      int v23 = 4;
    }
    switch(v23)
    {
      case 2:
        int v24 = *a1;
        break;
      case 3:
        int v24 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v24 = *(_DWORD *)a1;
        break;
      default:
        int v24 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v24 = 0;
  }
  return v13 + (v24 | v22) + 1;
}

void sub_255B1AAA4(_WORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_255C7EA18() - 8);
  uint64_t v9 = 8;
  if (*(void *)(v8 + 64) > 8uLL) {
    uint64_t v9 = *(void *)(v8 + 64);
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  int v12 = *(_DWORD *)(v8 + 80);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v15 = v12 & 0xF8;
  uint64_t v16 = v15 | 7;
  unint64_t v17 = (((v9 + ((v15 + 32) & ~(v15 | 7)) + 80) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = v13 + 8;
  size_t v19 = ((v13 + 8 + v17) & ~v13) + *(void *)(v10 + 64);
  if (a3 <= v14)
  {
    int v20 = 0;
  }
  else if (v19 <= 3)
  {
    unsigned int v24 = ((a3 - v14 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
    if (HIWORD(v24))
    {
      int v20 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v20 = 2;
    }
    else
    {
      int v20 = v24 > 1;
    }
  }
  else
  {
    int v20 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v21 = ~v14 + a2;
    if (v19 < 4)
    {
      int v22 = (v21 >> (8 * v19)) + 1;
      if (v19)
      {
        int v25 = v21 & ~(-1 << (8 * v19));
        bzero(a1, v19);
        if (v19 == 3)
        {
          *a1 = v25;
          *((unsigned char *)a1 + 2) = BYTE2(v25);
        }
        else if (v19 == 2)
        {
          *a1 = v25;
        }
        else
        {
          *(unsigned char *)a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v21;
      int v22 = 1;
    }
    switch(v20)
    {
      case 1:
        *((unsigned char *)a1 + v19) = v22;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v19) = v22;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)((char *)a1 + v19) = v22;
        return;
      default:
        return;
    }
  }
  uint64_t v23 = ~v13;
  switch(v20)
  {
    case 1:
      *((unsigned char *)a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)((char *)a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x255B1ADB8);
    case 4:
      *(_DWORD *)((char *)a1 + v19) = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if ((v11 & 0x80000000) != 0)
        {
          unsigned int v27 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v27((v18+ ((((v9 + (((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v16 + 9) & ~v16) + 24) & 0xFFFFFFFFFFFFFFF8)+ 71) & 0xFFFFFFFFFFFFFFF8)) & v23, a2);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v26 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            uint64_t v26 = (a2 - 1);
          }
          *(void *)a1 = v26;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for WindowPropertiesReaderViewController()
{
  return self;
}

uint64_t getEnumTagSinglePayload for ScrubContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubContext()
{
  return &type metadata for ScrubContext;
}

ValueMetadata *type metadata accessor for ScrubEvent()
{
  return &type metadata for ScrubEvent;
}

uint64_t sub_255B1AEB0()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_255B1AEF4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_255B1AF44(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_255B1AFBC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Backdrop.PinchRenderer.MeshModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Backdrop.PinchRenderer.MeshModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ScrubberReader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B1B0AC()
{
  return type metadata accessor for ScrubberProxy(0);
}

uint64_t sub_255B1B0B4()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ScrubberProxy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScrubberProxy);
}

void *sub_255B1B174(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ScrubberSection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for ScrubberSection(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberSection()
{
  return &type metadata for ScrubberSection;
}

uint64_t getEnumTagSinglePayload for ScrubberLoadingConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for ScrubberLoadingConfiguration()
{
  return &type metadata for ScrubberLoadingConfiguration;
}

ValueMetadata *type metadata accessor for ScrubberSensitivityInteractionDirection()
{
  return &type metadata for ScrubberSensitivityInteractionDirection;
}

uint64_t sub_255B1B350()
{
  return type metadata accessor for ScrubberSections(0);
}

uint64_t type metadata accessor for ScrubberSections(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F23D18);
}

uint64_t sub_255B1B378()
{
  uint64_t result = sub_255C7D758();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *_s11MediaCoreUI10ScrubStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255B1B4F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubState()
{
  return &type metadata for ScrubState;
}

uint64_t sub_255B1B528()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B1BA7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B1BB14(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm(a1, &qword_26B29BD20, &qword_26B29BD18);
}

uint64_t sub_255B1BB28(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm(a1, &qword_269F23D28, (unint64_t *)&unk_269F23D30);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVySbGGAaBHPxAaBHD1__AgA0cI0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getWitnessTable();
}

uint64_t getEnumTagSinglePayload for ScrubberInteractionViewModel.TooltipSessionKind(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScrubberInteractionViewModel.TooltipSessionKind(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_255B1BC24(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255B1BC40(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberInteractionViewModel.TooltipSessionKind()
{
  return &type metadata for ScrubberInteractionViewModel.TooltipSessionKind;
}

ValueMetadata *type metadata accessor for ScrubSensitivity()
{
  return &type metadata for ScrubSensitivity;
}

ValueMetadata *type metadata accessor for ScrubberWindowPropertiesModifier()
{
  return &type metadata for ScrubberWindowPropertiesModifier;
}

uint64_t destroy for ScrubberStateChangeModifier(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 72);
  char v3 = *(unsigned char *)(a1 + 80);

  return sub_255A087D0(v2, v3);
}

uint64_t initializeWithCopy for ScrubberStateChangeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  char v6 = *(unsigned char *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_255A0877C(v5, v6);
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = v6;
  return a1;
}

uint64_t assignWithCopy for ScrubberStateChangeModifier(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = v2[1];
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 24) = *((unsigned char *)v2 + 24);
  *(unsigned char *)(a1 + 25) = *((unsigned char *)v2 + 25);
  *(unsigned char *)(a1 + 26) = *((unsigned char *)v2 + 26);
  uint64_t v5 = v2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v2[6];
  *(void *)(a1 + 56) = v2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = v2[8];
  swift_retain();
  swift_release();
  uint64_t v6 = v2[9];
  LOBYTE(v2) = *((unsigned char *)v2 + 80);
  sub_255A0877C(v6, (char)v2);
  uint64_t v7 = *(void *)(a1 + 72);
  char v8 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = (_BYTE)v2;
  sub_255A087D0(v7, v8);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ScrubberStateChangeModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v4;
  sub_255A087D0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberStateChangeModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberStateChangeModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberStateChangeModifier()
{
  return &type metadata for ScrubberStateChangeModifier;
}

uint64_t sub_255B1BFD0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 32);
    uint64_t v13 = (void *)(a1 + v12);
    unsigned int v14 = (uint64_t *)((char *)a2 + v12);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B1C1A0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_255C7EA18();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255B1C2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_255C7DCC8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255B1C458(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, &qword_26B29B598);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7DCC8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 32);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_255A095A4((uint64_t)a1 + v10, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B1C61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7DCC8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (void *)(a1 + v12);
  unsigned int v14 = (const void *)(a2 + v12);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_255C7EA18();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255B1C7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_255A095A4(a1 + v6, &qword_26B29B598);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_255C7DCC8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_255A095A4(a1 + v11, (uint64_t *)&unk_26B298500);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_255C7EA18();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B1C974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B1C988);
}

uint64_t sub_255B1C988(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_255B1CABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B1CAD0);
}

void *sub_255B1CAD0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ScrubberTooltipModifier(uint64_t a1)
{
  return sub_255A151B4(a1, qword_269F23D48);
}

void sub_255B1CC24()
{
  sub_255B24014(319, (unint64_t *)&qword_26B29B5A0, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255B24014(319, (unint64_t *)&qword_26B298510, MEMORY[0x263F19988], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for TimedView()
{
  return &type metadata for TimedView;
}

uint64_t sub_255B1CD84()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255B1CE2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + ((v6 + 8) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
    unint64_t v15 = (v7 + v12) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = (v7 + v13) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = *(void *)v16;
    LOBYTE(v12) = *(unsigned char *)(v16 + 8);
    sub_255A0877C(*(void *)v16, v12);
    *(void *)unint64_t v15 = v17;
    *(unsigned char *)(v15 + 8) = v12;
  }
  return a1;
}

uint64_t sub_255B1CF70(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  unint64_t v7 = (*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_255A087D0(v8, v9);
}

void *sub_255B1D00C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(void *)(v4 - 8) + 16;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  swift_retain();
  v5(v8, v9, v4);
  uint64_t v10 = *(void *)(v6 + 48) + 7;
  unint64_t v11 = (v10 + v8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v10 + v9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v8) = *(unsigned char *)(v12 + 8);
  sub_255A0877C(*(void *)v12, v8);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v8;
  return a1;
}

void *sub_255B1D0D0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v10) = *(unsigned char *)(v13 + 8);
  sub_255A0877C(*(void *)v13, v10);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)unint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v10;
  sub_255A087D0(v15, v16);
  return a1;
}

void *sub_255B1D1A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  char v12 = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = v12;
  return a1;
}

void *sub_255B1D250(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = *(unsigned char *)(v13 + 8);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)unint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v13;
  sub_255A087D0(v15, v16);
  return a1;
}

uint64_t sub_255B1D314(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B1D488);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((*(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 8) & ~v6) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v6 + 8] & ~v6);
  }
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_255B1D49C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_47;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v20 = (unint64_t)&a1[v9 + 8] & ~v9;
              unsigned int v21 = *(void (**)(unint64_t))(v6 + 56);
              v21(v20);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = (~v8 + a2) >> v11;
  if (v10 < 4) {
    int v17 = v16 + 1;
  }
  else {
    int v17 = 1;
  }
  if (v10 >= 4) {
    unsigned int v18 = ~v8 + a2;
  }
  else {
    unsigned int v18 = (~(_BYTE)v8 + a2);
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v18;
  }
  else {
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v17;
      break;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x255B1D6B4);
    case 4:
      *(_DWORD *)&a1[v10] = v17;
      break;
    default:
      return;
  }
}

uint64_t getEnumTagSinglePayload for ScrubberHoverEffectModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[40]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberHoverEffectModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberHoverEffectModifier()
{
  return &type metadata for ScrubberHoverEffectModifier;
}

uint64_t getEnumTagSinglePayload for ScrubberBufferingMask(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[64]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberBufferingMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberBufferingMask()
{
  return &type metadata for ScrubberBufferingMask;
}

ValueMetadata *type metadata accessor for ScrubberAccessibilityModifier()
{
  return &type metadata for ScrubberAccessibilityModifier;
}

uint64_t *sub_255B1D854(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    size_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 24);
    unsigned int v13 = (char *)a1 + v12;
    int v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)v14;
    char v16 = v14[8];
    sub_255A0877C(*(void *)v14, v16);
    *(void *)unsigned int v13 = v15;
    v13[8] = v16;
  }
  return a1;
}

uint64_t sub_255B1D99C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_255A087D0(v7, v8);
}

void *sub_255B1DA5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  char v8 = (void *)((char *)a2 + v6);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_255C7EA18();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  sub_255A0877C(*(void *)v12, v14);
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  return a1;
}

void *sub_255B1DB5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    char v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, (uint64_t *)&unk_26B298500);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_255C7EA18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  sub_255A0877C(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  sub_255A087D0(v15, v16);
  return a1;
}

void *sub_255B1DC8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_255C7EA18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

void *sub_255B1DD8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    char v8 = (char *)a2 + v6;
    sub_255A095A4((uint64_t)a1 + v6, (uint64_t *)&unk_26B298500);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_255C7EA18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  uint64_t v15 = *(void *)v12;
  char v16 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  sub_255A087D0(v15, v16);
  return a1;
}

uint64_t sub_255B1DEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B1DECC);
}

uint64_t sub_255B1DECC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255B1DF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B1DF94);
}

void *sub_255B1DF94(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21B90);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255B1E040()
{
  sub_255B24014(319, (unint64_t *)&qword_26B298510, MEMORY[0x263F19988], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255B1E114()
{
  return sub_255B12C70(&qword_269F238D8, (void (*)(uint64_t))type metadata accessor for MediaTimelineControl);
}

uint64_t sub_255B1E15C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B1E178()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B1E194()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B1E1B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B1E1CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B1E1E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B1E204()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B1E220()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for Scrubber.SensitivityLabel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B1E27C@<X0>(uint64_t a1@<X8>)
{
  return sub_255B098D8(*(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_255B1E2A0()
{
  unint64_t result = qword_269F23E20;
  if (!qword_269F23E20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23DF8);
    sub_255B1E39C(&qword_269F23E28, &qword_269F23E00, (void (*)(void))sub_255B1E36C);
    sub_255A09998(&qword_269F23E48, &qword_269F23E18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23E20);
  }
  return result;
}

uint64_t sub_255B1E36C()
{
  return sub_255B1E39C(&qword_269F23E30, &qword_269F23E38, (void (*)(void))sub_255B1E418);
}

uint64_t sub_255B1E39C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B1E418()
{
  unint64_t result = qword_269F23E40;
  if (!qword_269F23E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23E40);
  }
  return result;
}

uint64_t sub_255B1E46C()
{
  return sub_255B0A9A4(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_255B1E478()
{
  return sub_255C7E6C8();
}

uint64_t sub_255B1E49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255B17CB8(a1, a2, a3, a4, MEMORY[0x263F18D80], MEMORY[0x263F19318]);
}

void sub_255B1E4DC()
{
}

uint64_t sub_255B1E4F4()
{
  return sub_255C7E688();
}

uint64_t sub_255B1E518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255B17CB8(a1, a2, a3, a4, MEMORY[0x263F18570], MEMORY[0x263F19248]);
}

void sub_255B1E558()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 58) = *(unsigned char *)(v0 + 24);
}

void sub_255B1E578()
{
  *(void *)(*(void *)(v0 + 16) + 64) = *(void *)(v0 + 24);
}

uint64_t sub_255B1E584()
{
  return sub_255B1EA5C();
}

void sub_255B1E59C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 57) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_255B1E5AC()
{
  return swift_deallocObject();
}

unint64_t sub_255B1E5BC()
{
  unint64_t result = qword_269F23E70;
  if (!qword_269F23E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23E70);
  }
  return result;
}

uint64_t sub_255B1E610()
{
  return sub_255B16580(v0[6], v0[7], v0[2], v0[3]);
}

uint64_t sub_255B1E62C()
{
  return sub_255B1E990();
}

double sub_255B1E64C()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 72) = result;
  return result;
}

uint64_t sub_255B1E660()
{
  return sub_255B0BFFC();
}

uint64_t sub_255B1E668(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  char v3 = *(unsigned char *)(a1 + 80);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_255A0877C(v2, v3);
  return a1;
}

unint64_t sub_255B1E6CC()
{
  unint64_t result = qword_269F23EE8;
  if (!qword_269F23EE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EF58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23EE8);
  }
  return result;
}

uint64_t sub_255B1E73C()
{
  return sub_255AF9C0C((double *)(v0 + 40));
}

unint64_t sub_255B1E768()
{
  unint64_t result = qword_269F23EF0;
  if (!qword_269F23EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23EF0);
  }
  return result;
}

uint64_t sub_255B1E7C0()
{
  return sub_255B0C0E8();
}

void sub_255B1E7CC()
{
  sub_255B0C1C8(v0 + 16);
}

uint64_t sub_255B1E7D4(uint64_t a1)
{
  return a1;
}

void sub_255B1E804()
{
  sub_255AF7F70(*(void *)(v0 + 80));
}

unint64_t sub_255B1E830()
{
  unint64_t result = qword_269F23F10;
  if (!qword_269F23F10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23F08);
    sub_255B12C70(&qword_269F23F18, (void (*)(uint64_t))type metadata accessor for ScrubberProxy);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23F10);
  }
  return result;
}

uint64_t objectdestroy_374Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_255A087D0(*(void *)(v0 + 88), *(unsigned char *)(v0 + 96));

  return swift_deallocObject();
}

uint64_t sub_255B1E92C()
{
  return sub_255B0C2C8(v0 + 16);
}

uint64_t sub_255B1E93C()
{
  return sub_255B1E954();
}

uint64_t sub_255B1E954()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 32) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 40) = v2;
  return sub_255B028A0();
}

uint64_t sub_255B1E990()
{
  *(void *)(*(void *)(v0 + 16) + 16) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_255B146B0();
}

uint64_t sub_255B1E9DC()
{
  return sub_255B211C0();
}

uint64_t sub_255B1E9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F23F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B1EA5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  *(void *)(v1 + 24) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 32) = v2;
  return sub_255B134A8(v3, v4);
}

uint64_t sub_255B1EAB8()
{
  return sub_255B1EAD0();
}

uint64_t sub_255B1EAD0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 48) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 56) = v2;
  return sub_255B028A0();
}

void sub_255B1EB0C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 16) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 24) = v2;
}

uint64_t sub_255B1EB30()
{
  return sub_255C7E668();
}

uint64_t sub_255B1EB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255B17CB8(a1, a2, a3, a4, MEMORY[0x263F18520], MEMORY[0x263F19230]);
}

uint64_t sub_255B1EB94()
{
  uint64_t v1 = type metadata accessor for ScrubberTooltipModifier(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_255C7DCC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + *(int *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255B1ED2C()
{
  type metadata accessor for ScrubberTooltipModifier(0);

  return sub_255B0E708();
}

uint64_t sub_255B1EDA4()
{
  return sub_255B209A4();
}

double sub_255B1EDC4()
{
  *(void *)&double result = sub_255B2083C().n128_u64[0];
  return result;
}

double sub_255B1EDDC()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 64) = result;
  return result;
}

uint64_t sub_255B1EDEC()
{
  return sub_255B20C64();
}

unint64_t sub_255B1EE04()
{
  unint64_t result = qword_269F23FE0;
  if (!qword_269F23FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23FE0);
  }
  return result;
}

unint64_t sub_255B1EE60()
{
  unint64_t result = qword_269F23FF8;
  if (!qword_269F23FF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24000);
    sub_255B1EF00();
    sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F23FF8);
  }
  return result;
}

unint64_t sub_255B1EF00()
{
  unint64_t result = qword_269F24008;
  if (!qword_269F24008)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269F24010);
    sub_255A09998((unint64_t *)&qword_26B29B9F8, &qword_26B29BA00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24008);
  }
  return result;
}

uint64_t sub_255B1EFA0(uint64_t result)
{
  *(unsigned char *)(result + 200) = 1;
  return result;
}

uint64_t sub_255B1EFAC(uint64_t result)
{
  *(unsigned char *)(result + 200) = 0;
  return result;
}

void sub_255B1EFC4(uint64_t a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_255B1EFE4()
{
  return sub_255B205F4();
}

void sub_255B1EFFC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 56) = *(unsigned char *)(v0 + 24);
}

void sub_255B1F00C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF0]), sel_initWithDuration_bounce_, 0.4, 0.0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E30]), sel_initWithDuration_timingParameters_, v4, 0.0);

  long long v7[4] = a1;
  v7[5] = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_255AE4914;
  v7[3] = &block_descriptor_457;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_addAnimations_, v6);
  _Block_release(v6);
  objc_msgSend(v5, sel_startAnimation);
}

uint64_t sub_255B1F128(float a1)
{
  uint64_t v3 = sub_255C7D898();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v3, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  id v8 = v1;
  uint64_t v9 = sub_255C7D878();
  os_log_type_t v10 = sub_255C80BD8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134218496;
    double v12 = a1;
    double v16 = v12;
    sub_255C80F18();
    *(_WORD *)(v11 + 12) = 2048;
    double v16 = 0.0;
    sub_255C80F18();
    *(_WORD *)(v11 + 22) = 2048;
    objc_msgSend(v8, sel_maxValue);
    double v16 = v13;
    sub_255C80F18();

    _os_log_impl(&dword_255A00000, v9, v10, "MediaTimelineControl.Coordinator: received value %f (min=%f, max=%f)", (uint8_t *)v11, 0x20u);
    MEMORY[0x25A297C00](v11, -1, -1);
  }
  else
  {

    double v12 = a1;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  LOBYTE(v16) = 1;
  swift_retain();
  sub_255AF7DF4((char *)&v16, v12);
  return swift_release();
}

uint64_t sub_255B1F3A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_255C7D898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F1FFD8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_269F33190);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_255C7D878();
  os_log_type_t v8 = sub_255C80BC8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_255A00000, v7, v8, "MediaTimelineControl.Coordinator: finished decelerating", v9, 2u);
    MEMORY[0x25A297C00](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v1[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_scrubState] = 0;
  uint64_t v10 = *(void *)(*(void *)(*(void *)&v1[OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel]
                              + 16)
                  + 72);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v14 - 2) = v10;
  *((unsigned char *)&v14 - 8) = 0;
  uint64_t v15 = v10;
  sub_255B12C70(&qword_269F23938, (void (*)(uint64_t))type metadata accessor for ScrubberPlayhead);
  swift_retain();
  sub_255C7D708();
  swift_release();
  sub_255AFBE70();
  swift_release();
  swift_retain();
  objc_msgSend(v1, sel_currentValue);
  LOBYTE(v15) = 2;
  sub_255AF7DF4((char *)&v15, v12);
  return swift_release();
}

uint64_t sub_255B1F680(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = *(double **)(*(void *)(v4 + OBJC_IVAR____TtCV11MediaCoreUI20MediaTimelineControl11Coordinator_viewModel) + 16);
  swift_getKeyPath();
  sub_255B12C70(&qword_269F23F30, (void (*)(uint64_t))type metadata accessor for ScrubberInteractionViewModel);
  swift_retain();
  sub_255C7D718();
  swift_release();
  double v10 = v9[4];
  double v11 = v9[5];
  double v12 = v9[6];
  double v13 = v9[7];
  uint64_t result = swift_release();
  if (v10 != a1 || v11 != a2 || v12 != a3 || v13 != a4)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    swift_retain();
    sub_255C7D708();
    swift_release();
    return swift_release();
  }
  return result;
}

double sub_255B1F844(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v24 = a2;
  double v23 = *(double *)&a1;
  uint64_t v6 = sub_255C7E288();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F24380);
  MEMORY[0x270FA5388](v10 - 8);
  double v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  double v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a5, v6);
  sub_255B11660((uint64_t)v9, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_255A095A4((uint64_t)v12, (uint64_t *)&unk_269F24380);
    if (v24) {
      return 10.0;
    }
    else {
      return v23;
    }
  }
  else
  {
    sub_255B23238((uint64_t)v12, (uint64_t)v16, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
    sub_255C7E4F8();
    char v28 = v18 & 1;
    char v27 = v19 & 1;
    sub_255C7E128();
    sub_255C7E4F8();
    char v26 = v20 & 1;
    char v25 = v21 & 1;
    sub_255C7E128();
    if (v24) {
      double v17 = 10.0;
    }
    else {
      double v17 = v23;
    }
    sub_255B2075C((uint64_t)v16, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
  }
  return v17;
}

uint64_t sub_255B1FB04(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v68 = sub_255C7E328();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v66 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v64 = COERCE_DOUBLE(sub_255C7DE58());
  uint64_t v63 = *(void *)(*(void *)&v64 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](*(void *)&v64);
  BOOL v62 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v61 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
  MEMORY[0x270FA5388](v15 - 8);
  double v17 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_255C7E158();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  double v65 = (char *)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_255C7E288();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  int v22 = (char *)v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F24380);
  MEMORY[0x270FA5388](v23 - 8);
  char v25 = (char *)v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews(0);
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  int v29 = (char *)v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, a1, v19);
  sub_255B11660((uint64_t)v22, (uint64_t)v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    int v30 = (uint64_t *)&unk_269F24380;
    uint64_t v31 = (uint64_t)v25;
    return sub_255A095A4(v31, v30);
  }
  sub_255B23238((uint64_t)v25, (uint64_t)v29, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
  sub_255C7E4F8();
  char v84 = v32 & 1;
  char v83 = v33 & 1;
  sub_255C7E128();
  double v35 = v34;
  sub_255C7E4F8();
  char v82 = v36 & 1;
  char v81 = v37 & 1;
  sub_255C7E128();
  v61[1] = v39;
  if (v35 > v38) {
    double v40 = v35;
  }
  else {
    double v40 = v38;
  }
  v85.origin.CGFloat x = a2;
  v85.origin.CGFloat y = a3;
  v85.size.CGFloat width = a4;
  v85.size.CGFloat height = a5;
  CGRectGetMinX(v85);
  v86.origin.CGFloat x = a2;
  v86.origin.CGFloat y = a3;
  v86.size.CGFloat width = a4;
  v86.size.CGFloat height = a5;
  CGRectGetMinY(v86);
  sub_255C80338();
  *(double *)uint64_t v61 = v40;
  char v80 = 0;
  char v79 = 0;
  sub_255C7E138();
  v87.origin.CGFloat x = a2;
  v87.origin.CGFloat y = a3;
  v87.size.CGFloat width = a4;
  v87.size.CGFloat height = a5;
  CGRectGetMaxX(v87);
  v88.origin.CGFloat x = a2;
  v88.origin.CGFloat y = a3;
  v88.size.CGFloat width = a4;
  v88.size.CGFloat height = a5;
  CGRectGetMinY(v88);
  sub_255C80348();
  char v78 = 0;
  char v77 = 0;
  sub_255C7E138();
  sub_255A09540((uint64_t)&v29[*(int *)(v26 + 24)], (uint64_t)v17, &qword_26B29D470);
  uint64_t v41 = v69;
  uint64_t v42 = v70;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v17, 1, v70) == 1)
  {
    sub_255B2075C((uint64_t)v29, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
    int v30 = &qword_26B29D470;
    uint64_t v31 = (uint64_t)v17;
    return sub_255A095A4(v31, v30);
  }
  unint64_t v44 = v65;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v65, v17, v42);
  sub_255C7E148();
  unint64_t v45 = v62;
  sub_255C7E148();
  sub_255C7DE48();
  double v47 = v46;
  unint64_t v48 = *(void (**)(char *, void))(v63 + 8);
  double v49 = v64;
  v48(v45, *(void *)&v64);
  v48(v14, *(void *)&v49);
  sub_255C7E148();
  sub_255C7E148();
  sub_255C7DE48();
  double v51 = v50;
  v48(v45, *(void *)&v49);
  v48(v14, *(void *)&v49);
  double v64 = v47 + v51;
  sub_255C7E4F8();
  char v76 = v52 & 1;
  char v75 = v53 & 1;
  uint64_t v54 = v66;
  sub_255C7E118();
  uint64_t v55 = sub_255C7E908();
  MEMORY[0x25A293BB0](v55);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v57 = v68;
  v56(v54, v68);
  sub_255C7E4F8();
  char v74 = v58 & 1;
  char v73 = v59 & 1;
  sub_255C7E118();
  uint64_t v60 = sub_255C7E908();
  MEMORY[0x25A293BB0](v60);
  v56(v54, v57);
  v89.origin.CGFloat x = a2;
  v89.origin.CGFloat y = a3;
  v89.size.CGFloat width = a4;
  v89.size.CGFloat height = a5;
  CGRectGetMidX(v89);
  v90.origin.CGFloat x = a2;
  v90.origin.CGFloat y = a3;
  v90.size.CGFloat width = a4;
  v90.size.CGFloat height = a5;
  CGRectGetMinY(v90);
  sub_255C80358();
  v91.origin.CGFloat x = a2;
  v91.origin.CGFloat y = a3;
  v91.size.CGFloat width = a4;
  v91.size.CGFloat height = a5;
  CGRectGetWidth(v91);
  char v72 = 0;
  char v71 = 1;
  sub_255C7E138();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v70);
  return sub_255B2075C((uint64_t)v29, type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews);
}

uint64_t sub_255B2038C(double a1)
{
  uint64_t v22 = MEMORY[0x263F8EE88];
  swift_getKeyPath();
  uint64_t v21 = v1;
  sub_255B12C70((unint64_t *)&unk_269F23E60, (void (*)(uint64_t))type metadata accessor for ScrubberSections);
  sub_255C7D718();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v6 = 0;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      if (v6 >= *(void *)(v3 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = v3 + 32 + 24 * v6;
      double v10 = *(double *)(v9 + 16);
      if (v10 >= 0.0 && v10 < a1)
      {
        uint64_t v13 = *(void *)v9;
        uint64_t v12 = *(void *)(v9 + 8);
        uint64_t v14 = v22;
        if (!*(void *)(v22 + 16)) {
          goto LABEL_18;
        }
        uint64_t result = sub_255C81568();
        uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
        unint64_t v16 = result & ~v15;
        if (((*(void *)(v14 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v17 = *(void *)(v14 + 48);
        if (*(double *)(v17 + 8 * v16) != v10) {
          break;
        }
      }
LABEL_4:
      if (++v6 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    uint64_t v18 = ~v15;
    while (1)
    {
      unint64_t v16 = (v16 + 1) & v18;
      if (((*(void *)(v14 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        break;
      }
      if (*(double *)(v17 + 8 * v16) == v10) {
        goto LABEL_4;
      }
    }
LABEL_18:
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_255C16218(0, v7[2] + 1, 1, v7);
    }
    unint64_t v20 = v7[2];
    unint64_t v19 = v7[3];
    if (v20 >= v19 >> 1) {
      uint64_t v7 = sub_255C16218((void *)(v19 > 1), v20 + 1, 1, v7);
    }
    v7[2] = v20 + 1;
    uint64_t v8 = (double *)&v7[3 * v20];
    *((void *)v8 + 4) = v13;
    *((void *)v8 + 5) = v12;
    v8[6] = v10;
    sub_255BA6C78((double *)&v21, v10);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
LABEL_24:
  swift_bridgeObjectRelease();
  return (uint64_t)v7;
}

uint64_t sub_255B205F4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_255B14098(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255B20644()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_255B2067C()
{
  sub_255B10640(v0);
}

uint64_t type metadata accessor for ScrubberSpecs.TrackEffects(uint64_t a1)
{
  return sub_255A151B4(a1, qword_269F24190);
}

uint64_t sub_255B206A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255B2070C()
{
  return swift_deallocObject();
}

id sub_255B2074C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setConfiguration_, *(void *)(v0 + 24));
}

uint64_t sub_255B2075C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255B207BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B20824()
{
  return sub_255B21174();
}

__n128 sub_255B2083C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  __n128 result = *(__n128 *)(v0 + 24);
  long long v3 = *(_OWORD *)(v0 + 40);
  *(__n128 *)(v1 + 32) = result;
  *(_OWORD *)(v1 + 48) = v3;
  return result;
}

void sub_255B20850()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)(v1 + 40) = *(void *)(v0 + 24);
  sub_255AF77B0(v2);
}

uint64_t sub_255B20890()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255B208C8()
{
  return sub_255AFFC5C();
}

uint64_t sub_255B208D0()
{
  return sub_255B20A14();
}

uint64_t sub_255B208F0()
{
  return sub_255AFD3F4(*(double **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_255B20910(void *a1)
{
  return sub_255AFDE1C(a1);
}

uint64_t sub_255B20920()
{
  return sub_255AFEC28();
}

uint64_t sub_255B20940()
{
  return sub_255AFDC3C();
}

uint64_t sub_255B20960()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B20998()
{
  return sub_255AFDD18(*(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_255B209A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v1 + 104);
  *(unsigned char *)(v1 + 104) = *(unsigned char *)(v0 + 24);
  return sub_255AFD75C(v2);
}

uint64_t sub_255B209E0()
{
  return sub_255B20A58();
}

uint64_t sub_255B209F8()
{
  return sub_255AFC4F4();
}

uint64_t sub_255B20A14()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__isMarqueeAnimating) = *(unsigned char *)(v0 + 24);
  return sub_255AFED10(v2);
}

uint64_t sub_255B20A58()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC11MediaCoreUI28ScrubberInteractionViewModel__tooltipSession;
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  *(void *)uint64_t v2 = *(void *)(v0 + 24);
  *(unsigned char *)(v2 + 8) = v1;
  return sub_255AFE0CC(v3, v4);
}

uint64_t sub_255B20AB0()
{
  return sub_255B20AF4();
}

uint64_t sub_255B20AC8@<X0>(char *a1@<X8>)
{
  return sub_255AFB35C(*(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_255B20AEC()
{
  return sub_255AFB65C();
}

uint64_t sub_255B20AF4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 64) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 72) = v2;
  return sub_255AFA3A0();
}

uint64_t sub_255B20B38()
{
  return sub_255B2133C();
}

uint64_t sub_255B20B54(unsigned __int8 *a1)
{
  return sub_255AF90F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_255B20B60(double *a1)
{
  return sub_255AF8DB8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroy_535Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B20BAC(uint64_t *a1)
{
  return sub_255AF883C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_255B20BB4()
{
  return swift_release();
}

unint64_t sub_255B20BBC()
{
  unint64_t result = qword_269F240F8;
  if (!qword_269F240F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F240F8);
  }
  return result;
}

unint64_t sub_255B20C10()
{
  unint64_t result = qword_269F24100;
  if (!qword_269F24100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24100);
  }
  return result;
}

uint64_t sub_255B20C64()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  char v4 = *(unsigned char *)(v1 + 48);
  *(void *)(v1 + 40) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 48) = v2;
  return sub_255B13AA0(v3, v4);
}

uint64_t sub_255B20CAC(uint64_t a1)
{
  return sub_255B20CE8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_255B09150);
}

uint64_t sub_255B20CD0(uint64_t a1)
{
  return sub_255B20CE8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_255B06B60);
}

uint64_t sub_255B20CE8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(type metadata accessor for Scrubber() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a2(a1, v7, v4, v5);
}

unint64_t sub_255B20D98()
{
  unint64_t result = qword_269F24120;
  if (!qword_269F24120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24120);
  }
  return result;
}

uint64_t sub_255B20DEC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B20E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255B166B4(a1, *(void (**)(char *))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 24), *(void *)(v2 + 40), a2);
}

uint64_t sub_255B20E34@<X0>(uint64_t a1@<X8>)
{
  return sub_255B084B8(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_255B20E40()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for Scrubber();
  unint64_t v3 = (*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v10 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68);
  uint64_t v4 = *(void *)(v11 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  j_j__swift_release(*(void *)(v6 + 16), *(unsigned __int8 *)(v6 + 24));
  unint64_t v7 = v0 + v3 + v2[10];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_255C7EA18();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_255A087D0(*(void *)(v6 + v2[11]), *(unsigned char *)(v6 + v2[11] + 8));
  sub_255A087D0(*(void *)(v6 + v2[12]), *(unsigned char *)(v6 + v2[12] + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v6 + v2[17], v1);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v3 + v10 + v5) & ~v5), v11);

  return swift_deallocObject();
}

uint64_t sub_255B21088()
{
  type metadata accessor for Scrubber();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EB68);

  return sub_255B08D98();
}

uint64_t sub_255B21174()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unsigned __int8 v2 = *(unsigned char *)(v1 + 57);
  *(unsigned char *)(v1 + 57) = *(unsigned char *)(v0 + 24);
  unsigned __int8 v4 = v2;
  return sub_255B00640(&v4);
}

uint64_t sub_255B211C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  double v2 = *(double *)(v1 + 88);
  *(void *)(v1 + 88) = *(void *)(v0 + 24);
  return sub_255B0168C(v2);
}

uint64_t sub_255B211FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_255B21224()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 24) = v0[3];
  *(void *)(v1 + 32) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_255B21264()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_255B2128C()
{
  unint64_t result = qword_269F24138;
  if (!qword_269F24138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24138);
  }
  return result;
}

unint64_t sub_255B212E0()
{
  unint64_t result = qword_269F24140;
  if (!qword_269F24140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24140);
  }
  return result;
}

uint64_t sub_255B21334(uint64_t a1)
{
  return sub_255AFAFD8(a1);
}

uint64_t sub_255B2133C()
{
  *(void *)(*(void *)(v0 + 16) + 80) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

ValueMetadata *_s28__Key_scrubberTooltipEnabledVMa()
{
  return &_s28__Key_scrubberTooltipEnabledVN;
}

ValueMetadata *_s31__Key_scrubberTimeLabelsVisibleVMa()
{
  return &_s31__Key_scrubberTimeLabelsVisibleVN;
}

ValueMetadata *_s45__Key_scrubberSensitivityInteractionDirectionVMa()
{
  return &_s45__Key_scrubberSensitivityInteractionDirectionVN;
}

ValueMetadata *_s47ScrubberCanDisplaySensitivityOnMultipleLinesKeyVMa()
{
  return &_s47ScrubberCanDisplaySensitivityOnMultipleLinesKeyVN;
}

char *sub_255B213B8(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned __int8 v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[1];
    unint64_t v7 = a2[2];
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v7;
    uint64_t v8 = a2[3];
    *((void *)a1 + 3) = v8;
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_255C802C8();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v4;
    uint64_t v15 = v6;
    unint64_t v16 = v7;
    uint64_t v17 = v8;
    v13(v10, v11, v12);
  }
  return v5;
}

uint64_t sub_255B214BC(id *a1, uint64_t a2)
{
  unsigned __int8 v4 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_255C802C8();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_255B2154C(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *(void **)(a2 + 16);
  unint64_t v7 = *(void **)(a2 + 24);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_255C802C8();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v4;
  id v14 = v5;
  id v15 = v6;
  id v16 = v7;
  v12(v9, v10, v11);
  return a1;
}

uint64_t sub_255B215FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  unint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(void **)(a2 + 16);
  id v13 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  id v14 = v12;

  id v15 = *(void **)(a2 + 24);
  id v16 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v15;
  id v17 = v15;

  uint64_t v18 = *(int *)(a3 + 32);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_255C802C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_OWORD *sub_255B216C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_255C802C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_255B21744(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  unint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2[3];

  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_255C802C8();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_255B21800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B21814);
}

uint64_t sub_255B21814(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_255C802C8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255B218C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B218D8);
}

void *sub_255B218D8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_255C802C8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_255B21980()
{
  uint64_t result = sub_255C802C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ScrubberSpecs.TimeLabel.ForegroundStyle()
{
  swift_release();

  return swift_release();
}

void *_s11MediaCoreUI13ScrubberSpecsO9TimeLabelV15ForegroundStyleVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ScrubberSpecs.TimeLabel.ForegroundStyle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ScrubberSpecs.TimeLabel.ForegroundStyle(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ScrubberSpecs.TimeLabel.ForegroundStyle()
{
  return &type metadata for ScrubberSpecs.TimeLabel.ForegroundStyle;
}

void sub_255B21B48()
{
  sub_255B24014(319, &qword_269F24230, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_255B21C1C(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    char v8 = *((unsigned char *)a2 + 16);
    sub_255A0877C(v7, v8);
    v4[1] = v7;
    *((unsigned char *)v4 + 16) = v8;
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_255C7E378();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_255B21D60(uint64_t a1, uint64_t a2)
{
  sub_255A087D0(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_255C7E378();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255B21E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 16);
  sub_255A0877C(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_255C7E378();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255B21F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_255A0877C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  sub_255A087D0(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 40);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_255A095A4(a1 + v10, (uint64_t *)&unk_269F23E50);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_255C7E378();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B2201C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (void *)(a1 + v5);
  char v7 = (const void *)(a2 + v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_255C7E378();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255B220F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_255A087D0(v7, v8);
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_255A095A4(a1 + v9, (uint64_t *)&unk_269F23E50);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F23E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_255C7E378();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B22200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B22214);
}

uint64_t sub_255B22214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_269F241A8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255B222C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B222D4);
}

uint64_t sub_255B222D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_269F241A8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberCompanionViewLayout()
{
  return &type metadata for ScrubberCompanionViewLayout;
}

uint64_t destroy for WindowPropertiesReader()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for WindowPropertiesReader(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WindowPropertiesReader(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  return a1;
}

uint64_t assignWithTake for WindowPropertiesReader(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for WindowPropertiesReader()
{
  return &type metadata for WindowPropertiesReader;
}

ValueMetadata *type metadata accessor for ScrubberTooltipClipShape()
{
  return &type metadata for ScrubberTooltipClipShape;
}

ValueMetadata *type metadata accessor for ScrubberTooltipModifier.ContentView()
{
  return &type metadata for ScrubberTooltipModifier.ContentView;
}

uint64_t sub_255B225A8()
{
  return swift_getWitnessTable();
}

unint64_t sub_255B2271C()
{
  unint64_t result = qword_269F24238;
  if (!qword_269F24238)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23E88);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23E90);
    sub_255A09998((unint64_t *)&unk_269F23E98, &qword_269F23E90);
    swift_getOpaqueTypeConformance2();
    sub_255B12C70((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24238);
  }
  return result;
}

uint64_t sub_255B22828()
{
  return sub_255A09998(&qword_269F24248, &qword_269F23EA8);
}

uint64_t sub_255B22864()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B22A8C()
{
  unint64_t result = qword_269F24250;
  if (!qword_269F24250)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23F40);
    sub_255A09998(&qword_269F24258, &qword_269F23F38);
    sub_255A09998(&qword_269F24260, &qword_269F24268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24250);
  }
  return result;
}

unint64_t sub_255B22B54()
{
  unint64_t result = qword_269F24270;
  if (!qword_269F24270)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23F48);
    sub_255A09998(&qword_269F24278, (uint64_t *)&unk_269F23F58);
    sub_255A09998(&qword_269F24280, &qword_269F23F50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24270);
  }
  return result;
}

unint64_t sub_255B22C1C()
{
  unint64_t result = qword_269F24288;
  if (!qword_269F24288)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F23FD8);
    sub_255B1E39C(&qword_269F23FF0, &qword_269F23FE8, (void (*)(void))sub_255B1EE60);
    sub_255B12C70((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24288);
  }
  return result;
}

uint64_t sub_255B22CF4()
{
  return sub_255B160B0(&qword_269F24290, &qword_269F24298, (void (*)(void))sub_255B22D44, (void (*)(void))sub_255A101A0);
}

unint64_t sub_255B22D44()
{
  unint64_t result = qword_269F242A0;
  if (!qword_269F242A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F242A8);
    sub_255B22DF8(&qword_269F242B0, &qword_269F242B8, (void (*)(void))sub_255B22E64);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F242A0);
  }
  return result;
}

uint64_t sub_255B22DF8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B22E64()
{
  unint64_t result = qword_269F242C0;
  if (!qword_269F242C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F242C8);
    sub_255A09998(&qword_269F24038, &qword_269F24030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F242C0);
  }
  return result;
}

uint64_t sub_255B22F04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B22F20()
{
  return sub_255A09998(&qword_269F242D0, &qword_269F242D8);
}

unint64_t sub_255B22F60()
{
  unint64_t result = qword_269F242E8;
  if (!qword_269F242E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F242E8);
  }
  return result;
}

unint64_t sub_255B22FB8()
{
  unint64_t result = qword_269F242F0;
  if (!qword_269F242F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F242F0);
  }
  return result;
}

unint64_t sub_255B23010()
{
  unint64_t result = qword_269F242F8;
  if (!qword_269F242F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F242F8);
  }
  return result;
}

uint64_t sub_255B23064()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B23084()
{
  unint64_t result = qword_269F24308;
  if (!qword_269F24308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24308);
  }
  return result;
}

uint64_t sub_255B230D8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B23124()
{
  unint64_t result = qword_269F24358;
  if (!qword_269F24358)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24350);
    sub_255A53AF4();
    sub_255A09998(&qword_269F24368, (uint64_t *)&unk_269F24370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24358);
  }
  return result;
}

uint64_t sub_255B231C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255C7E7A8();
  *a1 = result;
  return result;
}

uint64_t sub_255B231F0()
{
  return sub_255C7E7B8();
}

uint64_t type metadata accessor for ScrubberCompanionViewLayout.CompanionSubviews(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_269F243A8);
}

uint64_t sub_255B23238(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_255B232A0()
{
  unint64_t result = qword_269F24390;
  if (!qword_269F24390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24390);
  }
  return result;
}

double sub_255B232F4(uint64_t a1)
{
  return sub_255B0EB80(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_255B23304()
{
  return sub_255B0EE7C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_255B23318(uint64_t a1)
{
  return a1;
}

uint64_t sub_255B23350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

unint64_t sub_255B23368()
{
  unint64_t result = qword_269F24398;
  if (!qword_269F24398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24398);
  }
  return result;
}

uint64_t *sub_255B233BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_255C7E158();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_255B23570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7E158();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v8(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *sub_255B23690(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7E158();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_255B237F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7E158();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *sub_255B239C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7E158();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_255B23B24(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7E158();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t sub_255B23CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B23D04);
}

uint64_t sub_255B23D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_255C7E158();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_255B23E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B23E14);
}

uint64_t sub_255B23E14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_255C7E158();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D470);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

void sub_255B23F1C()
{
  sub_255C7E158();
  if (v0 <= 0x3F)
  {
    sub_255B24014(319, &qword_269F243B8, MEMORY[0x263F18940], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_255B24014(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t initializeWithCopy for ScrubberTooltipContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScrubberTooltipContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ScrubberTooltipContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ScrubberTooltipContent()
{
  return &type metadata for ScrubberTooltipContent;
}

ValueMetadata *type metadata accessor for ScrubberSpecs()
{
  return &type metadata for ScrubberSpecs;
}

uint64_t destroy for ScrubberSpecs.TimeLabel()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for ScrubberSpecs.TimeLabel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ScrubberSpecs.TimeLabel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ScrubberSpecs.TimeLabel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberSpecs.TimeLabel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubberSpecs.TimeLabel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubberSpecs.TimeLabel()
{
  return &type metadata for ScrubberSpecs.TimeLabel;
}

uint64_t sub_255B2441C()
{
  return sub_255B1E39C(&qword_269F243C0, &qword_269F24328, (void (*)(void))sub_255B24460);
}

unint64_t sub_255B24460()
{
  unint64_t result = qword_269F243C8;
  if (!qword_269F243C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24320);
    sub_255B24500();
    sub_255A09998((unint64_t *)&unk_269F243F0, &qword_269F21648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F243C8);
  }
  return result;
}

unint64_t sub_255B24500()
{
  unint64_t result = qword_269F243D0;
  if (!qword_269F243D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24318);
    sub_255B22DF8(&qword_269F243D8, &qword_269F24310, (void (*)(void))sub_255B245D8);
    sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F243D0);
  }
  return result;
}

unint64_t sub_255B245D8()
{
  unint64_t result = qword_269F243E0;
  if (!qword_269F243E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F243E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24350);
    sub_255B23124();
    swift_getOpaqueTypeConformance2();
    sub_255A53AF4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F243E0);
  }
  return result;
}

uint64_t sub_255B24688()
{
  return MEMORY[0x263F18898];
}

unint64_t sub_255B24698()
{
  unint64_t result = qword_269F24400;
  if (!qword_269F24400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24400);
  }
  return result;
}

uint64_t sub_255B246EC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_255B24708(_OWORD *a1)
{
  double result = 0.0;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  *(_OWORD *)((char *)a1 + 281) = 0u;
  return result;
}

uint64_t sub_255B2473C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30)
{
  if (a5)
  {
    char v30 = a8 & 1;
    sub_255A093E4(a2, a3, a4 & 1);
    swift_bridgeObjectRetain();
    sub_255A093E4(a6, a7, v30);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_255A52558(a18, a19 & 1);
    sub_255A52558(a20, a21 & 1);
    sub_255B248BC(a22, a23, a24, a25, a26 & 1);
    sub_255A0877C(a27, a28 & 1);
    sub_255A52558(a29, a30 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_255B248BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return sub_255ABFCD4(a1, a2);
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_255B248C8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v7 = *(unsigned char *)(a1 + 296);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    *(void *)(a1 + 288),
    v7);
  return a1;
}

uint64_t sub_255B2495C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30)
{
  if (a5)
  {
    char v30 = a8 & 1;
    sub_255A094C0(a2, a3, a4 & 1);
    swift_bridgeObjectRelease();
    sub_255A094C0(a6, a7, v30);
    swift_bridgeObjectRelease();
    swift_release();
    sub_255A525AC(a18, a19 & 1);
    sub_255A525AC(a20, a21 & 1);
    sub_255B24ADC(a22, a23, a24, a25, a26 & 1);
    sub_255A087D0(a27, a28 & 1);
    sub_255A525AC(a29, a30 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_255B24ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return sub_255ABFC84(a1, a2);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_255B24B00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  char v5 = *(unsigned char *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 136);
  uint64_t v8 = *(void *)(a1 + 144);
  uint64_t v11 = *(void *)(a1 + 152);
  char v10 = *(unsigned char *)(a1 + 160);
  uint64_t v13 = *(void *)(a1 + 168);
  char v12 = *(unsigned char *)(a1 + 176);
  char v14 = *(unsigned char *)(a1 + 192);
  uint64_t v15 = *(void *)(a1 + 184);
  sub_255A093E4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_255A52558(v2, v3);
  sub_255A52558(v4, v5);
  sub_255B248BC(v6, v7, v8, v11, v10);
  sub_255A0877C(v13, v12);
  sub_255A52558(v15, v14);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_255B24C34(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  char v5 = *(unsigned char *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 136);
  uint64_t v8 = *(void *)(a1 + 144);
  uint64_t v11 = *(void *)(a1 + 152);
  char v10 = *(unsigned char *)(a1 + 160);
  char v12 = *(unsigned char *)(a1 + 176);
  char v14 = *(unsigned char *)(a1 + 192);
  uint64_t v15 = *(void *)(a1 + 184);
  uint64_t v13 = *(void *)(a1 + 168);
  sub_255A094C0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  sub_255A525AC(v2, v3);
  sub_255A525AC(v4, v5);
  sub_255B24ADC(v6, v7, v8, v11, v10);
  sub_255A087D0(v13, v12);
  sub_255A525AC(v15, v14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_255B24D64()
{
  return sub_255B1E39C(&qword_269F24420, &qword_269F24428, (void (*)(void))sub_255B24DA8);
}

uint64_t sub_255B24DA8()
{
  return sub_255B1E39C(&qword_269F24430, &qword_269F24438, (void (*)(void))sub_255B24DD8);
}

uint64_t sub_255B24DD8()
{
  return sub_255B1E39C(&qword_269F24440, &qword_269F24448, (void (*)(void))sub_255B24E08);
}

unint64_t sub_255B24E08()
{
  unint64_t result = qword_269F24450;
  if (!qword_269F24450)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24458);
    sub_255A09998(&qword_269F24460, &qword_269F24468);
    sub_255A09998(&qword_26B29BCE8, &qword_26B29BCF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24450);
  }
  return result;
}

uint64_t sub_255B24EF4()
{
  return sub_255B208F0();
}

void sub_255B24F28()
{
}

void sub_255B24F40()
{
}

void sub_255B24F58()
{
}

uint64_t sub_255B24F70()
{
  return sub_255B20940();
}

void sub_255B24F88()
{
}

double sub_255B24FA0()
{
  return sub_255B1E64C();
}

double sub_255B24FB8()
{
  return sub_255B1EDDC();
}

uint64_t MarkupRenderer.markup.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 96));
}

uint64_t sub_255B2502C(uint64_t a1)
{
  uint64_t v2 = sub_255C7D438();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return sub_255B25188((uint64_t)v4);
}

uint64_t sub_255B250F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t v4 = sub_255C7D438();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_255B25188(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t v4 = sub_255C7D438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_255B25220())()
{
  return j__swift_endAccess;
}

uint64_t MarkupRenderer.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  MarkupRenderer.init(_:)(a1);
  return v2;
}

uint64_t *MarkupRenderer.init(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_255C7D428();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 96), a1);
  return v1;
}

uint64_t sub_255B2536C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = &v15[-v6];
  uint64_t v9 = *(void *)(v8 + 88);
  uint64_t v10 = type metadata accessor for MarkupParser();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v15[-v12];
  sub_255C7D3E8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + *(void *)(*(void *)v2 + 96), v4);
  MarkupParser.init(_:)((uint64_t)v7, v4, (uint64_t)v13);
  uint64_t v16 = v4;
  uint64_t v17 = v9;
  uint64_t v18 = a2;
  MarkupParser.parse(_:)((void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_255B25D68, (uint64_t)v15, v10);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_255B2555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v68 = a8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v57 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24470);
  MEMORY[0x270FA5388](v12 - 8);
  char v58 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_255C7D438();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = sub_255C7D408();
  uint64_t v62 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_255C7D428();
  sub_255C7D418();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v18 = sub_255B260F0();
  uint64_t v63 = v17;
  sub_255C7D3C8();
  swift_release();
  if ((_BYTE)v72) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v71;
  }
  uint64_t v20 = type metadata accessor for MarkupParser.Element();
  uint64_t v21 = swift_bridgeObjectRetain();
  if (!MEMORY[0x25A296130](v21, v20))
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = v62;
LABEL_39:
    uint64_t v55 = swift_getKeyPath();
    *(&v57 - 2) = (char *)MEMORY[0x270FA5388](v55);
    swift_getKeyPath();
    uint64_t v71 = v19;
    LOBYTE(v72) = 0;
    uint64_t v56 = v63;
    sub_255C7D3D8();
    sub_255B261BC();
    sub_255C7D3F8();
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v56, v15);
  }
  unint64_t v59 = v18;
  uint64_t v60 = v15;
  uint64_t v61 = a6;
  uint64_t v22 = 0;
  uint64_t v23 = (uint64_t *)(a5 + 64);
  uint64_t v65 = a5;
  uint64_t v66 = v20;
  while (1)
  {
    char v24 = sub_255C80868();
    uint64_t result = sub_255C80828();
    if ((v24 & 1) == 0) {
      break;
    }
    if (__OFADD__(v22, 1)) {
      goto LABEL_41;
    }
    uint64_t v67 = v22 + 1;
    uint64_t v68 = v19;
    uint64_t v27 = *(v23 - 4);
    uint64_t v26 = *(v23 - 3);
    uint64_t v28 = *(v23 - 2);
    uint64_t v29 = *(v23 - 1);
    uint64_t v30 = *v23;
    uint64_t v71 = v27;
    uint64_t v72 = v26;
    uint64_t v64 = v28;
    uint64_t v73 = v28;
    uint64_t v74 = v29;
    uint64_t v75 = v30;
    sub_255B3BD68();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_255C80E98();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v71 = v31;
    uint64_t v72 = v33;
    uint64_t v35 = sub_255C80768();
    uint64_t v36 = v34;
    if (v35 == 0x676E6F727473 && v34 == 0xE600000000000000
      || (sub_255C81428() & 1) != 0
      || v35 == 98 && v36 == 0xE100000000000000
      || (sub_255C81428() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v65;
      uint64_t v37 = v66;
      uint64_t v39 = v67;
      uint64_t v40 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v40 | 2;
    }
    else if (v35 == 28005 && v36 == 0xE200000000000000 {
           || (sub_255C81428() & 1) != 0
    }
           || v35 == 105 && v36 == 0xE100000000000000
           || (sub_255C81428() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v65;
      uint64_t v37 = v66;
      uint64_t v39 = v67;
      uint64_t v41 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v41 | 1;
    }
    else if (v35 == 117 && v36 == 0xE100000000000000 || (sub_255C81428() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v65;
      uint64_t v39 = v67;
      uint64_t v19 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = swift_getKeyPath();
      *(&v57 - 2) = (char *)MEMORY[0x270FA5388](v42);
      swift_getKeyPath();
      char v43 = v58;
      sub_255C7F4F8();
      uint64_t v44 = sub_255C7F528();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 0, 1, v44);
      sub_255B26318();
      sub_255C7D3D8();
      uint64_t v37 = v66;
    }
    else
    {
      if (v35 == 97 && v36 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_34:
        uint64_t v71 = v27;
        uint64_t v72 = v26;
        uint64_t v73 = v64;
        uint64_t v74 = v29;
        uint64_t v75 = v30;
        v70[0] = 1717924456;
        v70[1] = 0xE400000000000000;
        sub_255A1D78C();
        uint64_t v37 = v66;
        uint64_t v46 = MarkupParser.Element.subscript.getter((uint64_t)v70);
        uint64_t v48 = v47;
        uint64_t v50 = v49;
        uint64_t v52 = v51;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v52)
        {
          uint64_t v53 = swift_getKeyPath();
          *(&v57 - 2) = (char *)MEMORY[0x270FA5388](v53);
          swift_getKeyPath();
          MEMORY[0x25A295F10](v46, v48, v50, v52);
          swift_bridgeObjectRelease();
          sub_255C7D5B8();
          swift_bridgeObjectRelease();
          sub_255B26234();
          uint64_t v37 = v66;
          sub_255C7D3D8();
        }
        uint64_t v38 = v65;
        uint64_t v39 = v67;
        uint64_t v19 = v68;
        goto LABEL_15;
      }
      char v45 = sub_255C81428();
      swift_bridgeObjectRelease();
      if (v45) {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v65;
      uint64_t v37 = v66;
      uint64_t v39 = v67;
      uint64_t v19 = v68;
    }
LABEL_15:
    ++v22;
    v23 += 5;
    if (v39 == MEMORY[0x25A296130](v38, v37))
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = v60;
      uint64_t v54 = v62;
      goto LABEL_39;
    }
  }
  uint64_t result = sub_255C81138();
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_255B25D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_255B2555C(a1, a2, a3, a4, a5, v5[4], v5[2], v5[3]);
}

uint64_t sub_255B25D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_255C80578() & 1;
}

uint64_t MarkupRenderer.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_255C7D438();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MarkupRenderer.__deallocating_deinit()
{
  MarkupRenderer.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_255B25EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_255B250F8(a1);
}

uint64_t sub_255B25F14()
{
  return 16;
}

__n128 sub_255B25F20(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_255B25F2C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_255C7D438();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for MarkupRenderer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for MarkupRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MarkupRenderer);
}

uint64_t dispatch thunk of MarkupRenderer.baseAttributes.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MarkupRenderer.baseAttributes.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MarkupRenderer.baseAttributes.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MarkupRenderer.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MarkupRenderer.attributedString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

void sub_255B260D0()
{
}

unint64_t sub_255B260F0()
{
  unint64_t result = qword_269F24478;
  if (!qword_269F24478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24478);
  }
  return result;
}

void sub_255B26144()
{
}

uint64_t sub_255B2616C()
{
  return 8;
}

uint64_t sub_255B26178()
{
  return swift_release();
}

uint64_t sub_255B26180(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_255B2618C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255B25D74(a1, a2, a3, &qword_269F244A8) & 1;
}

uint64_t sub_255B261B0(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_269F244A8);
}

unint64_t sub_255B261BC()
{
  unint64_t result = qword_269F24480;
  if (!qword_269F24480)
  {
    sub_255C7D408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24480);
  }
  return result;
}

void sub_255B26214()
{
}

unint64_t sub_255B26234()
{
  unint64_t result = qword_269F24488;
  if (!qword_269F24488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24488);
  }
  return result;
}

void sub_255B26288()
{
}

uint64_t sub_255B262B0()
{
  return 8;
}

uint64_t sub_255B262BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255B25D74(a1, a2, a3, &qword_269F244A0) & 1;
}

uint64_t sub_255B262E0(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_269F244A0);
}

void *sub_255B262EC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_255B262F8()
{
}

unint64_t sub_255B26318()
{
  unint64_t result = qword_269F24490;
  if (!qword_269F24490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24490);
  }
  return result;
}

void sub_255B2636C()
{
}

uint64_t sub_255B26394()
{
  return 8;
}

uint64_t sub_255B263A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255B25D74(a1, a2, a3, &qword_269F24498) & 1;
}

uint64_t sub_255B263C4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_269F24498);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_255C80508();
}

uint64_t sub_255B2642C()
{
  sub_255A79D44();

  return sub_255C7E8C8();
}

double sub_255B26474@<D0>(_OWORD *a1@<X8>)
{
  sub_255A79D44();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_255B264C4()
{
  return sub_255C7E8D8();
}

uint64_t sub_255B26524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  uint64_t v8 = sub_255C80658();
  uint64_t v10 = v9;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v8;
  a3[1] = v10;
  return result;
}

uint64_t MCUILoggingContext.description.getter()
{
  if (*(void *)(v0 + 8))
  {
    swift_bridgeObjectRetain();
    sub_255C806E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    return 60;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_255B266A8()
{
  if (*(void *)(v0 + 8))
  {
    swift_bridgeObjectRetain();
    sub_255C806E8();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    return 60;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t MCUINamespace<A>.loggingContext<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, a3);
  sub_255B26524((uint64_t)v8, a3, v17);
  v16[0] = v17[0];
  v16[1] = v17[1];
  sub_255C7F678();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double sub_255B26910@<D0>(_OWORD *a1@<X8>)
{
  sub_255A79D44();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MCUILoggingContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MCUILoggingContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)double result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MCUILoggingContext()
{
  return &type metadata for MCUILoggingContext;
}

uint64_t sub_255B26A20()
{
  return swift_getWitnessTable();
}

unint64_t sub_255B26A94()
{
  unint64_t result = qword_269F244B8;
  if (!qword_269F244B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F244B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F244B8);
  }
  return result;
}

ValueMetadata *_s17LoggingContextKeyVMa()
{
  return &_s17LoggingContextKeyVN;
}

uint64_t MCUINamespace<A>.debugDimensions(labelPosition:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  v6[0] = *a1;
  uint64_t KeyPath = swift_getKeyPath();
  char v8 = 0;
  uint64_t v9 = swift_getKeyPath();
  char v10 = 0;
  MEMORY[0x25A295390](v6, *(void *)(a2 + 16), &type metadata for DebugDimensionsModifier, a3);
  swift_release();
  return swift_release();
}

uint64_t MCUINamespace<A>.debugDimensionsOverlayColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_255B26C38(a1, a2);
}

uint64_t sub_255B26BB8()
{
  return sub_255B26D7C((void (*)(void))sub_255B27BBC);
}

uint64_t sub_255B26BD8@<X0>(void *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_255B27BBC, a1);
}

uint64_t sub_255B26BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255B26DE4(a1, a2, a3, a4, (void (*)(void))sub_255B27BBC);
}

uint64_t MCUINamespace<A>.debugDimensionsBorderColor(_:)(uint64_t a1, uint64_t a2)
{
  return sub_255B26C38(a1, a2);
}

uint64_t sub_255B26C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  swift_getKeyPath();
  v9[1] = a1;
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255B26D5C()
{
  return sub_255B26D7C((void (*)(void))sub_255B27B68);
}

uint64_t sub_255B26D7C(void (*a1)(void))
{
  a1();
  sub_255C7E8C8();
  return v2;
}

uint64_t sub_255B26DC4@<X0>(void *a1@<X8>)
{
  return keypath_getTm_0((void (*)(void))sub_255B27B68, a1);
}

uint64_t sub_255B26DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_255C7E8D8();
}

uint64_t sub_255B26E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_255B26DE4(a1, a2, a3, a4, (void (*)(void))sub_255B27B68);
}

BOOL static DebugDimensionLabelPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DebugDimensionLabelPosition.hash(into:)()
{
  return sub_255C81588();
}

uint64_t DebugDimensionLabelPosition.hashValue.getter()
{
  return sub_255C815B8();
}

unint64_t sub_255B26F08()
{
  unint64_t result = qword_269F244D0;
  if (!qword_269F244D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F244D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugDimensionLabelPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255B27028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionLabelPosition()
{
  return &type metadata for DebugDimensionLabelPosition;
}

uint64_t sub_255B27060()
{
  return swift_getWitnessTable();
}

unint64_t sub_255B270C4()
{
  unint64_t result = qword_269F244D8;
  if (!qword_269F244D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F244D8);
  }
  return result;
}

uint64_t sub_255B27118()
{
  return swift_getWitnessTable();
}

uint64_t destroy for DebugDimensionsModifier()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for DebugDimensionsModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v3;
  char v4 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DebugDimensionsModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  char v5 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DebugDimensionsModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugDimensionsModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugDimensionsModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugDimensionsModifier()
{
  return &type metadata for DebugDimensionsModifier;
}

uint64_t sub_255B273C0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_255B273DC@<D0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v4 = a1[16];
  uint64_t v5 = swift_retain();
  uint64_t v63 = sub_255AB9568(v5, v4);
  swift_release();
  char v6 = a1[32];
  uint64_t v7 = swift_retain();
  uint64_t v62 = sub_255AB9568(v7, v6);
  swift_release();
  uint64_t v8 = 0;
  sub_255C7DDD8();
  double v9 = v69;
  uint64_t v10 = v71;
  uint64_t v55 = v72;
  double v58 = v73;
  uint64_t v59 = v70;
  uint64_t v11 = sub_255C801F8();
  uint64_t v56 = v12;
  uint64_t v57 = v11;
  uint64_t v13 = sub_255C801D8();
  uint64_t v60 = v14;
  uint64_t v61 = v13;
  sub_255C7E0D8();
  if (v15 <= 0.0)
  {
    uint64_t v53 = 0;
    uint64_t KeyPath = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v19 = 0;
    uint64_t v21 = 0;
    uint64_t v49 = 255;
    uint64_t v50 = 0;
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    sub_255C7E0D8();
    uint64_t v8 = v16;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v53 = swift_getKeyPath();
    uint64_t v52 = swift_getKeyPath();
    unsigned __int8 v17 = sub_255C7F188();
    uint64_t v51 = qword_255C8EC98[*a1];
    sub_255C7DC08();
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v49 = 0;
    uint64_t v50 = v17;
  }
  uint64_t v26 = sub_255C80208();
  uint64_t v47 = v27;
  uint64_t v48 = v26;
  uint64_t v46 = sub_255C7FC78();
  sub_255C801F8();
  sub_255C7DFE8();
  uint64_t v28 = v74;
  char v29 = v75;
  uint64_t v30 = v76;
  char v31 = v77;
  uint64_t v32 = v78;
  uint64_t v45 = v79;
  uint64_t v33 = sub_255C801F8();
  uint64_t v35 = v34;
  sub_255B2773C(a1, (uint64_t)v65);
  sub_255B27AA8((uint64_t)v65, (uint64_t)v64);
  sub_255B27AA8((uint64_t)v64, (uint64_t)v65);
  *(void *)&long long v66 = v33;
  *((void *)&v66 + 1) = v35;
  char v68 = v29;
  char v67 = v31;
  unsigned int v36 = 0x201u >> (8 * *a1);
  long long v37 = v65[11];
  *(_OWORD *)(a2 + 440) = v65[10];
  *(_OWORD *)(a2 + 456) = v37;
  long long v38 = v65[7];
  *(_OWORD *)(a2 + 376) = v65[6];
  *(_OWORD *)(a2 + 392) = v38;
  long long v39 = v65[9];
  *(_OWORD *)(a2 + 408) = v65[8];
  *(_OWORD *)(a2 + 424) = v39;
  long long v40 = v65[3];
  *(_OWORD *)(a2 + 312) = v65[2];
  *(_OWORD *)(a2 + 328) = v40;
  long long v41 = v65[5];
  *(_OWORD *)(a2 + 344) = v65[4];
  *(_OWORD *)(a2 + 360) = v41;
  long long v42 = v65[1];
  *(_OWORD *)(a2 + 280) = v65[0];
  *(_OWORD *)(a2 + 296) = v42;
  *(_OWORD *)(a2 + 472) = v66;
  uint64_t v43 = swift_getKeyPath();
  *(void *)a2 = v63;
  *(double *)(a2 + 8) = v9 * 0.5;
  *(double *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v59;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v55;
  double result = v58;
  *(double *)(a2 + 48) = v58;
  *(void *)(a2 + 56) = v62;
  *(_WORD *)(a2 + 64) = 256;
  *(void *)(a2 + 72) = v57;
  *(void *)(a2 + 80) = v56;
  *(void *)(a2 + 88) = v8;
  *(void *)(a2 + 96) = KeyPath;
  *(void *)(a2 + 104) = v49;
  *(void *)(a2 + 112) = v53;
  *(void *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = v52;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = v50;
  *(void *)(a2 + 152) = v19;
  *(void *)(a2 + 160) = v21;
  *(void *)(a2 + 168) = v23;
  *(void *)(a2 + 176) = v25;
  *(void *)(a2 + 184) = 0;
  *(void *)(a2 + 192) = 0;
  *(void *)(a2 + 200) = v51;
  *(void *)(a2 + 208) = v61;
  *(void *)(a2 + 216) = v60;
  *(void *)(a2 + 224) = v46;
  *(void *)(a2 + 232) = v28;
  *(unsigned char *)(a2 + 240) = v29;
  *(void *)(a2 + 248) = v30;
  *(unsigned char *)(a2 + 256) = v31;
  *(void *)(a2 + 264) = v32;
  *(void *)(a2 + 272) = v45;
  *(void *)(a2 + 488) = v48;
  *(void *)(a2 + 496) = v47;
  *(void *)(a2 + 504) = v43;
  *(unsigned char *)(a2 + 512) = v36;
  return result;
}

uint64_t sub_255B2773C@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  sub_255C7E0D8();
  if (v4 <= 0.0)
  {
    sub_255B27B28((uint64_t)v25);
  }
  else
  {
    sub_255C7E0D8();
    uint64_t v6 = v5;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v23 = swift_getKeyPath();
    uint64_t v22 = swift_getKeyPath();
    char v21 = sub_255C7F188();
    uint64_t v7 = 8 * *a1;
    sub_255C7DC08();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    sub_255C7E0D8();
    sub_255C801F8();
    sub_255C7DFE8();
    uint64_t v16 = *(void *)((char *)&unk_255C8ECC8 + v7);
    sub_255C80378();
    v25[0] = v6;
    v25[1] = KeyPath;
    char v26 = 0;
    uint64_t v27 = v23;
    char v28 = 0;
    uint64_t v29 = v22;
    char v30 = 0;
    char v31 = v21;
    uint64_t v32 = v9;
    uint64_t v33 = v11;
    uint64_t v34 = v13;
    uint64_t v35 = v15;
    char v36 = 0;
    uint64_t v37 = v48;
    char v38 = v49;
    uint64_t v39 = v50;
    char v40 = v51;
    uint64_t v41 = v52;
    uint64_t v42 = v53;
    uint64_t v43 = 0;
    uint64_t v44 = v16;
    unint64_t v45 = 0xBFF921FB54442D18;
    uint64_t v46 = v17;
    uint64_t v47 = v18;
    CGSizeMake(v25, v19);
  }
  sub_255B27AA8((uint64_t)v25, (uint64_t)v54);
  return sub_255B27AA8((uint64_t)v54, a2);
}

uint64_t sub_255B27930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = *(_OWORD *)(v2 + 16);
  v14[0] = *(_OWORD *)v2;
  v14[1] = v5;
  char v15 = *(unsigned char *)(v2 + 32);
  uint64_t v6 = sub_255C801F8();
  uint64_t v8 = v7;
  uint64_t v9 = swift_allocObject();
  long long v10 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v9 + 32) = v10;
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v2 + 32);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F244E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  uint64_t v12 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F244E8) + 36);
  *(void *)uint64_t v12 = sub_255B27A68;
  *(void *)(v12 + 8) = v9;
  *(unsigned char *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = v6;
  *(void *)(v12 + 32) = v8;
  return sub_255B27A70((uint64_t)v14);
}

uint64_t sub_255B27A28()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

double sub_255B27A68@<D0>(uint64_t a1@<X8>)
{
  return sub_255B273DC((char *)(v1 + 16), a1);
}

uint64_t sub_255B27A70(uint64_t a1)
{
  return a1;
}

uint64_t sub_255B27AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F244F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_255B27B28(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 255;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 184) = 0;
  return result;
}

unint64_t sub_255B27B68()
{
  unint64_t result = qword_269F244F8;
  if (!qword_269F244F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F244F8);
  }
  return result;
}

unint64_t sub_255B27BBC()
{
  unint64_t result = qword_269F24500;
  if (!qword_269F24500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24500);
  }
  return result;
}

ValueMetadata *_s11MediaCoreUI15OverlayColorKeyVMa_0()
{
  return &_s11MediaCoreUI15OverlayColorKeyVN_0;
}

ValueMetadata *_s11MediaCoreUI14BorderColorKeyVMa_0()
{
  return &_s11MediaCoreUI14BorderColorKeyVN_0;
}

unint64_t sub_255B27C34()
{
  unint64_t result = qword_269F24508;
  if (!qword_269F24508)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F244E8);
    sub_255A09998(&qword_269F24510, &qword_269F244E0);
    sub_255A09998(&qword_269F24518, &qword_269F24520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24508);
  }
  return result;
}

uint64_t sub_255B27CF8()
{
  uint64_t result = sub_255C7FC78();
  qword_269F244C0 = result;
  return result;
}

uint64_t sub_255B27D18@<X0>(void *a1@<X8>)
{
  return sub_255A06F6C(&qword_269F1FFE0, &qword_269F244C0, a1);
}

uint64_t sub_255B27D3C()
{
  uint64_t result = sub_255C7FC78();
  qword_269F244C8 = result;
  return result;
}

uint64_t sub_255B27D5C@<X0>(void *a1@<X8>)
{
  return sub_255A06F6C(&qword_269F1FFE8, &qword_269F244C8, a1);
}

uint64_t sub_255B27D80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_255C7D2A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_255C7D278();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + 96) = a1;
  float v12 = log2f((float)a1);
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v12 <= -1.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v12 >= 1.8447e19)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((unint64_t)v12 <= 0x3F) {
    uint64_t v13 = (1 << (unint64_t)v12) / 2;
  }
  else {
    uint64_t v13 = 0;
  }
  *(void *)(v2 + 16) = sub_255B6AD08(v13, 0);
  *(void *)(v2 + 24) = sub_255B6AD08(v13, 0);
  *(void *)(v2 + 32) = sub_255B6AD08(v13, 0);
  *(void *)(v2 + 40) = sub_255B6AD08(v13, 0);
  *(void *)(v2 + 48) = sub_255B6AD08(v13, 0);
  *(void *)(v2 + 56) = sub_255B6AD08(v13, 0);
  *(float *)(v2 + 64) = 2.0 / (float)v13;
  uint64_t v14 = (*(uint64_t (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8CD00], v8);
  if (v13 < 1) {
    goto LABEL_13;
  }
  v21[0] = v4;
  MEMORY[0x270FA5388](v14);
  v21[-4] = v11;
  LOBYTE(v21[-3]) = 0;
  uint64_t v19 = v13;
  uint64_t v15 = sub_255B51D60(v13, (uint64_t (*)(void *, uint64_t *))sub_255B28814);
  uint64_t v16 = sub_255B416C0(v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(void *)(v2 + 72) = v13;
  *(void *)(v2 + 80) = v16;
  (*(void (**)(char *, void, void))(v5 + 104))(v7, *MEMORY[0x263F8CD08], v21[0]);
  type metadata accessor for DSPSplitComplex(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29C108);
  swift_allocObject();
  uint64_t v17 = sub_255C7D288();
  if (v17)
  {
    *(void *)(v2 + 88) = v17;
    return v2;
  }
LABEL_14:
  int v20 = 0;
  uint64_t v19 = 51;
  uint64_t result = sub_255C81248();
  __break(1u);
  return result;
}

uint64_t sub_255B28114@<X0>(float *a1@<X0>, float *a2@<X1>, float *a3@<X2>, float *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char **a7@<X8>)
{
  uint64_t v11 = a3;
  uint64_t v32 = *MEMORY[0x263EF8340];
  uint64_t v13 = *(void *)(a5 + 16);
  int64_t v14 = *(void *)(a6 + 72);
  v27.realp = a1;
  v27.imagp = a2;
  if (v14 <= v13)
  {
    if (v14 < 0) {
      __break(1u);
    }
    vDSP_Length v16 = *(void *)(a6 + 80);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = a3;
    sub_255B514D8(a5, a5 + 32, 0, (2 * v14) | 1, v16, (char **)(a6 + 16));
  }
  else
  {
    uint64_t v15 = sub_255B6AD08(v14 - v13, 0);
    uint64_t v31 = a5;
    swift_bridgeObjectRetain();
    sub_255B286CC(v15);
    vDSP_Length v16 = *(void *)(a6 + 80);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_255B51588(a5, v16, (char **)(a6 + 16));
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  DSPSplitComplex __Z = v27;
  v29.realp = v11;
  v29.imagp = a4;
  swift_beginAccess();
  uint64_t v17 = *(char **)(a6 + 16);
  unint64_t v18 = *((void *)v17 + 2);
  if (v18 >> 61)
  {
    __break(1u);
LABEL_12:
    uint64_t v24 = sub_255C57BB0((uint64_t)v17);
    goto LABEL_10;
  }
  uint64_t v19 = sub_255B16B94(v17 + 32, v18 >> 1);
  vDSP_Length v20 = *(void *)(v19 + 16);
  char v21 = (const DSPComplex *)(v19 + 32);
  swift_bridgeObjectRetain();
  vDSP_ctoz(v21, 2, &__Z, 1, v20);
  swift_bridgeObjectRelease();
  swift_release();
  sub_255C7D298();
  swift_retain();
  if (v14)
  {
    uint64_t v22 = sub_255C80858();
    *(void *)(v22 + 16) = v14;
  }
  else
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  DSPSplitComplex __A = v29;
  vDSP_zvmags(&__A, 1, (float *)(v22 + 32), 1, v14);
  *(void *)(v22 + 16) = v14;
  swift_release();
  *a7 = (char *)v22;
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_255B28410(v23, a7);
  swift_bridgeObjectRelease();
  int v7 = *(_DWORD *)(a6 + 64);
  uint64_t v17 = *a7;
  vDSP_Length v16 = *((void *)*a7 + 2);
  swift_bridgeObjectRetain();
  uint64_t v24 = v17;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_12;
  }
LABEL_10:
  LODWORD(__A.realp) = v7;
  vDSP_vsmul((const float *)v17 + 8, 1, (const float *)&__A, (float *)v24 + 8, 1, v16);
  *a7 = v24;
  return swift_bridgeObjectRelease();
}

void sub_255B28410(uint64_t a1, char **a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *a2;
  if (v4 != *((void *)*a2 + 2))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 >> 31)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  int v6 = *(void *)(a1 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_7:
  }
    uint64_t v5 = sub_255C57BB0((uint64_t)v5);
  vvsqrtf((float *)v5 + 8, (const float *)(v3 + 32), &v6);
  *uint64_t v2 = v5;
}

uint64_t sub_255B284C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_255B28520()
{
  sub_255B284C8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioTapSampleTransformer()
{
  return self;
}

uint64_t sub_255B28578(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_255C15738(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    _OWORD v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B286CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_255C15B84(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[4 * v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 4 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 4 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_255C81308();
  __break(1u);
  return result;
}

uint64_t sub_255B28814(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(v2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29D1C0);
  sub_255B28894();
  uint64_t result = sub_255C7D268();
  *a2 = v4;
  return result;
}

unint64_t sub_255B28894()
{
  unint64_t result = qword_26B29D1C8;
  if (!qword_26B29D1C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29D1C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29D1C8);
  }
  return result;
}

uint64_t sub_255B288F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (_OWORD *)(v2 + *(int *)(a1 + 56));
  long long v5 = v4[3];
  void v8[2] = v4[2];
  v9[0] = v5;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)((char *)v4 + 58);
  long long v6 = v4[1];
  v8[0] = *v4;
  v8[1] = v6;
  sub_255A1D4DC((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4(a2);
  return sub_255A1D4DC((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
}

double sub_255B2897C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 60);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_255A0877C(*(void *)v2, v4);
  double v5 = sub_255ABB36C(v3, v4);
  sub_255A087D0(v3, v4);
  return v5;
}

uint64_t sub_255B289DC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDD8);
  sub_255C7FE68();
  return v1;
}

uint64_t sub_255B28A34()
{
  return sub_255C7FE78();
}

uint64_t NowPlayingQueueSection.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21848);
  MEMORY[0x270FA5388](v63);
  uint64_t v62 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a1[3];
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24570);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24578);
  sub_255C7E458();
  sub_255C7F0D8();
  uint64_t v65 = sub_255C7E458();
  uint64_t v55 = (uint64_t)a1;
  uint64_t v59 = a1[2];
  uint64_t v64 = sub_255C7E458();
  uint64_t v4 = sub_255C80108();
  uint64_t v52 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v58 = (char *)&v44 - v5;
  uint64_t v57 = a1[5];
  uint64_t v6 = MEMORY[0x263F18C10];
  uint64_t v101 = v57;
  uint64_t v102 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v100 = v6;
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v98 = v6;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v96 = v6;
  uint64_t v7 = v63;
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v9 = sub_255A09998(&qword_269F24580, &qword_269F24570);
  uint64_t v93 = v8;
  uint64_t v94 = v9;
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = sub_255A09998(&qword_269F24588, &qword_269F24578);
  uint64_t v91 = v10;
  uint64_t v92 = v11;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = sub_255B2BC50((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v89 = v12;
  uint64_t v90 = v13;
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v56 = v14;
  uint64_t v87 = *(void *)(v55 + 32);
  uint64_t v15 = v87;
  uint64_t v88 = v13;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v84 = v14;
  uint64_t v85 = v55;
  uint64_t v86 = MEMORY[0x263F1BA00];
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = sub_255A09998(&qword_269F21850, &qword_269F21848);
  uint64_t v80 = v4;
  uint64_t v81 = v7;
  uint64_t v82 = v16;
  uint64_t v83 = v17;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v50 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v46 = (char *)&v44 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24590);
  uint64_t v51 = OpaqueTypeMetadata2;
  uint64_t v20 = sub_255C7E458();
  uint64_t v53 = v4;
  uint64_t v80 = v4;
  uint64_t v81 = v7;
  uint64_t v49 = v16;
  uint64_t v82 = v16;
  uint64_t v83 = v17;
  uint64_t v47 = v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_255A09998(&qword_269F24598, &qword_269F24590);
  uint64_t v78 = OpaqueTypeConformance2;
  uint64_t v79 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v48 = v20;
  uint64_t v80 = v20;
  uint64_t v81 = v23;
  uint64_t v45 = v23;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245A0);
  uint64_t v24 = sub_255C7E458();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  char v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  char v30 = (char *)&v44 - v29;
  uint64_t v71 = v59;
  uint64_t v72 = v60;
  uint64_t v73 = v15;
  uint64_t v74 = v57;
  uint64_t v75 = v61;
  uint64_t v66 = v59;
  uint64_t v67 = v60;
  uint64_t v68 = v15;
  uint64_t v69 = v57;
  uint64_t v70 = v61;
  uint64_t v31 = v58;
  sub_255B2A838((uint64_t)sub_255B294F4);
  uint64_t v32 = sub_255C7E378();
  uint64_t v33 = (uint64_t)v62;
  (*(void (**)(void))(*(void *)(v32 - 8) + 104))();
  sub_255B2BC50(qword_269F21878, MEMORY[0x263F18D80]);
  uint64_t result = sub_255C80578();
  if (result)
  {
    uint64_t v65 = (uint64_t)v30;
    uint64_t v35 = v24;
    char v36 = v46;
    uint64_t v37 = OpaqueTypeConformance2;
    uint64_t v38 = v53;
    sub_255C7F7B8();
    sub_255A095A4(v33, &qword_269F21848);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v38);
    uint64_t v80 = sub_255C7FC78();
    uint64_t v39 = v51;
    sub_255B2A908(2, (uint64_t)&v80, v51, MEMORY[0x263F1B440], v37, MEMORY[0x263F1B428], (uint64_t)v28, 0.0, 0.0, 0.0, 0.0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v39);
    uint64_t v80 = v48;
    uint64_t v81 = v45;
    uint64_t v40 = swift_getOpaqueTypeConformance2();
    uint64_t v41 = sub_255A09998(&qword_269F245A8, &qword_269F245A0);
    uint64_t v76 = v40;
    uint64_t v77 = v41;
    swift_getWitnessTable();
    uint64_t v42 = v65;
    sub_255A20F54(v28);
    uint64_t v43 = *(void (**)(char *, uint64_t))(v25 + 8);
    v43(v28, v35);
    sub_255A20F54(v42);
    return ((uint64_t (*)(uint64_t, uint64_t))v43)(v42, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255B29324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_255C7F0D8();
  uint64_t v5 = sub_255C7E458();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v15 - v10;
  sub_255B4BFB8();
  uint64_t v12 = sub_255B2BC50((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  v15[0] = a4;
  v15[1] = v12;
  swift_getWitnessTable();
  sub_255A20F54(v9);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v5);
  sub_255A20F54(v11);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, v5);
}

uint64_t sub_255B294F4()
{
  return sub_255B308F0((uint64_t (*)(void, void, void, void, void))sub_255B29324);
}

uint64_t sub_255B2950C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v105 = a6;
  uint64_t v106 = a5;
  uint64_t v11 = sub_255C7E9F8();
  uint64_t v103 = *(void *)(v11 - 8);
  uint64_t v104 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v102 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = a4;
  uint64_t v110 = a2;
  *(void *)&long long v134 = a2;
  *((void *)&v134 + 1) = a3;
  uint64_t v135 = a4;
  uint64_t v136 = a5;
  uint64_t v13 = type metadata accessor for NowPlayingQueueSection();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v96 = *(void *)(v100 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v99 = (char *)&v78 - v14;
  uint64_t v15 = sub_255C7E458();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v79 = v15;
  uint64_t v80 = v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v78 - v17;
  uint64_t v19 = sub_255C7E458();
  uint64_t v83 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  char v21 = (char *)&v78 - v20;
  uint64_t v81 = v22;
  uint64_t v23 = sub_255C7E458();
  uint64_t v84 = *(uint64_t **)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = (char *)&v78 - v24;
  uint64_t v85 = v25;
  uint64_t v26 = sub_255C7E458();
  uint64_t v87 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v86 = (char *)&v78 - v27;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24570);
  uint64_t v88 = (void (*)(void, void, void))v26;
  uint64_t v28 = sub_255C7E458();
  uint64_t v89 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v107 = (char *)&v78 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24578);
  uint64_t v90 = v28;
  uint64_t v30 = sub_255C7E458();
  uint64_t v94 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v91 = (char *)&v78 - v31;
  sub_255C7F0D8();
  uint64_t v95 = v30;
  uint64_t v32 = sub_255C7E458();
  uint64_t v97 = *(void *)(v32 - 8);
  uint64_t v98 = v32;
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v92 = (char *)&v78 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v93 = (char *)&v78 - v35;
  sub_255C7F1C8();
  sub_255B288F0(v13, (uint64_t)&v134);
  long long v126 = v134;
  char v127 = v135;
  __int16 v128 = *(_WORD *)((char *)&v135 + 1);
  uint64_t v129 = v136;
  char v130 = v137;
  long long v131 = v138;
  long long v132 = v139;
  char v133 = v140;
  sub_255B3174C();
  uint64_t v111 = a3;
  char v36 = v21;
  uint64_t v37 = v106;
  sub_255C7FAF8();
  sub_255C7F1E8();
  uint64_t v101 = v13;
  uint64_t v108 = a1;
  sub_255B288F0(v13, (uint64_t)&v134);
  long long v126 = v134;
  char v127 = v135;
  __int16 v128 = *(_WORD *)((char *)&v135 + 1);
  uint64_t v129 = v136;
  char v130 = v137;
  long long v131 = v138;
  long long v132 = v139;
  char v133 = v140;
  sub_255B318CC();
  uint64_t v38 = MEMORY[0x263F18C10];
  uint64_t v39 = v37;
  uint64_t v124 = v37;
  uint64_t v125 = MEMORY[0x263F18C10];
  uint64_t v40 = v79;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v18, v40);
  sub_255C7F1A8();
  if (qword_269F1FFF8 != -1) {
    swift_once();
  }
  uint64_t v122 = WitnessTable;
  uint64_t v123 = v38;
  uint64_t v42 = v81;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v82;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v36, v42);
  sub_255C7F1B8();
  if (qword_269F20000 != -1) {
    swift_once();
  }
  uint64_t v120 = v43;
  uint64_t v121 = v38;
  uint64_t v83 = MEMORY[0x263F18E48];
  uint64_t v45 = v85;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = v86;
  sub_255C7FAF8();
  ((void (*)(char *, uint64_t))v84[1])(v44, v45);
  uint64_t v48 = sub_255C801D8();
  uint64_t v84 = &v78;
  MEMORY[0x270FA5388](v48);
  uint64_t v49 = v111;
  *(&v78 - 6) = v110;
  *(&v78 - 5) = v49;
  uint64_t v50 = v108;
  *(&v78 - 4) = v109;
  *(&v78 - 3) = v39;
  *(&v78 - 2) = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F24708);
  uint64_t v118 = v46;
  uint64_t v119 = MEMORY[0x263F18C10];
  uint64_t v51 = v88;
  uint64_t v85 = swift_getWitnessTable();
  sub_255A09998(&qword_269F24710, &qword_269F24708);
  sub_255C7F588();
  (*(void (**)(char *, void (*)(void, void, void)))(v87 + 8))(v47, v51);
  uint64_t v53 = v99;
  uint64_t v52 = v100;
  uint64_t v88 = *(void (**)(void, void, void))(v100 + 16);
  uint64_t v54 = v101;
  v88(v99, v50, v101);
  uint64_t v55 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v56 = (v55 + 48) & ~v55;
  v96 += v56;
  uint64_t v87 = v55 | 7;
  uint64_t v57 = (void *)swift_allocObject();
  uint64_t v58 = v109;
  uint64_t v59 = v111;
  v57[2] = v110;
  v57[3] = v59;
  uint64_t v60 = v106;
  v57[4] = v58;
  v57[5] = v60;
  uint64_t v100 = *(void *)(v52 + 32);
  ((void (*)(char *, char *, uint64_t))v100)((char *)v57 + v56, v53, v54);
  v88(v53, v108, v54);
  uint64_t v61 = (void *)swift_allocObject();
  uint64_t v62 = v111;
  void v61[2] = v110;
  v61[3] = v62;
  v61[4] = v58;
  v61[5] = v60;
  ((void (*)(char *, char *, uint64_t))v100)((char *)v61 + v56, v53, v54);
  uint64_t v63 = sub_255A09998(&qword_269F24580, &qword_269F24570);
  uint64_t v116 = v85;
  uint64_t v117 = v63;
  uint64_t v64 = v90;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = v91;
  uint64_t v67 = v107;
  sub_255C7F818();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v67, v64);
  uint64_t v68 = v102;
  sub_255C7E9E8();
  uint64_t v69 = sub_255A09998(&qword_269F24588, &qword_269F24578);
  uint64_t v114 = v65;
  uint64_t v115 = v69;
  uint64_t v70 = v95;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v72 = v92;
  sub_255C7F958();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v68, v104);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v66, v70);
  uint64_t v73 = sub_255B2BC50((unint64_t *)&qword_26B29F220, MEMORY[0x263F1A470]);
  uint64_t v112 = v71;
  uint64_t v113 = v73;
  uint64_t v74 = v98;
  swift_getWitnessTable();
  uint64_t v75 = v93;
  sub_255A20F54(v72);
  uint64_t v76 = *(void (**)(char *, uint64_t))(v97 + 8);
  v76(v72, v74);
  sub_255A20F54(v75);
  return ((uint64_t (*)(char *, uint64_t))v76)(v75, v74);
}

uint64_t sub_255B2A134()
{
  return sub_255B308F0((uint64_t (*)(void, void, void, void, void))sub_255B2950C);
}

uint64_t sub_255B2A14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v20 = a6;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v11 = type metadata accessor for NowPlayingQueueSection();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v19 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v19 - v13, a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a2;
  *((void *)v16 + 3) = a3;
  *((void *)v16 + 4) = a4;
  *((void *)v16 + 5) = a5;
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(&v16[v15], v14, v11);
  unint64_t v18 = v20;
  *uint64_t v20 = sub_255B30EF0;
  v18[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v16;
  return result;
}

uint64_t sub_255B2A2AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24718);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_255C7FC78();
  uint64_t v15 = sub_255C801E8();
  uint64_t v17 = v16;
  sub_255B2A3C8(a1, a2, a3, v21, v22, (uint64_t)v13);
  unint64_t v18 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  *unint64_t v18 = v15;
  v18[1] = v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24720);
  sub_255A09540((uint64_t)v13, (uint64_t)a6 + *(int *)(v19 + 36), &qword_269F24718);
  *a6 = v14;
  return sub_255A095A4((uint64_t)v13, &qword_269F24718);
}

uint64_t sub_255B2A3C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  *(void *)&long long v25 = a4;
  *((void *)&v25 + 1) = a5;
  uint64_t v26 = a1;
  uint64_t v27 = a6;
  uint64_t v8 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24728);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_255C7EC88();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7ED98();
  sub_255C7E0E8();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  *uint64_t v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  sub_255B30FAC((uint64_t)v11, (uint64_t)v13);
  *(void *)&long long v28 = a2;
  *((void *)&v28 + 1) = a3;
  long long v29 = v25;
  type metadata accessor for NowPlayingQueueSection();
  sub_255B289DC();
  sub_255C801F8();
  sub_255C7DFE8();
  sub_255B31010((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for NowPlayingContrastSensitiveBackdrop);
  uint64_t v22 = &v17[*(int *)(v15 + 44)];
  long long v23 = v29;
  *(_OWORD *)uint64_t v22 = v28;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v30;
  sub_255B31078((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NowPlayingContrastSensitiveBackdrop);
  return sub_255A10514((uint64_t)v17, v27, &qword_269F24728);
}

void sub_255B2A68C(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, BOOL *a5@<X8>)
{
  uint64_t v10 = sub_255C7EC88();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7ED98();
  sub_255C7E0E8();
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v26.origin.CGFloat x = v15;
  v26.origin.CGFloat y = v17;
  v26.size.CGFloat width = v19;
  v26.size.CGFloat height = v21;
  double MinY = CGRectGetMinY(v26);
  v25[0] = a1;
  v25[1] = a2;
  void v25[2] = a3;
  unint64_t v25[3] = a4;
  uint64_t v23 = type metadata accessor for NowPlayingQueueSection();
  double v24 = sub_255B2897C(v23);
  if (qword_269F20020 != -1) {
    swift_once();
  }
  *a5 = MinY <= v24 + *(double *)&qword_269F331B0;
}

uint64_t sub_255B2A838(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x270FA5388](a1);
  v2(v1);
  return sub_255C800E8();
}

uint64_t sub_255B2A908@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v37 = a6;
  v31[1] = a3;
  uint64_t v33 = a2;
  int v32 = a1;
  uint64_t v35 = a7;
  uint64_t v36 = sub_255C80E88();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  double v18 = (char *)v31 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24590);
  uint64_t v19 = sub_255C7E458();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v31 - v21;
  uint64_t v23 = sub_255A09998(&qword_269F24598, &qword_269F24590);
  uint64_t v40 = a5;
  uint64_t v41 = v23;
  uint64_t WitnessTable = swift_getWitnessTable();
  double v42 = *(double *)&v19;
  double v43 = *(double *)&WitnessTable;
  void v31[2] = MEMORY[0x263F1AC08];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v26 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v28 = (char *)v31 - v27;
  double v42 = a8;
  double v43 = a9;
  double v44 = a10;
  double v45 = a11;
  char v46 = 0;
  sub_255C7F758();
  sub_255C7DF68();
  sub_255C7F808();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v29 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v18, v33, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v18, 0, 1, a4);
  uint64_t v38 = v19;
  uint64_t v39 = WitnessTable;
  swift_getOpaqueTypeConformance2();
  sub_255C7F838();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, OpaqueTypeMetadata2);
}

uint64_t sub_255B2ACB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v6 = a3;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v9 = (int *)type metadata accessor for NowPlayingQueueSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + v9[13], a2, a4);
  uint64_t v10 = a5 + v9[14];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_WORD *)(v10 + 72) = 0;
  uint64_t v11 = a5 + v9[15];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  uint64_t v12 = (uint64_t *)(a5 + v9[16]);
  *uint64_t v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a5 + v9[17];
  uint64_t result = sub_255C7FE58();
  *(unsigned char *)uint64_t v13 = v6;
  *(void *)(v13 + 8) = a4;
  return result;
}

uint64_t NowPlayingQueueSection.init(content:header:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(void))MEMORY[0x270FA5388](v9);
  double v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v12();
  a2(v15);
  return sub_255B2ACB4((uint64_t)v14, (uint64_t)v11, a3, a4, a5);
}

uint64_t NowPlayingQueueSection<>.init(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = (void (*)(void))MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  return sub_255B2ACB4((uint64_t)v7, v8, a2, MEMORY[0x263F1BA08], a3);
}

uint64_t NowPlayingQueueSection<>.init<A, B>(_:rowContent:header:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v51 = a6;
  uint64_t v52 = a3;
  uint64_t v47 = a5;
  uint64_t v48 = a4;
  uint64_t v45 = a2;
  uint64_t v49 = a9;
  uint64_t v50 = a1;
  uint64_t v40 = a12;
  uint64_t v38 = a8;
  uint64_t v39 = a13;
  uint64_t v44 = a10;
  uint64_t v15 = MEMORY[0x270FA5388](a1);
  char v46 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(v17 - 8);
  uint64_t v18 = v43;
  MEMORY[0x270FA5388](v15);
  uint64_t v41 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v20;
  swift_getAssociatedTypeWitness();
  uint64_t v37 = a14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = sub_255C7E0B8();
  uint64_t v42 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v54 = a7;
  uint64_t v55 = AssociatedTypeWitness;
  uint64_t v56 = v23;
  uint64_t v57 = v21;
  uint64_t v58 = AssociatedConformanceWitness;
  uint64_t v25 = sub_255C80088();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v36 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v41, v50, a7);
  long long v28 = (void *)swift_allocObject();
  _OWORD v28[2] = v51;
  uint64_t v28[3] = a7;
  uint64_t v29 = v44;
  v28[4] = v38;
  v28[5] = v29;
  uint64_t v30 = v40;
  v28[6] = v21;
  v28[7] = v30;
  uint64_t v31 = v37;
  _OWORD v28[8] = v39;
  v28[9] = v31;
  v28[10] = v45;
  v28[11] = v52;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = sub_255C80078();
  uint64_t v34 = (uint64_t)v46;
  v48(v33);
  uint64_t v53 = WitnessTable;
  swift_getWitnessTable();
  sub_255B2ACB4((uint64_t)v27, v34, v25, v51, v49);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v50, a7);
}

uint64_t sub_255B2B374@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  v19[1] = a3;
  uint64_t v20 = a2;
  uint64_t v21 = a5;
  uint64_t v7 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_255C7E0B8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  double v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v19 - v15;
  v20(a1);
  sub_255C7FBD8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a4);
  swift_getWitnessTable();
  sub_255A20F54(v14);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v14, v10);
  sub_255A20F54(v16);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

uint64_t sub_255B2B594()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B2B5CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255B2B374(a1, *(void (**)(uint64_t))(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 32), a2);
}

uint64_t NowPlayingQueueSection<>.data.getter(uint64_t a1)
{
  return MEMORY[0x270F01178](*(void *)(a1 + 16));
}

uint64_t sub_255B2B614(uint64_t a1)
{
  return NowPlayingQueueSection<>.data.getter(a1);
}

uint64_t NowPlayingQueueRow.init(item:artwork:title:subtitle:action:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v39 = a5;
  uint64_t v42 = a12;
  uint64_t v43 = a7;
  uint64_t v37 = a4;
  uint64_t v38 = a11;
  int v36 = a10;
  uint64_t v34 = a9;
  uint64_t v35 = a3;
  uint64_t v33 = a17;
  uint64_t v40 = a13;
  uint64_t v41 = a6;
  uint64_t v20 = *(void *)(a14 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(a15 - 8);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(a8, a1, a15);
  a2(v24);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a1, a15);
  uint64_t v44 = a14;
  uint64_t v45 = a15;
  uint64_t v46 = a16;
  uint64_t v47 = v33;
  uint64_t v25 = (int *)type metadata accessor for NowPlayingQueueRow();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(a8 + v25[13], v22, a14);
  uint64_t v27 = a8 + v25[14];
  uint64_t v28 = v37;
  *(void *)uint64_t v27 = v35;
  *(void *)(v27 + 8) = v28;
  *(unsigned char *)(v27 + 16) = v39 & 1;
  *(void *)(v27 + 24) = v41;
  uint64_t v29 = a8 + v25[15];
  uint64_t v30 = v34;
  *(void *)uint64_t v29 = v43;
  *(void *)(v29 + 8) = v30;
  *(unsigned char *)(v29 + 16) = v36 & 1;
  *(void *)(v29 + 24) = v38;
  uint64_t v31 = (void *)(a8 + v25[16]);
  uint64_t v32 = v40;
  *uint64_t v31 = v42;
  v31[1] = v32;
  return result;
}

uint64_t type metadata accessor for NowPlayingQueueRow()
{
  return swift_getGenericMetadata();
}

uint64_t NowPlayingQueueRow.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBB0);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245B0);
  swift_getTupleTypeMetadata2();
  sub_255C80318();
  swift_getWitnessTable();
  sub_255C7FED8();
  sub_255C7E458();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v28 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245B8);
  uint64_t v4 = sub_255C7E458();
  uint64_t v5 = sub_255C7EBF8();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = sub_255A09998(qword_269F245C0, &qword_269F245B8);
  uint64_t v6 = swift_getWitnessTable();
  uint64_t v7 = sub_255B2BC50(&qword_26B29D388, MEMORY[0x263F19B68]);
  swift_getOpaqueTypeMetadata2();
  uint64_t v21 = v4;
  uint64_t v22 = v5;
  uint64_t v23 = v6;
  uint64_t v24 = v7;
  swift_getOpaqueTypeConformance2();
  uint64_t v8 = sub_255C7FEB8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  double v14 = (char *)v17 - v13;
  _OWORD v17[4] = v3;
  long long v18 = *(_OWORD *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 40);
  uint64_t v20 = v17[0];
  swift_retain();
  sub_255C7FEA8();
  swift_getWitnessTable();
  sub_255A20F54(v12);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  sub_255A20F54(v14);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
}

uint64_t sub_255B2BC50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B2BC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v60 = a5;
  uint64_t v59 = a4;
  uint64_t v57 = a3;
  uint64_t v49 = a2;
  uint64_t v58 = a1;
  uint64_t v70 = a6;
  uint64_t v6 = sub_255C7EBF8();
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v67 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_255C7E5B8();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_255C7EFA8();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v61 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255C7E458();
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBB0);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245B0);
  swift_getTupleTypeMetadata2();
  uint64_t v47 = sub_255C80318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = sub_255C7FED8();
  uint64_t v53 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v42 = (char *)&v42 - v11;
  uint64_t v12 = sub_255C7E458();
  uint64_t v52 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  double v14 = (char *)&v42 - v13;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v83 = v43;
  uint64_t v84 = MEMORY[0x263F18C10];
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v77 = v12;
  uint64_t v78 = v15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v54 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v71 = (char *)&v42 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F245B8);
  uint64_t v55 = OpaqueTypeMetadata2;
  uint64_t v18 = sub_255C7E458();
  uint64_t v56 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v42 - v19;
  uint64_t v77 = v12;
  uint64_t v78 = v15;
  uint64_t v45 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = sub_255A09998(qword_269F245C0, &qword_269F245B8);
  uint64_t v44 = OpaqueTypeConformance2;
  uint64_t v81 = OpaqueTypeConformance2;
  uint64_t v82 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_255B2BC50(&qword_26B29D388, MEMORY[0x263F19B68]);
  uint64_t v77 = v18;
  uint64_t v78 = v6;
  uint64_t v69 = v6;
  uint64_t v48 = v22;
  uint64_t v79 = v22;
  uint64_t v80 = v23;
  uint64_t v24 = swift_getOpaqueTypeMetadata2();
  uint64_t v50 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v42 - v28;
  uint64_t v72 = v49;
  uint64_t v73 = v57;
  uint64_t v74 = v59;
  uint64_t v75 = v60;
  uint64_t v76 = v58;
  sub_255C7E928();
  uint64_t v30 = v42;
  sub_255C7FEC8();
  sub_255C7F1F8();
  if (qword_269F20010 != -1) {
    swift_once();
  }
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v10);
  uint64_t v31 = v61;
  sub_255C7EF88();
  sub_255C7F8F8();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v63);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v12);
  uint64_t v32 = v64;
  sub_255C7E5A8();
  if (qword_269F1FFF0 != -1) {
    swift_once();
  }
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F246C8);
  __swift_project_value_buffer(v33, (uint64_t)qword_269F24528);
  sub_255A09998(&qword_269F246D0, &qword_269F246C8);
  uint64_t v34 = v51;
  uint64_t v35 = v55;
  int v36 = v71;
  sub_255C7F718();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v32, v66);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v35);
  uint64_t v37 = v67;
  uint64_t v38 = v69;
  uint64_t v39 = v48;
  sub_255B88354();
  sub_255C7F688();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v18);
  uint64_t v77 = v18;
  uint64_t v78 = v38;
  uint64_t v79 = v39;
  uint64_t v80 = v23;
  swift_getOpaqueTypeConformance2();
  sub_255A20F54(v27);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v50 + 8);
  v40(v27, v24);
  sub_255A20F54(v29);
  return ((uint64_t (*)(char *, uint64_t))v40)(v29, v24);
}

uint64_t sub_255B2C6C8()
{
  return sub_255B308F0((uint64_t (*)(void, void, void, void, void))sub_255B2BC98);
}

uint64_t sub_255B2C6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v52 = a6;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F245B0);
  uint64_t v11 = MEMORY[0x270FA5388](v50);
  uint64_t v51 = (uint64_t)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (void *)((char *)v42 - v13);
  v42[0] = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x270FA5388](v42[0]);
  uint64_t v15 = (void *)((char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_255C7E458();
  uint64_t v43 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v42 - v17;
  uint64_t v19 = sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BBB0);
  v42[1] = v19;
  uint64_t v20 = sub_255C7E458();
  uint64_t v44 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v45 = (char *)v42 - v24;
  *(void *)&long long v57 = a2;
  *((void *)&v57 + 1) = a3;
  uint64_t v48 = a3;
  *(void *)&long long v58 = a4;
  *((void *)&v58 + 1) = a5;
  uint64_t v49 = a5;
  type metadata accessor for NowPlayingQueueRow();
  uint64_t v46 = a1;
  if (qword_269F20008 != -1) {
    swift_once();
  }
  sub_255C801F8();
  sub_255C7FA38();
  if (qword_269F20018 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_269F24568;
  uint64_t v26 = (char *)v15 + *(int *)(v42[0] + 20);
  uint64_t v27 = *MEMORY[0x263F19868];
  uint64_t v28 = sub_255C7E988();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
  *uint64_t v15 = v25;
  if (qword_26B2986A8 != -1) {
    swift_once();
  }
  long long v57 = xmmword_26B2AA4B8;
  long long v58 = *(_OWORD *)algn_26B2AA4C8;
  uint64_t v59 = qword_26B2AA4D8;
  v56[6] = a4;
  v56[7] = MEMORY[0x263F18860];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255B44574(0.5, (uint64_t)v15, (uint64_t *)&v57, v16, WitnessTable);
  sub_255B31078((uint64_t)v15, type metadata accessor for ArtworkCornerStyle);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v16);
  unint64_t v30 = sub_255A54ED8();
  v56[4] = WitnessTable;
  v56[5] = v30;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = sub_255A09998(&qword_26B29BBA8, &qword_26B29BBB0);
  v56[2] = v31;
  v56[3] = v32;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = v45;
  sub_255A20F54(v23);
  uint64_t v35 = v44;
  int v36 = *(void (**)(char *, uint64_t))(v44 + 8);
  v36(v23, v20);
  uint64_t v37 = sub_255C7EA58();
  uint64_t v38 = (uint64_t)v47;
  *uint64_t v47 = v37;
  *(void *)(v38 + 8) = 0x4010000000000000;
  *(unsigned char *)(v38 + 16) = 0;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F246D8);
  sub_255B2CD38(v46, a2, v48, a4, v49, v38 + *(int *)(v39 + 44));
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v23, v34, v20);
  v56[0] = v23;
  uint64_t v40 = v51;
  sub_255A09540(v38, v51, &qword_269F245B0);
  v56[1] = v40;
  v55[0] = v20;
  v55[1] = v50;
  uint64_t v53 = v33;
  uint64_t v54 = sub_255A09998(&qword_269F246E0, &qword_269F245B0);
  sub_255AF64A0((uint64_t)v56, 2uLL, (uint64_t)v55);
  sub_255A095A4(v38, &qword_269F245B0);
  v36(v34, v20);
  sub_255A095A4(v40, &qword_269F245B0);
  return ((uint64_t (*)(char *, uint64_t))v36)(v23, v20);
}

uint64_t sub_255B2CD38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v106 = a6;
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C88);
  uint64_t v11 = MEMORY[0x270FA5388](v102);
  uint64_t v99 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v103 = (uint64_t)&v84 - v13;
  uint64_t v96 = sub_255C802C8();
  uint64_t v93 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v92 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C90);
  uint64_t v15 = MEMORY[0x270FA5388](v91);
  uint64_t v95 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v97 = (uint64_t *)((char *)&v84 - v17);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F21C98);
  MEMORY[0x270FA5388](v94);
  uint64_t v100 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22118);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v101 = (uint64_t)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F246E8);
  uint64_t v21 = MEMORY[0x270FA5388](v98);
  uint64_t v105 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v104 = (uint64_t)&v84 - v23;
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F246F0);
  uint64_t v24 = MEMORY[0x270FA5388](v89);
  uint64_t v26 = (uint64_t *)((char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v84 - v27;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22120);
  MEMORY[0x270FA5388](v86);
  unint64_t v30 = (char *)&v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F22128);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v33 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F246F8);
  uint64_t v34 = MEMORY[0x270FA5388](v88);
  uint64_t v108 = (uint64_t)&v84 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v107 = (uint64_t)&v84 - v36;
  uint64_t v109 = a2;
  uint64_t v110 = a3;
  uint64_t v111 = a4;
  uint64_t v112 = a5;
  uint64_t v87 = type metadata accessor for NowPlayingQueueRow();
  uint64_t v90 = a1;
  sub_255C7F228();
  uint64_t v37 = sub_255C7F4A8();
  uint64_t v39 = v38;
  char v41 = v40;
  uint64_t v85 = v42;
  swift_release();
  if (qword_269F1FEF8 != -1) {
    swift_once();
  }
  uint64_t v43 = qword_269F33048;
  swift_retain();
  uint64_t v44 = sub_255C7FCB8();
  uint64_t v45 = (uint64_t *)((char *)v26 + *(int *)(v89 + 56));
  *uint64_t v45 = swift_getKeyPath();
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  swift_storeEnumTagMultiPayload();
  *uint64_t v26 = v43;
  v26[1] = v44;
  sub_255A10514((uint64_t)v26, (uint64_t)v28, &qword_269F246F0);
  sub_255A09540((uint64_t)v28, (uint64_t)&v30[*(int *)(v86 + 36)], &qword_269F246F0);
  *(void *)unint64_t v30 = v37;
  *((void *)v30 + 1) = v39;
  unsigned char v30[16] = v41 & 1;
  *((void *)v30 + 3) = v85;
  sub_255A095A4((uint64_t)v28, &qword_269F246F0);
  uint64_t v46 = sub_255C80208();
  sub_255A58D44(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v33, 0.0, 1, 0.0, 1, v46, v47);
  sub_255A095A4((uint64_t)v30, &qword_269F22120);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v49 = v108;
  sub_255A09540((uint64_t)v33, v108, &qword_269F22128);
  uint64_t v50 = v49 + *(int *)(v88 + 36);
  *(void *)uint64_t v50 = KeyPath;
  *(void *)(v50 + 8) = 1;
  *(unsigned char *)(v50 + 16) = 0;
  sub_255A095A4((uint64_t)v33, &qword_269F22128);
  sub_255A10514(v49, v107, &qword_269F246F8);
  sub_255C7F308();
  uint64_t v51 = sub_255C7F4A8();
  uint64_t v53 = v52;
  char v55 = v54;
  uint64_t v57 = v56;
  swift_release();
  if (qword_269F1FF00 != -1) {
    swift_once();
  }
  char v58 = v55 & 1;
  uint64_t v59 = qword_269F33050;
  uint64_t v60 = v93;
  uint64_t v61 = v92;
  uint64_t v62 = v96;
  (*(void (**)(char *, void, uint64_t))(v93 + 104))(v92, *MEMORY[0x263F1B968], v96);
  uint64_t v63 = v97;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)v97 + *(int *)(v91 + 36), v61, v62);
  *uint64_t v63 = v59;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v60 + 8);
  swift_retain();
  v64(v61, v62);
  uint64_t v65 = sub_255C7FD18();
  uint64_t v66 = v95;
  sub_255A09540((uint64_t)v63, v95, &qword_269F21C90);
  uint64_t v67 = v102;
  uint64_t v68 = (uint64_t)v99;
  uint64_t v69 = (uint64_t *)&v99[*(int *)(v102 + 56)];
  *uint64_t v69 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_255A10514(v66, v68, &qword_269F21C90);
  *(void *)(v68 + *(int *)(v67 + 52)) = v65;
  uint64_t v70 = v103;
  sub_255A10514(v68, v103, &qword_269F21C88);
  uint64_t v71 = (uint64_t)v100;
  sub_255A09540(v70, (uint64_t)&v100[*(int *)(v94 + 36)], &qword_269F21C88);
  *(void *)uint64_t v71 = v51;
  *(void *)(v71 + 8) = v53;
  *(unsigned char *)(v71 + 16) = v58;
  *(void *)(v71 + 24) = v57;
  sub_255A093E4(v51, v53, v58);
  swift_bridgeObjectRetain();
  sub_255A095A4(v70, &qword_269F21C88);
  sub_255A095A4((uint64_t)v63, &qword_269F21C90);
  sub_255A094C0(v51, v53, v58);
  swift_bridgeObjectRelease();
  uint64_t v72 = sub_255C80208();
  uint64_t v73 = v101;
  sub_255A58DA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v101, 0.0, 1, 0.0, 1, v72, v74);
  sub_255A095A4(v71, &qword_269F21C98);
  uint64_t v75 = swift_getKeyPath();
  uint64_t v76 = v105;
  sub_255A09540(v73, v105, &qword_269F22118);
  uint64_t v77 = v76 + *(int *)(v98 + 36);
  *(void *)uint64_t v77 = v75;
  *(void *)(v77 + 8) = 1;
  *(unsigned char *)(v77 + 16) = 0;
  sub_255A095A4(v73, &qword_269F22118);
  uint64_t v78 = v104;
  sub_255A10514(v76, v104, &qword_269F246E8);
  uint64_t v80 = v107;
  uint64_t v79 = v108;
  sub_255A09540(v107, v108, &qword_269F246F8);
  sub_255A09540(v78, v76, &qword_269F246E8);
  uint64_t v81 = v106;
  sub_255A09540(v79, v106, &qword_269F246F8);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24700);
  sub_255A09540(v76, v81 + *(int *)(v82 + 48), &qword_269F246E8);
  sub_255A095A4(v78, &qword_269F246E8);
  sub_255A095A4(v80, &qword_269F246F8);
  sub_255A095A4(v76, &qword_269F246E8);
  return sub_255A095A4(v79, &qword_269F246F8);
}

uint64_t static NowPlayingQueueRow.== infix(_:_:)()
{
  return sub_255C80578() & 1;
}

uint64_t sub_255B2D778()
{
  return sub_255A25A54();
}

uint64_t sub_255B2D790()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B2D7AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B2D7FC()
{
  return sub_255A25A54();
}

uint64_t sub_255B2D818()
{
  return static NowPlayingQueueRow.== infix(_:_:)();
}

void sub_255B2D824()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_255A536C4();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_255B2D94C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v57 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v57 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v5 + 64) + v7;
  uint64_t v9 = *(void *)(v6 + 64) + 7;
  uint64_t v10 = sub_255C7EA18();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12 & 0xF8 | 7;
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  unsigned int v15 = v7 | *(_DWORD *)(v5 + 80) & 0xF8 | *(_DWORD *)(v11 + 80) & 0xF8;
  int v16 = (v12 | v7 | *(_DWORD *)(v5 + 80)) & 0x100000;
  if (v15 <= 7
    && v16 == 0
    && ((v14
       + 8
       + ((v13
         + ((((v9 + (v8 & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)
         + 9) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
     + 16 <= 0x18)
  {
    uint64_t v54 = *(void *)(v10 - 8);
    uint64_t v55 = v14 + 8;
    uint64_t v49 = v10;
    uint64_t v52 = v14;
    uint64_t v53 = ~v13;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
    uint64_t v56 = a1;
    unint64_t v21 = ((unint64_t)a1 + v8) & ~(unint64_t)v7;
    unint64_t v22 = ((unint64_t)a2 + v8) & ~(unint64_t)v7;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v21, v22, v57);
    unint64_t v23 = (v9 + v22) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = *(void *)(v23 + 8);
    unint64_t v25 = (v9 + v21) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = *(void *)(v23 + 16);
    uint64_t v27 = *(void *)(v23 + 24);
    uint64_t v28 = *(void *)(v23 + 32);
    uint64_t v29 = *(void *)(v23 + 40);
    uint64_t v30 = *(void *)(v23 + 48);
    uint64_t v31 = *(void *)(v23 + 56);
    uint64_t v50 = *(void *)v23;
    uint64_t v51 = *(void *)(v23 + 64);
    char v58 = *(unsigned char *)(v23 + 72);
    char v60 = *(unsigned char *)(v23 + 73);
    sub_255A1CFDC(*(void *)v23, v24, v26, v27, v28, v29, v30, v31, v51, v58, v60);
    *(void *)unint64_t v25 = v50;
    *(void *)(v25 + 8) = v24;
    *(void *)(v25 + 16) = v26;
    *(void *)(v25 + 24) = v27;
    *(void *)(v25 + 32) = v28;
    *(void *)(v25 + 40) = v29;
    *(void *)(v25 + 48) = v30;
    *(void *)(v25 + 56) = v31;
    *(void *)(v25 + 64) = v51;
    *(unsigned char *)(v25 + 72) = v58;
    *(unsigned char *)(v25 + 73) = v60;
    unint64_t v32 = (v25 + 81) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v23 + 81) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = *(void *)v33;
    char v35 = *(unsigned char *)(v33 + 8);
    sub_255A0877C(*(void *)v33, v35);
    *(void *)unint64_t v32 = v34;
    *(unsigned char *)(v32 + 8) = v35;
    uint64_t v36 = (void *)((v32 + v13 + 9) & v53);
    uint64_t v37 = (unsigned __int8 *)((v33 + v13 + 9) & v53);
    unsigned int v38 = v37[v52];
    unsigned int v39 = v38 - 2;
    if (v38 < 2)
    {
      uint64_t v20 = v56;
      uint64_t v41 = v54;
LABEL_20:
      if (v38 != 1)
      {
LABEL_28:
        *uint64_t v36 = *(void *)v37;
        swift_retain();
        char v43 = 0;
        goto LABEL_29;
      }
    }
    else
    {
      if (v52 <= 3) {
        uint64_t v40 = v52;
      }
      else {
        uint64_t v40 = 4;
      }
      uint64_t v20 = v56;
      uint64_t v41 = v54;
      switch(v40)
      {
        case 1:
          int v42 = *v37;
          break;
        case 2:
          int v42 = *(unsigned __int16 *)v37;
          break;
        case 3:
          int v42 = *(unsigned __int16 *)v37 | (v37[2] << 16);
          break;
        case 4:
          int v42 = *(_DWORD *)v37;
          break;
        default:
          goto LABEL_20;
      }
      int v44 = (v42 | (v39 << (8 * v52))) + 2;
      int v45 = v42 + 2;
      if (v52 < 4) {
        int v45 = v44;
      }
      if (v45 != 1) {
        goto LABEL_28;
      }
    }
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v41 + 16))(v36, v37, v49);
    char v43 = 1;
LABEL_29:
    *((unsigned char *)v36 + v52) = v43;
    unint64_t v46 = ((unint64_t)v36 + v55) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v47 = (unint64_t)&v37[v55] & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v46 = *(unsigned char *)v47;
    *(void *)(v46 + 8) = *(void *)(v47 + 8);
    goto LABEL_30;
  }
  uint64_t v19 = *a2;
  *a1 = *a2;
  uint64_t v20 = (uint64_t *)(v19 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
LABEL_30:
  swift_retain();
  return v20;
}

uint64_t sub_255B2DD60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  unint64_t v9 = (*(void *)(v7 + 56) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_255A1D054(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(unsigned char *)(v9 + 72), *(unsigned char *)(v9 + 73));
  unint64_t v10 = (v9 + 81) & 0xFFFFFFFFFFFFFFF8;
  sub_255A087D0(*(void *)v10, *(unsigned char *)(v10 + 8));
  uint64_t v11 = sub_255C7EA18();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  uint64_t v14 = (unsigned __int8 *)((v10 + v13 + 9) & ~v13);
  if (*(void *)(v12 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(v12 + 64);
  }
  unsigned int v16 = v14[v15];
  unsigned int v17 = v16 - 2;
  if (v16 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *v14;
        goto LABEL_13;
      case 2:
        int v19 = *(unsigned __int16 *)v14;
        goto LABEL_13;
      case 3:
        int v19 = *(unsigned __int16 *)v14 | (v14[2] << 16);
        goto LABEL_13;
      case 4:
        int v19 = *(_DWORD *)v14;
LABEL_13:
        int v20 = (v19 | (v17 << (8 * v15))) + 2;
        unsigned int v16 = v19 + 2;
        if (v15 < 4) {
          unsigned int v16 = v20;
        }
        break;
      default:
        break;
    }
  }
  if (v16 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(v14, v11);
  }
  else {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_255B2DF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v49 = a1;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v19 = *(void *)(v16 + 16);
  uint64_t v20 = *(void *)(v16 + 24);
  uint64_t v21 = *(void *)(v16 + 32);
  uint64_t v22 = *(void *)(v16 + 40);
  uint64_t v23 = *(void *)(v16 + 48);
  uint64_t v24 = *(void *)(v16 + 56);
  uint64_t v46 = *(void *)(v16 + 64);
  char v47 = *(unsigned char *)(v16 + 72);
  char v48 = *(unsigned char *)(v16 + 73);
  sub_255A1CFDC(*(void *)v16, v18, v19, v20, v21, v22, v23, v24, v46, v47, v48);
  *(void *)unint64_t v15 = v17;
  *(void *)(v15 + 8) = v18;
  *(void *)(v15 + 16) = v19;
  *(void *)(v15 + 24) = v20;
  *(void *)(v15 + 32) = v21;
  *(void *)(v15 + 40) = v22;
  *(void *)(v15 + 48) = v23;
  *(void *)(v15 + 56) = v24;
  *(void *)(v15 + 64) = v46;
  *(unsigned char *)(v15 + 72) = v47;
  *(unsigned char *)(v15 + 73) = v48;
  unint64_t v25 = (v15 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v16 + 81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  LOBYTE(v18) = *(unsigned char *)(v26 + 8);
  sub_255A0877C(*(void *)v26, v18);
  *(void *)unint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = v18;
  uint64_t v28 = sub_255C7EA18();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(_DWORD *)(v29 + 80) & 0xF8;
  uint64_t v31 = v30 + 16;
  unint64_t v32 = v30 + 16 + v25;
  unint64_t v33 = ~v30 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = (void *)(v32 & v33);
  char v35 = (unsigned __int8 *)((v31 + v26) & v33);
  if (*(void *)(v29 + 64) <= 8uLL) {
    uint64_t v36 = 8;
  }
  else {
    uint64_t v36 = *(void *)(*(void *)(v28 - 8) + 64);
  }
  unsigned int v37 = v35[v36];
  unsigned int v38 = v37 - 2;
  if (v37 >= 2)
  {
    if (v36 <= 3) {
      uint64_t v39 = v36;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *v35;
        goto LABEL_13;
      case 2:
        int v40 = *(unsigned __int16 *)v35;
        goto LABEL_13;
      case 3:
        int v40 = *(unsigned __int16 *)((v31 + v26) & v33) | (*(unsigned __int8 *)(((v31 + v26) & v33) + 2) << 16);
        goto LABEL_13;
      case 4:
        int v40 = *(_DWORD *)v35;
LABEL_13:
        int v41 = (v40 | (v38 << (8 * v36))) + 2;
        unsigned int v37 = v40 + 2;
        if (v36 < 4) {
          unsigned int v37 = v41;
        }
        break;
      default:
        break;
    }
  }
  if (v37 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v29 + 16))(v34, v35, v28);
    char v42 = 1;
  }
  else
  {
    *uint64_t v34 = *(void *)v35;
    swift_retain();
    char v42 = 0;
  }
  *((unsigned char *)v34 + v36) = v42;
  unint64_t v43 = ((unint64_t)v34 + v36 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (unint64_t)&v35[v36 + 8] & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v43 = *(unsigned char *)v44;
  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  swift_retain();
  return v49;
}

uint64_t sub_255B2E2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v67 = a1;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v19 = *(void *)(v16 + 16);
  uint64_t v20 = *(void *)(v16 + 24);
  uint64_t v21 = *(void *)(v16 + 32);
  uint64_t v22 = *(void *)(v16 + 40);
  uint64_t v23 = *(void *)(v16 + 48);
  uint64_t v24 = *(void *)(v16 + 56);
  uint64_t v64 = *(void *)(v16 + 64);
  char v65 = *(unsigned char *)(v16 + 72);
  char v66 = *(unsigned char *)(v16 + 73);
  sub_255A1CFDC(*(void *)v16, v18, v19, v20, v21, v22, v23, v24, v64, v65, v66);
  uint64_t v25 = *(void *)v15;
  uint64_t v26 = *(void *)(v15 + 8);
  uint64_t v27 = *(void *)(v15 + 16);
  uint64_t v28 = *(void *)(v15 + 24);
  uint64_t v29 = *(void *)(v15 + 32);
  uint64_t v30 = *(void *)(v15 + 40);
  uint64_t v31 = *(void *)(v15 + 48);
  uint64_t v32 = *(void *)(v15 + 56);
  uint64_t v33 = *(void *)(v15 + 64);
  char v34 = *(unsigned char *)(v15 + 72);
  char v35 = *(unsigned char *)(v15 + 73);
  *(void *)unint64_t v15 = v17;
  *(void *)(v15 + 8) = v18;
  *(void *)(v15 + 16) = v19;
  *(void *)(v15 + 24) = v20;
  *(void *)(v15 + 32) = v21;
  *(void *)(v15 + 40) = v22;
  *(void *)(v15 + 48) = v23;
  *(void *)(v15 + 56) = v24;
  *(void *)(v15 + 64) = v64;
  *(unsigned char *)(v15 + 72) = v65;
  *(unsigned char *)(v15 + 73) = v66;
  sub_255A1D054(v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35);
  unint64_t v36 = (v15 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v16 + 81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = *(void *)v37;
  LOBYTE(v18) = *(unsigned char *)(v37 + 8);
  sub_255A0877C(*(void *)v37, v18);
  uint64_t v39 = *(void *)v36;
  char v40 = *(unsigned char *)(v36 + 8);
  *(void *)unint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = v18;
  sub_255A087D0(v39, v40);
  uint64_t v41 = sub_255C7EA18();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(_DWORD *)(v42 + 80) & 0xF8;
  uint64_t v44 = v43 + 16;
  unint64_t v45 = v43 + 16 + v36;
  unint64_t v46 = ~v43 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = v45 & v46;
  unint64_t v48 = (v44 + v37) & v46;
  if (*(void *)(v42 + 64) <= 8uLL) {
    uint64_t v49 = 8;
  }
  else {
    uint64_t v49 = *(void *)(*(void *)(v41 - 8) + 64);
  }
  if (v47 != v48)
  {
    uint64_t v50 = v41;
    unsigned int v51 = *(unsigned __int8 *)(v47 + v49);
    unsigned int v52 = v51 - 2;
    if (v51 >= 2)
    {
      if (v49 <= 3) {
        uint64_t v53 = v49;
      }
      else {
        uint64_t v53 = 4;
      }
      switch(v53)
      {
        case 1:
          int v54 = *(unsigned __int8 *)v47;
          goto LABEL_14;
        case 2:
          int v54 = *(unsigned __int16 *)v47;
          goto LABEL_14;
        case 3:
          int v54 = *(unsigned __int16 *)(v45 & v46) | (*(unsigned __int8 *)((v45 & v46) + 2) << 16);
          goto LABEL_14;
        case 4:
          int v54 = *(_DWORD *)v47;
LABEL_14:
          int v55 = (v54 | (v52 << (8 * v49))) + 2;
          unsigned int v51 = v54 + 2;
          if (v49 < 4) {
            unsigned int v51 = v55;
          }
          break;
        default:
          break;
      }
    }
    if (v51 == 1) {
      (*(void (**)(unint64_t, uint64_t))(v42 + 8))(v47, v41);
    }
    else {
      swift_release();
    }
    unsigned int v56 = *(unsigned __int8 *)(v48 + v49);
    unsigned int v57 = v56 - 2;
    if (v56 >= 2)
    {
      if (v49 <= 3) {
        uint64_t v58 = v49;
      }
      else {
        uint64_t v58 = 4;
      }
      switch(v58)
      {
        case 1:
          int v59 = *(unsigned __int8 *)v48;
          goto LABEL_28;
        case 2:
          int v59 = *(unsigned __int16 *)v48;
          goto LABEL_28;
        case 3:
          int v59 = *(unsigned __int16 *)v48 | (*(unsigned __int8 *)(v48 + 2) << 16);
          goto LABEL_28;
        case 4:
          int v59 = *(_DWORD *)v48;
LABEL_28:
          int v60 = (v59 | (v57 << (8 * v49))) + 2;
          unsigned int v56 = v59 + 2;
          if (v49 < 4) {
            unsigned int v56 = v60;
          }
          break;
        default:
          break;
      }
    }
    if (v56 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 16))(v47, v48, v50);
      *(unsigned char *)(v47 + v49) = 1;
    }
    else
    {
      *(void *)unint64_t v47 = *(void *)v48;
      *(unsigned char *)(v47 + v49) = 0;
      swift_retain();
    }
  }
  unint64_t v61 = ((v47 | 7) + v49 + 1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = ((v48 | 7) + v49 + 1) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v61 = *(unsigned char *)v62;
  *(void *)(v61 + 8) = *(void *)(v62 + 8);
  swift_retain();
  swift_release();
  return v67;
}

uint64_t sub_255B2E6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  unint64_t v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v15 = *v16;
  long long v18 = v16[2];
  long long v17 = v16[3];
  long long v19 = v16[1];
  *(_OWORD *)((char *)v15 + 58) = *(_OWORD *)((char *)v16 + 58);
  void v15[2] = v18;
  void v15[3] = v17;
  v15[1] = v19;
  unint64_t v20 = ((unint64_t)v15 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v16 + 81) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v16) = *(unsigned char *)(v21 + 8);
  *(void *)unint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = (_BYTE)v16;
  uint64_t v22 = sub_255C7EA18();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80) & 0xF8;
  uint64_t v25 = v24 + 16;
  unint64_t v26 = v24 + 16 + v20;
  unint64_t v27 = ~v24 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = (void *)(v26 & v27);
  uint64_t v29 = (unsigned __int8 *)((v25 + v21) & v27);
  if (*(void *)(v23 + 64) <= 8uLL) {
    uint64_t v30 = 8;
  }
  else {
    uint64_t v30 = *(void *)(*(void *)(v22 - 8) + 64);
  }
  unsigned int v31 = v29[v30];
  unsigned int v32 = v31 - 2;
  if (v31 >= 2)
  {
    if (v30 <= 3) {
      uint64_t v33 = v30;
    }
    else {
      uint64_t v33 = 4;
    }
    switch(v33)
    {
      case 1:
        int v34 = *v29;
        goto LABEL_13;
      case 2:
        int v34 = *(unsigned __int16 *)v29;
        goto LABEL_13;
      case 3:
        int v34 = *(unsigned __int16 *)v29 | (v29[2] << 16);
        goto LABEL_13;
      case 4:
        int v34 = *(_DWORD *)v29;
LABEL_13:
        int v35 = (v34 | (v32 << (8 * v30))) + 2;
        unsigned int v31 = v34 + 2;
        if (v30 < 4) {
          unsigned int v31 = v35;
        }
        break;
      default:
        break;
    }
  }
  if (v31 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v23 + 32))(v28, v29, v22);
    char v36 = 1;
  }
  else
  {
    char v36 = 0;
    void *v28 = *(void *)v29;
  }
  *((unsigned char *)v28 + v30) = v36;
  *(_OWORD *)(((unint64_t)v28 + v30 + 8) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v29[v30 + 8] & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255B2E920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(v15 + 64);
  unint64_t v17 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v14) = *(unsigned char *)(v15 + 72);
  char v18 = *(unsigned char *)(v15 + 73);
  uint64_t v19 = *(void *)v17;
  uint64_t v20 = *(void *)(v17 + 8);
  uint64_t v21 = *(void *)(v17 + 16);
  uint64_t v22 = *(void *)(v17 + 24);
  uint64_t v23 = *(void *)(v17 + 32);
  uint64_t v24 = *(void *)(v17 + 40);
  uint64_t v25 = *(void *)(v17 + 48);
  uint64_t v26 = *(void *)(v17 + 56);
  uint64_t v27 = *(void *)(v17 + 64);
  char v28 = *(unsigned char *)(v17 + 72);
  char v29 = *(unsigned char *)(v17 + 73);
  long long v30 = *(_OWORD *)(v15 + 16);
  long long v31 = *(_OWORD *)(v15 + 32);
  long long v32 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)unint64_t v17 = *(_OWORD *)v15;
  *(_OWORD *)(v17 + 16) = v30;
  *(_OWORD *)(v17 + 32) = v31;
  *(_OWORD *)(v17 + 48) = v32;
  *(void *)(v17 + 64) = v16;
  *(unsigned char *)(v17 + 72) = v14;
  *(unsigned char *)(v17 + 73) = v18;
  sub_255A1D054(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  unint64_t v33 = (v17 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v15 + 81) & 0xFFFFFFFFFFFFFFF8;
  char v35 = *(unsigned char *)(v34 + 8);
  uint64_t v36 = *(void *)v33;
  char v37 = *(unsigned char *)(v33 + 8);
  *(void *)unint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = v35;
  sub_255A087D0(v36, v37);
  uint64_t v38 = sub_255C7EA18();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(_DWORD *)(v39 + 80) & 0xF8;
  uint64_t v41 = v40 + 16;
  unint64_t v42 = v40 + 16 + v33;
  unint64_t v43 = ~v40 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = v42 & v43;
  unint64_t v45 = (v41 + v34) & v43;
  if (*(void *)(v39 + 64) <= 8uLL) {
    uint64_t v46 = 8;
  }
  else {
    uint64_t v46 = *(void *)(*(void *)(v38 - 8) + 64);
  }
  if (v44 != v45)
  {
    uint64_t v47 = v38;
    unsigned int v48 = *(unsigned __int8 *)(v44 + v46);
    unsigned int v49 = v48 - 2;
    if (v48 >= 2)
    {
      if (v46 <= 3) {
        uint64_t v50 = v46;
      }
      else {
        uint64_t v50 = 4;
      }
      switch(v50)
      {
        case 1:
          int v51 = *(unsigned __int8 *)v44;
          goto LABEL_14;
        case 2:
          int v51 = *(unsigned __int16 *)v44;
          goto LABEL_14;
        case 3:
          int v51 = *(unsigned __int16 *)(v42 & v43) | (*(unsigned __int8 *)((v42 & v43) + 2) << 16);
          goto LABEL_14;
        case 4:
          int v51 = *(_DWORD *)v44;
LABEL_14:
          int v52 = (v51 | (v49 << (8 * v46))) + 2;
          unsigned int v48 = v51 + 2;
          if (v46 < 4) {
            unsigned int v48 = v52;
          }
          break;
        default:
          break;
      }
    }
    if (v48 == 1) {
      (*(void (**)(unint64_t, uint64_t))(v39 + 8))(v44, v38);
    }
    else {
      swift_release();
    }
    unsigned int v53 = *(unsigned __int8 *)(v45 + v46);
    unsigned int v54 = v53 - 2;
    if (v53 >= 2)
    {
      if (v46 <= 3) {
        uint64_t v55 = v46;
      }
      else {
        uint64_t v55 = 4;
      }
      switch(v55)
      {
        case 1:
          int v56 = *(unsigned __int8 *)v45;
          goto LABEL_28;
        case 2:
          int v56 = *(unsigned __int16 *)v45;
          goto LABEL_28;
        case 3:
          int v56 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(v45 + 2) << 16);
          goto LABEL_28;
        case 4:
          int v56 = *(_DWORD *)v45;
LABEL_28:
          int v57 = (v56 | (v54 << (8 * v46))) + 2;
          unsigned int v53 = v56 + 2;
          if (v46 < 4) {
            unsigned int v53 = v57;
          }
          break;
        default:
          break;
      }
    }
    if (v53 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v39 + 32))(v44, v45, v47);
      char v58 = 1;
    }
    else
    {
      char v58 = 0;
      *(void *)unint64_t v44 = *(void *)v45;
    }
    *(unsigned char *)(v44 + v46) = v58;
  }
  unint64_t v59 = ((v44 | 7) + v46 + 1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v60 = ((v45 | 7) + v46 + 1) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v59 = *(unsigned char *)v60;
  *(void *)(v59 + 8) = *(void *)(v60 + 8);
  swift_release();
  return a1;
}

uint64_t sub_255B2ECB8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v35 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v35 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(sub_255C7EA18() - 8);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v10;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = *(void *)(v6 + 64) + v13;
  uint64_t v16 = *(void *)(v8 + 64) + 7;
  uint64_t v17 = *(_DWORD *)(v11 + 80) & 0xF8;
  unint64_t v18 = ~v17 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = v17 + 16;
  uint64_t v20 = v12 + 8;
  if (v14 < a2)
  {
    unint64_t v21 = ((v20 + ((v19 + ((((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)) & v18)) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v21 & 0xFFFFFFF8) != 0) {
      unsigned int v22 = 2;
    }
    else {
      unsigned int v22 = a2 - v14 + 1;
    }
    if (v22 >= 0x10000) {
      unsigned int v23 = 4;
    }
    else {
      unsigned int v23 = 2;
    }
    if (v22 < 0x100) {
      unsigned int v23 = 1;
    }
    if (v22 >= 2) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = 0;
    }
    switch(v24)
    {
      case 1:
        int v25 = *((unsigned __int8 *)a1 + v21);
        if (!*((unsigned char *)a1 + v21)) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v25 = *(unsigned __int16 *)((char *)a1 + v21);
        if (*(_WORD *)((char *)a1 + v21)) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B2EFACLL);
      case 4:
        int v25 = *(_DWORD *)((char *)a1 + v21);
        if (!v25) {
          break;
        }
LABEL_28:
        int v27 = v25 - 1;
        if ((v21 & 0xFFFFFFF8) != 0)
        {
          int v27 = 0;
          int v28 = *a1;
        }
        else
        {
          int v28 = 0;
        }
        int v34 = v14 + (v28 | v27);
        return (v34 + 1);
      default:
        break;
    }
  }
  if (v7 == v14)
  {
    char v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    long long v30 = a1;
    uint64_t v31 = v7;
    uint64_t v32 = v5;
LABEL_35:
    return v29(v30, v31, v32);
  }
  long long v30 = (_DWORD *)(((unint64_t)a1 + v15) & ~v13);
  if (v9 == v14)
  {
    char v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v31 = v9;
    uint64_t v32 = v35;
    goto LABEL_35;
  }
  unint64_t v33 = *(void *)(((v20
                    + ((v19 + (((((unint64_t)v30 + v16) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)) & v18)) & 0xFFFFFFFFFFFFFFF8)
                  + 8);
  if (v33 >= 0xFFFFFFFF) {
    LODWORD(v33) = -1;
  }
  int v34 = v33 - 1;
  if (v34 < 0) {
    int v34 = -1;
  }
  return (v34 + 1);
}

void sub_255B2EFC0(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v38 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v38 - 8);
  uint64_t v36 = *(void *)(a4 + 24);
  uint64_t v37 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v36 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8) {
    unsigned int v11 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(void *)(sub_255C7EA18() - 8);
  if (*(void *)(v12 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v12 + 64);
  }
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v11;
  }
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v7 + 64) + v15;
  uint64_t v17 = *(void *)(v9 + 64) + 7;
  uint64_t v18 = *(_DWORD *)(v12 + 80) & 0xF8;
  unint64_t v19 = ~v18 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = v18 + 16;
  uint64_t v21 = v13 + 8;
  unint64_t v22 = ((v21 + ((v20 + ((((v17 + (v16 & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)) & v19)) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v14 >= a3)
  {
    int v25 = 0;
    int v26 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_23:
      uint64_t v27 = ~v15;
      switch(v25)
      {
        case 1:
          *((unsigned char *)a1 + v22) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_36;
        case 2:
          *(_WORD *)((char *)a1 + v22) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_36;
        case 3:
          goto LABEL_51;
        case 4:
          *(_DWORD *)((char *)a1 + v22) = 0;
          goto LABEL_35;
        default:
LABEL_35:
          if (!a2) {
            return;
          }
LABEL_36:
          if (v8 == v14)
          {
            uint64_t v30 = v38;
            uint64_t v31 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v37 + 56);
            uint64_t v32 = a1;
            uint64_t v33 = a2;
            uint64_t v34 = v8;
          }
          else
          {
            uint64_t v32 = (_DWORD *)(((unint64_t)a1 + v16) & v27);
            if (v10 != v14)
            {
              uint64_t v35 = (void *)((v21
                              + ((v20
                                + (((((unint64_t)v32 + v17) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)) & v19)) & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                *uint64_t v35 = (a2 - 0x7FFFFFFF);
                v35[1] = 0;
              }
              else
              {
                v35[1] = a2;
              }
              return;
            }
            uint64_t v31 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v9 + 56);
            uint64_t v33 = a2;
            uint64_t v34 = v10;
            uint64_t v30 = v36;
          }
          v31(v32, v33, v34, v30);
          break;
      }
      return;
    }
  }
  else
  {
    if (((v21
         + ((v20 + ((((v17 + (v16 & ~v15)) & 0xFFFFFFF8) + 81) & 0xFFFFFFF8)) & v19)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v23 = a3 - v14 + 1;
    else {
      unsigned int v23 = 2;
    }
    if (v23 >= 0x10000) {
      int v24 = 4;
    }
    else {
      int v24 = 2;
    }
    if (v23 < 0x100) {
      int v24 = 1;
    }
    if (v23 >= 2) {
      int v25 = v24;
    }
    else {
      int v25 = 0;
    }
    int v26 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_23;
    }
  }
  if (((v21
       + ((v20 + ((((v17 + (v16 & ~v15)) & 0xFFFFFFF8) + 81) & 0xFFFFFFF8)) & v19)) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v28 = v26;
  else {
    int v28 = 1;
  }
  if (((v21
       + ((v20 + ((((v17 + (v16 & ~v15)) & 0xFFFFFFF8) + 81) & 0xFFFFFFF8)) & v19)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v29 = ~v14 + a2;
    bzero(a1, ((v21 + ((v20 + ((((v17 + (v16 & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 81) & 0xFFFFFFFFFFFFFFF8)) & v19)) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v29;
  }
  switch(v25)
  {
    case 1:
      *((unsigned char *)a1 + v22) = v28;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v22) = v28;
      break;
    case 3:
LABEL_51:
      __break(1u);
      JUMPOUT(0x255B2F308);
    case 4:
      *(_DWORD *)((char *)a1 + v22) = v28;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for NowPlayingQueueSection()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255B2F348()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_255B2F430(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((((((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    unint64_t v19 = (v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = (v11 + v18) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    char v23 = *(unsigned char *)(v20 + 16);
    sub_255A093E4(*(void *)v20, v22, v23);
    *(void *)unint64_t v19 = v21;
    *(void *)(v19 + 8) = v22;
    *(unsigned char *)(v19 + 16) = v23;
    *(void *)(v19 + 24) = *(void *)(v20 + 24);
    unint64_t v24 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    char v28 = *(unsigned char *)(v25 + 16);
    swift_bridgeObjectRetain();
    sub_255A093E4(v26, v27, v28);
    *(void *)unint64_t v24 = v26;
    *(void *)(v24 + 8) = v27;
    *(unsigned char *)(v24 + 16) = v28;
    *(void *)(v24 + 24) = *(void *)(v25 + 24);
    int v29 = (void *)((v24 + 39) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v30 = (void *)((v25 + 39) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_255B2F654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  unint64_t v9 = (*(void *)(v7 + 56) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_255A094C0(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
  swift_bridgeObjectRelease();
  sub_255A094C0(*(void *)((v9 + 39) & 0xFFFFFFFFFFFFFFF8), *(void *)(((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 16));
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_255B2F74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  LOBYTE(v9) = *(unsigned char *)(v16 + 16);
  sub_255A093E4(*(void *)v16, v18, v9);
  *(void *)unint64_t v15 = v17;
  *(void *)(v15 + 8) = v18;
  *(unsigned char *)(v15 + 16) = v9;
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  unint64_t v19 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  LOBYTE(v9) = *(unsigned char *)(v20 + 16);
  swift_bridgeObjectRetain();
  sub_255A093E4(v21, v22, v9);
  *(void *)unint64_t v19 = v21;
  *(void *)(v19 + 8) = v22;
  *(unsigned char *)(v19 + 16) = v9;
  *(void *)(v19 + 24) = *(void *)(v20 + 24);
  char v23 = (void *)((v19 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)((v20 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  void *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_255B2F8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  LOBYTE(v9) = *(unsigned char *)(v16 + 16);
  sub_255A093E4(*(void *)v16, v18, v9);
  uint64_t v19 = *(void *)v15;
  uint64_t v20 = *(void *)(v15 + 8);
  char v21 = *(unsigned char *)(v15 + 16);
  *(void *)unint64_t v15 = v17;
  *(void *)(v15 + 8) = v18;
  *(unsigned char *)(v15 + 16) = v9;
  sub_255A094C0(v19, v20, v21);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v22 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  LOBYTE(v9) = *(unsigned char *)(v23 + 16);
  sub_255A093E4(*(void *)v23, v25, v9);
  uint64_t v26 = *(void *)v22;
  uint64_t v27 = *(void *)(v22 + 8);
  char v28 = *(unsigned char *)(v22 + 16);
  *(void *)unint64_t v22 = v24;
  *(void *)(v22 + 8) = v25;
  *(unsigned char *)(v22 + 16) = v9;
  sub_255A094C0(v26, v27, v28);
  *(void *)(v22 + 24) = *(void *)(v23 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v29 = (void *)((v22 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)((v23 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255B2FA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  unint64_t v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = v16[1];
  *unint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (_OWORD *)(((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_OWORD *)(((unint64_t)v16 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(_OWORD *)(((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v19 + 39) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255B2FB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v14) = *(unsigned char *)(v16 + 16);
  uint64_t v17 = *(void *)v15;
  uint64_t v18 = *(void *)(v15 + 8);
  char v19 = *(unsigned char *)(v15 + 16);
  *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(v15 + 16) = v14;
  sub_255A094C0(v17, v18, v19);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  swift_bridgeObjectRelease();
  unint64_t v20 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 16);
  uint64_t v23 = *(void *)v20;
  uint64_t v24 = *(void *)(v20 + 8);
  char v25 = *(unsigned char *)(v20 + 16);
  *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = v22;
  sub_255A094C0(v23, v24, v25);
  *(void *)(v20 + 24) = *(void *)(v21 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)((v20 + 39) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v21 + 39) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_255B2FC84(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= v5) {
    unsigned int v9 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + v8;
  uint64_t v11 = *(void *)(v6 + 64) + 7;
  if (v9 < a2)
  {
    unint64_t v12 = ((((((v11 + (v10 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unsigned int v13 = a2 - v9;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v12);
        if (!v18) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v18) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B2FE6CLL);
      case 4:
        int v18 = *(int *)((char *)a1 + v12);
        if (!v18) {
          break;
        }
LABEL_24:
        int v20 = v18 - 1;
        if (v14)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v9 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (v5 == v9) {
    return (*(uint64_t (**)(int *, uint64_t, void))(v4 + 48))(a1, v5, *(void *)(a3 + 24));
  }
  unint64_t v22 = ((unint64_t)a1 + v10) & ~v8;
  if (v7 == v9) {
    return (*(uint64_t (**)(unint64_t))(v6 + 48))(v22);
  }
  unint64_t v23 = *(void *)(((v11 + v22) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v23 >= 0xFFFFFFFF) {
    LODWORD(v23) = -1;
  }
  return (v23 + 1);
}

void sub_255B2FE80(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v15 = ((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v12 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_48;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              unint64_t v23 = *(void (**)(void))(v6 + 56);
              v23();
            }
            else
            {
              unint64_t v24 = (unint64_t)&a1[v13] & ~v11;
              if (v10 == v12)
              {
                char v25 = *(void (**)(unint64_t))(v9 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  unint64_t v26[2] = 0;
                  uint64_t v26[3] = 0;
                  *uint64_t v26 = a2 ^ 0x80000000;
                  v26[1] = 0;
                }
                else
                {
                  uint64_t v26[3] = a2 - 1;
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v12;
    if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v21 = v20;
  }
  else {
    int v21 = 1;
  }
  if (((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v12 + a2;
    bzero(a1, ((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x255B3012CLL);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_255B30154()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B305A8()
{
  swift_getAssociatedTypeWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_255B30620()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B308D8()
{
  return sub_255B308F0((uint64_t (*)(void, void, void, void, void))sub_255B2C6E0);
}

uint64_t sub_255B308F0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_255B30908()
{
  uint64_t v0 = sub_255C7E988();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_255C7E518();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F246C8);
  __swift_allocate_value_buffer(v8, qword_269F24528);
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_269F24528);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F19860], v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(&v7[*(int *)(v5 + 28)], v3, v0);
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)unsigned int v7 = _Q0;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_255B31010((uint64_t)v7, v9, MEMORY[0x263F19048]);
  *(_OWORD *)(v9 + *(int *)(v8 + 36)) = xmmword_255C8ED60;
  return sub_255B31078((uint64_t)v7, MEMORY[0x263F19048]);
}

void sub_255B30AE8()
{
  qword_269F24540 = 0x4028000000000000;
}

void sub_255B30AF8()
{
  qword_269F24548 = 0x4031000000000000;
}

int64x2_t sub_255B30B08()
{
  int64x2_t result = vdupq_n_s64(0x4048000000000000uLL);
  xmmword_269F24550 = (__int128)result;
  return result;
}

void sub_255B30B20()
{
  qword_269F24560 = 0x4010000000000000;
}

void sub_255B30B30()
{
  qword_269F24568 = 0x4010000000000000;
}

uint64_t sub_255B30B6C@<X0>(uint64_t (**a1)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  return sub_255B2A14C(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_255B30B80(BOOL *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  type metadata accessor for NowPlayingQueueSection();

  sub_255B2A68C(v3, v4, v5, v6, a1);
}

uint64_t sub_255B30C40()
{
  return sub_255B28A34();
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v8 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)type metadata accessor for NowPlayingQueueSection();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  (*(void (**)(uint64_t))(*(void *)(v8 - 8) + 8))(v3 + v2[13]);
  uint64_t v4 = v3 + v2[14];
  sub_255A1D054(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72), *(unsigned char *)(v4 + 73));
  sub_255A087D0(*(void *)(v3 + v2[15]), *(unsigned char *)(v3 + v2[15] + 8));
  uint64_t v5 = v3 + v2[16];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B298500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_255C7EA18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_255B30EF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(type metadata accessor for NowPlayingQueueSection() - 8);
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_255B2A2AC(v8, v3, v4, v5, v6, a1);
}

uint64_t sub_255B30FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NowPlayingContrastSensitiveBackdrop();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B31010(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255B31078(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_255B310D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29FCB8);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 5;
  *(_OWORD *)(v0 + 16) = xmmword_255C8B5F0;
  *(void *)(v0 + 32) = &unk_270478918;
  *(void *)(v0 + 40) = &unk_270478E48;
  *(void *)(v0 + 48) = &unk_270479378;
  *(void *)(v0 + 56) = &unk_2704798A8;
  *(void *)(v0 + 64) = &unk_270479DD8;
  *(void *)(v0 + 72) = &unk_27047A308;
  *(void *)(v0 + 80) = &unk_27047A838;
  *(void *)(v0 + 88) = &unk_27047AD68;
  *(void *)(v0 + 96) = &unk_27047B298;
  *(void *)(v0 + 104) = &unk_27047B7C8;
  off_26B29FC18 = (_UNKNOWN *)v0;
  return result;
}

double sub_255B3117C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29FCB8);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 5;
  *(_OWORD *)(v0 + 16) = xmmword_255C8B5F0;
  *(void *)(v0 + 32) = &unk_27047BCF8;
  *(void *)(v0 + 40) = &unk_27047BF58;
  *(void *)(v0 + 48) = &unk_27047C1B8;
  *(void *)(v0 + 56) = &unk_27047C418;
  *(void *)(v0 + 64) = &unk_27047C678;
  *(void *)(v0 + 72) = &unk_27047C8D8;
  *(void *)(v0 + 80) = &unk_27047CB38;
  *(void *)(v0 + 88) = &unk_27047CD98;
  *(void *)(v0 + 96) = &unk_27047CFF8;
  *(void *)(v0 + 104) = &unk_27047D258;
  qword_26B29FC28 = v0;
  return result;
}

uint64_t sub_255B31220@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    if (qword_26B29FC20 != -1) {
      swift_once();
    }
    uint64_t v4 = (uint64_t *)&off_26B29FC18;
    uint64_t v5 = 8;
  }
  else
  {
    if (qword_26B29FC38 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_26B29FC28;
    uint64_t v5 = 5;
  }
  uint64_t v6 = *v4;
  unint64_t v7 = *(void *)(*v4 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_255A42900(v7);
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)(v6 + 16))
    {
      unint64_t v9 = v6 + 16 * v8;
      uint64_t v2 = *(void *)(v9 + 32);
      unint64_t v7 = *(void *)(v9 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v10 = qword_26B29FC48;
      swift_bridgeObjectRetain();
      if (v10 == -1)
      {
LABEL_12:
        v11.n128_u64[0] = xmmword_26B2AA650;
        uint64_t v12 = sub_255AAF970(v5, v5, v2, *(float64_t *)&xmmword_26B2AA630, *(float64_t *)&qword_26B2AA640, v11, *((double *)&xmmword_26B2AA650 + 1));
        uint64_t v14 = v13;
        uint64_t v16 = v15;
        uint64_t v18 = v17;
        swift_bridgeObjectRelease_n();
        v19.n128_u64[0] = xmmword_26B2AA650;
        uint64_t v20 = sub_255AAF970(v5, v5, v7, *(float64_t *)&xmmword_26B2AA630, *(float64_t *)&qword_26B2AA640, v19, *((double *)&xmmword_26B2AA650 + 1));
        uint64_t v22 = v21;
        uint64_t v24 = v23;
        uint64_t v26 = v25;
        uint64_t result = swift_bridgeObjectRelease();
        *a2 = v12;
        a2[1] = v14;
        a2[2] = v16;
        a2[3] = v18;
        a2[4] = v20;
        a2[5] = v22;
        a2[6] = v24;
        a2[7] = v26;
        return result;
      }
LABEL_15:
      swift_once();
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = sub_255C81248();
  __break(1u);
  return result;
}

double sub_255B31434@<D0>(uint64_t a1@<X8>)
{
  sub_255A1F634();
  sub_255C7E8C8();
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 17) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = v8;
  double result = *(double *)&v9;
  *(_OWORD *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 72) = v10;
  return result;
}

uint64_t sub_255B314BC()
{
  return sub_255C7E8D8();
}

uint64_t sub_255B31540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_255C7E8B8();
  __int16 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_255B315AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B297F28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255AA9080(a1, (uint64_t)v6);
  uint64_t v7 = sub_255C7E8B8();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
}

double sub_255B316A0@<D0>(_OWORD *a1@<X8>)
{
  sub_255AB8CBC();
  sub_255C7E8C8();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_255B316F0(uint64_t *a1)
{
  return sub_255C7E8D8();
}

double sub_255B3174C()
{
  switch(*(unsigned char *)(v0 + 18))
  {
    case 1:
      sub_255BE5ABC((uint64_t)v2);
      sub_255BE5ABC((uint64_t)v2);
      break;
    case 2:
    case 3:
      return 0.0;
    default:
      sub_255BE59C0((uint64_t)v2);
      break;
  }
  return 0.0;
}

double sub_255B318CC()
{
  double result = 16.0;
  if (*(unsigned __int8 *)(v0 + 18) - 2 >= 2)
  {
    if (*(unsigned char *)(v0 + 18))
    {
      sub_255BE5ABC((uint64_t)v2);
      sub_255BE5ABC((uint64_t)v2);
      return v3 + -16.0 + 16.0;
    }
    else
    {
      sub_255BE59C0((uint64_t)v2);
      return 29.5;
    }
  }
  return result;
}

uint64_t sub_255B31A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = (_OWORD *)(v2 + *(int *)(a1 + 36));
  long long v5 = v4[3];
  void v8[2] = v4[2];
  v9[0] = v5;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)((char *)v4 + 58);
  long long v6 = v4[1];
  v8[0] = *v4;
  v8[1] = v6;
  sub_255A1D4DC((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1CFDC);
  sub_255AB99F4(a2);
  return sub_255A1D4DC((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, _WORD))sub_255A1D054);
}

uint64_t sub_255B31AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  long long v5 = *(_OWORD *)(v4 + 16);
  v7[0] = *(_OWORD *)v4;
  v7[1] = v5;
  char v8 = *(unsigned char *)(v4 + 32);
  sub_255B36F3C((uint64_t)v7, (void (*)(void, void, void, void, void))sub_255AB8EBC);
  sub_255ABB854(a2);
  return sub_255B36F3C((uint64_t)v7, (void (*)(void, void, void, void, void))sub_255AB8EB0);
}

uint64_t NowPlayingQueue.init(content:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for NowPlayingQueue();
  uint64_t v5 = a2 + v4[9];
  *(void *)uint64_t v5 = swift_getKeyPath();
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_WORD *)(v5 + 72) = 0;
  uint64_t v6 = a2 + v4[10];
  *(void *)uint64_t v6 = swift_getKeyPath();
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 0;
  uint64_t v7 = (uint64_t *)(a2 + v4[11]);
  type metadata accessor for NowPlayingViewModel.Lifecycle();
  sub_255B36DF4(&qword_26B29A200, 255, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle);
  *uint64_t v7 = sub_255C7E628();
  v7[1] = v8;
  long long v9 = (uint64_t *)(a2 + v4[12]);
  _s5QueueCMa();
  sub_255B36DF4(&qword_26B299BC8, v10, (void (*)(uint64_t))_s5QueueCMa);
  *long long v9 = sub_255C7E628();
  v9[1] = v11;
  return a1();
}

uint64_t type metadata accessor for NowPlayingQueue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B31C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_255C7E8B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t _s5QueueCMa()
{
  return self;
}

uint64_t NowPlayingQueue.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v51[2] = a2;
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v5);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  v51[1] = v7;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(void *)(v7 + 16) = v8;
  *(void *)(v7 + 24) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, v5, a1);
  uint64_t v10 = (ValueMetadata *)MEMORY[0x263F8D4F8];
  uint64_t v72 = v8;
  uint64_t v73 = (ValueMetadata *)MEMORY[0x263F8D4F8];
  unint64_t v11 = MEMORY[0x263F8D510];
  uint64_t v74 = v9;
  unint64_t v75 = MEMORY[0x263F8D510];
  swift_getOpaqueTypeMetadata2();
  uint64_t v72 = v8;
  uint64_t v73 = v10;
  uint64_t v74 = v9;
  unint64_t v75 = v11;
  swift_getOpaqueTypeConformance2();
  uint64_t v12 = sub_255C7ED18();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v72 = MEMORY[0x263F8E628];
  uint64_t v73 = (ValueMetadata *)v12;
  uint64_t v74 = MEMORY[0x263F8E638];
  unint64_t v75 = WitnessTable;
  sub_255C7F368();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24730);
  sub_255C7E458();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  uint64_t v14 = sub_255C7E458();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = sub_255A09998(&qword_269F24738, &qword_269F24730);
  uint64_t v70 = v15;
  uint64_t v71 = v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
  uint64_t v68 = v17;
  uint64_t v69 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v72 = v14;
  uint64_t v73 = (ValueMetadata *)v19;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v72 = v14;
  uint64_t v73 = (ValueMetadata *)v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = OpaqueTypeMetadata2;
  uint64_t v73 = (ValueMetadata *)OpaqueTypeConformance2;
  uint64_t v22 = swift_getOpaqueTypeMetadata2();
  uint64_t v72 = OpaqueTypeMetadata2;
  uint64_t v73 = (ValueMetadata *)OpaqueTypeConformance2;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = v22;
  uint64_t v73 = (ValueMetadata *)v23;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24740);
  uint64_t v24 = sub_255C7E458();
  uint64_t v72 = v22;
  uint64_t v73 = (ValueMetadata *)v23;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = sub_255A09998(&qword_269F24748, &qword_269F24740);
  uint64_t v66 = v25;
  uint64_t v67 = v26;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v72 = v24;
  uint64_t v73 = (ValueMetadata *)v27;
  uint64_t v28 = swift_getOpaqueTypeMetadata2();
  uint64_t v29 = sub_255C7E2D8();
  uint64_t v72 = v24;
  uint64_t v73 = (ValueMetadata *)v27;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = v28;
  uint64_t v73 = (ValueMetadata *)v29;
  unint64_t v31 = MEMORY[0x263F18B88];
  uint64_t v74 = v30;
  unint64_t v75 = MEMORY[0x263F18B88];
  uint64_t v32 = swift_getOpaqueTypeMetadata2();
  uint64_t v72 = v28;
  uint64_t v73 = (ValueMetadata *)v29;
  uint64_t v74 = v30;
  unint64_t v75 = v31;
  uint64_t v33 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = v32;
  uint64_t v73 = (ValueMetadata *)v33;
  swift_getOpaqueTypeMetadata2();
  sub_255C7E458();
  sub_255C7E458();
  sub_255C7F0D8();
  sub_255C7E458();
  sub_255C7E458();
  uint64_t v34 = sub_255C7E458();
  uint64_t v72 = v32;
  uint64_t v73 = (ValueMetadata *)v33;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  uint64_t v36 = MEMORY[0x263F18C10];
  uint64_t v64 = v35;
  uint64_t v65 = MEMORY[0x263F18C10];
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = v36;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = sub_255B36DF4((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v60 = v37;
  uint64_t v61 = v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = MEMORY[0x263F1A240];
  uint64_t v58 = v39;
  uint64_t v59 = MEMORY[0x263F1A240];
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = v40;
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v42 = sub_255B341B8();
  uint64_t v72 = v34;
  uint64_t v73 = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  uint64_t v74 = v41;
  unint64_t v75 = v42;
  uint64_t v43 = swift_getOpaqueTypeMetadata2();
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298168);
  uint64_t v72 = v34;
  uint64_t v73 = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  uint64_t v74 = v41;
  unint64_t v75 = v42;
  uint64_t v45 = swift_getOpaqueTypeConformance2();
  unint64_t v46 = sub_255B3420C();
  uint64_t v72 = v43;
  uint64_t v73 = (ValueMetadata *)v44;
  uint64_t v74 = v45;
  unint64_t v75 = v46;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24750);
  sub_255C7E458();
  uint64_t v72 = v43;
  uint64_t v73 = (ValueMetadata *)v44;
  uint64_t v74 = v45;
  unint64_t v75 = v46;
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = sub_255A09998(qword_269F24758, &qword_269F24750);
  uint64_t v54 = v47;
  uint64_t v55 = v48;
  swift_getWitnessTable();
  uint64_t v52 = sub_255C7E548();
  unsigned int v53 = v49;
  sub_255C7E558();
  swift_getWitnessTable();
  sub_255A20F54(&v52);
  swift_release();
  uint64_t v52 = v72;
  unsigned int v53 = v73;
  sub_255A20F54(&v52);
  return swift_release();
}

uint64_t sub_255B324F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v255 = a2;
  uint64_t v242 = a1;
  uint64_t v247 = a5;
  uint64_t v245 = sub_255C7E498();
  uint64_t v244 = *(void *)(v245 - 8);
  MEMORY[0x270FA5388](v245);
  uint64_t v241 = v7;
  v243 = (char *)v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3;
  uint64_t v236 = type metadata accessor for NowPlayingQueue();
  uint64_t v258 = *(void *)(v236 - 8);
  v254 = *(void (**)(uint64_t, char *, uint64_t))(v258 + 64);
  MEMORY[0x270FA5388](v236);
  v246 = (char *)v162 - v9;
  uint64_t v10 = sub_255C7E2D8();
  uint64_t v251 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  v250 = (char *)v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_255C7ECC8();
  uint64_t v248 = *(void *)(v249 - 8);
  MEMORY[0x270FA5388](v249);
  v240 = (char *)v162 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_255C7EDF8();
  uint64_t v238 = *(void *)(v239 - 8);
  MEMORY[0x270FA5388](v239);
  v237 = (char *)v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x263F8D4F8];
  uint64_t v15 = v8;
  uint64_t v257 = v8;
  *(void *)&long long v270 = v8;
  *((void *)&v270 + 1) = MEMORY[0x263F8D4F8];
  uint64_t v16 = MEMORY[0x263F8D510];
  uint64_t v256 = a4;
  *(void *)&long long v271 = a4;
  *((void *)&v271 + 1) = MEMORY[0x263F8D510];
  uint64_t v233 = MEMORY[0x263F1B270];
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v270 = v15;
  *((void *)&v270 + 1) = v14;
  *(void *)&long long v271 = a4;
  *((void *)&v271 + 1) = v16;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = sub_255C7ED18();
  uint64_t v198 = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v270 = MEMORY[0x263F8E628];
  *((void *)&v270 + 1) = v17;
  *(void *)&long long v271 = MEMORY[0x263F8E638];
  *((void *)&v271 + 1) = WitnessTable;
  uint64_t v18 = sub_255C7F368();
  uint64_t v204 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v185 = (char *)v162 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24730);
  uint64_t v177 = v18;
  uint64_t v20 = sub_255C7E458();
  uint64_t v202 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v182 = (char *)v162 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29BC90);
  uint64_t v179 = v20;
  uint64_t v22 = sub_255C7E458();
  uint64_t v201 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v183 = (char *)v162 - v23;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v171 = v24;
  uint64_t v25 = sub_255A09998(&qword_269F24738, &qword_269F24730);
  uint64_t v290 = v24;
  uint64_t v291 = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v175 = v26;
  uint64_t v27 = sub_255A09998(&qword_26B29BC88, &qword_26B29BC90);
  uint64_t v288 = v26;
  uint64_t v289 = v27;
  uint64_t v28 = swift_getWitnessTable();
  *(void *)&long long v270 = v22;
  uint64_t v29 = v22;
  uint64_t v168 = v22;
  uint64_t v169 = v28;
  *((void *)&v270 + 1) = v28;
  uint64_t v30 = v28;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v189 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v170 = (char *)v162 - v32;
  *(void *)&long long v270 = v29;
  *((void *)&v270 + 1) = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v270 = OpaqueTypeMetadata2;
  uint64_t v34 = OpaqueTypeMetadata2;
  uint64_t v173 = OpaqueTypeMetadata2;
  uint64_t v174 = OpaqueTypeConformance2;
  *((void *)&v270 + 1) = OpaqueTypeConformance2;
  uint64_t v35 = OpaqueTypeConformance2;
  uint64_t v36 = swift_getOpaqueTypeMetadata2();
  uint64_t v197 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v172 = (char *)v162 - v37;
  *(void *)&long long v270 = v34;
  *((void *)&v270 + 1) = v35;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v270 = v36;
  uint64_t v164 = v36;
  *((void *)&v270 + 1) = v38;
  uint64_t v39 = v38;
  uint64_t v166 = v38;
  uint64_t v180 = swift_getOpaqueTypeMetadata2();
  uint64_t v191 = *(void *)(v180 - 8);
  MEMORY[0x270FA5388](v180);
  uint64_t v178 = (char *)v162 - v40;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24740);
  uint64_t v41 = sub_255C7E458();
  uint64_t v214 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  v162[0] = (char *)v162 - v42;
  *(void *)&long long v270 = v36;
  *((void *)&v270 + 1) = v39;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v167 = v43;
  uint64_t v44 = sub_255A09998(&qword_269F24748, &qword_269F24740);
  uint64_t v286 = v43;
  uint64_t v287 = v44;
  uint64_t v45 = swift_getWitnessTable();
  *(void *)&long long v270 = v41;
  *((void *)&v270 + 1) = v45;
  uint64_t v46 = swift_getOpaqueTypeMetadata2();
  uint64_t v203 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v200 = (char *)v162 - v47;
  uint64_t v209 = v41;
  *(void *)&long long v270 = v41;
  uint64_t v194 = v45;
  *((void *)&v270 + 1) = v45;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v270 = v46;
  *((void *)&v270 + 1) = v10;
  uint64_t v49 = MEMORY[0x263F18B88];
  *(void *)&long long v271 = v48;
  *((void *)&v271 + 1) = MEMORY[0x263F18B88];
  uint64_t v50 = swift_getOpaqueTypeMetadata2();
  uint64_t v192 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v187 = (char *)v162 - v51;
  uint64_t v188 = v48;
  uint64_t v205 = v46;
  *(void *)&long long v270 = v46;
  uint64_t v253 = v10;
  *((void *)&v270 + 1) = v10;
  *(void *)&long long v271 = v48;
  *((void *)&v271 + 1) = v49;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v270 = v50;
  *((void *)&v270 + 1) = v52;
  uint64_t v235 = MEMORY[0x263F1AF88];
  uint64_t v53 = swift_getOpaqueTypeMetadata2();
  uint64_t v195 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v190 = (char *)v162 - v54;
  uint64_t v199 = v55;
  uint64_t v56 = sub_255C7E458();
  uint64_t v211 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v186 = (char *)v162 - v57;
  uint64_t v58 = sub_255C7E458();
  uint64_t v207 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v206 = (char *)v162 - v59;
  sub_255C7F0D8();
  uint64_t v60 = sub_255C7E458();
  uint64_t v216 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v215 = (char *)v162 - v61;
  uint64_t v62 = sub_255C7E458();
  uint64_t v220 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  char v218 = (char *)v162 - v63;
  uint64_t v64 = sub_255C7E458();
  uint64_t v234 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  v252 = (char *)v162 - v65;
  uint64_t v193 = v50;
  *(void *)&long long v270 = v50;
  uint64_t v181 = v52;
  *((void *)&v270 + 1) = v52;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = MEMORY[0x263F18C10];
  v162[1] = v66;
  uint64_t v284 = v66;
  uint64_t v285 = MEMORY[0x263F18C10];
  uint64_t v213 = v56;
  uint64_t v163 = swift_getWitnessTable();
  uint64_t v282 = v163;
  uint64_t v283 = v67;
  uint64_t v210 = v58;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v69 = sub_255B36DF4((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
  uint64_t v165 = v68;
  uint64_t v280 = v68;
  uint64_t v281 = v69;
  uint64_t v217 = v60;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v71 = MEMORY[0x263F1A240];
  uint64_t v176 = v70;
  uint64_t v278 = v70;
  uint64_t v279 = MEMORY[0x263F1A240];
  uint64_t v222 = v62;
  uint64_t v184 = swift_getWitnessTable();
  uint64_t v276 = v184;
  uint64_t v277 = v71;
  uint64_t v72 = swift_getWitnessTable();
  unint64_t v73 = sub_255B341B8();
  *(void *)&long long v270 = v64;
  *((void *)&v270 + 1) = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  *(void *)&long long v271 = v72;
  *((void *)&v271 + 1) = v73;
  uint64_t v74 = swift_getOpaqueTypeMetadata2();
  uint64_t v229 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  long long v224 = (char *)v162 - v75;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298168);
  uint64_t v235 = v64;
  *(void *)&long long v270 = v64;
  *((void *)&v270 + 1) = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
  uint64_t v212 = v72;
  *(void *)&long long v271 = v72;
  uint64_t v77 = v162[0];
  unint64_t v208 = v73;
  *((void *)&v271 + 1) = v73;
  uint64_t v78 = swift_getOpaqueTypeConformance2();
  unint64_t v79 = sub_255B3420C();
  uint64_t v231 = v74;
  *(void *)&long long v270 = v74;
  uint64_t v225 = v76;
  *((void *)&v270 + 1) = v76;
  uint64_t v221 = v78;
  *(void *)&long long v271 = v78;
  unint64_t v219 = v79;
  *((void *)&v271 + 1) = v79;
  uint64_t v80 = swift_getOpaqueTypeMetadata2();
  uint64_t v227 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  long long v223 = (char *)v162 - v81;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24750);
  uint64_t v230 = v80;
  uint64_t v233 = sub_255C7E458();
  uint64_t v232 = *(void *)(v233 - 8);
  uint64_t v82 = MEMORY[0x270FA5388](v233);
  long long v226 = (char *)v162 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v82);
  long long v228 = (char *)v162 - v84;
  uint64_t v259 = v257;
  uint64_t v260 = v256;
  uint64_t v85 = v255;
  uint64_t v261 = v255;
  uint64_t v86 = v185;
  sub_255C7F358();
  sub_255C7EA58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29EC30);
  sub_255B367AC();
  uint64_t v87 = v182;
  uint64_t v88 = v177;
  sub_255C7F768();
  (*(void (**)(char *, uint64_t))(v204 + 8))(v86, v88);
  swift_getKeyPath();
  *(void *)&long long v270 = 0;
  uint64_t v89 = v183;
  uint64_t v90 = v179;
  sub_255C7F678();
  uint64_t v91 = v85;
  swift_release();
  (*(void (**)(char *, uint64_t))(v202 + 8))(v87, v90);
  sub_255C7F1F8();
  uint64_t v92 = v170;
  uint64_t v93 = v168;
  sub_255C7F6A8();
  (*(void (**)(char *, uint64_t))(v201 + 8))(v89, v93);
  sub_255C7F1C8();
  uint64_t v94 = v236;
  sub_255B31A14(v236, (uint64_t)&v270);
  long long v264 = v270;
  LOWORD(v265) = v271;
  BYTE2(v265) = BYTE2(v271);
  *((void *)&v265 + 1) = *((void *)&v271 + 1);
  char v266 = v272;
  long long v267 = v273;
  long long v268 = v274;
  char v269 = v275;
  sub_255B3174C();
  uint64_t v95 = v172;
  uint64_t v96 = v173;
  sub_255C7F6A8();
  uint64_t v97 = v92;
  uint64_t v98 = v94;
  (*(void (**)(char *, uint64_t))(v189 + 8))(v97, v96);
  sub_255C7F1E8();
  sub_255B31A14(v94, (uint64_t)&v270);
  long long v264 = v270;
  LOWORD(v265) = v271;
  BYTE2(v265) = BYTE2(v271);
  *((void *)&v265 + 1) = *((void *)&v271 + 1);
  char v266 = v272;
  long long v267 = v273;
  long long v268 = v274;
  char v269 = v275;
  sub_255B3174C();
  uint64_t v99 = v178;
  uint64_t v100 = v164;
  sub_255C7F6A8();
  (*(void (**)(char *, uint64_t))(v197 + 8))(v95, v100);
  uint64_t v101 = v237;
  sub_255C7EDE8();
  uint64_t v102 = v180;
  sub_255C7F9B8();
  (*(void (**)(char *, uint64_t))(v238 + 8))(v101, v239);
  (*(void (**)(char *, uint64_t))(v191 + 8))(v99, v102);
  uint64_t v103 = sub_255C7F1A8();
  if (qword_269F20040 != -1) {
    swift_once();
  }
  uint64_t v104 = qword_269F331D0;
  uint64_t v105 = v240;
  sub_255C7ECA8();
  uint64_t v106 = v200;
  uint64_t v107 = v104;
  uint64_t v108 = v209;
  MEMORY[0x25A295010](v103, v107, 0, v105, v209, v194);
  (*(void (**)(char *, uint64_t))(v248 + 8))(v105, v249);
  (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v77, v108);
  uint64_t v109 = v250;
  sub_255C7E2C8();
  uint64_t v110 = v187;
  uint64_t v111 = v205;
  uint64_t v112 = v253;
  sub_255C7FBA8();
  (*(void (**)(char *, uint64_t))(v251 + 8))(v109, v112);
  (*(void (**)(char *, uint64_t))(v203 + 8))(v106, v111);
  uint64_t v113 = v190;
  uint64_t v114 = v193;
  sub_255C7F988();
  (*(void (**)(char *, uint64_t))(v192 + 8))(v110, v114);
  sub_255C7F1A8();
  sub_255B31A14(v98, (uint64_t)&v270);
  long long v264 = v270;
  LOBYTE(v265) = v271;
  *(_WORD *)((char *)&v265 + 1) = *(_WORD *)((char *)&v271 + 1);
  *((void *)&v265 + 1) = *((void *)&v271 + 1);
  char v266 = v272;
  long long v267 = v273;
  long long v268 = v274;
  char v269 = v275;
  sub_255BE6070((uint64_t)&v264);
  uint64_t v115 = v186;
  uint64_t v116 = v199;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v195 + 8))(v113, v116);
  sub_255C7F1C8();
  sub_255B31A14(v98, (uint64_t)&v270);
  if (BYTE2(v271) == 2 && qword_269F20038 != -1) {
    swift_once();
  }
  uint64_t v117 = v206;
  uint64_t v118 = v213;
  sub_255C7FAF8();
  (*(void (**)(char *, uint64_t))(v211 + 8))(v115, v118);
  uint64_t v119 = v215;
  uint64_t v120 = v210;
  sub_255B4BFB8();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v117, v120);
  uint64_t v121 = v258;
  uint64_t v122 = *(char **)(v258 + 16);
  uint64_t v251 = v258 + 16;
  v250 = v122;
  uint64_t v123 = v246;
  ((void (*)(char *, uint64_t, uint64_t))v122)(v246, v91, v98);
  uint64_t v124 = *(unsigned __int8 *)(v121 + 80);
  uint64_t v125 = v121;
  uint64_t v249 = (uint64_t)v254 + ((v124 + 32) & ~v124);
  uint64_t v126 = (v124 + 32) & ~v124;
  uint64_t v253 = v126;
  uint64_t v248 = v124 | 7;
  uint64_t v127 = swift_allocObject();
  uint64_t v128 = v257;
  uint64_t v129 = v256;
  *(void *)(v127 + 16) = v257;
  *(void *)(v127 + 24) = v129;
  char v130 = *(void (**)(uint64_t, char *, uint64_t))(v125 + 32);
  uint64_t v258 = v125 + 32;
  v254 = v130;
  v130(v127 + v126, v123, v98);
  uint64_t v131 = v217;
  long long v132 = v218;
  sub_255C7FB28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v216 + 8))(v119, v131);
  char v133 = (void (*)(char *, uint64_t, uint64_t))v250;
  ((void (*)(char *, uint64_t, uint64_t))v250)(v123, v91, v98);
  uint64_t v134 = swift_allocObject();
  uint64_t v135 = v256;
  *(void *)(v134 + 16) = v128;
  *(void *)(v134 + 24) = v135;
  v254(v134 + v253, v123, v98);
  uint64_t v136 = v222;
  sub_255C7F6B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v220 + 8))(v132, v136);
  uint64_t v137 = v255;
  LOBYTE(v270) = *(unsigned char *)(sub_255B368E4(v98) + 16);
  v133(v123, v137, v98);
  uint64_t v138 = v244;
  long long v139 = v243;
  uint64_t v140 = v245;
  (*(void (**)(char *, uint64_t, uint64_t))(v244 + 16))(v243, v242, v245);
  unint64_t v141 = (v249 + *(unsigned __int8 *)(v138 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
  uint64_t v142 = swift_allocObject();
  uint64_t v143 = v256;
  *(void *)(v142 + 16) = v257;
  *(void *)(v142 + 24) = v143;
  v254(v142 + v253, v123, v98);
  (*(void (**)(unint64_t, char *, uint64_t))(v138 + 32))(v142 + v141, v139, v140);
  uint64_t v144 = v224;
  uint64_t v145 = v235;
  uint64_t v146 = v252;
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v234 + 8))(v146, v145);
  uint64_t v147 = v255;
  sub_255B31AA0(v98, (uint64_t)&v270);
  long long v264 = v270;
  long long v265 = v271;
  ((void (*)(char *, uint64_t, uint64_t))v250)(v123, v147, v98);
  uint64_t v148 = swift_allocObject();
  *(void *)(v148 + 16) = v257;
  *(void *)(v148 + 24) = v143;
  v254(v148 + v253, v123, v98);
  double v149 = v223;
  uint64_t v150 = v231;
  uint64_t v151 = v225;
  uint64_t v152 = v221;
  unint64_t v153 = v219;
  sub_255C7FB48();
  swift_release();
  sub_255A8AFD4(v264, *((uint64_t *)&v264 + 1));
  (*(void (**)(char *, uint64_t))(v229 + 8))(v144, v150);
  sub_255C801E8();
  *(void *)&long long v270 = v150;
  *((void *)&v270 + 1) = v151;
  *(void *)&long long v271 = v152;
  *((void *)&v271 + 1) = v153;
  uint64_t v154 = swift_getOpaqueTypeConformance2();
  sub_255B36DA0();
  uint64_t v155 = v226;
  uint64_t v156 = v230;
  sub_255C7FAC8();
  (*(void (**)(char *, uint64_t))(v227 + 8))(v149, v156);
  uint64_t v157 = sub_255A09998(qword_269F24758, &qword_269F24750);
  uint64_t v262 = v154;
  uint64_t v263 = v157;
  uint64_t v158 = v233;
  swift_getWitnessTable();
  uint64_t v159 = v228;
  sub_255A20F54(v155);
  uint64_t v160 = *(void (**)(char *, uint64_t))(v232 + 8);
  v160(v155, v158);
  sub_255A20F54(v159);
  return ((uint64_t (*)(char *, uint64_t))v160)(v159, v158);
}

uint64_t sub_255B341A0(uint64_t a1)
{
  return sub_255B36F98(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_255B324F0);
}

unint64_t sub_255B341B8()
{
  unint64_t result = qword_26B29A1F8;
  if (!qword_26B29A1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A1F8);
  }
  return result;
}

unint64_t sub_255B3420C()
{
  unint64_t result = qword_26B298170;
  if (!qword_26B298170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B298168);
    sub_255AB8DB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B298170);
  }
  return result;
}

uint64_t sub_255B34280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a4;
  v26[0] = a3;
  uint64_t v27 = type metadata accessor for NowPlayingQueue();
  uint64_t v6 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  uint64_t v30 = a2;
  uint64_t v31 = MEMORY[0x263F8D4F8];
  uint64_t v10 = MEMORY[0x263F8D510];
  uint64_t v32 = a3;
  uint64_t v33 = MEMORY[0x263F8D510];
  unint64_t v26[2] = swift_getOpaqueTypeMetadata2();
  uint64_t v30 = a2;
  uint64_t v31 = v9;
  uint64_t v32 = a3;
  uint64_t v33 = v10;
  v26[1] = swift_getOpaqueTypeConformance2();
  uint64_t v11 = sub_255C7ED18();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v26 - v16;
  uint64_t v18 = v8;
  uint64_t v19 = v8;
  uint64_t v20 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v18, v28, v27);
  unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v26[0];
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22 + v21, v19, v20);
  sub_255C7ED08();
  swift_getWitnessTable();
  sub_255A20F54(v15);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v15, v11);
  sub_255A20F54(v17);
  return ((uint64_t (*)(char *, uint64_t))v24)(v17, v11);
}

uint64_t sub_255B34554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v49 = a5;
  uint64_t v41 = a4;
  uint64_t v46 = type metadata accessor for NowPlayingQueue();
  uint64_t v8 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v50 = (char *)&v37 - v9;
  uint64_t v42 = sub_255C7E538();
  uint64_t v10 = *(void *)(v42 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v42);
  uint64_t v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(a3 - 8);
  uint64_t v13 = v43;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v15;
  uint64_t v51 = a3;
  uint64_t v52 = MEMORY[0x263F8D4F8];
  uint64_t v53 = a4;
  uint64_t v54 = MEMORY[0x263F8D510];
  uint64_t v47 = MEMORY[0x263F1B270];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v48 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v40 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v45 = (char *)&v37 - v19;
  uint64_t v20 = v15;
  uint64_t v21 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v20, v44, a3);
  LOBYTE(v51) = sub_255C7E528() & 1;
  uint64_t v22 = a1;
  uint64_t v23 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v42);
  uint64_t v24 = v21;
  uint64_t v25 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v50, v24, v46);
  unint64_t v26 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v27 = (v11 + *(unsigned __int8 *)(v8 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v41;
  *(void *)(v28 + 16) = a3;
  *(void *)(v28 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v28 + v26, v38, v23);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v28 + v27, v50, v25);
  uint64_t v30 = v39;
  uint64_t v31 = v40;
  uint64_t v32 = MEMORY[0x263F8D4F8];
  uint64_t v33 = MEMORY[0x263F8D510];
  sub_255C7FB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, a3);
  uint64_t v51 = a3;
  uint64_t v52 = v32;
  uint64_t v53 = v29;
  uint64_t v54 = v33;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = v45;
  sub_255A20F54(v31);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v48 + 8);
  v35(v31, OpaqueTypeMetadata2);
  sub_255A20F54(v34);
  return ((uint64_t (*)(char *, uint64_t))v35)(v34, OpaqueTypeMetadata2);
}

uint64_t sub_255B349D4()
{
  uint64_t result = sub_255C7E528();
  if (result)
  {
    uint64_t v1 = type metadata accessor for NowPlayingQueue();
    uint64_t v2 = sub_255B3696C(v1);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v4 = swift_getKeyPath();
    swift_retain();
    uint64_t v5 = sub_255BD0DF4(1, v2, KeyPath, v4);
    MEMORY[0x270FA5388](v5);
    sub_255C802A8();
    sub_255C7E1E8();
    return swift_release();
  }
  return result;
}

uint64_t sub_255B34AE4()
{
  uint64_t v0 = type metadata accessor for NowPlayingQueue();
  uint64_t v1 = sub_255B3696C(v0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  swift_retain();
  return sub_255BD0DF4(1, v1, KeyPath, v3);
}

double sub_255B34B60@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_255C7FC78();
  if (qword_269F20030 != -1) {
    swift_once();
  }
  sub_255C801F8();
  sub_255C7DFE8();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  double result = *(double *)&v8;
  *(_OWORD *)(a1 + 40) = v8;
  return result;
}

uint64_t sub_255B34C1C()
{
  uint64_t v0 = type metadata accessor for NowPlayingQueue();
  sub_255B31AA0(v0, (uint64_t)&v7);
  uint64_t v1 = v8;
  sub_255A8AFD4(v7, v8);
  uint64_t v2 = sub_255B3696C(v0);
  char v3 = v1 == 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  swift_retain();

  return sub_255BD0DF4(v3, v2, KeyPath, v5);
}

uint64_t sub_255B34CE8()
{
  uint64_t v0 = type metadata accessor for NowPlayingQueue();
  uint64_t v1 = sub_255B3696C(v0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  swift_retain();

  return sub_255BD0DF4(0, v1, KeyPath, v3);
}

uint64_t sub_255B34D68()
{
  uint64_t v0 = type metadata accessor for NowPlayingQueue();
  uint64_t result = sub_255B368E4(v0);
  int v2 = *(unsigned __int8 *)(result + 16);
  if ((v2 - 1) >= 3)
  {
    if ((v2 - 4) >= 2)
    {
      sub_255C7E488();
      uint64_t v6 = sub_255B3696C(v0);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v8 = swift_getKeyPath();
      swift_retain();
      return sub_255BD0DF4(0, v6, KeyPath, v8);
    }
    else
    {
      uint64_t v3 = sub_255B3696C(v0);
      uint64_t v4 = swift_getKeyPath();
      uint64_t v5 = swift_getKeyPath();
      swift_retain();
      return sub_255BD0DF4(0, v3, v4, v5);
    }
  }
  return result;
}

uint64_t sub_255B34ED0()
{
  uint64_t v0 = type metadata accessor for NowPlayingQueue();
  sub_255B31AA0(v0, (uint64_t)&v9);
  uint64_t v1 = v10;
  sub_255A8AFD4(v9, v10);
  uint64_t v2 = sub_255B3696C(v0);
  if (v1 == 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v4 = swift_getKeyPath();
    swift_retain();
    return sub_255BD0DF4(1, v2, KeyPath, v4);
  }
  else
  {
    uint64_t v6 = swift_getKeyPath();
    uint64_t v7 = swift_getKeyPath();
    swift_retain();
    uint64_t v8 = sub_255BD0DF4(0, v2, v6, v7);
    MEMORY[0x270FA5388](v8);
    sub_255C802A8();
    sub_255C7E1E8();
    return swift_release();
  }
}

uint64_t sub_255B35050()
{
  uint64_t v0 = type metadata accessor for NowPlayingQueue();
  uint64_t v1 = sub_255B3696C(v0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  swift_retain();
  return sub_255BD0DF4(0, v1, KeyPath, v3);
}

double sub_255B350CC@<D0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  _s5DebugCMa();
  sub_255B36DF4((unint64_t *)&qword_26B299A80, 255, (void (*)(uint64_t))_s5DebugCMa);
  uint64_t v3 = sub_255C7E628();
  *(void *)a1 = KeyPath;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_WORD *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v3;
  *(void *)(a1 + 88) = v5;
  return result;
}

uint64_t sub_255B35178()
{
  if (qword_269F20300 != -1) {
    swift_once();
  }
  sub_255C7FC78();
  if (qword_269F20308 != -1) {
    swift_once();
  }
  sub_255C801F8();
  sub_255C7DFE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F247E0);
  sub_255A09998(&qword_269F247E8, &qword_269F247E0);
  sub_255C7F8D8();
  return swift_release();
}

uint64_t sub_255B352F0()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t sub_255B35324()
{
  return swift_deallocClassInstance();
}

uint64_t sub_255B35334@<X0>(uint64_t *a1@<X8>)
{
  _s5QueueCMa();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

void static NowPlayingButtonID.queue.getter(void *a1@<X8>)
{
  *a1 = 0x6575657571;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_255B35388()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B353CC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255B3547C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    unint64_t v27 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t v35 = a1;
    unint64_t v13 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void *)(v10 + 16);
    uint64_t v15 = *(void *)(v10 + 24);
    uint64_t v16 = *(void *)(v10 + 32);
    uint64_t v17 = *(void *)(v10 + 40);
    uint64_t v18 = *(void *)(v10 + 48);
    uint64_t v19 = *(void *)(v10 + 56);
    uint64_t v32 = *(void *)(v10 + 64);
    char v33 = *(unsigned char *)(v10 + 72);
    char v34 = *(unsigned char *)(v10 + 73);
    sub_255A1CFDC(*(void *)v10, v12, v14, v15, v16, v17, v18, v19, v32, v33, v34);
    *(void *)unint64_t v13 = v11;
    *(void *)(v13 + 8) = v12;
    *(void *)(v13 + 16) = v14;
    *(void *)(v13 + 24) = v15;
    *(void *)(v13 + 32) = v16;
    *(void *)(v13 + 40) = v17;
    *(void *)(v13 + 48) = v18;
    *(void *)(v13 + 56) = v19;
    *(void *)(v13 + 64) = v32;
    *(unsigned char *)(v13 + 72) = v33;
    *(unsigned char *)(v13 + 73) = v34;
    unint64_t v20 = (v13 + 81) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v21 = (v10 + 81) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    LOBYTE(v16) = *(unsigned char *)(v21 + 32);
    sub_255AB8EBC(*(void *)v21, v23, v24, v25, v16);
    *(void *)unint64_t v20 = v22;
    *(void *)(v20 + 8) = v23;
    *(void *)(v20 + 16) = v24;
    *(void *)(v20 + 24) = v25;
    *(unsigned char *)(v20 + 32) = v16;
    unint64_t v26 = v13 + 121;
    unint64_t v27 = v35;
    v26 &= 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = (void *)((v10 + 121) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v26 = *v28;
    *(void *)(v26 + 8) = v28[1];
    uint64_t v29 = (void *)((v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v30 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v29 = *v30;
    v29[1] = v30[1];
    swift_retain();
  }
  swift_retain();
  return v27;
}

uint64_t sub_255B356A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_255A1D054(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72), *(unsigned char *)(v4 + 73));
  sub_255AB8EB0(*(void *)((v4 + 81) & 0xFFFFFFFFFFFFFFF8), *(void *)(((v4 + 81) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(((v4 + 81) & 0xFFFFFFFFFFFFFFF8) + 16), *(void *)(((v4 + 81) & 0xFFFFFFFFFFFFFFF8) + 24), *(unsigned char *)(((v4 + 81) & 0xFFFFFFFFFFFFFFF8) + 32));
  swift_release();

  return swift_release();
}

uint64_t sub_255B35778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(void *)(v8 + 16);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(v8 + 40);
  uint64_t v15 = *(void *)(v8 + 48);
  uint64_t v16 = *(void *)(v8 + 56);
  uint64_t v28 = *(void *)(v8 + 64);
  char v29 = *(unsigned char *)(v8 + 72);
  char v30 = *(unsigned char *)(v8 + 73);
  sub_255A1CFDC(*(void *)v8, v10, v11, v12, v13, v14, v15, v16, v28, v29, v30);
  *(void *)unint64_t v7 = v9;
  *(void *)(v7 + 8) = v10;
  *(void *)(v7 + 16) = v11;
  *(void *)(v7 + 24) = v12;
  *(void *)(v7 + 32) = v13;
  *(void *)(v7 + 40) = v14;
  *(void *)(v7 + 48) = v15;
  *(void *)(v7 + 56) = v16;
  *(void *)(v7 + 64) = v28;
  *(unsigned char *)(v7 + 72) = v29;
  *(unsigned char *)(v7 + 73) = v30;
  unint64_t v17 = (v7 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v8 + 81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v21 = *(void *)(v18 + 16);
  uint64_t v22 = *(void *)(v18 + 24);
  LOBYTE(v13) = *(unsigned char *)(v18 + 32);
  sub_255AB8EBC(*(void *)v18, v20, v21, v22, v13);
  *(void *)unint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v21;
  *(void *)(v17 + 24) = v22;
  *(unsigned char *)(v17 + 32) = v13;
  uint64_t v23 = (void *)((v7 + 121) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)((v8 + 121) & 0xFFFFFFFFFFFFFFF8);
  void *v23 = *v24;
  v23[1] = v24[1];
  uint64_t v25 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_255B35918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(void *)(v8 + 16);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(v8 + 40);
  uint64_t v15 = *(void *)(v8 + 48);
  uint64_t v16 = *(void *)(v8 + 56);
  uint64_t v44 = *(void *)(v8 + 64);
  char v45 = *(unsigned char *)(v8 + 72);
  char v46 = *(unsigned char *)(v8 + 73);
  sub_255A1CFDC(*(void *)v8, v10, v11, v12, v13, v14, v15, v16, v44, v45, v46);
  uint64_t v17 = *(void *)v7;
  uint64_t v18 = *(void *)(v7 + 8);
  uint64_t v19 = *(void *)(v7 + 16);
  uint64_t v20 = *(void *)(v7 + 24);
  uint64_t v21 = *(void *)(v7 + 32);
  uint64_t v22 = *(void *)(v7 + 40);
  uint64_t v23 = *(void *)(v7 + 48);
  uint64_t v24 = *(void *)(v7 + 56);
  uint64_t v25 = *(void *)(v7 + 64);
  char v26 = *(unsigned char *)(v7 + 72);
  char v27 = *(unsigned char *)(v7 + 73);
  *(void *)unint64_t v7 = v9;
  *(void *)(v7 + 8) = v10;
  *(void *)(v7 + 16) = v11;
  *(void *)(v7 + 24) = v12;
  *(void *)(v7 + 32) = v13;
  *(void *)(v7 + 40) = v14;
  *(void *)(v7 + 48) = v15;
  *(void *)(v7 + 56) = v16;
  *(void *)(v7 + 64) = v44;
  *(unsigned char *)(v7 + 72) = v45;
  *(unsigned char *)(v7 + 73) = v46;
  sub_255A1D054(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  unint64_t v28 = (v7 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v8 + 81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  uint64_t v32 = *(void *)(v29 + 16);
  uint64_t v33 = *(void *)(v29 + 24);
  LOBYTE(v13) = *(unsigned char *)(v29 + 32);
  sub_255AB8EBC(*(void *)v29, v31, v32, v33, v13);
  uint64_t v34 = *(void *)v28;
  uint64_t v35 = *(void *)(v28 + 8);
  uint64_t v36 = *(void *)(v28 + 16);
  uint64_t v37 = *(void *)(v28 + 24);
  char v38 = *(unsigned char *)(v28 + 32);
  *(void *)unint64_t v28 = v30;
  *(void *)(v28 + 8) = v31;
  *(void *)(v28 + 16) = v32;
  *(void *)(v28 + 24) = v33;
  *(unsigned char *)(v28 + 32) = v13;
  sub_255AB8EB0(v34, v35, v36, v37, v38);
  uint64_t v39 = (void *)((v7 + 121) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = (void *)((v8 + 121) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v39 = *v40;
  swift_retain();
  swift_release();
  v39[1] = v40[1];
  uint64_t v41 = (void *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v42 = (void *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v41 = *v42;
  swift_retain();
  swift_release();
  v41[1] = v42[1];
  return a1;
}

uint64_t sub_255B35B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  long long v9 = v8[1];
  long long v10 = v8[2];
  long long v11 = v8[3];
  *(_OWORD *)((char *)v7 + 58) = *(_OWORD *)((char *)v8 + 58);
  _OWORD v7[2] = v10;
  v7[3] = v11;
  v7[1] = v9;
  unint64_t v12 = ((unint64_t)v7 + 81) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((unint64_t)v8 + 81) & 0xFFFFFFFFFFFFFFF8;
  long long v14 = *(_OWORD *)v13;
  long long v15 = *(_OWORD *)(v13 + 16);
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(_OWORD *)unint64_t v12 = v14;
  *(_OWORD *)(v12 + 16) = v15;
  uint64_t v16 = (_OWORD *)(((unint64_t)v7 + 121) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (_OWORD *)(((unint64_t)v8 + 121) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255B35BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v7 + 64);
  unint64_t v9 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v6) = *(unsigned char *)(v7 + 72);
  char v10 = *(unsigned char *)(v7 + 73);
  uint64_t v11 = *(void *)v9;
  uint64_t v12 = *(void *)(v9 + 8);
  uint64_t v13 = *(void *)(v9 + 16);
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = *(void *)(v9 + 32);
  uint64_t v16 = *(void *)(v9 + 40);
  uint64_t v17 = *(void *)(v9 + 48);
  uint64_t v18 = *(void *)(v9 + 56);
  uint64_t v19 = *(void *)(v9 + 64);
  char v20 = *(unsigned char *)(v9 + 72);
  char v21 = *(unsigned char *)(v9 + 73);
  long long v22 = *(_OWORD *)(v7 + 16);
  long long v23 = *(_OWORD *)(v7 + 32);
  long long v24 = *(_OWORD *)(v7 + 48);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v7;
  *(_OWORD *)(v9 + 16) = v22;
  *(_OWORD *)(v9 + 32) = v23;
  *(_OWORD *)(v9 + 48) = v24;
  *(void *)(v9 + 64) = v8;
  *(unsigned char *)(v9 + 72) = v6;
  *(unsigned char *)(v9 + 73) = v10;
  sub_255A1D054(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  unint64_t v25 = (v7 + 81) & 0xFFFFFFFFFFFFFFF8;
  char v26 = *(unsigned char *)(v25 + 32);
  unint64_t v27 = (v9 + 81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)v27;
  uint64_t v29 = *(void *)(v27 + 8);
  uint64_t v30 = *(void *)(v27 + 16);
  uint64_t v31 = *(void *)(v27 + 24);
  char v32 = *(unsigned char *)(v27 + 32);
  long long v33 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)unint64_t v27 = *(_OWORD *)v25;
  *(_OWORD *)(v27 + 16) = v33;
  *(unsigned char *)(v27 + 32) = v26;
  sub_255AB8EB0(v28, v29, v30, v31, v32);
  uint64_t v34 = (void *)((v9 + 121) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (void *)((v7 + 121) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v34 = *v35;
  swift_release();
  v34[1] = v35[1];
  uint64_t v36 = (void *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v36 = *v37;
  swift_release();
  v36[1] = v37[1];
  return a1;
}

uint64_t sub_255B35D34(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B35EA4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

void sub_255B35EB8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFE)
            {
              uint64_t v19 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                uint64_t v20 = a2 - 0x7FFFFFFF;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              int v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 121) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 121) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 121) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 121) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x255B360C4);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_255B360EC()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for PlayingItemPlaceholder()
{
  return &type metadata for PlayingItemPlaceholder;
}

uint64_t sub_255B36734()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_255B36750()
{
  qword_269F331B0 = 0x4034000000000000;
}

void sub_255B36760()
{
  qword_269F331B8 = 0x4030000000000000;
}

void sub_255B36770()
{
  qword_269F331C0 = 0x4050000000000000;
}

void sub_255B36780()
{
  qword_269F331C8 = 0x4030000000000000;
}

void sub_255B36790()
{
  qword_269F331D0 = 0x4028000000000000;
}

uint64_t sub_255B367A0@<X0>(uint64_t a1@<X8>)
{
  return sub_255B34280(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_255B367AC()
{
  unint64_t result = qword_26B29EC20;
  if (!qword_26B29EC20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29EC30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29EC20);
  }
  return result;
}

uint64_t sub_255B36820@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_255C7E7C8();
  *a1 = v3;
  return result;
}

uint64_t sub_255B3684C()
{
  return sub_255C7E7D8();
}

uint64_t sub_255B36874(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  swift_retain();

  return sub_255BD0DF4(v2, v3, KeyPath, v5);
}

uint64_t sub_255B368E4(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + *(int *)(a1 + 44));
  if (!result)
  {
    type metadata accessor for NowPlayingViewModel.Lifecycle();
    sub_255B36DF4(&qword_26B29A200, 255, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255B3696C(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + *(int *)(a1 + 48));
  if (!result)
  {
    _s5QueueCMa();
    sub_255B36DF4(&qword_26B299BC8, v3, (void (*)(uint64_t))_s5QueueCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255B369F4()
{
  return sub_255B36D08((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_255B34C1C);
}

uint64_t sub_255B36A10()
{
  return sub_255B36D08((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_255B34CE8);
}

uint64_t sub_255B36A28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = (int *)(type metadata accessor for NowPlayingQueue() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  uint64_t v5 = sub_255C7E498();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + v3;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v8, v1);
  uint64_t v9 = v8 + v2[11];
  sub_255A1D054(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(unsigned char *)(v9 + 72), *(unsigned char *)(v9 + 73));
  uint64_t v10 = v8 + v2[12];
  sub_255AB8EB0(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(unsigned char *)(v10 + 32));
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_255B36C04()
{
  type metadata accessor for NowPlayingQueue();
  sub_255C7E498();

  return sub_255B34D68();
}

uint64_t sub_255B36CF0()
{
  return sub_255B36D08((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_255B34ED0);
}

uint64_t sub_255B36D08(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for NowPlayingQueue() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a1(v5, v2, v3);
}

unint64_t sub_255B36DA0()
{
  unint64_t result = qword_269F247F0;
  if (!qword_269F247F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F247F0);
  }
  return result;
}

uint64_t sub_255B36DF4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B36E3C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_255B36E84(char *a1, uint64_t *a2)
{
  return sub_255B36874(a1, a2);
}

uint64_t sub_255B36EAC()
{
  return sub_255B35050();
}

uint64_t sub_255B36ECC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_255B36F14(char *a1, uint64_t *a2)
{
  return sub_255B36874(a1, a2);
}

uint64_t sub_255B36F3C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_255B36F80(uint64_t a1)
{
  return sub_255B36F98(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_255B34554);
}

uint64_t sub_255B36F98(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(type metadata accessor for NowPlayingQueue() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a2(a1, v7, v4, v5);
}

uint64_t sub_255B37048()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_255C7E538();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = (int *)(type metadata accessor for NowPlayingQueue() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(*(void *)v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v7, v1);
  unint64_t v8 = v0 + v7 + v6[11];
  sub_255A1D054(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(unsigned char *)(v8 + 72), *(unsigned char *)(v8 + 73));
  unint64_t v9 = v0 + v7 + v6[12];
  sub_255AB8EB0(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(unsigned char *)(v9 + 32));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B37228()
{
  sub_255C7E538();
  type metadata accessor for NowPlayingQueue();

  return sub_255B349D4();
}

uint64_t sub_255B37310()
{
  return sub_255B34AE4();
}

unint64_t sub_255B37334()
{
  unint64_t result = qword_269F247F8;
  if (!qword_269F247F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269F24800);
    sub_255A09998(&qword_269F247E8, &qword_269F247E0);
    sub_255B36DF4((unint64_t *)&qword_26B29F220, 255, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F247F8);
  }
  return result;
}

uint64_t MarkupParser.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(int *)(type metadata accessor for MarkupParser() + 36);
  if (qword_26B29DA08 != -1) {
    swift_once();
  }
  *(void *)(a3 + v6) = qword_26B29DBF8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MarkupParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MarkupParser.Element.name.getter()
{
  uint64_t v0 = sub_255B3BD68();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t MarkupParser.Element.subscript.getter(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v3 = *(void *)(v1 + 32);
  (*(void (**)(char *))(v4 + 16))((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_255C80768();
  if (*(void *)(v3 + 16) && (unint64_t v7 = sub_255B39E20(v5, v6), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v3 + 56) + 32 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MarkupParser.parse(_:)(void (*a1)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  type metadata accessor for MarkupParser.Parser();
  uint64_t v7 = *(void *)(v3 + *(int *)(a3 + 36));
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_255B3B664(v3, v7);
  sub_255B37740(a1, a2);

  return swift_release();
}

uint64_t MarkupParser.markup.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_255B37740(void (*a1)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v325 = a2;
  v326 = a1;
  uint64_t v324 = *v2;
  v334 = v2 + 8;
  swift_beginAccess();
  v323 = v2 + 17;
  swift_beginAccess();
  unint64_t v4 = v2[3] >> 14;
  if (v4 > v2[7] >> 14)
  {
    uint64_t v335 = 0;
    v336 = v2 + 9;
    v327 = v2 + 10;
    v322 = v2 + 13;
    while (1)
    {
      unint64_t v14 = v3[9];
      uint64_t v13 = v3[10];
      uint64_t v15 = v3[11];
      uint64_t v16 = v3[12];
      uint64_t v17 = v3[13];
      uint64_t v18 = v3[14];
      switch(*((unsigned char *)v3 + 120))
      {
        case 1:
          uint64_t v55 = v3[10];
          swift_bridgeObjectRetain();
          uint64_t v56 = sub_255C80ED8();
          BOOL v58 = v56 == 34 && v57 == 0xE100000000000000;
          if (v58
            || (uint64_t v59 = v56, v60 = v57, (sub_255C81428() & 1) != 0)
            || (v59 == 39 ? (BOOL v101 = v60 == 0xE100000000000000) : (BOOL v101 = 0), v101))
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v102 = sub_255C81428();
            swift_bridgeObjectRelease();
            if ((v102 & 1) == 0)
            {
              uint64_t v103 = swift_allocObject();
              *(void *)(v103 + 16) = v14;
              *(void *)(v103 + 24) = v55;
              *(void *)(v103 + 32) = v15;
              *(void *)(v103 + 40) = v16;
              *(void *)(v103 + 48) = 0;
              *(void *)(v103 + 56) = 0;
              *(unsigned char *)(v103 + 64) = 2;
              uint64_t v104 = v3[9];
              uint64_t v7 = v3[10];
              uint64_t v8 = v3[11];
              uint64_t v9 = v3[12];
              uint64_t v10 = v3[13];
              uint64_t v11 = v3[14];
              v3[9] = v103;
              uint64_t v105 = v327;
              v327[4] = 0;
              _OWORD *v105 = 0u;
              v105[1] = 0u;
              char v12 = *((unsigned char *)v3 + 120);
              *((unsigned char *)v3 + 120) = 4;
              goto LABEL_102;
            }
          }
          v3[16] = sub_255C80EA8();
          uint64_t v106 = sub_255C80ED8();
          uint64_t v107 = v3[9];
          uint64_t v108 = v3[10];
          uint64_t v8 = v3[11];
          uint64_t v9 = v3[12];
          uint64_t v10 = v3[13];
          uint64_t v11 = v3[14];
          v3[9] = v14;
          v3[10] = v55;
          v3[11] = v15;
          v3[12] = v16;
          v3[13] = v106;
          v3[14] = v109;
          char v12 = *((unsigned char *)v3 + 120);
          *((unsigned char *)v3 + 120) = 2;
          uint64_t v6 = v107;
          uint64_t v7 = v108;
          goto LABEL_5;
        case 2:
          uint64_t v337 = v3[10];
          v338 = (void **)v15;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v44 = sub_255C80ED8();
          uint64_t v46 = v44;
          uint64_t v47 = v45;
          if (v18)
          {
            BOOL v48 = v17 == v44 && v18 == v45;
            if (v48 || (sub_255C81428() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v49 = (uint64_t)v338;
              goto LABEL_100;
            }
          }
          BOOL v72 = v46 == 32 && v47 == 0xE100000000000000;
          if (v72 || (sub_255C81428() & 1) != 0)
          {
            uint64_t v49 = (uint64_t)v338;
            if (!v18)
            {
              swift_bridgeObjectRelease();
LABEL_100:
              uint64_t v114 = MEMORY[0x25A295F10](v14, v337, v49, v16);
              uint64_t v116 = v115;
              swift_bridgeObjectRelease();
              unint64_t v117 = sub_255B3948C();
              uint64_t v119 = v118;
              uint64_t v121 = v120;
              uint64_t v123 = v122;
              swift_beginAccess();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v339 = (void *)v3[21];
              v3[21] = 0x8000000000000000;
              sub_255BCCA08(v117, v119, v121, v123, v114, v116, isUniquelyReferenced_nonNull_native);
              v3[21] = v339;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
LABEL_101:
              v3[16] = sub_255C80EA8();
              uint64_t v125 = swift_allocObject();
              *(void *)(v125 + 16) = 4;
              *(_OWORD *)(v125 + 24) = 0u;
              *(_OWORD *)(v125 + 40) = 0u;
              *(void *)(v125 + 56) = 0;
              *(unsigned char *)(v125 + 64) = 5;
              uint64_t v104 = v3[9];
              uint64_t v7 = v3[10];
              uint64_t v8 = v3[11];
              uint64_t v9 = v3[12];
              uint64_t v10 = v3[13];
              uint64_t v11 = v3[14];
              v3[9] = v125;
              uint64_t v126 = v327;
              v327[4] = 0;
              *uint64_t v126 = 0u;
              v126[1] = 0u;
              char v12 = *((unsigned char *)v3 + 120);
              *((unsigned char *)v3 + 120) = 4;
LABEL_102:
              uint64_t v6 = v104;
              goto LABEL_5;
            }
            swift_bridgeObjectRelease();
            if (v46 != 47) {
              goto LABEL_105;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v49 = (uint64_t)v338;
            if (v46 != 47) {
              goto LABEL_105;
            }
          }
          if (v47 == 0xE100000000000000) {
            goto LABEL_106;
          }
LABEL_105:
          if (sub_255C81428())
          {
LABEL_106:
            uint64_t v127 = sub_255B39400();
            if (v128)
            {
              if (v127 == 62 && v128 == 0xE100000000000000)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_115;
              }
              char v129 = sub_255C81428();
              swift_bridgeObjectRelease();
              if (v129) {
                goto LABEL_111;
              }
            }
          }
          if (v46 == 62 && v47 == 0xE100000000000000)
          {
LABEL_111:
            swift_bridgeObjectRelease();
LABEL_115:
            uint64_t v131 = MEMORY[0x25A295F10](v14, v337, v49, v16);
            uint64_t v133 = v132;
            swift_bridgeObjectRelease();
            unint64_t v134 = sub_255B3948C();
            unint64_t v136 = v135;
            unint64_t v138 = v137;
            v338 = (void **)v139;
            swift_beginAccess();
            char v140 = swift_isUniquelyReferenced_nonNull_native();
            v339 = (void *)v3[21];
            unint64_t v141 = v339;
            v3[21] = 0x8000000000000000;
            unint64_t v143 = sub_255B39E20(v131, v133);
            uint64_t v144 = v141[2];
            BOOL v145 = (v142 & 1) == 0;
            uint64_t v146 = v144 + v145;
            if (__OFADD__(v144, v145)) {
              goto LABEL_224;
            }
            char v147 = v142;
            if (v141[3] >= v146)
            {
              if ((v140 & 1) == 0) {
                sub_255B848DC();
              }
            }
            else
            {
              sub_255B81C60(v146, v140);
              unint64_t v148 = sub_255B39E20(v131, v133);
              if ((v147 & 1) != (v149 & 1)) {
                goto LABEL_229;
              }
              unint64_t v143 = v148;
            }
            uint64_t v150 = v339;
            if (v147)
            {
              uint64_t v151 = (unint64_t *)(v339[7] + 32 * v143);
              swift_bridgeObjectRelease();
              *uint64_t v151 = v134;
              v151[1] = v136;
              uint64_t v152 = (uint64_t)v338;
              v151[2] = v138;
              v151[3] = v152;
            }
            else
            {
              v339[(v143 >> 6) + 8] |= 1 << v143;
              unint64_t v153 = (uint64_t *)(v150[6] + 16 * v143);
              *unint64_t v153 = v131;
              v153[1] = v133;
              uint64_t v154 = (unint64_t *)(v150[7] + 32 * v143);
              *uint64_t v154 = v134;
              v154[1] = v136;
              uint64_t v155 = (uint64_t)v338;
              v154[2] = v138;
              v154[3] = v155;
              uint64_t v156 = v150[2];
              BOOL v157 = __OFADD__(v156, 1);
              uint64_t v158 = v156 + 1;
              if (v157) {
                goto LABEL_226;
              }
              v150[2] = v158;
              swift_bridgeObjectRetain();
            }
            v3[21] = v150;
            swift_bridgeObjectRelease();
LABEL_126:
            swift_bridgeObjectRelease();
            swift_endAccess();
LABEL_127:
            uint64_t v94 = v3[9];
            uint64_t v95 = v3[10];
            uint64_t v96 = v3[11];
            uint64_t v97 = v3[12];
            uint64_t v98 = v3[13];
            uint64_t v99 = v3[14];
            v3[9] = 3;
            uint64_t v159 = v327;
            *(_OWORD *)v327 = 0u;
            *((_OWORD *)v159 + 1) = 0u;
            v159[4] = 0;
            goto LABEL_128;
          }
          char v130 = sub_255C81428();
          swift_bridgeObjectRelease();
          if (v130) {
            goto LABEL_115;
          }
LABEL_152:
          swift_bridgeObjectRelease();
LABEL_6:
          v3[7] = sub_255C80EA8();
LABEL_7:
          unint64_t v4 = v3[3] >> 14;
          if (v4 <= v3[7] >> 14) {
            goto LABEL_218;
          }
          break;
        case 3:
          uint64_t v50 = sub_255C80ED8();
          BOOL v52 = v50 == 38 && v51 == 0xE100000000000000;
          if (v52
            || (v53 = v50, uint64_t v54 = v51, (sub_255C81428() & 1) != 0)
            || (v53 == 32 ? (BOOL v85 = v54 == 0xE100000000000000) : (BOOL v85 = 0),
                v85
             || (sub_255C81428() & 1) != 0
             || v53 == 60 && v54 == 0xE100000000000000
             || (sub_255C81428() & 1) != 0))
          {
            swift_bridgeObjectRelease();
            unint64_t v86 = sub_255B3948C();
            uint64_t v88 = v87;
            uint64_t v90 = v89;
            uint64_t v92 = v91;
            uint64_t v93 = v3[8];
            swift_bridgeObjectRetain();
            v326(v86, v88, v90, v92, v93);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v3[16] = v3[7];
            uint64_t v94 = v3[9];
            uint64_t v95 = v3[10];
            uint64_t v96 = v3[11];
            uint64_t v97 = v3[12];
            uint64_t v98 = v3[13];
            uint64_t v99 = v3[14];
            uint64_t v100 = v336;
            v336[1] = 0u;
            v100[2] = 0u;
            *uint64_t v100 = 0u;
            goto LABEL_128;
          }
          if (v53 == 59 && v54 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v276 = sub_255C81428();
            swift_bridgeObjectRelease();
            if ((v276 & 1) == 0) {
              goto LABEL_6;
            }
          }
          uint64_t v277 = v3[4];
          if (v3[7] >> 14 < (unint64_t)sub_255C80EA8() >> 14) {
            goto LABEL_227;
          }
          v338 = (void **)v277;
          uint64_t v278 = sub_255C80EF8();
          uint64_t v280 = v279;
          uint64_t v282 = v281;
          uint64_t v284 = v283;
          swift_bridgeObjectRetain();
          uint64_t v285 = sub_255C80EC8();
          swift_bridgeObjectRelease();
          if (v285 < 1)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v286 = v3[6];
            *(void *)&long long v344 = v278;
            *((void *)&v344 + 1) = v280;
            *(void *)&long long v345 = v282;
            *((void *)&v345 + 1) = v284;
            uint64_t v346 = v286;
            type metadata accessor for MarkupParser.EntityDecoder();
            swift_bridgeObjectRetain();
            sub_255B396AC();
            uint64_t v288 = v287;
            v348[0] = v344;
            v348[1] = v345;
            sub_255B3CB0C((uint64_t)v348);
            uint64_t v347 = v346;
            sub_255B3CB38((uint64_t)&v347);
            if (v288)
            {
              if (v14 >> 14 < v3[16] >> 14) {
                goto LABEL_228;
              }
              uint64_t v289 = sub_255C80EF8();
              uint64_t v291 = v290;
              uint64_t v293 = v292;
              uint64_t v295 = v294;
              uint64_t v296 = v3[8];
              swift_bridgeObjectRetain();
              v297 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v326;
              v326(v289, v291, v293, v295, v296);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v298 = sub_255C80778();
              uint64_t v300 = v299;
              uint64_t v302 = v301;
              uint64_t v304 = v303;
              swift_bridgeObjectRelease();
              uint64_t v305 = v3[8];
              swift_bridgeObjectRetain();
              v297(v298, v300, v302, v304, v305);
              swift_bridgeObjectRelease();
              goto LABEL_194;
            }
          }
          goto LABEL_197;
        case 4:
          uint64_t v25 = v3[9];
          uint64_t v26 = *(void *)(v14 + 16);
          uint64_t v27 = *(void *)(v14 + 24);
          uint64_t v28 = v3[12];
          uint64_t v29 = v3[13];
          uint64_t v30 = *(void *)(v25 + 32);
          uint64_t v31 = *(void *)(v25 + 40);
          uint64_t v32 = *(void *)(v25 + 48);
          uint64_t v33 = *(void *)(v25 + 56);
          int v34 = *(unsigned __int8 *)(v25 + 64);
          uint64_t v330 = v25;
          uint64_t v337 = v13;
          v338 = (void **)v15;
          uint64_t v329 = v28;
          uint64_t v328 = v29;
          sub_255B3C640(v25, v13, v15, v28, v29, v18, 4);
          uint64_t v331 = v26;
          uint64_t v332 = v30;
          int v333 = v34;
          sub_255B3C640(v26, v27, v30, v31, v32, v33, v34);
          if (sub_255C80ED8() == 32 && v35 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_4:
            uint64_t v5 = sub_255C80EA8();
            sub_255B3C700(v331, v27, v332, v31, v32, v33, v333);
            v3[16] = v5;
            uint64_t v6 = v330;
            uint64_t v7 = v337;
            uint64_t v8 = (uint64_t)v338;
            uint64_t v9 = v329;
            uint64_t v10 = v328;
            uint64_t v11 = v18;
            char v12 = 4;
            goto LABEL_5;
          }
          char v36 = sub_255C81428();
          swift_bridgeObjectRelease();
          if (v36) {
            goto LABEL_4;
          }
          uint64_t v37 = v3[9];
          uint64_t v38 = v3[10];
          uint64_t v39 = v3[11];
          uint64_t v40 = v3[12];
          uint64_t v41 = v3[13];
          uint64_t v42 = v3[14];
          v3[9] = v331;
          v3[10] = v27;
          v3[11] = v332;
          v3[12] = v31;
          v3[13] = v32;
          v3[14] = v33;
          char v43 = *((unsigned char *)v3 + 120);
          *((unsigned char *)v3 + 120) = v333;
          sub_255B3C700(v37, v38, v39, v40, v41, v42, v43);
          sub_255B3C700(v330, v337, (uint64_t)v338, v329, v328, v18, 4);
          goto LABEL_7;
        case 5:
          if (!(v15 | v13 | v14 | v16 | v17 | v18))
          {
            uint64_t v74 = sub_255C80ED8();
            uint64_t v75 = v73;
            BOOL v76 = v74 == 60 && v73 == 0xE100000000000000;
            char v77 = v76;
            if (v76 || (sub_255C81428() & 1) != 0)
            {
              uint64_t v78 = sub_255B39400();
              if (v79)
              {
                if (v78 == 47 && v79 == 0xE100000000000000)
                {
                  swift_bridgeObjectRelease();
LABEL_130:
                  swift_bridgeObjectRelease();
                  unint64_t v162 = sub_255B3948C();
                  uint64_t v164 = v163;
                  uint64_t v166 = v165;
                  uint64_t v168 = v167;
                  uint64_t v169 = v3[8];
                  swift_bridgeObjectRetain();
                  v326(v162, v164, v166, v168, v169);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v170 = v3[9];
                  uint64_t v171 = v3[10];
                  uint64_t v172 = v3[11];
                  uint64_t v173 = v3[12];
                  uint64_t v174 = v3[13];
                  uint64_t v175 = v3[14];
                  v3[9] = 2;
                  uint64_t v176 = v327;
                  *(_OWORD *)v327 = 0u;
                  *((_OWORD *)v176 + 1) = 0u;
                  v176[4] = 0;
                  char v177 = *((unsigned char *)v3 + 120);
                  *((unsigned char *)v3 + 120) = 5;
                  sub_255B3C700(v170, v171, v172, v173, v174, v175, v177);
                  v3[7] = sub_255C80EA8();
LABEL_163:
                  v3[16] = sub_255C80EA8();
                  goto LABEL_6;
                }
                char v161 = sub_255C81428();
                swift_bridgeObjectRelease();
                if (v161) {
                  goto LABEL_130;
                }
              }
              if (v77) {
                goto LABEL_134;
              }
            }
            if (sub_255C81428())
            {
LABEL_134:
              sub_255B39400();
              uint64_t v179 = v178;
              swift_bridgeObjectRelease();
              if (!v179) {
                goto LABEL_152;
              }
              if (v77) {
                goto LABEL_136;
              }
            }
            if (sub_255C81428())
            {
LABEL_136:
              uint64_t v180 = sub_255B39400();
              if (!v181) {
                goto LABEL_161;
              }
              if (v180 == 32 && v181 == 0xE100000000000000)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                char v222 = sub_255C81428();
                swift_bridgeObjectRelease();
                if ((v222 & 1) == 0)
                {
LABEL_161:
                  swift_bridgeObjectRelease();
                  uint64_t v223 = v3[9];
                  uint64_t v224 = v3[10];
                  uint64_t v225 = v3[11];
                  uint64_t v226 = v3[12];
                  uint64_t v227 = v3[13];
                  uint64_t v228 = v3[14];
                  v3[9] = 1;
                  uint64_t v229 = v327;
                  *(_OWORD *)v327 = 0u;
                  *((_OWORD *)v229 + 1) = 0u;
                  v229[4] = 0;
                  char v230 = *((unsigned char *)v3 + 120);
                  *((unsigned char *)v3 + 120) = 5;
                  sub_255B3C700(v223, v224, v225, v226, v227, v228, v230);
                  sub_255B3948C();
                  uint64_t v231 = sub_255C80EC8();
                  swift_bridgeObjectRelease();
                  if (v231 >= 1)
                  {
                    unint64_t v232 = sub_255B3948C();
                    uint64_t v234 = v233;
                    uint64_t v236 = v235;
                    uint64_t v238 = v237;
                    uint64_t v239 = v3[8];
                    swift_bridgeObjectRetain();
                    v326(v232, v234, v236, v238, v239);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  goto LABEL_163;
                }
              }
            }
            if (v74 == 38 && v75 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v240 = sub_255C81428();
              swift_bridgeObjectRelease();
              if ((v240 & 1) == 0) {
                goto LABEL_6;
              }
            }
            uint64_t v6 = v3[9];
            uint64_t v7 = v3[10];
            uint64_t v8 = v3[11];
            uint64_t v9 = v3[12];
            uint64_t v10 = v3[13];
            uint64_t v11 = v3[14];
            v3[9] = v3[7];
            uint64_t v241 = v327;
            *(_OWORD *)v327 = 0u;
            *((_OWORD *)v241 + 1) = 0u;
            v241[4] = 0;
            char v12 = *((unsigned char *)v3 + 120);
            *((unsigned char *)v3 + 120) = 3;
            goto LABEL_5;
          }
          uint64_t v61 = v15 | v13 | v16 | v17 | v18;
          if (v14 == 1 && v61 == 0)
          {
            uint64_t v80 = sub_255C80ED8();
            BOOL v82 = v80 == 32 && v81 == 0xE100000000000000;
            if (v82 || (uint64_t v83 = v80, v84 = v81, (sub_255C81428() & 1) != 0))
            {
              swift_bridgeObjectRelease();
              v3[17] = sub_255B3948C();
              v3[18] = v111;
              v3[19] = v112;
              v3[20] = v113;
              swift_bridgeObjectRelease();
              goto LABEL_101;
            }
            if (v83 == 47 && v84 == 0xE100000000000000 || (sub_255C81428() & 1) != 0)
            {
              uint64_t v198 = sub_255B39400();
              if (v199)
              {
                if (v198 == 62 && v199 == 0xE100000000000000)
                {
                  swift_bridgeObjectRelease();
LABEL_184:
                  swift_bridgeObjectRelease();
                  v3[17] = sub_255B3948C();
                  v3[18] = v252;
                  v3[19] = v253;
                  v3[20] = v254;
                  swift_bridgeObjectRelease();
                  goto LABEL_127;
                }
                char v251 = sub_255C81428();
                swift_bridgeObjectRelease();
                if (v251) {
                  goto LABEL_184;
                }
              }
            }
            if (v83 == 62 && v84 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease();
LABEL_189:
              v3[17] = sub_255B3948C();
              v3[18] = v256;
              v3[19] = v257;
              v3[20] = v258;
              swift_bridgeObjectRelease();
              v3[16] = sub_255C80EA8();
              uint64_t v94 = v3[9];
              uint64_t v95 = v3[10];
              uint64_t v96 = v3[11];
              uint64_t v97 = v3[12];
              uint64_t v98 = v3[13];
              uint64_t v99 = v3[14];
              v3[9] = 3;
              uint64_t v259 = v327;
              v327[4] = 0;
              *uint64_t v259 = 0u;
              v259[1] = 0u;
LABEL_128:
              char v160 = *((unsigned char *)v3 + 120);
              *((unsigned char *)v3 + 120) = 5;
              sub_255B3C700(v94, v95, v96, v97, v98, v99, v160);
              goto LABEL_7;
            }
            char v255 = sub_255C81428();
            swift_bridgeObjectRelease();
            if (v255) {
              goto LABEL_189;
            }
          }
          else
          {
            if (v14 == 2 && v61 == 0)
            {
              if (sub_255C80ED8() == 62 && v110 == 0xE100000000000000)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                char v185 = sub_255C81428();
                swift_bridgeObjectRelease();
                if ((v185 & 1) == 0) {
                  goto LABEL_6;
                }
              }
              unint64_t v186 = sub_255B3948C();
              uint64_t v187 = v3[9];
              uint64_t v188 = v3[10];
              uint64_t v189 = v3[11];
              uint64_t v190 = v3[12];
              uint64_t v191 = v3[13];
              uint64_t v192 = v3[14];
              v3[9] = v186;
              v3[10] = v193;
              v3[11] = v194;
              v3[12] = v195;
              uint64_t v196 = v322;
              void *v322 = 0;
              v196[1] = 0;
              char v197 = *((unsigned char *)v3 + 120);
              *((unsigned char *)v196 + 16) = 0;
              sub_255B3C700(v187, v188, v189, v190, v191, v192, v197);
              goto LABEL_7;
            }
            if (v14 == 3 && !v61)
            {
              unint64_t v64 = v3[17];
              unint64_t v65 = v3[18];
              uint64_t v67 = v3[19];
              uint64_t v66 = v3[20];
              swift_bridgeObjectRetain();
              unint64_t v68 = MEMORY[0x25A296760](29282, 0xE200000000000000);
              if (!v66) {
                goto LABEL_170;
              }
              if (v67 == v70 && v66 == v71 && v64 >> 16 == v68 >> 16 && v65 >> 16 == v69 >> 16)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_156;
              }
              LOBYTE(v320) = 0;
              char v212 = sub_255C813D8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v212)
              {
LABEL_156:
                uint64_t v213 = MEMORY[0x25A296760](10, 0xE100000000000000);
                uint64_t v215 = v214;
                uint64_t v217 = v216;
                uint64_t v219 = v218;
                uint64_t v220 = v3[8];
                swift_bridgeObjectRetain();
                v326(v213, v215, v217, v219, v220);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v221 = v323;
                _OWORD *v323 = 0u;
                v221[1] = 0u;
                v3[21] = MEMORY[0x263F8EE80];
LABEL_170:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v242 = v3[20];
              if (v242)
              {
                uint64_t v243 = v3[19];
                uint64_t v244 = v3[21];
                long long v340 = *(_OWORD *)(v3 + 17);
                uint64_t v341 = v243;
                uint64_t v342 = v242;
                uint64_t v343 = v244;
                swift_beginAccess();
                type metadata accessor for MarkupParser.Element();
                sub_255C808C8();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_255C80898();
                swift_endAccess();
                uint64_t v245 = v323;
                _OWORD *v323 = 0u;
                v245[1] = 0u;
                v3[21] = MEMORY[0x263F8EE80];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v247 = sub_255C80ED8();
              uint64_t v248 = v246;
              if (v247 == 47 && v246 == 0xE100000000000000 || (sub_255C81428() & 1) != 0)
              {
                uint64_t v249 = sub_255B39400();
                if (v250)
                {
                  if (v249 == 62 && v250 == 0xE100000000000000)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_191;
                  }
                  char v260 = sub_255C81428();
                  swift_bridgeObjectRelease();
                  if (v260)
                  {
LABEL_191:
                    swift_bridgeObjectRelease();
                    v3[7] = sub_255C80EA8();
                    goto LABEL_196;
                  }
                }
              }
              if (v247 == 62 && v248 == 0xE100000000000000)
              {
LABEL_194:
                swift_bridgeObjectRelease();
                goto LABEL_196;
              }
              char v261 = sub_255C81428();
              swift_bridgeObjectRelease();
              if (v261) {
LABEL_196:
              }
                v3[16] = sub_255C80EA8();
LABEL_197:
              uint64_t v6 = v3[9];
              uint64_t v7 = v3[10];
              uint64_t v8 = v3[11];
              uint64_t v9 = v3[12];
              uint64_t v10 = v3[13];
              uint64_t v11 = v3[14];
              uint64_t v262 = v336;
              _OWORD *v336 = 0u;
              v262[1] = 0u;
              v262[2] = 0u;
LABEL_12:
              char v12 = *((unsigned char *)v3 + 120);
              *((unsigned char *)v3 + 120) = 5;
LABEL_5:
              sub_255B3C700(v6, v7, v8, v9, v10, v11, v12);
              goto LABEL_6;
            }
            uint64_t v183 = sub_255C80ED8();
            uint64_t v184 = v182;
            if (v183 == 61 && v182 == 0xE100000000000000 || (sub_255C81428() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              uint64_t v200 = swift_allocObject();
              *(void *)(v200 + 16) = sub_255B394B0();
              *(void *)(v200 + 24) = v201;
              *(void *)(v200 + 32) = v202;
              *(void *)(v200 + 40) = v203;
              *(void *)(v200 + 48) = 0;
              *(void *)(v200 + 56) = 0;
              *(unsigned char *)(v200 + 64) = 1;
              uint64_t v204 = v3[9];
              uint64_t v205 = v3[10];
              uint64_t v206 = v3[11];
              uint64_t v207 = v3[12];
              uint64_t v208 = v3[13];
              uint64_t v209 = v3[14];
              v3[9] = v200;
              uint64_t v210 = v327;
              *(_OWORD *)v327 = 0u;
              *((_OWORD *)v210 + 1) = 0u;
              v210[4] = 0;
              char v211 = *((unsigned char *)v3 + 120);
              *((unsigned char *)v3 + 120) = 4;
              sub_255B3C700(v204, v205, v206, v207, v208, v209, v211);
              goto LABEL_163;
            }
            if (v183 == 62 && v184 == 0xE100000000000000 || (sub_255C81428() & 1) != 0)
            {
LABEL_199:
              swift_bridgeObjectRelease();
LABEL_200:
              sub_255B3948C();
              uint64_t v263 = sub_255C80EC8();
              swift_bridgeObjectRelease();
              if (v263 >= 1)
              {
                unint64_t v264 = sub_255B3948C();
                uint64_t v265 = MEMORY[0x25A295F10](v264);
                uint64_t v267 = v266;
                swift_bridgeObjectRelease();
                unint64_t v268 = sub_255B3948C();
                uint64_t v270 = v269;
                uint64_t v272 = v271;
                uint64_t v274 = v273;
                swift_beginAccess();
                char v275 = swift_isUniquelyReferenced_nonNull_native();
                v339 = (void *)v3[21];
                v3[21] = 0x8000000000000000;
                sub_255BCCA08(v268, v270, v272, v274, v265, v267, v275);
                v3[21] = v339;
                swift_bridgeObjectRelease();
                goto LABEL_126;
              }
              goto LABEL_127;
            }
            if (v183 == 47 && v184 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v306 = sub_255C81428();
              swift_bridgeObjectRelease();
              if ((v306 & 1) == 0) {
                goto LABEL_6;
              }
            }
            uint64_t v307 = sub_255B39400();
            if (v308)
            {
              if (v307 == 62 && v308 == 0xE100000000000000) {
                goto LABEL_199;
              }
              char v309 = sub_255C81428();
              swift_bridgeObjectRelease();
              if (v309) {
                goto LABEL_200;
              }
            }
          }
          goto LABEL_6;
        default:
          uint64_t v19 = v3[11];
          v338 = &v322;
          v339 = (void *)*v334;
          MEMORY[0x270FA5388](v339);
          uint64_t v20 = *(void **)(v324 + 88);
          *(&v322 - 6) = *(void **)(v324 + 80);
          *(&v322 - 5) = v20;
          *(&v322 - 4) = (void *)v14;
          *(&v322 - 3) = v21;
          uint64_t v320 = v15;
          uint64_t v321 = v16;
          uint64_t v22 = (uint64_t)v21;
          swift_bridgeObjectRetain();
          sub_255B3C640(v14, v22, v19, v16, v17, v18, 0);
          type metadata accessor for MarkupParser.Element();
          sub_255C808C8();
          swift_getWitnessTable();
          uint64_t v23 = v335;
          sub_255C80528();
          uint64_t v335 = v23;
          swift_bridgeObjectRelease();
          sub_255B3C700(v14, v22, v19, v16, v17, v18, 0);
          if ((BYTE8(v340) & 1) == 0)
          {
            swift_beginAccess();
            sub_255C808A8();
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v3[16] = sub_255C80EA8();
          uint64_t v6 = v3[9];
          uint64_t v7 = v3[10];
          uint64_t v8 = v3[11];
          uint64_t v9 = v3[12];
          uint64_t v10 = v3[13];
          uint64_t v11 = v3[14];
          long long v24 = v336;
          v336[1] = 0u;
          void v24[2] = 0u;
          *long long v24 = 0u;
          goto LABEL_12;
      }
    }
  }
LABEL_218:
  if (v4 < v3[16] >> 14)
  {
    __break(1u);
LABEL_224:
    __break(1u);
    goto LABEL_225;
  }
  swift_bridgeObjectRetain();
  sub_255C80EF8();
  swift_bridgeObjectRelease();
  uint64_t v310 = sub_255C80EC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v310 < 1) {
    return result;
  }
  if (v4 < v3[16] >> 14)
  {
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    sub_255C814B8();
    __break(1u);
    JUMPOUT(0x255B39358);
  }
  swift_bridgeObjectRetain();
  uint64_t v312 = sub_255C80EF8();
  uint64_t v314 = v313;
  uint64_t v316 = v315;
  uint64_t v318 = v317;
  swift_bridgeObjectRelease();
  v319 = (void *)*v334;
  swift_bridgeObjectRetain();
  v326(v312, v314, v316, v318, (uint64_t)v319);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t MarkupParser.entityMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MarkupParser.entityMap.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*MarkupParser.entityMap.modify())(void, void)
{
  return CGSizeMake;
}

unint64_t sub_255B393D8()
{
  unint64_t result = sub_255A18A80((uint64_t)&unk_270478858);
  qword_26B29DBF8 = result;
  return result;
}

uint64_t sub_255B39400()
{
  if ((unint64_t)sub_255C80EA8() >> 14 >= *(void *)(v0 + 24) >> 14) {
    return 0;
  }
  sub_255C80EA8();
  return sub_255C80ED8();
}

unint64_t sub_255B3948C()
{
  unint64_t result = *(void *)(v0 + 128);
  if (*(void *)(v0 + 56) >> 14 >= result >> 14) {
    return sub_255C80EF8();
  }
  __break(1u);
  return result;
}

unint64_t sub_255B394B0()
{
  unint64_t v1 = sub_255B3948C() >> 14;
  if (v1 == v2 >> 14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return sub_255B3948C();
  }
  unint64_t v3 = sub_255C80EB8();
  if (sub_255C80ED8() == 32 && v4 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v5 = sub_255C81428();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_6:
    if (v1 != v3 >> 14)
    {
      while (1)
      {
        unint64_t v3 = sub_255C80EB8();
        if (sub_255C80ED8() == 32 && v8 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v10 = sub_255C81428();
          swift_bridgeObjectRelease();
          if ((v10 & 1) == 0) {
            goto LABEL_17;
          }
        }
        if (v1 == v3 >> 14) {
          goto LABEL_7;
        }
      }
    }
    goto LABEL_7;
  }
LABEL_17:
  unint64_t result = swift_bridgeObjectRelease();
  if (v3 >> 14 >= *(void *)(v0 + 128) >> 14)
  {
    swift_bridgeObjectRetain();
    sub_255C80EA8();
    uint64_t v6 = sub_255C80EF8();
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

unint64_t sub_255B396AC()
{
  uint64_t v1 = swift_allocObject();
  uint64_t v3 = *v0;
  unint64_t v2 = v0[1];
  *(void *)(v1 + 16) = *v0;
  uint64_t v4 = v0[3];
  uint64_t v39 = v0[2];
  if (sub_255B39AFC() == 35 && v5 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_255C81428();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      uint64_t v8 = v0[4];
      uint64_t v9 = MEMORY[0x25A295F10](v3, v2, v39, v4);
      if (!*(void *)(v8 + 16) || (unint64_t v11 = sub_255B39E20(v9, v10), (v12 & 1) == 0))
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v13 = *(void *)(*(void *)(v8 + 56) + 16 * v11);
      swift_bridgeObjectRetain();
      swift_release();
LABEL_20:
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  unint64_t v14 = sub_255C80EA8();
  swift_beginAccess();
  *(void *)(v1 + 16) = v14;
  if (sub_255B39AFC() == 120 && v15 == 0xE100000000000000) {
    goto LABEL_12;
  }
  char v16 = sub_255C81428();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_17;
  }
  if (sub_255B39AFC() == 88 && v17 == 0xE100000000000000)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_17:
    unint64_t result = sub_255C80EA8();
    *(void *)(v1 + 16) = result;
    if (v2 >> 14 >= result >> 14)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_255C80EF8();
      unint64_t v22 = v21;
      unint64_t v24 = v23;
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      unint64_t v27 = v20;
      unint64_t v28 = v22;
      unint64_t v29 = v24;
      unint64_t v30 = v26;
      uint64_t v31 = 16;
LABEL_19:
      uint64_t v13 = sub_255B3BBB8(v27, v28, v29, v30, v31);
      swift_release();
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_26;
  }
  char v18 = sub_255C81428();
  unint64_t result = swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_17;
  }
  if (v2 >> 14 >= v14 >> 14)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_255C80EF8();
    unint64_t v34 = v33;
    unint64_t v36 = v35;
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    unint64_t v27 = v32;
    unint64_t v28 = v34;
    unint64_t v29 = v36;
    unint64_t v30 = v38;
    uint64_t v31 = 10;
    goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_255B399D8(void *a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a1[3];
  if (v6)
  {
    if (a1[2] == a4 && v6 == a5 && *a1 >> 16 == a2 >> 16 && a1[1] >> 16 == a3 >> 16) {
      return 1;
    }
    else {
      return sub_255C813D8() & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_255B39A70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255B3C700(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_255B39ACC()
{
  sub_255B39A70();

  return swift_deallocClassInstance();
}

uint64_t sub_255B39AFC()
{
  return sub_255C80ED8();
}

void *sub_255B39B6C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29FCF8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_255B39BD4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_255C80748();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x25A295F90](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_255B39C50(uint64_t a1)
{
  sub_255C7D6A8();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_255B3CA40(&qword_269F24898, MEMORY[0x263F07508]);
  uint64_t v3 = sub_255C804E8();
  return sub_255B3A638(a1, v3, MEMORY[0x263F07508], &qword_269F248A0, v2, MEMORY[0x263F07528]);
}

unint64_t sub_255B39D24(double a1)
{
  uint64_t v2 = sub_255C81568();

  return sub_255B3A2C8(v2, a1);
}

unint64_t sub_255B39D6C(uint64_t a1)
{
  sub_255C81578();
  sub_255C7D6A8();
  sub_255B3CA40(&qword_269F24898, MEMORY[0x263F07508]);
  sub_255C804F8();
  uint64_t v2 = sub_255C815B8();

  return sub_255B3A360(a1, v2);
}

unint64_t sub_255B39E20(uint64_t a1, uint64_t a2)
{
  sub_255C81578();
  sub_255C806B8();
  uint64_t v4 = sub_255C815B8();

  return sub_255B3A498(a1, a2, v4);
}

unint64_t sub_255B39E98(char a1)
{
  char v1 = a1 & 1;
  sub_255C81578();
  sub_255C81588();
  uint64_t v2 = sub_255C815B8();

  return sub_255B3A57C(v1, v2);
}

unint64_t sub_255B39F08(uint64_t a1, uint64_t a2)
{
  sub_255C81578();
  swift_bridgeObjectRetain();
  sub_255C806B8();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_255C815B8();

  return sub_255B3A498(a1, a2, v4);
}

unint64_t sub_255B39F90(uint64_t a1)
{
  sub_255C7D5C8();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
  sub_255B3CA40(&qword_269F24888, MEMORY[0x263F06EA8]);
  uint64_t v3 = sub_255C804E8();
  return sub_255B3A638(a1, v3, MEMORY[0x263F06EA8], &qword_269F213B8, v2, MEMORY[0x263F06EC0]);
}

unint64_t sub_255B3A068(uint64_t a1)
{
  uint64_t v2 = sub_255C80DC8();

  return sub_255B3A7D8(a1, v2);
}

unint64_t sub_255B3A0AC(uint64_t a1)
{
  sub_255C80628();
  sub_255C81578();
  sub_255C806B8();
  uint64_t v2 = sub_255C815B8();
  swift_bridgeObjectRelease();

  return sub_255B3A8E4(a1, v2);
}

unint64_t sub_255B3A140(char a1)
{
  uint64_t v1 = a1 & 1;
  sub_255C81578();
  sub_255C7E278();
  sub_255C81598();
  uint64_t v2 = sub_255C815B8();

  return sub_255B3AA5C(v1, v2);
}

unint64_t sub_255B3A1B0(uint64_t a1)
{
  uint64_t v2 = sub_255C81058();

  return sub_255B3AB48(a1, v2);
}

unint64_t sub_255B3A1F4(uint64_t a1)
{
  sub_255C80628();
  sub_255C81578();
  sub_255C806B8();
  uint64_t v2 = sub_255C815B8();
  swift_bridgeObjectRelease();
  return sub_255B3A8E4(a1, v2);
}

unint64_t sub_255B3A284(uint64_t a1)
{
  uint64_t v2 = sub_255C81568();

  return sub_255B3AC10(a1, v2);
}

unint64_t sub_255B3A2C8(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_255B3A360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FittedText() - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = *(void *)(v5 + 72);
    do
    {
      sub_255B3CC24(*(void *)(v2 + 48) + v11 * v9, (uint64_t)v7);
      char v12 = _s11MediaCoreUI10FittedTextV2eeoiySbAC_ACtFZ_0();
      sub_255A1A290((uint64_t)v7);
      if (v12) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_255B3A498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_255C81428() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_255C81428() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_255B3A57C(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_255B3A638(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  unint64_t v24 = a5;
  uint64_t v25 = a6;
  unint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_255B3CA40(v23, v24);
      char v19 = sub_255C80578();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_255B3A7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_255B3CA00();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_255C80DD8();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_255C80DD8();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_255B3A8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_255C80628();
    uint64_t v8 = v7;
    if (v6 == sub_255C80628() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_255C81428();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_255C80628();
          uint64_t v15 = v14;
          if (v13 == sub_255C80628() && v15 == v16) {
            break;
          }
          char v18 = sub_255C81428();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_255B3AA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    int v6 = sub_255C7E278();
    if (v6 != sub_255C7E278())
    {
      uint64_t v7 = ~v4;
      for (unint64_t i = (i + 1) & v7; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v7)
      {
        int v8 = sub_255C7E278();
        if (v8 == sub_255C7E278()) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_255B3AB48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_255A53BA8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x25A2968E0](v9, a1);
      sub_255A52504((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_255B3AC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_255B3ACAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_255B3CB74();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_255C80768();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_255B3B020();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_255C81168();
  }
LABEL_7:
  uint64_t v13 = sub_255B3ADA0(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 | ((((unint64_t)v13 >> 32) & 1) << 32);
}

unsigned __int8 *sub_255B3ADA0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_255B3B020()
{
  unint64_t v0 = sub_255C80778();
  uint64_t v4 = sub_255B3B0A0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_255B3B0A0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_255B3B1F8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      char v11 = sub_255B39B6C(v9, 0);
      unint64_t v12 = sub_255B3B2F8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_255C81168();
LABEL_4:
        JUMPOUT(0x25A295F20);
      }
    }
    else
    {
      char v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x25A295F20](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x25A295F20]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_255B3B1F8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    unint64_t result = sub_255B39BD4(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    unint64_t result = sub_255B39BD4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_255C80728();
}

unint64_t sub_255B3B2F8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    _OWORD v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_255B39BD4(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_255C80738();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_255C81168();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_255B39BD4(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_255C80708();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_255B3B50C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    LODWORD(result) = 0;
    unsigned __int8 v14 = 0;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v13;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_255C81168();
  }
  uint64_t result = sub_255B3B790((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    unsigned __int8 v14 = BYTE4(result) & 1;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  return result;
}

uint64_t sub_255B3B5E0(uint64_t a1)
{
  return a1 & ~(-1 << *(unsigned char *)(v1 + 32));
}

uint64_t sub_255B3B60C()
{
  sub_255C81578();
  sub_255C81588();
  uint64_t v0 = sub_255C815B8();

  return sub_255B3B5E0(v0);
}

uint64_t sub_255B3B664(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MarkupParser.Element();
  *(void *)(v2 + 64) = sub_255C80438();
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(unsigned char *)(v2 + 120) = 5;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(void *)(v2 + 168) = MEMORY[0x263F8EE80];
  *(void *)(v2 + 48) = a2;
  sub_255C80B48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29DC08);
  sub_255B3CBC8();
  sub_255C80B78();
  *(_OWORD *)(v2 + 16) = v5;
  *(void *)(v2 + 32) = v6;
  *(void *)(v2 + 40) = v7;
  sub_255C80B08();
  *(void *)(v2 + 56) = v5;
  *(void *)(v2 + 128) = v5;
  return v2;
}

uint64_t sub_255B3B790(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_255B39BD4(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  uint64_t result = sub_255C80728();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_255B39BD4(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_255B39BD4(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_100;
  }
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t result = sub_255C80728();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  char v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    char v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v34 = a6 + 55;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v34 = 65;
        }
        if (a6 <= 10) {
          unsigned __int8 v35 = a6 + 48;
        }
        else {
          unsigned __int8 v35 = 58;
        }
        if (v19)
        {
          unsigned int v24 = 0;
          unint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v35)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                unsigned int v29 = 0;
                unsigned __int8 v30 = 1;
                if (v38 < 0x61 || v38 >= v33) {
                  return v29 | ((unint64_t)v30 << 32);
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            unint64_t v40 = v24 * (unint64_t)a6;
            if ((v40 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_96;
            }
            unsigned __int8 v41 = v38 + v39;
            unsigned int v24 = v40 + v41;
            if (__CFADD__(v40, v41)) {
              goto LABEL_96;
            }
            ++v36;
            --v37;
          }
          while (v37);
LABEL_94:
          unsigned __int8 v30 = 0;
          unsigned int v29 = v24;
          return v29 | ((unint64_t)v30 << 32);
        }
        goto LABEL_95;
      }
      goto LABEL_96;
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v43 = a6 + 55;
      }
      else
      {
        unsigned __int8 v42 = 97;
        unsigned __int8 v43 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v44 = a6 + 48;
      }
      else {
        unsigned __int8 v44 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v44)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v45 < 0x61 || v45 >= v42) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          unint64_t v47 = v24 * (unint64_t)a6;
          if ((v47 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_96;
          }
          unsigned __int8 v48 = v45 + v46;
          unsigned int v24 = v47 + v48;
          if (__CFADD__(v47, v48)) {
            goto LABEL_96;
          }
          ++v19;
          if (!--result) {
            goto LABEL_94;
          }
        }
      }
      goto LABEL_95;
    }
LABEL_96:
    unsigned int v29 = 0;
    unsigned __int8 v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }
      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          unint64_t v31 = v24 * (unint64_t)a6;
          if ((v31 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_96;
          }
          unsigned __int8 v32 = v27 + v28;
          unsigned int v24 = v31 - v32;
          if (v31 < v32) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_94;
          }
        }
      }
LABEL_95:
      unsigned int v29 = 0;
      unsigned __int8 v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_255B3BBB8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((unint64_t)(a5 - 37) < 0xFFFFFFFFFFFFFFDDLL)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((a2 ^ a1) < 0x4000) {
    return 0;
  }
  uint64_t v11 = sub_255B3B50C(a1, a2, a3, a4, a5);
  if ((v11 & 0x10000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_255B3ACAC(a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    if ((v5 & 0x100000000) != 0) {
      return 0;
    }
  }
  else
  {
    LODWORD(v5) = v11;
    if ((v11 & 0x100000000) != 0) {
      return 0;
    }
  }
  uint64_t result = 0;
  if (WORD1(v5) <= 0x10u && (v5 & 0xFFFFF800) != 0xD800)
  {
    if ((v5 & 0xFFFFFF80) == 0)
    {
      if (v5 > 0xFF)
      {
        __break(1u);
        return result;
      }
      unsigned int v13 = (v5 + 1);
      goto LABEL_12;
    }
LABEL_15:
    int v14 = (v5 & 0x3F) << 8;
    unsigned int v13 = (v14 | (v5 >> 6)) + 33217;
    unsigned int v15 = (v14 | (v5 >> 6) & 0x3F) << 8;
    unsigned int v16 = (((v15 | (v5 >> 12) & 0x3F) << 8) | (v5 >> 18)) - 2122219023;
    unsigned int v17 = (v15 | (v5 >> 12)) + 8487393;
    if (WORD1(v5)) {
      unsigned int v17 = v16;
    }
    if (v5 >= 0x800) {
      unsigned int v13 = v17;
    }
LABEL_12:
    uint64_t v18 = (v13 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v13) >> 3)) & 7)));
    return MEMORY[0x25A295F20](&v18);
  }
  return result;
}

uint64_t sub_255B3BD68()
{
  if (v0[3]) {
    return *v0;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MarkupParser.Parser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B3BD98()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_255B3BE34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_255B3BF30(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255B3BFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_255B3C020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255B3C0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_255B3C128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255B3C1AC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255B3C2F8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_255B3C30C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x255B3C4E8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_255B3C520(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_255B3C568(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for MarkupParser.Element()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B3C5C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_255B3C640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 1:
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRetain();
LABEL_3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 4:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255B3C6E8(uint64_t a1)
{
  return sub_255B3C700(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t sub_255B3C700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 1:
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255B3C7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_255B3C640(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t sub_255B3C824(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_255B3C640(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_255B3C700(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t sub_255B3C8B4(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_255B3C700(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t sub_255B3C90C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_255B3C954(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_255B3C9A8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 4u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_255B3C9C0(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)uint64_t result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

uint64_t type metadata accessor for MarkupParser.Parser.State()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_255B3CA00()
{
  unint64_t result = qword_269F24890;
  if (!qword_269F24890)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F24890);
  }
  return result;
}

uint64_t sub_255B3CA40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B3CA88()
{
  sub_255B3C700(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocObject();
}

uint64_t sub_255B3CACC(void *a1)
{
  return sub_255B399D8(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56)) & 1;
}

uint64_t type metadata accessor for MarkupParser.EntityDecoder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B3CB0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_255B3CB38(uint64_t a1)
{
  return a1;
}

uint64_t sub_255B3CB64()
{
  return swift_deallocObject();
}

unint64_t sub_255B3CB74()
{
  unint64_t result = qword_269F248A8[0];
  if (!qword_269F248A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F248A8);
  }
  return result;
}

unint64_t sub_255B3CBC8()
{
  unint64_t result = qword_26B29DC00;
  if (!qword_26B29DC00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29DC08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29DC00);
  }
  return result;
}

uint64_t sub_255B3CC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FittedText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B3CC88()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255B3CCC4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_255B3CD0C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255B3CD84(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryButtonState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryButtonState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t NowPlayingFooterConfiguration.init<A, B>(_:_:compact:regular:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v42 = a2;
  unsigned __int8 v43 = a9;
  uint64_t v46 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v39 = (char *)&v37 - v14;
  unint64_t v15 = sub_255B3D248();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v47 = &type metadata for NowPlayingButtonID;
  uint64_t v48 = AssociatedTypeWitness;
  unint64_t v49 = v15;
  unint64_t v50 = AssociatedConformanceWitness;
  uint64_t v16 = type metadata accessor for ContentLookupItem();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v38 = (uint64_t)&v37 - v17;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v18);
  int v20 = (char *)&v37 - v19;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  unint64_t v47 = &type metadata for NowPlayingButtonID;
  uint64_t v48 = v18;
  unint64_t v49 = v15;
  unint64_t v50 = v21;
  uint64_t v22 = type metadata accessor for ContentLookupItem();
  MEMORY[0x270FA5388](v22 - 8);
  unsigned int v24 = (char *)&v37 - v23;
  (*(void (**)(ValueMetadata **__return_ptr, uint64_t, uint64_t))(a7 + 24))(&v47, a5, a7);
  uint64_t v53 = v47;
  uint64_t v54 = v48;
  (*(void (**)(uint64_t, uint64_t))(a7 + 32))(a5, a7);
  sub_255A97718((uint64_t)&v53, (uint64_t)v20, (uint64_t)&type metadata for NowPlayingButtonID, v18, (uint64_t)v24);
  uint64_t v25 = v42;
  (*(void (**)(ValueMetadata **__return_ptr, uint64_t, uint64_t))(a8 + 24))(&v47, a6, a8);
  uint64_t v53 = v47;
  uint64_t v54 = v48;
  uint64_t v26 = (uint64_t)v39;
  (*(void (**)(uint64_t, uint64_t))(a8 + 32))(a6, a8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a6 - 8) + 8))(v25, a6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(v46, a5);
  uint64_t v27 = v38;
  uint64_t v29 = AssociatedConformanceWitness;
  uint64_t v28 = v41;
  sub_255A97718((uint64_t)&v53, v26, (uint64_t)&type metadata for NowPlayingButtonID, v41, v38);
  uint64_t v30 = v27;
  uint64_t v31 = v28;
  ContentLookup.init<A, B>(_:_:)((uint64_t)v24, v30, (uint64_t)&type metadata for NowPlayingButtonID, v18, v28, v15, v21, v29, (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))&v47);
  unsigned __int8 v33 = v47;
  uint64_t v32 = v48;
  unint64_t v47 = &type metadata for NowPlayingButtonID;
  uint64_t v48 = v18;
  unint64_t v49 = v31;
  unint64_t v50 = v15;
  uint64_t v51 = v21;
  uint64_t v52 = v29;
  type metadata accessor for ContentLookup2();
  swift_getWitnessTable();
  unsigned __int8 v34 = v43;
  void *v43 = v44;
  v34[1] = v33;
  uint64_t v35 = v45;
  v34[2] = v32;
  void v34[3] = v35;
  void v34[4] = v33;
  v34[5] = v32;
  return swift_retain();
}

unint64_t sub_255B3D248()
{
  unint64_t result = qword_269F24930;
  if (!qword_269F24930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24930);
  }
  return result;
}

uint64_t NowPlayingFooterConfiguration.init<A, B, C>(_:_:_:compact:regular:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void (*v32)(ValueMetadata **__return_ptr, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  void *v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t AssociatedConformanceWitness;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  ValueMetadata *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  ValueMetadata *v87;
  uint64_t v88;

  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v70 = a3;
  uint64_t v67 = a2;
  uint64_t v78 = a1;
  uint64_t v73 = a9;
  unint64_t v65 = a12;
  uint64_t v66 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  BOOL v72 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v68 = (char *)&v58 - v16;
  unint64_t v17 = sub_255B3D248();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v79 = &type metadata for NowPlayingButtonID;
  uint64_t v80 = AssociatedTypeWitness;
  uint64_t v81 = v17;
  BOOL v82 = AssociatedConformanceWitness;
  uint64_t v18 = type metadata accessor for ContentLookupItem();
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v69 = (uint64_t)&v58 - v19;
  uint64_t v62 = a7;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v58 - v21;
  char v77 = v20;
  unint64_t v64 = swift_getAssociatedConformanceWitness();
  uint64_t v79 = &type metadata for NowPlayingButtonID;
  uint64_t v80 = v20;
  uint64_t v81 = v17;
  BOOL v82 = v64;
  uint64_t v22 = type metadata accessor for ContentLookupItem();
  MEMORY[0x270FA5388](v22 - 8);
  BOOL v76 = (uint64_t)&v58 - v23;
  uint64_t v24 = a6;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v58 - v26;
  uint64_t v28 = swift_getAssociatedConformanceWitness();
  uint64_t v79 = &type metadata for NowPlayingButtonID;
  uint64_t v80 = v25;
  uint64_t v81 = v17;
  BOOL v82 = v28;
  uint64_t v60 = v28;
  uint64_t v29 = type metadata accessor for ContentLookupItem();
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)&v58 - v30;
  uint64_t v61 = (uint64_t)&v58 - v30;
  uint64_t v32 = *(void (**)(ValueMetadata **__return_ptr, uint64_t, uint64_t))(a10 + 24);
  uint64_t v59 = v24;
  v32(&v79, v24, a10);
  uint64_t v87 = v79;
  uint64_t v88 = v80;
  (*(void (**)(uint64_t, uint64_t))(a10 + 32))(v24, a10);
  sub_255A97718((uint64_t)&v87, (uint64_t)v27, (uint64_t)&type metadata for NowPlayingButtonID, v25, (uint64_t)v31);
  unsigned __int8 v33 = v67;
  unsigned __int8 v34 = v62;
  (*(void (**)(ValueMetadata **__return_ptr, uint64_t, uint64_t))(a11 + 24))(&v79, v62, a11);
  uint64_t v87 = v79;
  uint64_t v88 = v80;
  uint64_t v35 = v63;
  unint64_t v36 = v33;
  (*(void (**)(uint64_t, uint64_t))(a11 + 32))(v34, a11);
  uint64_t v37 = (uint64_t)v35;
  uint64_t v38 = v64;
  sub_255A97718((uint64_t)&v87, v37, (uint64_t)&type metadata for NowPlayingButtonID, v77, v76);
  char v39 = v65;
  unint64_t v40 = v70;
  uint64_t v41 = v66;
  (*(void (**)(ValueMetadata **__return_ptr, uint64_t, uint64_t))(v65 + 24))(&v79, v66, v65);
  uint64_t v87 = v79;
  uint64_t v88 = v80;
  uint64_t v42 = (uint64_t)v68;
  (*(void (**)(uint64_t, uint64_t))(v39 + 32))(v41, v39);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v36, v34);
  (*(void (**)(uint64_t))(*(void *)(v59 - 8) + 8))(v78);
  unsigned __int8 v43 = v69;
  uint64_t v45 = AssociatedConformanceWitness;
  uint64_t v44 = v72;
  sub_255A97718((uint64_t)&v87, v42, (uint64_t)&type metadata for NowPlayingButtonID, v72, v69);
  uint64_t v57 = v38;
  uint64_t v46 = v45;
  unint64_t v47 = v38;
  uint64_t v48 = v60;
  unint64_t v49 = v77;
  unint64_t v50 = v43;
  uint64_t v51 = v44;
  ContentLookup.init<A, B, C>(_:_:_:)(v61, v76, v50, (uint64_t)&type metadata for NowPlayingButtonID, v25, v77, v44, v17, (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))&v79, v60, v57, v45);
  uint64_t v53 = v79;
  uint64_t v52 = v80;
  uint64_t v79 = &type metadata for NowPlayingButtonID;
  uint64_t v80 = v25;
  uint64_t v81 = v49;
  BOOL v82 = v51;
  uint64_t v83 = v17;
  uint64_t v84 = v48;
  BOOL v85 = v47;
  unint64_t v86 = v46;
  type metadata accessor for ContentLookup3();
  swift_getWitnessTable();
  uint64_t v54 = v73;
  ValueMetadata *v73 = v74;
  v54[1] = v53;
  uint64_t v55 = v75;
  v54[2] = v52;
  v54[3] = v55;
  v54[4] = v53;
  v54[5] = v52;
  return swift_retain();
}

uint64_t sub_255B3D890@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v30 - v10;
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v31 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v20 = sub_255C7EBE8();
  uint64_t v33 = *(void *)(v20 - 8);
  uint64_t v34 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v30 - v21;
  if (*a1)
  {
    uint64_t v23 = *(void *)(a2 + 40);
    sub_255A20F54(v32 + *(int *)(a2 + 52));
    sub_255A20F54(v11);
    uint64_t v24 = v6;
    uint64_t v25 = *(void *)(a2 + 32);
    sub_255A44128((uint64_t)v8, v13, v5);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v24 + 8);
    v26(v8, v5);
    v26(v11, v5);
  }
  else
  {
    uint64_t v25 = *(void *)(a2 + 32);
    sub_255A20F54(v32);
    sub_255A20F54(v19);
    uint64_t v23 = *(void *)(a2 + 40);
    sub_255A44030((uint64_t)v16, v13);
    uint64_t v27 = *(void (**)(char *, uint64_t))(v31 + 8);
    v27(v16, v13);
    v27(v19, v13);
  }
  uint64_t v36 = v25;
  uint64_t v37 = v23;
  uint64_t v28 = v34;
  swift_getWitnessTable();
  sub_255A20F54(v22);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v22, v28);
}

uint64_t NowPlayingFooterContent.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24938);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v23 = sub_255C7E458();
  uint64_t v5 = sub_255C7EBE8();
  unint64_t v25 = sub_255B3DEAC();
  unint64_t v24 = sub_255B3D248();
  uint64_t v33 = v26;
  uint64_t v34 = &type metadata for NowPlayingButtonID;
  uint64_t v35 = v5;
  unint64_t v36 = v25;
  unint64_t v37 = v24;
  uint64_t v6 = sub_255C80088();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *((void *)v2 + 2);
  long long v21 = *v2;
  uint64_t v33 = v21;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(v14 + 16) = v4;
  *(void *)(v14 + 24) = v15;
  *(_OWORD *)(v14 + 32) = v21;
  *(void *)(v14 + 48) = v13;
  unint64_t v16 = sub_255A55320();
  uint64_t v31 = v15;
  unint64_t v32 = v16;
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = MEMORY[0x263F1B698];
  uint64_t v30 = WitnessTable;
  uint64_t v20 = swift_getWitnessTable();
  sub_255C80068();
  uint64_t v28 = v20;
  swift_getWitnessTable();
  sub_255A20F54(v10);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  sub_255A20F54(v12);
  return ((uint64_t (*)(char *, uint64_t))v18)(v12, v6);
}

unint64_t sub_255B3DEAC()
{
  unint64_t result = qword_269F24940[0];
  if (!qword_269F24940[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24938);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F24940);
  }
  return result;
}

uint64_t sub_255B3DF08@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v33 = a2;
  uint64_t v38 = a6;
  uint64_t v35 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_255C7E458();
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v36 = (char *)&v32 - v15;
  uint64_t v16 = sub_255C7EBE8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  if (v21 == 0x726563617073 && v20 == 0xE600000000000000 || (sub_255C81428() & 1) != 0)
  {
    unint64_t v47 = 0;
    LOBYTE(v48) = 1;
    unint64_t v22 = sub_255A55320();
    uint64_t v23 = a5;
    uint64_t v39 = a5;
    unint64_t v40 = v22;
    swift_getWitnessTable();
    sub_255A44030((uint64_t)&v47, MEMORY[0x263F1B6B0]);
  }
  else
  {
    v51[2] = v33;
    void v51[3] = v34;
    v51[0] = v21;
    v51[1] = v20;
    unint64_t v24 = sub_255B3D248();
    unint64_t v47 = &type metadata for NowPlayingButtonID;
    unint64_t v48 = a4;
    unint64_t v49 = v24;
    uint64_t v50 = a5;
    uint64_t v32 = a5;
    uint64_t v25 = type metadata accessor for ContentLookup();
    sub_255A9A0F8((uint64_t)v51, v25);
    unint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_255C810E8();
    swift_bridgeObjectRelease();
    unint64_t v47 = (ValueMetadata *)0xD000000000000011;
    unint64_t v48 = 0x8000000255C9EC10;
    swift_bridgeObjectRetain();
    uint64_t v23 = v32;
    sub_255C806E8();
    swift_bridgeObjectRelease_n();
    sub_255BA31A8((uint64_t *)&v47, a4, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, a4);
    unint64_t v26 = sub_255A55320();
    uint64_t v45 = v23;
    unint64_t v46 = v26;
    swift_getWitnessTable();
    uint64_t v27 = v36;
    sub_255A20F54(v14);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v37 + 8);
    v28(v14, v11);
    sub_255A20F54(v27);
    sub_255A44128((uint64_t)v14, MEMORY[0x263F1B6B0], v11);
    v28(v14, v11);
    v28(v27, v11);
  }
  unint64_t v29 = sub_255A55320();
  uint64_t v43 = v23;
  unint64_t v44 = v29;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = MEMORY[0x263F1B698];
  uint64_t v42 = WitnessTable;
  swift_getWitnessTable();
  sub_255A20F54(v19);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_255B3E3E0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B3E420@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255B3DF08(a1, v2[5], v2[6], v2[2], v2[3], a2);
}

uint64_t sub_255B3E430()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B3E478(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_255B3E670(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x255B3E93CLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          unint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for NowPlayingFooterConfiguration()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255B3E980()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_255B3E9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_255B3EA00(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255B3EA60(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for NowPlayingFooterContent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255B3EAC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_255B3EBE0(uint64_t a1)
{
  uint64_t v2 = sub_255C7D388();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_255C7D378();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_255B3ECD4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_255C80FB8();
    sub_255B4043C();
    sub_255B4075C((unint64_t *)&qword_26B29BF28, (void (*)(uint64_t))sub_255B4043C);
    sub_255C80AB8();
    uint64_t v1 = v26;
    uint64_t v25 = v27;
    uint64_t v2 = v28;
    uint64_t v3 = v29;
    unint64_t v4 = v30;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  uint64_t v23 = v2;
  int64_t v24 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_255C81028()) {
    goto LABEL_36;
  }
  sub_255B4043C();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v9 = v31;
  swift_unknownObjectRelease();
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  if (!v31) {
    goto LABEL_36;
  }
  while (1)
  {
    id v16 = objc_msgSend(v9, sel_session, v23);
    id v17 = objc_msgSend(v16, sel_role);

    uint64_t v18 = sub_255C80628();
    uint64_t v20 = v19;
    if (v18 == sub_255C80628() && v20 == v21)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_36;
    }
    char v22 = sub_255C81428();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_36;
    }

    uint64_t v3 = v10;
    unint64_t v4 = v11;
    if (v1 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v4) {
      break;
    }
    uint64_t v11 = (v4 - 1) & v4;
    unint64_t v12 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v10 = v3;
LABEL_29:
    id v9 = *(id *)(*(void *)(v1 + 48) + 8 * v12);
    if (!v9) {
      goto LABEL_36;
    }
  }
  int64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v13);
  uint64_t v10 = v3 + 1;
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 2;
  if (v3 + 2 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 3;
  if (v3 + 3 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 4;
  if (v3 + 4 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 5;
  if (v3 + 5 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v10);
  if (v14)
  {
LABEL_28:
    uint64_t v11 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_29;
  }
  uint64_t v15 = v3 + 6;
  while (v24 != v15)
  {
    unint64_t v14 = *(void *)(v25 + 8 * v15++);
    if (v14)
    {
      uint64_t v10 = v15 - 1;
      goto LABEL_28;
    }
  }
LABEL_36:
  sub_255B20BB4();
}

uint64_t sub_255B3F084()
{
  return sub_255B3F354();
}

uint64_t sub_255B3F0BC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();

  return swift_release();
}

uint64_t sub_255B3F134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_255C7DC38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for HostedScenePhaseModel();
  sub_255B4075C(&qword_26B29A8A8, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
  sub_255C7DDC8();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();
  swift_release();
  swift_release();
  id v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29B6F0) + 36));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BCC0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v9 + *(int *)(v10 + 28), v7, v4);
  *id v9 = KeyPath;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29BB28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255B3F354()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B4E8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_255C7DC38();
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v67 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v55 - v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = v0 + OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel__scenePhase;
  id v16 = (void (*)(unint64_t, uint64_t, uint64_t))v7[13];
  unsigned int v70 = *MEMORY[0x263F18448];
  uint64_t v71 = v16;
  ((void (*)(char *))v16)((char *)&v55 - v13);
  uint64_t v63 = (void (*)(char *, char *, uint64_t))v7[2];
  unint64_t v64 = v7 + 2;
  v63(v12, v14, v6);
  sub_255C7DA88();
  uint64_t v18 = (void (*)(char *, uint64_t))v7[1];
  id v17 = v7 + 1;
  unint64_t v65 = v18;
  uint64_t v66 = v14;
  v18(v14, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15, v5, v2);
  uint64_t v62 = OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel_notificationObservers;
  *(void *)(v0
            + OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel_notificationObservers) = MEMORY[0x263F8EE78];
  id v19 = objc_msgSend(self, sel_sharedApplication);
  id v20 = objc_msgSend(v19, sel_connectedScenes);

  sub_255B4043C();
  sub_255B4075C((unint64_t *)&qword_26B29BF28, (void (*)(uint64_t))sub_255B4043C);
  uint64_t v21 = sub_255C80A98();

  sub_255B3ECD4(v21);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v23)
  {
    uint64_t v61 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BFB0);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BEE0);
    uint64_t v25 = *(void *)(v24 - 8);
    unint64_t v69 = v23;
    uint64_t v26 = *(void *)(v25 + 72);
    unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_255C8F530;
    uint64_t v29 = (void *)(v28 + v27);
    unint64_t v30 = v28 + v27 + *(int *)(v24 + 48);
    id v59 = (id)*MEMORY[0x263F83928];
    void *v29 = v59;
    unsigned int v57 = *MEMORY[0x263F18450];
    uint64_t v31 = v71;
    ((void (*)(unint64_t))v71)(v30);
    unint64_t v32 = v28 + v27 + v26 + *(int *)(v24 + 48);
    id v58 = (id)*MEMORY[0x263F83950];
    *(void *)((char *)v29 + v26) = v58;
    uint64_t v33 = v6;
    uint64_t v34 = *MEMORY[0x263F18458];
    v31(v32, v34, v33);
    uint64_t v60 = 0;
    uint64_t v68 = v1;
    uint64_t v35 = (void *)(v28 + v27 + 2 * v26);
    unint64_t v36 = (char *)v35 + *(int *)(v24 + 48);
    uint64_t v37 = (void *)*MEMORY[0x263F83958];
    *uint64_t v35 = *MEMORY[0x263F83958];
    unsigned int v56 = v34;
    uint64_t v38 = v34;
    uint64_t v39 = v33;
    v31((unint64_t)v36, v38, v33);
    unint64_t v40 = (void *)(v28 + v27 + 3 * v26);
    uint64_t v41 = (char *)v40 + *(int *)(v24 + 48);
    uint64_t v42 = (void *)*MEMORY[0x263F83930];
    *unint64_t v40 = *MEMORY[0x263F83930];
    uint64_t v43 = ((uint64_t (*)(char *, void, uint64_t))v31)(v41, v70, v33);
    MEMORY[0x270FA5388](v43);
    uint64_t v44 = v68;
    *(&v55 - 2) = (uint64_t)v69;
    *(&v55 - 1) = v44;
    id v45 = v59;
    id v46 = v58;
    id v47 = v37;
    id v48 = v42;
    uint64_t v1 = v68;
    unint64_t v49 = v69;
    uint64_t v50 = sub_255B40484(v28, (void (*)(_OWORD *__return_ptr, void, char *))sub_255B4047C);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(v1 + v62) = v50;
    swift_bridgeObjectRelease();
    id v51 = objc_msgSend(v49, sel_activationState);
    if (v51 == (id)1)
    {
      uint64_t v53 = v56;
      uint64_t v52 = v67;
    }
    else
    {
      uint64_t v52 = v67;
      uint64_t v53 = v70;
      if (!v51) {
        uint64_t v53 = v57;
      }
    }
    v71((unint64_t)v52, v53, v39);
    swift_getKeyPath();
    swift_getKeyPath();
    v63(v66, v52, v39);
    swift_retain();
    sub_255C7DAD8();
    v65(v52, v39);
  }
  return v1;
}

uint64_t sub_255B3F96C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a3;
  uint64_t v6 = sub_255C7DC38();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  id v9 = objc_msgSend(self, sel_defaultCenter);
  id v10 = objc_msgSend(self, sel_mainQueue);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_255B406E8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255B3EBE0;
  aBlock[3] = &block_descriptor_13;
  unint64_t v14 = _Block_copy(aBlock);
  swift_release();
  id v15 = objc_msgSend(v9, sel_addObserverForName_object_queue_usingBlock_, v17, v18, v10, v14);
  _Block_release(v14);

  uint64_t result = swift_getObjectType();
  a4[3] = result;
  *a4 = v15;
  return result;
}

uint64_t sub_255B3FBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_255C7DC38();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v15 - v9;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_255C7DAC8();
    swift_release();
    swift_release();
    sub_255B4075C(&qword_26B29B540, MEMORY[0x263F18460]);
    char v12 = sub_255C80578();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v10, v4);
    if ((v12 & 1) == 0)
    {
      unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, a3, v4);
      swift_getKeyPath();
      swift_getKeyPath();
      v14(v8, (uint64_t)v10, v4);
      swift_retain();
      sub_255C7DAD8();
      v13(v10, v4);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_255B3FE04()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel_notificationObservers);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = self;
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_255A42E30(v4, (uint64_t)v9);
      id v5 = objc_msgSend(v3, sel_defaultCenter);
      __swift_project_boxed_opaque_existential_1(v9, v9[3]);
      objc_msgSend(v5, sel_removeObserver_, sub_255C81418());

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v0 + OBJC_IVAR____TtC11MediaCoreUIP33_8B5FAED8DE080D34DF68BF28A36B87C521HostedScenePhaseModel__scenePhase;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B4E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_255B3FF7C()
{
  return type metadata accessor for HostedScenePhaseModel();
}

uint64_t type metadata accessor for HostedScenePhaseModel()
{
  uint64_t result = qword_26B29A8B0;
  if (!qword_26B29A8B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255B3FFD0()
{
  sub_255B4006C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_255B4006C()
{
  if (!qword_26B29B4F0)
  {
    sub_255C7DC38();
    unint64_t v0 = sub_255C7DAE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B29B4F0);
    }
  }
}

uint64_t sub_255B400C8()
{
  return swift_retain();
}

uint64_t destroy for HostedScenePhaseSupport()
{
  return sub_255B400E0();
}

uint64_t sub_255B400E0()
{
  return swift_release();
}

uint64_t _s11MediaCoreUI23HostedScenePhaseSupportVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_255B400C8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for HostedScenePhaseSupport(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_255B400C8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_255B400E0();
  return a1;
}

uint64_t assignWithTake for HostedScenePhaseSupport(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_255B400E0();
  return a1;
}

ValueMetadata *type metadata accessor for HostedScenePhaseSupport()
{
  return &type metadata for HostedScenePhaseSupport;
}

uint64_t sub_255B401E4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HostedScenePhaseModel();
  uint64_t result = sub_255C7D9E8();
  *a1 = result;
  return result;
}

uint64_t sub_255B40224()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B40248()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_255C7DAC8();
  swift_release();

  return swift_release();
}

uint64_t sub_255B402C8(uint64_t a1)
{
  uint64_t v2 = sub_255C7DC38();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  sub_255C7DAD8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

unint64_t sub_255B4043C()
{
  unint64_t result = qword_26B29BF20;
  if (!qword_26B29BF20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B29BF20);
  }
  return result;
}

uint64_t sub_255B4047C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_255B3F96C(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_255B40484(uint64_t a1, void (*a2)(_OWORD *__return_ptr, void, char *))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_255B16D6C(0, v2, 0);
    uint64_t v3 = v13;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BEE0);
    uint64_t v7 = (char *)(a1
                + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)));
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 72);
    do
    {
      a2(v12, *(void *)v7, &v7[*(int *)(v6 + 48)]);
      uint64_t v13 = v3;
      unint64_t v10 = *(void *)(v3 + 16);
      unint64_t v9 = *(void *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_255B16D6C(v9 > 1, v10 + 1, 1);
        uint64_t v3 = v13;
      }
      v7 += v8;
      *(void *)(v3 + 16) = v10 + 1;
      sub_255A199E0(v12, (_OWORD *)(v3 + 32 * v10 + 32));
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_255B405E4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_255B4061C()
{
  uint64_t v1 = sub_255C7DC38();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255B406E8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_255C7DC38() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255B3FBBC(a1, v4, v5);
}

uint64_t sub_255B4075C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B407A8()
{
  unint64_t result = qword_26B29B6E8;
  if (!qword_26B29B6E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B6F0);
    sub_255A09998(&qword_26B29BB20, (uint64_t *)&unk_26B29BB28);
    sub_255A09998(&qword_26B29BCB8, &qword_26B29BCC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B6E8);
  }
  return result;
}

uint64_t sub_255B4086C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v7 = a2;
  char v9 = a3 & 1;
  sub_255A0877C(a2, a3 & 1);
  char v10 = sub_255ABA6A4(v7, v9);
  sub_255A087D0(v7, v9);
  *(unsigned char *)(a1
           + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled) = v10 & 1;
  sub_255B40938();
  a5 &= 1u;
  sub_255A0877C(a4, a5);
  LOBYTE(v7) = sub_255ABA6A4(a4, a5);
  sub_255A087D0(a4, a5);
  *(unsigned char *)(a1
           + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled) = v7 & 1;
  sub_255B40938();
  *(unsigned char *)(a1
           + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isConfiguredForSnapshot) = 0;
  return sub_255B40938();
}

uint64_t sub_255B40938()
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_255B40A68(KeyPath, v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled], v0, (void (*)(void))type metadata accessor for NowPlayingArtworkBackgroundEffect.BlurLayer);
  swift_release();
  uint64_t v2 = swift_getKeyPath();
  uint64_t v3 = OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled;
  if (v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled] == 1) {
    char v4 = v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isConfiguredForSnapshot] ^ 1;
  }
  else {
    char v4 = 0;
  }
  sub_255B40A68(v2, v4 & 1, v0, (void (*)(void))type metadata accessor for NowPlayingArtworkBackgroundEffect.LiveColorAdjustmentsLayer);
  swift_release();
  uint64_t v5 = swift_getKeyPath();
  if (v0[v3] == 1) {
    char v6 = v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isConfiguredForSnapshot];
  }
  else {
    char v6 = 0;
  }
  sub_255B40A68(v5, v6, v0, (void (*)(void))type metadata accessor for NowPlayingArtworkBackgroundEffect.SnapshotColorAdjustmentsLayer);

  return swift_release();
}

void sub_255B40A68(uint64_t a1, char a2, void *a3, void (*a4)(void))
{
  if (a2)
  {
    v14[0] = a3;
    id v5 = a3;
    swift_getAtKeyPath();

    if (!v15)
    {
      a4(0);
      v14[0] = v5;
      id v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      id v6 = v5;
      id v7 = v15;
      swift_setAtReferenceWritableKeyPath();

      objc_msgSend(v6, sel_addSublayer_, v7);
      objc_msgSend(v6, sel_setNeedsLayout);
    }
  }
  else
  {
    id v15 = a3;
    id v8 = a3;
    char v9 = (void (*)(id *, void))swift_readAtKeyPath();
    id v11 = *v10;
    id v12 = *v10;
    v9(v14, 0);

    if (v11)
    {
      objc_msgSend(v12, sel_removeFromSuperlayer);
      v14[0] = v8;
      id v15 = 0;
      id v13 = v8;
      swift_setAtReferenceWritableKeyPath();
    }
  }
}

void *sub_255B40BD8()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer);
  id v2 = v1;
  return v1;
}

void *sub_255B40C08()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_liveColorAdjustmentsLayer);
  id v2 = v1;
  return v1;
}

void *sub_255B40C38()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_snapshotColorAdjustmentsLayer);
  id v2 = v1;
  return v1;
}

id sub_255B40C68()
{
  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled] = 1;
  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled] = 1;
  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isConfiguredForSnapshot] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_liveColorAdjustmentsLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_snapshotColorAdjustmentsLayer] = 0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  id v1 = objc_msgSendSuper2(&v3, sel_init);
  sub_255B40938();

  return v1;
}

id sub_255B40D2C(void *a1)
{
  v1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled] = 1;
  v1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled] = 1;
  v1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isConfiguredForSnapshot] = 0;
  *(void *)&v1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer] = 0;
  *(void *)&v1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_liveColorAdjustmentsLayer] = 0;
  *(void *)&v1[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_snapshotColorAdjustmentsLayer] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = sub_255C81418();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithLayer_, v3);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

id sub_255B40E48()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  objc_msgSendSuper2(&v9, sel_layoutSublayers);
  id v1 = self;
  objc_msgSend(v1, sel_begin);
  objc_msgSend(v1, sel_setDisableActions_, 1);
  id v2 = *(void **)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer];
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v3, sel_setFrame_, sub_255B40FE4());
  }
  id v4 = *(void **)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_liveColorAdjustmentsLayer];
  if (v4)
  {
    id v5 = v4;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v5, sel_setFrame_);
  }
  objc_super v6 = *(void **)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_snapshotColorAdjustmentsLayer];
  if (v6)
  {
    id v7 = v6;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v7, sel_setFrame_);
  }
  return objc_msgSend(v1, sel_commit);
}

double sub_255B40FE4()
{
  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v2);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v3);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v4);
  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v5);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v6);
  return 0.0;
}

id sub_255B410A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_255B41134()
{
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v7, sel_init);
  objc_msgSend(v1, sel_setAllowsInPlaceFiltering_, 1);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_255C83400;
  id v3 = v1;
  id v4 = sub_255B43018();
  *(void *)(v2 + 56) = sub_255A43740(0, &qword_26B29BF30);
  *(void *)(v2 + 32) = v4;
  CGRect v5 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setFilters_, v5);

  return v3;
}

void sub_255B412B4()
{
  if (qword_26B29F398 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26B2AA660;
  id v1 = (void *)sub_255C805F8();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_withConfiguration_, v1, v0, 0);

  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_CGImage);

    if (v3)
    {
      qword_269F24A48 = (uint64_t)v3;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_255B413B0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = &v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29125LiveColorAdjustmentsLayer_dimmingMatrix];
  *(_OWORD *)id v2 = xmmword_255C8F6A0;
  *((_OWORD *)v2 + 1) = xmmword_255C8F6B0;
  *((_OWORD *)v2 + 2) = xmmword_255C8F6C0;
  *((_OWORD *)v2 + 3) = xmmword_255C8F6D0;
  *((_OWORD *)v2 + 4) = xmmword_255C89FD0;
  id v3 = (objc_super *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29125LiveColorAdjustmentsLayer_saturationMatrix];
  id v4 = v0;
  CAColorMatrixMakeSaturation();
  objc_super v5 = v26[2];
  objc_super v6 = v26[3];
  objc_super v7 = v26[4];
  objc_super v8 = v26[5];
  *id v3 = v26[1];
  v3[1] = v5;
  _OWORD v3[2] = v6;
  v3[3] = v7;
  v3[4] = v8;

  v26[0].receiver = v4;
  v26[0].super_class = ObjectType;
  id v9 = [(objc_super *)v26 init];
  uint64_t v10 = *MEMORY[0x263F15DD0];
  id v11 = v9;
  objc_msgSend(v11, sel_setType_, v10);
  uint64_t v12 = qword_269F20058;
  id v13 = v11;
  if (v12 != -1) {
    swift_once();
  }
  sub_255B4178C(qword_269F24A50);
  unint64_t v14 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setColors_, v14);

  uint64_t v15 = qword_269F20060;
  id v16 = v13;
  if (v15 != -1) {
    swift_once();
  }
  sub_255A43740(0, &qword_26B29F148);
  uint64_t v17 = (void *)sub_255C807E8();
  objc_msgSend(v16, sel_setLocations_, v17);

  uint64_t v18 = qword_269F20068;
  id v19 = v16;
  if (v18 != -1) {
    swift_once();
  }
  sub_255A43740(0, &qword_269F24AB8);
  id v20 = (void *)sub_255C807E8();
  objc_msgSend(v19, sel_setInterpolations_, v20);

  __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_255C83400;
  id v22 = v19;
  id v23 = sub_255B419C0();
  *(void *)(v21 + 56) = sub_255A43740(0, &qword_26B29BF30);
  *(void *)(v21 + 32) = v23;
  uint64_t v24 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setFilters_, v24);

  return v22;
}

uint64_t sub_255B416C0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_255B16CEC(0, v2, 0);
    uint64_t result = v8;
    id v4 = (int *)(a1 + 32);
    unint64_t v5 = *(void *)(v8 + 16);
    do
    {
      int v6 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 24);
      if (v5 >= v7 >> 1)
      {
        sub_255B16CEC(v7 > 1, v5 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v5 + 1;
      *(_DWORD *)(result + 4 * v5 + 32) = v6;
      ++v4;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_255B4178C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_255C812B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_255B16D6C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x25A2969C0](i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_255B16D6C(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_255B16D6C(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_255A199E0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_255B16D6C(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_255B16D6C(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_255A199E0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

id sub_255B419C0()
{
  CAColorMatrixConcat();
  sub_255C80628();
  id v0 = objc_allocWithZone(MEMORY[0x263F157C8]);
  id v1 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithType_, v1);

  v11[0] = v6;
  v11[1] = v7;
  uint64_t v11[2] = v8;
  void v11[3] = v9;
  unsigned char v11[4] = v10;
  id v3 = objc_msgSend(self, sel_valueWithCAColorMatrix_, v11);
  id v4 = (void *)sub_255C805F8();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

  return v2;
}

id sub_255B41D8C()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v8, sel_init);
  uint64_t v2 = *MEMORY[0x263F15DD0];
  id v3 = v1;
  objc_msgSend(v3, sel_setType_, v2);
  if (qword_269F20058 != -1) {
    swift_once();
  }
  sub_255B4178C(qword_269F24A50);
  id v4 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setColors_, v4);

  if (qword_269F20060 != -1) {
    swift_once();
  }
  sub_255A43740(0, &qword_26B29F148);
  unint64_t v5 = (void *)sub_255C807E8();
  objc_msgSend(v3, sel_setLocations_, v5);

  if (qword_269F20068 != -1) {
    swift_once();
  }
  sub_255A43740(0, &qword_269F24AB8);
  long long v6 = (void *)sub_255C807E8();
  objc_msgSend(v3, sel_setInterpolations_, v6);

  return v3;
}

id sub_255B41FE8()
{
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v16, sel_init);
  id v2 = objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.SnapshotColorAdjustmentsLayer.Mask());
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_init);
  objc_msgSend(v3, sel_setMask_, v4);

  __swift_instantiateConcreteTypeFromMangledName(qword_26B29F190);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_255C855F0;
  sub_255C80628();
  id v6 = objc_allocWithZone(MEMORY[0x263F157C8]);
  id v7 = v3;
  objc_super v8 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithType_, v8);

  long long v10 = (void *)sub_255C7D768();
  unint64_t v11 = (void *)sub_255C805F8();
  objc_msgSend(v9, sel_setValue_forKey_, v10, v11);

  uint64_t v12 = sub_255A43740(0, &qword_26B29BF30);
  *(void *)(v5 + 56) = v12;
  *(void *)(v5 + 32) = v9;
  id v13 = sub_255B43208();
  *(void *)(v5 + 88) = v12;
  *(void *)(v5 + 64) = v13;
  unint64_t v14 = (void *)sub_255C807E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setFilters_, v14);

  return v7;
}

uint64_t sub_255B42394()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 24);
  type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(unsigned char *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = v4;
  sub_255A0877C(v1, v2);
  sub_255A0877C(v3, v4);

  return sub_255C7DFD8();
}

uint64_t sub_255B4245C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F180);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_255C8A4D0;
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_blackColor);
  id v3 = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.54);

  id v4 = objc_msgSend(v3, sel_CGColor);
  *(void *)(v0 + 32) = v4;
  id v5 = objc_msgSend(v1, sel_blackColor);
  id v6 = objc_msgSend(v5, sel_colorWithAlphaComponent_, 0.0);

  id v7 = objc_msgSend(v6, sel_CGColor);
  *(void *)(v0 + 40) = v7;
  id v8 = objc_msgSend(v1, sel_blackColor);
  id v9 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 1.0);

  id v10 = objc_msgSend(v9, sel_CGColor);
  *(void *)(v0 + 48) = v10;
  uint64_t result = sub_255C80818();
  qword_269F24A50 = v0;
  return result;
}

uint64_t sub_255B425F0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F180);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_255C8A4D0;
  sub_255A43740(0, &qword_26B29F148);
  *(void *)(v0 + 32) = sub_255C80DA8();
  *(void *)(v0 + 40) = sub_255C80DA8();
  *(void *)(v0 + 48) = sub_255C80DA8();
  uint64_t result = sub_255C80818();
  qword_269F24A58 = v0;
  return result;
}

uint64_t sub_255B42698()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F180);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_255C8A4E0;
  uint64_t v1 = (void *)*MEMORY[0x263F15EC0];
  id v2 = self;
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_functionWithName_, v3);

  *(void *)(v0 + 32) = v4;
  id v5 = (id)*MEMORY[0x263F15EB0];
  id v6 = objc_msgSend(v2, sel_functionWithName_, v5);

  *(void *)(v0 + 40) = v6;
  uint64_t result = sub_255C80818();
  qword_269F24A60 = v0;
  return result;
}

uint64_t MCUINamespace<A>.isNowPlayingBackgroundBlurEnabled.getter()
{
  return sub_255B42904((void (*)(void))sub_255B427B0);
}

unint64_t sub_255B427B0()
{
  unint64_t result = qword_269F24A68;
  if (!qword_269F24A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24A68);
  }
  return result;
}

uint64_t sub_255B42804@<X0>(unsigned char *a1@<X8>)
{
  return keypath_getTm_1((void (*)(void))sub_255B427B0, a1);
}

uint64_t sub_255B42824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(void))sub_255B427B0);
}

uint64_t MCUINamespace<A>.isNowPlayingBackgroundBlurEnabled.setter(uint64_t a1)
{
  return sub_255B42A50(a1, (void (*)(void))sub_255B427B0);
}

uint64_t (*MCUINamespace<A>.isNowPlayingBackgroundBlurEnabled.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_255B427B0();
  sub_255C7E8C8();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_255B428D8;
}

uint64_t sub_255B428D8(uint64_t a1)
{
  return sub_255B42B18(a1);
}

uint64_t MCUINamespace<A>.isNowPlayingBackgroundColorAdjustmentEnabled.getter()
{
  return sub_255B42904((void (*)(void))sub_255B4294C);
}

uint64_t sub_255B42904(void (*a1)(void))
{
  a1();
  sub_255C7E8C8();
  return v2;
}

unint64_t sub_255B4294C()
{
  unint64_t result = qword_269F24A70;
  if (!qword_269F24A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24A70);
  }
  return result;
}

uint64_t sub_255B429A0@<X0>(unsigned char *a1@<X8>)
{
  return keypath_getTm_1((void (*)(void))sub_255B4294C, a1);
}

uint64_t sub_255B429C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(void))sub_255B4294C);
}

uint64_t keypath_setTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_255C7E8D8();
}

uint64_t MCUINamespace<A>.isNowPlayingBackgroundColorAdjustmentEnabled.setter(uint64_t a1)
{
  return sub_255B42A50(a1, (void (*)(void))sub_255B4294C);
}

uint64_t sub_255B42A50(uint64_t a1, void (*a2)(void))
{
  return sub_255C7E8D8();
}

uint64_t (*MCUINamespace<A>.isNowPlayingBackgroundColorAdjustmentEnabled.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_255B4294C();
  sub_255C7E8C8();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_255B42B0C;
}

uint64_t sub_255B42B0C(uint64_t a1)
{
  return sub_255B42B18(a1);
}

uint64_t sub_255B42B18(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_255C7E8D8();
}

uint64_t sub_255B42B48@<X0>(unsigned char *a1@<X8>)
{
  return keypath_getTm_1((void (*)(void))sub_255B427B0, a1);
}

uint64_t sub_255B42B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(void))sub_255B427B0);
}

uint64_t sub_255B42B88()
{
  return 0;
}

uint64_t sub_255B42B98@<X0>(unsigned char *a1@<X8>)
{
  return keypath_getTm_1((void (*)(void))sub_255B4294C, a1);
}

uint64_t sub_255B42BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(void))sub_255B4294C);
}

uint64_t sub_255B42BD8()
{
  return 0;
}

uint64_t type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer()
{
  return self;
}

uint64_t type metadata accessor for NowPlayingArtworkBackgroundEffect.BlurLayer()
{
  return self;
}

uint64_t type metadata accessor for NowPlayingArtworkBackgroundEffect.LiveColorAdjustmentsLayer()
{
  return self;
}

uint64_t type metadata accessor for NowPlayingArtworkBackgroundEffect.SnapshotColorAdjustmentsLayer()
{
  return self;
}

uint64_t type metadata accessor for NowPlayingArtworkBackgroundEffect.SnapshotColorAdjustmentsLayer.Mask()
{
  return self;
}

ValueMetadata *type metadata accessor for NowPlayingBackgroundColorAdjustmentEnabledKey()
{
  return &type metadata for NowPlayingBackgroundColorAdjustmentEnabledKey;
}

ValueMetadata *type metadata accessor for NowPlayingBackgroundEffectBlurEnabledKey()
{
  return &type metadata for NowPlayingBackgroundEffectBlurEnabledKey;
}

uint64_t destroy for NowPlayingArtworkBackgroundEffect(uint64_t a1)
{
  sub_255A087D0(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_255A087D0(v2, v3);
}

uint64_t initializeWithCopy for NowPlayingArtworkBackgroundEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_255A0877C(v6, v2);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for NowPlayingArtworkBackgroundEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  uint64_t v8 = *(void *)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_255A0877C(v8, v2);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v2;
  sub_255A087D0(v9, v10);
  return a1;
}

uint64_t assignWithTake for NowPlayingArtworkBackgroundEffect(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_255A087D0(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingArtworkBackgroundEffect(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingArtworkBackgroundEffect(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtworkBackgroundEffect()
{
  return &type metadata for NowPlayingArtworkBackgroundEffect;
}

uint64_t sub_255B42EE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B42F04()
{
  sub_255A087D0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  sub_255A087D0(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_255B42F4C(uint64_t a1)
{
  return sub_255B4086C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

void sub_255B42F6C()
{
  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isBlurEnabled] = 1;
  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isColorAdjustmentEnabled] = 1;
  v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isConfiguredForSnapshot] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_liveColorAdjustmentsLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_snapshotColorAdjustmentsLayer] = 0;

  sub_255C81248();
  __break(1u);
}

id sub_255B43018()
{
  sub_255C80628();
  id v0 = objc_allocWithZone(MEMORY[0x263F157C8]);
  uint64_t v1 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithType_, v1);

  if (qword_269F20050 != -1) {
    swift_once();
  }
  id v3 = (id)qword_269F24A48;
  int v4 = (void *)sub_255C805F8();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

  char v5 = (void *)sub_255C808F8();
  uint64_t v6 = (void *)sub_255C805F8();
  objc_msgSend(v2, sel_setValue_forKey_, v5, v6);

  char v7 = (void *)sub_255C808F8();
  char v8 = (void *)sub_255C805F8();
  objc_msgSend(v2, sel_setValue_forKey_, v7, v8);

  uint64_t v9 = (void *)sub_255C7D768();
  char v10 = (void *)sub_255C805F8();
  objc_msgSend(v2, sel_setValue_forKey_, v9, v10);

  return v2;
}

id sub_255B43208()
{
  sub_255C80628();
  id v0 = objc_allocWithZone(MEMORY[0x263F157C8]);
  uint64_t v1 = (void *)sub_255C805F8();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithType_, v1);

  id v3 = (void *)sub_255C807E8();
  int v4 = (void *)sub_255C805F8();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

  char v5 = (void *)sub_255C7D768();
  uint64_t v6 = (void *)sub_255C805F8();
  objc_msgSend(v2, sel_setValue_forKey_, v5, v6);

  return v2;
}

id sub_255B43338@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v2 = *(void **)(*a1
                + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_blurLayer);
  *a2 = v2;
  return v2;
}

void sub_255B43350(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_255B4335C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v2 = *(void **)(*a1
                + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_liveColorAdjustmentsLayer);
  *a2 = v2;
  return v2;
}

void sub_255B43374(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_255B43380@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v2 = *(void **)(*a1
                + OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_snapshotColorAdjustmentsLayer);
  *a2 = v2;
  return v2;
}

void sub_255B43398(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

void keypath_set_34Tm(void **a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *a1;
  id v7 = *(id *)(*a2 + *a5);
  *(void *)(*a2 + *a5) = *a1;
  id v6 = v5;
}

uint64_t sub_255B433F0(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = sub_255C80958();
  v1[4] = sub_255C80948();
  uint64_t v3 = sub_255C80908();
  v1[5] = v3;
  v1[6] = v2;
  return MEMORY[0x270FA2498](sub_255B4348C, v3, v2);
}

uint64_t sub_255B4348C()
{
  uint64_t v1 = (void *)v0[2];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  v0[7] = v2;
  id v3 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v3, sel_bounds);
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  objc_msgSend(v2, sel_setBounds_, v5, v7, v9, v11);
  objc_msgSend(v2, sel_setOpaque_, 1);
  objc_msgSend(v2, sel_setAnchorPoint_, 0.0, 0.0);
  objc_msgSend(v2, sel_setDrawsAsynchronously_, 1);
  uint64_t v12 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkMirrorReplicatorLayer()), (SEL)&off_2653EB618);
  v0[8] = v12;
  id v13 = *(void **)&v12[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMirrorReplicatorLayer_image];
  *(void *)&v12[OBJC_IVAR____TtC11MediaCoreUI38NowPlayingArtworkMirrorReplicatorLayer_image] = v1;
  id v14 = v1;

  sub_255C6E37C();
  objc_msgSend(v12, sel_setOpaque_, 1);
  uint64_t v15 = v12;
  objc_msgSend(v2, sel_bounds);
  objc_msgSend(v15, sel_setBounds_);

  objc_msgSend(v15, sel_setAnchorPoint_, 0.0, 0.0);
  objc_msgSend(v15, sel_setDrawsAsynchronously_, 1);
  objc_msgSend(v2, sel_addSublayer_, v15);
  objc_super v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkBackgroundEffect.EffectLayer()), sel_init);
  v0[9] = v16;
  v16[OBJC_IVAR____TtCV11MediaCoreUI33NowPlayingArtworkBackgroundEffectP33_0BADDE1E8FA0478530CC88B691A6D29111EffectLayer_isConfiguredForSnapshot] = 1;
  sub_255B40938();
  uint64_t v17 = v16;
  objc_msgSend(v2, sel_bounds);
  objc_msgSend(v17, sel_setBounds_);

  objc_msgSend(v17, sel_setAnchorPoint_, 0.0, 0.0);
  objc_msgSend(v17, sel_setDrawsAsynchronously_, 1);
  objc_msgSend(v2, sel_addSublayer_, v17);
  v2;
  v0[10] = sub_255C80948();
  uint64_t v18 = (void *)swift_task_alloc();
  v0[11] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_255B43770;
  return sub_255C7A40C();
}

uint64_t sub_255B43770(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_255C80908();
    uint64_t v7 = v6;
    double v8 = sub_255B439DC;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v5 = sub_255C80908();
    uint64_t v7 = v9;
    double v8 = sub_255B438F0;
  }
  return MEMORY[0x270FA2498](v8, v5, v7);
}

uint64_t sub_255B438F0()
{
  uint64_t v1 = (void *)v0[7];
  swift_release();

  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return MEMORY[0x270FA2498](sub_255B4395C, v2, v3);
}

uint64_t sub_255B4395C()
{
  uint64_t v1 = *(void *)(v0 + 104);

  swift_release();
  uint64_t v2 = *(void **)(v0 + 64);

  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v1);
}

uint64_t sub_255B439DC()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[7];
  swift_release();

  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return MEMORY[0x270FA2498](sub_255B43A54, v3, v4);
}

uint64_t sub_255B43A54()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 64);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

unint64_t sub_255B43AD4()
{
  unint64_t result = qword_269F24AC8;
  if (!qword_269F24AC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24AD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24AC8);
  }
  return result;
}

uint64_t destroy for ArtworkStyleModifier(uint64_t a1)
{
  sub_255A087D0(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_255A1D054(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88), *(unsigned char *)(a1 + 89));

  return swift_release();
}

uint64_t initializeWithCopy for ArtworkStyleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v16 = *(void *)(a2 + 80);
  char v17 = *(unsigned char *)(a2 + 88);
  char v18 = *(unsigned char *)(a2 + 89);
  sub_255A1CFDC(v6, v7, v8, v9, v10, v11, v12, v13, v16, v17, v18);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v16;
  *(unsigned char *)(a1 + 88) = v17;
  *(unsigned char *)(a1 + 89) = v18;
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ArtworkStyleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v15 = *(void *)(a2 + 72);
  uint64_t v28 = *(void *)(a2 + 80);
  char v29 = *(unsigned char *)(a2 + 88);
  char v30 = *(unsigned char *)(a2 + 89);
  sub_255A1CFDC(v8, v9, v10, v11, v12, v13, v14, v15, v28, v29, v30);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v19 = *(void *)(a1 + 40);
  uint64_t v20 = *(void *)(a1 + 48);
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = *(void *)(a1 + 72);
  uint64_t v24 = *(void *)(a1 + 80);
  char v25 = *(unsigned char *)(a1 + 88);
  char v26 = *(unsigned char *)(a1 + 89);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v28;
  *(unsigned char *)(a1 + 88) = v29;
  *(unsigned char *)(a1 + 89) = v30;
  sub_255A1D054(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for ArtworkStyleModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_255A087D0(v6, v7);
  uint64_t v8 = a2[10];
  char v9 = *((unsigned char *)a2 + 88);
  char v10 = *((unsigned char *)a2 + 89);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  char v20 = *(unsigned char *)(a1 + 88);
  char v21 = *(unsigned char *)(a1 + 89);
  long long v22 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v22;
  long long v23 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 64) = v23;
  *(void *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 89) = v10;
  sub_255A1D054(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(void *)(a1 + 96) = a2[12];
  swift_release();
  *(void *)(a1 + 104) = a2[13];
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkStyleModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 96);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkStyleModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 96) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkStyleModifier()
{
  return &type metadata for ArtworkStyleModifier;
}

uint64_t *sub_255B43F6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    char v7 = (char *)a2 + v5;
    uint64_t v8 = sub_255C7E988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_255B44038(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_255C7E988();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_255B440A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_255C7E988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_255B4411C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_255C7E988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_255B44198(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_255C7E988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_255B44214(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_255C7E988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_255B44290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B442A4);
}

uint64_t sub_255B442A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_255C7E988();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_255B44314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B44328);
}

uint64_t sub_255B44328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_255C7E988();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for ArtworkCornerStyle(uint64_t a1)
{
  return sub_255A151B4(a1, qword_26B299190);
}

uint64_t sub_255B443BC()
{
  uint64_t result = sub_255C7E988();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for ArtworkStyleModifier.AppliedArtworkStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for ArtworkStyleModifier.AppliedArtworkStyle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for ArtworkStyleModifier.AppliedArtworkStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for ArtworkStyleModifier.AppliedArtworkStyle()
{
  return &type metadata for ArtworkStyleModifier.AppliedArtworkStyle;
}

uint64_t sub_255B44558()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B44574(double a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a3;
  long long v17 = *(_OWORD *)(a3 + 1);
  uint64_t v9 = a3[3];
  uint64_t v10 = a3[4];
  uint64_t v11 = sub_255C7E458();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - v13;
  *(double *)char v20 = a1;
  v20[1] = v8;
  long long v21 = v17;
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  MEMORY[0x25A295390](v20, a4, &type metadata for ArtworkStyleModifier.AppliedArtworkStyle, a5);
  swift_getKeyPath();
  unint64_t v15 = sub_255A54ED8();
  uint64_t v18 = a5;
  unint64_t v19 = v15;
  swift_getWitnessTable();
  sub_255C7F678();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_255B44710(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v3 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (uint64_t *)((char *)&v18 - v7);
  uint64_t v9 = type metadata accessor for ArtworkCornerModifier(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = swift_getKeyPath();
  v11[8] = 0;
  *((void *)v11 + 2) = swift_getKeyPath();
  v11[56] = 0;
  *((void *)v11 + 8) = swift_getKeyPath();
  v11[72] = 0;
  _s14DefaultArtworkCMa();
  sub_255B4A6EC(&qword_26B299E98, (void (*)(uint64_t))_s14DefaultArtworkCMa);
  *((void *)v11 + 10) = sub_255C7E628();
  *((void *)v11 + 11) = v12;
  type metadata accessor for NowPlayingViewModel.Lifecycle();
  sub_255B4A6EC(&qword_26B29A200, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle);
  *((void *)v11 + 12) = sub_255C7E628();
  *((void *)v11 + 13) = v13;
  *uint64_t v8 = 0;
  uint64_t v14 = (char *)v8 + *(int *)(v3 + 20);
  uint64_t v15 = *MEMORY[0x263F19868];
  uint64_t v16 = sub_255C7E988();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  sub_255B4A828((uint64_t)v8, (uint64_t)v6, type metadata accessor for ArtworkCornerStyle);
  sub_255C7FE58();
  sub_255B4A7C8((uint64_t)v8, type metadata accessor for ArtworkCornerStyle);
  MEMORY[0x25A295390](v11, a1, v9, v18);
  return sub_255B4A7C8((uint64_t)v11, type metadata accessor for ArtworkCornerModifier);
}

uint64_t sub_255B449D0(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  char v6 = 0;
  MEMORY[0x25A295390](&KeyPath, a1, &type metadata for VideoPlayerStyleModifier, a2);
  return swift_release();
}

uint64_t sub_255B44A4C(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  _s14DefaultArtworkCMa();
  sub_255B4A6EC(&qword_26B299E98, (void (*)(uint64_t))_s14DefaultArtworkCMa);
  uint64_t v8 = KeyPath;
  char v9 = 0;
  uint64_t v10 = v5;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  __int16 v15 = 0;
  uint64_t v16 = sub_255C7E628();
  uint64_t v17 = v6;
  MEMORY[0x25A295390](&v8, a1, &type metadata for ArtworkStyleModifier, a2);
  sub_255A087D0(KeyPath, 0);
  sub_255A1D054(v5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  return swift_release();
}

uint64_t sub_255B44B88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)&v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_255C7E518();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  long long v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for ArtworkInnerStrokeModifier(0);
  sub_255ABC878((uint64_t)v7);
  uint64_t v12 = *v7;
  long long v13 = (char *)v7 + *(int *)(v5 + 28);
  long long v14 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v15 = sub_255C7E988();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
  *long long v11 = v12;
  v11[1] = v12;
  sub_255B4A7C8((uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
  uint64_t v16 = *a1;
  swift_retain();
  sub_255C7DDD8();
  sub_255B4A828((uint64_t)v11, a2, MEMORY[0x263F19048]);
  uint64_t v17 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29B600) + 36);
  long long v18 = v26;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)&v25[8];
  *(_OWORD *)(v17 + 16) = v18;
  *(void *)(v17 + 32) = v27;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B548);
  *(void *)(a2 + *(int *)(v19 + 52)) = v16;
  *(_WORD *)(a2 + *(int *)(v19 + 56)) = 256;
  uint64_t v20 = sub_255C801F8();
  uint64_t v22 = v21;
  uint64_t v23 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29B6F8) + 36));
  uint64_t *v23 = v20;
  v23[1] = v22;
  return sub_255B4A7C8((uint64_t)v11, MEMORY[0x263F19048]);
}

uint64_t sub_255B44DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_255C801F8();
  uint64_t v7 = v6;
  uint64_t v8 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29B6C0) + 36);
  sub_255B44B88(v2, v8);
  uint64_t v9 = (uint64_t *)(v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29B920) + 36));
  *uint64_t v9 = v5;
  v9[1] = v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BAF8);
  long long v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);

  return v11(a2, a1, v10);
}

void sub_255B44E8C()
{
  switch(*v0)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      return;
    default:
      id v1 = objc_msgSend(self, sel_currentTraitCollection);
      objc_msgSend(v1, sel_displayScale);

      break;
  }
}

double sub_255B44F60()
{
  qword_269F331D8 = sub_255C7FC68();
  *(_OWORD *)&qword_269F331E0 = xmmword_255C8F910;
  double result = 0.0;
  *(_OWORD *)&qword_269F331F0 = xmmword_255C8F920;
  return result;
}

double sub_255B44F9C()
{
  qword_269F33200 = sub_255C7FC68();
  *(_OWORD *)&qword_269F33208 = xmmword_255C8F930;
  double result = 0.0;
  *(_OWORD *)&qword_269F33218 = xmmword_255C8F940;
  return result;
}

double sub_255B44FD8()
{
  qword_269F33228 = sub_255C7FC68();
  *(_OWORD *)&qword_269F33230 = xmmword_255C8A4F0;
  double result = 0.0;
  *(_OWORD *)&qword_269F33240 = xmmword_255C8F950;
  return result;
}

double sub_255B45014()
{
  qword_269F33250 = sub_255C7FC68();
  *(_OWORD *)&qword_269F33258 = xmmword_255C8F960;
  double result = 0.0;
  *(_OWORD *)&qword_269F33268 = xmmword_255C8F970;
  return result;
}

double sub_255B45050()
{
  qword_269F33278 = sub_255C7FC68();
  *(_OWORD *)&qword_269F33280 = xmmword_255C8F980;
  double result = 0.0;
  *(_OWORD *)&qword_269F33290 = xmmword_255C8F990;
  return result;
}

double sub_255B4508C()
{
  *(void *)&xmmword_26B2AA4B8 = sub_255C7FC78();
  double result = 0.0;
  *(long long *)((char *)&xmmword_26B2AA4B8 + 8) = 0u;
  *(_OWORD *)&qword_26B2AA4D0 = 0u;
  return result;
}

BOOL sub_255B450BC(double *a1, double *a2)
{
  double v2 = a1[1];
  double v3 = a1[2];
  double v5 = a1[3];
  double v4 = a1[4];
  double v6 = a2[1];
  double v7 = a2[2];
  double v9 = a2[3];
  double v8 = a2[4];
  char v10 = sub_255C7FC48();
  BOOL result = 0;
  if ((v10 & 1) != 0 && v2 == v6 && v3 == v7 && v5 == v9) {
    return v4 == v8;
  }
  return result;
}

uint64_t sub_255B45138()
{
  uint64_t v0 = type metadata accessor for ArtworkCornerStyle(0);
  __swift_allocate_value_buffer(v0, qword_269F332A0);
  id v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_269F332A0);
  id v2 = objc_msgSend(self, sel_currentTraitCollection);
  objc_msgSend(v2, sel_displayCornerRadius);
  uint64_t v4 = v3;

  double v5 = (char *)v1 + *(int *)(v0 + 20);
  uint64_t v6 = *MEMORY[0x263F19860];
  uint64_t v7 = sub_255C7E988();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  *id v1 = v4;
  return result;
}

uint64_t sub_255B4521C()
{
  uint64_t v0 = type metadata accessor for ArtworkCornerStyle(0);
  __swift_allocate_value_buffer(v0, qword_269F332B8);
  id v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_269F332B8);
  id v2 = (char *)v1 + *(int *)(v0 + 20);
  uint64_t v3 = *MEMORY[0x263F19868];
  uint64_t v4 = sub_255C7E988();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104))(v2, v3, v4);
  *id v1 = 0;
  return result;
}

uint64_t sub_255B452C0(double *a1, double *a2, uint64_t a3)
{
  if (*a1 == *a2) {
    return MEMORY[0x270F01348]((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), *a1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255B452E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  double v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v10 = (uint64_t *)((char *)&v23 - v9);
  uint64_t v11 = sub_255C7E518();
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  long long v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255ABC878((uint64_t)v10);
  uint64_t v15 = *v10;
  sub_255B4A7C8((uint64_t)v10, type metadata accessor for ArtworkCornerStyle);
  sub_255ABC878((uint64_t)v8);
  uint64_t v16 = &v8[*(int *)(v5 + 28)];
  uint64_t v17 = (char *)v14 + *(int *)(v12 + 28);
  uint64_t v18 = sub_255C7E988();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v17, v16, v18);
  *long long v14 = v15;
  v14[1] = v15;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  uint64_t v20 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29B6E0) + 36);
  sub_255B4A828((uint64_t)v14, v20, MEMORY[0x263F19048]);
  *(_WORD *)(v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B29F240) + 36)) = 256;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a2, a1, v21);
  return sub_255B4A7C8((uint64_t)v14, MEMORY[0x263F19048]);
}

uint64_t sub_255B4553C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v57 = a1;
  uint64_t v67 = a2;
  uint64_t v3 = type metadata accessor for ArtworkCornerModifier(0);
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v68 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x270FA5388](v6 - 8);
  double v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B690);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B820);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDA8);
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  id v58 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDA0);
  uint64_t v65 = *(void *)(v17 - 8);
  uint64_t v66 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v63 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDB0);
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v60 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  sub_255C7FE68();
  uint64_t v22 = (uint64_t *)&v12[*(int *)(v10 + 44)];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BBB0);
  sub_255B4A828((uint64_t)v8, (uint64_t)v22 + *(int *)(v23 + 28), type metadata accessor for ArtworkCornerStyle);
  *uint64_t v22 = KeyPath;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BAC8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v12, v57, v24);
  sub_255B4A7C8((uint64_t)v8, type metadata accessor for ArtworkCornerStyle);
  sub_255B4A828(v21, (uint64_t)v5, type metadata accessor for ArtworkCornerModifier);
  uint64_t v25 = *(unsigned __int8 *)(v68 + 80);
  uint64_t v26 = (v25 + 16) & ~v25;
  uint64_t v27 = (uint64_t (*)(uint64_t))(v26 + v4);
  uint64_t v68 = v25 | 7;
  uint64_t v28 = swift_allocObject();
  sub_255B48AA0((uint64_t)v5, v28 + v26, type metadata accessor for ArtworkCornerModifier);
  sub_255A09540((uint64_t)v12, (uint64_t)v15, &qword_26B29B690);
  uint64_t v29 = v13;
  uint64_t v30 = *(int *)(v13 + 36);
  unsigned int v57 = v15;
  uint64_t v31 = (uint64_t (**)())&v15[v30];
  *uint64_t v31 = sub_255B4B654;
  v31[1] = (uint64_t (*)())v28;
  void v31[2] = 0;
  void v31[3] = 0;
  sub_255A095A4((uint64_t)v12, &qword_26B29B690);
  uint64_t v32 = *(void *)(v21 + 96);
  if (v32)
  {
    LOBYTE(v70) = *(unsigned char *)(v32 + 16);
    unsigned int v56 = type metadata accessor for ArtworkCornerModifier;
    sub_255B4A828(v21, (uint64_t)v5, type metadata accessor for ArtworkCornerModifier);
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v27;
    uint64_t v55 = type metadata accessor for ArtworkCornerModifier;
    sub_255B48AA0((uint64_t)v5, v33 + v26, type metadata accessor for ArtworkCornerModifier);
    uint64_t v35 = sub_255B4B6FC(&qword_26B29B818, &qword_26B29B820, (void (*)(void))sub_255B4B778);
    unint64_t v36 = sub_255B341B8();
    uint64_t v37 = (uint64_t)v57;
    uint64_t v38 = v58;
    sub_255C7FB48();
    swift_release();
    sub_255A095A4(v37, &qword_26B29B820);
    uint64_t v39 = *(void *)v21;
    char v40 = *(unsigned char *)(v21 + 8);
    sub_255A0877C(*(void *)v21, v40);
    sub_255ABBCDC(v39, v40, v69);
    sub_255A087D0(v39, v40);
    char v74 = v69[0];
    sub_255B4A828(v21, (uint64_t)v5, v56);
    unsigned int v56 = v34;
    uint64_t v41 = swift_allocObject();
    unsigned int v57 = (char *)v26;
    uint64_t v42 = (uint64_t)v5;
    sub_255B48AA0((uint64_t)v5, v41 + v26, v55);
    uint64_t v70 = v29;
    uint64_t v71 = &type metadata for NowPlayingViewModel.Lifecycle.TransitionPhase;
    uint64_t v72 = v35;
    unint64_t v73 = v36;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v44 = sub_255AC6580();
    id v45 = v63;
    uint64_t v46 = v61;
    sub_255C7FB38();
    swift_release();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v46);
    uint64_t v47 = *(void *)(v21 + 80);
    if (v47)
    {
      swift_beginAccess();
      char v74 = *(unsigned char *)(v47 + 16);
      sub_255B4A828(v21, v42, type metadata accessor for ArtworkCornerModifier);
      uint64_t v48 = swift_allocObject();
      sub_255B48AA0(v42, (uint64_t)&v57[v48], type metadata accessor for ArtworkCornerModifier);
      uint64_t v70 = v46;
      uint64_t v71 = &type metadata for NowPlayingArtwork.Placement;
      uint64_t v72 = OpaqueTypeConformance2;
      unint64_t v73 = v44;
      swift_getOpaqueTypeConformance2();
      unint64_t v49 = v60;
      uint64_t v50 = v66;
      sub_255C7FB48();
      swift_release();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v50);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v62 + 32))(v67, v49, v64);
    }
    _s14DefaultArtworkCMa();
    uint64_t v52 = &qword_26B299E98;
    uint64_t v53 = _s14DefaultArtworkCMa;
  }
  else
  {
    type metadata accessor for NowPlayingViewModel.Lifecycle();
    uint64_t v52 = &qword_26B29A200;
    uint64_t v53 = type metadata accessor for NowPlayingViewModel.Lifecycle;
  }
  sub_255B4A6EC(v52, (void (*)(uint64_t))v53);
  uint64_t result = sub_255C7E618();
  __break(1u);
  return result;
}

uint64_t sub_255B45DF4()
{
  sub_255B48B08();

  return sub_255C7E8C8();
}

uint64_t sub_255B45E3C()
{
  return sub_255C7E8C8();
}

uint64_t sub_255B45E7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_255B4A828(a1, (uint64_t)&v9 - v6, type metadata accessor for ArtworkCornerStyle);
  sub_255B4A828((uint64_t)v7, (uint64_t)v5, type metadata accessor for ArtworkCornerStyle);
  sub_255B48B08();
  sub_255C7E8D8();
  return sub_255B4A7C8((uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
}

uint64_t sub_255B45F84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (uint64_t *)&v11[-v6];
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  sub_255A0877C(*(void *)a1, v9);
  sub_255ABBCDC(v8, v9, &v12);
  sub_255A087D0(v8, v9);
  sub_255B460C0(&v12, v7);
  type metadata accessor for ArtworkCornerModifier(0);
  sub_255B4A828((uint64_t)v7, (uint64_t)v5, type metadata accessor for ArtworkCornerStyle);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  sub_255C7FE78();
  return sub_255B4A7C8((uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
}

uint64_t sub_255B460C0@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ArtworkCornerModifier(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 - 2 < 3)
  {
    char v9 = (char *)a2 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v10 = *MEMORY[0x263F19860];
    uint64_t v11 = sub_255C7E988();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
    uint64_t v13 = 0x401A000000000000;
LABEL_3:
    *a2 = v13;
    return result;
  }
  if (*a1)
  {
    if (qword_269F200A0 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for ArtworkCornerStyle(0);
    uint64_t v18 = qword_269F332A0;
    goto LABEL_14;
  }
  sub_255ABA420((uint64_t)v24);
  uint64_t v14 = v25;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  LOBYTE(v14) = sub_255AC1DB8(v14);
  sub_255B4A828(v3, (uint64_t)v8, type metadata accessor for ArtworkCornerModifier);
  if ((v14 & 1) == 0)
  {
    sub_255B4A7C8((uint64_t)v8, type metadata accessor for ArtworkCornerModifier);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    goto LABEL_16;
  }
  uint64_t v15 = *((void *)v8 + 10);
  if (v15)
  {
    swift_beginAccess();
    char v16 = *(unsigned char *)(v15 + 16);
    sub_255B4A7C8((uint64_t)v8, type metadata accessor for ArtworkCornerModifier);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    if (v16)
    {
      if (qword_269F200A8 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for ArtworkCornerStyle(0);
      uint64_t v18 = qword_269F332B8;
LABEL_14:
      uint64_t v19 = __swift_project_value_buffer(v17, (uint64_t)v18);
      return sub_255B4A828(v19, (uint64_t)a2, type metadata accessor for ArtworkCornerStyle);
    }
LABEL_16:
    uint64_t v20 = (char *)a2 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v21 = *MEMORY[0x263F19868];
    uint64_t v22 = sub_255C7E988();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
    uint64_t v13 = 0x4024000000000000;
    goto LABEL_3;
  }
  _s14DefaultArtworkCMa();
  sub_255B4A6EC(&qword_26B299E98, (void (*)(uint64_t))_s14DefaultArtworkCMa);
  uint64_t result = sub_255C7E618();
  __break(1u);
  return result;
}

uint64_t sub_255B463E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  sub_255A0877C(*(void *)a1, v6);
  sub_255ABBCDC(v5, v6, &v11);
  uint64_t result = sub_255A087D0(v5, v6);
  if (v11 == 1)
  {
    uint64_t v8 = *(void *)(a1 + 96);
    if (v8)
    {
      if (*(unsigned __int8 *)(v8 + 16) - 1 < 3)
      {
        if (qword_269F200A8 != -1) {
          swift_once();
        }
        uint64_t v9 = __swift_project_value_buffer(v2, (uint64_t)qword_269F332B8);
        type metadata accessor for ArtworkCornerModifier(0);
        sub_255B4A828(v9, (uint64_t)v4, type metadata accessor for ArtworkCornerStyle);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
        return sub_255C7FE78();
      }
    }
    else
    {
      type metadata accessor for NowPlayingViewModel.Lifecycle();
      sub_255B4A6EC(&qword_26B29A200, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle);
      uint64_t result = sub_255C7E618();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_255B465A0(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_255C803B8();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_255C803E8();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v30 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ArtworkCornerModifier(0);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v29 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v16 = (uint64_t *)((char *)&v28 - v15);
  char v17 = *a1;
  char v18 = *a2;
  uint64_t v19 = *(void *)(v3 + 64);
  LOBYTE(a2) = *(unsigned char *)(v3 + 72);
  sub_255A0877C(v19, (char)a2);
  sub_255ABB578(v19, (char)a2, aBlock);
  sub_255A087D0(v19, (char)a2);
  if (LOBYTE(aBlock[0]))
  {
    LOBYTE(aBlock[0]) = v18;
    sub_255B460C0(aBlock, v16);
    sub_255B4A828((uint64_t)v16, (uint64_t)v14, type metadata accessor for ArtworkCornerStyle);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
    sub_255C7FE78();
    return sub_255B4A7C8((uint64_t)v16, type metadata accessor for ArtworkCornerStyle);
  }
  else
  {
    LOBYTE(aBlock[0]) = v17;
    sub_255B460C0(aBlock, v16);
    sub_255B4A828((uint64_t)v16, (uint64_t)v14, type metadata accessor for ArtworkCornerStyle);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
    sub_255C7FE78();
    sub_255B4A7C8((uint64_t)v16, type metadata accessor for ArtworkCornerStyle);
    sub_255A6C3AC();
    uint64_t v21 = (void *)sub_255C80C88();
    sub_255B4A828(v3, (uint64_t)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkCornerModifier);
    unint64_t v22 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v23 = swift_allocObject();
    sub_255B48AA0((uint64_t)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for ArtworkCornerModifier);
    *(unsigned char *)(v23 + v22 + v10) = v18;
    aBlock[4] = sub_255B4BA64;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_255AE4914;
    aBlock[3] = &block_descriptor_14;
    uint64_t v24 = _Block_copy(aBlock);
    swift_release();
    uint64_t v25 = v30;
    sub_255C803D8();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_255B4A6EC((unint64_t *)&qword_26B29F370, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F390);
    sub_255A09998((unint64_t *)&qword_26B29FC50, &qword_26B29F390);
    uint64_t v26 = v32;
    uint64_t v27 = v35;
    sub_255C80F78();
    MEMORY[0x25A296510](0, v25, v26, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v25, v33);
  }
}

uint64_t sub_255B46AE8(uint64_t a1)
{
  sub_255ABA420((uint64_t)v6);
  uint64_t v2 = v7;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  LOBYTE(v2) = sub_255AC1DB8(v2);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  if (v2)
  {
    uint64_t v4 = *(void *)a1;
    char v5 = *(unsigned char *)(a1 + 8);
    sub_255A0877C(*(void *)a1, v5);
    sub_255ABBCDC(v4, v5, v6);
    uint64_t result = sub_255A087D0(v4, v5);
    if (!LOBYTE(v6[0]))
    {
      MEMORY[0x270FA5388](result);
      sub_255C802A8();
      sub_255C7E1E8();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_255B46BF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (uint64_t *)((char *)&v14 - v6);
  uint64_t v8 = *(void *)(a1 + 80);
  if (v8)
  {
    swift_beginAccess();
    if (*(unsigned char *)(v8 + 16))
    {
      if (qword_269F200A8 != -1) {
        swift_once();
      }
      uint64_t v9 = __swift_project_value_buffer(v2, (uint64_t)qword_269F332B8);
      sub_255B4A828(v9, (uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
    }
    else
    {
      uint64_t v10 = (char *)v7 + *(int *)(v2 + 20);
      uint64_t v11 = *MEMORY[0x263F19868];
      uint64_t v12 = sub_255C7E988();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
      *uint64_t v7 = 0x4024000000000000;
    }
    type metadata accessor for ArtworkCornerModifier(0);
    sub_255B4A828((uint64_t)v7, (uint64_t)v5, type metadata accessor for ArtworkCornerStyle);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
    sub_255C7FE78();
    return sub_255B4A7C8((uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
  }
  else
  {
    _s14DefaultArtworkCMa();
    sub_255B4A6EC(&qword_26B299E98, (void (*)(uint64_t))_s14DefaultArtworkCMa);
    uint64_t result = sub_255C7E618();
    __break(1u);
  }
  return result;
}

uint64_t sub_255B46E40(uint64_t a1, int a2)
{
  int v20 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2985E0);
  MEMORY[0x270FA5388](v3 - 8);
  char v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ArtworkCornerModifier(0);
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = sub_255C7F018();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(self, sel_sharedInstance);
  id v13 = objc_msgSend(v12, sel_defaultSheetMetrics);

  id v14 = objc_msgSend(v13, sel_transitionSpringParametersHighSpeed_, 0);
  objc_msgSend(v14, sel__response);
  objc_msgSend(v14, sel__dampingRatio);
  uint64_t v15 = sub_255C80298();

  sub_255C7F008();
  uint64_t v21 = a1;
  LOBYTE(v14) = v20;
  char v22 = v20;
  sub_255B4A828(a1, (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkCornerModifier);
  unint64_t v16 = (*(unsigned __int8 *)(v19 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = (_BYTE)v14;
  sub_255B48AA0((uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for ArtworkCornerModifier);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v5, v11, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  sub_255A7D9C0(v15, 1, (uint64_t)v5, (uint64_t)sub_255B4BC64);
  sub_255A095A4((uint64_t)v5, &qword_26B2985E0);
  sub_255C7E4A8();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_255B471CC(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - v7;
  char v11 = a2;
  sub_255B460C0(&v11, (uint64_t *)((char *)&v10 - v7));
  type metadata accessor for ArtworkCornerModifier(0);
  sub_255B4A828((uint64_t)v8, (uint64_t)v6, type metadata accessor for ArtworkCornerStyle);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  sub_255C7FE78();
  return sub_255B4A7C8((uint64_t)v8, type metadata accessor for ArtworkCornerStyle);
}

uint64_t sub_255B472E8(unsigned __int8 a1, uint64_t a2)
{
  int v3 = a1;
  uint64_t v4 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3 == 1)
  {
    uint64_t v8 = *(void *)(a2 + 96);
    if (v8)
    {
      if (*(unsigned __int8 *)(v8 + 16) - 1 < 3)
      {
        if (qword_269F200A8 != -1)
        {
          uint64_t v10 = result;
          swift_once();
          uint64_t result = v10;
        }
        uint64_t v9 = __swift_project_value_buffer(result, (uint64_t)qword_269F332B8);
        type metadata accessor for ArtworkCornerModifier(0);
        sub_255B4A828(v9, (uint64_t)v7, type metadata accessor for ArtworkCornerStyle);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
        return sub_255C7FE78();
      }
    }
    else
    {
      type metadata accessor for NowPlayingViewModel.Lifecycle();
      sub_255B4A6EC(&qword_26B29A200, (void (*)(uint64_t))type metadata accessor for NowPlayingViewModel.Lifecycle);
      uint64_t result = sub_255C7E618();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_255B47474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_255C7E958();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v42 - v6;
  uint64_t v43 = type metadata accessor for ArtworkCornerStyle(0);
  MEMORY[0x270FA5388](v43);
  uint64_t v8 = (uint64_t *)((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_255C7E518();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = sub_255C7E508();
  MEMORY[0x270FA5388](v44);
  id v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B550);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B700);
  MEMORY[0x270FA5388](v45);
  char v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B838);
  uint64_t v54 = *(void *)(v19 - 8);
  uint64_t v55 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  float64x2_t v22 = *(float64x2_t *)(a1 + 8);
  float64x2_t v52 = *(float64x2_t *)(a1 + 24);
  float64x2_t v53 = v22;
  if (qword_26B2986A8 != -1) {
    swift_once();
  }
  float64x2_t v50 = *(float64x2_t *)&qword_26B2AA4D0;
  float64x2_t v51 = *(float64x2_t *)((char *)&xmmword_26B2AA4B8 + 8);
  char v23 = sub_255C7FC48();
  if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v53, v51), (int32x4_t)vceqq_f64(v52, v50))), 0xFuLL))) & 1) != 0&& (v23)
  {
    uint64_t v24 = v55;
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
    uint64_t v26 = v56;
    return v25(v26, 1, 1, v24);
  }
  else
  {
    type metadata accessor for ArtworkShadowModifier(0);
    sub_255ABC878((uint64_t)v8);
    uint64_t v28 = *v8;
    uint64_t v29 = (char *)v8 + *(int *)(v43 + 20);
    uint64_t v30 = (char *)v11 + *(int *)(v9 + 20);
    uint64_t v31 = sub_255C7E988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v30, v29, v31);
    *uint64_t v11 = v28;
    v11[1] = v28;
    sub_255B4A7C8((uint64_t)v8, type metadata accessor for ArtworkCornerStyle);
    sub_255B4A828((uint64_t)v11, (uint64_t)v13, MEMORY[0x263F19048]);
    *(void *)&v13[*(int *)(v44 + 20)] = 0x3FF0000000000000;
    sub_255B4A7C8((uint64_t)v11, MEMORY[0x263F19048]);
    uint64_t v32 = sub_255C7FC88();
    sub_255B4A828((uint64_t)v13, (uint64_t)v16, MEMORY[0x263F19028]);
    *(void *)&v16[*(int *)(v14 + 52)] = v32;
    *(_WORD *)&v16[*(int *)(v14 + 56)] = 256;
    sub_255B4A7C8((uint64_t)v13, MEMORY[0x263F19028]);
    uint64_t v33 = sub_255C7FCA8();
    float64x2_t v53 = *(float64x2_t *)(a1 + 16);
    uint64_t v34 = *(void *)(a1 + 32);
    sub_255A09540((uint64_t)v16, (uint64_t)v18, &qword_26B29B550);
    uint64_t v35 = &v18[*(int *)(v45 + 36)];
    *(void *)uint64_t v35 = v33;
    *(float64x2_t *)(v35 + 8) = v53;
    *((void *)v35 + 3) = v34;
    sub_255A095A4((uint64_t)v16, &qword_26B29B550);
    unint64_t v36 = v47;
    sub_255C7E948();
    uint64_t v38 = v48;
    uint64_t v37 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v46, v36, v49);
    sub_255B4A6EC(&qword_269F24AE8, MEMORY[0x263F197F0]);
    uint64_t v39 = sub_255C7E088();
    sub_255A09540((uint64_t)v18, (uint64_t)v21, &qword_26B29B700);
    uint64_t v40 = v55;
    *(void *)&v21[*(int *)(v55 + 36)] = v39;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
    sub_255A095A4((uint64_t)v18, &qword_26B29B700);
    uint64_t v41 = v56;
    sub_255A10514((uint64_t)v21, v56, &qword_26B29B838);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v41, 0, 1, v40);
  }
}

uint64_t sub_255B47AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B6A0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_255C801F8();
  uint64_t v12 = v11;
  uint64_t v13 = (uint64_t)&v9[*(int *)(v7 + 44)];
  sub_255B47474(v3, v13);
  uint64_t v14 = (uint64_t *)(v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29BA20) + 36));
  *uint64_t v14 = v10;
  v14[1] = v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BAD8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v9, a1, v15);
  sub_255A09540((uint64_t)v9, a2, &qword_26B29B6A0);
  return sub_255A095A4((uint64_t)v9, &qword_26B29B6A0);
}

uint64_t sub_255B47BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v32 = a2;
  uint64_t v31 = type metadata accessor for ArtworkShadowModifier(0) - 8;
  MEMORY[0x270FA5388](v31);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ArtworkInnerStrokeModifier(0);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for ArtworkClipShape(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B670);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B810);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  swift_storeEnumTagMultiPayload();
  sub_255B48AA0((uint64_t)v11, (uint64_t)&v15[*(int *)(v13 + 44)], type metadata accessor for ArtworkClipShape);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BAA8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v30, v20);
  sub_255C7FC68();
  uint64_t v21 = sub_255C7FCA8();
  swift_release();
  uint64_t v22 = *(void *)v2;
  *uint64_t v8 = v21;
  v8[1] = v22;
  char v23 = (uint64_t *)((char *)v8 + *(int *)(v6 + 32));
  uint64_t *v23 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_255A09540((uint64_t)v15, (uint64_t)v19, &qword_26B29B670);
  sub_255B48AA0((uint64_t)v8, (uint64_t)&v19[*(int *)(v17 + 44)], type metadata accessor for ArtworkInnerStrokeModifier);
  sub_255A095A4((uint64_t)v15, &qword_26B29B670);
  *(void *)uint64_t v4 = *(void *)(v2 + 8);
  long long v24 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v4 + 24) = v24;
  uint64_t v25 = (uint64_t *)&v4[*(int *)(v31 + 28)];
  *uint64_t v25 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v32;
  sub_255A09540((uint64_t)v19, v32, &qword_26B29B810);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B8B8);
  sub_255B48AA0((uint64_t)v4, v26 + *(int *)(v27 + 36), type metadata accessor for ArtworkShadowModifier);
  swift_retain();
  return sub_255A095A4((uint64_t)v19, &qword_26B29B810);
}

uint64_t sub_255B47F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255B47BF8(a1, a2);
}

uint64_t sub_255B47FBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B47FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  char v6 = *(unsigned char *)(v2 + 8);
  long long v22 = *(_OWORD *)(v2 + 32);
  long long v23 = *(_OWORD *)(v2 + 16);
  long long v20 = *(_OWORD *)(v2 + 64);
  long long v21 = *(_OWORD *)(v2 + 48);
  uint64_t v7 = *(void *)(v2 + 80);
  char v8 = *(unsigned char *)(v2 + 88);
  char v9 = *(unsigned char *)(v2 + 89);
  uint64_t v10 = *(void *)(v2 + 96);
  uint64_t v11 = *(void *)(v2 + 104);
  sub_255A0877C(*(void *)v2, v6);
  sub_255ABBCDC(v5, v6, &v25);
  sub_255A087D0(v5, v6);
  sub_255B44E8C();
  uint64_t v13 = v12;
  uint64_t v25 = v5;
  char v26 = v6;
  long long v27 = v23;
  long long v28 = v22;
  long long v29 = v21;
  long long v30 = v20;
  uint64_t v31 = v7;
  char v32 = v8;
  char v33 = v9;
  uint64_t v34 = v10;
  uint64_t v35 = v11;
  sub_255B48630(&v36);
  uint64_t v14 = v36;
  long long v24 = v37;
  uint64_t v15 = v38;
  uint64_t v16 = v39;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a2, a1, v17);
  uint64_t v18 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29B680) + 36);
  *(void *)uint64_t v18 = v13;
  *(void *)(v18 + 8) = v14;
  *(_OWORD *)(v18 + 16) = v24;
  *(void *)(v18 + 32) = v15;
  *(void *)(v18 + 40) = v16;
  return sub_255A12480((uint64_t)&v36);
}

uint64_t sub_255B48154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for ArtworkInnerStrokeModifier(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  char v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ArtworkClipShape(0);
  MEMORY[0x270FA5388](v7 - 8);
  char v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24AF0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24AF8);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)v2;
  char v19 = *(unsigned char *)(v2 + 8);
  *char v9 = swift_getKeyPath();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  swift_storeEnumTagMultiPayload();
  sub_255B48AA0((uint64_t)v9, (uint64_t)&v13[*(int *)(v11 + 44)], type metadata accessor for ArtworkClipShape);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24B00);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v13, v26, v20);
  sub_255C7FC68();
  sub_255A0877C(v18, v19);
  sub_255ABBCDC(v18, v19, &v29);
  sub_255A087D0(v18, v19);
  uint64_t v21 = sub_255C7FCA8();
  swift_release();
  sub_255A0877C(v18, v19);
  sub_255ABBCDC(v18, v19, &v28);
  sub_255A087D0(v18, v19);
  sub_255B44E8C();
  *char v6 = v21;
  v6[1] = v22;
  long long v23 = (uint64_t *)((char *)v6 + *(int *)(v4 + 32));
  uint64_t *v23 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_255A09540((uint64_t)v13, (uint64_t)v17, &qword_269F24AF0);
  sub_255B48AA0((uint64_t)v6, (uint64_t)&v17[*(int *)(v15 + 44)], type metadata accessor for ArtworkInnerStrokeModifier);
  sub_255A095A4((uint64_t)v13, &qword_269F24AF0);
  return sub_255A10514((uint64_t)v17, v27, &qword_269F24AF8);
}

uint64_t sub_255B48478()
{
  uint64_t v0 = type metadata accessor for ArtworkCornerStyle(0);
  __swift_allocate_value_buffer(v0, qword_26B297B60);
  id v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_26B297B60);
  *id v1 = 0;
  uint64_t v2 = (char *)v1 + *(int *)(v0 + 20);
  uint64_t v3 = *MEMORY[0x263F19868];
  uint64_t v4 = sub_255C7E988();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);

  return v5(v2, v3, v4);
}

uint64_t sub_255B4851C@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B29A7F0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ArtworkCornerStyle(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B297B60);
  return sub_255B4A828(v3, a1, type metadata accessor for ArtworkCornerStyle);
}

uint64_t sub_255B4859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_255B4A6EC(&qword_269F24AE0, (void (*)(uint64_t))type metadata accessor for ArtworkCornerStyle);

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_255B48630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v21 = *(void *)(v1 + 24);
  uint64_t v22 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v24 = *(void *)(v1 + 40);
  uint64_t v25 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  char v9 = *(unsigned char *)(v1 + 88);
  char v10 = *(unsigned char *)(v1 + 89);
  uint64_t v23 = *(void *)(v1 + 96);
  sub_255A0877C(*(void *)v1, v3);
  sub_255ABBCDC(v2, v3, &v29);
  uint64_t result = sub_255A087D0(v2, v3);
  switch(v29)
  {
    case 1:
    case 3:
    case 4:
      if (qword_26B2986A8 != -1) {
        uint64_t result = swift_once();
      }
      uint64_t v12 = (uint64_t *)&xmmword_26B2AA4B8;
      goto LABEL_8;
    case 2:
      if (qword_269F20070 != -1) {
        uint64_t result = swift_once();
      }
      uint64_t v12 = &qword_269F331D8;
LABEL_8:
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = v12[2];
      uint64_t v16 = v12[3];
      uint64_t v17 = v12[4];
      uint64_t v18 = a1;
      goto LABEL_9;
    default:
      uint64_t v30 = v22;
      uint64_t v31 = v21;
      uint64_t v32 = v25;
      uint64_t v33 = v24;
      uint64_t v34 = v4;
      uint64_t v35 = v6;
      uint64_t v36 = v5;
      uint64_t v37 = v7;
      uint64_t v38 = v8;
      char v39 = v9;
      char v40 = v10;
      sub_255A1CFDC(v22, v21, v25, v24, v4, v6, v5, v7, v8, v9, v10);
      sub_255AB99F4((uint64_t)v27);
      sub_255A1D054(v22, v21, v25, v24, v4, v6, v5, v7, v8, v9, v10);
      if (v28 == 9)
      {
        uint64_t v19 = v23;
      }
      else
      {
        uint64_t v19 = v23;
        if (!v28)
        {
          if (v23)
          {
            uint64_t result = swift_beginAccess();
            if (*(unsigned char *)(v23 + 16))
            {
              uint64_t v18 = a1;
              if (qword_269F20088 != -1) {
                uint64_t result = swift_once();
              }
              uint64_t v20 = &qword_269F33250;
            }
            else
            {
              uint64_t v18 = a1;
              if (qword_269F20090 != -1) {
                uint64_t result = swift_once();
              }
              uint64_t v20 = &qword_269F33278;
            }
            goto LABEL_21;
          }
LABEL_30:
          _s14DefaultArtworkCMa();
          sub_255B4A6EC(&qword_26B299E98, (void (*)(uint64_t))_s14DefaultArtworkCMa);
          sub_255C7E618();
          __break(1u);
          JUMPOUT(0x255B489E8);
        }
      }
      if (!v19) {
        goto LABEL_30;
      }
      uint64_t result = swift_beginAccess();
      if (*(unsigned char *)(v19 + 16))
      {
        uint64_t v18 = a1;
        if (qword_269F20078 != -1) {
          uint64_t result = swift_once();
        }
        uint64_t v20 = &qword_269F33200;
      }
      else
      {
        uint64_t v18 = a1;
        if (qword_269F20080 != -1) {
          uint64_t result = swift_once();
        }
        uint64_t v20 = &qword_269F33228;
      }
LABEL_21:
      uint64_t v16 = v20[3];
      uint64_t v17 = v20[4];
      uint64_t v14 = v20[1];
      uint64_t v15 = v20[2];
      uint64_t v13 = *v20;
LABEL_9:
      *uint64_t v18 = v13;
      v18[1] = v14;
      void v18[2] = v15;
      void v18[3] = v16;
      v18[4] = v17;
      return result;
  }
}

uint64_t type metadata accessor for ArtworkShadowModifier(uint64_t a1)
{
  return sub_255A151B4(a1, qword_26B29A830);
}

uint64_t type metadata accessor for ArtworkInnerStrokeModifier(uint64_t a1)
{
  return sub_255A151B4(a1, qword_26B29AD98);
}

uint64_t type metadata accessor for ArtworkClipShape(uint64_t a1)
{
  return sub_255A151B4(a1, (uint64_t *)&unk_26B298DC0);
}

uint64_t sub_255B48A5C()
{
  return sub_255C7E8C8();
}

uint64_t sub_255B48AA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_255B48B08()
{
  unint64_t result = qword_26B29A7F8;
  if (!qword_26B29A7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29A7F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkCornerStyleKey()
{
  return &type metadata for ArtworkCornerStyleKey;
}

uint64_t sub_255B48B6C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      char v10 = (char *)v7 + v9;
      uint64_t v11 = (char *)v8 + v9;
      uint64_t v12 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B48CB8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v6 = sub_255C7E988();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255B48D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v5 = *v6;
    uint64_t v7 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v8 = (char *)v5 + v7;
    uint64_t v9 = (char *)v6 + v7;
    uint64_t v10 = sub_255C7E988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255B48E7C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, &qword_26B29B568);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      uint64_t v10 = (char *)v7 + v9;
      uint64_t v11 = (char *)v8 + v9;
      uint64_t v12 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B48FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v6 = *v7;
    uint64_t v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v10 = (char *)v6 + v9;
    uint64_t v11 = (char *)v7 + v9;
    uint64_t v12 = sub_255C7E988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255B490B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_255A095A4(a1 + v6, &qword_26B29B568);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      uint64_t v11 = (char *)v7 + v10;
      uint64_t v12 = (char *)v8 + v10;
      uint64_t v13 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B491E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B491F8);
}

uint64_t sub_255B491F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24AD8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255B492AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B492C0);
}

void *sub_255B492C0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24AD8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255B4936C()
{
  sub_255B4B32C(319, (unint64_t *)&unk_26B29B570, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_255B49420(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      uint64_t v10 = (char *)v7 + v9;
      uint64_t v11 = (char *)v8 + v9;
      uint64_t v12 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B49564(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v6 = sub_255C7E988();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

void *sub_255B4962C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v6 = *v7;
    uint64_t v8 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v9 = (char *)v6 + v8;
    uint64_t v10 = (char *)v7 + v8;
    uint64_t v11 = sub_255C7E988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255B49718(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, &qword_26B29B568);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      uint64_t v10 = (char *)v7 + v9;
      uint64_t v11 = (char *)v8 + v9;
      uint64_t v12 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_255B49838(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v5 = *v6;
    uint64_t v8 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v9 = (char *)v5 + v8;
    uint64_t v10 = (char *)v6 + v8;
    uint64_t v11 = sub_255C7E988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_255B49930(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255A095A4((uint64_t)a1 + v6, &qword_26B29B568);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      uint64_t v11 = (char *)v7 + v10;
      uint64_t v12 = (char *)v8 + v10;
      uint64_t v13 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B49A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B49A6C);
}

uint64_t sub_255B49A6C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24AD8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255B49B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B49B34);
}

void *sub_255B49B34(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24AD8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255B49BE0()
{
  sub_255B4B32C(319, (unint64_t *)&unk_26B29B570, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_255B49CA4(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255B49DCC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = a1 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v3 = sub_255C7E988();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

void *sub_255B49E80(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v4 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    uint64_t v7 = sub_255C7E988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255B49F50(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, &qword_26B29B568);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v4 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_255B4A038(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_255C7E988();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_255B4A118(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_255A095A4((uint64_t)a1, &qword_26B29B568);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29B568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_255C7E988();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255B4A210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B4A224);
}

uint64_t sub_255B4A224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24AD8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_255B4A294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B4A2A8);
}

uint64_t sub_255B4A2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F24AD8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_255B4A31C()
{
  sub_255B4B32C(319, (unint64_t *)&unk_26B29B570, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for ArtworkShadow()
{
  return swift_release();
}

uint64_t initializeWithCopy for ArtworkShadow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

void *assignWithCopy for ArtworkShadow(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for ArtworkShadow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for ArtworkShadow()
{
  return &type metadata for ArtworkShadow;
}

unint64_t sub_255B4A4D0()
{
  unint64_t result = qword_26B29B678;
  if (!qword_26B29B678)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B680);
    sub_255A09998(&qword_26B29BAB0, &qword_26B29BAB8);
    sub_255A54ED8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B678);
  }
  return result;
}

unint64_t sub_255B4A574()
{
  unint64_t result = qword_26B29B8B0;
  if (!qword_26B29B8B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B8B8);
    sub_255B4A620();
    sub_255B4A6EC(qword_26B29A800, (void (*)(uint64_t))type metadata accessor for ArtworkShadowModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B8B0);
  }
  return result;
}

unint64_t sub_255B4A620()
{
  unint64_t result = qword_26B29B808;
  if (!qword_26B29B808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B810);
    sub_255B4BEEC(&qword_26B29B668, &qword_26B29B670, &qword_26B29BAA0, &qword_26B29BAA8);
    sub_255B4A6EC(qword_26B29AD60, (void (*)(uint64_t))type metadata accessor for ArtworkInnerStrokeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B808);
  }
  return result;
}

uint64_t sub_255B4A6EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B4A734()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B4A750()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B4A76C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ArtworkCornerModifier(uint64_t a1)
{
  return sub_255A151B4(a1, qword_26B29A780);
}

uint64_t sub_255B4A7C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255B4A828(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_255B4A890(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_255A0877C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = (void *)(a1 + 16);
    uint64_t v10 = (void *)(a2 + 16);
    char v11 = *(unsigned char *)(a2 + 56);
    if (v11)
    {
      long long v12 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 40) = v12;
      (**(void (***)(void *, void *))(v12 - 8))(v9, v10);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    *(unsigned char *)(a1 + 56) = v11;
    uint64_t v14 = *(void *)(a2 + 64);
    char v15 = *(unsigned char *)(a2 + 72);
    sub_255A0877C(v14, v15);
    *(void *)(a1 + 64) = v14;
    *(unsigned char *)(a1 + 72) = v15;
    uint64_t v16 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v16;
    uint64_t v17 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v17;
    uint64_t v18 = *(int *)(a3 + 36);
    uint64_t v19 = a1 + v18;
    uint64_t v20 = a2 + v18;
    *(void *)(a1 + v18) = *(void *)(a2 + v18);
    uint64_t v21 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
    uint64_t v22 = v19 + v21;
    uint64_t v23 = v20 + v21;
    uint64_t v24 = sub_255C7E988();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_retain();
    swift_retain();
    v25(v22, v23, v24);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
    *(void *)(v19 + *(int *)(v26 + 28)) = *(void *)(v20 + *(int *)(v26 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_255B4AA60(uint64_t a1, uint64_t a2)
{
  sub_255A087D0(*(void *)a1, *(unsigned char *)(a1 + 8));
  if (*(unsigned char *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  }
  else {
    swift_release();
  }
  sub_255A087D0(*(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  uint64_t v6 = sub_255C7E988();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);

  return swift_release();
}

uint64_t sub_255B4AB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  char v8 = (void *)(a1 + 16);
  uint64_t v9 = (void *)(a2 + 16);
  char v10 = *(unsigned char *)(a2 + 56);
  if (v10)
  {
    long long v11 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v11;
    (**(void (***)(void *, void *))(v11 - 8))(v8, v9);
  }
  else
  {
    *char v8 = *v9;
    swift_retain();
  }
  *(unsigned char *)(a1 + 56) = v10;
  uint64_t v12 = *(void *)(a2 + 64);
  char v13 = *(unsigned char *)(a2 + 72);
  sub_255A0877C(v12, v13);
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v13;
  uint64_t v14 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v14;
  uint64_t v15 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v15;
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v19 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  uint64_t v20 = v17 + v19;
  uint64_t v21 = v18 + v19;
  uint64_t v22 = sub_255C7E988();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_retain();
  swift_retain();
  v23(v20, v21, v22);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  *(void *)(v17 + *(int *)(v24 + 28)) = *(void *)(v18 + *(int *)(v24 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_255B4ACC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_255A0877C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_255A087D0(v8, v9);
  if (a1 != a2)
  {
    sub_255A095A4(a1 + 16, &qword_26B29B580);
    if (*(unsigned char *)(a2 + 56))
    {
      uint64_t v10 = *(void *)(a2 + 40);
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16);
      *(unsigned char *)(a1 + 56) = 1;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 56) = 0;
      swift_retain();
    }
  }
  uint64_t v11 = *(void *)(a2 + 64);
  char v12 = *(unsigned char *)(a2 + 72);
  sub_255A0877C(v11, v12);
  uint64_t v13 = *(void *)(a1 + 64);
  char v14 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  sub_255A087D0(v13, v14);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v18 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  uint64_t v19 = v16 + v18;
  uint64_t v20 = v17 + v18;
  uint64_t v21 = sub_255C7E988();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  *(void *)(v16 + *(int *)(v22 + 28)) = *(void *)(v17 + *(int *)(v22 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_255B4AE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  uint64_t v9 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = v8 + v9;
  uint64_t v12 = sub_255C7E988();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  *(void *)(v7 + *(int *)(v13 + 28)) = *(void *)(v8 + *(int *)(v13 + 28));
  return a1;
}

uint64_t sub_255B4AF84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_255A087D0(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    sub_255A095A4(a1 + 16, &qword_26B29B580);
    long long v10 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  char v11 = *((unsigned char *)a2 + 72);
  uint64_t v12 = *(void *)(a1 + 64);
  char v13 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = a2[8];
  *(unsigned char *)(a1 + 72) = v11;
  sub_255A087D0(v12, v13);
  *(void *)(a1 + 80) = a2[10];
  swift_release();
  uint64_t v14 = a2[12];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = v14;
  swift_release();
  *(void *)(a1 + 104) = a2[13];
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t)a2 + v15;
  *(void *)(a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  uint64_t v18 = *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  uint64_t v19 = v16 + v18;
  uint64_t v20 = v17 + v18;
  uint64_t v21 = sub_255C7E988();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  *(void *)(v16 + *(int *)(v22 + 28)) = *(void *)(v17 + *(int *)(v22 + 28));
  swift_release();
  return a1;
}

uint64_t sub_255B4B0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255B4B0E0);
}

uint64_t sub_255B4B0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 80);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 36);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_255B4B1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255B4B1B4);
}

uint64_t sub_255B4B1B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 80) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_255B4B260()
{
  sub_255B4B32C(319, &qword_26B29BDD0, MEMORY[0x263F1B5D0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_255B4B32C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for ArtworkCornerStyle(255);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_255B4B38C()
{
  return sub_255B4B6FC(&qword_26B29B828, &qword_26B29B830, (void (*)(void))sub_255B4B3D0);
}

unint64_t sub_255B4B3D0()
{
  unint64_t result = qword_26B29B698;
  if (!qword_26B29B698)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B6A0);
    sub_255A09998(&qword_26B29BAD0, &qword_26B29BAD8);
    sub_255A09998(&qword_26B29BA18, &qword_26B29BA20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B698);
  }
  return result;
}

unint64_t sub_255B4B498()
{
  unint64_t result = qword_26B29B6B8;
  if (!qword_26B29B6B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B6C0);
    sub_255A09998(&qword_26B29BAF0, &qword_26B29BAF8);
    sub_255A09998(&qword_26B29B918, &qword_26B29B920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B6B8);
  }
  return result;
}

unint64_t sub_255B4B560()
{
  unint64_t result = qword_26B29B6D8;
  if (!qword_26B29B6D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B6E0);
    sub_255A09998(&qword_26B29BB10, &qword_26B29BB18);
    sub_255A09998(&qword_26B29F238, (uint64_t *)&unk_26B29F240);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B6D8);
  }
  return result;
}

uint64_t sub_255B4B624()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B4B654()
{
  return sub_255B4B688(sub_255B45F84);
}

uint64_t sub_255B4B670()
{
  return sub_255B4B688(sub_255B463E0);
}

uint64_t sub_255B4B688(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ArtworkCornerModifier(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_255B4B6FC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255B4B778()
{
  unint64_t result = qword_26B29B688;
  if (!qword_26B29B688)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B29B690);
    sub_255A09998(&qword_26B29BAC0, &qword_26B29BAC8);
    sub_255A09998(&qword_26B29BBA8, &qword_26B29BBB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B29B688);
  }
  return result;
}

uint64_t sub_255B4B840(char *a1, char *a2)
{
  type metadata accessor for ArtworkCornerModifier(0);
  char v4 = *a2;
  char v7 = *a1;
  char v6 = v4;
  return sub_255B465A0(&v7, &v6);
}

uint64_t sub_255B4B8D0()
{
  return sub_255B4B688(sub_255B46AE8);
}

uint64_t sub_255B4B8E8()
{
  return sub_255B46BF8(*(void *)(v0 + 16));
}

uint64_t sub_255B4B904()
{
  uint64_t v1 = type metadata accessor for ArtworkCornerModifier(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  sub_255A087D0(*(void *)v2, *(unsigned char *)(v2 + 8));
  if (*(unsigned char *)(v2 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
  }
  else {
    swift_release();
  }
  sub_255A087D0(*(void *)(v2 + 64), *(unsigned char *)(v2 + 72));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 36);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  uint64_t v5 = sub_255C7E988();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B4BA64()
{
  uint64_t v1 = *(void *)(type metadata accessor for ArtworkCornerModifier(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  int v3 = *(unsigned __int8 *)(v0 + v2 + *(void *)(v1 + 64));

  return sub_255B46E40(v0 + v2, v3);
}

uint64_t sub_255B4BAE8()
{
  return sub_255B471CC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_255B4BB08()
{
  uint64_t v1 = type metadata accessor for ArtworkCornerModifier(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  sub_255A087D0(*(void *)v2, *(unsigned char *)(v2 + 8));
  if (*(unsigned char *)(v2 + 56)) {
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
  }
  else {
    swift_release();
  }
  sub_255A087D0(*(void *)(v2 + 64), *(unsigned char *)(v2 + 72));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 36);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for ArtworkCornerStyle(0) + 20);
  uint64_t v5 = sub_255C7E988();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BDC8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255B4BC64()
{
  uint64_t v1 = *(void *)(type metadata accessor for ArtworkCornerModifier(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  unsigned __int8 v3 = *(unsigned char *)(v0 + 16);

  return sub_255B472E8(v3, v2);
}

ValueMetadata *type metadata accessor for VideoPlayerStyleModifier()
{
  return &type metadata for VideoPlayerStyleModifier;
}

uint64_t sub_255B4BCD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255B4BE00()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255B4BE20()
{
  unint64_t result = qword_269F24B08;
  if (!qword_269F24B08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F24AF8);
    sub_255B4BEEC(&qword_269F24B10, &qword_269F24AF0, &qword_269F24B18, &qword_269F24B00);
    sub_255B4A6EC(qword_26B29AD60, (void (*)(uint64_t))type metadata accessor for ArtworkInnerStrokeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F24B08);
  }
  return result;
}

uint64_t sub_255B4BEEC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_255A09998(a3, a4);
    sub_255B4A6EC(&qword_26B298DB8, (void (*)(uint64_t))type metadata accessor for ArtworkClipShape);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255B4BFB8()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  sub_255B4C6B8();

  sub_255C806E8();
  sub_255C806E8();
  sub_255C7F978();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255B4C09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    id v5 = objc_msgSend(self, sel_mainBundle);
    sub_255B4C6B8();

    sub_255C806E8();
    sub_255C806E8();
    sub_255C806E8();
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_255B16CCC(0, v3, 0);
    char v6 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_255B16CCC(v9 > 1, v10 + 1, 1);
      }
      v6 += 2;
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v11 = v14 + 16 * v10;
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v7;
      --v3;
    }
    while (v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BF88);
    sub_255B4D170();
    sub_255C80538();
    swift_release();
    sub_255C806E8();
    swift_bridgeObjectRelease();
    sub_255C806E8();
    sub_255C7F978();
    return swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = objc_msgSend(self, sel_mainBundle);
    sub_255B4C6B8();

    sub_255C806E8();
    sub_255C806E8();
    sub_255C7F978();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_255B4C32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_255C7D368();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v40 - v9;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  sub_255C7D328();
  sub_255C7D358();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v10, v4);
  unint64_t v42 = sub_255A1D78C();
  uint64_t v12 = sub_255C80F38();
  v11(v8, v4);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v15 = (unint64_t *)(v12 + 40);
    uint64_t v16 = (unint64_t *)MEMORY[0x263F8EE78];
    do
    {
      unint64_t v21 = *(v15 - 1);
      unint64_t v20 = *v15;
      uint64_t v22 = HIBYTE(*v15) & 0xF;
      if ((*v15 & 0x2000000000000000) == 0) {
        uint64_t v22 = v21 & 0xFFFFFFFFFFFFLL;
      }
      if (v22)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v44 = (uint64_t)v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_255B16CCC(0, v16[2] + 1, 1);
          uint64_t v16 = (unint64_t *)v44;
        }
        unint64_t v18 = v16[2];
        unint64_t v17 = v16[3];
        if (v18 >= v17 >> 1)
        {
          sub_255B16CCC(v17 > 1, v18 + 1, 1);
          uint64_t v16 = (unint64_t *)v44;
        }
        void v16[2] = v18 + 1;
        uint64_t v19 = &v16[2 * v18];
        v19[4] = v21;
        v19[5] = v20;
      }
      v15 += 2;
      --v13;
    }
    while (v13);
  }
  else
  {
    uint64_t v16 = (unint64_t *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  unint64_t v24 = v16[2];
  if (!v24)
  {
    swift_release();
    return v24;
  }
  uint64_t result = sub_255C80668();
  if (v16[2] >= v24)
  {
    uint64_t v27 = result;
    uint64_t v28 = v26;
    unint64_t v29 = v24 - 1;
    if (v24 == 1)
    {
      swift_release();
      uint64_t v30 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v40 = v26;
      uint64_t v41 = result;
      uint64_t v43 = v14;
      sub_255B16CCC(0, v24 - 1, 0);
      uint64_t v30 = v43;
      uint64_t v31 = (uint64_t *)(v16 + 7);
      do
      {
        uint64_t v32 = *v31;
        uint64_t v44 = *(v31 - 1);
        uint64_t v45 = v32;
        uint64_t v33 = sub_255C80F48();
        uint64_t v35 = v34;
        uint64_t v43 = v30;
        unint64_t v37 = *(void *)(v30 + 16);
        unint64_t v36 = *(void *)(v30 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_255B16CCC(v36 > 1, v37 + 1, 1);
          uint64_t v30 = v43;
        }
        v31 += 2;
        *(void *)(v30 + 16) = v37 + 1;
        uint64_t v38 = v30 + 16 * v37;
        *(void *)(v38 + 32) = v33;
        *(void *)(v38 + 40) = v35;
        --v29;
      }
      while (v29);
      swift_release();
      uint64_t v28 = v40;
      uint64_t v27 = v41;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BFA8);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_255C83400;
    *(void *)(v39 + 32) = v27;
    *(void *)(v39 + 40) = v28;
    uint64_t v44 = v39;
    sub_255B28578(v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B29BE80);
    sub_255B4D114();
    unint64_t v24 = sub_255C80538();
    swift_bridgeObjectRelease();
    return v24;
  }
  __break(1u);
  return result;
}

uint64_t sub_255B4C6B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v29[-v6];
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  id v8 = objc_msgSend(v1, sel_bundleIdentifier);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_255C80628();
    unint64_t v12 = v11;

    uint64_t v30 = 46;
    unint64_t v31 = 0xE100000000000000;
    MEMORY[0x270FA5388](v13);
    *(void *)&v29[-16] = &v30;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_255B4CA74(0x7FFFFFFFFFFFFFFFLL, 1, sub_255B4D074, (uint64_t)&v29[-32], v10, v12);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (uint64_t *)(v14 + 32 * v15);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      uint64_t v20 = v16[2];
      uint64_t v19 = v16[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  id v21 = objc_msgSend(v1, sel_executableURL);
  if (v21)
  {
    uint64_t v22 = v21;
    sub_255C7D598();

    uint64_t v23 = sub_255C7D5C8();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 0, 1, v23);
  }
  else
  {
    uint64_t v23 = sub_255C7D5C8();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 1, 1, v23);
  }
  sub_255B4CA0C((uint64_t)v5, (uint64_t)v7);
  sub_255C7D5C8();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v23) == 1)
  {
    sub_255A28104((uint64_t)v7);
  }
  else
  {
    sub_255C7D538();
    (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v7, v23);
  }
  sub_255C806E8();
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x25A296760](v30, v31);
  uint64_t v18 = v25;
  uint64_t v20 = v26;
  uint64_t v19 = v27;
LABEL_12:
  MEMORY[0x25A295F10](v17, v18, v20, v19);
  swift_bridgeObjectRelease();
  sub_255C806E8();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_255B4CA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B29F230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255B4CA74(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_255B4CF18(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_255C80758();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_255C806C8();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_255C806C8();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_255C80778();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_255C15628(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_255C15628((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_255C806C8();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_255C80778();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_255C15628(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_255C15628((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_255C81238();
  __break(1u);
LABEL_42:
  uint64_t result = sub_255C81238();
  __break(1u);
  return result;
}