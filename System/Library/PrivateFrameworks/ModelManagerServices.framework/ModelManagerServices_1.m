uint64_t sub_256C8C9C8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  uint64_t vars8;

  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  v2 = sub_256CEDC88();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2C8CA8);
  v3 = sub_256CEDC68();
  v4 = sub_256CEE2D8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_256BD4000, v3, v4, "Cancelling buffering task", v5, 2u);
    MEMORY[0x25A2AEBD0](v5, -1, -1);
  }

  v6 = *(os_unfair_lock_s **)(a1 + *(void *)(*(void *)a1 + 136));
  v7 = v6 + 4;
  v8 = v6 + 5;
  os_unfair_lock_lock(v6 + 5);
  sub_256C903B4(v7);
  os_unfair_lock_unlock(v8);
  return sub_256CEE1B8();
}

uint64_t sub_256C8CB28()
{
  OUTLINED_FUNCTION_2();
  v1[2] = v2;
  v1[3] = v0;
  v1[4] = *(void *)(*(void *)v0 + 80);
  uint64_t v3 = type metadata accessor for GreedyBufferingAsyncSequence.AvailableResult();
  v1[5] = v3;
  OUTLINED_FUNCTION_6(v3);
  v1[6] = v4;
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C8CC1C()
{
  OUTLINED_FUNCTION_15();
  sub_256C8BB28(v0[9]);
  v0[10] = 0;
  uint64_t v1 = v0[9];
  v0[11] = sub_256CEE2E8();
  OUTLINED_FUNCTION_31_4();
  if (v2)
  {
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v0[12] = v5;
    v0[13] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v5(v1, v3);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[14] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_256C8CDC0;
    return sub_256C8C104();
  }
  else
  {
    OUTLINED_FUNCTION_33_0();
    (*(void (**)(void))(v8 + 32))();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
    return v9();
  }
}

uint64_t sub_256C8CDC0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *char v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C8CE9C()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0 + 80);
  sub_256C8BB28(*(void *)(v0 + 64));
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v2 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 64);
    OUTLINED_FUNCTION_31_4();
    if (v4)
    {
      (*(void (**)(uint64_t, void))(v0 + 96))(v3, *(void *)(v0 + 40));
      if (qword_26B2C8CC0 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_256CEDC88();
      __swift_project_value_buffer(v5, (uint64_t)qword_26B2C8CA8);
      uint64_t v6 = sub_256CEDC68();
      os_log_type_t v7 = sub_256CEE2D8();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_99();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_256BD4000, v6, v7, "Greedy buffer was not filled as it should have been. Retrying up to 10 times.", v8, 2u);
        OUTLINED_FUNCTION_4();
      }

      uint64_t v9 = 10;
      while (1)
      {
        sub_256C8BB28(*(void *)(v0 + 56));
        uint64_t v10 = *(void *)(v0 + 56);
        if (__swift_getEnumTagSinglePayload(v10, 1, *(void *)(v0 + 88)) != 1) {
          break;
        }
        (*(void (**)(uint64_t, void))(v0 + 96))(v10, *(void *)(v0 + 40));
        if (!--v9)
        {
          v11 = (void *)sub_256CEDC68();
          os_log_type_t v12 = sub_256CEE2C8();
          if (OUTLINED_FUNCTION_25_0(v12))
          {
            v13 = (_WORD *)OUTLINED_FUNCTION_99();
            OUTLINED_FUNCTION_147(v13);
            OUTLINED_FUNCTION_61(&dword_256BD4000, v14, v15, "Greedy buffer filling failed after 10 retries. Terminating sequence early.");
            OUTLINED_FUNCTION_10_5();
          }
          uint64_t v16 = *(void *)(v0 + 32);
          uint64_t v17 = *(void *)(v0 + 16);

          __swift_storeEnumTagSinglePayload(v17, 1, 1, v16);
          goto LABEL_16;
        }
      }
    }
    OUTLINED_FUNCTION_33_0();
    (*(void (**)(void))(v18 + 32))();
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
  }
  return v2();
}

uint64_t sub_256C8D124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C8D140, a2);
}

uint64_t sub_256C8D140()
{
  void (*v6)(uint64_t *__return_ptr, void *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  uint64_t v14 = v0;
  uint64_t v1 = v0[22];
  unint64_t v2 = *(void *)(v1 + 168);
  if (v2 > 1)
  {
    if (v2 == 2)
    {
      uint64_t v6 = (void (*)(uint64_t *__return_ptr, void *, uint64_t))v0[23];
      OUTLINED_FUNCTION_22_1();
      os_log_type_t v7 = *(void *)(v1 + 184);
      v0[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4BE0);
      v0[6] = sub_256C90080(&qword_269FC4BE8, &qword_269FC4BE0);
      v0[2] = v7;
      swift_retain_n();
      v6(&v13, v0 + 2, 1);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
      swift_release();
      uint64_t v8 = v0[22];
      OUTLINED_FUNCTION_13();
      swift_release();
      *(void *)(v8 + 184) = *(void *)sub_256CEDB38();
      swift_endAccess();
      OUTLINED_FUNCTION_34_7();
      OUTLINED_FUNCTION_26_8();
      __asm { BRAA            X0, X16 }
    }
    MEMORY[0x25A2AE9C0](*(void *)(v1 + 168));
    swift_willThrow();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_26_8();
    __asm { BRAA            X1, X16 }
  }
  sub_256C8FFD0(*(void *)(v1 + 168));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_256C8D338;
  OUTLINED_FUNCTION_26_8();
  return sub_256C8BCD4();
}

uint64_t sub_256C8D338()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *unint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

void sub_256C8D414()
{
  void (*v3)(uint64_t *__return_ptr, void *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  uint64_t v1 = v0[22];
  unint64_t v2 = *(void *)(v1 + 168);
  if (v2 >= 2)
  {
    if (v2 != 2)
    {
      MEMORY[0x25A2AE9C0](*(void *)(v1 + 168));
      swift_willThrow();
      OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_26_8();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v3 = (void (*)(uint64_t *__return_ptr, void *, uint64_t))v0[23];
    OUTLINED_FUNCTION_22_1();
    uint64_t v9 = *(void *)(v1 + 184);
    v0[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4BE0);
    uint64_t v10 = sub_256C90080(&qword_269FC4BE8, &qword_269FC4BE0);
    v0[2] = v9;
    uint64_t v6 = (uint64_t)(v0 + 2);
    v0[6] = v10;
    swift_retain_n();
    uint64_t v7 = v0 + 2;
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t v3 = (void (*)(uint64_t *__return_ptr, void *, uint64_t))v0[23];
    OUTLINED_FUNCTION_22_1();
    uint64_t v4 = *(void *)(v1 + 184);
    v0[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4BE0);
    uint64_t v5 = sub_256C90080(&qword_269FC4BE8, &qword_269FC4BE0);
    v0[7] = v4;
    uint64_t v6 = (uint64_t)(v0 + 7);
    v0[11] = v5;
    swift_retain_n();
    uint64_t v7 = v0 + 7;
    uint64_t v8 = 0;
  }
  v3(&v16, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm(v6);
  swift_release();
  v11 = v0[22];
  OUTLINED_FUNCTION_13();
  swift_release();
  *(void *)(v11 + 184) = *(void *)sub_256CEDB38();
  swift_endAccess();
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_26_8();
  __asm { BRAA            X0, X16 }
}

uint64_t sub_256C8D608()
{
  OUTLINED_FUNCTION_2();
  v1[8] = v2;
  v1[9] = v0;
  v1[6] = v3;
  v1[7] = v4;
  v1[5] = v5;
  OUTLINED_FUNCTION_4_6();
  v1[10] = v6;
  v1[11] = *(void *)(v7 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_256C8D6D4()
{
  OUTLINED_FUNCTION_59();
  uint64_t v2 = (void *)sub_256C88D38();
  if ((unint64_t)v2 > 1)
  {
    sub_256C8DC38(v2);
    unint64_t v6 = sub_256C88D38();
    if (v6 >= 2)
    {
      if (v6 != 2)
      {
        swift_willThrow();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_16();
        goto LABEL_11;
      }
      uint64_t v7 = OUTLINED_FUNCTION_51_3();
      uint64_t v8 = 1;
    }
    else
    {
      uint64_t v7 = OUTLINED_FUNCTION_50_7();
      uint64_t v8 = 0;
    }
    v1(v7, v8);
    swift_release();
    uint64_t v9 = OUTLINED_FUNCTION_21_8();
    v10(v9);
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_8_6();
    sub_256CEDB98();
    sub_256CEDB88();
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
LABEL_11:
    OUTLINED_FUNCTION_50_0();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_256C8D87C;
  OUTLINED_FUNCTION_50_0();
  return sub_256C8C104();
}

uint64_t sub_256C8D87C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

void sub_256C8D958()
{
  OUTLINED_FUNCTION_59();
  unint64_t v1 = sub_256C88D38();
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_16();
      goto LABEL_7;
    }
    uint64_t v2 = OUTLINED_FUNCTION_51_3();
    uint64_t v3 = 1;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_50_7();
    uint64_t v3 = 0;
  }
  v0(v2, v3);
  swift_release();
  uint64_t v4 = OUTLINED_FUNCTION_21_8();
  v5(v4);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_8_6();
  sub_256CEDB98();
  sub_256CEDB88();
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
LABEL_7:
  OUTLINED_FUNCTION_50_0();
  __asm { BRAA            X1, X16 }
}

uint64_t GreedyBufferingAsyncSequence.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_256C8DA8C()
{
  return GreedyBufferingAsyncSequence.unownedExecutor.getter();
}

uint64_t sub_256C8DAA8()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256BDD6B8;
  return sub_256C8CB28();
}

uint64_t sub_256C8DB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v11;
  uint64_t v12 = type metadata accessor for GreedyBufferingAsyncSequence();
  void *v11 = v6;
  v11[1] = sub_256BEE788;
  return MEMORY[0x270FA1E90](a1, a2, a3, v12, a6, v6 + 16);
}

void sub_256C8DC38(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

uint64_t sub_256C8DC48()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_256C8DC80()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_256C8DCC0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BDD6B8;
  v3[8] = v1;
  return MEMORY[0x270FA2498](sub_256C8ADC0, 0, 0);
}

uint64_t type metadata accessor for GreedyBufferingAsyncSequence.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for GreedyBufferingAsyncSequence.AvailableResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_256C8DD94()
{
  return swift_getWitnessTable();
}

uint64_t sub_256C8DDB0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_256C8DDEC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_256C8DE28()
{
  return swift_getWitnessTable();
}

uint64_t sub_256C8DE44@<X0>(uint64_t a1@<X8>)
{
  return sub_256C88BC0(a1);
}

uint64_t dispatch thunk of GreedyBufferBacking.invalidator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_256C8DE98()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for GreedyBufferingAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for GreedyBufferingAsyncSequence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GreedyBufferingAsyncSequence);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.backing.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.backing.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.backing.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.onTermination.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.onTermination.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.onTermination.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.__allocating_init(backing:fillBuffer:onTermination:)()
{
  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.makeAsyncIterator()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.append(_:)()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_7_0();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 352) + **(int **)(v2 + 352));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_14(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_256BE3BF0;
  return v7(v1);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.append<A>(contentsOf:)()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_7_0();
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 360) + **(int **)(v6 + 360));
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_14(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_256BE3BF0;
  return v11(v5, v3, v1);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.fail(_:)()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_7_0();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 368) + **(int **)(v2 + 368));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_14(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_256BE3BF0;
  return v7(v1);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.startBuffering()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.clearBufferingTask()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.cancelBufferingAndWait()()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(v0 + 400) + **(int **)(v0 + 400));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  return v5();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.next()()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_7_0();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 424) + **(int **)(v2 + 424));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_14(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_256BE3BF0;
  return v7(v1);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.fetchingAndConsumingBufferedResults<A>(_:)()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_7_0();
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 432) + **(int **)(v8 + 432));
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_14(v9);
  *uint64_t v10 = v11;
  v10[1] = sub_256BE3BF0;
  return v13(v7, v5, v3, v1);
}

uint64_t sub_256C8E768()
{
  uint64_t result = sub_256CEE2E8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_256C8E7E4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 >= 2) {
    size_t v9 = v8;
  }
  else {
    size_t v9 = v8 + 1;
  }
  uint64_t v10 = *(_DWORD *)(v6 + 80);
  if (v10 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    if (v7 > 1)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), v5) >= 2)
      {
LABEL_37:
        memcpy(a1, a2, v9);
        return a1;
      }
    }
    else if (a2[v8])
    {
      int v14 = (a2[v8] - 1) << (8 * v8);
      if (v8 > 3) {
        int v14 = 0;
      }
      if (v8)
      {
        int v15 = v8 <= 3 ? v8 : 4;
        switch(v15)
        {
          case 2:
            int v16 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v16 = *(_DWORD *)a2;
            break;
          default:
            int v16 = *a2;
            break;
        }
      }
      else
      {
        int v16 = 0;
      }
      if ((v16 | v14) != 0xFFFFFFFF) {
        goto LABEL_37;
      }
    }
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    }
    if (v7 <= 1) {
      *((unsigned char *)a1 + v8) = 0;
    }
  }
  return a1;
}

uint64_t sub_256C8E9E8(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int *)(result + 84);
  if (v5) {
    uint64_t v6 = *(void *)(result + 64);
  }
  else {
    uint64_t v6 = *(void *)(result + 64) + 1;
  }
  uint64_t v9 = *(void *)(v3 - 8);
  if (v5 > 1)
  {
    uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v3);
    if (result >= 2) {
      return result;
    }
    goto LABEL_19;
  }
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
  int v7 = (*((unsigned __int8 *)a1 + v6) - 1) << (8 * v6);
  if (v6 > 3) {
    int v7 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  if ((v6 | v7) == 0xFFFFFFFF)
  {
LABEL_19:
    uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v3);
    if (!result)
    {
      size_t v8 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v9 + 8);
      return v8(a1, v3);
    }
  }
  return result;
}

void *sub_256C8EB64(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 > 1)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), v5) >= 2)
    {
LABEL_25:
      if (v7 >= 2) {
        size_t v12 = v8;
      }
      else {
        size_t v12 = v8 + 1;
      }
      memcpy(a1, a2, v12);
      return a1;
    }
  }
  else if (a2[v8])
  {
    int v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3) {
      int v9 = 0;
    }
    if (v8)
    {
      int v10 = v8 <= 3 ? v8 : 4;
      switch(v10)
      {
        case 2:
          int v11 = *(unsigned __int16 *)a2;
          break;
        case 3:
          int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          break;
        case 4:
          int v11 = *(_DWORD *)a2;
          break;
        default:
          int v11 = *a2;
          break;
      }
    }
    else
    {
      int v11 = 0;
    }
    if ((v11 | v9) != 0xFFFFFFFF) {
      goto LABEL_25;
    }
  }
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (v7 <= 1) {
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

unsigned __int16 *sub_256C8ED24(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 > 1)
  {
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, *(unsigned int *)(v6 + 84), v5);
    unsigned int v14 = __swift_getEnumTagSinglePayload((uint64_t)a2, v7, v5);
    if (EnumTagSinglePayload >= 2)
    {
      if (v14 >= 2)
      {
LABEL_61:
        if (v7 >= 2) {
          size_t v25 = v8;
        }
        else {
          size_t v25 = v8 + 1;
        }
        v23 = a1;
        v24 = a2;
        goto LABEL_65;
      }
      goto LABEL_67;
    }
    if (v14 >= 2)
    {
LABEL_48:
      if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5)) {
        (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
      }
      goto LABEL_61;
    }
LABEL_50:
    int v21 = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
    int v22 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 24))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
    }
    v23 = a1;
    v24 = a2;
    size_t v25 = v8;
LABEL_65:
    memcpy(v23, v24, v25);
    return a1;
  }
  char v9 = 8 * v8;
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_47;
  }
  int v10 = (*((unsigned __int8 *)a1 + v8) - 1) << v9;
  if (v8 > 3) {
    int v10 = 0;
  }
  if (v8)
  {
    int v11 = v8 <= 3 ? v8 : 4;
    switch(v11)
    {
      case 2:
        int v12 = *a1;
        break;
      case 3:
        int v12 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v12 = *(_DWORD *)a1;
        break;
      default:
        int v12 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v12 = 0;
  }
  if ((v12 | v10) == 0xFFFFFFFF)
  {
LABEL_47:
    if (*((unsigned char *)a2 + v8))
    {
      int v18 = (*((unsigned __int8 *)a2 + v8) - 1) << v9;
      if (v8 > 3) {
        int v18 = 0;
      }
      if (v8)
      {
        int v19 = v8 <= 3 ? v8 : 4;
        switch(v19)
        {
          case 2:
            int v20 = *a2;
            break;
          case 3:
            int v20 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
            break;
          case 4:
            int v20 = *(_DWORD *)a2;
            break;
          default:
            int v20 = *(unsigned __int8 *)a2;
            break;
        }
      }
      else
      {
        int v20 = 0;
      }
      if ((v20 | v18) != 0xFFFFFFFF) {
        goto LABEL_48;
      }
    }
    goto LABEL_50;
  }
  if (*((unsigned char *)a2 + v8))
  {
    int v15 = (*((unsigned __int8 *)a2 + v8) - 1) << v9;
    if (v8 > 3) {
      int v15 = 0;
    }
    if (v8)
    {
      int v16 = v8 <= 3 ? v8 : 4;
      switch(v16)
      {
        case 2:
          int v17 = *a2;
          break;
        case 3:
          int v17 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)a2;
          break;
        default:
          int v17 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) != 0xFFFFFFFF) {
      goto LABEL_61;
    }
  }
LABEL_67:
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (v7 <= 1) {
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

void *sub_256C8F11C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 > 1)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), v5) >= 2)
    {
LABEL_25:
      if (v7 >= 2) {
        size_t v12 = v8;
      }
      else {
        size_t v12 = v8 + 1;
      }
      memcpy(a1, a2, v12);
      return a1;
    }
  }
  else if (a2[v8])
  {
    int v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3) {
      int v9 = 0;
    }
    if (v8)
    {
      int v10 = v8 <= 3 ? v8 : 4;
      switch(v10)
      {
        case 2:
          int v11 = *(unsigned __int16 *)a2;
          break;
        case 3:
          int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          break;
        case 4:
          int v11 = *(_DWORD *)a2;
          break;
        default:
          int v11 = *a2;
          break;
      }
    }
    else
    {
      int v11 = 0;
    }
    if ((v11 | v9) != 0xFFFFFFFF) {
      goto LABEL_25;
    }
  }
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (v7 <= 1) {
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

unsigned __int16 *sub_256C8F2DC(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 > 1)
  {
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, *(unsigned int *)(v6 + 84), v5);
    unsigned int v14 = __swift_getEnumTagSinglePayload((uint64_t)a2, v7, v5);
    if (EnumTagSinglePayload >= 2)
    {
      if (v14 >= 2)
      {
LABEL_61:
        if (v7 >= 2) {
          size_t v25 = v8;
        }
        else {
          size_t v25 = v8 + 1;
        }
        v23 = a1;
        v24 = a2;
        goto LABEL_65;
      }
      goto LABEL_67;
    }
    if (v14 >= 2)
    {
LABEL_48:
      if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5)) {
        (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
      }
      goto LABEL_61;
    }
LABEL_50:
    int v21 = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
    int v22 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 40))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
    }
    v23 = a1;
    v24 = a2;
    size_t v25 = v8;
LABEL_65:
    memcpy(v23, v24, v25);
    return a1;
  }
  char v9 = 8 * v8;
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_47;
  }
  int v10 = (*((unsigned __int8 *)a1 + v8) - 1) << v9;
  if (v8 > 3) {
    int v10 = 0;
  }
  if (v8)
  {
    int v11 = v8 <= 3 ? v8 : 4;
    switch(v11)
    {
      case 2:
        int v12 = *a1;
        break;
      case 3:
        int v12 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v12 = *(_DWORD *)a1;
        break;
      default:
        int v12 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v12 = 0;
  }
  if ((v12 | v10) == 0xFFFFFFFF)
  {
LABEL_47:
    if (*((unsigned char *)a2 + v8))
    {
      int v18 = (*((unsigned __int8 *)a2 + v8) - 1) << v9;
      if (v8 > 3) {
        int v18 = 0;
      }
      if (v8)
      {
        int v19 = v8 <= 3 ? v8 : 4;
        switch(v19)
        {
          case 2:
            int v20 = *a2;
            break;
          case 3:
            int v20 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
            break;
          case 4:
            int v20 = *(_DWORD *)a2;
            break;
          default:
            int v20 = *(unsigned __int8 *)a2;
            break;
        }
      }
      else
      {
        int v20 = 0;
      }
      if ((v20 | v18) != 0xFFFFFFFF) {
        goto LABEL_48;
      }
    }
    goto LABEL_50;
  }
  if (*((unsigned char *)a2 + v8))
  {
    int v15 = (*((unsigned __int8 *)a2 + v8) - 1) << v9;
    if (v8 > 3) {
      int v15 = 0;
    }
    if (v8)
    {
      int v16 = v8 <= 3 ? v8 : 4;
      switch(v16)
      {
        case 2:
          int v17 = *a2;
          break;
        case 3:
          int v17 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)a2;
          break;
        default:
          int v17 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) != 0xFFFFFFFF) {
      goto LABEL_61;
    }
  }
LABEL_67:
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (v7 <= 1) {
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

uint64_t sub_256C8F6D4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  int v6 = v5 - 1;
  if (!v5) {
    int v6 = 0;
  }
  unsigned int v7 = v6 - 1;
  uint64_t v8 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v5) {
    ++v8;
  }
  if (v5 < 2)
  {
    unsigned int v7 = 0;
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v9 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_25;
  }
  char v10 = 8 * v8;
  if (v8 > 3) {
    goto LABEL_10;
  }
  unsigned int v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v8);
    if (v11) {
      goto LABEL_17;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_25;
      }
LABEL_10:
      int v11 = *((unsigned __int8 *)a1 + v8);
      if (!*((unsigned char *)a1 + v8)) {
        goto LABEL_25;
      }
LABEL_17:
      int v13 = (v11 - 1) << v10;
      if (v8 > 3) {
        int v13 = 0;
      }
      if (v8)
      {
        if (v8 > 3) {
          LODWORD(v8) = 4;
        }
        switch((int)v8)
        {
          case 2:
            LODWORD(v8) = *a1;
            break;
          case 3:
            LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v8) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v8) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v8 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v8);
    if (*(unsigned __int16 *)((char *)a1 + v8)) {
      goto LABEL_17;
    }
  }
LABEL_25:
  if (!v7) {
    return 0;
  }
  if (v5 < 2) {
    return 0;
  }
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  BOOL v15 = EnumTagSinglePayload >= 2;
  uint64_t result = EnumTagSinglePayload - 2;
  if (result == 0 || !v15) {
    return 0;
  }
  return result;
}

void sub_256C8F864(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  unsigned int v10 = v9 - 1;
  size_t v11 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v8) {
    ++v11;
  }
  if (v8 >= 2)
  {
    size_t v12 = v11;
  }
  else
  {
    unsigned int v10 = 0;
    size_t v12 = v11 + 1;
  }
  char v13 = 8 * v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 != 0 && v14)
  {
    if (v12 <= 3)
    {
      unsigned int v16 = ((v15 + ~(-1 << v13)) >> v13) + 1;
      if (HIWORD(v16))
      {
        int v6 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v16 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v12 < 4)
    {
      int v18 = (v17 >> v13) + 1;
      if (v12)
      {
        int v19 = v17 & ~(-1 << v13);
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v12] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v18;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v12] = v18;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x256C8FB28);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if (a2 + 1 <= v9)
        {
          if (a2 != -1 && v8 >= 2)
          {
            uint64_t v23 = a2 + 2;
            __swift_storeEnumTagSinglePayload((uint64_t)a1, v23, v8, v7);
          }
        }
        else
        {
          if (v11 <= 3) {
            int v20 = ~(-1 << (8 * v11));
          }
          else {
            int v20 = -1;
          }
          if (v11)
          {
            int v21 = v20 & (a2 - v9);
            if (v11 <= 3) {
              int v22 = v11;
            }
            else {
              int v22 = 4;
            }
            bzero(a1, v11);
            switch(v22)
            {
              case 2:
                *(_WORD *)a1 = v21;
                break;
              case 3:
                *(_WORD *)a1 = v21;
                a1[2] = BYTE2(v21);
                break;
              case 4:
                *(_DWORD *)a1 = v21;
                break;
              default:
                *a1 = v21;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_256C8FB60(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned int *)(v3 + 84);
  uint64_t v5 = *(void *)(v3 + 64);
  if (v4) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v5 + 1;
  }
  if (v4 > 1)
  {
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, v4, v2);
    if (EnumTagSinglePayload >= 2) {
      return EnumTagSinglePayload - 1;
    }
    else {
      return 0;
    }
  }
  else if (*((unsigned char *)a1 + v6))
  {
    int v7 = (*((unsigned __int8 *)a1 + v6) - 1) << (8 * v6);
    if (v6 > 3) {
      int v7 = 0;
    }
    if (v6)
    {
      if (v6 > 3) {
        LODWORD(v6) = 4;
      }
      switch((int)v6)
      {
        case 2:
          LODWORD(v6) = *a1;
          break;
        case 3:
          LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          LODWORD(v6) = *(_DWORD *)a1;
          break;
        default:
          LODWORD(v6) = *(unsigned __int8 *)a1;
          break;
      }
    }
    return (v6 | v7) + 1;
  }
  else
  {
    return 0;
  }
}

void sub_256C8FC78(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (v6)
  {
    size_t v8 = *(void *)(v5 + 64);
  }
  else
  {
    unsigned int v7 = 0;
    size_t v8 = *(void *)(v5 + 64) + 1;
  }
  if (v7 >= a2)
  {
    if (v6 > 1)
    {
      if (a2)
      {
        uint64_t v12 = a2 + 1;
        __swift_storeEnumTagSinglePayload((uint64_t)a1, v12, v6, v4);
      }
    }
    else
    {
      a1[v8] = 0;
    }
  }
  else
  {
    unsigned int v9 = ~v7 + a2;
    if (v8 < 4)
    {
      int v10 = (v9 >> (8 * v8)) + 1;
      if (v8)
      {
        int v11 = v9 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v9;
      LOBYTE(v10) = 1;
    }
    if (v6 <= 1) {
      a1[v8] = v10;
    }
  }
}

void *sub_256C8FDD8(void *a1, void *a2)
{
  uint64_t v3 = *a2;
  if (*a2 >= 0xFFFFFFFFuLL) {
    MEMORY[0x25A2AE9C0](*a2);
  }
  *a1 = v3;
  return a1;
}

void sub_256C8FE18(void **a1)
{
  unint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **sub_256C8FE30(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF) {
      MEMORY[0x25A2AE9C0](*a2);
    }
    *a1 = (void *)v4;
  }
  else if (v4 < 0xFFFFFFFF)
  {

    *a1 = (void *)*a2;
  }
  else
  {
    MEMORY[0x25A2AE9C0](*a2);
    uint64_t v5 = *a1;
    *a1 = (void *)v4;
  }
  return a1;
}

void **sub_256C8FEC0(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t sub_256C8FF24(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_256C8FF80(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

unint64_t sub_256C8FFD0(unint64_t result)
{
  if (result >= 3) {
    JUMPOUT(0x25A2AE9C0);
  }
  return result;
}

uint64_t sub_256C8FFE0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_30_6();
  return sub_256C8C52C(v3, v4, v5);
}

uint64_t sub_256C90078()
{
  return sub_256C8C87C(*(void *)(v0 + 16));
}

uint64_t sub_256C90080(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C900C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C9012C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4C20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256C9018C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256C901C4()
{
  OUTLINED_FUNCTION_12();
  unint64_t v1 = *(int **)(v0 + 16);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BE3BF0;
  uint64_t v5 = (uint64_t (*)(int *))((char *)&dword_269FC4C28 + dword_269FC4C28);
  return v5(v1);
}

uint64_t sub_256C90268()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_30_6();
  return v4(v3);
}

uint64_t sub_256C9030C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_30_6();
  return sub_256C8C6E0(v3, v4, v5);
}

uint64_t sub_256C903A4()
{
  return sub_256C8C9C8(*(void *)(v0 + 16));
}

unsigned char *sub_256C903B4(unsigned char *a1)
{
  return sub_256C8BB1C(a1);
}

uint64_t OUTLINED_FUNCTION_31_4()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_51_3()
{
  return sub_256C88DA4();
}

uint64_t ModelServiceClient.acquireAssertion(assertion:)()
{
  OUTLINED_FUNCTION_2();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = type metadata accessor for ModelManagerError();
  v1[5] = v3;
  OUTLINED_FUNCTION_21(v3);
  v1[6] = OUTLINED_FUNCTION_38();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C904FC()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_15_8(*(void **)(v0 + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = sub_256C905E0;
  uint64_t v2 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 24));
  return v3(v2);
}

uint64_t sub_256C905E0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 32);
    return MEMORY[0x270FA2498](sub_256C906FC, v7, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
    return v8();
  }
}

uint64_t sub_256C906FC()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  *(void *)(v0 + 16) = *(void *)(v0 + 80);
  MEMORY[0x25A2AE9C0]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  OUTLINED_FUNCTION_28();
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 56);
    uint64_t v2 = *(void *)(v0 + 48);

    uint64_t v3 = OUTLINED_FUNCTION_51();
    sub_256C9FBA4(v3, v4, v5);
    swift_storeEnumTagMultiPayload();
    char v6 = static ModelManagerError.== infix(_:_:)(v1, v2);
    sub_256CA0220(v2, (void (*)(void))type metadata accessor for ModelManagerError);
    if (v6)
    {
      if (qword_26B2C8680 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_256CEDC88();
      __swift_project_value_buffer(v7, (uint64_t)qword_26B2C8668);
      uint64_t v8 = (void *)sub_256CEDC68();
      os_log_type_t v9 = sub_256CEE2C8();
      if (OUTLINED_FUNCTION_25_0(v9))
      {
        *(_WORD *)OUTLINED_FUNCTION_99() = 0;
        OUTLINED_FUNCTION_61(&dword_256BD4000, v10, v11, "Assertion denied, process not eligible to hold assertion");
        OUTLINED_FUNCTION_4();
      }
    }
    uint64_t v12 = *(void *)(v0 + 56);
    sub_256C9FBF8(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    swift_allocError();
    sub_256C9FEBC(v12, v13, (void (*)(void))type metadata accessor for ModelManagerError);
    swift_willThrow();
    sub_256CA0220(v12, (void (*)(void))type metadata accessor for ModelManagerError);
  }
  else
  {

    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_198();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21);
}

uint64_t ModelServiceClient.releaseAssertion(id:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C90974, v1);
}

uint64_t sub_256C90974()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_15_8(*(void **)(v0 + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_256C2B934;
  uint64_t v2 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 16));
  return v3(v2);
}

uint64_t ModelServiceClient.fetchAllAssertions()()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C90A74, v0);
}

uint64_t sub_256C90A74()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_15_8(*(void **)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_256C90B54;
  uint64_t v2 = OUTLINED_FUNCTION_135();
  return v3(v2);
}

uint64_t sub_256C90B54()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t ModelServiceClient.restoreAssertions(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C90C44, v1);
}

uint64_t sub_256C90C44()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_15_8(*(void **)(v0 + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_256C5FCCC;
  uint64_t v2 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 16));
  return v3(v2);
}

uint64_t ModelServiceClient.dumpState()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C90D44, v1);
}

uint64_t sub_256C90D44()
{
  OUTLINED_FUNCTION_15();
  uint64_t v8 = (void *)(OUTLINED_FUNCTION_15_8(*(void **)(v2 + 24)) + 136);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*v8 + *(int *)*v8);
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_256C2B934;
  uint64_t v5 = *(void *)(v2 + 16);
  return v7(v5, v0, v1);
}

uint64_t sub_256C90E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C90ECC, v4, 0);
}

uint64_t sub_256C90ECC()
{
  OUTLINED_FUNCTION_12();
  sub_256C5FC18(v0[5], v0[9], &qword_26B2C7798);
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_77();
  v0[10] = (uint64_t)v1;
  void *v1 = v2;
  v1[1] = sub_256C90F7C;
  uint64_t v3 = v0[9];
  return v5(v0 + 2, v3);
}

uint64_t sub_256C90F7C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256CA0220(*(void *)(v4 + 72), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C910A4()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 96) = *(void *)(v0 + 16);
  int v1 = *(unsigned __int8 *)(v0 + 24);
  *(unsigned char *)(v0 + 25) = v1;
  if (v1 == 1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_256C91454;
    OUTLINED_FUNCTION_32_1(*(void *)(v0 + 40));
    return sub_256C1E45C();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 48) + **(int **)(v0 + 48));
    sub_256CEDEC8();
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    *(void *)(v0 + 120) = v4;
    *uint64_t v4 = v5;
    v4[1] = sub_256C91618;
    uint64_t v6 = *(unsigned __int8 *)(v0 + 25);
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 32);
    return v9(v8, v7, v6);
  }
}

uint64_t sub_256C91204()
{
  OUTLINED_FUNCTION_2();
  int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  void *v1 = v0;
  v1[1] = sub_256C91294;
  OUTLINED_FUNCTION_32_1(*(void *)(v0 + 40));
  return sub_256C1E45C();
}

uint64_t sub_256C91294()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C91374()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void **)(v0 + 88);
  type metadata accessor for ModelManagerError();
  sub_256C9FBF8(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  OUTLINED_FUNCTION_68_3();
  uint64_t v3 = v2;
  MEMORY[0x25A2AE9C0](v1);
  ModelManagerError.init(wrapping:)(v1, v3);
  swift_willThrow();

  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_256();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_256C91454()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  *uint64_t v2 = *v0;
  swift_task_dealloc();
  sub_256CEDEC8();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 120) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_256C91618;
  OUTLINED_FUNCTION_198();
  return v8(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_256C91618()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v3();
}

uint64_t ModelServiceClient.cancelRequest(id:session:)()
{
  OUTLINED_FUNCTION_2();
  v1[14] = v2;
  v1[15] = v0;
  v1[13] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v4);
  v1[16] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C917C8()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = (void *)v0[15];
  type metadata accessor for _OSActivity();
  v0[17] = swift_initStackObject();
  v0[18] = _OSActivity.init(_:)("Client cancelling request", 25, 2);
  uint64_t v2 = v1 + 14;
  uint64_t v3 = v1[17];
  uint64_t v4 = v1[18];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v5();
  uint64_t v9 = (uint64_t (*)(uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[19] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_256C9197C;
  uint64_t v7 = OUTLINED_FUNCTION_32_1(v0[13]);
  return v9(v7);
}

uint64_t sub_256C9197C()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 128);
  *uint64_t v4 = *v2;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  sub_256C0044C(v5, qword_26B2C5B70);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_256();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C91AC8()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (os_activity_scope_state_s *)(*(void *)(v0 + 144) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_71_4();
  OUTLINED_FUNCTION_256();
  return v3(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_256C91B88()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (os_activity_scope_state_s *)(*(void *)(v0 + 144) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_256();
  return v3(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_256C91C4C(unsigned __int8 *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_256C91C78(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_256C91C98, v1, 0);
}

uint64_t sub_256C91C98()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(void *)(v1 + *(void *)(*(void *)v1 + 128)) <= 1uLL)
  {
    uint64_t v2 = *(void *)(*(void *)v1 + 152);
    uint64_t v3 = *(void *)(v1 + v2);
    BOOL v4 = __CFADD__(v3, 1);
    uint64_t v5 = v3 + 1;
    if (!v4)
    {
      uint64_t v6 = *(void *)(v0 + 40);
      *(void *)(v1 + v2) = v5;
      OUTLINED_FUNCTION_13();
      sub_256C91E24(v6);
      swift_endAccess();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_12;
  }
  if (qword_26B2C8CC0 != -1) {
LABEL_12:
  }
    swift_once();
  uint64_t v7 = sub_256CEDC88();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B2C8CA8);
  uint64_t v8 = (void *)sub_256CEDC68();
  os_log_type_t v9 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_25_0(v9))
  {
    *(_WORD *)OUTLINED_FUNCTION_99() = 0;
    OUTLINED_FUNCTION_61(&dword_256BD4000, v10, v11, "Appending elements to a GreedyBufferingAsyncSequence after it's been terminated");
    OUTLINED_FUNCTION_4();
  }

LABEL_8:
  OUTLINED_FUNCTION_16();
  return v12();
}

uint64_t sub_256C91E24(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ClientData(0) - 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = *v1;
  uint64_t v6 = *(void *)(*v1 + 24);
  uint64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v1;
    if (*(void *)(*v1 + 16) < v7 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_256CE9508(v7);
      uint64_t v10 = *v1;
    }
    return sub_256C9D858(v10 + 16, v10 + ((*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v4);
  }
  return result;
}

uint64_t sub_256C91EF8()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_26B2C8668);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8668);
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8CA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_256C91FC0()
{
  type metadata accessor for ModelServiceClient();
  uint64_t result = sub_256C91FF0();
  qword_26B2C85F0 = result;
  return result;
}

uint64_t sub_256C91FF0()
{
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26B2C9670;
  type metadata accessor for RunningBoardSelfAssertions();
  uint64_t v1 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8718);
  sub_256BE20F4();
  *(void *)(v1 + 112) = sub_256CEDEB8();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_256C9E7F4(v0, v1, v2);
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_256CEDC88();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B2C8668);
  uint64_t v5 = sub_256CEDC68();
  os_log_type_t v6 = sub_256CEE2D8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = sub_256C92700();
    sub_256BE14CC(v9, v10, &v12);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256BD4000, v5, v6, "Creating %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2AEBD0](v8, -1, -1);
    MEMORY[0x25A2AEBD0](v7, -1, -1);
  }

  return v3;
}

uint64_t static ModelServiceClient.client.getter()
{
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t ModelServiceClient.SessionCache.lockedInferenceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(v1 + 40);
  return sub_256C5BFF8(v2, v3);
}

__n128 ModelServiceClient.SessionCache.lockedInferenceProvider.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  sub_256C9BBDC(*(void *)(v1 + 8), *(void *)(v1 + 16));
  __n128 result = v6;
  *(__n128 *)(v1 + 8) = v6;
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 40) = v4;
  return result;
}

uint64_t (*ModelServiceClient.SessionCache.lockedInferenceProvider.modify())()
{
  return nullsub_1;
}

uint64_t ModelServiceClient.extantSessionCaches.getter()
{
  return sub_256CEDEC8();
}

uint64_t ModelServiceClient.extantSessionCaches.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 200) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ModelServiceClient.extantSessionCaches.modify())()
{
  return j__swift_endAccess;
}

void ModelServiceClient.__allocating_init(sender:runningBoardAssertions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256C92414(a1, a2, (uint64_t)sub_256C9E5D4, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void ModelServiceClient.init(sender:runningBoardAssertions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256C92414(a1, a2, (uint64_t)sub_256C9E890, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_256C92414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_57();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  uint64_t v25 = v20;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = *(void *)(v28 + 24);
  uint64_t v30 = *(void *)(v28 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v28, v31);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v32);
  v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v35 + 16))(v34);
  uint64_t v36 = *(void *)(v27 + 24);
  uint64_t v37 = *(void *)(v27 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v27, v36);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v38);
  v40 = (char *)&a9 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v41 + 16))(v40);
  v24(v34, v40, v25, v31, v36, v30, v37);
  __swift_destroy_boxed_opaque_existential_1Tm(v27);
  __swift_destroy_boxed_opaque_existential_1Tm(v29);
  OUTLINED_FUNCTION_71();
}

void ModelServiceClient.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_87_2();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_256CEDC88();
  __swift_project_value_buffer(v25, (uint64_t)qword_26B2C8668);
  uint64_t v26 = sub_256CEDC68();
  os_log_type_t v27 = sub_256CEE2D8();
  if (OUTLINED_FUNCTION_70(v27))
  {
    uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    a10 = OUTLINED_FUNCTION_23_0();
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v29 = sub_256C92700();
    sub_256BE14CC(v29, v30, &a10);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256BD4000, v26, v21, "Destroying %s", v28, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }

  __swift_destroy_boxed_opaque_existential_1Tm(v24 + 112);
  __swift_destroy_boxed_opaque_existential_1Tm(v24 + 152);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  OUTLINED_FUNCTION_89_2();
}

uint64_t sub_256C92700()
{
  return sub_256CEDF88();
}

#error "256C9273C: call analysis failed (funcsize=15)"

uint64_t sub_256C9275C()
{
  OUTLINED_FUNCTION_12();
  v1[39] = v2;
  v1[40] = v0;
  v1[37] = v3;
  v1[38] = v4;
  v1[36] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  OUTLINED_FUNCTION_21(v6);
  v1[41] = OUTLINED_FUNCTION_51_0();
  uint64_t v7 = type metadata accessor for ModelServiceClient.StreamBacking();
  v1[42] = v7;
  OUTLINED_FUNCTION_21(v7);
  v1[43] = OUTLINED_FUNCTION_38();
  v1[44] = swift_task_alloc();
  uint64_t v8 = sub_256CEDCD8();
  OUTLINED_FUNCTION_21(v8);
  v1[45] = OUTLINED_FUNCTION_51_0();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
  OUTLINED_FUNCTION_21(v9);
  v1[46] = OUTLINED_FUNCTION_51_0();
  uint64_t v10 = sub_256CEDD58();
  v1[47] = v10;
  OUTLINED_FUNCTION_6(v10);
  v1[48] = v11;
  v1[49] = OUTLINED_FUNCTION_38();
  v1[50] = swift_task_alloc();
  uint64_t v12 = sub_256CEE178();
  v1[51] = v12;
  OUTLINED_FUNCTION_6(v12);
  v1[52] = v13;
  v1[53] = OUTLINED_FUNCTION_51_0();
  uint64_t v14 = type metadata accessor for InferenceProviderRequestResult(0);
  v1[54] = v14;
  OUTLINED_FUNCTION_21(v14);
  v1[55] = OUTLINED_FUNCTION_38();
  v1[56] = swift_task_alloc();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v15);
  v1[57] = OUTLINED_FUNCTION_38();
  v1[58] = swift_task_alloc();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v16);
  v1[59] = OUTLINED_FUNCTION_38();
  v1[60] = swift_task_alloc();
  uint64_t v17 = type metadata accessor for RequestMetadata(0);
  v1[61] = v17;
  OUTLINED_FUNCTION_6(v17);
  v1[62] = v18;
  v1[63] = *(void *)(v19 + 64);
  v1[64] = OUTLINED_FUNCTION_38();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v20, v21, v22);
}

uint64_t sub_256C929D8()
{
  uint64_t v28 = v0;
  v27[1] = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_83_3();
  v0[67] = swift_initStackObject();
  v0[68] = _OSActivity.init(_:)("Client requesting stream", 24, 2);
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[65];
  uint64_t v3 = v0[39];
  uint64_t v4 = sub_256CEDC88();
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2C8668);
  v0[69] = v5;
  sub_256C9FEBC(v3, v1, (void (*)(void))type metadata accessor for RequestMetadata);
  sub_256C9FEBC(v3, v2, (void (*)(void))type metadata accessor for RequestMetadata);
  uint64_t v6 = sub_256CEDC68();
  os_log_type_t v7 = sub_256CEE2D8();
  BOOL v8 = OUTLINED_FUNCTION_102(v7);
  unint64_t v9 = v0[66];
  uint64_t v10 = v0[65];
  if (v8)
  {
    uint64_t v24 = v0[61];
    os_log_type_t type = v5;
    uint64_t v11 = v0[60];
    uint64_t v12 = v0[58];
    uint64_t v13 = swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    OUTLINED_FUNCTION_134_0();
    sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v14();
    uint64_t v15 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v17 = v16;
    sub_256C0044C(v11, &qword_26B2C7798);
    v0[34] = sub_256BE14CC(v15, v17, v27);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256CA0220(v9, (void (*)(void))type metadata accessor for RequestMetadata);
    *(_WORD *)(v13 + 12) = 2080;
    sub_256C5FC18(v10 + *(int *)(v24 + 28), v12, qword_26B2C5B70);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_137_0();
    v0[35] = sub_256BE14CC(v12, v9, v27);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256CA0220(v10, (void (*)(void))type metadata accessor for RequestMetadata);
    _os_log_impl(&dword_256BD4000, v6, type, "Sending execute streaming request for %s:%s", (uint8_t *)v13, 0x16u);
    OUTLINED_FUNCTION_111_1();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256CA0220(v0[66], (void (*)(void))type metadata accessor for RequestMetadata);
    sub_256CA0220(v10, (void (*)(void))type metadata accessor for RequestMetadata);
  }

  uint64_t v18 = (void *)v0[40];
  uint64_t v19 = v18[23];
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v18 + 19, v18[22]);
  OUTLINED_FUNCTION_123_1((uint64_t)v20, v19);
  uint64_t v25 = (uint64_t (*)(void))((char *)v21 + *v21);
  uint64_t v22 = (void *)swift_task_alloc();
  v0[70] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_256C92DDC;
  return v25();
}

uint64_t sub_256C92DDC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v5 = v4;
  *(void *)(v7 + 568) = v6;
  *(void *)(v7 + 576) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  uint64_t v9 = *(void *)(v8 + 320);
  if (v0) {
    uint64_t v10 = sub_256C93BDC;
  }
  else {
    uint64_t v10 = sub_256C92F0C;
  }
  return MEMORY[0x270FA2498](v10, v9, 0);
}

uint64_t sub_256C92F0C()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v4 = v2[52];
  uint64_t v3 = v2[53];
  uint64_t v5 = v2[51];
  OUTLINED_FUNCTION_81_2(v2[40]);
  sub_256CEE1E8();
  uint64_t v6 = sub_256CEE168();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  OUTLINED_FUNCTION_123_1(v7, v1);
  unint64_t v16 = (int *)((char *)v8 + *v8);
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v2[73] = v9;
  *uint64_t v9 = v10;
  v9[1] = sub_256C93080;
  uint64_t v11 = v2[55];
  uint64_t v12 = v2[38];
  uint64_t v13 = v2[39];
  uint64_t v14 = v2[37];
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v16)(v11, v2 + 7, v14, v12, v6, v13, v0, v1);
}

uint64_t sub_256C93080()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 592) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  uint64_t v5 = *(void *)(v4 + 320);
  if (v0) {
    uint64_t v6 = sub_256C93D1C;
  }
  else {
    uint64_t v6 = sub_256C931A8;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256C931A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_107_0();
  uint64_t v83 = *MEMORY[0x263EF8340];
  uint64_t v23 = *(void *)(v22 + 448);
  uint64_t v24 = *(void *)(v22 + 432);
  uint64_t v26 = *(void *)(v22 + 368);
  uint64_t v25 = *(void *)(v22 + 376);
  uint64_t v28 = *(void *)(v22 + 56);
  uint64_t v27 = *(void *)(v22 + 64);
  uint64_t v30 = *(void *)(v22 + 72);
  uint64_t v29 = *(void *)(v22 + 80);
  char v31 = *(unsigned char *)(v22 + 88);
  sub_256C9FBA4(*(void *)(v22 + 440), v23, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
  sub_256C5FC18(v23 + *(int *)(v24 + 20), v26, &qword_26B2C5328);
  if (__swift_getEnumTagSinglePayload(v26, 1, v25) == 1)
  {
    uint64_t v32 = *(void *)(v22 + 368);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_256C0044C(v32, &qword_26B2C5328);
    uint64_t v33 = sub_256CEDC68();
    os_log_type_t v34 = sub_256CEE2B8();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)OUTLINED_FUNCTION_99();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_256BD4000, v33, v34, "No endpoint returned for a successful stream request", v35, 2u);
      OUTLINED_FUNCTION_4();
    }
    uint64_t v36 = *(void *)(v22 + 544);
    uint64_t v37 = *(void *)(v22 + 448);

    type metadata accessor for ModelManagerError();
    sub_256C9FBF8(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_68_3();
    OUTLINED_FUNCTION_138_0();
    v73 = v33;
    swift_willThrow();
    swift_release();
    sub_256CA0220(v37, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
    uint64_t v38 = (os_activity_scope_state_s *)(v36 + 24);
    goto LABEL_9;
  }
  uint64_t v79 = v30;
  uint64_t v39 = *(void *)(v22 + 488);
  v40 = *(void (**)(uint64_t))(v22 + 456);
  uint64_t v41 = *(void *)(v22 + 312);
  (*(void (**)(void, void, void))(*(void *)(v22 + 384) + 32))(*(void *)(v22 + 400), *(void *)(v22 + 368), *(void *)(v22 + 376));
  sub_256C5FC18(v41 + *(int *)(v39 + 28), (uint64_t)v40, qword_26B2C5B70);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_84_2();
  OUTLINED_FUNCTION_100_0();
  if (!v43)
  {
    uint64_t v44 = *(void *)(v42 + 8);
    uint64_t v45 = *(void *)(v42 + 16);
    *(void *)(v42 + 8) = v28;
    *(void *)(v42 + 16) = v27;
    *(void *)(v42 + 24) = v79;
    *(void *)(v42 + 32) = v29;
    *(unsigned char *)(v42 + 40) = v31;
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256C9BBDC(v44, v45);
  }
  uint64_t v46 = OUTLINED_FUNCTION_64_3();
  v40(v46);
  v47 = *(NSObject **)(v22 + 592);
  uint64_t v48 = *(void *)(v22 + 456);
  uint64_t v50 = *(void *)(v22 + 392);
  uint64_t v49 = *(void *)(v22 + 400);
  uint64_t v52 = *(void *)(v22 + 376);
  uint64_t v51 = *(void *)(v22 + 384);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_256C0044C(v48, qword_26B2C5B70);
  sub_256CEDD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v50, v49, v52);
  sub_256CEDCB8();
  *(void *)(v22 + 600) = sub_256CEDD38();
  if (v47)
  {
    v73 = v47;
    uint64_t v53 = *(void *)(v22 + 544);
    uint64_t v54 = *(void *)(v22 + 448);
    uint64_t v55 = *(void *)(v22 + 400);
    uint64_t v56 = *(void *)(v22 + 376);
    uint64_t v57 = *(void *)(v22 + 384);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
    sub_256CA0220(v54, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
    uint64_t v38 = (os_activity_scope_state_s *)(v53 + 24);
LABEL_9:
    OUTLINED_FUNCTION_13();
    os_activity_scope_leave(v38);
    swift_endAccess();
    uint64_t v74 = *(void *)(v22 + 424);
    uint64_t v75 = *(void *)(v22 + 400);
    uint64_t v76 = *(void *)(v22 + 392);
    uint64_t v77 = *(void *)(v22 + 368);
    uint64_t v78 = *(void *)(v22 + 360);
    uint64_t v80 = *(void *)(v22 + 352);
    uint64_t v81 = *(void *)(v22 + 344);
    uint64_t v82 = *(void *)(v22 + 328);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_98_2();
    OUTLINED_FUNCTION_63_5();
    return v59(v58, v59, v60, v61, v62, v63, v64, v65, v73, v74, v75, v76, v77, v78, v80, v81, v82, a18, v83,
             a20,
             a21,
             a22);
  }
  uint64_t v67 = *(void *)(v22 + 488);
  type metadata accessor for InferenceProviderXPCSender();
  swift_allocObject();
  uint64_t v68 = swift_retain();
  *(void *)(v22 + 608) = InferenceProviderXPCSender.init(session:)(v68);
  *(_DWORD *)(v22 + 92) = *(_DWORD *)(v67 + 24);
  *(void *)(v22 + 616) = sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  *(void *)(v22 + 624) = *(void *)(v69 + 16);
  *(void *)(v22 + 632) = (v69 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  OUTLINED_FUNCTION_271();
  v70();
  v71 = (void *)swift_task_alloc();
  *(void *)(v22 + 640) = v71;
  void *v71 = v22;
  v71[1] = sub_256C93754;
  OUTLINED_FUNCTION_32_1(*(void *)(v22 + 472));
  OUTLINED_FUNCTION_63_5();
  return sub_256C1F790();
}

uint64_t sub_256C93754()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  uint64_t v5 = *(void *)(v4 + 472);
  if (v0) {

  }
  sub_256C0044C(v5, &qword_26B2C7798);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_256();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C938B8()
{
  OUTLINED_FUNCTION_12();
  sub_256CD6630();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_256C93950()
{
  uint64_t v9 = v0[82];
  uint64_t v1 = v0[68];
  uint64_t v10 = v0[56];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[48];
  uint64_t v5 = v0[44];
  uint64_t v6 = (void *)v0[36];
  v6[3] = v0[81];
  v6[4] = sub_256C90080(&qword_269FC4DE8, &qword_269FC4DE0);
  swift_release();
  swift_release();
  swift_release();
  *uint64_t v6 = v9;
  sub_256CA0220(v5, (void (*)(void))type metadata accessor for ModelServiceClient.StreamBacking);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_256CA0220(v10, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v1 + 24));
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v7();
}

uint64_t sub_256C93BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_107_0();
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v23 = (os_activity_scope_state_s *)(*(void *)(v22 + 544) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v23);
  swift_endAccess();
  OUTLINED_FUNCTION_21_9();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_63_5();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v33,
           a20,
           a21,
           a22);
}

uint64_t sub_256C93D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_107_0();
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v23 = *(void *)(v22 + 544);
  swift_release();
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v23 + 24));
  swift_endAccess();
  OUTLINED_FUNCTION_21_9();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_63_5();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v33,
           a20,
           a21,
           a22);
}

uint64_t sub_256C93E64()
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  uint64_t v1 = *(uint64_t (**)())(v0 + 608);
  uint64_t v20 = *(void *)(v0 + 568);
  uint64_t v18 = *(void *)(v0 + 512);
  uint64_t v19 = *(void *)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v3 = *(void *)(v0 + 448);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 328);
  uint64_t v7 = *(int **)(v0 + 336);
  uint64_t v9 = *(void *)(v0 + 312);
  (*(void (**)(uint64_t, uint64_t, void))(v0 + 624))(v2, v9 + *(int *)(v0 + 92), *(void *)(v0 + 616));
  sub_256C5FC18(v3 + *(int *)(v4 + 24), v8, &qword_269FC3228);
  sub_256C5FC70(v2, v6, &qword_26B2C7798);
  sub_256C5FC70(v8, v6 + v7[5], &qword_269FC3228);
  *(void *)(v6 + v7[6]) = v1;
  *(unsigned char *)(v6 + v7[7]) = 0;
  uint64_t v10 = (uint64_t (**)())(v6 + v7[8]);
  *uint64_t v10 = sub_256C9FEB4;
  v10[1] = v1;
  sub_256C9FEBC(v6, v5, (void (*)(void))type metadata accessor for ModelServiceClient.StreamBacking);
  sub_256C9FEBC(v9, v18, (void (*)(void))type metadata accessor for RequestMetadata);
  unint64_t v11 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v12 = swift_allocObject();
  sub_256C9FBA4(v18, v12 + v11, (void (*)(void))type metadata accessor for RequestMetadata);
  *(void *)(v0 + 648) = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4DE0);
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  *(void *)(v0 + 656) = sub_256CD5450(v5, (uint64_t)&unk_269FC4DC8, v12, (uint64_t)&unk_269FC4DD8, v20);
  OUTLINED_FUNCTION_22();
  return MEMORY[0x270FA2498](v13, v14, v15);
}

void (*sub_256C940C8(void *a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v5);
  uint64_t v7 = malloc(*(void *)(v6 + 64));
  v4[4] = v7;
  sub_256C5FC18(a2, (uint64_t)v7, &qword_26B2C7798);
  v4[5] = sub_256C9DD00(v4, (uint64_t)v7);
  return sub_256C94170;
}

void sub_256C94170(uint64_t a1, uint64_t a2)
{
}

void (*sub_256C9417C(void *a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_256C5FC18(a2, (uint64_t)v6, qword_26B2C5B70);
  v4[5] = sub_256C9DDE4(v4, (uint64_t)v6);
  return sub_256C94228;
}

void sub_256C94228(uint64_t a1, uint64_t a2)
{
}

void sub_256C94234(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  uint64_t v6 = OUTLINED_FUNCTION_129_0();
  v7(v6);
  sub_256C0044C((uint64_t)v5, a3);
  free(v5);
  free(v4);
}

uint64_t sub_256C94294(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_256CEDC88();
  __swift_project_value_buffer(v5, (uint64_t)qword_26B2C8668);
  uint64_t v6 = sub_256CEDC68();
  os_log_type_t v7 = sub_256CEE2D8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_256BD4000, v6, v7, "Invalidating direct InferenceProvider connection.", v8, 2u);
    MEMORY[0x25A2AEBD0](v8, -1, -1);
  }

  uint64_t v9 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  swift_retain();
  sub_256BDB760();
  return swift_release();
}

uint64_t sub_256C9442C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256C26524;
  return sub_256C1D8EC();
}

uint64_t sub_256C944BC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C94584, a1, 0);
}

uint64_t sub_256C94584()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  v0[9] = v2;
  uint64_t v3 = v1 + v2;
  swift_beginAccess();
  uint64_t v4 = (int *)type metadata accessor for ModelServiceClient.StreamBacking();
  v0[10] = v4;
  if (*(unsigned char *)(v3 + v4[7]))
  {
    uint64_t v5 = v0[6];
    uint64_t v6 = v0[5];
    v0[12] = *(void *)(v3 + v4[6]);
    type metadata accessor for RequestMetadata(0);
    sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v7();
    uint64_t v8 = swift_task_alloc();
    v0[13] = v8;
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v6;
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[14] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_256C948F8;
    OUTLINED_FUNCTION_198();
    return v10(v10, v11, v12, v13, v14, v15, v16, v17);
  }
  else
  {
    sub_256C5FC18(v3 + v4[5], v0[8], &qword_269FC3228);
    uint64_t v19 = (void *)OUTLINED_FUNCTION_39();
    v0[11] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_256C94790;
    OUTLINED_FUNCTION_32_1(v0[8]);
    OUTLINED_FUNCTION_198();
    return v21(v20, v21, v22, v23, v24, v25, v26, v27);
  }
}

uint64_t sub_256C94790()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C94870()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = v0[8];
  *(unsigned char *)(v0[5] + v0[9] + *(int *)(v0[10] + 28)) = 1;
  sub_256C0044C(v1, &qword_269FC3228);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t sub_256C948F8()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 56);
  *uint64_t v4 = *v2;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  sub_256C0044C(v5, &qword_26B2C7798);
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C94A54()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C94AB4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = (void *)v0[15];
  type metadata accessor for ModelManagerError();
  sub_256C9FBF8(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  uint64_t v2 = swift_allocError();
  uint64_t v4 = v3;
  v0[16] = v2;
  MEMORY[0x25A2AE9C0](v1);
  ModelManagerError.init(wrapping:)(v1, v4);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_39();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_256C94BCC;
  return v7(v2);
}

uint64_t sub_256C94BCC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void **)(v1 + 128);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  swift_task_dealloc();

  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C94CC8()
{
  OUTLINED_FUNCTION_2();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256C94D30(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 56) = a5;
  *(unsigned char *)(v5 + 128) = a3;
  *(void *)(v5 + 40) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  *(void *)(v5 + 64) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  *(void *)(v5 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  *(void *)(v5 + 80) = swift_task_alloc();
  *(void *)(v5 + 88) = type metadata accessor for RequestMetadata(0);
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C94E6C, 0, 0);
}

uint64_t sub_256C94E6C()
{
  uint64_t v27 = v0;
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[6];
  uint64_t v4 = sub_256CEDC88();
  os_log_type_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_26B2C8668);
  sub_256C9FEBC(v3, v1, (void (*)(void))type metadata accessor for RequestMetadata);
  sub_256C9FEBC(v3, v2, (void (*)(void))type metadata accessor for RequestMetadata);
  sub_256CEDEC8();
  uint64_t v6 = sub_256CEDC68();
  os_log_type_t v7 = sub_256CEE2D8();
  BOOL v8 = OUTLINED_FUNCTION_102(v7);
  uint64_t v9 = v0[12];
  unint64_t v10 = v0[13];
  if (v8)
  {
    uint64_t v23 = v0[12];
    os_log_type_t type = v5;
    uint64_t v11 = v0[10];
    os_log_t log = (os_log_t)v0[11];
    uint64_t v22 = v0[9];
    uint64_t v12 = v0[5];
    uint64_t v13 = OUTLINED_FUNCTION_23_0();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134218498;
    v0[2] = *(void *)(v12 + 16);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v14();
    uint64_t v15 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v17 = v16;
    sub_256C0044C(v11, &qword_26B2C7798);
    v0[3] = sub_256BE14CC(v15, v17, &v26);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256CA0220(v10, (void (*)(void))type metadata accessor for RequestMetadata);
    *(_WORD *)(v13 + 22) = 2080;
    sub_256C5FC18(v23 + SHIDWORD(log[3].isa), v22, qword_26B2C5B70);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_137_0();
    v0[4] = sub_256BE14CC(v22, v10, &v26);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256CA0220(v23, (void (*)(void))type metadata accessor for RequestMetadata);
    _os_log_impl(&dword_256BD4000, v6, type, "Received buffer of %ld elements from inference provider for %s:%s", (uint8_t *)v13, 0x20u);
    OUTLINED_FUNCTION_111_1();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_256CA0220(v10, (void (*)(void))type metadata accessor for RequestMetadata);
    sub_256CA0220(v9, (void (*)(void))type metadata accessor for RequestMetadata);
  }

  uint64_t v25 = (uint64_t (*)(uint64_t))((char *)&dword_269FC4E08 + dword_269FC4E08);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[14] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_256C95204;
  uint64_t v19 = OUTLINED_FUNCTION_32_1(v0[5]);
  return v25(v19);
}

uint64_t sub_256C95204()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C952D0()
{
  OUTLINED_FUNCTION_257();
  uint64_t v10 = v1;
  OUTLINED_FUNCTION_15();
  if (*(unsigned char *)(v0 + 128) != 1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_256();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = type metadata accessor for ClientData(0);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_11_4();
  *(void *)(v0 + 120) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_256C953F4;
  uint64_t v5 = OUTLINED_FUNCTION_32_1(*(void *)(v0 + 64));
  return v9(v5);
}

uint64_t sub_256C953F4()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v1 + 64);
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  sub_256C0044C(v4, &qword_269FC3228);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_198();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_256C95584()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_256C95614;
  return sub_256C86B7C();
}

uint64_t sub_256C95614()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256C95710()
{
  OUTLINED_FUNCTION_44_1();
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = sub_256CEDC88();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B2C8668);
  MEMORY[0x25A2AE9C0](v2);
  MEMORY[0x25A2AE9C0](v2);
  uint64_t v4 = (void *)sub_256CEDC68();
  os_log_type_t v5 = sub_256CEE2B8();
  BOOL v6 = OUTLINED_FUNCTION_70(v5);
  uint64_t v7 = *(void **)(v0 + 32);
  if (v6)
  {
    OUTLINED_FUNCTION_24_0();
    uint64_t v8 = (void *)OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_124(5.7779e-34);
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_78_4(v9);
    *uint64_t v8 = v1;

    OUTLINED_FUNCTION_54_4(&dword_256BD4000, v10, v11, "Error occurred when invalidting RunningBoard ssertion: %@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    OUTLINED_FUNCTION_54_5();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
  }
  OUTLINED_FUNCTION_16();
  return v12();
}

uint64_t ModelServiceClient.fetchModelInstance(session:)()
{
  OUTLINED_FUNCTION_12();
  v1[19] = v2;
  v1[20] = v0;
  v1[18] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v4);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  os_log_type_t v5 = (void *)swift_task_alloc();
  v1[23] = v5;
  *os_log_type_t v5 = v1;
  v5[1] = sub_256C95974;
  return ModelServiceClient.establishment(of:)();
}

uint64_t sub_256C95974()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  *BOOL v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 160);
    return MEMORY[0x270FA2498](sub_256C95A80, v9, 0);
  }
}

uint64_t sub_256C95A80()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_81_2(v1[20]);
  v1[24] = OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  v1[25] = sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  v1[26] = *(void *)(v2 + 16);
  v1[27] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  OUTLINED_FUNCTION_271();
  v3();
  uint64_t v14 = *(void *)(v0 + 144) + **(int **)(v0 + 144);
  uint64_t v4 = (void *)swift_task_alloc();
  v1[28] = (uint64_t)v4;
  *uint64_t v4 = v1;
  v4[1] = sub_256C95BDC;
  OUTLINED_FUNCTION_50_0();
  return v10(v5, v6, v7, v8, v9, v10, v11, v12, v14, v0 + 144);
}

uint64_t sub_256C95BDC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 176);
  *uint64_t v4 = *v2;
  *(void *)(v3 + 232) = v0;
  swift_task_dealloc();
  sub_256C0044C(v5, qword_26B2C5B70);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C95CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_63_1();
  uint64_t v21 = *(void (**)(uint64_t))(v20 + 168);
  uint64_t v22 = *(void *)(v20 + 16);
  uint64_t v23 = *(void *)(v20 + 24);
  uint64_t v24 = *(void *)(v20 + 32);
  uint64_t v43 = *(void *)(v20 + 40);
  uint64_t v25 = *(void *)(v20 + 56);
  uint64_t v26 = *(void *)(v20 + 72);
  uint64_t v44 = *(void *)(v20 + 64);
  uint64_t v45 = *(void *)(v20 + 48);
  HIDWORD(a15) = *(unsigned __int8 *)(v20 + 80);
  (*(void (**)(void (*)(uint64_t), void, void))(v20 + 208))(v21, *(void *)(v20 + 152) + *(void *)(v20 + 192), *(void *)(v20 + 200));
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_84_2();
  OUTLINED_FUNCTION_100_0();
  if (!v28)
  {
    a10 = *(void *)(v27 + 8);
    a11 = v24;
    a12 = v23;
    a13 = v22;
    uint64_t v29 = *(void *)(v27 + 16);
    *(void *)(v27 + 8) = v45;
    *(void *)(v27 + 16) = v25;
    *(void *)(v27 + 24) = v44;
    *(void *)(v27 + 32) = v26;
    *(unsigned char *)(v27 + 40) = BYTE4(a15);
    sub_256CEDEC8();
    sub_256CEDEC8();
    uint64_t v30 = v29;
    uint64_t v22 = a13;
    sub_256C9BBDC(a10, v30);
  }
  uint64_t v31 = OUTLINED_FUNCTION_64_3();
  v21(v31);
  uint64_t v32 = *(void *)(v20 + 168);
  uint64_t v33 = *(void *)(v20 + 144);
  swift_endAccess();
  sub_256C0044C(v32, qword_26B2C5B70);
  *(void *)uint64_t v33 = v22;
  *(void *)(v33 + 8) = v23;
  *(void *)(v33 + 16) = v24;
  *(void *)(v33 + 24) = v43;
  *(void *)(v33 + 32) = v45;
  *(void *)(v33 + 40) = v25;
  *(void *)(v33 + 48) = v44;
  *(void *)(v33 + 56) = v26;
  *(unsigned char *)(v33 + 64) = BYTE4(a15);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_62();
  return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, v43, a15, v44, v45, a18, a19, a20);
}

uint64_t sub_256C95E6C()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelServiceClient.establishment(of:)()
{
  OUTLINED_FUNCTION_2();
  v1[26] = v2;
  v1[27] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  OUTLINED_FUNCTION_21(v3);
  v1[28] = OUTLINED_FUNCTION_51_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_6(v4);
  v1[29] = v5;
  v1[30] = *(void *)(v6 + 64);
  v1[31] = OUTLINED_FUNCTION_38();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C95FA0()
{
  uint64_t v112 = v0;
  uint64_t v4 = *(void *)(v0 + 216);
  if (*(unsigned char *)(v4 + 192))
  {
    uint64_t v5 = *(void *)(v0 + 208) + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
    sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v6();
    uint64_t v7 = (uint64_t *)(v4 + 200);
    OUTLINED_FUNCTION_66_3();
    if (!*(void *)(*(void *)(v4 + 200) + 16)) {
      goto LABEL_5;
    }
    sub_256C9BD68(*(void *)(v0 + 264), (uint64_t)qword_26B2C5B70);
    if ((v9 & 1) == 0) {
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_85_1(v8);
    uint64_t v11 = *(void *)(v10 + 8);
    uint64_t v5 = *(void *)(v10 + 16);
    uint64_t v1 = *(void *)(v10 + 24);
    uint64_t v2 = *(void *)(v10 + 32);
    uint64_t v3 = *(unsigned __int8 *)(v10 + 40);
    swift_retain();
    uint64_t v12 = OUTLINED_FUNCTION_128_0();
    sub_256C5BFF8(v12, v13);
    if (v4 != 1)
    {
      swift_endAccess();
      uint64_t v47 = swift_retain();
      sub_256C9EA2C(v47, v11, v5);
      if (v4)
      {
        if (qword_26B2C8680 != -1) {
          swift_once();
        }
        uint64_t v48 = sub_256CEDC88();
        uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_26B2C8668);
        OUTLINED_FUNCTION_131_0(v49, v50, qword_26B2C5B70);
        uint64_t v51 = sub_256CEDC68();
        os_log_type_t v52 = sub_256CEE298();
        BOOL v53 = os_log_type_enabled(v51, v52);
        uint64_t v54 = *(void *)(v0 + 256);
        if (v53)
        {
          logb = v51;
          uint64_t v55 = *(void *)(v0 + 248);
          OUTLINED_FUNCTION_24_0();
          uint64_t v107 = OUTLINED_FUNCTION_23_0();
          uint64_t v111 = v107;
          OUTLINED_FUNCTION_127_0(4.8149e-34);
          sub_256C5FC18(v54, v55, qword_26B2C5B70);
          uint64_t v56 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
          unint64_t v58 = v57;
          uint64_t v59 = v55;
          uint64_t v51 = qword_26B2C5B70;
          sub_256C0044C(v59, qword_26B2C5B70);
          uint64_t v60 = sub_256BE14CC(v56, v58, &v111);
          OUTLINED_FUNCTION_120_1(v60);
          swift_bridgeObjectRelease();
          sub_256C0044C(v54, qword_26B2C5B70);
          OUTLINED_FUNCTION_97_2(&dword_256BD4000, v61, v62, "Reusing existing session for %s", v63, v64, v65, v66, v78, v81, v84, v87, v90, v92, v95, v98, v100, v0 + 200, v107,
            logb);
          OUTLINED_FUNCTION_112_1();
          OUTLINED_FUNCTION_4();
          OUTLINED_FUNCTION_4();
        }
        else
        {
          sub_256C0044C(*(void *)(v0 + 256), qword_26B2C5B70);
        }

        uint64_t v75 = (void *)swift_task_alloc();
        *(void *)(v0 + 296) = v75;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
        OUTLINED_FUNCTION_136_0();
        *uint64_t v75 = v76;
        v75[1] = sub_256C96B48;
        goto LABEL_11;
      }
    }
    else
    {
LABEL_5:
      swift_endAccess();
    }
    OUTLINED_FUNCTION_66_3();
    uint64_t v14 = *v7;
    uint64_t v101 = v4 + 200;
    if (*(void *)(*v7 + 16)
      && (sub_256C9BD68(*(void *)(v0 + 264), (uint64_t)qword_26B2C5B70), (v15 & 1) != 0)
      && (OUTLINED_FUNCTION_60_6(), OUTLINED_FUNCTION_52_4(), v14 != 1))
    {
      uint64_t v67 = swift_endAccess();
      OUTLINED_FUNCTION_62_5(v67, v68, v69, v70, v71, v72, v73, v74, v78, v81, v84, v87, v90, v92, v95, v98, v101, v103, v105,
        (uint64_t)log);
      OUTLINED_FUNCTION_79_2();
      char v16 = v0 - 48;
    }
    else
    {
      swift_endAccess();
      OUTLINED_FUNCTION_108_1();
    }
    uint64_t v17 = OUTLINED_FUNCTION_22_7(v16, v78, v81, v84, v87, v90, v92, v95, v98, v101, v103, v105, (uint64_t)log);
    OUTLINED_FUNCTION_132_0(v17);
    sub_256C5FC18(v5, v14, qword_26B2C5B70);
    sub_256C9FBF8(&qword_26B2C5010, v18, (void (*)(uint64_t))type metadata accessor for ModelServiceClient);
    OUTLINED_FUNCTION_29_5();
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = OUTLINED_FUNCTION_109_1(v19);
    uint64_t v22 = sub_256C5FC70(v20, v21, qword_26B2C5B70);
    OUTLINED_FUNCTION_141_0(v22, v23, v24, v25, v26, v27, v28, v29, v79, v82, v85, v88);
    sub_256C5FC70(v3, v30, &qword_26B2C5048);
    swift_retain_n();
    uint64_t v31 = swift_retain();
    OUTLINED_FUNCTION_55_4(v31, v32, v33, v34, v35, v36, v37, v38, v80, v83, v86, v89, v91, v93, v96, v99, v102, v104, v106,
      (uint64_t)loga);
    uint64_t v39 = sub_256C1C324(v94, (uint64_t)&unk_269FC4CA8, v0 + 208);
    *(void *)(v0 + 16) = v39;
    *(void *)(v0 + 312) = v39;
    *(void *)(v0 + 24) = v5;
    *(void *)(v0 + 32) = v1;
    *(void *)(v0 + 40) = v2;
    *(void *)(v0 + 48) = v3;
    *(unsigned char *)(v0 + 56) = v4;
    OUTLINED_FUNCTION_13();
    swift_retain();
    sub_256C9CA40(v0 + 16, v97);
    swift_endAccess();
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
    OUTLINED_FUNCTION_136_0();
    void *v40 = v41;
    v40[1] = sub_256C96CDC;
LABEL_11:
    OUTLINED_FUNCTION_99_2();
    return MEMORY[0x270FA1FA8](v42);
  }
  *(unsigned char *)(v4 + 192) = 1;
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 112), *(void *)(v4 + 136));
  OUTLINED_FUNCTION_51();
  *(void *)(v0 + 272) = sub_256C2A49C();
  *(void *)(v0 + 280) = swift_allocObject();
  swift_weakInit();
  swift_retain();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_99_2();
  return MEMORY[0x270FA2498](v43, v44, v45);
}

uint64_t sub_256C96524()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = *(void *)(v0 + 280);
  type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle();
  swift_allocObject();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_256C9E9C0;
  *(void *)(v2 + 24) = v1;
  OUTLINED_FUNCTION_13();
  swift_retain();
  swift_retain();
  sub_256C9C934();
  swift_endAccess();
  swift_release_n();
  swift_release_n();
  swift_release();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C96658()
{
  uint64_t v108 = v0;
  uint64_t v4 = *(void *)(v0 + 216);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v5();
  uint64_t v6 = (uint64_t *)(v4 + 200);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v4 + 200) + 16)) {
    goto LABEL_4;
  }
  sub_256C9BD68(*(void *)(v0 + 264), (uint64_t)qword_26B2C5B70);
  if ((v8 & 1) == 0) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_85_1(v7);
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v1 = *(void *)(v9 + 24);
  uint64_t v2 = *(void *)(v9 + 32);
  uint64_t v3 = *(unsigned __int8 *)(v9 + 40);
  swift_retain();
  uint64_t v12 = OUTLINED_FUNCTION_51();
  sub_256C5BFF8(v12, v13);
  if (v4 == 1)
  {
LABEL_4:
    swift_endAccess();
    goto LABEL_5;
  }
  swift_endAccess();
  uint64_t v43 = swift_retain();
  sub_256C9EA2C(v43, v11, v10);
  if (!v4)
  {
LABEL_5:
    OUTLINED_FUNCTION_66_3();
    uint64_t v14 = *v6;
    uint64_t v97 = v4 + 200;
    if (*(void *)(*v6 + 16)
      && (sub_256C9BD68(*(void *)(v0 + 264), (uint64_t)qword_26B2C5B70), (v15 & 1) != 0)
      && (OUTLINED_FUNCTION_60_6(), OUTLINED_FUNCTION_52_4(), v14 != 1))
    {
      uint64_t v63 = swift_endAccess();
      OUTLINED_FUNCTION_62_5(v63, v64, v65, v66, v67, v68, v69, v70, v74, v77, v80, v83, v86, v88, v91, v94, v97, v99, v101,
        (uint64_t)log);
      OUTLINED_FUNCTION_79_2();
      char v16 = v0 - 48;
    }
    else
    {
      swift_endAccess();
      OUTLINED_FUNCTION_108_1();
    }
    uint64_t v17 = OUTLINED_FUNCTION_22_7(v16, v74, v77, v80, v83, v86, v88, v91, v94, v97, v99, v101, (uint64_t)log);
    OUTLINED_FUNCTION_132_0(v17);
    sub_256C5FC18(v0 + 128, v14, qword_26B2C5B70);
    sub_256C9FBF8(&qword_26B2C5010, v18, (void (*)(uint64_t))type metadata accessor for ModelServiceClient);
    OUTLINED_FUNCTION_29_5();
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = OUTLINED_FUNCTION_109_1(v19);
    uint64_t v22 = sub_256C5FC70(v20, v21, qword_26B2C5B70);
    OUTLINED_FUNCTION_141_0(v22, v23, v24, v25, v26, v27, v28, v29, v75, v78, v81, v84);
    sub_256C5FC70(v3, v30, &qword_26B2C5048);
    swift_retain_n();
    uint64_t v31 = swift_retain();
    OUTLINED_FUNCTION_55_4(v31, v32, v33, v34, v35, v36, v37, v38, v76, v79, v82, v85, v87, v89, v92, v95, v98, v100, v102,
      (uint64_t)loga);
    uint64_t v39 = sub_256C1C324(v90, (uint64_t)&unk_269FC4CA8, v0 + 208);
    *(void *)(v0 + 16) = v39;
    *(void *)(v0 + 312) = v39;
    *(void *)(v0 + 24) = v0 + 128;
    *(void *)(v0 + 32) = v1;
    *(void *)(v0 + 40) = v2;
    *(void *)(v0 + 48) = v3;
    *(unsigned char *)(v0 + 56) = v4;
    OUTLINED_FUNCTION_13();
    swift_retain();
    sub_256C9CA40(v0 + 16, v93);
    swift_endAccess();
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
    OUTLINED_FUNCTION_136_0();
    void *v40 = v41;
    v40[1] = sub_256C96CDC;
    goto LABEL_10;
  }
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_256CEDC88();
  uint64_t v45 = __swift_project_value_buffer(v44, (uint64_t)qword_26B2C8668);
  OUTLINED_FUNCTION_131_0(v45, v46, qword_26B2C5B70);
  uint64_t v47 = sub_256CEDC68();
  os_log_type_t v48 = sub_256CEE298();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v50 = *(void *)(v0 + 256);
  if (v49)
  {
    logb = v47;
    uint64_t v51 = *(void *)(v0 + 248);
    OUTLINED_FUNCTION_24_0();
    uint64_t v103 = OUTLINED_FUNCTION_23_0();
    uint64_t v107 = v103;
    OUTLINED_FUNCTION_127_0(4.8149e-34);
    sub_256C5FC18(v50, v51, qword_26B2C5B70);
    uint64_t v52 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v54 = v53;
    uint64_t v55 = v51;
    uint64_t v47 = qword_26B2C5B70;
    sub_256C0044C(v55, qword_26B2C5B70);
    uint64_t v56 = sub_256BE14CC(v52, v54, &v107);
    OUTLINED_FUNCTION_120_1(v56);
    swift_bridgeObjectRelease();
    sub_256C0044C(v50, qword_26B2C5B70);
    OUTLINED_FUNCTION_97_2(&dword_256BD4000, v57, v58, "Reusing existing session for %s", v59, v60, v61, v62, v74, v77, v80, v83, v86, v88, v91, v94, v96, v0 + 200, v103,
      logb);
    OUTLINED_FUNCTION_112_1();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256C0044C(*(void *)(v0 + 256), qword_26B2C5B70);
  }

  uint64_t v71 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v71;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  OUTLINED_FUNCTION_136_0();
  void *v71 = v72;
  v71[1] = sub_256C96B48;
LABEL_10:
  OUTLINED_FUNCTION_99_2();
  return MEMORY[0x270FA1FA8](v42);
}

uint64_t sub_256C96B48()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 304) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C96C40()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  sub_256C0044C(*(void *)(v0 + 264), qword_26B2C5B70);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v1();
}

uint64_t sub_256C96CDC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 328) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C96DD4()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  sub_256C0044C(*(void *)(v0 + 264), qword_26B2C5B70);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v1();
}

uint64_t sub_256C96E70()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  swift_release();
  sub_256C0044C(*(void *)(v0 + 264), qword_26B2C5B70);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_198();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_256C96F10()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  swift_release();
  sub_256C0044C(*(void *)(v0 + 264), qword_26B2C5B70);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_198();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t ModelServiceClient.executeRequest(session:metadata:)()
{
  OUTLINED_FUNCTION_12();
  v1[35] = v2;
  v1[36] = v0;
  v1[33] = v3;
  v1[34] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  OUTLINED_FUNCTION_21(v5);
  v1[37] = OUTLINED_FUNCTION_51_0();
  uint64_t v6 = type metadata accessor for ClientData(0);
  v1[38] = v6;
  OUTLINED_FUNCTION_21(v6);
  v1[39] = OUTLINED_FUNCTION_51_0();
  uint64_t v7 = sub_256CEE178();
  v1[40] = v7;
  OUTLINED_FUNCTION_6(v7);
  v1[41] = v8;
  v1[42] = OUTLINED_FUNCTION_51_0();
  uint64_t v9 = type metadata accessor for InferenceProviderRequestResult(0);
  v1[43] = v9;
  OUTLINED_FUNCTION_21(v9);
  v1[44] = OUTLINED_FUNCTION_38();
  v1[45] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v10);
  v1[46] = OUTLINED_FUNCTION_38();
  v1[47] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v11);
  v1[48] = OUTLINED_FUNCTION_51_0();
  uint64_t v12 = type metadata accessor for RequestMetadata(0);
  v1[49] = v12;
  OUTLINED_FUNCTION_21(v12);
  v1[50] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v13, v14, v15);
}

uint64_t sub_256C97164()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_83_3();
  v0[51] = swift_initStackObject();
  v0[52] = _OSActivity.init(_:)("Client executing request", 24, 2);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[53] = (uint64_t)v1;
  void *v1 = v0;
  v1[1] = sub_256C9724C;
  OUTLINED_FUNCTION_32_1(v0[34]);
  return ModelServiceClient.establishment(of:)();
}

uint64_t sub_256C9724C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 432) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  uint64_t v5 = *(void *)(v4 + 288);
  if (v0) {
    uint64_t v6 = sub_256C97D68;
  }
  else {
    uint64_t v6 = sub_256C97374;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256C97374(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, os_log_t log, os_log_type_t type, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28)
{
  OUTLINED_FUNCTION_63_1();
  a27 = v29;
  a28 = v30;
  a26 = v28;
  a17 = *MEMORY[0x263EF8340];
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_256CEDC88();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_26B2C8668);
  v28[55] = v32;
  uint64_t v33 = OUTLINED_FUNCTION_28();
  sub_256C9FEBC(v33, v34, v35);
  swift_retain_n();
  uint64_t v36 = sub_256CEDC68();
  os_log_type_t v37 = sub_256CEE298();
  BOOL v38 = OUTLINED_FUNCTION_102(v37);
  uint64_t v39 = v28[50];
  if (v38)
  {
    os_log_type_t typeb = v32;
    uint64_t v40 = v28[48];
    a12 = v28[47];
    a10 = v28 + 31;
    a11 = v28[34];
    uint64_t v41 = swift_slowAlloc();
    a13 = swift_slowAlloc();
    a16 = a13;
    *(_DWORD *)uint64_t v41 = 136315394;
    OUTLINED_FUNCTION_134_0();
    uint64_t v42 = sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    uint64_t v44 = *(void (**)(uint64_t))(v43 + 16);
    uint64_t v45 = OUTLINED_FUNCTION_128_0();
    v44(v45);
    uint64_t v46 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v48 = v47;
    sub_256C0044C(v40, &qword_26B2C7798);
    v28[31] = sub_256BE14CC(v46, v48, &a16);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256CA0220(v39, (void (*)(void))type metadata accessor for RequestMetadata);
    *(_WORD *)(v41 + 12) = 2080;
    ((void (*)(uint64_t, uint64_t, uint64_t))v44)(a12, a11 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid, v42);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    sub_256C0044C(a12, qword_26B2C5B70);
    uint64_t v49 = OUTLINED_FUNCTION_128_0();
    v28[32] = sub_256BE14CC(v49, v50, v51);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_256BD4000, v36, typeb, "Sending execute request for %s:%s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256CA0220(v28[50], (void (*)(void))type metadata accessor for RequestMetadata);
    swift_release_n();
  }

  uint64_t v52 = (void *)v28[36];
  uint64_t v53 = v28[34];
  uint64_t v54 = v52[18];
  __swift_project_boxed_opaque_existential_1(v52 + 14, v52[17]);
  uint64_t v55 = *(void *)(v53 + OBJC_IVAR____TtC20ModelManagerServices7Session_supportedAssetBundleIdentifiers);
  if (!*(void *)(v55 + 16)) {
    __break(1u);
  }
  uint64_t v57 = v28[41];
  uint64_t v56 = v28[42];
  uint64_t v58 = v28[40];
  v28[56] = *(void *)(v55 + 40);
  sub_256CEDEC8();
  sub_256CEE1E8();
  sub_256CEE168();
  uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
  OUTLINED_FUNCTION_123_1(v59, v54);
  os_log_t loga = (os_log_t)((char *)v61 + *v61);
  uint64_t typea = v60;
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v28[57] = v62;
  *int v62 = v63;
  v62[1] = sub_256C977C8;
  OUTLINED_FUNCTION_62();
  return v72(v64, v65, v66, v67, v68, v69, v70, v71, a9, a10, a11, a12, a13, loga, typea, a16, a17, a18, a19, a20);
}

uint64_t sub_256C977C8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 464) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C97908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_63_1();
  uint64_t v60 = *MEMORY[0x263EF8340];
  uint64_t v21 = *(void *)(v20 + 360);
  uint64_t v22 = *(void *)(v20 + 344);
  uint64_t v24 = *(void *)(v20 + 296);
  uint64_t v23 = *(void *)(v20 + 304);
  uint64_t v26 = *(void *)(v20 + 56);
  uint64_t v25 = *(void *)(v20 + 64);
  uint64_t v28 = *(void *)(v20 + 72);
  uint64_t v27 = *(void *)(v20 + 80);
  char v29 = *(unsigned char *)(v20 + 88);
  sub_256C9FBA4(*(void *)(v20 + 352), v21, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
  sub_256C5FC18(v21 + *(int *)(v22 + 24), v24, &qword_269FC3228);
  if (__swift_getEnumTagSinglePayload(v24, 1, v23) == 1)
  {
    uint64_t v30 = *(void *)(v20 + 296);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_256C0044C(v30, &qword_269FC3228);
    uint64_t v31 = (void *)sub_256CEDC68();
    os_log_type_t v32 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_25_0(v32))
    {
      *(_WORD *)OUTLINED_FUNCTION_99() = 0;
      OUTLINED_FUNCTION_61(&dword_256BD4000, v33, v34, "ModelXPCSender executeRequest called with invalid data");
      OUTLINED_FUNCTION_4();
    }
    uint64_t v35 = *(void *)(v20 + 416);
    uint64_t v36 = *(void *)(v20 + 360);

    type metadata accessor for ModelManagerError();
    sub_256C9FBF8(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_68_3();
    OUTLINED_FUNCTION_138_0();
    uint64_t v59 = v31;
    swift_willThrow();
    sub_256CA0220(v36, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
    OUTLINED_FUNCTION_13();
    os_activity_scope_leave((os_activity_scope_state_t)(v35 + 24));
    swift_endAccess();
    OUTLINED_FUNCTION_26_9();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v58 = v28;
    os_log_type_t v37 = *(void (**)(uint64_t))(v20 + 368);
    sub_256C9FBA4(*(void *)(v20 + 296), *(void *)(v20 + 312), (void (*)(void))type metadata accessor for ClientData);
    sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v38();
    uint64_t v59 = (void *)(v20 + 176);
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_84_2();
    OUTLINED_FUNCTION_100_0();
    if (!v40)
    {
      uint64_t v41 = *(void *)(v39 + 8);
      uint64_t v42 = *(void *)(v39 + 16);
      *(void *)(v39 + 8) = v26;
      *(void *)(v39 + 16) = v25;
      *(void *)(v39 + 24) = v58;
      *(void *)(v39 + 32) = v27;
      *(unsigned char *)(v39 + 40) = v29;
      sub_256CEDEC8();
      sub_256CEDEC8();
      sub_256C9BBDC(v41, v42);
    }
    uint64_t v43 = OUTLINED_FUNCTION_64_3();
    v37(v43);
    uint64_t v44 = *(void *)(v20 + 416);
    uint64_t v45 = *(void *)(v20 + 368);
    a10 = *(void *)(v20 + 384);
    a11 = *(void *)(v20 + 376);
    uint64_t v46 = *(void *)(v20 + 360);
    a12 = *(void *)(v20 + 352);
    a13 = *(void *)(v20 + 336);
    uint64_t v47 = *(void *)(v20 + 312);
    a14 = *(void *)(v20 + 296);
    uint64_t v48 = *(void *)(v20 + 264);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_256C0044C(v45, qword_26B2C5B70);
    sub_256CA0220(v46, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
    sub_256C9FBA4(v47, v48, (void (*)(void))type metadata accessor for ClientData);
    OUTLINED_FUNCTION_13();
    os_activity_scope_leave((os_activity_scope_state_t)(v44 + 24));
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_62();
  return v50(v49, v50, v51, v52, v53, v54, v55, v56, a9, a10, a11, a12, a13, a14, v59, a16, v60, a18, a19, a20);
}

uint64_t sub_256C97D68()
{
  uint64_t v1 = (os_activity_scope_state_s *)(*(void *)(v0 + 416) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v1);
  swift_endAccess();
  OUTLINED_FUNCTION_26_9();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_256C97E8C()
{
  uint64_t v1 = (os_activity_scope_state_s *)(*(void *)(v0 + 416) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v1);
  swift_endAccess();
  OUTLINED_FUNCTION_26_9();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void ModelServiceClient.executeStreamingRequest(session:metadata:)()
{
  OUTLINED_FUNCTION_57();
  uint64_t v23 = v1;
  uint64_t v24 = v0;
  uint64_t v2 = v1;
  uint64_t v25 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for RequestMetadata(0);
  uint64_t v7 = OUTLINED_FUNCTION_6(v6);
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - v14;
  sub_256C9FEBC(v2, (uint64_t)&v22 - v14, (void (*)(void))type metadata accessor for RequestMetadata);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v19 = v24;
  uint64_t v18 = v25;
  *(void *)(v17 + 16) = v24;
  *(void *)(v17 + 24) = v18;
  sub_256C9FBA4((uint64_t)v15, v17 + ((v16 + 32) & ~v16), (void (*)(void))type metadata accessor for RequestMetadata);
  sub_256C9FEBC(v23, (uint64_t)v13, (void (*)(void))type metadata accessor for RequestMetadata);
  uint64_t v20 = (v16 + 24) & ~v16;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  sub_256C9FBA4((uint64_t)v13, v21 + v20, (void (*)(void))type metadata accessor for RequestMetadata);
  *(void *)(v21 + ((v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
  *uint64_t v5 = &unk_269FC4CC0;
  v5[1] = v17;
  v5[2] = 0;
  v5[3] = sub_256C9EFE8;
  v5[4] = v21;
  swift_retain_n();
  swift_retain_n();
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256C98174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[11] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_256C98218;
  return ModelServiceClient.establishment(of:)();
}

uint64_t sub_256C98218()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_16();
    return v4();
  }
  else
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

void sub_256C98314()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0[9] + OBJC_IVAR____TtC20ModelManagerServices7Session_supportedAssetBundleIdentifiers);
  if (*(void *)(v1 + 16))
  {
    v0[12] = *(void *)(v1 + 40);
    sub_256CEDEC8();
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    v0[13] = v2;
    *uint64_t v2 = v3;
    v2[1] = sub_256C983F0;
    OUTLINED_FUNCTION_198();
    sub_256C9275C();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_256C983F0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C984D8()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = v0[6];
  uint64_t v1 = (uint64_t *)v0[7];
  uint64_t v3 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  v1[3] = v3;
  v1[4] = *(void *)(v2 + 8);
  __swift_allocate_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_271();
  v4();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_198();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_256C98590()
{
  OUTLINED_FUNCTION_2();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C985EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RequestMetadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v12);
  sub_256C9FEBC(a2, (uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for RequestMetadata);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  sub_256C9FBA4((uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v14 + v13, (void (*)(void))type metadata accessor for RequestMetadata);
  *(void *)((char *)v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  swift_retain();
  swift_retain();
  sub_256BDB760();
  return swift_release();
}

uint64_t sub_256C987B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  v6[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C9884C, 0, 0);
}

uint64_t sub_256C9884C()
{
  OUTLINED_FUNCTION_2();
  type metadata accessor for RequestMetadata(0);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v1();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_256C98924;
  OUTLINED_FUNCTION_32_1(*(void *)(v0 + 48));
  return ModelServiceClient.cancelRequest(id:session:)();
}

uint64_t sub_256C98924()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v8 = v7;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  sub_256C0044C(v6, &qword_26B2C7798);
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v12();
  }
}

uint64_t sub_256C98A58()
{
  OUTLINED_FUNCTION_44_1();
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = sub_256CEDC88();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B2C8668);
  MEMORY[0x25A2AE9C0](v2);
  MEMORY[0x25A2AE9C0](v2);
  uint64_t v4 = (void *)sub_256CEDC68();
  os_log_type_t v5 = sub_256CEE2D8();
  BOOL v6 = OUTLINED_FUNCTION_70(v5);
  uint64_t v7 = *(void **)(v0 + 64);
  if (v6)
  {
    OUTLINED_FUNCTION_24_0();
    uint64_t v8 = (void *)OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_124(5.7779e-34);
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_78_4(v9);
    *uint64_t v8 = v1;

    OUTLINED_FUNCTION_54_4(&dword_256BD4000, v10, v11, "Streaming Req Cancel caught error: %@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    OUTLINED_FUNCTION_54_5();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v12();
}

uint64_t sub_256C98BE8()
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for _OSActivity();
  swift_initStackObject();
  uint64_t v3 = _OSActivity.init(_:)("ModelServiceClient reacting to modelmanagerd exit", 49, 2);
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_256CEDC88();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B2C8668);
  os_log_type_t v5 = sub_256CEDC68();
  os_log_type_t v6 = sub_256CEE2D8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_256BD4000, v5, v6, "modelmanagerd exited", v7, 2u);
    MEMORY[0x25A2AEBD0](v7, -1, -1);
  }

  uint64_t v8 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v9;
  sub_256BDB8B0();
  swift_release();
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v3 + 24));
  swift_endAccess();
  return swift_release();
}

uint64_t sub_256C98E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return MEMORY[0x270FA2498](sub_256C98E74, 0, 0);
}

uint64_t sub_256C98E74()
{
  OUTLINED_FUNCTION_2();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_256C98F34, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    OUTLINED_FUNCTION_16();
    return v2();
  }
}

uint64_t sub_256C98F34()
{
  OUTLINED_FUNCTION_2();
  sub_256C98FC8();
  swift_release();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_256C98F9C()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 56) == 0;
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256C98FC8()
{
  uint64_t v1 = v0;
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_256CEDC88();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2C8668);
  uint64_t v3 = sub_256CEDC68();
  os_log_type_t v4 = sub_256CEE298();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl(&dword_256BD4000, v3, v4, "Resetting session cache", v5, 2u);
    MEMORY[0x25A2AEBD0](v5, -1, -1);
  }

  swift_beginAccess();
  uint64_t v6 = sub_256CEDEC8();
  uint64_t v7 = sub_256C9E2E0(v6);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 200) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_256C990EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C991D8, a5, 0);
}

uint64_t sub_256C991D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  uint64_t v42 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_83_3();
  v16[26] = swift_initStackObject();
  v16[27] = _OSActivity.init(_:)("Client creating session", 23, 2);
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_256CEDC88();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_26B2C8668);
  OUTLINED_FUNCTION_131_0(v18, v19, qword_26B2C5B70);
  uint64_t v20 = sub_256CEDC68();
  os_log_type_t v21 = sub_256CEE298();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = v16[25];
  if (v22)
  {
    uint64_t v24 = v16[24];
    OUTLINED_FUNCTION_24_0();
    a12 = OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_126_0(4.8149e-34);
    sub_256C5FC18(v23, v24, qword_26B2C5B70);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    uint64_t v25 = sub_256C0044C(v24, qword_26B2C5B70);
    v16[18] = OUTLINED_FUNCTION_96_2(v25, v26, v27);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256C0044C(v23, qword_26B2C5B70);
    OUTLINED_FUNCTION_139(&dword_256BD4000, v28, v29, "Sending create session request message for %s");
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256C0044C(v16[25], qword_26B2C5B70);
  }

  uint64_t v30 = v16[22];
  OUTLINED_FUNCTION_81_2(v16[20]);
  sub_256C5FC70(v30, (uint64_t)(v16 + 7), &qword_26B2C5048);
  uint64_t v41 = v16[22] + *(int *)v16[22];
  uint64_t v31 = (void *)swift_task_alloc();
  v16[28] = v31;
  *uint64_t v31 = v16;
  v31[1] = sub_256C994B8;
  OUTLINED_FUNCTION_22();
  return v38(v32, v33, v34, v35, v36, v37, v38, v39, a9, v41, v16 + 22, a12, v42, a14, a15, a16);
}

uint64_t sub_256C994B8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *os_log_type_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v6 = v5;
  v3[29] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[20];
    uint64_t v8 = sub_256C996D8;
  }
  else
  {
    uint64_t v9 = v3[20];
    sub_256C0044C(v3[23], qword_26B2C5B70);
    uint64_t v8 = sub_256C99604;
    uint64_t v7 = v9;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256C99604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_59();
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v10 = (os_activity_scope_state_s *)(*(void *)(v9 + 216) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v10);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_71_4();
  OUTLINED_FUNCTION_50_0();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, v20);
}

uint64_t sub_256C996D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_59();
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v10 = (os_activity_scope_state_s *)(*(void *)(v9 + 216) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v10);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_50_0();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, v20);
}

uint64_t ModelServiceClient.deleteSessionRequest(id:)()
{
  OUTLINED_FUNCTION_12();
  v1[15] = v2;
  v1[16] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v3);
  v1[17] = OUTLINED_FUNCTION_38();
  v1[18] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C99870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  uint64_t v41 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_83_3();
  v16[19] = swift_initStackObject();
  v16[20] = _OSActivity.init(_:)("Client deleting session", 23, 2);
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_256CEDC88();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_26B2C8668);
  v16[21] = v18;
  OUTLINED_FUNCTION_131_0(v18, v19, qword_26B2C5B70);
  uint64_t v20 = sub_256CEDC68();
  os_log_type_t v21 = sub_256CEE298();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = v16[18];
  if (v22)
  {
    uint64_t v24 = v16[17];
    OUTLINED_FUNCTION_24_0();
    a12 = OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_126_0(4.8149e-34);
    sub_256C5FC18(v23, v24, qword_26B2C5B70);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    uint64_t v25 = sub_256C0044C(v24, qword_26B2C5B70);
    v16[14] = OUTLINED_FUNCTION_96_2(v25, v26, v27);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256C0044C(v23, qword_26B2C5B70);
    OUTLINED_FUNCTION_139(&dword_256BD4000, v28, v29, "Sending deletion session request message for %s");
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256C0044C(v16[18], qword_26B2C5B70);
  }

  OUTLINED_FUNCTION_82_3(v16[16]);
  uint64_t v40 = v16[19] + *(int *)v16[19];
  uint64_t v30 = (void *)swift_task_alloc();
  v16[22] = v30;
  *uint64_t v30 = v16;
  v30[1] = sub_256C99B10;
  OUTLINED_FUNCTION_3_7(v16[15]);
  OUTLINED_FUNCTION_22();
  return v35(v31, v32, v33, v34, v35, v36, v37, v38, a9, v40, v16 + 19, a12, v41, a14, a15, a16);
}

uint64_t sub_256C99B10()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  uint64_t v5 = *(void *)(v4 + 128);
  if (v0) {
    uint64_t v6 = sub_256C99D44;
  }
  else {
    uint64_t v6 = sub_256C99C38;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256C99C38()
{
  OUTLINED_FUNCTION_95();
  uint64_t v6 = v1;
  v5[6] = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_91_2();
  OUTLINED_FUNCTION_13();
  sub_256C9C4FC(v0, (uint64_t)v5);
  sub_256C9EA2C(v5[0], v5[1], v5[2]);
  swift_endAccess();
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v2 + 24));
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C99D44()
{
  uint64_t v15 = v0;
  v14[6] = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(v0 + 184);
  MEMORY[0x25A2AE9C0](v3);
  MEMORY[0x25A2AE9C0](v3);
  uint64_t v4 = (void *)sub_256CEDC68();
  os_log_type_t v5 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_70(v5))
  {
    uint64_t v6 = *(void **)(v0 + 184);
    OUTLINED_FUNCTION_24_0();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_67_4(5.7779e-34);
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_39_8(v8);
    *uint64_t v7 = v2;

    OUTLINED_FUNCTION_54_4(&dword_256BD4000, v9, v10, "Sending deletion session failed with %@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    OUTLINED_FUNCTION_54_5();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 184);
  }
  OUTLINED_FUNCTION_91_2();
  OUTLINED_FUNCTION_13();
  sub_256C9C4FC((uint64_t)v4, (uint64_t)v14);
  sub_256C9EA2C(v14[0], v14[1], v14[2]);
  swift_endAccess();
  OUTLINED_FUNCTION_128_0();
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v1 + 24));
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v12();
}

uint64_t ModelServiceClient.cancelSessionRequest(session:)()
{
  OUTLINED_FUNCTION_12();
  v1[15] = v2;
  v1[16] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v3);
  v1[17] = OUTLINED_FUNCTION_38();
  v1[18] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C99FE8()
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_83_3();
  v0[19] = swift_initStackObject();
  v0[20] = _OSActivity.init(_:)("Client cancelling session", 25, 2);
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  v0[21] = __swift_project_value_buffer(v1, (uint64_t)qword_26B2C8668);
  swift_retain_n();
  uint64_t v2 = sub_256CEDC68();
  os_log_type_t v3 = sub_256CEE298();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[18];
    uint64_t v5 = (_DWORD *)OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_23_0();
    *uint64_t v5 = 136315138;
    OUTLINED_FUNCTION_134_0();
    sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v6();
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    uint64_t v7 = sub_256C0044C(v4, qword_26B2C5B70);
    v0[14] = OUTLINED_FUNCTION_96_2(v7, v8, v9);
    OUTLINED_FUNCTION_133_0();
    swift_bridgeObjectRelease();
    swift_release_n();
    OUTLINED_FUNCTION_140_0(&dword_256BD4000, v10, v11, "Sending cancel session request message for %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v12 = (void *)swift_task_alloc();
  v0[22] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_256C9A260;
  OUTLINED_FUNCTION_32_1(v0[15]);
  OUTLINED_FUNCTION_22();
  return ModelServiceClient.establishment(of:)();
}

uint64_t sub_256C9A260()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *os_log_type_t v3 = v2;
  *os_log_type_t v3 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  uint64_t v5 = *(void *)(v4 + 128);
  if (v0) {
    uint64_t v6 = sub_256C9A708;
  }
  else {
    uint64_t v6 = sub_256C9A388;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256C9A388()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_82_3(v2[16]);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v3();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 40) + **(int **)(v1 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  v2[24] = (uint64_t)v4;
  *uint64_t v4 = v2;
  v4[1] = sub_256C9A4F8;
  uint64_t v5 = v2[17];
  return v7(v5, v0, v1);
}

uint64_t sub_256C9A4F8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *os_log_type_t v3 = v2;
  *os_log_type_t v3 = *v1;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C0044C(*(void *)(v4 + 136), qword_26B2C5B70);
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C9A640()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (os_activity_scope_state_s *)(*(void *)(v0 + 160) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72_3();
  OUTLINED_FUNCTION_198();
  return v3(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_256C9A708()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v2 = *(void **)(v0 + 184);
  MEMORY[0x25A2AE9C0](v2);
  MEMORY[0x25A2AE9C0](v2);
  os_log_type_t v3 = (void *)sub_256CEDC68();
  os_log_type_t v4 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_70(v4))
  {
    OUTLINED_FUNCTION_24_0();
    uint64_t v5 = (void *)OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_67_4(5.7779e-34);
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_39_8(v6);
    *uint64_t v5 = v1;

    OUTLINED_FUNCTION_54_4(&dword_256BD4000, v7, v8, "Sending cancel session failed with %@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    OUTLINED_FUNCTION_54_5();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
  }
  uint64_t v9 = *(void *)(v0 + 160);

  swift_willThrow();
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v9 + 24));
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_71_4();
  return v10();
}

uint64_t sub_256C9A8A4()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v2 = *(void **)(v0 + 200);
  MEMORY[0x25A2AE9C0](v2);
  MEMORY[0x25A2AE9C0](v2);
  os_log_type_t v3 = (void *)sub_256CEDC68();
  os_log_type_t v4 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_70(v4))
  {
    OUTLINED_FUNCTION_24_0();
    uint64_t v5 = (void *)OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_67_4(5.7779e-34);
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_39_8(v6);
    *uint64_t v5 = v1;

    OUTLINED_FUNCTION_54_4(&dword_256BD4000, v7, v8, "Sending cancel session failed with %@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    OUTLINED_FUNCTION_54_5();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
  }
  uint64_t v9 = *(void *)(v0 + 160);

  swift_willThrow();
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v9 + 24));
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_71_4();
  return v10();
}

uint64_t ModelServiceClient.prewarmSession(session:)()
{
  OUTLINED_FUNCTION_12();
  v1[17] = v2;
  v1[18] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v3);
  v1[19] = OUTLINED_FUNCTION_38();
  v1[20] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C9AB00()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_83_3();
  v0[21] = swift_initStackObject();
  v0[22] = _OSActivity.init(_:)("Client prewarming session", 25, 2);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[23] = (uint64_t)v1;
  void *v1 = v0;
  v1[1] = sub_256C9ABE4;
  OUTLINED_FUNCTION_32_1(v0[17]);
  return ModelServiceClient.establishment(of:)();
}

uint64_t sub_256C9ABE4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  uint64_t v5 = *(void *)(v4 + 144);
  if (v0) {
    uint64_t v6 = sub_256C9B20C;
  }
  else {
    uint64_t v6 = sub_256C9AD0C;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256C9AD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_47_3();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_95();
  a22 = v24;
  a13 = *MEMORY[0x263EF8340];
  if (qword_26B2C8680 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_256CEDC88();
  __swift_project_value_buffer(v27, (uint64_t)qword_26B2C8668);
  swift_retain_n();
  uint64_t v28 = sub_256CEDC68();
  os_log_type_t v29 = sub_256CEE298();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = v24[20];
    uint64_t v31 = (_DWORD *)OUTLINED_FUNCTION_24_0();
    a12 = OUTLINED_FUNCTION_23_0();
    *uint64_t v31 = 136315138;
    OUTLINED_FUNCTION_134_0();
    sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v32();
    uint64_t v33 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v35 = v34;
    sub_256C0044C(v30, qword_26B2C5B70);
    v24[16] = sub_256BE14CC(v33, v35, &a12);
    OUTLINED_FUNCTION_133_0();
    swift_bridgeObjectRelease();
    swift_release_n();
    OUTLINED_FUNCTION_140_0(&dword_256BD4000, v36, v37, "Sending session prewarm request message for %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    swift_release_n();
  }

  OUTLINED_FUNCTION_82_3(v24[18]);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v38();
  uint64_t v49 = v24[23] + *(int *)v24[23];
  uint64_t v39 = (void *)swift_task_alloc();
  v24[25] = v39;
  *uint64_t v39 = v24;
  v39[1] = sub_256C9AFF8;
  OUTLINED_FUNCTION_3_7(v24[19]);
  OUTLINED_FUNCTION_22();
  return v44(v40, v41, v42, v43, v44, v45, v46, v47, a9, v49, v24 + 23, a12, a13, a14, a15, a16);
}

uint64_t sub_256C9AFF8()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 152);
  *uint64_t v4 = *v2;
  *(void *)(v3 + 208) = v0;
  swift_task_dealloc();
  sub_256C0044C(v5, qword_26B2C5B70);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_256();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C9B144()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (os_activity_scope_state_s *)(*(void *)(v0 + 176) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72_3();
  OUTLINED_FUNCTION_198();
  return v3(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_256C9B20C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = (os_activity_scope_state_s *)(*(void *)(v0 + 176) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72_3();
  return v2();
}

uint64_t sub_256C9B2D4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = (os_activity_scope_state_s *)(*(void *)(v0 + 176) + 24);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72_3();
  return v2();
}

uint64_t ModelServiceClient.setAssetsHaveUpdated()()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C9B3B8, v0);
}

uint64_t sub_256C9B3B8()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_15_8(*(void **)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_256C9B498;
  uint64_t v2 = OUTLINED_FUNCTION_135();
  return v3(v2);
}

uint64_t sub_256C9B498()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t ModelServiceClient.startMonitoringInferences(endpoint:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C9B578, v1);
}

uint64_t sub_256C9B578()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_15_8(*(void **)(v0 + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_256C5FCCC;
  uint64_t v2 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 16));
  return v3(v2);
}

uint64_t ModelServiceClient.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_256C9B668()
{
  return ModelServiceClient.unownedExecutor.getter();
}

uint64_t sub_256C9B684()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256C26524;
  return ModelServiceClient.establishment(of:)();
}

uint64_t sub_256C9B71C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256C26524;
  return ModelServiceClient.deleteSessionRequest(id:)();
}

uint64_t sub_256C9B7B4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256C26524;
  return ModelServiceClient.cancelSessionRequest(session:)();
}

uint64_t sub_256C9B84C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256C26524;
  return ModelServiceClient.prewarmSession(session:)();
}

uint64_t sub_256C9B8E4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256C1D828;
  return ModelServiceClient.fetchModelInstance(session:)();
}

uint64_t sub_256C9B990()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256C26524;
  return ModelServiceClient.executeRequest(session:metadata:)();
}

uint64_t sub_256C9BA44()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256C26524;
  return ModelServiceClient.cancelRequest(id:session:)();
}

void sub_256C9BAEC()
{
}

uint64_t sub_256C9BB10(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_256C26524;
  return ModelServiceClient.startMonitoringInferences(endpoint:)(a1);
}

uint64_t sub_256C9BBA8()
{
  uint64_t v0 = OUTLINED_FUNCTION_28();
  sub_256BEFD8C(v0);
  return OUTLINED_FUNCTION_28();
}

uint64_t sub_256C9BBDC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_256C9BC20(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_119_1();
  sub_256CEDFA8();
  uint64_t v4 = sub_256CEE7F8();
  return sub_256C9BEB8(a1, a2, v4);
}

unint64_t sub_256C9BC8C(uint64_t a1)
{
  OUTLINED_FUNCTION_110_1();
  sub_256CEE7E8();
  uint64_t v2 = sub_256CEE7F8();
  return sub_256C9BF9C(a1, v2);
}

unint64_t sub_256C9BCF0(uint64_t a1)
{
  sub_256CEE798();
  sub_256CEE7B8();
  uint64_t v2 = sub_256CEE7F8();
  return sub_256C9C038(a1, v2);
}

void sub_256C9BD5C(uint64_t a1)
{
}

void sub_256C9BD68(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_110_1();
  sub_256CEDB08();
  sub_256C9FBF8(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
  sub_256CEDF18();
  uint64_t v4 = sub_256CEE7F8();
  sub_256C9C0D4(a1, v4, a2, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
}

uint64_t sub_256C9BE24()
{
  OUTLINED_FUNCTION_110_1();
  sub_256CEE7B8();
  uint64_t v0 = sub_256CEE7F8();
  return sub_256C9C210(v0);
}

unint64_t sub_256C9BE74(uint64_t a1)
{
  uint64_t v2 = sub_256CEE788();
  return sub_256C9BF9C(a1, v2);
}

unint64_t sub_256C9BEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_256CEE6C8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_256CEE6C8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_256C9BF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_256C9C038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void sub_256C9C0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_57();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(v23) - 8;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = -1 << *(unsigned char *)(v20 + 32);
  unint64_t v32 = v26 & ~v31;
  if ((*(void *)(v20 + 64 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32))
  {
    uint64_t v33 = ~v31;
    uint64_t v34 = *(void *)(v28 + 72);
    do
    {
      sub_256C5FC18(*(void *)(v20 + 48) + v34 * v32, (uint64_t)v30, v24);
      char v35 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_256C0044C((uint64_t)v30, v24);
      if (v35) {
        break;
      }
      unint64_t v32 = (v32 + 1) & v33;
    }
    while (((*(void *)(v20 + 64 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) != 0);
  }
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256C9C210(uint64_t a1)
{
  return a1 & ~(-1 << *(unsigned char *)(v1 + 32));
}

void sub_256C9C23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_87_2();
  sub_256C9BCF0(v11);
  if (v12)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_80_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8300);
    OUTLINED_FUNCTION_125_0();
    swift_release();
    type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AC0);
    sub_256C9FBF8(&qword_26B2C8AA8, 255, (void (*)(uint64_t))type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle);
    sub_256CEE3E8();
    *uint64_t v10 = a10;
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_89_2();
}

uint64_t sub_256C9C340()
{
  OUTLINED_FUNCTION_87_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_256CEDEC8();
  sub_256C9BD68(v3, (uint64_t)&qword_26B2C7798);
  uint64_t v7 = v6;
  LOBYTE(v3) = v8;
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v1;
    uint64_t *v1 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D80);
    sub_256CEE3C8();
    uint64_t v9 = *(void *)(v19 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
    OUTLINED_FUNCTION_10();
    sub_256C0044C(v9 + *(void *)(v10 + 72) * v7, &qword_26B2C7798);
    uint64_t v11 = *(void *)(v19 + 56);
    type metadata accessor for InferenceProviderRequestStream();
    OUTLINED_FUNCTION_10();
    sub_256C9FBA4(v11 + *(void *)(v12 + 72) * v7, v5, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
    sub_256C90080(&qword_26B2C4EF0, &qword_26B2C7798);
    sub_256CEE3E8();
    uint64_t *v1 = v19;
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for InferenceProviderRequestStream();
  }
  OUTLINED_FUNCTION_89_2();
  return __swift_storeEnumTagSinglePayload(v13, v14, v15, v16);
}

void sub_256C9C4E8()
{
}

double sub_256C9C4FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_256CEDEC8();
  sub_256C9BD68(a1, (uint64_t)qword_26B2C5B70);
  uint64_t v7 = v6;
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5078);
    sub_256CEE3C8();
    uint64_t v9 = *(void *)(v16 + 48);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    sub_256C0044C(v9 + *(void *)(*(void *)(v10 - 8) + 72) * v7, qword_26B2C5B70);
    uint64_t v11 = *(void *)(v16 + 56) + 48 * v7;
    uint64_t v12 = *(void *)(v11 + 32);
    char v13 = *(unsigned char *)(v11 + 40);
    long long v14 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v11;
    *(_OWORD *)(a2 + 16) = v14;
    *(void *)(a2 + 32) = v12;
    *(unsigned char *)(a2 + 40) = v13;
    sub_256C90080(&qword_269FC4DA0, qword_26B2C5B70);
    sub_256CEE3E8();
    *uint64_t v3 = v16;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a2 = 1;
    double result = 0.0;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(unsigned char *)(a2 + 40) = 0;
  }
  return result;
}

uint64_t sub_256C9C6A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_256C9BE24();
  if ((v3 & 1) == 0) {
    return 0;
  }
  uint64_t v4 = v2;
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_80_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D70);
  OUTLINED_FUNCTION_125_0();
  uint64_t v5 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8718);
  sub_256BE20F4();
  sub_256CEE3E8();
  void *v1 = v7;
  swift_bridgeObjectRelease();
  return v5;
}

void sub_256C9C76C()
{
}

void sub_256C9C780()
{
  OUTLINED_FUNCTION_87_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  uint64_t v7 = v6;
  sub_256CEDEC8();
  sub_256C9BD68(v7, (uint64_t)&qword_26B2C7798);
  uint64_t v9 = v8;
  LOBYTE(v7) = v10;
  swift_bridgeObjectRelease();
  if (v7)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(v4);
    sub_256CEE3C8();
    uint64_t v11 = *(void *)(v13 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
    OUTLINED_FUNCTION_10();
    sub_256C0044C(v11 + *(void *)(v12 + 72) * v9, &qword_26B2C7798);
    __swift_instantiateConcreteTypeFromMangledName(v2);
    sub_256C90080(&qword_26B2C4EF0, &qword_26B2C7798);
    sub_256CEE3E8();
    *uint64_t v5 = v13;
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_89_2();
}

uint64_t sub_256C9C8CC(char a1, uint64_t a2)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_95_2();
  unint64_t v4 = sub_256C9CB58(a1, a2);
  OUTLINED_FUNCTION_41_6(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_256C9C934()
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_95_2();
  OUTLINED_FUNCTION_119_1();
  uint64_t v3 = sub_256C9CC64(v0, v1, v2);
  OUTLINED_FUNCTION_41_6(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_256C9C9A8()
{
  OUTLINED_FUNCTION_46_5();
  uint64_t v0 = OUTLINED_FUNCTION_18_5();
  uint64_t v2 = sub_256C9CD88(v0, v1);
  OUTLINED_FUNCTION_41_6(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_256C9C9F4()
{
  OUTLINED_FUNCTION_46_5();
  uint64_t v0 = OUTLINED_FUNCTION_18_5();
  uint64_t v2 = sub_256C9CEF8(v0, v1);
  OUTLINED_FUNCTION_41_6(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_256C9CA40(uint64_t a1, uint64_t a2)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_256C9D0AC(a1, a2);
  *uint64_t v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_256C9CAC0()
{
  OUTLINED_FUNCTION_46_5();
  uint64_t v0 = OUTLINED_FUNCTION_18_5();
  sub_256C9D248(v0, v1);
  OUTLINED_FUNCTION_41_6(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_256C9CB0C()
{
  OUTLINED_FUNCTION_46_5();
  uint64_t v0 = (long long *)OUTLINED_FUNCTION_18_5();
  uint64_t v2 = sub_256C9D354(v0, v1);
  OUTLINED_FUNCTION_41_6(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

unint64_t sub_256C9CB58(char a1, uint64_t a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = (void *)*v2;
  unint64_t v7 = sub_256C9BC8C(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8720);
  unint64_t result = sub_256CEE3C8();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = sub_256C9BC8C(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_11:
    unint64_t result = sub_256CEE738();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
LABEL_5:
  uint64_t v13 = *v3;
  if (v10)
  {
    *(unsigned char *)(v13[7] + v9) = a1 & 1;
  }
  else
  {
    return sub_256C9D480(v9, a2, a1 & 1, v13);
  }
  return result;
}

uint64_t sub_256C9CC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_256C9BCF0(a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8300);
  if ((sub_256CEE3C8() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_256C9BCF0(a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle();
    uint64_t result = sub_256CEE738();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = (uint64_t *)(v15[7] + 16 * v11);
    uint64_t result = swift_release();
    *uint64_t v16 = a1;
    v16[1] = a2;
  }
  else
  {
    sub_256C9D4C4(v11, a3, a1, a2, v15);
    return swift_retain();
  }
  return result;
}

uint64_t sub_256C9CD88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = (void *)*v2;
  sub_256C9BD68(a2, (uint64_t)&qword_26B2C7798);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D88);
  if ((sub_256CEE3C8() & 1) == 0) {
    goto LABEL_5;
  }
  sub_256C9BD68(a2, (uint64_t)&qword_26B2C7798);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_10:
    uint64_t result = sub_256CEE738();
    __break(1u);
    return result;
  }
  unint64_t v12 = v14;
LABEL_5:
  uint64_t v16 = *v3;
  if (v13)
  {
    uint64_t v17 = v16[7];
    uint64_t result = swift_release();
    *(void *)(v17 + 8 * v12) = a1;
  }
  else
  {
    sub_256C5FC18(a2, (uint64_t)v8, &qword_26B2C7798);
    return sub_256C9D510(v12, (uint64_t)v8, a1, v16);
  }
  return result;
}

uint64_t sub_256C9CEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = (void *)*v2;
  sub_256C9BD68(a2, (uint64_t)&qword_26B2C7798);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D80);
  if ((sub_256CEE3C8() & 1) == 0) {
    goto LABEL_5;
  }
  sub_256C9BD68(a2, (uint64_t)&qword_26B2C7798);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_11:
    uint64_t result = sub_256CEE738();
    __break(1u);
    return result;
  }
  unint64_t v12 = v14;
LABEL_5:
  uint64_t v16 = *v3;
  if (v13)
  {
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for InferenceProviderRequestStream() - 8) + 72) * v12;
    return sub_256C9FB40(a1, v18);
  }
  else
  {
    sub_256C5FC18(a2, (uint64_t)v8, &qword_26B2C7798);
    return sub_256C9D5BC(v12, (uint64_t)v8, a1, v16);
  }
}

uint64_t sub_256C9D0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_256C9BD68(a2, (uint64_t)qword_26B2C5B70);
  if (__OFADD__(*(void *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5078);
  if ((sub_256CEE3C8() & 1) == 0) {
    goto LABEL_5;
  }
  sub_256C9BD68(a2, (uint64_t)qword_26B2C5B70);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_11:
    uint64_t result = sub_256CEE738();
    __break(1u);
    return result;
  }
  unint64_t v12 = v14;
LABEL_5:
  uint64_t v16 = *v3;
  if (v13)
  {
    uint64_t v17 = *(void *)(v16 + 56) + 48 * v12;
    return sub_256CA0310(a1, v17);
  }
  else
  {
    sub_256C5FC18(a2, (uint64_t)v8, qword_26B2C5B70);
    return sub_256C9D71C(v12, (uint64_t)v8, a1, v16);
  }
}

void sub_256C9D248(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_256C9BE24();
  if (__OFADD__(*(void *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D70);
  if ((sub_256CEE3C8() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v11 = sub_256C9BE24();
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_11:
    sub_256CEE738();
    __break(1u);
    return;
  }
  unint64_t v9 = v11;
LABEL_5:
  uint64_t v13 = *v3;
  if (v10)
  {
    uint64_t v14 = *(void *)(v13 + 56) + 16 * v9;

    *(void *)uint64_t v14 = a1;
    *(void *)(v14 + 8) = a2;
  }
  else
  {
    sub_256C9D7AC(v9, a1, a2, v13);
  }
}

uint64_t sub_256C9D354(long long *a1, uint64_t a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = (void *)*v2;
  unint64_t v7 = sub_256C9BE74(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5C88);
  if ((sub_256CEE3C8() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v11 = sub_256C9BE74(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_13:
    uint64_t result = sub_256CEE738();
    __break(1u);
    return result;
  }
  unint64_t v9 = v11;
LABEL_5:
  uint64_t v13 = *v3;
  if (v10)
  {
    uint64_t v14 = v13[7] + 40 * v9;
    __swift_destroy_boxed_opaque_existential_1Tm(v14);
    return sub_256BE3924(a1, v14);
  }
  else
  {
    return sub_256C9D7EC(v9, a2, a1, v13);
  }
}

unint64_t sub_256C9D480(unint64_t result, uint64_t a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(unsigned char *)(a4[7] + result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_256C9D4C4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  BOOL v5 = (void *)(a5[7] + 16 * result);
  *BOOL v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_256C9D510(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t result = sub_256C5FC70(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, &qword_26B2C7798);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_256C9D5BC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  sub_256C5FC70(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, &qword_26B2C7798);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for InferenceProviderRequestStream();
  uint64_t result = sub_256C9FBA4(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_256C9D6A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_33_10(a1, a2, a3, a4);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v9);
  uint64_t result = sub_256C5FC70(v6, v8 + *(void *)(v10 + 72) * v7, &qword_26B2C7798);
  *(void *)(*(void *)(v4 + 56) + 8 * v7) = v5;
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v14;
  }
  return result;
}

uint64_t sub_256C9D71C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_33_10(a1, a2, a3, a4);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v9);
  uint64_t result = sub_256C5FC70(v6, v8 + *(void *)(v10 + 72) * v7, qword_26B2C5B70);
  uint64_t v12 = (_OWORD *)(*(void *)(v4 + 56) + 48 * v7);
  *(_OWORD *)((char *)v12 + 25) = *(_OWORD *)((char *)v5 + 25);
  long long v13 = v5[1];
  *uint64_t v12 = *v5;
  v12[1] = v13;
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v4 + 16) = v16;
  }
  return result;
}

unint64_t sub_256C9D7AC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v4 = (void *)(*(void *)(a4 + 56) + 16 * result);
  *uint64_t v4 = a2;
  v4[1] = a3;
  uint64_t v5 = *(void *)(a4 + 16);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    *(void *)(a4 + 16) = v7;
  }
  return result;
}

uint64_t sub_256C9D7EC(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_256BE3924(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_256C9D858(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a4 < 1) {
    return result;
  }
  BOOL v7 = (uint64_t *)result;
  uint64_t result = *(void *)(result + 8);
  uint64_t v8 = result + a4;
  if (__OFADD__(result, a4))
  {
    __break(1u);
    goto LABEL_9;
  }
  v7[1] = v8;
  if (v8 < result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  sub_256C9D940(result, v8, v7, a2, (uint64_t)&v11);
  long long v15 = v11;
  sub_256C5FC70((uint64_t)&v15, (uint64_t)v16, &qword_269FC4E20);
  sub_256C5FC70((uint64_t)v16, (uint64_t)&v22, &qword_269FC4E20);
  uint64_t v9 = v12;
  uint64_t v10 = v13;
  if (v14 & 1 | (v13 == 0))
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v17 = v22;
  uint64_t v18 = *((void *)&v15 + 1);
  uint64_t v19 = v9;
  uint64_t v20 = v10;
  char v21 = v14 & 1 | (v13 == 0);
  return sub_256C9DA20(a3, a4);
}

uint64_t sub_256C9D940@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = v6 + result;
  uint64_t v8 = *a3;
  if (v6 + result >= *a3) {
    uint64_t v9 = *a3;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v6 + a2;
  if (v10 >= v8) {
    uint64_t v11 = *a3;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v7 - v9;
    uint64_t v15 = v10 - v11;
    if (v12) {
      BOOL v16 = v14 < v15;
    }
    else {
      BOOL v16 = 1;
    }
    int v17 = v16;
    uint64_t v18 = type metadata accessor for ClientData(0);
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t result = v18 - 8;
    uint64_t v19 = v20;
    if (v17 == 1)
    {
      uint64_t v21 = 0;
      uint64_t v15 = 0;
LABEL_18:
      *(void *)a5 = a4 + *(void *)(v19 + 72) * v14;
      *(void *)(a5 + 8) = v12;
      *(void *)(a5 + 16) = v21;
      *(void *)(a5 + 24) = v15;
      *(unsigned char *)(a5 + 32) = v17;
      return result;
    }
    uint64_t v12 = v8 - v14;
    if (!__OFSUB__(v8, v14))
    {
      uint64_t v21 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_256C9DA20(unint64_t a1, uint64_t a2)
{
  sub_256C5FC70((uint64_t)(v2 + 1), (uint64_t)v27, &qword_269FC4E10);
  uint64_t result = sub_256C5FC70((uint64_t)v27, (uint64_t)&v28, &qword_269FC4E10);
  if ((v29 & 1) == 0)
  {
    long long v30 = v28;
    long long v25 = *v2;
    uint64_t v11 = *((void *)&v25 + 1);
    if ((*((void *)&v25 + 1) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if (a1)
      {
        if (*((void *)&v25 + 1))
        {
          sub_256C5FC70((uint64_t)&v25, (uint64_t)v26, &qword_269FC4E18);
          uint64_t result = sub_256C5FC70((uint64_t)v26, (uint64_t)&v31, &qword_269FC4E18);
          unint64_t v12 = v31;
          if (v31)
          {
            uint64_t v13 = *(void *)(*(void *)(type metadata accessor for ClientData(0) - 8) + 72) * v11;
            unint64_t v14 = v12 + v13;
            unint64_t v15 = a1 + v13;
            if (v14 > a1 && v15 > v12) {
              goto LABEL_38;
            }
            uint64_t result = swift_arrayInitWithCopy();
          }
        }
      }
      if (!__OFADD__(v11, a2 - v11))
      {
        if (a2 >= v11)
        {
          if (a1)
          {
            uint64_t v17 = a2 - v11;
            if (a2 != v11)
            {
              if (*((uint64_t *)&v30 + 1) >= v17)
              {
                sub_256C5FC70((uint64_t)&v30, (uint64_t)v32, &qword_269FC4E18);
                uint64_t result = sub_256C5FC70((uint64_t)v32, (uint64_t)&v33, &qword_269FC4E18);
                unint64_t v18 = v33;
                if (!v33) {
                  return result;
                }
                uint64_t v19 = *(void *)(*(void *)(type metadata accessor for ClientData(0) - 8) + 72);
                unint64_t v20 = a1 + v19 * v11;
                uint64_t v21 = v19 * v17;
                unint64_t v22 = v18 + v21;
                unint64_t v23 = v20 + v21;
                if (v20 >= v22 || v23 <= v18) {
                  return swift_arrayInitWithCopy();
                }
                goto LABEL_38;
              }
LABEL_37:
              __break(1u);
              goto LABEL_38;
            }
          }
          return result;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    __break(1u);
    goto LABEL_35;
  }
  if (a1 && a2)
  {
    long long v30 = *v2;
    if (*((uint64_t *)&v30 + 1) >= a2)
    {
      sub_256C5FC70((uint64_t)&v30, (uint64_t)&v33, &qword_269FC4E18);
      uint64_t result = sub_256C5FC70((uint64_t)&v33, (uint64_t)&v25, &qword_269FC4E18);
      unint64_t v6 = v25;
      if (!(void)v25) {
        return result;
      }
      if ((a2 & 0x8000000000000000) == 0)
      {
        uint64_t v7 = *(void *)(*(void *)(type metadata accessor for ClientData(0) - 8) + 72) * a2;
        unint64_t v8 = v6 + v7;
        unint64_t v9 = a1 + v7;
        if (v8 <= a1 || v9 <= v6) {
          return swift_arrayInitWithCopy();
        }
      }
LABEL_38:
      uint64_t result = sub_256CEE428();
      __break(1u);
      return result;
    }
    goto LABEL_36;
  }
  return result;
}

void (*sub_256C9DD00(void *a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  unint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  swift_isUniquelyReferenced_nonNull_native();
  sub_256C5FC18(a2, (uint64_t)v6, &qword_26B2C7798);
  v4[9] = sub_256C9E274(v4);
  v4[10] = sub_256C9DF40(v4 + 4, (uint64_t)v6);
  return sub_256C9DDD8;
}

void sub_256C9DDD8(uint64_t a1, uint64_t a2)
{
}

void (*sub_256C9DDE4(void *a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  unint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  swift_isUniquelyReferenced_nonNull_native();
  sub_256C5FC18(a2, (uint64_t)v6, qword_26B2C5B70);
  v4[9] = sub_256C9E2B0(v4);
  v4[10] = sub_256C9E0C0(v4 + 4, (uint64_t)v6);
  return sub_256C9DEBC;
}

void sub_256C9DEBC(uint64_t a1, uint64_t a2)
{
}

void sub_256C9DEC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void (**)(uint64_t))(*(void *)a1 + 72);
  unint64_t v6 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();
  sub_256C0044C((uint64_t)v6, a3);
  uint64_t v7 = OUTLINED_FUNCTION_129_0();
  v5(v7);
  free(v6);
  free(v4);
}

uint64_t (*sub_256C9DF40(void *a1, uint64_t a2))()
{
  uint64_t v3 = v2;
  unint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[1] = a2;
  v6[2] = v2;
  uint64_t v7 = *v2;
  sub_256C9BD68(a2, (uint64_t)&qword_26B2C7798);
  *((unsigned char *)v6 + 32) = v9 & 1;
  if (__OFADD__(*(void *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = v8;
  char v11 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D90);
  if (sub_256CEE3C8())
  {
    sub_256C9BD68(a2, (uint64_t)&qword_26B2C7798);
    if ((v11 & 1) == (v13 & 1))
    {
      uint64_t v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
    uint64_t result = (uint64_t (*)())sub_256CEE738();
    __break(1u);
    return result;
  }
LABEL_5:
  v6[3] = v10;
  if (v11) {
    uint64_t v14 = *(void *)(*(void *)(*v3 + 56) + 8 * v10);
  }
  else {
    uint64_t v14 = 0;
  }
  *unint64_t v6 = v14;
  return sub_256C9E070;
}

#error "256C9E094: call analysis failed (funcsize=20)"

void (*sub_256C9E0C0(void *a1, uint64_t a2))(uint64_t **a1)
{
  uint64_t v3 = v2;
  unint64_t v6 = malloc(0x48uLL);
  *a1 = v6;
  v6[6] = a2;
  v6[7] = v2;
  uint64_t v7 = *v2;
  sub_256C9BD68(a2, (uint64_t)qword_26B2C5B70);
  *((unsigned char *)v6 + 41) = v9 & 1;
  if (__OFADD__(*(void *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = v8;
  char v11 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5078);
  if (sub_256CEE3C8())
  {
    sub_256C9BD68(a2, (uint64_t)qword_26B2C5B70);
    if ((v11 & 1) == (v13 & 1))
    {
      uint64_t v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    uint64_t result = (void (*)(uint64_t **))sub_256CEE738();
    __break(1u);
    return result;
  }
LABEL_5:
  v6[8] = v10;
  if (v11)
  {
    uint64_t v14 = *(void *)(*v3 + 56) + 48 * v10;
    long long v15 = *(_OWORD *)v14;
    long long v16 = *(_OWORD *)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 32);
    char v18 = *(unsigned char *)(v14 + 40);
  }
  else
  {
    uint64_t v17 = 0;
    char v18 = 0;
    long long v15 = xmmword_256CF8EC0;
    long long v16 = 0uLL;
  }
  *(_OWORD *)unint64_t v6 = v15;
  *((_OWORD *)v6 + 1) = v16;
  v6[4] = v17;
  *((unsigned char *)v6 + 40) = v18;
  return sub_256C9E218;
}

void sub_256C9E218(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_256CE9FB0();
  sub_256C9EA2C(*v1, v1[1], v1[2]);
  free(v1);
}

uint64_t (*sub_256C9E274(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_256C9E2A4;
}

uint64_t sub_256C9E2A4(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_256C9E2B0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_256CA19A0;
}

uint64_t sub_256C9E2E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  uint64_t v38 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4E48);
  uint64_t result = sub_256CEE418();
  uint64_t v5 = result;
  int64_t v6 = 0;
  uint64_t v39 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v33 = v8;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = result + 64;
  uint64_t v36 = result;
  uint64_t v13 = (uint64_t)v37;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v40 = (v12 - 1) & v12;
  int64_t v41 = v6;
  for (unint64_t i = __clz(__rbit64(v12)) | (v6 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    uint64_t v19 = v39;
    uint64_t v20 = *(void *)(v39 + 48);
    unint64_t v42 = *(void *)(v38 + 72) * i;
    sub_256C5FC18(v20 + v42, v13, qword_26B2C5B70);
    uint64_t v21 = 3 * i;
    uint64_t v22 = *(void *)(v19 + 56) + 48 * i;
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t v25 = *(void *)(v22 + 16);
    uint64_t v24 = *(void *)(v22 + 24);
    uint64_t v26 = *(void *)(v22 + 32);
    char v27 = *(unsigned char *)(v22 + 40);
    swift_retain();
    sub_256C5BFF8(v23, v25);
    swift_release();
    *(void *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v5 = v36;
    uint64_t result = sub_256C5FC70(v13, *(void *)(v36 + 48) + v42, qword_26B2C5B70);
    uint64_t v28 = *(void *)(v5 + 56) + 16 * v21;
    *(void *)uint64_t v28 = 0;
    *(void *)(v28 + 8) = v23;
    *(void *)(v28 + 16) = v25;
    *(void *)(v28 + 24) = v24;
    *(void *)(v28 + 32) = v26;
    *(unsigned char *)(v28 + 40) = v27;
    uint64_t v29 = *(void *)(v5 + 16);
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(void *)(v5 + 16) = v31;
    unint64_t v12 = v40;
    int64_t v6 = v41;
    if (v40) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_24;
    }
    if (v15 >= v34) {
      return v5;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    int64_t v17 = v6 + 1;
    if (!v16)
    {
      int64_t v17 = v6 + 2;
      if (v6 + 2 >= v34) {
        return v5;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v6 + 3;
        if (v6 + 3 >= v34) {
          return v5;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v40 = (v16 - 1) & v16;
    int64_t v41 = v17;
  }
  uint64_t v18 = v6 + 4;
  if (v6 + 4 >= v34) {
    return v5;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v34) {
      return v5;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_256C9E5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v12);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v25 - v20;
  (*(void (**)(char *))(v16 + 32))((char *)&v25 - v20);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, a5);
  uint64_t v23 = sub_256C9E890((uint64_t)v19, (uint64_t)v14, v22, a4, a5, a6, v26);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, a5);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, a4);
  return v23;
}

uint64_t sub_256C9E7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = type metadata accessor for ModelXPCSender();
  uint64_t v12 = &protocol witness table for ModelXPCSender;
  *(void *)&long long v10 = a1;
  uint64_t v8 = type metadata accessor for RunningBoardSelfAssertions();
  uint64_t v9 = &off_27061B0B0;
  *(void *)&long long v7 = a2;
  swift_defaultActor_initialize();
  *(unsigned char *)(a3 + 192) = 0;
  *(void *)(a3 + 200) = MEMORY[0x263F8EE80];
  sub_256BE3924(&v10, a3 + 112);
  sub_256BE3924(&v7, a3 + 152);
  return a3;
}

uint64_t sub_256C9E890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a4;
  uint64_t v21 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  uint64_t v17 = a5;
  uint64_t v18 = a7;
  uint64_t v14 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v14, a2, a5);
  swift_defaultActor_initialize();
  *(unsigned char *)(a3 + 192) = 0;
  *(void *)(a3 + 200) = MEMORY[0x263F8EE80];
  sub_256BE3924(&v19, a3 + 112);
  sub_256BE3924(&v16, a3 + 152);
  return a3;
}

uint64_t sub_256C9E988()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_256C9E9C0()
{
  return sub_256C98BE8();
}

uint64_t sub_256C9E9C8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256C9EA00(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_256C9EA2C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    swift_release();
    return sub_256C9BBDC(a2, a3);
  }
  return result;
}

uint64_t type metadata accessor for ModelServiceClient()
{
  return self;
}

uint64_t sub_256C9EAC4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_6(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = (((((*(void *)(v4 + 64) + ((v3 + 32) & ~v3) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  uint64_t v6 = OUTLINED_FUNCTION_8_3();
  v7(v6);
  swift_release();
  swift_release();
  if (*(void *)(v0 + v5 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, v5 + 33, v3 | 7);
}

uint64_t sub_256C9EBB8()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_6(v1);
  OUTLINED_FUNCTION_88_2();
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + v2);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = *(void *)(v0 + v3);
  uint64_t v8 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = swift_task_alloc();
  long long v10 = (void *)OUTLINED_FUNCTION_14(v9);
  *long long v10 = v11;
  v10[1] = sub_256C1D828;
  uint64_t v12 = OUTLINED_FUNCTION_143_0();
  return sub_256C990EC(v12, v13, v14, v6, v4, v7, v8);
}

uint64_t sub_256C9ECC8()
{
  OUTLINED_FUNCTION_57();
  type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_7_10();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_65_4();
  if (!OUTLINED_FUNCTION_27_9())
  {
    OUTLINED_FUNCTION_33_0();
    uint64_t v0 = OUTLINED_FUNCTION_28_8();
    v1(v0);
  }
  type metadata accessor for ClientData(0);
  if (!OUTLINED_FUNCTION_27_9())
  {
    OUTLINED_FUNCTION_33_0();
    uint64_t v2 = OUTLINED_FUNCTION_28_8();
    v3(v2);
  }
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(void (**)(void))(v4 + 8);
  OUTLINED_FUNCTION_70_3();
  v5();
  OUTLINED_FUNCTION_70_3();
  v5();
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_119_1();
  OUTLINED_FUNCTION_71();
  return MEMORY[0x270FA0238](v6, v7, v8);
}

uint64_t sub_256C9EDFC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_24(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256C26524;
  uint64_t v4 = OUTLINED_FUNCTION_45_0();
  return sub_256C98174(v4, v5, v6, v7);
}

uint64_t sub_256C9EEB0()
{
  OUTLINED_FUNCTION_57();
  type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_7_10();
  swift_release();
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_65_4();
  if (!OUTLINED_FUNCTION_27_9())
  {
    OUTLINED_FUNCTION_33_0();
    uint64_t v0 = OUTLINED_FUNCTION_28_8();
    v1(v0);
  }
  type metadata accessor for ClientData(0);
  if (!OUTLINED_FUNCTION_27_9())
  {
    OUTLINED_FUNCTION_33_0();
    uint64_t v2 = OUTLINED_FUNCTION_28_8();
    v3(v2);
  }
  OUTLINED_FUNCTION_59_6();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(void (**)(void))(v4 + 8);
  OUTLINED_FUNCTION_69_3();
  v5();
  OUTLINED_FUNCTION_69_3();
  v5();
  OUTLINED_FUNCTION_114_1();
  swift_release();
  OUTLINED_FUNCTION_71();
  return MEMORY[0x270FA0238](v6, v7, v8);
}

uint64_t sub_256C9EFE8()
{
  uint64_t v1 = type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_6(v1);
  OUTLINED_FUNCTION_88_2();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + v4);
  return sub_256C985EC(v3, v0 + v2, v5);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.establishment(of:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_123_1(v0, v1);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v9(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.deleteSessionRequest(id:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.cancelSessionRequest(session:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.prewarmSession(session:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.fetchModelInstance(session:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_60_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_258();
  return v3();
}

uint64_t dispatch thunk of ModelServiceClientProtocol.executeRequest(session:metadata:)()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_59();
  uint64_t v13 = *(void *)(v0 + 48) + **(int **)(v0 + 48);
  uint64_t v14 = v0 + 48;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256C26524;
  OUTLINED_FUNCTION_50_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.cancelRequest(id:session:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_60_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_258();
  return v3();
}

uint64_t dispatch thunk of ModelServiceClientProtocol.executeStreamingRequest(session:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ModelServiceClientProtocol.startMonitoringInferences(endpoint:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t method lookup function for ModelServiceClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ModelServiceClient);
}

uint64_t dispatch thunk of ModelServiceClient.__allocating_init(sender:runningBoardAssertions:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for ModelServiceClient.SessionCache(uint64_t a1)
{
  swift_release();
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ModelServiceClient.SessionCache(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_retain();
  if (v5)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for ModelServiceClient.SessionCache(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v6)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      sub_256CEDEC8();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_256CEDEC8();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    }
    else
    {
      sub_256C9F990(a1 + 8);
      char v7 = *(unsigned char *)(a2 + 40);
      long long v8 = *(_OWORD *)(a2 + 24);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 24);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *uint64_t v4 = v9;
    *(_OWORD *)(a1 + 24) = v10;
  }
  return a1;
}

uint64_t sub_256C9F990(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ModelServiceClient.SessionCache(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    sub_256C9F990(a1 + 8);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    return a1;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelServiceClient.SessionCache(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 41))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelServiceClient.SessionCache(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelServiceClient.SessionCache()
{
  return &type metadata for ModelServiceClient.SessionCache;
}

uint64_t sub_256C9FB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InferenceProviderRequestStream();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C9FBA4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_297();
  v5(v4);
  return a2;
}

uint64_t sub_256C9FBF8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C9FC40()
{
  OUTLINED_FUNCTION_57();
  type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_7_10();
  swift_unknownObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_65_4();
  if (!OUTLINED_FUNCTION_27_9())
  {
    OUTLINED_FUNCTION_33_0();
    uint64_t v0 = OUTLINED_FUNCTION_28_8();
    v1(v0);
  }
  type metadata accessor for ClientData(0);
  if (!OUTLINED_FUNCTION_27_9())
  {
    OUTLINED_FUNCTION_33_0();
    uint64_t v2 = OUTLINED_FUNCTION_28_8();
    v3(v2);
  }
  OUTLINED_FUNCTION_59_6();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(void (**)(void))(v4 + 8);
  OUTLINED_FUNCTION_69_3();
  v5();
  OUTLINED_FUNCTION_69_3();
  v5();
  OUTLINED_FUNCTION_114_1();
  swift_release();
  OUTLINED_FUNCTION_71();
  return MEMORY[0x270FA0238](v6, v7, v8);
}

uint64_t sub_256C9FD80()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_6(v1);
  OUTLINED_FUNCTION_88_2();
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + v5);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_14(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_256C26524;
  uint64_t v10 = OUTLINED_FUNCTION_143_0();
  return sub_256C987B4(v10, v11, v12, v2, v4, v6);
}

uint64_t type metadata accessor for ModelServiceClient.StreamBacking()
{
  uint64_t result = qword_269FC4E50;
  if (!qword_269FC4E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256C9FEB4()
{
  return sub_256C94294(v0);
}

uint64_t sub_256C9FEBC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v4();
  return a2;
}

uint64_t sub_256C9FF18()
{
  OUTLINED_FUNCTION_57();
  type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_7_10();
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_65_4();
  if (!OUTLINED_FUNCTION_27_9())
  {
    OUTLINED_FUNCTION_33_0();
    uint64_t v0 = OUTLINED_FUNCTION_28_8();
    v1(v0);
  }
  type metadata accessor for ClientData(0);
  if (!OUTLINED_FUNCTION_27_9())
  {
    OUTLINED_FUNCTION_33_0();
    uint64_t v2 = OUTLINED_FUNCTION_28_8();
    v3(v2);
  }
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(void (**)(void))(v4 + 8);
  OUTLINED_FUNCTION_70_3();
  v5();
  OUTLINED_FUNCTION_70_3();
  v5();
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_119_1();
  OUTLINED_FUNCTION_71();
  return MEMORY[0x270FA0238](v6, v7, v8);
}

uint64_t sub_256CA003C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_24(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256C26524;
  uint64_t v4 = OUTLINED_FUNCTION_28();
  return sub_256C944BC(v4, v5);
}

uint64_t sub_256CA00E4()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  return sub_256C95584();
}

uint64_t sub_256CA016C()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_198();
  return sub_256C94D30(v3, v4, v5, v6, v7);
}

uint64_t sub_256CA0220(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_8_3();
  v4(v3);
  return a1;
}

uint64_t sub_256CA0274()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_45_0();
  return sub_256C9442C();
}

uint64_t sub_256CA0310(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_256CA034C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256C1D828;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C98E54(v3, v4, v5, v6);
}

void *sub_256CA03E8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ClientData(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v14);
      }
      uint64_t v16 = *(int *)(v11 + 20);
      uint64_t v17 = &v9[v16];
      uint64_t v18 = &v10[v16];
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v14))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v17, v18, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v20 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = *v23;
    swift_retain();
    if (!v24)
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      return a1;
    }
    uint64_t v25 = v23[1];
    *(void *)uint64_t v22 = v24;
    *((void *)v22 + 1) = v25;
  }
  swift_retain();
  return a1;
}

uint64_t sub_256CA0698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for ClientData(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    uint64_t v7 = sub_256CEDE28();
    if (!__swift_getEnumTagSinglePayload(v5, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    }
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    if (!__swift_getEnumTagSinglePayload(v8, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v8, v7);
    }
  }
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 32)))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_256CA080C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_256CEDE28();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v12);
    }
    uint64_t v14 = *(int *)(v10 + 20);
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v12))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v15, v16, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v12);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  swift_retain();
  if (v22)
  {
    uint64_t v23 = v21[1];
    *uint64_t v20 = v22;
    v20[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  }
  return a1;
}

uint64_t sub_256CA0A70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ClientData(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      uint64_t v13 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v13);
      }
      uint64_t v21 = *(int *)(v10 + 20);
      uint64_t v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v13))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v22, v23, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v13);
      }
      uint64_t v25 = (uint64_t)v8;
      uint64_t v26 = v10;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_256CA0220((uint64_t)v8, (void (*)(void))type metadata accessor for ClientData);
LABEL_7:
    size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228) - 8) + 64);
    uint64_t v16 = v8;
    uint64_t v17 = v9;
LABEL_8:
    memcpy(v16, v17, v15);
    goto LABEL_18;
  }
  uint64_t v18 = sub_256CEDE28();
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v18);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v8, v9, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v18);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  uint64_t v35 = *(void *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v18);
LABEL_28:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v8, v9, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v8, v9, v18);
LABEL_29:
  uint64_t v37 = *(int *)(v10 + 20);
  uint64_t v38 = (uint64_t)&v8[v37];
  uint64_t v39 = (uint64_t)&v9[v37];
  int v40 = __swift_getEnumTagSinglePayload(v38, 1, v18);
  int v41 = __swift_getEnumTagSinglePayload(v39, 1, v18);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v38, v39, v18);
      uint64_t v25 = v38;
      uint64_t v26 = v18;
LABEL_17:
      __swift_storeEnumTagSinglePayload(v25, 0, 1, v26);
      goto LABEL_18;
    }
    goto LABEL_34;
  }
  uint64_t v42 = *(void *)(v18 - 8);
  if (v41)
  {
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v38, v18);
LABEL_34:
    size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000) - 8) + 64);
    uint64_t v16 = (void *)v38;
    uint64_t v17 = (const void *)v39;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 24))(v38, v39, v18);
LABEL_18:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v27 = a3[8];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *(void *)(a1 + v27);
  uint64_t v31 = *v29;
  if (!v30)
  {
    if (v31)
    {
      uint64_t v33 = v29[1];
      *uint64_t v28 = v31;
      v28[1] = v33;
      swift_retain();
      return a1;
    }
LABEL_24:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_24;
  }
  uint64_t v32 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v32;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_256CA0F78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_256CEDE28();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v12);
    }
    uint64_t v14 = *(int *)(v10 + 20);
    size_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v12))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v15, v16, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v12);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[8];
  int v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  if (*v21)
  {
    uint64_t v23 = v21[1];
    *int v20 = v22;
    v20[1] = v23;
  }
  else
  {
    *(_OWORD *)int v20 = *(_OWORD *)v21;
  }
  return a1;
}

uint64_t sub_256CA11D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ClientData(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      uint64_t v13 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v13);
      }
      uint64_t v21 = *(int *)(v10 + 20);
      uint64_t v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v13))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v22, v23, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v13);
      }
      uint64_t v25 = (uint64_t)v8;
      uint64_t v26 = v10;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_256CA0220((uint64_t)v8, (void (*)(void))type metadata accessor for ClientData);
LABEL_7:
    size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228) - 8) + 64);
    uint64_t v16 = v8;
    uint64_t v17 = v9;
LABEL_8:
    memcpy(v16, v17, v15);
    goto LABEL_18;
  }
  uint64_t v18 = sub_256CEDE28();
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v18);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v18);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  uint64_t v34 = *(void *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v18);
LABEL_28:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v8, v9, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v8, v9, v18);
LABEL_29:
  uint64_t v36 = *(int *)(v10 + 20);
  uint64_t v37 = (uint64_t)&v8[v36];
  uint64_t v38 = (uint64_t)&v9[v36];
  int v39 = __swift_getEnumTagSinglePayload(v37, 1, v18);
  int v40 = __swift_getEnumTagSinglePayload(v38, 1, v18);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v37, v38, v18);
      uint64_t v25 = v37;
      uint64_t v26 = v18;
LABEL_17:
      __swift_storeEnumTagSinglePayload(v25, 0, 1, v26);
      goto LABEL_18;
    }
    goto LABEL_34;
  }
  uint64_t v41 = *(void *)(v18 - 8);
  if (v40)
  {
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v37, v18);
LABEL_34:
    size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000) - 8) + 64);
    uint64_t v16 = (void *)v37;
    uint64_t v17 = (const void *)v38;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 40))(v37, v38, v18);
LABEL_18:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v27 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  if (!*(void *)(a1 + v27))
  {
    if (v30)
    {
      uint64_t v32 = v29[1];
      *uint64_t v28 = v30;
      v28[1] = v32;
      return a1;
    }
LABEL_24:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    return a1;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_24;
  }
  uint64_t v31 = v29[1];
  *uint64_t v28 = v30;
  v28[1] = v31;
  swift_release();
  return a1;
}

uint64_t sub_256CA16C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CA16D8);
}

uint64_t sub_256CA16D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_256CA1794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CA17A8);
}

void sub_256CA17A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }
  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void sub_256CA1860()
{
  sub_256CEDB08();
  if (v0 <= 0x3F)
  {
    sub_256CA1948();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_256CA1948()
{
  if (!qword_26B2C4EE8)
  {
    type metadata accessor for ClientData(255);
    unint64_t v0 = sub_256CEE2E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2C4EE8);
    }
  }
}

uint64_t sub_256CA19A4()
{
  OUTLINED_FUNCTION_2();
  return sub_256C93E64();
}

uint64_t OUTLINED_FUNCTION_22_7@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v14 + 64) = a11;
  *(void *)(v14 + 72) = a13;
  *(void *)(v14 + 80) = a12;
  *(void *)(v14 + 88) = v13;
  *(unsigned char *)(v14 + 96) = a1;
  return sub_256CEE178();
}

uint64_t OUTLINED_FUNCTION_59_6()
{
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_60_6()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_62_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return sub_256C5BFF8(a18, a20);
}

uint64_t OUTLINED_FUNCTION_64_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_65_4()
{
  return sub_256CEDE28();
}

uint64_t OUTLINED_FUNCTION_79_2()
{
  return sub_256C9EA2C(v0, v1, v2);
}

void *OUTLINED_FUNCTION_82_3@<X0>(uint64_t a1@<X8>)
{
  return __swift_project_boxed_opaque_existential_1((void *)(a1 + 112), *(void *)(a1 + 136));
}

uint64_t OUTLINED_FUNCTION_83_3()
{
  return type metadata accessor for _OSActivity();
}

void (*OUTLINED_FUNCTION_84_2())(uint64_t a1, uint64_t a2)
{
  return sub_256C9417C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_85_1(uint64_t result)
{
  *(void *)(v2 + 288) = *(void *)(*(void *)(v1 + 56) + 48 * result);
  return result;
}

uint64_t OUTLINED_FUNCTION_91_2()
{
  return *(void *)(v0 + 128) + 200;
}

void OUTLINED_FUNCTION_95_2()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_96_2(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_256BE14CC(v4, v3, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_120_1(uint64_t a1)
{
  *(void *)(v1 + 200) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_125_0()
{
  return sub_256CEE3C8();
}

void OUTLINED_FUNCTION_126_0(float a1)
{
  float *v1 = a1;
}

void OUTLINED_FUNCTION_127_0(float a1)
{
  float *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_131_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_256C5FC18(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_132_0(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_133_0()
{
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_138_0()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_140_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void OUTLINED_FUNCTION_141_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + v13) = v15;
  *(void *)(v12 + v14) = a12;
}

uint64_t OUTLINED_FUNCTION_143_0()
{
  return v0;
}

uint64_t Query.daemonInterface.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256BF973C(v1, a1);
}

uint64_t Query.init(daemonInterface:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256BE3924(a1, a2);
}

void Query.init()(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for Query.LiveDaemonInterface;
  *(void *)(a1 + 32) = &protocol witness table for Query.LiveDaemonInterface;
}

uint64_t Query.loadedAssets.getter()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256CA1E4C);
}

uint64_t sub_256CA1E4C()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_9_5();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_256CA1F20;
  uint64_t v2 = OUTLINED_FUNCTION_135();
  return v3(v2);
}

uint64_t sub_256CA1F20()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_8();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t Query.dynamicAssets.getter()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256CA2004);
}

uint64_t sub_256CA2004()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_10_6();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_256CA3698;
  uint64_t v2 = OUTLINED_FUNCTION_135();
  return v3(v2);
}

uint64_t Query.totalLoadedAssetMemoryCost.getter()
{
  OUTLINED_FUNCTION_2();
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for AssetInfo();
  OUTLINED_FUNCTION_6(v2);
  v1[3] = v3;
  v1[4] = swift_task_alloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256CA2168()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_9_5();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_256CA223C;
  uint64_t v2 = OUTLINED_FUNCTION_135();
  return v3(v2);
}

uint64_t sub_256CA223C()
{
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *v1;
  *(void *)(v4 + 48) = v3;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v2 + 8);
    return v5();
  }
  else
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
}

uint64_t sub_256CA2364()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[3];
    uint64_t v4 = v0[4];
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    sub_256CEDEC8();
    uint64_t v7 = 0;
    while (1)
    {
      uint64_t result = sub_256CA2448(v5, v0[4]);
      uint64_t v9 = *(void *)(v4 + 32);
      BOOL v10 = __CFADD__(v7, v9);
      v7 += v9;
      if (v10) {
        break;
      }
      sub_256CA24AC(v0[4]);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
LABEL_7:
    swift_task_dealloc();
    OUTLINED_FUNCTION_12_8();
    return v11(v7);
  }
  return result;
}

uint64_t sub_256CA2448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256CA24AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Query.totalDynamicAssetMemoryCost.getter()
{
  OUTLINED_FUNCTION_2();
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for AssetInfo();
  OUTLINED_FUNCTION_6(v2);
  v1[3] = v3;
  v1[4] = swift_task_alloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256CA2598()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_10_6();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_256CA266C;
  uint64_t v2 = OUTLINED_FUNCTION_135();
  return v3(v2);
}

uint64_t sub_256CA266C()
{
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *v1;
  *(void *)(v4 + 48) = v3;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v2 + 8);
    return v5();
  }
  else
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
}

uint64_t Query.effectivePolicy.getter(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256CA27AC);
}

uint64_t sub_256CA27AC()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_256C8380C;
  uint64_t v6 = OUTLINED_FUNCTION_13_6();
  return v8(v6, v2, v3);
}

uint64_t Query.policy(named:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256CA28C4);
}

uint64_t sub_256CA28C4()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 32) + **(int **)(v2 + 32));
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 48) = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_256CA29C4;
  uint64_t v5 = OUTLINED_FUNCTION_13_6();
  return v7(v5);
}

uint64_t sub_256CA29C4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t Query.LiveDaemonInterface.fetchAllAssetInfo()()
{
  return OUTLINED_FUNCTION_7((uint64_t)sub_256CA2A98);
}

uint64_t sub_256CA2A98()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256CA2B58;
  return ModelXPCSender.fetchAllAssetInfo()();
}

uint64_t sub_256CA2B58()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_8();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t Query.LiveDaemonInterface.fetchDynamicAssetInfo()()
{
  return OUTLINED_FUNCTION_7((uint64_t)sub_256CA2C38);
}

uint64_t sub_256CA2C38()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256CA369C;
  return ModelXPCSender.fetchDynamicAssetInfo()();
}

uint64_t Query.LiveDaemonInterface.fetchEffectivePolicy()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256CA2D10);
}

uint64_t sub_256CA2D10()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 24) = v1;
  void *v1 = v2;
  v1[1] = sub_256BDCDB4;
  OUTLINED_FUNCTION_13_6();
  return ModelXPCSender.fetchEffectivePolicy()();
}

uint64_t Query.LiveDaemonInterface.fetchPolicy(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256CA2DF0);
}

uint64_t sub_256CA2DF0()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 40) = v1;
  void *v1 = v2;
  v1[1] = sub_256CA2EB8;
  uint64_t v3 = OUTLINED_FUNCTION_13_6();
  return ModelXPCSender.fetchPolicy(_:)(v3, v4, v5);
}

uint64_t sub_256CA2EB8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256CA2F7C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256CA369C;
  return Query.LiveDaemonInterface.fetchAllAssetInfo()();
}

uint64_t sub_256CA3008()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256CA369C;
  return Query.LiveDaemonInterface.fetchDynamicAssetInfo()();
}

uint64_t sub_256CA3094(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_256BE3BF0;
  return Query.LiveDaemonInterface.fetchEffectivePolicy()(a1);
}

uint64_t sub_256CA312C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_256BDD6B8;
  return Query.LiveDaemonInterface.fetchPolicy(_:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for Query()
{
  return &type metadata for Query;
}

uint64_t dispatch thunk of QueryDaemonInterface.fetchAllAssetInfo()()
{
  OUTLINED_FUNCTION_15();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256CA32C8;
  uint64_t v3 = OUTLINED_FUNCTION_244();
  return v4(v3);
}

uint64_t sub_256CA32C8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_8();
  return v5(v2);
}

uint64_t dispatch thunk of QueryDaemonInterface.fetchDynamicAssetInfo()()
{
  OUTLINED_FUNCTION_15();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256CA36A4;
  uint64_t v3 = OUTLINED_FUNCTION_244();
  return v4(v3);
}

uint64_t dispatch thunk of QueryDaemonInterface.fetchEffectivePolicy()()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 24) + **(int **)(v0 + 24));
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_14(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_256BE3BF0;
  return v10(v5, v3, v1);
}

uint64_t dispatch thunk of QueryDaemonInterface.fetchPolicy(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 32) + **(int **)(a5 + 32));
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_14(v10);
  void *v11 = v12;
  v11[1] = sub_256BDD6B8;
  return v14(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for Query.LiveDaemonInterface()
{
  return &type metadata for Query.LiveDaemonInterface;
}

void _s20ModelManagerServices0A9XPCResultO3getxyq_YKF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_69_4();
  a17 = v19;
  a18 = v20;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v23 + 24);
  OUTLINED_FUNCTION_5();
  uint64_t v29 = v28;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_29();
  (*(void (**)(uint64_t))(v34 + 16))(v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_33_3();
    v35();
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v22, v32, v27);
    OUTLINED_FUNCTION_25_2();
    swift_willThrowTypedImpl();
    OUTLINED_FUNCTION_21_10();
    v36();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v24 + 16) - 8) + 32))(v26, v18);
  }
  OUTLINED_FUNCTION_63_6();
}

ModelManagerServices::ModelXPCRequest::LoadAssetBundle __swiftcall ModelXPCRequest.LoadAssetBundle.init(assetBundleIdentifier:dynamicMode:)(Swift::String assetBundleIdentifier, Swift::Bool dynamicMode)
{
  *(Swift::String *)uint64_t v2 = assetBundleIdentifier;
  *(unsigned char *)(v2 + 16) = dynamicMode;
  result.assetBundleIdentifier = assetBundleIdentifier;
  result.dynamicMode = dynamicMode;
  return result;
}

ModelManagerServices::ModelXPCRequest::HoldAssetBundle __swiftcall ModelXPCRequest.HoldAssetBundle.init(assetBundleIdentifier:)(ModelManagerServices::ModelXPCRequest::HoldAssetBundle assetBundleIdentifier)
{
  ModelManagerServices::ModelXPCRequest::HoldAssetBundle *v1 = assetBundleIdentifier;
  return assetBundleIdentifier;
}

unint64_t static ModelXPCRequest.serviceName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_256CA3864(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x5265747563657865 && a2 == 0xEE00747365757165;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65526C65636E6163 && a2 == 0xED00007473657571;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6553657461657263 && a2 == 0xED00006E6F697373;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x65536574656C6564 && a2 == 0xED00006E6F697373;
        if (v8 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x536D726177657270 && a2 == 0xEE006E6F69737365;
          if (v9 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x65536C65636E6163 && a2 == 0xED00006E6F697373;
            if (v10 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x8000000256D01770 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x8000000256D01790 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 0x7373416863746566 && a2 == 0xEF736E6F69747265;
              if (v11 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D017B0 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                BOOL v12 = a1 == 0x7373416863746566 && a2 == 0xEB00000000737465;
                if (v12 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else if (a1 == 0xD000000000000012 && a2 == 0x8000000256D017D0 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else
                {
                  BOOL v13 = a1 == 0x6C6F506863746566 && a2 == 0xEB00000000796369;
                  if (v13 || (sub_256CEE6C8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 12;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x6573734164616F6CLL && a2 == 0xEF656C646E754274;
                    if (v14 || (sub_256CEE6C8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 13;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x65737341646C6F68 && a2 == 0xEF656C646E754274;
                      if (v15 || (sub_256CEE6C8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 14;
                      }
                      else if (a1 == 0xD000000000000017 && a2 == 0x8000000256D017F0 || (sub_256CEE6C8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 15;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x74617453706D7564 && a2 == 0xE900000000000065;
                        if (v16 || (sub_256CEE6C8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 16;
                        }
                        else if (a1 == 0xD000000000000012 && a2 == 0x8000000256D01810 || (sub_256CEE6C8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 17;
                        }
                        else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D01830 || (sub_256CEE6C8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 18;
                        }
                        else if (a1 == 0xD000000000000019 && a2 == 0x8000000256D01850)
                        {
                          swift_bridgeObjectRelease();
                          return 19;
                        }
                        else
                        {
                          char v17 = sub_256CEE6C8();
                          swift_bridgeObjectRelease();
                          if (v17) {
                            return 19;
                          }
                          else {
                            return 20;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_256CA4040(char a1)
{
  uint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      return 0x65526C65636E6163;
    case 2:
      uint64_t v3 = 1634038371;
      goto LABEL_6;
    case 3:
      uint64_t v3 = 1701602660;
LABEL_6:
      unint64_t v4 = v3 & 0xFFFF0000FFFFFFFFLL | 0x657400000000;
      return v4 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
    case 4:
      return 0x536D726177657270;
    case 5:
      unint64_t v4 = 0x6C65636E6163;
      return v4 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
    case 6:
    case 7:
      return result;
    case 8:
    case 10:
      return 0x7373416863746566;
    case 9:
      return 0xD000000000000011;
    case 11:
      return 0xD000000000000012;
    case 12:
      return 0x6C6F506863746566;
    case 13:
      unsigned int v5 = 1684107116;
      goto LABEL_16;
    case 14:
      unsigned int v5 = 1684828008;
LABEL_16:
      uint64_t result = v5 | 0x6573734100000000;
      break;
    case 15:
      uint64_t result = 0xD000000000000017;
      break;
    case 16:
      uint64_t result = 0x74617453706D7564;
      break;
    case 17:
      uint64_t result = 0xD000000000000012;
      break;
    case 18:
      uint64_t result = 0xD000000000000014;
      break;
    case 19:
      uint64_t result = 0xD000000000000019;
      break;
    default:
      uint64_t result = 0x5265747563657865;
      break;
  }
  return result;
}

uint64_t sub_256CA4290(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_110_2();
    OUTLINED_FUNCTION_109_2();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CA42F0(uint64_t a1)
{
  unint64_t v2 = sub_256CA6CB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA432C(uint64_t a1)
{
  unint64_t v2 = sub_256CA6CB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4368(uint64_t a1)
{
  unint64_t v2 = sub_256CA6E2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA43A4(uint64_t a1)
{
  unint64_t v2 = sub_256CA6E2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA43E0(uint64_t a1)
{
  unint64_t v2 = sub_256CA6CFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA441C(uint64_t a1)
{
  unint64_t v2 = sub_256CA6CFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4458()
{
  return sub_256CA4040(*v0);
}

uint64_t sub_256CA4460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CA3864(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CA4488(uint64_t a1)
{
  unint64_t v2 = sub_256CA64A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA44C4(uint64_t a1)
{
  unint64_t v2 = sub_256CA64A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4500(uint64_t a1)
{
  unint64_t v2 = sub_256CA6DE0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA453C(uint64_t a1)
{
  unint64_t v2 = sub_256CA6DE0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4578(uint64_t a1)
{
  unint64_t v2 = sub_256CA6D94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA45B4(uint64_t a1)
{
  unint64_t v2 = sub_256CA6D94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA45F0(uint64_t a1)
{
  unint64_t v2 = sub_256CA670C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA462C(uint64_t a1)
{
  unint64_t v2 = sub_256CA670C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4668(uint64_t a1)
{
  unint64_t v2 = sub_256CA6E78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA46A4(uint64_t a1)
{
  unint64_t v2 = sub_256CA6E78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA46E0(uint64_t a1)
{
  unint64_t v2 = sub_256CA6BCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA471C(uint64_t a1)
{
  unint64_t v2 = sub_256CA6BCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4758(uint64_t a1)
{
  unint64_t v2 = sub_256CA6A9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4794(uint64_t a1)
{
  unint64_t v2 = sub_256CA6A9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA47D0(uint64_t a1)
{
  unint64_t v2 = sub_256CA6A04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA480C(uint64_t a1)
{
  unint64_t v2 = sub_256CA6A04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CA4290(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CA4874(uint64_t a1)
{
  unint64_t v2 = sub_256CA6628();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA48B0(uint64_t a1)
{
  unint64_t v2 = sub_256CA6628();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA48EC(uint64_t a1)
{
  unint64_t v2 = sub_256CA696C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4928(uint64_t a1)
{
  unint64_t v2 = sub_256CA696C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4964(uint64_t a1)
{
  unint64_t v2 = sub_256CA67A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA49A0(uint64_t a1)
{
  unint64_t v2 = sub_256CA67A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA49DC(uint64_t a1)
{
  unint64_t v2 = sub_256CA683C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4A18(uint64_t a1)
{
  unint64_t v2 = sub_256CA683C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4A54(uint64_t a1)
{
  unint64_t v2 = sub_256CA68D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4A90(uint64_t a1)
{
  unint64_t v2 = sub_256CA68D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4ACC(uint64_t a1)
{
  unint64_t v2 = sub_256CA6D48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4B08(uint64_t a1)
{
  unint64_t v2 = sub_256CA6D48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4B44(uint64_t a1)
{
  unint64_t v2 = sub_256CA6C64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4B80(uint64_t a1)
{
  unint64_t v2 = sub_256CA6C64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4BBC(uint64_t a1)
{
  unint64_t v2 = sub_256CA6B34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4BF8(uint64_t a1)
{
  unint64_t v2 = sub_256CA6B34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4C34(uint64_t a1)
{
  unint64_t v2 = sub_256CA653C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4C70(uint64_t a1)
{
  unint64_t v2 = sub_256CA653C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CA4CAC(uint64_t a1)
{
  unint64_t v2 = sub_256CA64F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA4CE8(uint64_t a1)
{
  unint64_t v2 = sub_256CA64F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v139 = v1;
  uint64_t v145 = v0;
  BOOL v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AB8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v136 = v8;
  uint64_t v137 = v7;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  uint64_t v135 = v9;
  v133[7] = type metadata accessor for ModelXPCRequest.StartMonitoringInferences(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_0();
  uint64_t v134 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B88);
  OUTLINED_FUNCTION_0_0();
  v133[5] = v13;
  v133[6] = v12;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_81_3(v14, v126[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF8);
  OUTLINED_FUNCTION_0_0();
  v133[3] = v16;
  v133[4] = v15;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_78_5(v17, v126[0]);
  v132[4] = type metadata accessor for ModelXPCRequest.FetchModelInstance(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_23(v19, v126[0]);
  v132[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B08);
  OUTLINED_FUNCTION_0_0();
  v132[2] = v20;
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_11_0((uint64_t)v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v132[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B90);
  OUTLINED_FUNCTION_0_0();
  v131[4] = v23;
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_11_0((uint64_t)v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B58);
  OUTLINED_FUNCTION_0_0();
  v131[1] = v26;
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_11_0((uint64_t)v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v130[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B60);
  OUTLINED_FUNCTION_0_0();
  v130[3] = v29;
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v31);
  v130[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B18);
  OUTLINED_FUNCTION_0_0();
  v130[0] = v32;
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v34);
  v129[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B80);
  OUTLINED_FUNCTION_0_0();
  v129[2] = v35;
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v37);
  v129[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B10);
  OUTLINED_FUNCTION_0_0();
  v128[4] = v38;
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v40);
  v128[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B78);
  OUTLINED_FUNCTION_0_0();
  v128[1] = v41;
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v43);
  v127[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B50);
  OUTLINED_FUNCTION_0_0();
  v127[3] = v44;
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v46);
  v127[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B70);
  OUTLINED_FUNCTION_0_0();
  v127[1] = v47;
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_3_0();
  uint64_t v50 = OUTLINED_FUNCTION_47_7(v49);
  v126[32] = type metadata accessor for ModelXPCRequest.ReleaseRequest(v50);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v51);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v52);
  v126[33] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B68);
  OUTLINED_FUNCTION_0_0();
  v126[31] = v53;
  MEMORY[0x270FA5388](v54);
  OUTLINED_FUNCTION_3_0();
  uint64_t v56 = OUTLINED_FUNCTION_47_7(v55);
  v126[27] = type metadata accessor for ModelXPCRequest.AcquireRequest(v56);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v57);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v58);
  v126[28] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B28);
  OUTLINED_FUNCTION_0_0();
  v126[26] = v59;
  MEMORY[0x270FA5388](v60);
  OUTLINED_FUNCTION_3_0();
  uint64_t v62 = OUTLINED_FUNCTION_47_7(v61);
  v126[22] = type metadata accessor for ModelXPCRequest.CancelSessionRequest(v62);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v63);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v64);
  v126[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B48);
  OUTLINED_FUNCTION_0_0();
  v126[21] = v65;
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_3_0();
  uint64_t v68 = OUTLINED_FUNCTION_47_7(v67);
  v126[17] = type metadata accessor for ModelXPCRequest.PrewarmSession(v68);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v69);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v70);
  v126[18] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B38);
  OUTLINED_FUNCTION_0_0();
  v126[16] = v71;
  MEMORY[0x270FA5388](v72);
  OUTLINED_FUNCTION_3_0();
  uint64_t v74 = OUTLINED_FUNCTION_47_7(v73);
  v126[12] = type metadata accessor for ModelXPCRequest.DeleteSessionRequest(v74);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v75);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v76);
  v126[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B30);
  OUTLINED_FUNCTION_0_0();
  v126[11] = v77;
  MEMORY[0x270FA5388](v78);
  OUTLINED_FUNCTION_3_0();
  uint64_t v80 = OUTLINED_FUNCTION_47_7(v79);
  v126[8] = type metadata accessor for ModelXPCRequest.CreateSessionRequest(v80);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v81);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v82);
  v126[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B20);
  OUTLINED_FUNCTION_0_0();
  v126[6] = v83;
  MEMORY[0x270FA5388](v84);
  OUTLINED_FUNCTION_3_0();
  uint64_t v86 = OUTLINED_FUNCTION_47_7(v85);
  v126[3] = type metadata accessor for ModelXPCRequest.CancelRequest(v86);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v87);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v88);
  v126[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B40);
  OUTLINED_FUNCTION_0_0();
  v126[1] = v89;
  MEMORY[0x270FA5388](v90);
  uint64_t v91 = OUTLINED_FUNCTION_12_0();
  type metadata accessor for ModelXPCRequest.ExecuteRequest(v91);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v92);
  uint64_t v93 = OUTLINED_FUNCTION_54_0();
  uint64_t v94 = type metadata accessor for ModelXPCRequest(v93);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v95);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8B00);
  OUTLINED_FUNCTION_0_0();
  uint64_t v140 = v96;
  uint64_t v141 = v97;
  MEMORY[0x270FA5388](v96);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_25_8(v6);
  sub_256CA64A4();
  uint64_t v138 = v3;
  sub_256CEE878();
  sub_256CB0528(v145, v2, (void (*)(void))type metadata accessor for ModelXPCRequest);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      OUTLINED_FUNCTION_67_5(v2, (void (*)(void))type metadata accessor for ModelXPCRequest.CancelRequest, (uint64_t)v127);
      LOBYTE(v142) = 1;
      sub_256CA6E2C();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_269FC4F98, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CancelRequest);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_66_4();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v99();
      goto LABEL_26;
    case 2u:
      OUTLINED_FUNCTION_67_5(v2, (void (*)(void))type metadata accessor for ModelXPCRequest.CreateSessionRequest, (uint64_t)v128);
      LOBYTE(v142) = 2;
      sub_256CA6DE0();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_26B2C7960, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CreateSessionRequest);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_66_4();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v100();
      goto LABEL_26;
    case 3u:
      OUTLINED_FUNCTION_67_5(v2, (void (*)(void))type metadata accessor for ModelXPCRequest.DeleteSessionRequest, (uint64_t)v129);
      LOBYTE(v142) = 3;
      sub_256CA6D94();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_269FC4F88, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.DeleteSessionRequest);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_66_4();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v101();
      goto LABEL_26;
    case 4u:
      OUTLINED_FUNCTION_67_5(v2, (void (*)(void))type metadata accessor for ModelXPCRequest.PrewarmSession, (uint64_t)v130);
      LOBYTE(v142) = 4;
      sub_256CA6D48();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_26B2C78E0, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.PrewarmSession);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_66_4();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v102();
      goto LABEL_26;
    case 5u:
      OUTLINED_FUNCTION_67_5(v2, (void (*)(void))type metadata accessor for ModelXPCRequest.CancelSessionRequest, (uint64_t)v131);
      LOBYTE(v142) = 5;
      sub_256CA6CFC();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_26B2C7908, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CancelSessionRequest);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_66_4();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v103();
      goto LABEL_26;
    case 6u:
      OUTLINED_FUNCTION_67_5(v2, (void (*)(void))type metadata accessor for ModelXPCRequest.AcquireRequest, (uint64_t)v132);
      LOBYTE(v142) = 6;
      sub_256CA6CB0();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_26B2C86B8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.AcquireRequest);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_66_4();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v104();
      goto LABEL_26;
    case 7u:
      OUTLINED_FUNCTION_67_5(v2, (void (*)(void))type metadata accessor for ModelXPCRequest.ReleaseRequest, (uint64_t)v133);
      LOBYTE(v142) = 7;
      sub_256CA6C64();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_26B2C8330, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ReleaseRequest);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_66_4();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v105();
      goto LABEL_26;
    case 8u:
      LOBYTE(v142) = 8;
      sub_256CA6BCC();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6C18();
      OUTLINED_FUNCTION_44_7();
      goto LABEL_22;
    case 9u:
      uint64_t v106 = *(void *)v2;
      LOBYTE(v142) = 9;
      sub_256CA6B34();
      OUTLINED_FUNCTION_86_1();
      uint64_t v142 = v106;
      sub_256CA6B80();
      sub_256CEE5A8();
      OUTLINED_FUNCTION_112_2();
      OUTLINED_FUNCTION_50();
      v107();
      uint64_t v108 = *(void (**)(uint64_t, uint64_t))(v141 + 8);
      uint64_t v109 = v3;
      goto LABEL_18;
    case 0xAu:
      LOBYTE(v142) = 10;
      sub_256CA6A9C();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6AE8();
      OUTLINED_FUNCTION_44_7();
      goto LABEL_22;
    case 0xBu:
      LOBYTE(v142) = 11;
      sub_256CA6A04();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6A50();
      OUTLINED_FUNCTION_44_7();
      goto LABEL_22;
    case 0xCu:
      uint64_t v111 = *(void *)v2;
      uint64_t v110 = *(void *)(v2 + 8);
      LOBYTE(v142) = 12;
      sub_256CA696C();
      OUTLINED_FUNCTION_68_4();
      uint64_t v142 = v111;
      uint64_t v143 = v110;
      sub_256CA69B8();
      OUTLINED_FUNCTION_119_2();
      goto LABEL_17;
    case 0xDu:
      uint64_t v113 = *(void *)v2;
      uint64_t v112 = *(void *)(v2 + 8);
      char v114 = *(unsigned char *)(v2 + 16);
      LOBYTE(v142) = 13;
      sub_256CA68D4();
      sub_256CEE538();
      uint64_t v142 = v113;
      uint64_t v143 = v112;
      char v144 = v114;
      sub_256CA6920();
      sub_256CEE5A8();
      OUTLINED_FUNCTION_50();
      v115();
      OUTLINED_FUNCTION_123_2();
      uint64_t v109 = OUTLINED_FUNCTION_112_2();
      goto LABEL_19;
    case 0xEu:
      uint64_t v118 = *(void *)v2;
      uint64_t v117 = *(void *)(v2 + 8);
      LOBYTE(v142) = 14;
      sub_256CA683C();
      OUTLINED_FUNCTION_68_4();
      uint64_t v142 = v118;
      uint64_t v143 = v117;
      sub_256CA6888();
      OUTLINED_FUNCTION_119_2();
LABEL_17:
      OUTLINED_FUNCTION_50();
      v119();
      OUTLINED_FUNCTION_123_2();
      uint64_t v109 = v94;
LABEL_18:
      uint64_t v116 = v2;
LABEL_19:
      v108(v109, v116);
      swift_bridgeObjectRelease();
      break;
    case 0xFu:
      LOBYTE(v142) = 15;
      sub_256CA67A4();
      OUTLINED_FUNCTION_6_4();
      sub_256CA67F0();
      OUTLINED_FUNCTION_44_7();
      goto LABEL_22;
    case 0x10u:
      LOBYTE(v142) = 16;
      sub_256CA670C();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6758();
      OUTLINED_FUNCTION_44_7();
      goto LABEL_22;
    case 0x11u:
      sub_256CA65D4(v2, v133[0], (void (*)(void))type metadata accessor for ModelXPCRequest.FetchModelInstance);
      LOBYTE(v142) = 17;
      sub_256CA6628();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_269FC4F08, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.FetchModelInstance);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v121();
      goto LABEL_26;
    case 0x12u:
      LOBYTE(v142) = 18;
      sub_256CA653C();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6588();
      OUTLINED_FUNCTION_44_7();
LABEL_22:
      OUTLINED_FUNCTION_50();
      v120();
      goto LABEL_27;
    case 0x13u:
      sub_256CA65D4(v2, v134, (void (*)(void))type metadata accessor for ModelXPCRequest.StartMonitoringInferences);
      LOBYTE(v142) = 19;
      sub_256CA64F0();
      OUTLINED_FUNCTION_6_4();
      sub_256CA6674(&qword_26B2C79D0, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.StartMonitoringInferences);
      OUTLINED_FUNCTION_53_7();
      OUTLINED_FUNCTION_45_4();
      OUTLINED_FUNCTION_50();
      v122();
LABEL_26:
      sub_256CA66BC();
LABEL_27:
      OUTLINED_FUNCTION_123_2();
      uint64_t v123 = OUTLINED_FUNCTION_25_2();
      v125(v123, v124);
      break;
    default:
      sub_256CA65D4(v2, v4, (void (*)(void))type metadata accessor for ModelXPCRequest.ExecuteRequest);
      LOBYTE(v142) = 0;
      sub_256CA6E78();
      OUTLINED_FUNCTION_86_1();
      sub_256CA6674(&qword_269FC4FA8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest);
      sub_256CEE5A8();
      OUTLINED_FUNCTION_50();
      v98();
      sub_256CA66BC();
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v3, v2);
      break;
  }
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_33();
}

uint64_t type metadata accessor for ModelXPCRequest.StartMonitoringInferences(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8D40);
}

uint64_t type metadata accessor for ModelXPCRequest.FetchModelInstance(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8AC8);
}

uint64_t type metadata accessor for ModelXPCRequest.ReleaseRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8DC0);
}

uint64_t type metadata accessor for ModelXPCRequest.AcquireRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8D90);
}

uint64_t type metadata accessor for ModelXPCRequest.CancelSessionRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8DE0);
}

uint64_t type metadata accessor for ModelXPCRequest.PrewarmSession(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8DB0);
}

uint64_t type metadata accessor for ModelXPCRequest.DeleteSessionRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8AD8);
}

uint64_t type metadata accessor for ModelXPCRequest.CreateSessionRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8DF0);
}

uint64_t type metadata accessor for ModelXPCRequest.CancelRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8D80);
}

uint64_t type metadata accessor for ModelXPCRequest.ExecuteRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8DA0);
}

uint64_t type metadata accessor for ModelXPCRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8F10);
}

unint64_t sub_256CA64A4()
{
  unint64_t result = qword_26B2C8D68;
  if (!qword_26B2C8D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8D68);
  }
  return result;
}

unint64_t sub_256CA64F0()
{
  unint64_t result = qword_26B2C7760;
  if (!qword_26B2C7760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7760);
  }
  return result;
}

unint64_t sub_256CA653C()
{
  unint64_t result = qword_269FC4EF0;
  if (!qword_269FC4EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4EF0);
  }
  return result;
}

unint64_t sub_256CA6588()
{
  unint64_t result = qword_269FC4EF8;
  if (!qword_269FC4EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4EF8);
  }
  return result;
}

uint64_t sub_256CA65D4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_297();
  v5(v4);
  return a2;
}

unint64_t sub_256CA6628()
{
  unint64_t result = qword_269FC4F00;
  if (!qword_269FC4F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F00);
  }
  return result;
}

uint64_t sub_256CA6674(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256CA66BC()
{
  uint64_t v1 = OUTLINED_FUNCTION_104_1();
  v2(v1);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v3();
  return v0;
}

unint64_t sub_256CA670C()
{
  unint64_t result = qword_26B2C4988;
  if (!qword_26B2C4988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4988);
  }
  return result;
}

unint64_t sub_256CA6758()
{
  unint64_t result = qword_26B2C49B8;
  if (!qword_26B2C49B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C49B8);
  }
  return result;
}

unint64_t sub_256CA67A4()
{
  unint64_t result = qword_269FC4F10;
  if (!qword_269FC4F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F10);
  }
  return result;
}

unint64_t sub_256CA67F0()
{
  unint64_t result = qword_269FC4F18;
  if (!qword_269FC4F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F18);
  }
  return result;
}

unint64_t sub_256CA683C()
{
  unint64_t result = qword_269FC4F20;
  if (!qword_269FC4F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F20);
  }
  return result;
}

unint64_t sub_256CA6888()
{
  unint64_t result = qword_269FC4F28;
  if (!qword_269FC4F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F28);
  }
  return result;
}

unint64_t sub_256CA68D4()
{
  unint64_t result = qword_269FC4F30;
  if (!qword_269FC4F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F30);
  }
  return result;
}

unint64_t sub_256CA6920()
{
  unint64_t result = qword_269FC4F38;
  if (!qword_269FC4F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F38);
  }
  return result;
}

unint64_t sub_256CA696C()
{
  unint64_t result = qword_269FC4F40;
  if (!qword_269FC4F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F40);
  }
  return result;
}

unint64_t sub_256CA69B8()
{
  unint64_t result = qword_269FC4F48;
  if (!qword_269FC4F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F48);
  }
  return result;
}

unint64_t sub_256CA6A04()
{
  unint64_t result = qword_269FC4F50;
  if (!qword_269FC4F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F50);
  }
  return result;
}

unint64_t sub_256CA6A50()
{
  unint64_t result = qword_269FC4F58;
  if (!qword_269FC4F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F58);
  }
  return result;
}

unint64_t sub_256CA6A9C()
{
  unint64_t result = qword_26B2C82F8;
  if (!qword_26B2C82F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C82F8);
  }
  return result;
}

unint64_t sub_256CA6AE8()
{
  unint64_t result = qword_26B2C82F0;
  if (!qword_26B2C82F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C82F0);
  }
  return result;
}

unint64_t sub_256CA6B34()
{
  unint64_t result = qword_269FC4F60;
  if (!qword_269FC4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F60);
  }
  return result;
}

unint64_t sub_256CA6B80()
{
  unint64_t result = qword_269FC4F68;
  if (!qword_269FC4F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F68);
  }
  return result;
}

unint64_t sub_256CA6BCC()
{
  unint64_t result = qword_269FC4F70;
  if (!qword_269FC4F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F70);
  }
  return result;
}

unint64_t sub_256CA6C18()
{
  unint64_t result = qword_269FC4F78;
  if (!qword_269FC4F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F78);
  }
  return result;
}

unint64_t sub_256CA6C64()
{
  unint64_t result = qword_26B2C82D8;
  if (!qword_26B2C82D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C82D8);
  }
  return result;
}

unint64_t sub_256CA6CB0()
{
  unint64_t result = qword_26B2C8688;
  if (!qword_26B2C8688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8688);
  }
  return result;
}

unint64_t sub_256CA6CFC()
{
  unint64_t result = qword_26B2C7748;
  if (!qword_26B2C7748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7748);
  }
  return result;
}

unint64_t sub_256CA6D48()
{
  unint64_t result = qword_26B2C7758;
  if (!qword_26B2C7758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7758);
  }
  return result;
}

unint64_t sub_256CA6D94()
{
  unint64_t result = qword_269FC4F80;
  if (!qword_269FC4F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F80);
  }
  return result;
}

unint64_t sub_256CA6DE0()
{
  unint64_t result = qword_26B2C7750;
  if (!qword_26B2C7750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7750);
  }
  return result;
}

unint64_t sub_256CA6E2C()
{
  unint64_t result = qword_269FC4F90;
  if (!qword_269FC4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4F90);
  }
  return result;
}

unint64_t sub_256CA6E78()
{
  unint64_t result = qword_269FC4FA0;
  if (!qword_269FC4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FA0);
  }
  return result;
}

void ModelXPCRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_32_0();
  a19 = v22;
  a20 = v23;
  v273 = (char *)v20;
  uint64_t v25 = v24;
  uint64_t v266 = v26;
  v265[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4930);
  OUTLINED_FUNCTION_0_0();
  uint64_t v267 = v27;
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_0();
  v265[30] = v29;
  v265[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C30);
  OUTLINED_FUNCTION_0_0();
  v265[5] = v30;
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_3_0();
  v265[29] = v32;
  v265[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B90);
  OUTLINED_FUNCTION_0_0();
  v265[3] = v33;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_3_0();
  v265[28] = v35;
  v265[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BB0);
  OUTLINED_FUNCTION_0_0();
  v265[1] = v36;
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_3_0();
  v265[27] = v38;
  v265[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C38);
  OUTLINED_FUNCTION_0_0();
  uint64_t v264 = v39;
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_81_3(v41, v227);
  uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C00);
  OUTLINED_FUNCTION_0_0();
  v262[3] = v42;
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_78_5(v44, v227);
  v262[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C08);
  OUTLINED_FUNCTION_0_0();
  v262[1] = v45;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_23(v47, v227);
  v262[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BC0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v261 = v48;
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_3_0();
  v265[23] = v50;
  v260[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C28);
  OUTLINED_FUNCTION_0_0();
  v260[0] = v51;
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_3_0();
  v265[22] = v53;
  uint64_t v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BB8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v258 = v54;
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v56);
  uint64_t v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C20);
  OUTLINED_FUNCTION_0_0();
  uint64_t v256 = v57;
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_11_0((uint64_t)&v227 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BF8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v254 = v60;
  MEMORY[0x270FA5388](v61);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v62);
  uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C18);
  OUTLINED_FUNCTION_0_0();
  uint64_t v252 = v63;
  MEMORY[0x270FA5388](v64);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v65);
  uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C10);
  OUTLINED_FUNCTION_0_0();
  uint64_t v250 = v66;
  MEMORY[0x270FA5388](v67);
  OUTLINED_FUNCTION_11_0((uint64_t)&v227 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BD0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v248 = v69;
  MEMORY[0x270FA5388](v70);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v71);
  uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BF0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v246 = v72;
  MEMORY[0x270FA5388](v73);
  OUTLINED_FUNCTION_11_0((uint64_t)&v227 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BE0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v245 = v75;
  MEMORY[0x270FA5388](v76);
  OUTLINED_FUNCTION_82_4(v77, v227);
  uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BD8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v242 = v78;
  MEMORY[0x270FA5388](v79);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v80);
  uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BC8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v240 = v81;
  MEMORY[0x270FA5388](v82);
  OUTLINED_FUNCTION_80_3(v83, v227);
  uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BE8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v238 = v84;
  MEMORY[0x270FA5388](v85);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v86);
  uint64_t v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B98);
  OUTLINED_FUNCTION_0_0();
  uint64_t v269 = v87;
  MEMORY[0x270FA5388](v88);
  OUTLINED_FUNCTION_16_0(v89, v227);
  uint64_t v268 = type metadata accessor for ModelXPCRequest(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v90);
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v91);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v92);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v93);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v94);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v95);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v96);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v97);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v98);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v99);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v100);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v101);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v102);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v103);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v104);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  uint64_t v106 = MEMORY[0x270FA5388](v105);
  uint64_t v108 = (char *)&v227 - v107;
  uint64_t v109 = MEMORY[0x270FA5388](v106);
  uint64_t v111 = (char *)&v227 - v110;
  uint64_t v112 = MEMORY[0x270FA5388](v109);
  char v114 = (char *)&v227 - v113;
  MEMORY[0x270FA5388](v112);
  OUTLINED_FUNCTION_89_3();
  uint64_t v116 = MEMORY[0x270FA5388](v115);
  uint64_t v118 = (char *)&v227 - v117;
  MEMORY[0x270FA5388](v116);
  v120 = (char *)&v227 - v119;
  uint64_t v121 = v25[3];
  v272 = v25;
  __swift_project_boxed_opaque_existential_1(v25, v121);
  sub_256CA64A4();
  uint64_t v122 = (uint64_t)v273;
  sub_256CEE848();
  if (v122) {
    goto LABEL_7;
  }
  v229 = v118;
  uint64_t v230 = v21;
  v233 = v114;
  v231 = v111;
  v232 = v108;
  v273 = v120;
  uint64_t v123 = a10;
  uint64_t v124 = sub_256CEE528();
  uint64_t v125 = v124;
  uint64_t v126 = *(void *)(v124 + 16);
  if (!v126
    || (uint64_t v228 = 0,
        uint64_t v127 = *(unsigned __int8 *)(v124 + 32),
        uint64_t v128 = sub_256BEBCEC(1, v126, v124, v124 + 32, 0, (2 * v126) | 1),
        uint64_t v130 = v129,
        unint64_t v132 = v131,
        swift_bridgeObjectRelease(),
        v130 != v132 >> 1))
  {
    uint64_t v135 = v268;
    uint64_t v134 = v269;
    uint64_t v136 = v271;
    uint64_t v137 = sub_256CEE398();
    swift_allocError();
    uint64_t v139 = v138;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2BA0);
    *uint64_t v139 = v135;
    sub_256CEE468();
    sub_256CEE388();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v137 - 8) + 104))(v139, *MEMORY[0x263F8DCB0], v137);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v123, v136);
LABEL_7:
    uint64_t v128 = (uint64_t)v272;
    goto LABEL_8;
  }
  uint64_t SessionRequest = v228;
  switch(v127)
  {
    case 1:
      LOBYTE(v274) = 1;
      sub_256CA6E2C();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      uint64_t v140 = type metadata accessor for ModelXPCRequest.CancelRequest(0);
      sub_256CA6674(&qword_269FC5000, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CancelRequest);
      uint64_t v141 = v230;
      sub_256CEE4D8();
      OUTLINED_FUNCTION_38_6();
      if (!v130)
      {
        OUTLINED_FUNCTION_50();
        v209();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v123, v271);
        swift_storeEnumTagMultiPayload();
        uint64_t v213 = v141;
        goto LABEL_36;
      }
      OUTLINED_FUNCTION_50();
      v142();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v123, v271);
      break;
    case 2:
      LOBYTE(v274) = 2;
      sub_256CA6DE0();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      uint64_t SessionRequest = type metadata accessor for ModelXPCRequest.CreateSessionRequest(0);
      sub_256CA6674(&qword_26B2C5488, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CreateSessionRequest);
      OUTLINED_FUNCTION_75_2();
      OUTLINED_FUNCTION_28_9();
      OUTLINED_FUNCTION_38_6();
      uint64_t v143 = OUTLINED_FUNCTION_3_8();
      v144(v143);
      swift_unknownObjectRelease();
      uint64_t v145 = OUTLINED_FUNCTION_9_6();
      v146(v145);
      OUTLINED_FUNCTION_30_7((uint64_t)&v259);
      goto LABEL_35;
    case 3:
      uint64_t v270 = v128;
      LOBYTE(v274) = 3;
      sub_256CA6D94();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      type metadata accessor for ModelXPCRequest.DeleteSessionRequest(0);
      sub_256CA6674(&qword_269FC4FF8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.DeleteSessionRequest);
      uint64_t v147 = (uint64_t)v231;
      OUTLINED_FUNCTION_28_9();
      uint64_t v210 = OUTLINED_FUNCTION_3_8();
      v211(v210);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v212();
      swift_storeEnumTagMultiPayload();
      uint64_t v213 = v147;
      goto LABEL_36;
    case 4:
      LOBYTE(v274) = 4;
      sub_256CA6D48();
      uint64_t v148 = v271;
      sub_256CEE458();
      OUTLINED_FUNCTION_37_8();
      if (SessionRequest)
      {
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_50();
        v204();
        break;
      }
      uint64_t v206 = type metadata accessor for ModelXPCRequest.PrewarmSession(0);
      sub_256CA6674(&qword_26B2C5460, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.PrewarmSession);
      uint64_t v207 = (uint64_t)v232;
      OUTLINED_FUNCTION_28_9();
      OUTLINED_FUNCTION_38_6();
      uint64_t v222 = OUTLINED_FUNCTION_3_8();
      v223(v222);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v206 + 8))(a10, v148);
      swift_storeEnumTagMultiPayload();
      uint64_t v213 = v207;
      goto LABEL_36;
    case 5:
      LOBYTE(v274) = 5;
      sub_256CA6CFC();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      uint64_t SessionRequest = type metadata accessor for ModelXPCRequest.CancelSessionRequest(0);
      sub_256CA6674(&qword_26B2C5480, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CancelSessionRequest);
      OUTLINED_FUNCTION_75_2();
      OUTLINED_FUNCTION_28_9();
      OUTLINED_FUNCTION_38_6();
      uint64_t v149 = OUTLINED_FUNCTION_3_8();
      v150(v149);
      swift_unknownObjectRelease();
      uint64_t v151 = OUTLINED_FUNCTION_9_6();
      v152(v151);
      OUTLINED_FUNCTION_30_7((uint64_t)&v274);
      goto LABEL_35;
    case 6:
      LOBYTE(v274) = 6;
      sub_256CA6CB0();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      uint64_t SessionRequest = type metadata accessor for ModelXPCRequest.AcquireRequest(0);
      sub_256CA6674(&qword_26B2C4958, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.AcquireRequest);
      OUTLINED_FUNCTION_75_2();
      OUTLINED_FUNCTION_28_9();
      OUTLINED_FUNCTION_38_6();
      uint64_t v153 = OUTLINED_FUNCTION_3_8();
      v154(v153);
      swift_unknownObjectRelease();
      uint64_t v155 = OUTLINED_FUNCTION_9_6();
      v156(v155);
      OUTLINED_FUNCTION_30_7((uint64_t)&v274 + 8);
      goto LABEL_35;
    case 7:
      LOBYTE(v274) = 7;
      sub_256CA6C64();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      uint64_t SessionRequest = type metadata accessor for ModelXPCRequest.ReleaseRequest(0);
      sub_256CA6674(&qword_26B2C4978, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ReleaseRequest);
      OUTLINED_FUNCTION_75_2();
      OUTLINED_FUNCTION_28_9();
      OUTLINED_FUNCTION_38_6();
      uint64_t v157 = OUTLINED_FUNCTION_3_8();
      v158(v157);
      swift_unknownObjectRelease();
      uint64_t v159 = OUTLINED_FUNCTION_9_6();
      v160(v159);
      OUTLINED_FUNCTION_30_7((uint64_t)v275);
      goto LABEL_35;
    case 8:
      LOBYTE(v274) = 8;
      sub_256CA6BCC();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB04C4();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v161 = OUTLINED_FUNCTION_3_8();
      v162(v161);
      swift_unknownObjectRelease();
      uint64_t v163 = OUTLINED_FUNCTION_9_6();
      v164(v163);
      OUTLINED_FUNCTION_30_7((uint64_t)v260);
      goto LABEL_35;
    case 9:
      LOBYTE(v274) = 9;
      sub_256CA6B34();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB0478();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v165 = OUTLINED_FUNCTION_3_8();
      v166(v165);
      swift_unknownObjectRelease();
      uint64_t v167 = OUTLINED_FUNCTION_9_6();
      v168(v167);
      uint64_t SessionRequest = (uint64_t)v234;
      void *v234 = v274;
      OUTLINED_FUNCTION_42_5();
      goto LABEL_35;
    case 10:
      LOBYTE(v274) = 10;
      sub_256CA6A9C();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB042C();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v169 = OUTLINED_FUNCTION_3_8();
      v170(v169);
      swift_unknownObjectRelease();
      uint64_t v171 = OUTLINED_FUNCTION_9_6();
      v172(v171);
      OUTLINED_FUNCTION_30_7((uint64_t)&v261);
      goto LABEL_35;
    case 11:
      LOBYTE(v274) = 11;
      sub_256CA6A04();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB03E0();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v173 = OUTLINED_FUNCTION_3_8();
      v174(v173);
      swift_unknownObjectRelease();
      uint64_t v175 = OUTLINED_FUNCTION_9_6();
      v176(v175);
      OUTLINED_FUNCTION_30_7((uint64_t)v262);
      goto LABEL_35;
    case 12:
      LOBYTE(v274) = 12;
      sub_256CA696C();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB0394();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v177 = OUTLINED_FUNCTION_3_8();
      v178(v177);
      swift_unknownObjectRelease();
      uint64_t v179 = OUTLINED_FUNCTION_9_6();
      v180(v179);
      uint64_t SessionRequest = (uint64_t)v235;
      _OWORD *v235 = v274;
      OUTLINED_FUNCTION_42_5();
      goto LABEL_35;
    case 13:
      LOBYTE(v274) = 13;
      sub_256CA68D4();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB0348();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v181 = OUTLINED_FUNCTION_3_8();
      v182(v181);
      swift_unknownObjectRelease();
      uint64_t v183 = OUTLINED_FUNCTION_9_6();
      v184(v183);
      uint64_t v185 = *((void *)&v274 + 1);
      char v186 = v275[0];
      uint64_t SessionRequest = (uint64_t)v236;
      void *v236 = v274;
      *(void *)(SessionRequest + 8) = v185;
      *(unsigned char *)(SessionRequest + 16) = v186;
      OUTLINED_FUNCTION_42_5();
      goto LABEL_35;
    case 14:
      LOBYTE(v274) = 14;
      sub_256CA683C();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB02FC();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v187 = OUTLINED_FUNCTION_3_8();
      v188(v187);
      swift_unknownObjectRelease();
      uint64_t v189 = OUTLINED_FUNCTION_9_6();
      v190(v189);
      uint64_t v191 = *((void *)&v274 + 1);
      uint64_t SessionRequest = (uint64_t)v237;
      void *v237 = v274;
      *(void *)(SessionRequest + 8) = v191;
      OUTLINED_FUNCTION_42_5();
      goto LABEL_35;
    case 15:
      LOBYTE(v274) = 15;
      sub_256CA67A4();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB02B0();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v192 = OUTLINED_FUNCTION_3_8();
      v193(v192);
      swift_unknownObjectRelease();
      uint64_t v194 = OUTLINED_FUNCTION_9_6();
      v195(v194);
      OUTLINED_FUNCTION_30_7((uint64_t)&v263);
      goto LABEL_35;
    case 16:
      LOBYTE(v274) = 16;
      sub_256CA670C();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB0264();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v196 = OUTLINED_FUNCTION_3_8();
      v197(v196);
      swift_unknownObjectRelease();
      uint64_t v198 = OUTLINED_FUNCTION_9_6();
      v199(v198);
      OUTLINED_FUNCTION_30_7((uint64_t)&v264);
      goto LABEL_35;
    case 17:
      LOBYTE(v274) = 17;
      sub_256CA6628();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      uint64_t SessionRequest = type metadata accessor for ModelXPCRequest.FetchModelInstance(0);
      sub_256CA6674(&qword_269FC4FB8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.FetchModelInstance);
      OUTLINED_FUNCTION_75_2();
      OUTLINED_FUNCTION_28_9();
      OUTLINED_FUNCTION_38_6();
      uint64_t v200 = OUTLINED_FUNCTION_3_8();
      v201(v200);
      swift_unknownObjectRelease();
      uint64_t v202 = OUTLINED_FUNCTION_9_6();
      v203(v202);
      OUTLINED_FUNCTION_30_7((uint64_t)&v276);
      goto LABEL_35;
    case 18:
      LOBYTE(v274) = 18;
      sub_256CA653C();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      sub_256CB0218();
      OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_38_6();
      uint64_t v214 = OUTLINED_FUNCTION_3_8();
      v215(v214);
      swift_unknownObjectRelease();
      uint64_t v216 = OUTLINED_FUNCTION_9_6();
      v217(v216);
      OUTLINED_FUNCTION_30_7((uint64_t)v265);
      goto LABEL_35;
    case 19:
      LOBYTE(v274) = 19;
      sub_256CA64F0();
      OUTLINED_FUNCTION_5_8();
      OUTLINED_FUNCTION_37_8();
      uint64_t SessionRequest = type metadata accessor for ModelXPCRequest.StartMonitoringInferences(0);
      sub_256CA6674(&qword_26B2C54A8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.StartMonitoringInferences);
      OUTLINED_FUNCTION_75_2();
      sub_256CEE4D8();
      OUTLINED_FUNCTION_38_6();
      if (v130)
      {
        OUTLINED_FUNCTION_8_5();
        v208();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(SessionRequest + 8))(v123, v125);
      }
      else
      {
        OUTLINED_FUNCTION_8_5();
        v224();
        swift_unknownObjectRelease();
        uint64_t v225 = OUTLINED_FUNCTION_9_6();
        v226(v225);
        OUTLINED_FUNCTION_30_7((uint64_t)&a9);
LABEL_35:
        swift_storeEnumTagMultiPayload();
        uint64_t v213 = SessionRequest;
LABEL_36:
        uint64_t v221 = (uint64_t)v273;
        sub_256CA65D4(v213, (uint64_t)v273, (void (*)(void))type metadata accessor for ModelXPCRequest);
LABEL_37:
        sub_256CA65D4(v221, v266, (void (*)(void))type metadata accessor for ModelXPCRequest);
      }
      break;
    default:
      LOBYTE(v274) = 0;
      sub_256CA6E78();
      OUTLINED_FUNCTION_5_8();
      type metadata accessor for ModelXPCRequest.ExecuteRequest(0);
      sub_256CA6674(&qword_269FC5008, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest);
      uint64_t v205 = (uint64_t)v229;
      sub_256CEE4D8();
      OUTLINED_FUNCTION_38_6();
      OUTLINED_FUNCTION_50();
      v218();
      swift_unknownObjectRelease();
      uint64_t v219 = OUTLINED_FUNCTION_9_6();
      v220(v219);
      swift_storeEnumTagMultiPayload();
      uint64_t v221 = (uint64_t)v273;
      sub_256CA65D4(v205, (uint64_t)v273, (void (*)(void))type metadata accessor for ModelXPCRequest);
      uint64_t v128 = (uint64_t)v272;
      goto LABEL_37;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1Tm(v128);
  OUTLINED_FUNCTION_114_2();
  OUTLINED_FUNCTION_33();
}

#error "256CA8A54: call analysis failed (funcsize=6)"

void sub_256CA8A60()
{
}

uint64_t static ModelXPCResult<>.== infix(_:_:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  v43[2] = a5;
  v43[3] = a6;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  OUTLINED_FUNCTION_5();
  v43[6] = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_80_3(v10, v43[0]);
  OUTLINED_FUNCTION_5();
  v43[5] = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_0();
  v43[0] = v13;
  uint64_t v44 = v14;
  type metadata accessor for ModelXPCResult();
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_89_3();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v43 - v19;
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_0();
  v43[4] = v21;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v43 + *(int *)(v23 + 48) - v24;
  uint64_t v26 = *(void (**)(uint64_t))(v16 + 16);
  OUTLINED_FUNCTION_64_4();
  v26(v27);
  OUTLINED_FUNCTION_64_4();
  v26(v28);
  OUTLINED_FUNCTION_25_2();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_64_4();
    v26(v29);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = v44;
      OUTLINED_FUNCTION_33_3();
      v32(v31);
      sub_256CEDF28();
      uint64_t v33 = OUTLINED_FUNCTION_74_2();
      v30(v33);
      ((void (*)(uint64_t, void (*)(uint64_t)))v30)(v6, v30);
      goto LABEL_9;
    }
LABEL_6:
    OUTLINED_FUNCTION_50();
    v36(v35);
    LOBYTE(v25) = 0;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_64_4();
  v26(v34);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_123_2();
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_33_3();
  v38(v37);
  sub_256CEDF28();
  uint64_t v39 = OUTLINED_FUNCTION_74_2();
  a3(v39);
  ((void (*)(char *, void (*)(uint64_t)))a3)(v20, a3);
LABEL_9:
  uint64_t v40 = OUTLINED_FUNCTION_93_2();
  v41(v40);
  return v25 & 1;
}

uint64_t sub_256CA8D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ModelXPCResult<>.== infix(_:_:)(a1, a2, *(void (**)(uint64_t))(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8), *(void *)(a4 - 16));
}

void ModelXPCResult<>.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v23 = v2;
  uint64_t v24 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v22 = v8;
  uint64_t v25 = v9;
  uint64_t v10 = type metadata accessor for ModelXPCResult();
  OUTLINED_FUNCTION_0_0();
  v21[4] = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_6();
  uint64_t v15 = v13 - v14;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_89_3();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v21 - v18;
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  sub_256CEE828();
  if (!v0)
  {
    v21[2] = v1;
    v21[3] = v15;
    v21[1] = v19;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v26, v27);
    uint64_t v20 = (void (*)(void))sub_256CEE658();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v26, v27);
    OUTLINED_FUNCTION_121_1();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_70_4();
    OUTLINED_FUNCTION_33_3();
    v20();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
    ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v22, v5, v10);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_33();
}

void ModelXPCResult<>.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v5 = v4;
  uint64_t v23 = *(void *)(v4 + 24);
  OUTLINED_FUNCTION_5();
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_82_4(v8, v19);
  uint64_t v10 = *(void *)(v9 + 16);
  OUTLINED_FUNCTION_5();
  uint64_t v20 = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_5();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_29();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  OUTLINED_FUNCTION_25_2();
  sub_256CEE858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v2, v0, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_33_3();
    v17();
    OUTLINED_FUNCTION_103_1();
    sub_256CEE688();
    if (!v1)
    {
      OUTLINED_FUNCTION_103_1();
      sub_256CEE698();
    }
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  else
  {
    OUTLINED_FUNCTION_33_3();
    v18();
    OUTLINED_FUNCTION_103_1();
    sub_256CEE688();
    if (!v1)
    {
      OUTLINED_FUNCTION_103_1();
      sub_256CEE698();
    }
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v3, v10);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
  OUTLINED_FUNCTION_114_2();
  OUTLINED_FUNCTION_33();
}

void sub_256CA9208()
{
}

void sub_256CA9234()
{
}

uint64_t ModelXPCRequest.CreateSessionRequest.metadata.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_73_3();
  return sub_256CB0528(v0, v1, (void (*)(void))type metadata accessor for Session.Metadata);
}

uint64_t ModelXPCRequest.CreateSessionRequest.alreadyLockedInferenceProvider.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_94_2();
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ModelXPCRequest.CreateSessionRequest(v2) + 20);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)uint64_t v0 = *(void *)v3;
  *(void *)(v0 + 8) = v5;
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v7;
  *(unsigned char *)(v0 + 32) = *(unsigned char *)(v3 + 32);
  return sub_256C5BFF8(v4, v5);
}

uint64_t ModelXPCRequest.CreateSessionRequest.Response.init(sessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256C5FC70(a1, a2, qword_26B2C5B70);
}

uint64_t sub_256CA92FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CA938C()
{
  return 0x496E6F6973736573;
}

uint64_t sub_256CA93AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CA92FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CA93D8(uint64_t a1)
{
  unint64_t v2 = sub_256CB057C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA9414(uint64_t a1)
{
  unint64_t v2 = sub_256CB057C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.CreateSessionRequest.Response.encode(to:)()
{
}

void ModelXPCRequest.CreateSessionRequest.Response.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v2);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16_0(v4, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5080);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_12_0();
  uint64_t Session = type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response(v6);
  uint64_t v8 = OUTLINED_FUNCTION_21(Session);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_34_5();
  sub_256CB057C();
  OUTLINED_FUNCTION_32_6();
  if (!v1)
  {
    sub_256C90080(&qword_26B2C7768, qword_26B2C5B70);
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_50();
    uint64_t v10 = v9();
    uint64_t v12 = OUTLINED_FUNCTION_72_4(v10, v11, qword_26B2C5B70);
    OUTLINED_FUNCTION_77_2(v12, v13, (void (*)(void))type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256CA9614()
{
}

void sub_256CA962C()
{
}

uint64_t ModelXPCRequest.CreateSessionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.CreateSessionRequest, a1);
}

uint64_t sub_256CA9660(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000256D01870)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256CA9748(char a1)
{
  if (a1) {
    return 0xD00000000000001ELL;
  }
  else {
    return 0x617461646174656DLL;
  }
}

uint64_t sub_256CA9784()
{
  return sub_256CA9748(*v0);
}

uint64_t sub_256CA978C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CA9660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CA97B4(uint64_t a1)
{
  unint64_t v2 = sub_256CB05E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA97F0(uint64_t a1)
{
  unint64_t v2 = sub_256CB05E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.CreateSessionRequest.encode(to:)()
{
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C50A0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB05E8();
  OUTLINED_FUNCTION_30_4();
  type metadata accessor for Session.Metadata(0);
  sub_256CA6674(&qword_26B2C5050, (void (*)(uint64_t))type metadata accessor for Session.Metadata);
  OUTLINED_FUNCTION_19_0();
  if (!v1)
  {
    type metadata accessor for ModelXPCRequest.CreateSessionRequest(0);
    sub_256C158A8();
    sub_256CEE558();
  }
  OUTLINED_FUNCTION_21_10();
  v3();
  OUTLINED_FUNCTION_63_6();
}

void ModelXPCRequest.CreateSessionRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v2 = v1;
  v18[0] = v3;
  type metadata accessor for Session.Metadata(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_0();
  uint64_t v19 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C55B8);
  OUTLINED_FUNCTION_0_0();
  v18[1] = v7;
  v18[2] = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = OUTLINED_FUNCTION_12_0();
  uint64_t SessionRequest = type metadata accessor for ModelXPCRequest.CreateSessionRequest(v8);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256CB05E8();
  OUTLINED_FUNCTION_87_3();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    LOBYTE(v20) = 0;
    sub_256CA6674(&qword_26B2C5500, (void (*)(uint64_t))type metadata accessor for Session.Metadata);
    OUTLINED_FUNCTION_92_0();
    sub_256CA65D4(v19, (uint64_t)v12, (void (*)(void))type metadata accessor for Session.Metadata);
    sub_256C15B4C();
    OUTLINED_FUNCTION_91_3();
    sub_256CEE488();
    uint64_t v13 = OUTLINED_FUNCTION_84_3();
    v14(v13);
    char v15 = v22;
    uint64_t v16 = &v12[*(int *)(SessionRequest + 20)];
    long long v17 = v21;
    *(_OWORD *)uint64_t v16 = v20;
    *((_OWORD *)v16 + 1) = v17;
    v16[32] = v15;
    sub_256CB0528((uint64_t)v12, v18[0], (void (*)(void))type metadata accessor for ModelXPCRequest.CreateSessionRequest);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    sub_256CA66BC();
  }
  OUTLINED_FUNCTION_33();
}

void sub_256CA9C1C()
{
}

void sub_256CA9C34()
{
}

uint64_t sub_256CA9C50(uint64_t a1)
{
  unint64_t v2 = sub_256CB0634();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA9C8C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0634();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.DeleteSessionRequest.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.DeleteSessionRequest.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

uint64_t sub_256CA9D24(uint64_t a1)
{
  return ModelXPCRequest.CancelRequest.Response.init(from:)(a1);
}

void sub_256CA9D3C()
{
}

uint64_t ModelXPCRequest.DeleteSessionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.DeleteSessionRequest, a1);
}

uint64_t sub_256CA9D74(uint64_t a1)
{
  unint64_t v2 = sub_256CB0680();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CA9DB0(uint64_t a1)
{
  unint64_t v2 = sub_256CB0680();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.DeleteSessionRequest.encode(to:)()
{
}

void sub_256CA9E28()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_66_1();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_29();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v3();
  sub_256CEE878();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  sub_256C90080(&qword_26B2C7980, qword_26B2C5B70);
  sub_256CEE5A8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.DeleteSessionRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v2);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16_0(v4, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5030);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_12_0();
  uint64_t v7 = type metadata accessor for ModelXPCRequest.DeleteSessionRequest(v6);
  uint64_t v8 = OUTLINED_FUNCTION_21(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_34_5();
  sub_256CB0680();
  OUTLINED_FUNCTION_32_6();
  if (!v1)
  {
    sub_256C90080(&qword_26B2C7768, qword_26B2C5B70);
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_50();
    uint64_t v10 = v9();
    uint64_t v12 = OUTLINED_FUNCTION_72_4(v10, v11, qword_26B2C5B70);
    OUTLINED_FUNCTION_77_2(v12, v13, (void (*)(void))type metadata accessor for ModelXPCRequest.DeleteSessionRequest);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256CAA0DC()
{
}

void sub_256CAA0F4()
{
}

uint64_t sub_256CAA110(uint64_t a1)
{
  unint64_t v2 = sub_256CB06CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAA14C(uint64_t a1)
{
  unint64_t v2 = sub_256CB06CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.PrewarmSession.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.PrewarmSession.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAA1E4()
{
}

uint64_t ModelXPCRequest.PrewarmSession.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.PrewarmSession, a1);
}

uint64_t sub_256CAA218()
{
  return 25705;
}

uint64_t sub_256CAA224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAC4EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAA250(uint64_t a1)
{
  unint64_t v2 = sub_256CB0718();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAA28C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0718();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.PrewarmSession.encode(to:)()
{
}

void ModelXPCRequest.PrewarmSession.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v2);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16_0(v4, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C55A8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_12_0();
  uint64_t v7 = type metadata accessor for ModelXPCRequest.PrewarmSession(v6);
  uint64_t v8 = OUTLINED_FUNCTION_21(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_34_5();
  sub_256CB0718();
  OUTLINED_FUNCTION_32_6();
  if (!v1)
  {
    sub_256C90080(&qword_26B2C7768, qword_26B2C5B70);
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_50();
    uint64_t v10 = v9();
    uint64_t v12 = OUTLINED_FUNCTION_72_4(v10, v11, qword_26B2C5B70);
    OUTLINED_FUNCTION_77_2(v12, v13, (void (*)(void))type metadata accessor for ModelXPCRequest.PrewarmSession);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256CAA490()
{
}

void sub_256CAA4A8()
{
}

uint64_t sub_256CAA4C4(uint64_t a1)
{
  unint64_t v2 = sub_256CB0764();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAA500(uint64_t a1)
{
  unint64_t v2 = sub_256CB0764();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.CancelSessionRequest.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.CancelSessionRequest.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAA598()
{
}

uint64_t ModelXPCRequest.CancelSessionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.CancelSessionRequest, a1);
}

uint64_t sub_256CAA5CC(uint64_t a1)
{
  unint64_t v2 = sub_256CB07B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAA608(uint64_t a1)
{
  unint64_t v2 = sub_256CB07B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.CancelSessionRequest.encode(to:)()
{
}

void ModelXPCRequest.CancelSessionRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v2);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16_0(v4, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C55B0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_12_0();
  uint64_t v7 = type metadata accessor for ModelXPCRequest.CancelSessionRequest(v6);
  uint64_t v8 = OUTLINED_FUNCTION_21(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_34_5();
  sub_256CB07B0();
  OUTLINED_FUNCTION_32_6();
  if (!v1)
  {
    sub_256C90080(&qword_26B2C7768, qword_26B2C5B70);
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_50();
    uint64_t v10 = v9();
    uint64_t v12 = OUTLINED_FUNCTION_72_4(v10, v11, qword_26B2C5B70);
    OUTLINED_FUNCTION_77_2(v12, v13, (void (*)(void))type metadata accessor for ModelXPCRequest.CancelSessionRequest);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256CAA80C()
{
}

void sub_256CAA824()
{
}

uint64_t ModelXPCRequest.ExecuteRequest.modelBundleID.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t ModelXPCRequest.ExecuteRequest.taskPriority.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ModelXPCRequest.ExecuteRequest.metadata.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_94_2();
  uint64_t v3 = type metadata accessor for ModelXPCRequest.ExecuteRequest(v2);
  return sub_256CB0528(v1 + *(int *)(v3 + 24), v0, (void (*)(void))type metadata accessor for RequestMetadata);
}

uint64_t ModelXPCRequest.ExecuteRequest.Response.result.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_73_3();
  return sub_256CB0528(v0, v1, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
}

uint64_t ModelXPCRequest.ExecuteRequest.Response.lockedInferenceProvider.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_94_2();
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(v2) + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v7 = v3[2];
  uint64_t v6 = v3[3];
  LOBYTE(v3) = *((unsigned char *)v3 + 32);
  *(void *)uint64_t v0 = v4;
  *(void *)(v0 + 8) = v5;
  *(void *)(v0 + 16) = v7;
  *(void *)(v0 + 24) = v6;
  *(unsigned char *)(v0 + 32) = (_BYTE)v3;
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

__n128 ModelXPCRequest.ExecuteRequest.Response.init(result:lockedInferenceProvider:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v9 = *a2;
  unint64_t v4 = a2[1].n128_u64[0];
  unint64_t v5 = a2[1].n128_u64[1];
  unsigned __int8 v6 = a2[2].n128_u8[0];
  sub_256CA65D4(a1, a3, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
  uint64_t v7 = (__n128 *)(a3 + *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(0) + 20));
  __n128 result = v9;
  *uint64_t v7 = v9;
  v7[1].n128_u64[0] = v4;
  v7[1].n128_u64[1] = v5;
  v7[2].n128_u8[0] = v6;
  return result;
}

uint64_t sub_256CAA9B8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000256D01890)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256CAAA98(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0x746C75736572;
  }
}

uint64_t sub_256CAAAD0()
{
  return sub_256CAAA98(*v0);
}

uint64_t sub_256CAAAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAA9B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CAAB00(uint64_t a1)
{
  unint64_t v2 = sub_256CB081C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAAB3C(uint64_t a1)
{
  unint64_t v2 = sub_256CB081C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.ExecuteRequest.Response.encode(to:)()
{
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5038);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB081C();
  OUTLINED_FUNCTION_30_4();
  type metadata accessor for InferenceProviderRequestResult(0);
  sub_256CA6674(&qword_269FC4050, (void (*)(uint64_t))type metadata accessor for InferenceProviderRequestResult);
  OUTLINED_FUNCTION_19_0();
  if (!v1)
  {
    type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(0);
    sub_256C158A8();
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_21_10();
  v3();
  OUTLINED_FUNCTION_63_6();
}

void ModelXPCRequest.ExecuteRequest.Response.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v2 = v1;
  uint64_t v19 = v3;
  type metadata accessor for InferenceProviderRequestResult(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_0();
  uint64_t v22 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5048);
  OUTLINED_FUNCTION_0_0();
  uint64_t v20 = v7;
  uint64_t v21 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = OUTLINED_FUNCTION_12_0();
  uint64_t v9 = type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(v8);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256CB081C();
  OUTLINED_FUNCTION_87_3();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    LOBYTE(v23) = 0;
    sub_256CA6674(&qword_269FC4048, (void (*)(uint64_t))type metadata accessor for InferenceProviderRequestResult);
    OUTLINED_FUNCTION_92_0();
    sub_256CA65D4(v22, (uint64_t)v12, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
    sub_256C15B4C();
    OUTLINED_FUNCTION_91_3();
    sub_256CEE4D8();
    uint64_t v13 = OUTLINED_FUNCTION_84_3();
    v14(v13);
    uint64_t v15 = v24;
    char v16 = v26;
    long long v17 = &v12[*(int *)(v9 + 20)];
    *(void *)long long v17 = v23;
    *((void *)v17 + 1) = v15;
    *((_OWORD *)v17 + 1) = v25;
    v17[32] = v16;
    sub_256CB0528((uint64_t)v12, v19, (void (*)(void))type metadata accessor for ModelXPCRequest.ExecuteRequest.Response);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    sub_256CA66BC();
  }
  OUTLINED_FUNCTION_33();
}

void sub_256CAAF6C()
{
}

void sub_256CAAF84()
{
}

uint64_t ModelXPCRequest.ExecuteRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.ExecuteRequest, a1);
}

uint64_t sub_256CAAFB8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E75426C65646F6DLL && a2 == 0xED00004449656C64;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F6972506B736174 && a2 == 0xEC00000079746972;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_256CEE6C8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_256CAB120(char a1)
{
  return *(void *)&aModelbuntaskpr[8 * a1];
}

uint64_t sub_256CAB140()
{
  return sub_256CAB120(*v0);
}

uint64_t sub_256CAB148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAAFB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CAB170(uint64_t a1)
{
  unint64_t v2 = sub_256CB0868();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAB1AC(uint64_t a1)
{
  unint64_t v2 = sub_256CB0868();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.ExecuteRequest.encode(to:)()
{
  OUTLINED_FUNCTION_69_4();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5050);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_25_8(v2);
  sub_256CB0868();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_42_1();
  sub_256CEE568();
  if (!v0)
  {
    OUTLINED_FUNCTION_42_1();
    sub_256CEE5C8();
    type metadata accessor for ModelXPCRequest.ExecuteRequest(0);
    type metadata accessor for RequestMetadata(0);
    sub_256CA6674(&qword_269FC5060, (void (*)(uint64_t))type metadata accessor for RequestMetadata);
    OUTLINED_FUNCTION_42_1();
    sub_256CEE5A8();
  }
  OUTLINED_FUNCTION_21_10();
  v4();
  OUTLINED_FUNCTION_63_6();
}

void ModelXPCRequest.ExecuteRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v4 = v3;
  uint64_t v13 = v5;
  type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5068);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_54_0();
  uint64_t v9 = type metadata accessor for ModelXPCRequest.ExecuteRequest(v8);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_29();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_256CB0868();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    *(void *)uint64_t v2 = sub_256CEE498();
    *(void *)(v2 + 8) = v11;
    OUTLINED_FUNCTION_122_1();
    *(unsigned char *)(v2 + 16) = sub_256CEE4F8();
    sub_256CA6674(&qword_269FC5070, (void (*)(uint64_t))type metadata accessor for RequestMetadata);
    sub_256CEE4D8();
    OUTLINED_FUNCTION_45();
    v12();
    sub_256CA65D4(v1, v2 + *(int *)(v9 + 24), (void (*)(void))type metadata accessor for RequestMetadata);
    sub_256CB0528(v2, v13, (void (*)(void))type metadata accessor for ModelXPCRequest.ExecuteRequest);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    sub_256CA66BC();
  }
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_33();
}

void sub_256CAB634()
{
}

void sub_256CAB64C()
{
}

uint64_t ModelXPCRequest.CancelRequest.id.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_73_3();
  return sub_256BFD41C(v0, v1, &qword_26B2C7798);
}

uint64_t ModelXPCRequest.CancelRequest.sessionID.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_94_2();
  uint64_t v3 = type metadata accessor for ModelXPCRequest.CancelRequest(v2);
  return sub_256BFD41C(v1 + *(int *)(v3 + 20), v0, qword_26B2C5B70);
}

uint64_t sub_256CAB6C8(uint64_t a1)
{
  unint64_t v2 = sub_256CB08B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAB704(uint64_t a1)
{
  unint64_t v2 = sub_256CB08B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.CancelRequest.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.CancelRequest.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAB79C()
{
}

uint64_t ModelXPCRequest.CancelRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.CancelRequest, a1);
}

uint64_t sub_256CAB7D0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256CAB8A8(char a1)
{
  if (a1) {
    return 0x496E6F6973736573;
  }
  else {
    return 25705;
  }
}

uint64_t sub_256CAB8D8()
{
  return sub_256CAB8A8(*v0);
}

uint64_t sub_256CAB8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAB7D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CAB908(uint64_t a1)
{
  unint64_t v2 = sub_256CB0900();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAB944(uint64_t a1)
{
  unint64_t v2 = sub_256CB0900();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.CancelRequest.encode(to:)()
{
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5088);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB0900();
  OUTLINED_FUNCTION_30_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  sub_256C90080(&qword_26B2C54B8, &qword_26B2C7798);
  OUTLINED_FUNCTION_19_0();
  if (!v1)
  {
    type metadata accessor for ModelXPCRequest.CancelRequest(0);
    OUTLINED_FUNCTION_122_1();
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    sub_256C90080(&qword_26B2C7980, qword_26B2C5B70);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_21_10();
  v3();
  OUTLINED_FUNCTION_63_6();
}

void ModelXPCRequest.CancelRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v3 = v2;
  uint64_t v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_3_0();
  uint64_t v15 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  uint64_t v16 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5098);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_54_0();
  uint64_t v11 = type metadata accessor for ModelXPCRequest.CancelRequest(v10);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_16_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256CB0900();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  }
  else
  {
    sub_256C90080(&qword_26B2C4EF8, &qword_26B2C7798);
    sub_256CEE4D8();
    sub_256C5FC70(v16, v1, &qword_26B2C7798);
    OUTLINED_FUNCTION_122_1();
    sub_256C90080(&qword_26B2C7768, qword_26B2C5B70);
    sub_256CEE4D8();
    OUTLINED_FUNCTION_45();
    v13();
    sub_256C5FC70(v15, v1 + *(int *)(v11 + 20), qword_26B2C5B70);
    sub_256CB0528(v1, v14, (void (*)(void))type metadata accessor for ModelXPCRequest.CancelRequest);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    sub_256CA66BC();
  }
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_33();
}

void sub_256CABE0C()
{
}

void sub_256CABE24()
{
}

uint64_t ModelXPCRequest.AcquireRequest.assertion.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_73_3();
  return sub_256CB0528(v0, v1, (void (*)(void))type metadata accessor for Assertion.DaemonRep);
}

uint64_t sub_256CABE70(uint64_t a1)
{
  unint64_t v2 = sub_256CB09AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CABEAC(uint64_t a1)
{
  unint64_t v2 = sub_256CB09AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.AcquireRequest.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.AcquireRequest.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CABF44()
{
}

uint64_t ModelXPCRequest.AcquireRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.AcquireRequest, a1);
}

uint64_t sub_256CABF78(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F69747265737361 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CAC008()
{
  return 0x6F69747265737361;
}

uint64_t sub_256CAC028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CABF78(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAC054(uint64_t a1)
{
  unint64_t v2 = sub_256CB09F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAC090(uint64_t a1)
{
  unint64_t v2 = sub_256CB09F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.AcquireRequest.encode(to:)()
{
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8350);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB09F8();
  OUTLINED_FUNCTION_23_4();
  type metadata accessor for Assertion.DaemonRep(0);
  sub_256CA6674((unint64_t *)&unk_26B2C8640, (void (*)(uint64_t))type metadata accessor for Assertion.DaemonRep);
  OUTLINED_FUNCTION_43_5();
  uint64_t v2 = OUTLINED_FUNCTION_12_9();
  v3(v2);
  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_63_6();
}

void ModelXPCRequest.AcquireRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v14 = OUTLINED_FUNCTION_115_2(v13);
  type metadata accessor for Assertion.DaemonRep(v14);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_16_0(v16, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BA0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = OUTLINED_FUNCTION_18_4();
  uint64_t v19 = type metadata accessor for ModelXPCRequest.AcquireRequest(v18);
  uint64_t v20 = OUTLINED_FUNCTION_21(v19);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_34_5();
  sub_256CB09F8();
  OUTLINED_FUNCTION_116_1();
  sub_256CEE848();
  if (!v11)
  {
    sub_256CA6674(&qword_26B2C4900, (void (*)(uint64_t))type metadata accessor for Assertion.DaemonRep);
    sub_256CEE4D8();
    OUTLINED_FUNCTION_50();
    v21();
    sub_256CA65D4(a10, v12, (void (*)(void))type metadata accessor for Assertion.DaemonRep);
    sub_256CA65D4(v12, v23, (void (*)(void))type metadata accessor for ModelXPCRequest.AcquireRequest);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v10);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256CAC38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ModelXPCRequest.AcquireRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_256CAC3A4()
{
}

uint64_t ModelXPCRequest.ReleaseRequest.id.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_73_3();
  return sub_256BFD41C(v0, v1, (uint64_t *)&unk_26B2C8608);
}

uint64_t sub_256CAC3E4(uint64_t a1)
{
  unint64_t v2 = sub_256CB0A44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAC420(uint64_t a1)
{
  unint64_t v2 = sub_256CB0A44();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.ReleaseRequest.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.ReleaseRequest.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAC4B8()
{
}

uint64_t ModelXPCRequest.ReleaseRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.ReleaseRequest, a1);
}

uint64_t sub_256CAC4EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_110_2();
    OUTLINED_FUNCTION_109_2();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CAC54C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0A90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAC588(uint64_t a1)
{
  unint64_t v2 = sub_256CB0A90();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.ReleaseRequest.encode(to:)()
{
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7E00);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB0A90();
  OUTLINED_FUNCTION_23_4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  sub_256C90080((unint64_t *)&unk_26B2C8268, (uint64_t *)&unk_26B2C8608);
  sub_256CEE5A8();
  uint64_t v2 = OUTLINED_FUNCTION_12_9();
  v3(v2);
  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_63_6();
}

void ModelXPCRequest.ReleaseRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16_0(v4, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4BA8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_12_0();
  uint64_t v7 = type metadata accessor for ModelXPCRequest.ReleaseRequest(v6);
  uint64_t v8 = OUTLINED_FUNCTION_21(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_34_5();
  sub_256CB0A90();
  OUTLINED_FUNCTION_32_6();
  if (!v1)
  {
    sub_256C90080(&qword_26B2C4898, (uint64_t *)&unk_26B2C8608);
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_50();
    uint64_t v10 = v9();
    uint64_t v12 = OUTLINED_FUNCTION_72_4(v10, v11, (uint64_t *)&unk_26B2C8608);
    OUTLINED_FUNCTION_77_2(v12, v13, (void (*)(void))type metadata accessor for ModelXPCRequest.ReleaseRequest);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256CAC858()
{
}

void sub_256CAC870()
{
}

uint64_t sub_256CAC888()
{
  return 0x6F69747265737361;
}

uint64_t sub_256CAC8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CACD9C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAC8D4(uint64_t a1)
{
  unint64_t v2 = sub_256CB0ADC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAC910(uint64_t a1)
{
  unint64_t v2 = sub_256CB0ADC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchAssertionsRequest.Response.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_71_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC50A0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB0ADC();
  OUTLINED_FUNCTION_23_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B28);
  sub_256C16A40();
  OUTLINED_FUNCTION_41_7();
  uint64_t v2 = OUTLINED_FUNCTION_12_9();
  v3(v2);
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.FetchAssertionsRequest.Response.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_49_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC50B0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_15_9();
  sub_256CB0ADC();
  OUTLINED_FUNCTION_34_8();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B28);
    sub_256C16E20();
    OUTLINED_FUNCTION_36_6();
    uint64_t v3 = OUTLINED_FUNCTION_20_2();
    v4(v3);
    OUTLINED_FUNCTION_102_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_33();
}

void sub_256CACAF8()
{
}

void sub_256CACB10()
{
}

uint64_t ModelXPCRequest.FetchAssertionsRequest.request.getter()
{
  OUTLINED_FUNCTION_27_10();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CACB60(uint64_t a1)
{
  unint64_t v2 = sub_256CB0B28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CACB9C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0B28();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchAssertionsRequest.encode(to:)()
{
}

uint64_t ModelXPCRequest.FetchAssertionsRequest.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

uint64_t sub_256CACC34()
{
  return ModelXPCRequest.FetchAssertionsRequest.request.getter();
}

void sub_256CACC4C()
{
}

uint64_t sub_256CACC68(uint64_t a1)
{
  unint64_t v2 = sub_256CB0B74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CACCA4(uint64_t a1)
{
  unint64_t v2 = sub_256CB0B74();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.RestoreAssertionsRequest.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.RestoreAssertionsRequest.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CACD3C()
{
}

uint64_t ModelXPCRequest.RestoreAssertionsRequest.request.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  OUTLINED_FUNCTION_27_10();
  swift_storeEnumTagMultiPayload();
  return sub_256CEDEC8();
}

uint64_t sub_256CACD9C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F69747265737361 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_110_2();
    OUTLINED_FUNCTION_109_2();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CACE1C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0BC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CACE58(uint64_t a1)
{
  unint64_t v2 = sub_256CB0BC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.RestoreAssertionsRequest.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_71_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC50D8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB0BC0();
  OUTLINED_FUNCTION_23_4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C59F0);
  sub_256CB0C0C();
  OUTLINED_FUNCTION_41_7();
  uint64_t v2 = OUTLINED_FUNCTION_12_9();
  v3(v2);
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.RestoreAssertionsRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_49_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC50E8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_15_9();
  sub_256CB0BC0();
  OUTLINED_FUNCTION_34_8();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C59F0);
    sub_256CB0CB0();
    OUTLINED_FUNCTION_36_6();
    uint64_t v3 = OUTLINED_FUNCTION_20_2();
    v4(v3);
    OUTLINED_FUNCTION_102_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_33();
}

void sub_256CAD044()
{
}

void sub_256CAD05C()
{
}

uint64_t ModelXPCRequest.FetchAssetsRequest.Response.assetInfo.getter()
{
  return sub_256CEDEC8();
}

ModelManagerServices::ModelXPCRequest::FetchAssetsRequest::Response __swiftcall ModelXPCRequest.FetchAssetsRequest.Response.init(assetInfo:)(ModelManagerServices::ModelXPCRequest::FetchAssetsRequest::Response assetInfo)
{
  v1->assetInfo._rawValue = assetInfo.assetInfo._rawValue;
  return assetInfo;
}

uint64_t sub_256CAD084()
{
  return 0x666E497465737361;
}

uint64_t sub_256CAD0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAD460(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAD0D0(uint64_t a1)
{
  unint64_t v2 = sub_256CB0D54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAD10C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0D54();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchAssetsRequest.Response.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_71_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C50);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB0D54();
  OUTLINED_FUNCTION_23_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7E38);
  sub_256CB0DA0();
  OUTLINED_FUNCTION_41_7();
  uint64_t v2 = OUTLINED_FUNCTION_12_9();
  v3(v2);
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.FetchAssetsRequest.Response.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_49_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B50);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_15_9();
  sub_256CB0D54();
  OUTLINED_FUNCTION_34_8();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7E38);
    sub_256CB0E44();
    OUTLINED_FUNCTION_36_6();
    uint64_t v3 = OUTLINED_FUNCTION_20_2();
    v4(v3);
    OUTLINED_FUNCTION_102_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_33();
}

void sub_256CAD2F4()
{
}

void sub_256CAD30C()
{
}

uint64_t ModelXPCRequest.FetchAssetsRequest.request.getter()
{
  OUTLINED_FUNCTION_27_10();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CAD35C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0EE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAD398(uint64_t a1)
{
  unint64_t v2 = sub_256CB0EE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchAssetsRequest.encode(to:)()
{
}

uint64_t ModelXPCRequest.FetchAssetsRequest.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

uint64_t sub_256CAD430()
{
  return ModelXPCRequest.FetchAssetsRequest.request.getter();
}

void sub_256CAD448()
{
}

uint64_t sub_256CAD460(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x666E497465737361 && a2 == 0xE90000000000006FLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_110_2();
    OUTLINED_FUNCTION_109_2();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CAD4E0(uint64_t a1)
{
  unint64_t v2 = sub_256CB0F34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAD51C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0F34();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchDynamicAssetsRequest.Response.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_71_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC50F0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB0F34();
  OUTLINED_FUNCTION_23_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7E38);
  sub_256CB0DA0();
  OUTLINED_FUNCTION_41_7();
  uint64_t v2 = OUTLINED_FUNCTION_12_9();
  v3(v2);
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.FetchDynamicAssetsRequest.Response.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_49_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5100);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_15_9();
  sub_256CB0F34();
  OUTLINED_FUNCTION_34_8();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7E38);
    sub_256CB0E44();
    OUTLINED_FUNCTION_36_6();
    uint64_t v3 = OUTLINED_FUNCTION_20_2();
    v4(v3);
    OUTLINED_FUNCTION_102_2();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_33();
}

void sub_256CAD704()
{
}

void sub_256CAD71C()
{
}

uint64_t ModelXPCRequest.FetchDynamicAssetsRequest.request.getter()
{
  OUTLINED_FUNCTION_27_10();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CAD76C(uint64_t a1)
{
  unint64_t v2 = sub_256CB0F80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAD7A8(uint64_t a1)
{
  unint64_t v2 = sub_256CB0F80();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchDynamicAssetsRequest.encode(to:)()
{
}

uint64_t ModelXPCRequest.FetchDynamicAssetsRequest.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

uint64_t sub_256CAD840()
{
  return ModelXPCRequest.FetchDynamicAssetsRequest.request.getter();
}

void sub_256CAD858()
{
}

uint64_t ModelXPCRequest.FetchPolicyRequest.policyName.getter()
{
  return OUTLINED_FUNCTION_28();
}

void ModelXPCRequest.FetchPolicyRequest.Response.policy.getter(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_111_2(a1, *v1, v1[1]);
}

void __swiftcall ModelXPCRequest.FetchPolicyRequest.Response.init(policy:)(ModelManagerServices::ModelXPCRequest::FetchPolicyRequest::Response *__return_ptr retstr, ModelManagerServices::Policy_optional *policy)
{
}

uint64_t sub_256CAD8AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7963696C6F70 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CAD92C()
{
  return 0x7963696C6F70;
}

uint64_t sub_256CAD944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAD8AC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAD970(uint64_t a1)
{
  unint64_t v2 = sub_256CB0FCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAD9AC(uint64_t a1)
{
  unint64_t v2 = sub_256CB0FCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchPolicyRequest.Response.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_71_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5118);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB0FCC();
  OUTLINED_FUNCTION_23_4();
  sub_256C16AE4();
  sub_256CEE558();
  uint64_t v2 = OUTLINED_FUNCTION_12_9();
  v3(v2);
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.FetchPolicyRequest.Response.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_88_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5128);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15_9();
  sub_256CB0FCC();
  OUTLINED_FUNCTION_52_5();
  if (!v2)
  {
    sub_256C16EC4();
    sub_256CEE488();
    OUTLINED_FUNCTION_29_6();
    v4();
    *(_OWORD *)uint64_t v1 = v5;
    *(_OWORD *)(v1 + 16) = v6;
    *(void *)(v1 + 32) = v7;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_33();
}

void sub_256CADBDC()
{
}

void sub_256CADBF4()
{
}

uint64_t ModelXPCRequest.FetchPolicyRequest.request.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_27_10();
  swift_storeEnumTagMultiPayload();
  return sub_256CEDEC8();
}

uint64_t sub_256CADC54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x614E7963696C6F70 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CADCE4()
{
  return 0x614E7963696C6F70;
}

uint64_t sub_256CADD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CADC54(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CADD30(uint64_t a1)
{
  unint64_t v2 = sub_256CB1018();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CADD6C(uint64_t a1)
{
  unint64_t v2 = sub_256CB1018();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchPolicyRequest.encode(to:)()
{
}

void ModelXPCRequest.FetchPolicyRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_49_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5140);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15_9();
  sub_256CB1018();
  OUTLINED_FUNCTION_34_8();
  if (!v1)
  {
    uint64_t v4 = sub_256CEE478();
    uint64_t v6 = v5;
    uint64_t v7 = OUTLINED_FUNCTION_20_2();
    v8(v7);
    *unint64_t v2 = v4;
    v2[1] = v6;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_33();
}

void sub_256CADEE4()
{
}

void sub_256CADEFC()
{
}

uint64_t ModelXPCRequest.LoadAssetBundle.assetBundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t ModelXPCRequest.LoadAssetBundle.dynamicMode.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_256CADF44(uint64_t a1)
{
  unint64_t v2 = sub_256CB1064();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CADF80(uint64_t a1)
{
  unint64_t v2 = sub_256CB1064();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.LoadAssetBundle.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.LoadAssetBundle.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAE018()
{
}

uint64_t ModelXPCRequest.LoadAssetBundle.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  OUTLINED_FUNCTION_27_10();
  swift_storeEnumTagMultiPayload();
  return sub_256CEDEC8();
}

uint64_t sub_256CAE088(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000256D001D0 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D63696D616E7964 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256CAE184(char a1)
{
  if (a1) {
    return 0x4D63696D616E7964;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_256CAE1C8()
{
  return sub_256CAE184(*v0);
}

uint64_t sub_256CAE1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAE088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CAE1F8(uint64_t a1)
{
  unint64_t v2 = sub_256CB10B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAE234(uint64_t a1)
{
  unint64_t v2 = sub_256CB10B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.LoadAssetBundle.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5158);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256CB10B0();
  sub_256CEE878();
  sub_256CEE568();
  if (!v0)
  {
    OUTLINED_FUNCTION_42_1();
    sub_256CEE578();
  }
  uint64_t v4 = OUTLINED_FUNCTION_93_2();
  v5(v4);
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.LoadAssetBundle.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5168);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15_9();
  sub_256CB10B0();
  OUTLINED_FUNCTION_52_5();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
  }
  else
  {
    uint64_t v6 = sub_256CEE498();
    uint64_t v8 = v7;
    OUTLINED_FUNCTION_122_1();
    sub_256CEDEC8();
    char v9 = sub_256CEE4A8();
    OUTLINED_FUNCTION_29_6();
    v10();
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v8;
    *(unsigned char *)(v4 + 16) = v9 & 1;
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_114_2();
  OUTLINED_FUNCTION_33();
}

void sub_256CAE508()
{
}

void sub_256CAE520()
{
}

uint64_t ModelXPCRequest.HoldAssetBundle.assetBundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t sub_256CAE560(uint64_t a1)
{
  unint64_t v2 = sub_256CB10FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAE59C(uint64_t a1)
{
  unint64_t v2 = sub_256CB10FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.HoldAssetBundle.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.HoldAssetBundle.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAE634()
{
}

uint64_t ModelXPCRequest.HoldAssetBundle.request.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_27_10();
  swift_storeEnumTagMultiPayload();
  return sub_256CEDEC8();
}

uint64_t sub_256CAE694(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000256D001D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_256CAE71C()
{
  return 0xD000000000000015;
}

uint64_t sub_256CAE73C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAE694(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAE768(uint64_t a1)
{
  unint64_t v2 = sub_256CB1148();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAE7A4(uint64_t a1)
{
  unint64_t v2 = sub_256CB1148();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.HoldAssetBundle.encode(to:)()
{
}

void sub_256CAE830()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v11 = v1;
  uint64_t v10 = v2;
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_28_2();
  uint64_t v5 = v0[1];
  uint64_t v9 = *v0;
  uint64_t v6 = (void *)OUTLINED_FUNCTION_112_2();
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v10();
  sub_256CEE878();
  v11(v9, v5);
  OUTLINED_FUNCTION_8_5();
  v8();
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.HoldAssetBundle.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_49_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5190);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15_9();
  sub_256CB1148();
  OUTLINED_FUNCTION_34_8();
  if (!v1)
  {
    uint64_t v4 = sub_256CEE498();
    uint64_t v6 = v5;
    uint64_t v7 = OUTLINED_FUNCTION_20_2();
    v8(v7);
    *unint64_t v2 = v4;
    v2[1] = v6;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_33();
}

void sub_256CAEA1C()
{
}

void sub_256CAEA34()
{
}

uint64_t sub_256CAEA50(uint64_t a1)
{
  unint64_t v2 = sub_256CB1194();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAEA8C(uint64_t a1)
{
  unint64_t v2 = sub_256CB1194();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.ForceAssetVersionSwitch.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.ForceAssetVersionSwitch.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAEB24()
{
}

uint64_t ModelXPCRequest.ForceAssetVersionSwitch.request.getter()
{
  OUTLINED_FUNCTION_27_10();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CAEB74(uint64_t a1)
{
  unint64_t v2 = sub_256CB11E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAEBB0(uint64_t a1)
{
  unint64_t v2 = sub_256CB11E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.ForceAssetVersionSwitch.encode(to:)()
{
}

uint64_t ModelXPCRequest.ForceAssetVersionSwitch.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

uint64_t sub_256CAEC48()
{
  return ModelXPCRequest.ForceAssetVersionSwitch.request.getter();
}

void sub_256CAEC60()
{
}

void *ModelXPCRequest.DumpState.Response.init(stateDump:)@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  return memcpy(a2, __src, 0x88uLL);
}

uint64_t sub_256CAEC88(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6D75446574617473 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CAED18()
{
  return 0x6D75446574617473;
}

uint64_t sub_256CAED38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAEC88(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAED64(uint64_t a1)
{
  unint64_t v2 = sub_256CB122C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAEDA0(uint64_t a1)
{
  unint64_t v2 = sub_256CB122C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.DumpState.Response.encode(to:)()
{
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C58);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB122C();
  OUTLINED_FUNCTION_23_4();
  memcpy(v5, v1, sizeof(v5));
  sub_256C169A8();
  sub_256CEE5A8();
  uint64_t v3 = OUTLINED_FUNCTION_12_9();
  v4(v3);
  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_63_6();
}

void ModelXPCRequest.DumpState.Response.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_88_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC51B8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15_9();
  sub_256CB122C();
  OUTLINED_FUNCTION_52_5();
  if (!v2)
  {
    sub_256CB1278();
    OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_29_6();
    v4();
    memcpy(v1, v5, 0x88uLL);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_33();
}

void sub_256CAEFC8()
{
}

void sub_256CAEFE0()
{
}

uint64_t ModelXPCRequest.DumpState.request.getter()
{
  OUTLINED_FUNCTION_27_10();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CAF030(uint64_t a1)
{
  unint64_t v2 = sub_256CB12C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAF06C(uint64_t a1)
{
  unint64_t v2 = sub_256CB12C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.DumpState.encode(to:)()
{
}

uint64_t ModelXPCRequest.DumpState.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

uint64_t sub_256CAF104()
{
  return ModelXPCRequest.DumpState.request.getter();
}

void sub_256CAF11C()
{
}

uint64_t ModelXPCRequest.FetchModelInstance.session.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_73_3();
  return sub_256BFD41C(v0, v1, qword_26B2C5B70);
}

uint64_t ModelXPCRequest.FetchModelInstance.Response.modelInstance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v9;
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

__n128 ModelXPCRequest.FetchModelInstance.Response.init(modelInstance:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 64);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  *(void *)(a2 + 32) = v3;
  *(void *)(a2 + 40) = v4;
  __n128 result = *(__n128 *)(a1 + 48);
  *(__n128 *)(a2 + 48) = result;
  *(unsigned char *)(a2 + 64) = v5;
  return result;
}

uint64_t sub_256CAF1F0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736E496C65646F6DLL && a2 == 0xED000065636E6174)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CAF290()
{
  return 0x736E496C65646F6DLL;
}

uint64_t sub_256CAF2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAF1F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAF2E4(uint64_t a1)
{
  unint64_t v2 = sub_256CB1310();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAF320(uint64_t a1)
{
  unint64_t v2 = sub_256CB1310();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchModelInstance.Response.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC51D8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_25_8(v1);
  sub_256CB1310();
  OUTLINED_FUNCTION_23_4();
  sub_256CB135C();
  sub_256CEE5A8();
  uint64_t v3 = OUTLINED_FUNCTION_12_9();
  v4(v3);
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_33();
}

void ModelXPCRequest.FetchModelInstance.Response.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_88_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC51F0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_15_9();
  sub_256CB1310();
  OUTLINED_FUNCTION_52_5();
  if (!v2)
  {
    sub_256CB13A8();
    OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_29_6();
    v4();
    *(_OWORD *)uint64_t v1 = v5;
    *(_OWORD *)(v1 + 16) = v6;
    *(void *)(v1 + 32) = v7;
    *(void *)(v1 + 40) = v8;
    *(_OWORD *)(v1 + 48) = v9;
    *(unsigned char *)(v1 + 64) = v10;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_33();
}

void sub_256CAF578()
{
}

void sub_256CAF590()
{
}

uint64_t ModelXPCRequest.FetchModelInstance.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.FetchModelInstance, a1);
}

uint64_t sub_256CAF5C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CAF64C()
{
  return 0x6E6F6973736573;
}

uint64_t sub_256CAF668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAF5C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAF694(uint64_t a1)
{
  unint64_t v2 = sub_256CB13F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAF6D0(uint64_t a1)
{
  unint64_t v2 = sub_256CB13F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.FetchModelInstance.encode(to:)()
{
}

void ModelXPCRequest.FetchModelInstance.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v2);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16_0(v4, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5210);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_12_0();
  uint64_t ModelInstance = type metadata accessor for ModelXPCRequest.FetchModelInstance(v6);
  uint64_t v8 = OUTLINED_FUNCTION_21(ModelInstance);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_34_5();
  sub_256CB13F4();
  OUTLINED_FUNCTION_32_6();
  if (!v1)
  {
    sub_256C90080(&qword_26B2C7768, qword_26B2C5B70);
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_50();
    uint64_t v10 = v9();
    uint64_t v12 = OUTLINED_FUNCTION_72_4(v10, v11, qword_26B2C5B70);
    OUTLINED_FUNCTION_77_2(v12, v13, (void (*)(void))type metadata accessor for ModelXPCRequest.FetchModelInstance);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256CAF8D4()
{
}

void sub_256CAF8EC()
{
}

uint64_t sub_256CAF908(uint64_t a1)
{
  unint64_t v2 = sub_256CB1440();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAF944(uint64_t a1)
{
  unint64_t v2 = sub_256CB1440();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.SetAssetsHaveUpdated.Response.encode(to:)()
{
}

uint64_t ModelXPCRequest.SetAssetsHaveUpdated.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAF9DC()
{
}

uint64_t ModelXPCRequest.SetAssetsHaveUpdated.request.getter()
{
  OUTLINED_FUNCTION_27_10();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CAFA2C(uint64_t a1)
{
  unint64_t v2 = sub_256CB148C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAFA68(uint64_t a1)
{
  unint64_t v2 = sub_256CB148C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.SetAssetsHaveUpdated.encode(to:)()
{
}

uint64_t ModelXPCRequest.SetAssetsHaveUpdated.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

uint64_t sub_256CAFB00()
{
  return ModelXPCRequest.SetAssetsHaveUpdated.request.getter();
}

void sub_256CAFB18()
{
}

uint64_t ModelXPCRequest.StartMonitoringInferences.endpoint.getter()
{
  OUTLINED_FUNCTION_94_2();
  sub_256CEDD58();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t sub_256CAFB8C(uint64_t a1)
{
  unint64_t v2 = sub_256CB14D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAFBC8(uint64_t a1)
{
  unint64_t v2 = sub_256CB14D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.StartMonitoringInferences.Response.encode(to:)()
{
}

void sub_256CAFC40()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  OUTLINED_FUNCTION_71_5();
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v4);
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v2();
  sub_256CEE878();
  OUTLINED_FUNCTION_112_2();
  OUTLINED_FUNCTION_8_5();
  v5();
  OUTLINED_FUNCTION_114_2();
  OUTLINED_FUNCTION_33();
}

uint64_t ModelXPCRequest.StartMonitoringInferences.Response.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_16_9(a1);
}

void sub_256CAFD38()
{
}

uint64_t ModelXPCRequest.StartMonitoringInferences.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256CAFD6C((void (*)(void))type metadata accessor for ModelXPCRequest.StartMonitoringInferences, a1);
}

uint64_t sub_256CAFD6C@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  sub_256CB0528(v2, a2, a1);
  type metadata accessor for ModelXPCRequest(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CAFDC4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CAFE4C()
{
  return 0x746E696F70646E65;
}

uint64_t sub_256CAFE68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CAFDC4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CAFE94(uint64_t a1)
{
  unint64_t v2 = sub_256CB1524();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CAFED0(uint64_t a1)
{
  unint64_t v2 = sub_256CB1524();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ModelXPCRequest.StartMonitoringInferences.encode(to:)()
{
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C53A0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_25_8(v0);
  sub_256CB1524();
  OUTLINED_FUNCTION_23_4();
  sub_256CEDD58();
  sub_256CA6674(&qword_26B2C5320, MEMORY[0x263F8F3E0]);
  OUTLINED_FUNCTION_43_5();
  uint64_t v2 = OUTLINED_FUNCTION_12_9();
  v3(v2);
  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_63_6();
}

void ModelXPCRequest.StartMonitoringInferences.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_115_2(v13);
  uint64_t v14 = sub_256CEDD58();
  OUTLINED_FUNCTION_0_0();
  uint64_t v24 = v15;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_16_0(v17, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C55C0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = OUTLINED_FUNCTION_18_4();
  uint64_t started = type metadata accessor for ModelXPCRequest.StartMonitoringInferences(v19);
  uint64_t v21 = OUTLINED_FUNCTION_21(started);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_29();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_256CB1524();
  OUTLINED_FUNCTION_116_1();
  sub_256CEE848();
  if (!v11)
  {
    sub_256CA6674(&qword_26B2C4EB8, MEMORY[0x263F8F3E0]);
    sub_256CEE4D8();
    OUTLINED_FUNCTION_50();
    v22();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v12, a10, v14);
    sub_256CA65D4(v12, v25, (void (*)(void))type metadata accessor for ModelXPCRequest.StartMonitoringInferences);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256CB01E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ModelXPCRequest.StartMonitoringInferences.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_256CB0200()
{
}

unint64_t sub_256CB0218()
{
  unint64_t result = qword_269FC4FB0;
  if (!qword_269FC4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FB0);
  }
  return result;
}

unint64_t sub_256CB0264()
{
  unint64_t result = qword_26B2C49C0;
  if (!qword_26B2C49C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C49C0);
  }
  return result;
}

unint64_t sub_256CB02B0()
{
  unint64_t result = qword_269FC4FC0;
  if (!qword_269FC4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FC0);
  }
  return result;
}

unint64_t sub_256CB02FC()
{
  unint64_t result = qword_269FC4FC8;
  if (!qword_269FC4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FC8);
  }
  return result;
}

unint64_t sub_256CB0348()
{
  unint64_t result = qword_269FC4FD0;
  if (!qword_269FC4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FD0);
  }
  return result;
}

unint64_t sub_256CB0394()
{
  unint64_t result = qword_269FC4FD8;
  if (!qword_269FC4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FD8);
  }
  return result;
}

unint64_t sub_256CB03E0()
{
  unint64_t result = qword_269FC4FE0;
  if (!qword_269FC4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FE0);
  }
  return result;
}

unint64_t sub_256CB042C()
{
  unint64_t result = qword_26B2C4980;
  if (!qword_26B2C4980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4980);
  }
  return result;
}

unint64_t sub_256CB0478()
{
  unint64_t result = qword_269FC4FE8;
  if (!qword_269FC4FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FE8);
  }
  return result;
}

unint64_t sub_256CB04C4()
{
  unint64_t result = qword_269FC4FF0;
  if (!qword_269FC4FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4FF0);
  }
  return result;
}

uint64_t type metadata accessor for ModelXPCResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_256CB0528(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_97();
  v5(v4);
  return a2;
}

unint64_t sub_256CB057C()
{
  unint64_t result = qword_26B2C7928;
  if (!qword_26B2C7928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7928);
  }
  return result;
}

uint64_t type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C7950);
}

unint64_t sub_256CB05E8()
{
  unint64_t result = qword_26B2C7910;
  if (!qword_26B2C7910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7910);
  }
  return result;
}

unint64_t sub_256CB0634()
{
  unint64_t result = qword_269FC5018;
  if (!qword_269FC5018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5018);
  }
  return result;
}

unint64_t sub_256CB0680()
{
  unint64_t result = qword_269FC5028;
  if (!qword_269FC5028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5028);
  }
  return result;
}

unint64_t sub_256CB06CC()
{
  unint64_t result = qword_26B2C5448;
  if (!qword_26B2C5448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5448);
  }
  return result;
}

unint64_t sub_256CB0718()
{
  unint64_t result = qword_26B2C78C0;
  if (!qword_26B2C78C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C78C0);
  }
  return result;
}

unint64_t sub_256CB0764()
{
  unint64_t result = qword_26B2C5468;
  if (!qword_26B2C5468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5468);
  }
  return result;
}

unint64_t sub_256CB07B0()
{
  unint64_t result = qword_26B2C78E8;
  if (!qword_26B2C78E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C78E8);
  }
  return result;
}

uint64_t type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_269FC5248);
}

unint64_t sub_256CB081C()
{
  unint64_t result = qword_269FC5040;
  if (!qword_269FC5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5040);
  }
  return result;
}

unint64_t sub_256CB0868()
{
  unint64_t result = qword_269FC5058;
  if (!qword_269FC5058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5058);
  }
  return result;
}

unint64_t sub_256CB08B4()
{
  unint64_t result = qword_269FC5080;
  if (!qword_269FC5080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5080);
  }
  return result;
}

unint64_t sub_256CB0900()
{
  unint64_t result = qword_269FC5090;
  if (!qword_269FC5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5090);
  }
  return result;
}

uint64_t sub_256CB094C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_256CB09AC()
{
  unint64_t result = qword_26B2C4940;
  if (!qword_26B2C4940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4940);
  }
  return result;
}

unint64_t sub_256CB09F8()
{
  unint64_t result = qword_26B2C8690;
  if (!qword_26B2C8690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8690);
  }
  return result;
}

unint64_t sub_256CB0A44()
{
  unint64_t result = qword_26B2C4960;
  if (!qword_26B2C4960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4960);
  }
  return result;
}

unint64_t sub_256CB0A90()
{
  unint64_t result = qword_26B2C8308;
  if (!qword_26B2C8308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8308);
  }
  return result;
}

unint64_t sub_256CB0ADC()
{
  unint64_t result = qword_269FC50A8;
  if (!qword_269FC50A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC50A8);
  }
  return result;
}

unint64_t sub_256CB0B28()
{
  unint64_t result = qword_269FC50C0;
  if (!qword_269FC50C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC50C0);
  }
  return result;
}

unint64_t sub_256CB0B74()
{
  unint64_t result = qword_269FC50D0;
  if (!qword_269FC50D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC50D0);
  }
  return result;
}

unint64_t sub_256CB0BC0()
{
  unint64_t result = qword_269FC50E0;
  if (!qword_269FC50E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC50E0);
  }
  return result;
}

unint64_t sub_256CB0C0C()
{
  unint64_t result = qword_26B2C4870;
  if (!qword_26B2C4870)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B2C59F0);
    sub_256CA6674((unint64_t *)&unk_26B2C8640, (void (*)(uint64_t))type metadata accessor for Assertion.DaemonRep);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4870);
  }
  return result;
}

unint64_t sub_256CB0CB0()
{
  unint64_t result = qword_26B2C4908;
  if (!qword_26B2C4908)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B2C59F0);
    sub_256CA6674(&qword_26B2C4900, (void (*)(uint64_t))type metadata accessor for Assertion.DaemonRep);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4908);
  }
  return result;
}

unint64_t sub_256CB0D54()
{
  unint64_t result = qword_26B2C7E10;
  if (!qword_26B2C7E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7E10);
  }
  return result;
}

unint64_t sub_256CB0DA0()
{
  unint64_t result = qword_26B2C4B38;
  if (!qword_26B2C4B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C7E38);
    sub_256CA6674(&qword_26B2C4A80, (void (*)(uint64_t))type metadata accessor for AssetInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4B38);
  }
  return result;
}

unint64_t sub_256CB0E44()
{
  unint64_t result = qword_26B2C5B48;
  if (!qword_26B2C5B48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C7E38);
    sub_256CA6674(&qword_26B2C5B40, (void (*)(uint64_t))type metadata accessor for AssetInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5B48);
  }
  return result;
}

unint64_t sub_256CB0EE8()
{
  unint64_t result = qword_26B2C7B88;
  if (!qword_26B2C7B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7B88);
  }
  return result;
}

unint64_t sub_256CB0F34()
{
  unint64_t result = qword_269FC50F8;
  if (!qword_269FC50F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC50F8);
  }
  return result;
}

unint64_t sub_256CB0F80()
{
  unint64_t result = qword_269FC5110;
  if (!qword_269FC5110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5110);
  }
  return result;
}

unint64_t sub_256CB0FCC()
{
  unint64_t result = qword_269FC5120;
  if (!qword_269FC5120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5120);
  }
  return result;
}

unint64_t sub_256CB1018()
{
  unint64_t result = qword_269FC5138;
  if (!qword_269FC5138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5138);
  }
  return result;
}

unint64_t sub_256CB1064()
{
  unint64_t result = qword_269FC5150;
  if (!qword_269FC5150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5150);
  }
  return result;
}

unint64_t sub_256CB10B0()
{
  unint64_t result = qword_269FC5160;
  if (!qword_269FC5160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5160);
  }
  return result;
}

unint64_t sub_256CB10FC()
{
  unint64_t result = qword_269FC5178;
  if (!qword_269FC5178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5178);
  }
  return result;
}

unint64_t sub_256CB1148()
{
  unint64_t result = qword_269FC5188;
  if (!qword_269FC5188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5188);
  }
  return result;
}

unint64_t sub_256CB1194()
{
  unint64_t result = qword_269FC51A0;
  if (!qword_269FC51A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC51A0);
  }
  return result;
}

unint64_t sub_256CB11E0()
{
  unint64_t result = qword_269FC51B0;
  if (!qword_269FC51B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC51B0);
  }
  return result;
}

unint64_t sub_256CB122C()
{
  unint64_t result = qword_26B2C4990;
  if (!qword_26B2C4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4990);
  }
  return result;
}

unint64_t sub_256CB1278()
{
  unint64_t result = qword_269FC51C0;
  if (!qword_269FC51C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC51C0);
  }
  return result;
}

unint64_t sub_256CB12C4()
{
  unint64_t result = qword_269FC51D0;
  if (!qword_269FC51D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC51D0);
  }
  return result;
}

unint64_t sub_256CB1310()
{
  unint64_t result = qword_269FC51E0;
  if (!qword_269FC51E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC51E0);
  }
  return result;
}

unint64_t sub_256CB135C()
{
  unint64_t result = qword_269FC51E8;
  if (!qword_269FC51E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC51E8);
  }
  return result;
}

unint64_t sub_256CB13A8()
{
  unint64_t result = qword_269FC51F8;
  if (!qword_269FC51F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC51F8);
  }
  return result;
}

unint64_t sub_256CB13F4()
{
  unint64_t result = qword_269FC5208;
  if (!qword_269FC5208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5208);
  }
  return result;
}

unint64_t sub_256CB1440()
{
  unint64_t result = qword_269FC5220;
  if (!qword_269FC5220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5220);
  }
  return result;
}

unint64_t sub_256CB148C()
{
  unint64_t result = qword_269FC5230;
  if (!qword_269FC5230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5230);
  }
  return result;
}

unint64_t sub_256CB14D8()
{
  unint64_t result = qword_26B2C5490;
  if (!qword_26B2C5490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5490);
  }
  return result;
}

unint64_t sub_256CB1524()
{
  unint64_t result = qword_26B2C79A8;
  if (!qword_26B2C79A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79A8);
  }
  return result;
}

uint64_t sub_256CB1570()
{
  return sub_256CA6674(&qword_269FC5238, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest);
}

uint64_t sub_256CB15B8()
{
  return sub_256CA6674(&qword_269FC5240, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest);
}

uint64_t sub_256CB1600()
{
  return sub_256CA6674(&qword_26B2C7948, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response);
}

uint64_t sub_256CB1648()
{
  return sub_256CA6674(&qword_26B2C7940, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response);
}

uint64_t sub_256CB1690(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_26B2C5488, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CreateSessionRequest);
  uint64_t result = sub_256CA6674(&qword_26B2C7960, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CreateSessionRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB171C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_269FC4FF8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.DeleteSessionRequest);
  uint64_t result = sub_256CA6674(&qword_269FC4F88, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.DeleteSessionRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB17A8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_26B2C5460, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.PrewarmSession);
  uint64_t result = sub_256CA6674(&qword_26B2C78E0, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.PrewarmSession);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB1834(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_26B2C5480, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CancelSessionRequest);
  uint64_t result = sub_256CA6674(&qword_26B2C7908, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CancelSessionRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB18B8()
{
  return sub_256CA6674(&qword_269FC3FF0, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest.Response);
}

uint64_t sub_256CB1900()
{
  return sub_256CA6674(&qword_269FC3FF8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest.Response);
}

uint64_t sub_256CB1948(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_269FC5008, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest);
  uint64_t result = sub_256CA6674(&qword_269FC4FA8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB19D4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_269FC5000, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CancelRequest);
  uint64_t result = sub_256CA6674(&qword_269FC4F98, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CancelRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB1A60(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_26B2C4958, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.AcquireRequest);
  uint64_t result = sub_256CA6674(&qword_26B2C86B8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.AcquireRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB1AEC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_26B2C4978, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ReleaseRequest);
  uint64_t result = sub_256CA6674(&qword_26B2C8330, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ReleaseRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB1B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB04C4, (uint64_t (*)(void))sub_256CA6C18);
}

uint64_t sub_256CB1BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB0478, (uint64_t (*)(void))sub_256CA6B80);
}

uint64_t sub_256CB1BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB042C, (uint64_t (*)(void))sub_256CA6AE8);
}

uint64_t sub_256CB1C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB03E0, (uint64_t (*)(void))sub_256CA6A50);
}

uint64_t sub_256CB1C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB0394, (uint64_t (*)(void))sub_256CA69B8);
}

uint64_t sub_256CB1C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB0348, (uint64_t (*)(void))sub_256CA6920);
}

uint64_t sub_256CB1CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB02FC, (uint64_t (*)(void))sub_256CA6888);
}

uint64_t sub_256CB1CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB02B0, (uint64_t (*)(void))sub_256CA67F0);
}

uint64_t sub_256CB1D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB0264, (uint64_t (*)(void))sub_256CA6758);
}

uint64_t sub_256CB1D4C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_269FC4FB8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.FetchModelInstance);
  uint64_t result = sub_256CA6674(&qword_269FC4F08, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.FetchModelInstance);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB1DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB1E04(a1, a2, a3, (uint64_t (*)(void))sub_256CB0218, (uint64_t (*)(void))sub_256CA6588);
}

uint64_t sub_256CB1E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_256CB1E48(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256CA6674(&qword_26B2C54A8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.StartMonitoringInferences);
  uint64_t result = sub_256CA6674(&qword_26B2C79D0, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.StartMonitoringInferences);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t dispatch thunk of XPCRequestProtocol.request.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

char *initializeBufferWithCopyOfBuffer for ModelXPCRequest(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        a1[16] = a2[16];
        uint64_t v8 = *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest(0) + 24);
        long long v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = *(void *)&a2[v8 + 8];
        *(void *)long long v9 = *(void *)&a2[v8];
        *((void *)v9 + 1) = v11;
        uint64_t v12 = (int *)type metadata accessor for RequestMetadata(0);
        uint64_t v13 = v12[5];
        uint64_t v14 = &v9[v13];
        uint64_t v15 = &v10[v13];
        uint64_t v16 = sub_256CEDE28();
        sub_256CEDEC8();
        sub_256CEDEC8();
        if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
          __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
        }
        uint64_t v44 = *(int *)(type metadata accessor for ClientData(0) + 20);
        uint64_t v45 = &v14[v44];
        uint64_t v46 = &v15[v44];
        if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v16))
        {
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v45, v46, v16);
          __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v16);
        }
        uint64_t v48 = v12[6];
        uint64_t v49 = &v9[v48];
        uint64_t v50 = &v10[v48];
        uint64_t v51 = sub_256CEDB08();
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
        v52(v49, v50, v51);
        v52(&v9[v12[7]], &v10[v12[7]], v51);
        *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
        v9[v12[9]] = v10[v12[9]];
        v9[v12[10]] = v10[v12[10]];
        sub_256CEDEC8();
        goto LABEL_22;
      case 1u:
        uint64_t v19 = sub_256CEDB08();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        v20(a1, a2, v19);
        uint64_t v21 = type metadata accessor for ModelXPCRequest.CancelRequest(0);
        v20(&a1[*(int *)(v21 + 20)], &a2[*(int *)(v21 + 20)], v19);
        goto LABEL_22;
      case 2u:
        uint64_t v22 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v22;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        uint64_t v23 = *((void *)a2 + 6);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = v23;
        uint64_t v24 = type metadata accessor for Session.Metadata(0);
        uint64_t v25 = *(int *)(v24 + 36);
        uint64_t v55 = &a2[v25];
        uint64_t v56 = &a1[v25];
        uint64_t v26 = sub_256CEDB08();
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        sub_256CEDEC8();
        sub_256CEDEC8();
        sub_256CEDEC8();
        v27(v56, v55, v26);
        v27(&a1[*(int *)(v24 + 40)], &a2[*(int *)(v24 + 40)], v26);
        uint64_t v28 = *(int *)(type metadata accessor for ModelXPCRequest.CreateSessionRequest(0) + 20);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = *((void *)v30 + 1);
        if (v31)
        {
          *(void *)uint64_t v29 = *(void *)v30;
          *((void *)v29 + 1) = v31;
          uint64_t v32 = *((void *)v30 + 3);
          *((void *)v29 + 2) = *((void *)v30 + 2);
          *((void *)v29 + 3) = v32;
          v29[32] = v30[32];
          sub_256CEDEC8();
          sub_256CEDEC8();
        }
        else
        {
          long long v53 = *((_OWORD *)v30 + 1);
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
          *((_OWORD *)v29 + 1) = v53;
          v29[32] = v30[32];
        }
        goto LABEL_22;
      case 3u:
      case 4u:
      case 5u:
      case 7u:
      case 0x11u:
        uint64_t v42 = sub_256CEDB08();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
        goto LABEL_22;
      case 6u:
        uint64_t v33 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v33;
        uint64_t v34 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v34;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        uint64_t v35 = type metadata accessor for Assertion.DaemonRep(0);
        uint64_t v36 = *(int *)(v35 + 28);
        uint64_t v57 = &a1[v36];
        uint64_t v37 = &a2[v36];
        uint64_t v38 = sub_256CEDB08();
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
        sub_256CEDEC8();
        sub_256CEDEC8();
        v39(v57, v37, v38);
        *(_DWORD *)&a1[*(int *)(v35 + 32)] = *(_DWORD *)&a2[*(int *)(v35 + 32)];
        goto LABEL_22;
      case 9u:
        *(void *)a1 = *(void *)a2;
        sub_256CEDEC8();
        goto LABEL_22;
      case 0xCu:
      case 0xEu:
        uint64_t v40 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v40;
        sub_256CEDEC8();
        goto LABEL_22;
      case 0xDu:
        uint64_t v41 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v41;
        a1[16] = a2[16];
        sub_256CEDEC8();
        goto LABEL_22;
      case 0x13u:
        uint64_t v43 = sub_256CEDD58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ModelXPCRequest(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest(0) + 24);
      swift_bridgeObjectRelease();
      uint64_t v8 = (int *)type metadata accessor for RequestMetadata(0);
      uint64_t v9 = v7 + v8[5];
      uint64_t v10 = sub_256CEDE28();
      if (!__swift_getEnumTagSinglePayload(v9, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      }
      uint64_t v11 = v9 + *(int *)(type metadata accessor for ClientData(0) + 20);
      if (!__swift_getEnumTagSinglePayload(v11, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v11, v10);
      }
      uint64_t v12 = v7 + v8[6];
      uint64_t v13 = sub_256CEDB08();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
      v14(v12, v13);
      v14(v7 + v8[7], v13);
      goto LABEL_17;
    case 1:
      uint64_t v15 = sub_256CEDB08();
      uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v20)((void *)(v15 - 8), a1, v15);
      uint64_t v6 = a1 + *(int *)(type metadata accessor for ModelXPCRequest.CancelRequest(0) + 20);
      uint64_t v5 = v15;
      uint64_t v4 = v20;
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = type metadata accessor for Session.Metadata(0);
      uint64_t v17 = a1 + *(int *)(v16 + 36);
      uint64_t v18 = sub_256CEDB08();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
      v19(v17, v18);
      v19(a1 + *(int *)(v16 + 40), v18);
      uint64_t result = *(void *)(a1 + *(int *)(type metadata accessor for ModelXPCRequest.CreateSessionRequest(0) + 20) + 8);
      if (!result) {
        return result;
      }
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 3:
    case 4:
    case 5:
    case 7:
    case 17:
      goto LABEL_2;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for Assertion.DaemonRep(0) + 28);
LABEL_2:
      uint64_t v3 = sub_256CEDB08();
      goto LABEL_3;
    case 9:
    case 12:
    case 13:
    case 14:
LABEL_17:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 19:
      uint64_t v3 = sub_256CEDD58();
LABEL_3:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v5 = v3;
      uint64_t v6 = a1;
LABEL_4:
      uint64_t result = v4(v6, v5);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for ModelXPCRequest(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      a1[16] = a2[16];
      uint64_t v7 = *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest(0) + 24);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = *(void *)&a2[v7 + 8];
      *(void *)uint64_t v8 = *(void *)&a2[v7];
      *((void *)v8 + 1) = v10;
      uint64_t v11 = (int *)type metadata accessor for RequestMetadata(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &v8[v12];
      uint64_t v14 = &v9[v12];
      uint64_t v15 = sub_256CEDE28();
      sub_256CEDEC8();
      sub_256CEDEC8();
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v42 = *(int *)(type metadata accessor for ClientData(0) + 20);
      uint64_t v43 = &v13[v42];
      uint64_t v44 = &v14[v42];
      if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v15))
      {
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v43, v44, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v15);
      }
      uint64_t v46 = v11[6];
      uint64_t v47 = &v8[v46];
      uint64_t v48 = &v9[v46];
      uint64_t v49 = sub_256CEDB08();
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
      v50(v47, v48, v49);
      v50(&v8[v11[7]], &v9[v11[7]], v49);
      *(void *)&v8[v11[8]] = *(void *)&v9[v11[8]];
      v8[v11[9]] = v9[v11[9]];
      v8[v11[10]] = v9[v11[10]];
      sub_256CEDEC8();
      goto LABEL_20;
    case 1u:
      uint64_t v17 = sub_256CEDB08();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      v18(a1, a2, v17);
      uint64_t v19 = type metadata accessor for ModelXPCRequest.CancelRequest(0);
      v18(&a1[*(int *)(v19 + 20)], &a2[*(int *)(v19 + 20)], v17);
      goto LABEL_20;
    case 2u:
      uint64_t v20 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v20;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      uint64_t v21 = *((void *)a2 + 6);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = v21;
      uint64_t v22 = type metadata accessor for Session.Metadata(0);
      uint64_t v23 = *(int *)(v22 + 36);
      long long v53 = &a2[v23];
      uint64_t v54 = &a1[v23];
      uint64_t v24 = sub_256CEDB08();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      sub_256CEDEC8();
      sub_256CEDEC8();
      sub_256CEDEC8();
      v25(v54, v53, v24);
      v25(&a1[*(int *)(v22 + 40)], &a2[*(int *)(v22 + 40)], v24);
      uint64_t v26 = *(int *)(type metadata accessor for ModelXPCRequest.CreateSessionRequest(0) + 20);
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = *((void *)v28 + 1);
      if (v29)
      {
        *(void *)uint64_t v27 = *(void *)v28;
        *((void *)v27 + 1) = v29;
        uint64_t v30 = *((void *)v28 + 3);
        *((void *)v27 + 2) = *((void *)v28 + 2);
        *((void *)v27 + 3) = v30;
        v27[32] = v28[32];
        sub_256CEDEC8();
        sub_256CEDEC8();
      }
      else
      {
        long long v51 = *((_OWORD *)v28 + 1);
        *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
        *((_OWORD *)v27 + 1) = v51;
        v27[32] = v28[32];
      }
      goto LABEL_20;
    case 3u:
    case 4u:
    case 5u:
    case 7u:
    case 0x11u:
      uint64_t v40 = sub_256CEDB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
      goto LABEL_20;
    case 6u:
      uint64_t v31 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v31;
      uint64_t v32 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v32;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v33 = type metadata accessor for Assertion.DaemonRep(0);
      uint64_t v34 = *(int *)(v33 + 28);
      uint64_t v55 = &a1[v34];
      uint64_t v35 = &a2[v34];
      uint64_t v36 = sub_256CEDB08();
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      sub_256CEDEC8();
      sub_256CEDEC8();
      v37(v55, v35, v36);
      *(_DWORD *)&a1[*(int *)(v33 + 32)] = *(_DWORD *)&a2[*(int *)(v33 + 32)];
      goto LABEL_20;
    case 9u:
      *(void *)a1 = *(void *)a2;
      sub_256CEDEC8();
      goto LABEL_20;
    case 0xCu:
    case 0xEu:
      uint64_t v38 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v38;
      sub_256CEDEC8();
      goto LABEL_20;
    case 0xDu:
      uint64_t v39 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v39;
      a1[16] = a2[16];
      sub_256CEDEC8();
      goto LABEL_20;
    case 0x13u:
      uint64_t v41 = sub_256CEDD58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for ModelXPCRequest(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_256CA66BC();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v6 = *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest(0) + 24);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
        *((void *)v7 + 1) = *(void *)((char *)a2 + v6 + 8);
        uint64_t v9 = (int *)type metadata accessor for RequestMetadata(0);
        uint64_t v10 = v9[5];
        uint64_t v11 = &v7[v10];
        uint64_t v12 = &v8[v10];
        uint64_t v13 = sub_256CEDE28();
        sub_256CEDEC8();
        sub_256CEDEC8();
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v32 = *(int *)(type metadata accessor for ClientData(0) + 20);
        uint64_t v33 = &v11[v32];
        uint64_t v34 = &v12[v32];
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v13))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v33, v34, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v13);
        }
        uint64_t v38 = v9[6];
        uint64_t v39 = &v7[v38];
        uint64_t v40 = &v8[v38];
        uint64_t v41 = sub_256CEDB08();
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        v42(v39, v40, v41);
        v42(&v7[v9[7]], &v8[v9[7]], v41);
        *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
        v7[v9[9]] = v8[v9[9]];
        v7[v9[10]] = v8[v9[10]];
        sub_256CEDEC8();
        goto LABEL_21;
      case 1u:
        uint64_t v15 = sub_256CEDB08();
        uint64_t v16 = *(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16);
        v16(a1, a2, v15);
        uint64_t v17 = type metadata accessor for ModelXPCRequest.CancelRequest(0);
        v16((void *)((char *)a1 + *(int *)(v17 + 20)), (void *)((char *)a2 + *(int *)(v17 + 20)), v15);
        goto LABEL_21;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        uint64_t v18 = type metadata accessor for Session.Metadata(0);
        uint64_t v19 = *(int *)(v18 + 36);
        uint64_t v44 = (char *)a2 + v19;
        uint64_t v45 = (char *)a1 + v19;
        uint64_t v20 = sub_256CEDB08();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        sub_256CEDEC8();
        sub_256CEDEC8();
        sub_256CEDEC8();
        v21(v45, v44, v20);
        v21((char *)a1 + *(int *)(v18 + 40), (char *)a2 + *(int *)(v18 + 40), v20);
        uint64_t v22 = *(int *)(type metadata accessor for ModelXPCRequest.CreateSessionRequest(0) + 20);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        if (*((void *)v24 + 1))
        {
          *(void *)uint64_t v23 = *(void *)v24;
          *((void *)v23 + 1) = *((void *)v24 + 1);
          *((void *)v23 + 2) = *((void *)v24 + 2);
          *((void *)v23 + 3) = *((void *)v24 + 3);
          v23[32] = v24[32];
          sub_256CEDEC8();
          sub_256CEDEC8();
        }
        else
        {
          long long v36 = *(_OWORD *)v24;
          long long v37 = *((_OWORD *)v24 + 1);
          v23[32] = v24[32];
          *(_OWORD *)uint64_t v23 = v36;
          *((_OWORD *)v23 + 1) = v37;
        }
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
      case 7u:
      case 0x11u:
        uint64_t v30 = sub_256CEDB08();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        goto LABEL_21;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        uint64_t v25 = type metadata accessor for Assertion.DaemonRep(0);
        uint64_t v26 = *(int *)(v25 + 28);
        uint64_t v46 = (char *)a1 + v26;
        uint64_t v27 = (char *)a2 + v26;
        uint64_t v28 = sub_256CEDB08();
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        sub_256CEDEC8();
        sub_256CEDEC8();
        v29(v46, v27, v28);
        *(_DWORD *)((char *)a1 + *(int *)(v25 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(v25 + 32));
        goto LABEL_21;
      case 9u:
        *a1 = *a2;
        sub_256CEDEC8();
        goto LABEL_21;
      case 0xCu:
      case 0xEu:
        *a1 = *a2;
        a1[1] = a2[1];
        sub_256CEDEC8();
        goto LABEL_21;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        sub_256CEDEC8();
        goto LABEL_21;
      case 0x13u:
        uint64_t v31 = sub_256CEDD58();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for ModelXPCRequest(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      uint64_t v6 = *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest(0) + 24);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      *(_OWORD *)&a1[v6] = *(_OWORD *)&a2[v6];
      uint64_t v9 = (int *)type metadata accessor for RequestMetadata(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = &v7[v10];
      uint64_t v12 = &v8[v10];
      uint64_t v13 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v36 = *(int *)(type metadata accessor for ClientData(0) + 20);
      long long v37 = &v11[v36];
      uint64_t v38 = &v12[v36];
      if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v13))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v37, v38, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v13);
      }
      uint64_t v40 = v9[6];
      uint64_t v41 = &v7[v40];
      uint64_t v42 = &v8[v40];
      uint64_t v43 = sub_256CEDB08();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32);
      v44(v41, v42, v43);
      v44(&v7[v9[7]], &v8[v9[7]], v43);
      *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
      v7[v9[9]] = v8[v9[9]];
      v7[v9[10]] = v8[v9[10]];
      goto LABEL_15;
    case 1u:
      uint64_t v15 = sub_256CEDB08();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16(a1, a2, v15);
      uint64_t v17 = type metadata accessor for ModelXPCRequest.CancelRequest(0);
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      goto LABEL_15;
    case 2u:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v18 = type metadata accessor for Session.Metadata(0);
      uint64_t v19 = *(int *)(v18 + 36);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_256CEDB08();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      v23(&a1[*(int *)(v18 + 40)], &a2[*(int *)(v18 + 40)], v22);
      uint64_t v24 = *(int *)(type metadata accessor for ModelXPCRequest.CreateSessionRequest(0) + 20);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      long long v27 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v27;
      v25[32] = v26[32];
      goto LABEL_15;
    case 3u:
    case 4u:
    case 5u:
    case 7u:
    case 0x11u:
      uint64_t v34 = sub_256CEDB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
      goto LABEL_15;
    case 6u:
      long long v28 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v28;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v29 = type metadata accessor for Assertion.DaemonRep(0);
      uint64_t v30 = *(int *)(v29 + 28);
      uint64_t v31 = &a1[v30];
      uint64_t v32 = &a2[v30];
      uint64_t v33 = sub_256CEDB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      *(_DWORD *)&a1[*(int *)(v29 + 32)] = *(_DWORD *)&a2[*(int *)(v29 + 32)];
      goto LABEL_15;
    case 0x13u:
      uint64_t v35 = sub_256CEDD58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for ModelXPCRequest(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_256CA66BC();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        uint64_t v6 = *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest(0) + 24);
        uint64_t v7 = &a1[v6];
        uint64_t v8 = &a2[v6];
        *(_OWORD *)&a1[v6] = *(_OWORD *)&a2[v6];
        uint64_t v9 = (int *)type metadata accessor for RequestMetadata(0);
        uint64_t v10 = v9[5];
        uint64_t v11 = &v7[v10];
        uint64_t v12 = &v8[v10];
        uint64_t v13 = sub_256CEDE28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v36 = *(int *)(type metadata accessor for ClientData(0) + 20);
        long long v37 = &v11[v36];
        uint64_t v38 = &v12[v36];
        if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v13))
        {
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v37, v38, v13);
          __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v13);
        }
        uint64_t v40 = v9[6];
        uint64_t v41 = &v7[v40];
        uint64_t v42 = &v8[v40];
        uint64_t v43 = sub_256CEDB08();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32);
        v44(v41, v42, v43);
        v44(&v7[v9[7]], &v8[v9[7]], v43);
        *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
        v7[v9[9]] = v8[v9[9]];
        v7[v9[10]] = v8[v9[10]];
        goto LABEL_16;
      case 1u:
        uint64_t v15 = sub_256CEDB08();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v16(a1, a2, v15);
        uint64_t v17 = type metadata accessor for ModelXPCRequest.CancelRequest(0);
        v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
        goto LABEL_16;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v18 = type metadata accessor for Session.Metadata(0);
        uint64_t v19 = *(int *)(v18 + 36);
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        uint64_t v22 = sub_256CEDB08();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
        v23(v20, v21, v22);
        v23(&a1[*(int *)(v18 + 40)], &a2[*(int *)(v18 + 40)], v22);
        uint64_t v24 = *(int *)(type metadata accessor for ModelXPCRequest.CreateSessionRequest(0) + 20);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        long long v27 = *((_OWORD *)v26 + 1);
        *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
        *((_OWORD *)v25 + 1) = v27;
        v25[32] = v26[32];
        goto LABEL_16;
      case 3u:
      case 4u:
      case 5u:
      case 7u:
      case 0x11u:
        uint64_t v34 = sub_256CEDB08();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        goto LABEL_16;
      case 6u:
        long long v28 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v28;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        uint64_t v29 = type metadata accessor for Assertion.DaemonRep(0);
        uint64_t v30 = *(int *)(v29 + 28);
        uint64_t v31 = &a1[v30];
        uint64_t v32 = &a2[v30];
        uint64_t v33 = sub_256CEDB08();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        *(_DWORD *)&a1[*(int *)(v29 + 32)] = *(_DWORD *)&a2[*(int *)(v29 + 32)];
        goto LABEL_16;
      case 0x13u:
        uint64_t v35 = sub_256CEDD58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_256CB4760()
{
  uint64_t result = type metadata accessor for ModelXPCRequest.ExecuteRequest(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ModelXPCRequest.CancelRequest(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ModelXPCRequest.CreateSessionRequest(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_256CEDB08();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for Assertion.DaemonRep(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = sub_256CEDD58();
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_256CB4960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_256CB4968()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_256CB4A34(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *unint64_t v3 = *(void *)a2;
    unint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_256CB4C08(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_256CB4D44(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_256CB4EB8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_256CB50F8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_256CB526C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_256CB54AC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_256CB55F0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x256CB57C4);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_256CB57EC(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_256CB58B4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ModelXPCRequest.CreateSessionRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = type metadata accessor for Session.Metadata(0);
    uint64_t v11 = *(int *)(v10 + 36);
    uint64_t v21 = (uint64_t)a2 + v11;
    uint64_t v22 = v7 + v11;
    uint64_t v12 = sub_256CEDB08();
    int v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
    v13(v22, v21, v12);
    v13(v7 + *(int *)(v10 + 40), (uint64_t)a2 + *(int *)(v10 + 40), v12);
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = v7 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(void *)(v16 + 8);
    if (v17)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *(void *)(v15 + 8) = v17;
      uint64_t v18 = *(void *)(v16 + 24);
      *(void *)(v15 + 16) = *(void *)(v16 + 16);
      *(void *)(v15 + 24) = v18;
      *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
      sub_256CEDEC8();
      sub_256CEDEC8();
    }
    else
    {
      long long v19 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *(_OWORD *)(v15 + 16) = v19;
      *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
    }
  }
  return v7;
}

uint64_t destroy for ModelXPCRequest.CreateSessionRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Session.Metadata(0);
  uint64_t v5 = a1 + *(int *)(v4 + 36);
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(v4 + 40), v6);
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 20) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ModelXPCRequest.CreateSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = type metadata accessor for Session.Metadata(0);
  uint64_t v8 = *(int *)(v7 + 36);
  uint64_t v19 = a1 + v8;
  uint64_t v9 = a2 + v8;
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  v11(v19, v9, v10);
  v11(a1 + *(int *)(v7 + 40), a2 + *(int *)(v7 + 40), v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(v14 + 8);
  if (v15)
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *(void *)(v13 + 8) = v15;
    uint64_t v16 = *(void *)(v14 + 24);
    *(void *)(v13 + 16) = *(void *)(v14 + 16);
    *(void *)(v13 + 24) = v16;
    *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  else
  {
    long long v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v17;
    *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  }
  return a1;
}

char *assignWithCopy for ModelXPCRequest.CreateSessionRequest(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *((void *)a1 + 3) = *((void *)a2 + 3);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  *((void *)a1 + 6) = *((void *)a2 + 6);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for Session.Metadata(0);
  uint64_t v7 = *(int *)(v6 + 36);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 40)], &a2[*(int *)(v6 + 40)], v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (uint64_t)&a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)&a1[v12 + 8];
  uint64_t v16 = *((void *)v14 + 1);
  if (v15)
  {
    if (v16)
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = *((void *)v14 + 1);
      sub_256CEDEC8();
      swift_bridgeObjectRelease();
      *(void *)(v13 + 16) = *((void *)v14 + 2);
      *(void *)(v13 + 24) = *((void *)v14 + 3);
      sub_256CEDEC8();
      swift_bridgeObjectRelease();
      char v17 = v14[32];
    }
    else
    {
      sub_256C9F990(v13);
      char v17 = v14[32];
      long long v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *(_OWORD *)(v13 + 16) = v18;
    }
    *(unsigned char *)(v13 + 32) = v17;
  }
  else if (v16)
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *(void *)(v13 + 8) = *((void *)v14 + 1);
    *(void *)(v13 + 16) = *((void *)v14 + 2);
    *(void *)(v13 + 24) = *((void *)v14 + 3);
    *(unsigned char *)(v13 + 32) = v14[32];
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  else
  {
    long long v20 = *(_OWORD *)v14;
    long long v21 = *((_OWORD *)v14 + 1);
    *(unsigned char *)(v13 + 32) = v14[32];
    *(_OWORD *)uint64_t v13 = v20;
    *(_OWORD *)(v13 + 16) = v21;
  }
  return a1;
}

uint64_t initializeWithTake for ModelXPCRequest.CreateSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = type metadata accessor for Session.Metadata(0);
  uint64_t v7 = *(int *)(v6 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(v6 + 40), a2 + *(int *)(v6 + 40), v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  return a1;
}

uint64_t assignWithTake for ModelXPCRequest.CreateSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for Session.Metadata(0);
  uint64_t v9 = *(int *)(v8 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_256CEDB08();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13(a1 + *(int *)(v8 + 40), a2 + *(int *)(v8 + 40), v12);
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  if (!*(void *)(a1 + v14 + 8)) {
    goto LABEL_5;
  }
  uint64_t v17 = *(void *)(v16 + 8);
  if (!v17)
  {
    sub_256C9F990(v15);
LABEL_5:
    long long v19 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v19;
    goto LABEL_6;
  }
  *(void *)uint64_t v15 = *(void *)v16;
  *(void *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v16 + 24);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.CreateSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CB6210);
}

uint64_t sub_256CB6210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_104_1();
  type metadata accessor for Session.Metadata(v4);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(v2, a2, v5);
  }
  else
  {
    OUTLINED_FUNCTION_85_2();
    int v9 = v8 - 1;
    if (v9 < 0) {
      int v9 = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.CreateSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CB62A8);
}

void sub_256CB62A8()
{
  uint64_t v4 = OUTLINED_FUNCTION_99_3();
  type metadata accessor for Session.Metadata(v4);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_30_1();
    __swift_storeEnumTagSinglePayload(v6, v7, v8, v9);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20) + 8) = v0;
  }
}

uint64_t sub_256CB6318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB8EB4(a1, a2, a3, type metadata accessor for Session.Metadata);
}

uint64_t initializeBufferWithCopyOfBuffer for ModelXPCRequest.DeleteSessionRequest()
{
  return sub_256CB9F9C();
}

uint64_t destroy for ModelXPCRequest.DeleteSessionRequest()
{
  return sub_256CBA010();
}

uint64_t initializeWithCopy for ModelXPCRequest.DeleteSessionRequest()
{
  return sub_256CBA084();
}

uint64_t assignWithCopy for ModelXPCRequest.DeleteSessionRequest()
{
  return sub_256CBA0E8();
}

uint64_t initializeWithTake for ModelXPCRequest.DeleteSessionRequest()
{
  return sub_256CBA14C();
}

uint64_t assignWithTake for ModelXPCRequest.DeleteSessionRequest()
{
  return sub_256CBA1B0();
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.CreateSessionRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CB63DC);
}

uint64_t sub_256CB63DC()
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  uint64_t v0 = OUTLINED_FUNCTION_62_6();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.CreateSessionRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CB6430);
}

uint64_t sub_256CB6430()
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  uint64_t v0 = OUTLINED_FUNCTION_30_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_256CB6470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CBA2BC(a1, a2, a3, MEMORY[0x263F07508]);
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.DeleteSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CBDE60);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.DeleteSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CBDE70);
}

void type metadata accessor for ModelXPCRequest.DeleteSessionRequest.Response()
{
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.PrewarmSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CBDE64);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.PrewarmSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CBDE74);
}

void type metadata accessor for ModelXPCRequest.PrewarmSession.Response()
{
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.CancelSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CBDE68);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.CancelSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CBDE78);
}

void type metadata accessor for ModelXPCRequest.CancelSessionRequest.Response()
{
}

void *initializeBufferWithCopyOfBuffer for ModelXPCRequest.ExecuteRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *(void *)uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    *((void *)v7 + 1) = v9;
    uint64_t v10 = (int *)type metadata accessor for RequestMetadata(0);
    uint64_t v11 = v10[5];
    uint64_t v12 = &v7[v11];
    uint64_t v13 = (char *)(v8 + v11);
    uint64_t v14 = sub_256CEDE28();
    sub_256CEDEC8();
    sub_256CEDEC8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v17 = *(int *)(type metadata accessor for ClientData(0) + 20);
    uint64_t v18 = &v12[v17];
    long long v19 = &v13[v17];
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v14))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v18, v19, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v14);
    }
    uint64_t v21 = v10[6];
    uint64_t v22 = &v7[v21];
    uint64_t v23 = v8 + v21;
    uint64_t v24 = sub_256CEDB08();
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    v25(&v7[v10[7]], v8 + v10[7], v24);
    *(void *)&v7[v10[8]] = *(void *)(v8 + v10[8]);
    v7[v10[9]] = *(unsigned char *)(v8 + v10[9]);
    v7[v10[10]] = *(unsigned char *)(v8 + v10[10]);
    sub_256CEDEC8();
  }
  return v3;
}

uint64_t destroy for ModelXPCRequest.ExecuteRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for RequestMetadata(0);
  uint64_t v6 = v4 + v5[5];
  uint64_t v7 = sub_256CEDE28();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = v6 + *(int *)(type metadata accessor for ClientData(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v8, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v8, v7);
  }
  uint64_t v9 = v4 + v5[6];
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(v4 + v5[7], v10);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModelXPCRequest.ExecuteRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  *(void *)uint64_t v6 = *(void *)(a2 + v5);
  *((void *)v6 + 1) = v8;
  uint64_t v9 = (int *)type metadata accessor for RequestMetadata(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = (char *)(v7 + v10);
  uint64_t v13 = sub_256CEDE28();
  sub_256CEDEC8();
  sub_256CEDEC8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v15 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v13))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v17, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v13);
  }
  uint64_t v19 = v9[6];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = v7 + v19;
  uint64_t v22 = sub_256CEDB08();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  v23(&v6[v9[7]], v7 + v9[7], v22);
  *(void *)&v6[v9[8]] = *(void *)(v7 + v9[8]);
  v6[v9[9]] = *(unsigned char *)(v7 + v9[9]);
  v6[v9[10]] = *(unsigned char *)(v7 + v9[10]);
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for ModelXPCRequest.ExecuteRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *((void *)v7 + 1) = *(void *)(a2 + v6 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for RequestMetadata(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = (char *)(v8 + v10);
  uint64_t v13 = sub_256CEDE28();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v13);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v13);
  if (!v21)
  {
    uint64_t v23 = *(void *)(v13 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v13);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v13);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v19, v20, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v13);
LABEL_13:
  uint64_t v25 = v9[6];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = v8 + v25;
  uint64_t v28 = sub_256CEDB08();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 24);
  v29(v26, v27, v28);
  v29(&v7[v9[7]], v8 + v9[7], v28);
  *(void *)&v7[v9[8]] = *(void *)(v8 + v9[8]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  v7[v9[9]] = *(unsigned char *)(v8 + v9[9]);
  v7[v9[10]] = *(unsigned char *)(v8 + v9[10]);
  return a1;
}

uint64_t initializeWithTake for ModelXPCRequest.ExecuteRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)(a1 + v4) = *(_OWORD *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for RequestMetadata(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)(v5 + v8);
  uint64_t v10 = (char *)(v6 + v8);
  uint64_t v11 = sub_256CEDE28();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v14 = &v9[v13];
  int v15 = &v10[v13];
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v11))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v14, v15, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v11);
  }
  uint64_t v17 = v7[6];
  uint64_t v18 = v5 + v17;
  uint64_t v19 = v6 + v17;
  uint64_t v20 = sub_256CEDB08();
  int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  v21(v5 + v7[7], v6 + v7[7], v20);
  *(void *)(v5 + v7[8]) = *(void *)(v6 + v7[8]);
  *(unsigned char *)(v5 + v7[9]) = *(unsigned char *)(v6 + v7[9]);
  *(unsigned char *)(v5 + v7[10]) = *(unsigned char *)(v6 + v7[10]);
  return a1;
}

uint64_t assignWithTake for ModelXPCRequest.ExecuteRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *((void *)v8 + 1) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for RequestMetadata(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = (char *)(v9 + v12);
  uint64_t v15 = sub_256CEDE28();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = *(int *)(type metadata accessor for ClientData(0) + 20);
  int v21 = &v13[v20];
  int v22 = &v14[v20];
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v15);
  int v24 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v15);
  if (!v23)
  {
    uint64_t v25 = *(void *)(v15 - 8);
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v21, v22, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v15);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v21, v22, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v15);
LABEL_13:
  uint64_t v27 = v11[6];
  uint64_t v28 = &v8[v27];
  uint64_t v29 = v9 + v27;
  uint64_t v30 = sub_256CEDB08();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40);
  v31(v28, v29, v30);
  v31(&v8[v11[7]], v9 + v11[7], v30);
  *(void *)&v8[v11[8]] = *(void *)(v9 + v11[8]);
  swift_bridgeObjectRelease();
  v8[v11[9]] = *(unsigned char *)(v9 + v11[9]);
  v8[v11[10]] = *(unsigned char *)(v9 + v11[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.ExecuteRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CB74E4);
}

uint64_t sub_256CB74E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for RequestMetadata(0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.ExecuteRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CB7580);
}

void sub_256CB7580()
{
  OUTLINED_FUNCTION_50_5();
  if (v3 == 0x7FFFFFFF)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = type metadata accessor for RequestMetadata(0);
    uint64_t v6 = v1 + *(int *)(v4 + 24);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

uint64_t sub_256CB75FC()
{
  uint64_t result = type metadata accessor for RequestMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelXPCRequest.ExecuteRequest.Response(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for InferenceProviderRequestResult(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_256CEDD58();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(v8 + 24);
    uint64_t v16 = (char *)a1 + v15;
    int v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for ClientData(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v20))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v20);
      }
      uint64_t v22 = *(int *)(v18 + 20);
      int v23 = &v16[v22];
      int v24 = &v17[v22];
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v20))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v24, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v20);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v26 = *(int *)(a3 + 20);
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    uint64_t v30 = *((void *)v28 + 3);
    *((void *)v27 + 2) = *((void *)v28 + 2);
    *((void *)v27 + 3) = v30;
    v27[32] = v28[32];
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  return a1;
}

uint64_t destroy for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1)
{
  uint64_t v2 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for InferenceProviderRequestResult(0);
  uint64_t v4 = a1 + *(int *)(v3 + 20);
  uint64_t v5 = sub_256CEDD58();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(v3 + 24);
  uint64_t v7 = type metadata accessor for ClientData(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    uint64_t v8 = sub_256CEDE28();
    if (!__swift_getEnumTagSinglePayload(v6, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    }
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    if (!__swift_getEnumTagSinglePayload(v9, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v9, v8);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for InferenceProviderRequestResult(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_256CEDD58();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(v7 + 24);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_256CEDE28();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v18))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v14, v15, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
    }
    uint64_t v20 = *(int *)(v16 + 20);
    uint64_t v21 = &v14[v20];
    uint64_t v22 = &v15[v20];
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v18))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v22, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v18);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(v26 + 8);
  *(void *)uint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = v27;
  uint64_t v28 = *(void *)(v26 + 24);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(void *)(v25 + 24) = v28;
  *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for InferenceProviderRequestResult(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_256CEDD58();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = *(int *)(v7 + 24);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for ClientData(0);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19);
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      uint64_t v22 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v22))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v22);
      }
      uint64_t v30 = *(int *)(v19 + 20);
      uint64_t v31 = &v17[v30];
      uint64_t v32 = &v18[v30];
      if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v22))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v31, v32, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v22);
      }
      uint64_t v34 = (uint64_t)v17;
      uint64_t v35 = v19;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  if (v21)
  {
    sub_256CA66BC();
LABEL_13:
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228) - 8) + 64);
    uint64_t v25 = v17;
    uint64_t v26 = v18;
    goto LABEL_14;
  }
  uint64_t v27 = sub_256CEDE28();
  int v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v27);
  int v29 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v27);
  if (!v28)
  {
    uint64_t v40 = *(void *)(v27 - 8);
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 24))(v17, v18, v27);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v27);
    goto LABEL_28;
  }
  if (v29)
  {
LABEL_28:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v17, v18, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v17, v18, v27);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v27);
LABEL_29:
  uint64_t v42 = *(int *)(v19 + 20);
  uint64_t v43 = (uint64_t)&v17[v42];
  uint64_t v44 = (uint64_t)&v18[v42];
  int v45 = __swift_getEnumTagSinglePayload(v43, 1, v27);
  int v46 = __swift_getEnumTagSinglePayload(v44, 1, v27);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v43, v44, v27);
      uint64_t v34 = v43;
      uint64_t v35 = v27;
LABEL_24:
      __swift_storeEnumTagSinglePayload(v34, 0, 1, v35);
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v47 = *(void *)(v27 - 8);
    if (!v46)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 24))(v43, v44, v27);
      goto LABEL_25;
    }
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v43, v27);
  }
  size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000) - 8) + 64);
  uint64_t v25 = (void *)v43;
  uint64_t v26 = (const void *)v44;
LABEL_14:
  memcpy(v25, v26, v24);
LABEL_25:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)uint64_t v37 = *(void *)(a2 + v36);
  *(void *)(v37 + 8) = *(void *)(a2 + v36 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(v37 + 16) = *(void *)(v38 + 16);
  *(void *)(v37 + 24) = *(void *)(v38 + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v37 + 32) = *(unsigned char *)(v38 + 32);
  return a1;
}

uint64_t initializeWithTake for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for InferenceProviderRequestResult(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_256CEDD58();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = *(int *)(v7 + 24);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_256CEDE28();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v18))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v14, v15, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
    }
    uint64_t v20 = *(int *)(v16 + 20);
    int v21 = &v14[v20];
    uint64_t v22 = &v15[v20];
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v18))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v21, v22, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v18);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
  return a1;
}

uint64_t assignWithTake for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for InferenceProviderRequestResult(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_256CEDD58();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = *(int *)(v7 + 24);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for ClientData(0);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19);
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      uint64_t v22 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v22))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v17, v18, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v22);
      }
      uint64_t v30 = *(int *)(v19 + 20);
      uint64_t v31 = &v17[v30];
      uint64_t v32 = &v18[v30];
      if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v22))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v31, v32, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v22);
      }
      uint64_t v34 = (uint64_t)v17;
      uint64_t v35 = v19;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  if (v21)
  {
    sub_256CA66BC();
LABEL_13:
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228) - 8) + 64);
    uint64_t v25 = v17;
    uint64_t v26 = v18;
    goto LABEL_14;
  }
  uint64_t v27 = sub_256CEDE28();
  int v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v27);
  int v29 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v27);
  if (!v28)
  {
    uint64_t v42 = *(void *)(v27 - 8);
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v17, v18, v27);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v27);
    goto LABEL_28;
  }
  if (v29)
  {
LABEL_28:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v17, v18, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v17, v18, v27);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v27);
LABEL_29:
  uint64_t v44 = *(int *)(v19 + 20);
  uint64_t v45 = (uint64_t)&v17[v44];
  uint64_t v46 = (uint64_t)&v18[v44];
  int v47 = __swift_getEnumTagSinglePayload(v45, 1, v27);
  int v48 = __swift_getEnumTagSinglePayload(v46, 1, v27);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v45, v46, v27);
      uint64_t v34 = v45;
      uint64_t v35 = v27;
LABEL_24:
      __swift_storeEnumTagSinglePayload(v34, 0, 1, v35);
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v49 = *(void *)(v27 - 8);
    if (!v48)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 40))(v45, v46, v27);
      goto LABEL_25;
    }
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v45, v27);
  }
  size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000) - 8) + 64);
  uint64_t v25 = (void *)v45;
  uint64_t v26 = (const void *)v46;
LABEL_14:
  memcpy(v25, v26, v24);
LABEL_25:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(v38 + 8);
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v38 + 24);
  *(void *)(v37 + 16) = *(void *)(v38 + 16);
  *(void *)(v37 + 24) = v40;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v37 + 32) = *(unsigned char *)(v38 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CB8D98);
}

uint64_t sub_256CB8D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_104_1();
  type metadata accessor for InferenceProviderRequestResult(v4);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(v2, a2, v5);
  }
  else
  {
    OUTLINED_FUNCTION_85_2();
    return (v8 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CB8E24);
}

void sub_256CB8E24()
{
  uint64_t v4 = OUTLINED_FUNCTION_99_3();
  type metadata accessor for InferenceProviderRequestResult(v4);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_30_1();
    __swift_storeEnumTagSinglePayload(v6, v7, v8, v9);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20) + 8) = (v0 - 1);
  }
}

uint64_t sub_256CB8E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CB8EB4(a1, a2, a3, type metadata accessor for InferenceProviderRequestResult);
}

uint64_t sub_256CB8EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelXPCRequest.CancelRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for ModelXPCRequest.CancelRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for ModelXPCRequest.CancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for ModelXPCRequest.CancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for ModelXPCRequest.CancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for ModelXPCRequest.CancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.CancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CB9344);
}

uint64_t sub_256CB9344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    uint64_t v9 = v4 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v9, v3, v8);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.CancelRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CB93D8);
}

uint64_t sub_256CB93D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    uint64_t v11 = v5 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v11, v4, v4, v10);
}

uint64_t sub_256CB9460()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ModelXPCRequest.CancelRequest.Response()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelXPCRequest.AcquireRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Assertion.DaemonRep(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    a1[4] = a2[4];
    uint64_t v9 = *(int *)(v4 + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_256CEDB08();
    int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_256CEDEC8();
    sub_256CEDEC8();
    v13(v10, v11, v12);
    *(_DWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(v6 + 32));
  }
  return a1;
}

uint64_t destroy for ModelXPCRequest.AcquireRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Assertion.DaemonRep(0) + 28);
  uint64_t v3 = sub_256CEDB08();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *initializeWithCopy for ModelXPCRequest.AcquireRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  v11(v8, v9, v10);
  *(_DWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(v6 + 32));
  return a1;
}

void *assignWithCopy for ModelXPCRequest.AcquireRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v4 = type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v5 = *(int *)(v4 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(_DWORD *)((char *)a1 + *(int *)(v4 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(v4 + 32));
  return a1;
}

uint64_t initializeWithTake for ModelXPCRequest.AcquireRequest(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v6 = *(int *)(v5 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_DWORD *)(a1 + *(int *)(v5 + 32)) = *(_DWORD *)(a2 + *(int *)(v5 + 32));
  return a1;
}

void *assignWithTake for ModelXPCRequest.AcquireRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(_DWORD *)((char *)a1 + *(int *)(v6 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(v6 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.AcquireRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CB99D0);
}

uint64_t sub_256CB99D0()
{
  type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v0 = OUTLINED_FUNCTION_62_6();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.AcquireRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CB9A24);
}

uint64_t sub_256CB9A24()
{
  type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v0 = OUTLINED_FUNCTION_30_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_256CB9A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CBA2BC(a1, a2, a3, type metadata accessor for Assertion.DaemonRep);
}

void type metadata accessor for ModelXPCRequest.AcquireRequest.Response()
{
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.ReleaseRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CB9A9C);
}

uint64_t sub_256CB9A9C()
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  uint64_t v0 = OUTLINED_FUNCTION_62_6();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.ReleaseRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CB9AF0);
}

uint64_t sub_256CB9AF0()
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  uint64_t v0 = OUTLINED_FUNCTION_30_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void type metadata accessor for ModelXPCRequest.ReleaseRequest.Response()
{
}

void type metadata accessor for ModelXPCRequest.FetchAssertionsRequest()
{
}

void type metadata accessor for ModelXPCRequest.FetchAssertionsRequest.Response()
{
}

void type metadata accessor for ModelXPCRequest.RestoreAssertionsRequest()
{
}

void type metadata accessor for ModelXPCRequest.RestoreAssertionsRequest.Response()
{
}

void type metadata accessor for ModelXPCRequest.FetchAssetsRequest()
{
}

void type metadata accessor for ModelXPCRequest.FetchAssetsRequest.Response()
{
}

void type metadata accessor for ModelXPCRequest.FetchDynamicAssetsRequest()
{
}

void type metadata accessor for ModelXPCRequest.FetchDynamicAssetsRequest.Response()
{
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.FetchPolicyRequest(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.FetchPolicyRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for ModelXPCRequest.FetchPolicyRequest()
{
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.FetchPolicyRequest.Response(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && a1[40])
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      if (*a1 <= 2u) {
        int v3 = 2;
      }
      else {
        int v3 = *a1;
      }
      int v4 = v3 - 3;
      if (*a1 < 2u) {
        int v2 = -1;
      }
      else {
        int v2 = v4;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.FetchPolicyRequest.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

void type metadata accessor for ModelXPCRequest.FetchPolicyRequest.Response()
{
}

uint64_t sub_256CB9CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for ModelXPCRequest.LoadAssetBundle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ModelXPCRequest.LoadAssetBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.LoadAssetBundle(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.LoadAssetBundle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ModelXPCRequest.LoadAssetBundle()
{
}

void type metadata accessor for ModelXPCRequest.LoadAssetBundle.Response()
{
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.HoldAssetBundle(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.HoldAssetBundle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ModelXPCRequest.HoldAssetBundle()
{
}

void type metadata accessor for ModelXPCRequest.HoldAssetBundle.Response()
{
}

void type metadata accessor for ModelXPCRequest.ForceAssetVersionSwitch()
{
}

void type metadata accessor for ModelXPCRequest.ForceAssetVersionSwitch.Response()
{
}

void type metadata accessor for ModelXPCRequest.DumpState()
{
}

void type metadata accessor for ModelXPCRequest.DumpState.Response()
{
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.FetchModelInstance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CBDE6C);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.FetchModelInstance(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CBDE7C);
}

void type metadata accessor for ModelXPCRequest.FetchModelInstance.Response()
{
}

void type metadata accessor for ModelXPCRequest.SetAssetsHaveUpdated()
{
}

void type metadata accessor for ModelXPCRequest.SetAssetsHaveUpdated.Response()
{
}

uint64_t initializeBufferWithCopyOfBuffer for ModelXPCRequest.StartMonitoringInferences()
{
  return sub_256CB9F9C();
}

uint64_t sub_256CB9F9C()
{
  uint64_t v2 = OUTLINED_FUNCTION_48_8();
  v3(v2);
  OUTLINED_FUNCTION_10();
  uint64_t v6 = *v5;
  return v6(v1, v0, v4);
}

uint64_t destroy for ModelXPCRequest.StartMonitoringInferences()
{
  return sub_256CBA010();
}

uint64_t sub_256CBA010()
{
  uint64_t v1 = OUTLINED_FUNCTION_104_1();
  v2(v1);
  OUTLINED_FUNCTION_10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  return v5(v0, v3);
}

uint64_t initializeWithCopy for ModelXPCRequest.StartMonitoringInferences()
{
  return sub_256CBA084();
}

uint64_t sub_256CBA084()
{
  uint64_t v1 = OUTLINED_FUNCTION_48_8();
  v2(v1);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_48_5();
  v4(v3);
  return v0;
}

uint64_t assignWithCopy for ModelXPCRequest.StartMonitoringInferences()
{
  return sub_256CBA0E8();
}

uint64_t sub_256CBA0E8()
{
  uint64_t v1 = OUTLINED_FUNCTION_48_8();
  v2(v1);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_48_5();
  v4(v3);
  return v0;
}

uint64_t initializeWithTake for ModelXPCRequest.StartMonitoringInferences()
{
  return sub_256CBA14C();
}

uint64_t sub_256CBA14C()
{
  uint64_t v1 = OUTLINED_FUNCTION_48_8();
  v2(v1);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_48_5();
  v4(v3);
  return v0;
}

uint64_t assignWithTake for ModelXPCRequest.StartMonitoringInferences()
{
  return sub_256CBA1B0();
}

uint64_t sub_256CBA1B0()
{
  uint64_t v1 = OUTLINED_FUNCTION_48_8();
  v2(v1);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_48_5();
  v4(v3);
  return v0;
}

uint64_t getEnumTagSinglePayload for ModelXPCRequest.StartMonitoringInferences(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CBA210);
}

uint64_t sub_256CBA210()
{
  sub_256CEDD58();
  uint64_t v0 = OUTLINED_FUNCTION_62_6();
  return __swift_getEnumTagSinglePayload(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ModelXPCRequest.StartMonitoringInferences(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CBA264);
}

uint64_t sub_256CBA264()
{
  sub_256CEDD58();
  uint64_t v0 = OUTLINED_FUNCTION_30_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_256CBA2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256CBA2BC(a1, a2, a3, MEMORY[0x263F8F3E0]);
}

uint64_t sub_256CBA2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ModelXPCRequest.StartMonitoringInferences.Response()
{
}

ValueMetadata *type metadata accessor for ModelXPCRequest.StartMonitoringInferences.CodingKeys()
{
  return &type metadata for ModelXPCRequest.StartMonitoringInferences.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.StartMonitoringInferences.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.StartMonitoringInferences.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.SetAssetsHaveUpdated.CodingKeys()
{
  return &type metadata for ModelXPCRequest.SetAssetsHaveUpdated.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.SetAssetsHaveUpdated.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.SetAssetsHaveUpdated.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchModelInstance.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchModelInstance.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchModelInstance.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchModelInstance.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.DumpState.CodingKeys()
{
  return &type metadata for ModelXPCRequest.DumpState.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.DumpState.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.DumpState.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ForceAssetVersionSwitch.CodingKeys()
{
  return &type metadata for ModelXPCRequest.ForceAssetVersionSwitch.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ForceAssetVersionSwitch.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.ForceAssetVersionSwitch.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.HoldAssetBundle.CodingKeys()
{
  return &type metadata for ModelXPCRequest.HoldAssetBundle.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.HoldAssetBundle.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.HoldAssetBundle.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.LoadAssetBundle.CodingKeys()
{
  return &type metadata for ModelXPCRequest.LoadAssetBundle.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.LoadAssetBundle.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.LoadAssetBundle.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchPolicyRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchPolicyRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchPolicyRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchPolicyRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchDynamicAssetsRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchDynamicAssetsRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchDynamicAssetsRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchDynamicAssetsRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchAssetsRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchAssetsRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchAssetsRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchAssetsRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.RestoreAssertionsRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.RestoreAssertionsRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.RestoreAssertionsRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.RestoreAssertionsRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchAssertionsRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchAssertionsRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchAssertionsRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchAssertionsRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ReleaseRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.ReleaseRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ReleaseRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.ReleaseRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.AcquireRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.AcquireRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.AcquireRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.AcquireRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CancelRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.CancelRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CancelRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.CancelRequest.Response.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ModelXPCRequest.ExecuteRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256CBA60CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ExecuteRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.ExecuteRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ExecuteRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.ExecuteRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CancelSessionRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.CancelSessionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CancelSessionRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.CancelSessionRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.PrewarmSession.CodingKeys()
{
  return &type metadata for ModelXPCRequest.PrewarmSession.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.PrewarmSession.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.PrewarmSession.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.DeleteSessionRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.DeleteSessionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.DeleteSessionRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.DeleteSessionRequest.Response.CodingKeys;
}

unsigned char *_s20ModelManagerServices15ModelXPCRequestO15LoadAssetBundleV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256CBA780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CreateSessionRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.CreateSessionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response.CodingKeys()
{
  return &type metadata for ModelXPCRequest.CreateSessionRequest.Response.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ModelXPCRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256CBA894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CodingKeys()
{
  return &type metadata for ModelXPCRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ExecuteRequestCodingKeys()
{
  return &type metadata for ModelXPCRequest.ExecuteRequestCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CancelRequestCodingKeys()
{
  return &type metadata for ModelXPCRequest.CancelRequestCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CreateSessionCodingKeys()
{
  return &type metadata for ModelXPCRequest.CreateSessionCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.DeleteSessionCodingKeys()
{
  return &type metadata for ModelXPCRequest.DeleteSessionCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.PrewarmSessionCodingKeys()
{
  return &type metadata for ModelXPCRequest.PrewarmSessionCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.CancelSessionCodingKeys()
{
  return &type metadata for ModelXPCRequest.CancelSessionCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.AcquireAssertionCodingKeys()
{
  return &type metadata for ModelXPCRequest.AcquireAssertionCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ReleaseAssertionCodingKeys()
{
  return &type metadata for ModelXPCRequest.ReleaseAssertionCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchAssertionsCodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchAssertionsCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.RestoreAssertionsCodingKeys()
{
  return &type metadata for ModelXPCRequest.RestoreAssertionsCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchAssetsCodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchAssetsCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchDynamicAssetsCodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchDynamicAssetsCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchPolicyCodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchPolicyCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.LoadAssetBundleCodingKeys()
{
  return &type metadata for ModelXPCRequest.LoadAssetBundleCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.HoldAssetBundleCodingKeys()
{
  return &type metadata for ModelXPCRequest.HoldAssetBundleCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.ForceAssetVersionSwitchCodingKeys()
{
  return &type metadata for ModelXPCRequest.ForceAssetVersionSwitchCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.DumpStateCodingKeys()
{
  return &type metadata for ModelXPCRequest.DumpStateCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.FetchModelInstanceCodingKeys()
{
  return &type metadata for ModelXPCRequest.FetchModelInstanceCodingKeys;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.SetAssetsHaveUpdatedCodingKeys()
{
  return &type metadata for ModelXPCRequest.SetAssetsHaveUpdatedCodingKeys;
}

unsigned char *_s20ModelManagerServices15ModelXPCRequestO25StartMonitoringInferencesV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256CBAA98);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelXPCRequest.StartMonitoringInferencesCodingKeys()
{
  return &type metadata for ModelXPCRequest.StartMonitoringInferencesCodingKeys;
}

unint64_t sub_256CBAAD4()
{
  unint64_t result = qword_269FC5258;
  if (!qword_269FC5258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5258);
  }
  return result;
}

unint64_t sub_256CBAB24()
{
  unint64_t result = qword_269FC5260;
  if (!qword_269FC5260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5260);
  }
  return result;
}

unint64_t sub_256CBAB74()
{
  unint64_t result = qword_269FC5268;
  if (!qword_269FC5268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5268);
  }
  return result;
}

unint64_t sub_256CBABC4()
{
  unint64_t result = qword_269FC5270;
  if (!qword_269FC5270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5270);
  }
  return result;
}

unint64_t sub_256CBAC14()
{
  unint64_t result = qword_269FC5278;
  if (!qword_269FC5278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5278);
  }
  return result;
}

unint64_t sub_256CBAC64()
{
  unint64_t result = qword_269FC5280;
  if (!qword_269FC5280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5280);
  }
  return result;
}

unint64_t sub_256CBACB4()
{
  unint64_t result = qword_269FC5288;
  if (!qword_269FC5288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5288);
  }
  return result;
}

unint64_t sub_256CBAD04()
{
  unint64_t result = qword_269FC5290;
  if (!qword_269FC5290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5290);
  }
  return result;
}

unint64_t sub_256CBAD54()
{
  unint64_t result = qword_269FC5298;
  if (!qword_269FC5298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5298);
  }
  return result;
}

unint64_t sub_256CBADA4()
{
  unint64_t result = qword_269FC52A0;
  if (!qword_269FC52A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52A0);
  }
  return result;
}

unint64_t sub_256CBADF4()
{
  unint64_t result = qword_269FC52A8;
  if (!qword_269FC52A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52A8);
  }
  return result;
}

unint64_t sub_256CBAE44()
{
  unint64_t result = qword_269FC52B0;
  if (!qword_269FC52B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52B0);
  }
  return result;
}

unint64_t sub_256CBAE94()
{
  unint64_t result = qword_269FC52B8;
  if (!qword_269FC52B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52B8);
  }
  return result;
}

unint64_t sub_256CBAEE4()
{
  unint64_t result = qword_269FC52C0;
  if (!qword_269FC52C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52C0);
  }
  return result;
}

unint64_t sub_256CBAF34()
{
  unint64_t result = qword_269FC52C8;
  if (!qword_269FC52C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52C8);
  }
  return result;
}

unint64_t sub_256CBAF84()
{
  unint64_t result = qword_269FC52D0;
  if (!qword_269FC52D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52D0);
  }
  return result;
}

unint64_t sub_256CBAFD4()
{
  unint64_t result = qword_269FC52D8;
  if (!qword_269FC52D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52D8);
  }
  return result;
}

unint64_t sub_256CBB024()
{
  unint64_t result = qword_269FC52E0;
  if (!qword_269FC52E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52E0);
  }
  return result;
}

unint64_t sub_256CBB074()
{
  unint64_t result = qword_269FC52E8;
  if (!qword_269FC52E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52E8);
  }
  return result;
}

unint64_t sub_256CBB0C4()
{
  unint64_t result = qword_269FC52F0;
  if (!qword_269FC52F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52F0);
  }
  return result;
}

unint64_t sub_256CBB114()
{
  unint64_t result = qword_269FC52F8;
  if (!qword_269FC52F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC52F8);
  }
  return result;
}

unint64_t sub_256CBB164()
{
  unint64_t result = qword_269FC5300;
  if (!qword_269FC5300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5300);
  }
  return result;
}

unint64_t sub_256CBB1B4()
{
  unint64_t result = qword_269FC5308;
  if (!qword_269FC5308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5308);
  }
  return result;
}

unint64_t sub_256CBB204()
{
  unint64_t result = qword_269FC5310;
  if (!qword_269FC5310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5310);
  }
  return result;
}

unint64_t sub_256CBB254()
{
  unint64_t result = qword_269FC5318;
  if (!qword_269FC5318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5318);
  }
  return result;
}

unint64_t sub_256CBB2A4()
{
  unint64_t result = qword_269FC5320;
  if (!qword_269FC5320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5320);
  }
  return result;
}

unint64_t sub_256CBB2F4()
{
  unint64_t result = qword_269FC5328;
  if (!qword_269FC5328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5328);
  }
  return result;
}

unint64_t sub_256CBB344()
{
  unint64_t result = qword_269FC5330;
  if (!qword_269FC5330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5330);
  }
  return result;
}

unint64_t sub_256CBB394()
{
  unint64_t result = qword_269FC5338;
  if (!qword_269FC5338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5338);
  }
  return result;
}

unint64_t sub_256CBB3E4()
{
  unint64_t result = qword_269FC5340;
  if (!qword_269FC5340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5340);
  }
  return result;
}

unint64_t sub_256CBB434()
{
  unint64_t result = qword_269FC5348;
  if (!qword_269FC5348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5348);
  }
  return result;
}

unint64_t sub_256CBB484()
{
  unint64_t result = qword_269FC5350;
  if (!qword_269FC5350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5350);
  }
  return result;
}

unint64_t sub_256CBB4D4()
{
  unint64_t result = qword_269FC5358;
  if (!qword_269FC5358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5358);
  }
  return result;
}

unint64_t sub_256CBB524()
{
  unint64_t result = qword_269FC5360;
  if (!qword_269FC5360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5360);
  }
  return result;
}

unint64_t sub_256CBB574()
{
  unint64_t result = qword_269FC5368;
  if (!qword_269FC5368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5368);
  }
  return result;
}

unint64_t sub_256CBB5C4()
{
  unint64_t result = qword_269FC5370;
  if (!qword_269FC5370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5370);
  }
  return result;
}

unint64_t sub_256CBB614()
{
  unint64_t result = qword_269FC5378;
  if (!qword_269FC5378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5378);
  }
  return result;
}

unint64_t sub_256CBB664()
{
  unint64_t result = qword_269FC5380;
  if (!qword_269FC5380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5380);
  }
  return result;
}

unint64_t sub_256CBB6B4()
{
  unint64_t result = qword_269FC5388;
  if (!qword_269FC5388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5388);
  }
  return result;
}

unint64_t sub_256CBB704()
{
  unint64_t result = qword_269FC5390;
  if (!qword_269FC5390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5390);
  }
  return result;
}

unint64_t sub_256CBB754()
{
  unint64_t result = qword_269FC5398;
  if (!qword_269FC5398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5398);
  }
  return result;
}

unint64_t sub_256CBB7A4()
{
  unint64_t result = qword_269FC53A0;
  if (!qword_269FC53A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53A0);
  }
  return result;
}

unint64_t sub_256CBB7F4()
{
  unint64_t result = qword_269FC53A8;
  if (!qword_269FC53A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53A8);
  }
  return result;
}

unint64_t sub_256CBB844()
{
  unint64_t result = qword_26B2C79B8;
  if (!qword_26B2C79B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79B8);
  }
  return result;
}

unint64_t sub_256CBB894()
{
  unint64_t result = qword_26B2C79B0;
  if (!qword_26B2C79B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79B0);
  }
  return result;
}

unint64_t sub_256CBB8E4()
{
  unint64_t result = qword_26B2C54A0;
  if (!qword_26B2C54A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C54A0);
  }
  return result;
}

unint64_t sub_256CBB934()
{
  unint64_t result = qword_26B2C5498;
  if (!qword_26B2C5498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5498);
  }
  return result;
}

unint64_t sub_256CBB984()
{
  unint64_t result = qword_269FC53B0;
  if (!qword_269FC53B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53B0);
  }
  return result;
}

unint64_t sub_256CBB9D4()
{
  unint64_t result = qword_269FC53B8;
  if (!qword_269FC53B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53B8);
  }
  return result;
}

unint64_t sub_256CBBA24()
{
  unint64_t result = qword_269FC53C0;
  if (!qword_269FC53C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53C0);
  }
  return result;
}

unint64_t sub_256CBBA74()
{
  unint64_t result = qword_269FC53C8;
  if (!qword_269FC53C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53C8);
  }
  return result;
}

unint64_t sub_256CBBAC4()
{
  unint64_t result = qword_269FC53D0;
  if (!qword_269FC53D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53D0);
  }
  return result;
}

unint64_t sub_256CBBB14()
{
  unint64_t result = qword_269FC53D8;
  if (!qword_269FC53D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53D8);
  }
  return result;
}

unint64_t sub_256CBBB64()
{
  unint64_t result = qword_269FC53E0;
  if (!qword_269FC53E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53E0);
  }
  return result;
}

unint64_t sub_256CBBBB4()
{
  unint64_t result = qword_269FC53E8;
  if (!qword_269FC53E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53E8);
  }
  return result;
}

unint64_t sub_256CBBC04()
{
  unint64_t result = qword_269FC53F0;
  if (!qword_269FC53F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53F0);
  }
  return result;
}

unint64_t sub_256CBBC54()
{
  unint64_t result = qword_269FC53F8;
  if (!qword_269FC53F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC53F8);
  }
  return result;
}

unint64_t sub_256CBBCA4()
{
  unint64_t result = qword_26B2C49A0;
  if (!qword_26B2C49A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C49A0);
  }
  return result;
}

unint64_t sub_256CBBCF4()
{
  unint64_t result = qword_26B2C4998;
  if (!qword_26B2C4998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4998);
  }
  return result;
}

unint64_t sub_256CBBD44()
{
  unint64_t result = qword_269FC5400;
  if (!qword_269FC5400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5400);
  }
  return result;
}

unint64_t sub_256CBBD94()
{
  unint64_t result = qword_269FC5408;
  if (!qword_269FC5408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5408);
  }
  return result;
}

unint64_t sub_256CBBDE4()
{
  unint64_t result = qword_269FC5410;
  if (!qword_269FC5410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5410);
  }
  return result;
}

unint64_t sub_256CBBE34()
{
  unint64_t result = qword_269FC5418;
  if (!qword_269FC5418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5418);
  }
  return result;
}

unint64_t sub_256CBBE84()
{
  unint64_t result = qword_269FC5420;
  if (!qword_269FC5420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5420);
  }
  return result;
}

unint64_t sub_256CBBED4()
{
  unint64_t result = qword_269FC5428;
  if (!qword_269FC5428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5428);
  }
  return result;
}

unint64_t sub_256CBBF24()
{
  unint64_t result = qword_269FC5430;
  if (!qword_269FC5430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5430);
  }
  return result;
}

unint64_t sub_256CBBF74()
{
  unint64_t result = qword_269FC5438;
  if (!qword_269FC5438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5438);
  }
  return result;
}

unint64_t sub_256CBBFC4()
{
  unint64_t result = qword_269FC5440;
  if (!qword_269FC5440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5440);
  }
  return result;
}

unint64_t sub_256CBC014()
{
  unint64_t result = qword_269FC5448;
  if (!qword_269FC5448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5448);
  }
  return result;
}

unint64_t sub_256CBC064()
{
  unint64_t result = qword_269FC5450;
  if (!qword_269FC5450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5450);
  }
  return result;
}

unint64_t sub_256CBC0B4()
{
  unint64_t result = qword_269FC5458;
  if (!qword_269FC5458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5458);
  }
  return result;
}

unint64_t sub_256CBC104()
{
  unint64_t result = qword_269FC5460;
  if (!qword_269FC5460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5460);
  }
  return result;
}

unint64_t sub_256CBC154()
{
  unint64_t result = qword_269FC5468;
  if (!qword_269FC5468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5468);
  }
  return result;
}

unint64_t sub_256CBC1A4()
{
  unint64_t result = qword_269FC5470;
  if (!qword_269FC5470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5470);
  }
  return result;
}

unint64_t sub_256CBC1F4()
{
  unint64_t result = qword_269FC5478;
  if (!qword_269FC5478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5478);
  }
  return result;
}

unint64_t sub_256CBC244()
{
  unint64_t result = qword_269FC5480;
  if (!qword_269FC5480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5480);
  }
  return result;
}

unint64_t sub_256CBC294()
{
  unint64_t result = qword_269FC5488;
  if (!qword_269FC5488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5488);
  }
  return result;
}

unint64_t sub_256CBC2E4()
{
  unint64_t result = qword_269FC5490;
  if (!qword_269FC5490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5490);
  }
  return result;
}

unint64_t sub_256CBC334()
{
  unint64_t result = qword_269FC5498;
  if (!qword_269FC5498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5498);
  }
  return result;
}

unint64_t sub_256CBC384()
{
  unint64_t result = qword_26B2C7B98;
  if (!qword_26B2C7B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7B98);
  }
  return result;
}

unint64_t sub_256CBC3D4()
{
  unint64_t result = qword_26B2C7B90;
  if (!qword_26B2C7B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7B90);
  }
  return result;
}

unint64_t sub_256CBC424()
{
  unint64_t result = qword_26B2C7E20;
  if (!qword_26B2C7E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7E20);
  }
  return result;
}

unint64_t sub_256CBC474()
{
  unint64_t result = qword_26B2C7E18;
  if (!qword_26B2C7E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7E18);
  }
  return result;
}

unint64_t sub_256CBC4C4()
{
  unint64_t result = qword_269FC54A0;
  if (!qword_269FC54A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54A0);
  }
  return result;
}

unint64_t sub_256CBC514()
{
  unint64_t result = qword_269FC54A8;
  if (!qword_269FC54A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54A8);
  }
  return result;
}

unint64_t sub_256CBC564()
{
  unint64_t result = qword_269FC54B0;
  if (!qword_269FC54B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54B0);
  }
  return result;
}

unint64_t sub_256CBC5B4()
{
  unint64_t result = qword_269FC54B8;
  if (!qword_269FC54B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54B8);
  }
  return result;
}

unint64_t sub_256CBC604()
{
  unint64_t result = qword_269FC54C0;
  if (!qword_269FC54C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54C0);
  }
  return result;
}

unint64_t sub_256CBC654()
{
  unint64_t result = qword_269FC54C8;
  if (!qword_269FC54C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54C8);
  }
  return result;
}

unint64_t sub_256CBC6A4()
{
  unint64_t result = qword_269FC54D0;
  if (!qword_269FC54D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54D0);
  }
  return result;
}

unint64_t sub_256CBC6F4()
{
  unint64_t result = qword_269FC54D8;
  if (!qword_269FC54D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54D8);
  }
  return result;
}

unint64_t sub_256CBC744()
{
  unint64_t result = qword_26B2C8318;
  if (!qword_26B2C8318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8318);
  }
  return result;
}

unint64_t sub_256CBC794()
{
  unint64_t result = qword_26B2C8310;
  if (!qword_26B2C8310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8310);
  }
  return result;
}

unint64_t sub_256CBC7E4()
{
  unint64_t result = qword_26B2C4970;
  if (!qword_26B2C4970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4970);
  }
  return result;
}

unint64_t sub_256CBC834()
{
  unint64_t result = qword_26B2C4968;
  if (!qword_26B2C4968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4968);
  }
  return result;
}

unint64_t sub_256CBC884()
{
  unint64_t result = qword_26B2C86A0;
  if (!qword_26B2C86A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C86A0);
  }
  return result;
}

unint64_t sub_256CBC8D4()
{
  unint64_t result = qword_26B2C8698;
  if (!qword_26B2C8698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8698);
  }
  return result;
}

unint64_t sub_256CBC924()
{
  unint64_t result = qword_26B2C4950;
  if (!qword_26B2C4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4950);
  }
  return result;
}

unint64_t sub_256CBC974()
{
  unint64_t result = qword_26B2C4948;
  if (!qword_26B2C4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4948);
  }
  return result;
}

unint64_t sub_256CBC9C4()
{
  unint64_t result = qword_269FC54E0;
  if (!qword_269FC54E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54E0);
  }
  return result;
}

unint64_t sub_256CBCA14()
{
  unint64_t result = qword_269FC54E8;
  if (!qword_269FC54E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54E8);
  }
  return result;
}

unint64_t sub_256CBCA64()
{
  unint64_t result = qword_269FC54F0;
  if (!qword_269FC54F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54F0);
  }
  return result;
}

unint64_t sub_256CBCAB4()
{
  unint64_t result = qword_269FC54F8;
  if (!qword_269FC54F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC54F8);
  }
  return result;
}

unint64_t sub_256CBCB04()
{
  unint64_t result = qword_269FC5500;
  if (!qword_269FC5500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5500);
  }
  return result;
}

unint64_t sub_256CBCB54()
{
  unint64_t result = qword_269FC5508;
  if (!qword_269FC5508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5508);
  }
  return result;
}

unint64_t sub_256CBCBA4()
{
  unint64_t result = qword_269FC5510;
  if (!qword_269FC5510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5510);
  }
  return result;
}

unint64_t sub_256CBCBF4()
{
  unint64_t result = qword_269FC5518;
  if (!qword_269FC5518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5518);
  }
  return result;
}

unint64_t sub_256CBCC44()
{
  unint64_t result = qword_26B2C78F8;
  if (!qword_26B2C78F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C78F8);
  }
  return result;
}

unint64_t sub_256CBCC94()
{
  unint64_t result = qword_26B2C78F0;
  if (!qword_26B2C78F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C78F0);
  }
  return result;
}

unint64_t sub_256CBCCE4()
{
  unint64_t result = qword_26B2C5478;
  if (!qword_26B2C5478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5478);
  }
  return result;
}

unint64_t sub_256CBCD34()
{
  unint64_t result = qword_26B2C5470;
  if (!qword_26B2C5470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5470);
  }
  return result;
}

unint64_t sub_256CBCD84()
{
  unint64_t result = qword_26B2C78D0;
  if (!qword_26B2C78D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C78D0);
  }
  return result;
}

unint64_t sub_256CBCDD4()
{
  unint64_t result = qword_26B2C78C8;
  if (!qword_26B2C78C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C78C8);
  }
  return result;
}

unint64_t sub_256CBCE24()
{
  unint64_t result = qword_26B2C5458;
  if (!qword_26B2C5458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5458);
  }
  return result;
}

unint64_t sub_256CBCE74()
{
  unint64_t result = qword_26B2C5450;
  if (!qword_26B2C5450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5450);
  }
  return result;
}

unint64_t sub_256CBCEC4()
{
  unint64_t result = qword_269FC5520;
  if (!qword_269FC5520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5520);
  }
  return result;
}

unint64_t sub_256CBCF14()
{
  unint64_t result = qword_269FC5528;
  if (!qword_269FC5528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5528);
  }
  return result;
}

unint64_t sub_256CBCF64()
{
  unint64_t result = qword_269FC5530;
  if (!qword_269FC5530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5530);
  }
  return result;
}

unint64_t sub_256CBCFB4()
{
  unint64_t result = qword_269FC5538;
  if (!qword_269FC5538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5538);
  }
  return result;
}

unint64_t sub_256CBD004()
{
  unint64_t result = qword_26B2C7920;
  if (!qword_26B2C7920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7920);
  }
  return result;
}

unint64_t sub_256CBD054()
{
  unint64_t result = qword_26B2C7918;
  if (!qword_26B2C7918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7918);
  }
  return result;
}

unint64_t sub_256CBD0A4()
{
  unint64_t result = qword_26B2C7938;
  if (!qword_26B2C7938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7938);
  }
  return result;
}

unint64_t sub_256CBD0F4()
{
  unint64_t result = qword_26B2C7930;
  if (!qword_26B2C7930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7930);
  }
  return result;
}

unint64_t sub_256CBD144()
{
  unint64_t result = qword_26B2C8E68;
  if (!qword_26B2C8E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E68);
  }
  return result;
}

unint64_t sub_256CBD194()
{
  unint64_t result = qword_26B2C8E60;
  if (!qword_26B2C8E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E60);
  }
  return result;
}

unint64_t sub_256CBD1E4()
{
  unint64_t result = qword_26B2C8E28;
  if (!qword_26B2C8E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E28);
  }
  return result;
}

unint64_t sub_256CBD234()
{
  unint64_t result = qword_26B2C8E20;
  if (!qword_26B2C8E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E20);
  }
  return result;
}

unint64_t sub_256CBD284()
{
  unint64_t result = qword_26B2C8E48;
  if (!qword_26B2C8E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E48);
  }
  return result;
}

unint64_t sub_256CBD2D4()
{
  unint64_t result = qword_26B2C8E40;
  if (!qword_26B2C8E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E40);
  }
  return result;
}

unint64_t sub_256CBD324()
{
  unint64_t result = qword_26B2C8E58;
  if (!qword_26B2C8E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E58);
  }
  return result;
}

unint64_t sub_256CBD374()
{
  unint64_t result = qword_26B2C8E50;
  if (!qword_26B2C8E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E50);
  }
  return result;
}

unint64_t sub_256CBD3C4()
{
  unint64_t result = qword_26B2C8E78;
  if (!qword_26B2C8E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E78);
  }
  return result;
}

unint64_t sub_256CBD414()
{
  unint64_t result = qword_26B2C8E70;
  if (!qword_26B2C8E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E70);
  }
  return result;
}

unint64_t sub_256CBD464()
{
  unint64_t result = qword_26B2C8E38;
  if (!qword_26B2C8E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E38);
  }
  return result;
}

unint64_t sub_256CBD4B4()
{
  unint64_t result = qword_26B2C8E30;
  if (!qword_26B2C8E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E30);
  }
  return result;
}

unint64_t sub_256CBD504()
{
  unint64_t result = qword_26B2C8EB8;
  if (!qword_26B2C8EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EB8);
  }
  return result;
}

unint64_t sub_256CBD554()
{
  unint64_t result = qword_26B2C8EB0;
  if (!qword_26B2C8EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EB0);
  }
  return result;
}

unint64_t sub_256CBD5A4()
{
  unint64_t result = qword_26B2C8EC8;
  if (!qword_26B2C8EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EC8);
  }
  return result;
}

unint64_t sub_256CBD5F4()
{
  unint64_t result = qword_26B2C8EC0;
  if (!qword_26B2C8EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EC0);
  }
  return result;
}

unint64_t sub_256CBD644()
{
  unint64_t result = qword_26B2C8E88;
  if (!qword_26B2C8E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E88);
  }
  return result;
}

unint64_t sub_256CBD694()
{
  unint64_t result = qword_26B2C8E80;
  if (!qword_26B2C8E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E80);
  }
  return result;
}

unint64_t sub_256CBD6E4()
{
  unint64_t result = qword_26B2C8ED8;
  if (!qword_26B2C8ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8ED8);
  }
  return result;
}

unint64_t sub_256CBD734()
{
  unint64_t result = qword_26B2C8ED0;
  if (!qword_26B2C8ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8ED0);
  }
  return result;
}

unint64_t sub_256CBD784()
{
  unint64_t result = qword_26B2C8E08;
  if (!qword_26B2C8E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E08);
  }
  return result;
}

unint64_t sub_256CBD7D4()
{
  unint64_t result = qword_26B2C8E00;
  if (!qword_26B2C8E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E00);
  }
  return result;
}

unint64_t sub_256CBD824()
{
  unint64_t result = qword_26B2C8EE8;
  if (!qword_26B2C8EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EE8);
  }
  return result;
}

unint64_t sub_256CBD874()
{
  unint64_t result = qword_26B2C8EE0;
  if (!qword_26B2C8EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EE0);
  }
  return result;
}

unint64_t sub_256CBD8C4()
{
  unint64_t result = qword_26B2C8E18;
  if (!qword_26B2C8E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E18);
  }
  return result;
}

unint64_t sub_256CBD914()
{
  unint64_t result = qword_26B2C8E10;
  if (!qword_26B2C8E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E10);
  }
  return result;
}

unint64_t sub_256CBD964()
{
  unint64_t result = qword_26B2C8EA8;
  if (!qword_26B2C8EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EA8);
  }
  return result;
}

unint64_t sub_256CBD9B4()
{
  unint64_t result = qword_26B2C8EA0;
  if (!qword_26B2C8EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EA0);
  }
  return result;
}

unint64_t sub_256CBDA04()
{
  unint64_t result = qword_26B2C8E98;
  if (!qword_26B2C8E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E98);
  }
  return result;
}

unint64_t sub_256CBDA54()
{
  unint64_t result = qword_26B2C8E90;
  if (!qword_26B2C8E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8E90);
  }
  return result;
}

unint64_t sub_256CBDAA4()
{
  unint64_t result = qword_26B2C8F08;
  if (!qword_26B2C8F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8F08);
  }
  return result;
}

unint64_t sub_256CBDAF4()
{
  unint64_t result = qword_26B2C8F00;
  if (!qword_26B2C8F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8F00);
  }
  return result;
}

unint64_t sub_256CBDB44()
{
  unint64_t result = qword_26B2C8DD8;
  if (!qword_26B2C8DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8DD8);
  }
  return result;
}

unint64_t sub_256CBDB94()
{
  unint64_t result = qword_26B2C8DD0;
  if (!qword_26B2C8DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8DD0);
  }
  return result;
}

unint64_t sub_256CBDBE4()
{
  unint64_t result = qword_26B2C8D60;
  if (!qword_26B2C8D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8D60);
  }
  return result;
}

unint64_t sub_256CBDC34()
{
  unint64_t result = qword_26B2C8D58;
  if (!qword_26B2C8D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8D58);
  }
  return result;
}

unint64_t sub_256CBDC84()
{
  unint64_t result = qword_26B2C8EF8;
  if (!qword_26B2C8EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EF8);
  }
  return result;
}

unint64_t sub_256CBDCD4()
{
  unint64_t result = qword_26B2C8EF0;
  if (!qword_26B2C8EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8EF0);
  }
  return result;
}

unint64_t sub_256CBDD24()
{
  unint64_t result = qword_26B2C8CE0;
  if (!qword_26B2C8CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8CE0);
  }
  return result;
}

unint64_t sub_256CBDD74()
{
  unint64_t result = qword_26B2C8D50;
  if (!qword_26B2C8D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8D50);
  }
  return result;
}

unint64_t sub_256CBDDC4()
{
  unint64_t result = qword_26B2C8D78;
  if (!qword_26B2C8D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8D78);
  }
  return result;
}

unint64_t sub_256CBDE14()
{
  unint64_t result = qword_26B2C8D70;
  if (!qword_26B2C8D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8D70);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_22_8()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_42_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_62_6()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_65_5()
{
  return v0[1];
}

uint64_t OUTLINED_FUNCTION_74_2()
{
  return v0;
}

void OUTLINED_FUNCTION_82_4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_84_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_87_3()
{
  return sub_256CEE848();
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_93_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_94_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_99_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_100_1()
{
  return v0;
}

void OUTLINED_FUNCTION_102_2()
{
  *uint64_t v0 = *(void *)(v1 - 72);
}

uint64_t OUTLINED_FUNCTION_106_0()
{
  return sub_256CEDEC8();
}

uint64_t OUTLINED_FUNCTION_117_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_118()
{
  return sub_256CEE4D8();
}

unint64_t subsystemName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_256CBE100()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_26B2C8CA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8CA8);
  return sub_256CEDC78();
}

uint64_t generalLogger.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_256CEDC88();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2C8CA8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_256CBE220()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_26B2C52F8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C52F8);
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8CA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

unint64_t InferenceMonitor.Event.description.getter()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000012;
  }
}

BOOL static InferenceMonitor.Event.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t InferenceMonitor.Event.hash(into:)()
{
  return sub_256CEE7B8();
}

uint64_t sub_256CBE36C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000256D01A30 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D01A50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_256CBE458(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000011;
  }
}

unint64_t sub_256CBE494()
{
  return sub_256CBE458(*v0);
}

uint64_t sub_256CBE49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CBE36C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CBE4C4(uint64_t a1)
{
  unint64_t v2 = sub_256CBE848();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CBE500(uint64_t a1)
{
  unint64_t v2 = sub_256CBE848();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CBE53C(uint64_t a1)
{
  unint64_t v2 = sub_256CBE894();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CBE578(uint64_t a1)
{
  unint64_t v2 = sub_256CBE894();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256CBE5B4(uint64_t a1)
{
  unint64_t v2 = sub_256CBE8E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CBE5F0(uint64_t a1)
{
  unint64_t v2 = sub_256CBE8E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceMonitor.Event.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5610);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5608);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_19();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5600);
  OUTLINED_FUNCTION_5();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_19();
  uint64_t v11 = v10 - v9;
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CBE848();
  sub_256CEE878();
  int v13 = (uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  if (v12) {
    sub_256CBE894();
  }
  else {
    sub_256CBE8E0();
  }
  sub_256CEE538();
  OUTLINED_FUNCTION_50();
  v15(v14);
  return (*v13)(v11, v5);
}

unint64_t sub_256CBE848()
{
  unint64_t result = qword_26B2C79D8;
  if (!qword_26B2C79D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79D8);
  }
  return result;
}

unint64_t sub_256CBE894()
{
  unint64_t result = qword_26B2C7A00;
  if (!qword_26B2C7A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7A00);
  }
  return result;
}

unint64_t sub_256CBE8E0()
{
  unint64_t result = qword_269FC5540;
  if (!qword_269FC5540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5540);
  }
  return result;
}

uint64_t InferenceMonitor.Event.hashValue.getter()
{
  return sub_256CEE7F8();
}

uint64_t InferenceMonitor.Event.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5398);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5390);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_32();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5388);
  OUTLINED_FUNCTION_5();
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_19();
  uint64_t v10 = v9 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CBE848();
  sub_256CEE848();
  if (!v26)
  {
    uint64_t v27 = (uint64_t)a1;
    uint64_t v11 = sub_256CEE528();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      char v13 = *(unsigned char *)(v11 + 32);
      sub_256BEBCEC(1, v12, v11, v11 + 32, 0, (2 * v12) | 1);
      uint64_t v15 = v14;
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      if (v15 == v17 >> 1)
      {
        sub_256CBE894();
        sub_256CEE458();
        OUTLINED_FUNCTION_50();
        v22();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v10, v5);
        *a2 = v13;
        return __swift_destroy_boxed_opaque_existential_1Tm(v27);
      }
    }
    sub_256CEE398();
    swift_allocError();
    uint64_t v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2BA0);
    *uint64_t v19 = &type metadata for InferenceMonitor.Event;
    sub_256CEE468();
    sub_256CEE388();
    OUTLINED_FUNCTION_33_0();
    (*(void (**)(void *))(v20 + 104))(v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_50();
    v21();
    a1 = (void *)v27;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_256CBEDB4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return InferenceMonitor.Event.init(from:)(a1, a2);
}

uint64_t sub_256CBEDCC(void *a1)
{
  return InferenceMonitor.Event.encode(to:)(a1);
}

uint64_t InferenceMonitor.init()@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for InferenceMonitor.DaemonEventSource(0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_retain();
  uint64_t result = sub_256CC13B0(v4, v3);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_270622798;
  *a1 = result;
  return result;
}

uint64_t InferenceMonitor.AsyncIterator.next()()
{
  OUTLINED_FUNCTION_2();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5368);
  v1[4] = v3;
  OUTLINED_FUNCTION_6(v3);
  v1[5] = v4;
  v1[6] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5370);
  v1[7] = v5;
  OUTLINED_FUNCTION_6(v5);
  v1[8] = v6;
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CBEF6C, 0, 0);
}

uint64_t sub_256CBEF6C()
{
  OUTLINED_FUNCTION_2();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 24) + 16), *(void *)(*(void *)(v0 + 24) + 40));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_256CBF008;
  return sub_256CBFC5C();
}

uint64_t sub_256CBF008()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v7();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_256CBF128, 0, 0);
  }
}

uint64_t sub_256CBF128()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1((void *)(v0[3] + 16), *(void *)(v0[3] + 40));
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v1, *v5 + OBJC_IVAR____TtCV20ModelManagerServices16InferenceMonitor17DaemonEventSource_stream, v3);
  swift_retain();
  v6(v2, v1, v3);
  sub_256C90080(&qword_26B2C5380, &qword_26B2C5370);
  sub_256CEE208();
  uint64_t v7 = sub_256C90080(&qword_26B2C5360, &qword_26B2C5368);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[12] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_256CBF2B8;
  uint64_t v9 = v0[4];
  return MEMORY[0x270FA1E80](v0 + 14, v9, v7);
}

uint64_t sub_256CBF2B8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  v3[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v3[5] + 8))(v3[6], v3[4]);
    uint64_t v7 = sub_256CBF564;
  }
  else
  {
    uint64_t v7 = sub_256CBF3B0;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_256CBF3B0()
{
  int v1 = *(unsigned __int8 *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 24);
  if (v1 != 2
    && ((int v3 = *(unsigned __int8 *)(v2 + 56), v3 != 2)
      ? (BOOL v4 = ((v3 ^ v1) & 1) == 0)
      : (BOOL v4 = 0),
        v4))
  {
    uint64_t v11 = sub_256C90080(&qword_26B2C5360, &qword_26B2C5368);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_256CBF2B8;
    uint64_t v13 = *(void *)(v0 + 32);
    return MEMORY[0x270FA1E80](v0 + 112, v13, v11);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(unsigned char **)(v0 + 16);
    (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    *(unsigned char *)(v2 + 56) = v1;
    *uint64_t v8 = v1;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
    return v9();
  }
}

uint64_t sub_256CBF564()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_51();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t InferenceMonitor.AsyncIterator.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t InferenceMonitor.AsyncIterator.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0228](v0, 57, 7);
}

uint64_t sub_256CBF658()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  int v1 = (void *)OUTLINED_FUNCTION_112(v0);
  void *v1 = v2;
  v1[1] = sub_256BDD6B8;
  return InferenceMonitor.AsyncIterator.next()();
}

uint64_t sub_256CBF6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269FC3240 + dword_269FC3240);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_256CBF7B4;
  return v10(a1, a2, a3);
}

uint64_t sub_256CBF7B4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v3 + 16) = v0;
  }
  OUTLINED_FUNCTION_16_2();
  return v7();
}

uint64_t InferenceMonitor.makeAsyncIterator()()
{
  sub_256CC1E8C(v0, (uint64_t)v17);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_19();
  uint64_t v4 = (uint64_t *)(v3 - v2);
  (*(void (**)(uint64_t))(v5 + 16))(v3 - v2);
  uint64_t v6 = *v4;
  uint64_t v7 = type metadata accessor for InferenceMonitor.DaemonEventSource(0);
  v16[3] = v7;
  v16[4] = &off_270622798;
  v16[0] = v6;
  type metadata accessor for InferenceMonitor.AsyncIterator();
  uint64_t v8 = swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v7);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_19();
  uint64_t v12 = (uint64_t *)(v11 - v10);
  (*(void (**)(uint64_t))(v13 + 16))(v11 - v10);
  uint64_t v14 = *v12;
  *(void *)(v8 + 40) = v7;
  *(void *)(v8 + 48) = &off_270622798;
  *(void *)(v8 + 16) = v14;
  *(unsigned char *)(v8 + 56) = 2;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return v8;
}

uint64_t sub_256CBF9F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = InferenceMonitor.makeAsyncIterator()();
  uint64_t result = sub_256CC216C(v1);
  *a1 = v3;
  return result;
}

uint64_t sub_256CBFA34(uint64_t a1, uint64_t a2)
{
  sub_256CC22F8(a2, &qword_26B2C5358);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v4);
}

uint64_t sub_256CBFAD4()
{
  return sub_256CEDD98();
}

uint64_t sub_256CBFB70()
{
  sub_256CEDDA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5370);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_50();
  v1();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_256CBFC04()
{
  sub_256CBFB70();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_256CBFC5C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_256CBFC7C, 0, 0);
}

uint64_t sub_256CBFC7C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_256BDCDB4;
  return sub_256CBFFB0();
}

uint64_t sub_256CBFD24()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v2 - 8);
  OUTLINED_FUNCTION_32();
  uint64_t v3 = *(void *)(v1
                 + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_cancelHandle);
  if (v3)
  {
    uint64_t v4 = sub_256CEE178();
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v4);
    uint64_t v5 = (void *)swift_allocObject();
    v5[2] = 0;
    v5[3] = 0;
    v5[4] = v3;
    swift_retain();
    sub_256BDB760();
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v1 + 112);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5348);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_50();
  v6();
  sub_256CC22F8(v1 + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_endpoint, &qword_26B2C5328);
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_256CBFE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_256CBFE98, 0, 0);
}

uint64_t sub_256CBFE98()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C89B0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B2C9660;
  *(void *)(v0 + 24) = qword_26B2C9660;
  return MEMORY[0x270FA2498](sub_256CBFF2C, v1, 0);
}

uint64_t sub_256CBFF2C()
{
  OUTLINED_FUNCTION_2();
  sub_256C8048C();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CBFF84()
{
  sub_256CBFD24();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_256CBFFB0()
{
  OUTLINED_FUNCTION_2();
  v1[8] = v2;
  v1[9] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CC0050, v0, 0);
}

uint64_t sub_256CC0050()
{
  uint64_t v1 = v0[9];
  if ((*(unsigned char *)(v1
                 + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_registeredInvalidationCallback) & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
    return v2();
  }
  else
  {
    uint64_t v5 = v0[10];
    uint64_t v4 = v0[11];
    *(unsigned char *)(v1
             + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_registeredInvalidationCallback) = 1;
    sub_256CEDDB8();
    uint64_t v6 = sub_256CEDD58();
    __swift_storeEnumTagSinglePayload(v4, 0, 1, v6);
    sub_256CC1EEC(v4, v5);
    uint64_t v7 = v1 + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_endpoint;
    OUTLINED_FUNCTION_51();
    swift_beginAccess();
    sub_256CC1F54(v5, v7);
    swift_endAccess();
    if (qword_26B2C89B0 != -1) {
      swift_once();
    }
    v0[12] = qword_26B2C9660;
    v0[13] = swift_allocObject();
    swift_weakInit();
    swift_retain();
    uint64_t v8 = OUTLINED_FUNCTION_51();
    return MEMORY[0x270FA2498](v8, v9, 0);
  }
}

uint64_t sub_256CC01FC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[9];
  type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle();
  v0[14] = swift_allocObject();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_256CC1FF4;
  *(void *)(v3 + 24) = v1;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  sub_256C9C934();
  swift_endAccess();
  swift_release_n();
  swift_release();
  return MEMORY[0x270FA2498](sub_256CC0330, v2, 0);
}

uint64_t sub_256CC0330()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0[9] + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_cancelHandle) = v0[14];
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  void *v1 = v0;
  v1[1] = sub_256CC03D8;
  return sub_256CC0B00();
}

uint64_t sub_256CC03D8()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_2();
  return v3();
}

void sub_256CC04F8(char a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v5 = sub_256CEE178();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
    uint64_t v6 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = v6;
    sub_256BDB760();
    swift_release();
  }
  else
  {
    if (qword_26B2C5318 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_256CEDC88();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B2C52F8);
    os_log_t v12 = (os_log_t)sub_256CEDC68();
    os_log_type_t v9 = sub_256CEE2D8();
    if (os_log_type_enabled(v12, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_256BD4000, v12, v9, "Can't retry modelmanagerd connection. Inference monitor cannot be restored.", v10, 2u);
      MEMORY[0x25A2AEBD0](v10, -1, -1);
    }
    os_log_t v11 = v12;
  }
}

uint64_t sub_256CC0700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  return MEMORY[0x270FA2498](sub_256CC0720, 0, 0);
}

uint64_t sub_256CC0720()
{
  OUTLINED_FUNCTION_2();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_256CC0804;
    return sub_256CC0B00();
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v4();
  }
}

uint64_t sub_256CC0804()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_256CC0908, 0, 0);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_16();
    return v7();
  }
}

uint64_t sub_256CC0908()
{
  swift_release();
  if (qword_26B2C5318 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_256CEDC88();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2C52F8);
  MEMORY[0x25A2AE9C0](v1);
  MEMORY[0x25A2AE9C0](v1);
  uint64_t v3 = sub_256CEDC68();
  os_log_type_t v4 = sub_256CEE2C8();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void **)(v0 + 72);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    MEMORY[0x25A2AE9C0](v6);
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 40) = v9;
    sub_256CEE308();
    *uint64_t v8 = v9;

    _os_log_impl(&dword_256BD4000, v3, v4, "Failed to restore inference monitor: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
  }
  OUTLINED_FUNCTION_16();
  return v10();
}

uint64_t sub_256CC0B00()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 80) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
  *(void *)(v1 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CC0B90, v0, 0);
}

uint64_t sub_256CC0B90()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  sub_256CC1E8C(v2 + 112, (uint64_t)(v0 + 2));
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  BOOL v5 = (void *)OUTLINED_FUNCTION_51();
  __swift_project_boxed_opaque_existential_1(v5, v6);
  uint64_t v7 = v2 + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_endpoint;
  swift_beginAccess();
  sub_256CC219C(v7, v1, &qword_26B2C5328);
  uint64_t v8 = sub_256CEDD58();
  v0[12] = v8;
  uint64_t result = __swift_getEnumTagSinglePayload(v1, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 72) + **(int **)(v4 + 72));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[13] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_256CC0D18;
    uint64_t v11 = v0[11];
    return v12(v11, v3, v4);
  }
  return result;
}

uint64_t sub_256CC0D18()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = sub_256CC0E90;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 80);
    OUTLINED_FUNCTION_33_0();
    (*(void (**)(void))(v10 + 8))();
    uint64_t v8 = sub_256CC0E2C;
    uint64_t v7 = v9;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256CC0E2C()
{
  OUTLINED_FUNCTION_2();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v1();
}

uint64_t sub_256CC0E90()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_50();
  v1();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

double sub_256CC0F20@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5338);
  OUTLINED_FUNCTION_5();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_19();
  uint64_t v8 = v7 - v6;
  sub_256CC1E40();
  sub_256CEDE78();
  LODWORD(v9) = v17;
  if (qword_26B2C5318 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_256CEDC88();
  __swift_project_value_buffer(v10, (uint64_t)qword_26B2C52F8);
  uint64_t v11 = sub_256CEDC68();
  os_log_type_t v12 = sub_256CEE2D8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    if (v9) {
      uint64_t v14 = 0xD000000000000016;
    }
    else {
      uint64_t v14 = 0xD000000000000012;
    }
    char v16 = v9;
    if (v9) {
      unint64_t v9 = 0x8000000256D018B0;
    }
    else {
      unint64_t v9 = 0x8000000256D018D0;
    }
    sub_256BE14CC(v14, v9, &v17);
    sub_256CEE308();
    LOBYTE(v9) = v16;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256BD4000, v11, v12, "InferenceMonitor received event: %s", v13, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }

  LOBYTE(v17) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5348);
  sub_256CEE228();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double sub_256CC131C@<D0>(uint64_t a1@<X8>)
{
  return sub_256CC0F20(a1);
}

uint64_t sub_256CC1340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for InferenceMonitor.DaemonEventSource.Handler(0);
  return MEMORY[0x270FA1CF8](a1, v5, a3);
}

uint64_t type metadata accessor for InferenceMonitor.DaemonEventSource(uint64_t a1)
{
  return sub_256BE21F4(a1, qword_26B2C4E10);
}

uint64_t sub_256CC13B0(uint64_t a1, uint64_t a2)
{
  v24[1] = a1;
  uint64_t v3 = sub_256CEDD88();
  MEMORY[0x270FA5388](v3 - 8);
  v24[0] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5340);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5370);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5358);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  char v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v24 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5348);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v19);
  v24[4] = v18;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F680], v5);
  sub_256CEE238();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2 + OBJC_IVAR____TtCV20ModelManagerServices16InferenceMonitor17DaemonEventSource_stream, v12, v9);
  sub_256CC219C((uint64_t)v18, (uint64_t)v16, &qword_26B2C5358);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v19);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for InferenceMonitor.DaemonEventSource.Handler(0);
    uint64_t v21 = swift_allocObject();
    uint64_t v22 = swift_retain();
    *(void *)(a2 + OBJC_IVAR____TtCV20ModelManagerServices16InferenceMonitor17DaemonEventSource_handler) = sub_256CC21FC(v22, (uint64_t)v16, v21);
    swift_retain_n();
    sub_256CEDD78();
    sub_256CEDDC8();
    swift_allocObject();
    uint64_t v23 = sub_256CEDD68();
    swift_release();
    swift_release();
    *(void *)(a2 + OBJC_IVAR____TtCV20ModelManagerServices16InferenceMonitor17DaemonEventSource_listener) = v23;
    sub_256CC22F8((uint64_t)v18, &qword_26B2C5358);
    return a2;
  }
  return result;
}

uint64_t type metadata accessor for InferenceMonitor.AsyncIterator()
{
  return self;
}

unint64_t sub_256CC1764()
{
  unint64_t result = qword_269FC5558[0];
  if (!qword_269FC5558[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269FC5558);
  }
  return result;
}

uint64_t sub_256CC17B0(uint64_t a1, uint64_t a2)
{
  return sub_256CC2358(&qword_269FC5570, a2, (void (*)(uint64_t))type metadata accessor for InferenceMonitor.AsyncIterator);
}

void type metadata accessor for InferenceMonitor()
{
}

void type metadata accessor for InferenceMonitor.Event()
{
}

uint64_t method lookup function for InferenceMonitor.AsyncIterator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InferenceMonitor.AsyncIterator);
}

uint64_t sub_256CC182C()
{
  return type metadata accessor for InferenceMonitor.DaemonEventSource(0);
}

void sub_256CC1834()
{
  sub_256CC1A20(319, &qword_26B2C5378, MEMORY[0x263F8F6B8]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_256CC18F0()
{
  return type metadata accessor for InferenceMonitor.DaemonEventSource.Handler(0);
}

uint64_t type metadata accessor for InferenceMonitor.DaemonEventSource.Handler(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C52E0);
}

void sub_256CC1918()
{
  sub_256CC1A20(319, &qword_26B2C5350, MEMORY[0x263F8F690]);
  if (v0 <= 0x3F)
  {
    sub_256CC1A94();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_256CC1A20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C8CD8);
    unint64_t v7 = a3(a1, &type metadata for InferenceMonitor.Event, v6, MEMORY[0x263F8E4E0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_256CC1A94()
{
  if (!qword_26B2C7730)
  {
    sub_256CEDD58();
    unint64_t v0 = sub_256CEE2E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2C7730);
    }
  }
}

unsigned char *_s20ModelManagerServices16InferenceMonitorV5EventOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256CC1BB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceMonitor.Event.CodingKeys()
{
  return &type metadata for InferenceMonitor.Event.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceMonitor.Event.InferencesRunningCodingKeys()
{
  return &type metadata for InferenceMonitor.Event.InferencesRunningCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceMonitor.Event.InferencesNotRunningCodingKeys()
{
  return &type metadata for InferenceMonitor.Event.InferencesNotRunningCodingKeys;
}

unint64_t sub_256CC1C14()
{
  unint64_t result = qword_269FC5588;
  if (!qword_269FC5588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269FC5588);
  }
  return result;
}

unint64_t sub_256CC1C64()
{
  unint64_t result = qword_26B2C79F8;
  if (!qword_26B2C79F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79F8);
  }
  return result;
}

unint64_t sub_256CC1CB4()
{
  unint64_t result = qword_26B2C79F0;
  if (!qword_26B2C79F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79F0);
  }
  return result;
}

unint64_t sub_256CC1D04()
{
  unint64_t result = qword_26B2C7A10;
  if (!qword_26B2C7A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7A10);
  }
  return result;
}

unint64_t sub_256CC1D54()
{
  unint64_t result = qword_26B2C7A08;
  if (!qword_26B2C7A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7A08);
  }
  return result;
}

unint64_t sub_256CC1DA4()
{
  unint64_t result = qword_26B2C79E8;
  if (!qword_26B2C79E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79E8);
  }
  return result;
}

unint64_t sub_256CC1DF4()
{
  unint64_t result = qword_26B2C79E0;
  if (!qword_26B2C79E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79E0);
  }
  return result;
}

unint64_t sub_256CC1E40()
{
  unint64_t result = qword_26B2C52F0;
  if (!qword_26B2C52F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C52F0);
  }
  return result;
}

uint64_t sub_256CC1E8C(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  OUTLINED_FUNCTION_33_0();
  (*v3)(a2);
  return a2;
}

uint64_t sub_256CC1EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256CC1F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_256CC1FBC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_256CC1FF4(char a1)
{
}

uint64_t sub_256CC1FFC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256CC2038()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  void *v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256CC0700(v3, v4, v5, v6);
}

uint64_t sub_256CC20D4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256CBFE78(v3, v4, v5, v6);
}

uint64_t sub_256CC216C(uint64_t a1)
{
  return a1;
}

uint64_t sub_256CC2194(uint64_t a1)
{
  return sub_256CBFA34(a1, *(void *)(v1 + 16));
}

uint64_t sub_256CC219C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_256CC21FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = type metadata accessor for ModelServiceClient();
  uint64_t v13 = &protocol witness table for ModelServiceClient;
  *(void *)&long long v11 = a1;
  swift_defaultActor_initialize();
  *(unsigned char *)(a3
           + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_registeredInvalidationCallback) = 0;
  uint64_t v6 = a3 + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_endpoint;
  uint64_t v7 = sub_256CEDD58();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);
  *(void *)(a3 + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_cancelHandle) = 0;
  sub_256BE3924(&v11, a3 + 112);
  uint64_t v8 = a3 + OBJC_IVAR____TtCCV20ModelManagerServices16InferenceMonitor17DaemonEventSource7Handler_continuation;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  return a3;
}

uint64_t sub_256CC22F0()
{
  return sub_256CBFAD4();
}

uint64_t sub_256CC22F8(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_50();
  v3();
  return a1;
}

uint64_t sub_256CC234C@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_256CC2358(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CountedSet.add(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  OUTLINED_FUNCTION_5();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  long long v11 = *(void (**)(void))(v6 + 16);
  OUTLINED_FUNCTION_2_7();
  v11();
  uint64_t v12 = *v2;
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_256CC2B00((uint64_t)v10, v4, *(void *)(a2 + 24)), (v14 & 1) != 0)) {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  }
  else {
    uint64_t v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v4);
  OUTLINED_FUNCTION_2_7();
  uint64_t result = ((uint64_t (*)(void))v11)();
  if (v15 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = v15 + 1;
    char v18 = 0;
    sub_256CEDED8();
    return sub_256CEDEF8();
  }
  return result;
}

void *CountedSet.remove(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  OUTLINED_FUNCTION_5();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_19();
  uint64_t v9 = v8 - v7;
  uint64_t result = MEMORY[0x25A2ADBD0](&v13);
  if (!v14)
  {
    unint64_t v11 = v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a1, v3);
    unint64_t v12 = v11 - 1;
    if (v11 < 2) {
      unint64_t v12 = 0;
    }
    unint64_t v13 = v12;
    BOOL v14 = v11 < 2;
    sub_256CEDED8();
    return (void *)sub_256CEDEF8();
  }
  return result;
}

uint64_t CountedSet.count(of:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x25A2ADBD0](&v4, a1, *v2, *(void *)(a2 + 16), MEMORY[0x263F8D9D0], *(void *)(a2 + 24));
  if (v5) {
    return 0;
  }
  else {
    return v4;
  }
}

__n128 CountedSet.makeIterator()@<Q0>(uint64_t a1@<X8>)
{
  sub_256CEDEC8();
  sub_256CEE3D8();
  __n128 result = v4;
  *(_OWORD *)a1 = v3;
  *(__n128 *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

double sub_256CC26D4@<D0>(uint64_t a1@<X8>)
{
  CountedSet.makeIterator()((uint64_t)v4);
  swift_bridgeObjectRelease();
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_256CC272C()
{
  return sub_256CEE018();
}

uint64_t CountedSet.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = a4;
  uint64_t v34 = a5;
  OUTLINED_FUNCTION_5();
  uint64_t v30 = v7;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_19();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_256CEE2E8();
  MEMORY[0x270FA5388](v12 - 8);
  BOOL v14 = (char *)&v30 - v13;
  OUTLINED_FUNCTION_5();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_19();
  uint64_t v20 = v19 - v18;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_5();
  uint64_t v31 = v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v30 - v24;
  swift_getTupleTypeMetadata2();
  sub_256CEE0A8();
  uint64_t v37 = sub_256CEDEB8();
  uint64_t v32 = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, v35, a3);
  sub_256CEDFD8();
  uint64_t v33 = a3;
  swift_getAssociatedConformanceWitness();
  sub_256CEE2F8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, a2) != 1)
  {
    uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(v30 + 8);
    do
    {
      v26(v11, v14, a2);
      uint64_t v28 = type metadata accessor for CountedSet();
      CountedSet.add(_:)(v11, v28);
      (*v27)(v11, a2);
      sub_256CEE2F8();
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, a2) != 1);
  }
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v25, AssociatedTypeWitness);
  uint64_t *v34 = v37;
  return result;
}

uint64_t CountedSet.init(arrayLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = a1;
  uint64_t v7 = sub_256CEE0B8();
  swift_getWitnessTable();
  uint64_t result = CountedSet.init<A>(_:)((uint64_t)&v9, a2, v7, a3, &v10);
  *a4 = v10;
  return result;
}

uint64_t sub_256CC2AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return CountedSet.init(arrayLiteral:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

unint64_t sub_256CC2B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDF08();
  return sub_256CC2B5C(a1, v6, a2, a3);
}

unint64_t sub_256CC2B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a1;
  v21[2] = a4;
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v4;
  uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v10 & ~v9;
  v21[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v9;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    BOOL v14 = v15;
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v13 - 8);
    do
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v22 + 48) + v16 * v11, a3);
      char v19 = sub_256CEDF28();
      (*v17)(v8, a3);
      if (v19) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      uint64_t v13 = v18;
    }
    while (((*(void *)(v21[0] + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t type metadata accessor for CountedSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_256CC2CFC()
{
  return swift_getWitnessTable();
}

uint64_t ResponseStreamOverridingError.init(from:overrideError:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v28 = a5;
  uint64_t v29 = a7;
  uint64_t v27 = a4;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  OUTLINED_FUNCTION_5();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_5();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v27 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, a6);
  sub_256CEE208();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a6);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(a9, v23, AssociatedTypeWitness);
  uint64_t v32 = v27;
  uint64_t v33 = v28;
  uint64_t v34 = a6;
  uint64_t v35 = v29;
  uint64_t v36 = a8;
  uint64_t result = type metadata accessor for ResponseStreamOverridingError();
  uint64_t v25 = (void *)(a9 + *(int *)(result + 60));
  uint64_t v26 = v31;
  *uint64_t v25 = v30;
  v25[1] = v26;
  return result;
}

uint64_t type metadata accessor for ResponseStreamOverridingError()
{
  return swift_getGenericMetadata();
}

uint64_t ResponseStreamOverridingError.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t _s20ModelManagerServices29ResponseStreamOverridingErrorV4nextxSgyYaq_YKF(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  v5[4] = v3;
  v5[5] = a3;
  v5[3] = a2;
  uint64_t v7 = OUTLINED_FUNCTION_7_11();
  v5[6] = v7;
  OUTLINED_FUNCTION_6(v7);
  uint64_t v5[7] = v8;
  v5[8] = swift_task_alloc();
  uint64_t v9 = OUTLINED_FUNCTION_7_11();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v11 = (void *)swift_task_alloc();
  v5[9] = v11;
  void *v11 = v5;
  v11[1] = sub_256CC3054;
  return MEMORY[0x270FA1E80](a1, v9, AssociatedConformanceWitness);
}

uint64_t sub_256CC3054()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_256CC315C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
}

uint64_t sub_256CC315C()
{
  uint64_t v1 = *(int **)(v0[4] + *(int *)(v0[3] + 60));
  v0[2] = v0[10];
  MEMORY[0x25A2AE9C0]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  swift_dynamicCast();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_256CC328C;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  return v6(v4, v3);
}

uint64_t sub_256CC328C()
{
  OUTLINED_FUNCTION_0();
  uint64_t v2 = v1[8];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[6];
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x270FA2498](sub_256CC33B8, 0, 0);
}

uint64_t sub_256CC33B8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)v0[10];
  swift_willThrowTyped(v0[5], *(void *)(v0[3] + 24), *(void *)(v0[3] + 40));

  swift_task_dealloc();
  OUTLINED_FUNCTION_20_0();
  return v2();
}

uint64_t _s20ModelManagerServices29ResponseStreamOverridingErrorV4next9isolationxSgScA_pSgYi_tYaq_YKF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = v6;
  v9[5] = v5;
  v9[6] = a5;
  v9[3] = a3;
  v9[4] = a4;
  v9[2] = a2;
  uint64_t v11 = OUTLINED_FUNCTION_8_7();
  v9[7] = v11;
  OUTLINED_FUNCTION_6(v11);
  v9[8] = v12;
  v9[9] = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  v9[10] = v13;
  v9[11] = swift_task_alloc();
  uint64_t v14 = OUTLINED_FUNCTION_8_7();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = (void *)swift_task_alloc();
  v9[12] = v16;
  *uint64_t v16 = v9;
  v16[1] = sub_256CC35BC;
  return MEMORY[0x270FA1E88](a1, a2, a3, v13, v14, AssociatedConformanceWitness);
}

uint64_t sub_256CC35BC()
{
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    if (v6)
    {
      swift_getObjectType();
      uint64_t v9 = sub_256CEE0D8();
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v11 = 0;
    }
    *(void *)(v3 + 104) = v9;
    *(void *)(v3 + 112) = v11;
    uint64_t v14 = sub_256CC378C;
    uint64_t v15 = v9;
  }
  else
  {
    if (v6)
    {
      swift_getObjectType();
      uint64_t v12 = sub_256CEE0D8();
      uint64_t v11 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v11 = 0;
    }
    uint64_t v14 = sub_256CC3718;
    uint64_t v15 = v12;
  }
  return MEMORY[0x270FA2498](v14, v15, v11);
}

uint64_t sub_256CC3718()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_256CC378C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[8] + 32);
  v6(v1, v0[10], v3);
  v6(v2, v1, v3);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + *(int *)(v5 + 60))
                                                 + **(int **)(v4 + *(int *)(v5 + 60)));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[15] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_256CC38C0;
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[6];
  return v11(v9, v8);
}

uint64_t sub_256CC38C0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 104);
  return MEMORY[0x270FA2498](sub_256CC39D4, v5, v4);
}

uint64_t sub_256CC39D4()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  swift_willThrowTyped(v0[6], *(void *)(v0[4] + 24), *(void *)(v0[4] + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_20_0();
  return v4();
}

uint64_t sub_256CC3A84()
{
  return swift_getWitnessTable();
}

uint64_t sub_256CC3AA0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_256CC3ADC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_256CC3B18()
{
  return swift_getWitnessTable();
}

uint64_t sub_256CC3B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  ResponseStreamOverridingError.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_256CC3B94(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t sub_256CC3B9C(uint64_t a1, uint64_t a2)
{
  v2[2] = a2;
  uint64_t v5 = *(void *)(a2 + 24);
  v2[3] = v5;
  v2[4] = *(void *)(v5 - 8);
  v2[5] = swift_task_alloc();
  uint64_t v6 = swift_task_alloc();
  v2[6] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[7] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_256CC3CB8;
  return _s20ModelManagerServices29ResponseStreamOverridingErrorV4nextxSgyYaq_YKF(a1, a2, v6);
}

uint64_t sub_256CC3CB8()
{
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3[4] + 32);
    v7(v3[5], v3[6], v3[3]);
    uint64_t v8 = sub_256CEE6B8();
    uint64_t v9 = v3[5];
    if (v8)
    {
      (*(void (**)(void, void))(v3[4] + 8))(v3[5], v3[3]);
    }
    else
    {
      uint64_t v10 = v3[3];
      swift_allocError();
      v7(v11, v9, v10);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v5 + 8);
  return v12();
}

uint64_t sub_256CC3E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  uint64_t v10 = *(void *)(a5 + 24);
  v5[3] = v10;
  v5[4] = *(void *)(v10 - 8);
  uint64_t v11 = swift_task_alloc();
  v5[5] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v5[6] = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_256CC3F84;
  return _s20ModelManagerServices29ResponseStreamOverridingErrorV4next9isolationxSgScA_pSgYi_tYaq_YKF(a1, a2, a3, a5, v11);
}

uint64_t sub_256CC3F84()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void, void))(v3[4] + 32))(v3[2], v3[5], v3[3]);
    swift_task_dealloc();
    OUTLINED_FUNCTION_20_0();
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
  }
  return v7();
}

uint64_t sub_256CC407C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_256CC4084()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_256CC4138(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_256CC4254(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_256CC42F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_256CC439C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_256CC4454(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_256CC44FC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_256CC45AC(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  else {
    unsigned int v6 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  uint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v6 < a2)
  {
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v9 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v10 = 2;
    }
    else {
      unsigned int v10 = a2 - v6 + 1;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *((unsigned __int8 *)a1 + v8);
        if (!v13) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v13) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x256CC4744);
      case 4:
        int v13 = *(_DWORD *)((char *)a1 + v8);
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = v13 - 1;
        if (v9)
        {
          int v15 = 0;
          LODWORD(v9) = *a1;
        }
        return v6 + (v9 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 < 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, AssociatedTypeWitness);
  }
}

void sub_256CC4758(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, v10);
      *a1 = v16;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v15;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x256CC4954);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v17 = (void *)(((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *uint64_t v17 = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, AssociatedTypeWitness);
        }
      }
      return;
  }
}

BOOL static AssetCost.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t AssetCost.onDeviceMemory.getter()
{
  return *(void *)v0;
}

uint64_t AssetCost.init(onDeviceMemory:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t AssetCost.hash(into:)()
{
  return sub_256CEE7E8();
}

uint64_t sub_256CC49CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6563697665446E6FLL && a2 == 0xEE0079726F6D654DLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256CC4A6C()
{
  return 0x6563697665446E6FLL;
}

uint64_t sub_256CC4A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CC49CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256CC4AC0(uint64_t a1)
{
  unint64_t v2 = sub_256CC4C24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CC4AFC(uint64_t a1)
{
  unint64_t v2 = sub_256CC4C24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AssetCost.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5638);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_54();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CC4C24();
  sub_256CEE878();
  sub_256CEE5E8();
  uint64_t v3 = OUTLINED_FUNCTION_20_2();
  return v4(v3);
}

unint64_t sub_256CC4C24()
{
  unint64_t result = qword_26B2C5508;
  if (!qword_26B2C5508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5508);
  }
  return result;
}

uint64_t AssetCost.hashValue.getter()
{
  return sub_256CEE7F8();
}

uint64_t AssetCost.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5650);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_54();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CC4C24();
  sub_256CEE848();
  if (!v2)
  {
    uint64_t v6 = sub_256CEE518();
    uint64_t v7 = OUTLINED_FUNCTION_20_2();
    v8(v7);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_256CC4DC8()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CC4E10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AssetCost.init(from:)(a1, a2);
}

uint64_t sub_256CC4E28(void *a1)
{
  return AssetCost.encode(to:)(a1);
}

void static AssetCost.zero.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static AssetCost.+ infix(_:_:)(void *a1@<X8>, void *a2@<X0>, void *a3@<X1>)
{
  if (__CFADD__(*a2, *a3)) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_7_12(a1);
  }
}

void static AssetCost.- infix(_:_:)(void *a1@<X8>, void *a2@<X0>, void *a3@<X1>)
{
  if (*a2 < *a3) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_7_12(a1);
  }
}

void *sub_256CC4E80(void *a1, uint64_t *a2)
{
  return sub_256CC4E88(a1, *a2);
}

void *sub_256CC4E88(void *result, uint64_t a2)
{
  if (__CFADD__(*result, a2)) {
    __break(1u);
  }
  else {
    *result += a2;
  }
  return result;
}

unint64_t *sub_256CC4EA4(unint64_t *a1, unint64_t *a2)
{
  return sub_256CC4EAC(a1, *a2);
}

unint64_t *sub_256CC4EAC(unint64_t *result, unint64_t a2)
{
  if (*result < a2) {
    __break(1u);
  }
  else {
    *result -= a2;
  }
  return result;
}

uint64_t AssetInfo.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_256CEDEC8();
  return v1;
}

uint64_t AssetInfo.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_256CEDEC8();
  return v1;
}

void AssetInfo.cost.getter(void *a1@<X8>)
{
}

uint64_t AssetInfo.hasForegroundSession.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t AssetInfo.timeLastRequestEnded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AssetInfo() + 32);
  sub_256CEDAC8();
  OUTLINED_FUNCTION_10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a1, v3, v4);
}

uint64_t type metadata accessor for AssetInfo()
{
  uint64_t result = qword_26B2C7E28;
  if (!qword_26B2C7E28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AssetInfo.init(identifier:cost:version:hasForegroundSession:timeLastRequestEnded:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10 = *a3;
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a4;
  *(void *)(a8 + 24) = a5;
  *(void *)(a8 + 32) = v10;
  *(unsigned char *)(a8 + 40) = a6;
  uint64_t v11 = a8 + *(int *)(type metadata accessor for AssetInfo() + 32);
  sub_256CEDAC8();
  OUTLINED_FUNCTION_10();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  return v14(v11, a7, v12);
}

uint64_t sub_256CC5074(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1953722211 && a2 == 0xE400000000000000;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D01A70 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D00BD0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = sub_256CEE6C8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_256CC5260(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      unint64_t result = 1953722211;
      break;
    case 3:
    case 4:
      return result;
    default:
      unint64_t result = 0x696669746E656469;
      break;
  }
  return result;
}

unint64_t sub_256CC530C()
{
  return sub_256CC5260(*v0);
}

uint64_t sub_256CC5314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CC5074(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CC533C(uint64_t a1)
{
  unint64_t v2 = sub_256CC55B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CC5378(uint64_t a1)
{
  unint64_t v2 = sub_256CC55B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AssetInfo.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5640);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CC55B0();
  sub_256CEE878();
  sub_256CEE568();
  if (!v1)
  {
    sub_256CEE568();
    sub_256C1585C();
    sub_256CEE5A8();
    sub_256CEE578();
    type metadata accessor for AssetInfo();
    sub_256CEDAC8();
    sub_256CC5954(&qword_26B2C5440);
    sub_256CEE5A8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_256CC55B0()
{
  unint64_t result = qword_26B2C5528;
  if (!qword_26B2C5528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5528);
  }
  return result;
}

uint64_t AssetInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_256CEDAC8();
  OUTLINED_FUNCTION_0_0();
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5658);
  OUTLINED_FUNCTION_0_0();
  uint64_t v27 = v10;
  uint64_t v28 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = type metadata accessor for AssetInfo();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_44_0();
  uint64_t v13 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_256CC55B0();
  uint64_t v14 = v30;
  sub_256CEE848();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  }
  int v15 = v8;
  uint64_t v16 = v27;
  char v36 = 0;
  uint64_t v17 = v2;
  *(void *)uint64_t v2 = sub_256CEE498();
  *(void *)(v2 + 8) = v18;
  char v35 = 1;
  *(void *)(v2 + 16) = sub_256CEE498();
  *(void *)(v2 + 24) = v19;
  char v34 = 2;
  sub_256C15B00();
  sub_256CEE4D8();
  uint64_t v30 = 0;
  *(void *)(v2 + 32) = v31;
  char v33 = 3;
  *(unsigned char *)(v2 + 40) = sub_256CEE4A8() & 1;
  char v32 = 4;
  sub_256CC5954(&qword_269FC3538);
  uint64_t v20 = v4;
  uint64_t v21 = v28;
  sub_256CEE4D8();
  (*(void (**)(void, uint64_t))(v16 + 8))(0, v21);
  uint64_t v22 = (uint64_t)v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v17 + *(int *)(v11 + 32), v15, v20);
  sub_256CA2448(v17, v26);
  __swift_destroy_boxed_opaque_existential_1Tm(v22);
  return sub_256CA24AC(v17);
}

uint64_t sub_256CC5954(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256CEDAC8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256CC599C()
{
  unint64_t result = qword_26B2C5520;
  if (!qword_26B2C5520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5520);
  }
  return result;
}

uint64_t sub_256CC59E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetInfo.init(from:)(a1, a2);
}

uint64_t sub_256CC5A00(void *a1)
{
  return AssetInfo.encode(to:)(a1);
}

uint64_t sub_256CC5A18()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_256CC5A24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AssetInfo.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for AssetCost()
{
  return &type metadata for AssetCost;
}

void *initializeBufferWithCopyOfBuffer for AssetInfo(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (uint64_t)a2 + v7;
    uint64_t v9 = a1 + v7;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v10 = sub_256CEDAC8();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    sub_256CEDEC8();
    sub_256CEDEC8();
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t destroy for AssetInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_256CEDAC8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for AssetInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v9 = sub_256CEDAC8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  v10(v8, v7, v9);
  return a1;
}

uint64_t assignWithCopy for AssetInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256CEDAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for AssetInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_256CEDAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AssetInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_256CEDAC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CC5EB4);
}

uint64_t sub_256CC5EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_256CEDAC8();
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AssetInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CC5F50);
}

uint64_t sub_256CC5F50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_256CEDAC8();
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_256CC5FD0()
{
  uint64_t result = sub_256CEDAC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssetInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256CC614CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetInfo.CodingKeys()
{
  return &type metadata for AssetInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AssetCost.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256CC6220);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetCost.CodingKeys()
{
  return &type metadata for AssetCost.CodingKeys;
}

unint64_t sub_256CC625C()
{
  unint64_t result = qword_269FC5660;
  if (!qword_269FC5660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5660);
  }
  return result;
}

unint64_t sub_256CC62AC()
{
  unint64_t result = qword_269FC5668;
  if (!qword_269FC5668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5668);
  }
  return result;
}

unint64_t sub_256CC62FC()
{
  unint64_t result = qword_26B2C4EB0;
  if (!qword_26B2C4EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4EB0);
  }
  return result;
}

unint64_t sub_256CC634C()
{
  unint64_t result = qword_26B2C5530;
  if (!qword_26B2C5530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5530);
  }
  return result;
}

unint64_t sub_256CC639C()
{
  unint64_t result = qword_26B2C5518;
  if (!qword_26B2C5518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5518);
  }
  return result;
}

unint64_t sub_256CC63EC()
{
  unint64_t result = qword_26B2C5510;
  if (!qword_26B2C5510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5510);
  }
  return result;
}

uint64_t UnsafeTransfer.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t UnsafeTransfer.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UnsafeTransfer.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*UnsafeTransfer.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t sub_256CC6500()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_256CC6590(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_256CC6648(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_256CC6674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_256CC66C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_256CC6714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_256CC6764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_256CC67B4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_256CC6900(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x256CC6B04);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for UnsafeTransfer()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_256CC6B44(char a1, char a2)
{
  return (a2 & 1u) >= (a1 & 1u);
}

BOOL sub_256CC6B58(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

BOOL sub_256CC6B68(char a1, char a2)
{
  return (a1 & 1u) >= (a2 & 1u);
}

BOOL sub_256CC6B7C(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL sub_256CC6B8C(char a1, char a2)
{
  return (a2 & 1u) < (a1 & 1u);
}

BOOL sub_256CC6BA0(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

void Policy.assetPolicy.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t Policy.memoryBudget.getter()
{
  return *(void *)(v0 + 8);
}

void Policy.cancelPriority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t Policy.inactiveAssetTimeout.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t Policy.assetTransitionDelay.getter()
{
  return *(void *)(v0 + 32);
}

void __swiftcall Policy.init(assetPolicy:memoryBudget:cancelPriority:inactiveAssetTimeout:assetTransitionDelay:)(ModelManagerServices::Policy *__return_ptr retstr, ModelManagerServices::AssetPolicy assetPolicy, Swift::Int memoryBudget, ModelManagerServices::RequestPriority cancelPriority, Swift::Int inactiveAssetTimeout, Swift::Int assetTransitionDelay)
{
  ModelManagerServices::RequestPriority v6 = *(unsigned char *)cancelPriority;
  retstr->assetPolicy = *(unsigned char *)assetPolicy;
  retstr->memoryBudget = memoryBudget;
  retstr->cancelPriority = v6;
  retstr->inactiveAssetTimeout = inactiveAssetTimeout;
  retstr->assetTransitionDelay = assetTransitionDelay;
}

uint64_t Policy.Asset.assetIdentifier.getter()
{
  uint64_t v1 = *v0;
  sub_256CEDEC8();
  return v1;
}

uint64_t Policy.Asset.inferenceProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_256CEDEC8();
  return v1;
}

ModelManagerServices::Policy::Asset __swiftcall Policy.Asset.init(assetIdentifier:inferenceProvider:)(Swift::String assetIdentifier, Swift::String inferenceProvider)
{
  *uint64_t v2 = assetIdentifier;
  v2[1] = inferenceProvider;
  result.inferenceProvider = inferenceProvider;
  result.assetIdentifier = assetIdentifier;
  return result;
}

uint64_t Policy.Asset.hash(into:)()
{
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  sub_256CEDFA8();
  return swift_bridgeObjectRelease();
}

uint64_t static Policy.Asset.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_256CEE6C8(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_256CEE6C8();
    }
  }
  return result;
}

uint64_t sub_256CC6D9C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6564497465737361 && a2 == 0xEF7265696669746ELL;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00BB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256CC6E9C(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0x6564497465737361;
  }
}

uint64_t sub_256CC6EE4()
{
  return sub_256CC6E9C(*v0);
}

uint64_t sub_256CC6EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CC6D9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CC6F14(uint64_t a1)
{
  unint64_t v2 = sub_256CC70BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CC6F50(uint64_t a1)
{
  unint64_t v2 = sub_256CC70BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Policy.Asset.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5670);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256CC70BC();
  sub_256CEE878();
  sub_256CEE568();
  if (!v0) {
    sub_256CEE568();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_33();
}

unint64_t sub_256CC70BC()
{
  unint64_t result = qword_26B2C48D0;
  if (!qword_26B2C48D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48D0);
  }
  return result;
}

uint64_t Policy.Asset.hashValue.getter()
{
  return sub_256CEE7F8();
}

void Policy.Asset.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4918);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256CC70BC();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_256CEE498();
    uint64_t v8 = v7;
    sub_256CEDEC8();
    uint64_t v9 = sub_256CEE498();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = OUTLINED_FUNCTION_9_7();
    v13(v12);
    *uint64_t v4 = v6;
    v4[1] = v8;
    _OWORD v4[2] = v14;
    v4[3] = v11;
    sub_256CEDEC8();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256CC734C()
{
  return sub_256CEE7F8();
}

void sub_256CC73D0()
{
}

void sub_256CC73E8()
{
}

uint64_t Policy.hash(into:)()
{
  return sub_256CEE7B8();
}

uint64_t static Policy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v8 = sub_256BF0E20(*(unsigned char *)a1, *(unsigned char *)a2);
  uint64_t result = 0;
  if ((v8 & 1) != 0 && v2 == v5)
  {
    unsigned int v10 = sub_256BF0D48() & (v4 == v7);
    if (v3 == v6) {
      return v10;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_256CC7554(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C6F507465737361 && a2 == 0xEB00000000796369;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x754279726F6D656DLL && a2 == 0xEC00000074656764;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x72506C65636E6163 && a2 == 0xEE00797469726F69;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D01A90 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D01AB0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = sub_256CEE6C8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_256CC7780(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x754279726F6D656DLL;
      break;
    case 2:
      unint64_t result = 0x72506C65636E6163;
      break;
    case 3:
    case 4:
      return result;
    default:
      unint64_t result = 0x6C6F507465737361;
      break;
  }
  return result;
}

unint64_t sub_256CC784C()
{
  return sub_256CC7780(*v0);
}

uint64_t sub_256CC7854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256CC7554(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256CC787C(uint64_t a1)
{
  unint64_t v2 = sub_256CC7F8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CC78B8(uint64_t a1)
{
  unint64_t v2 = sub_256CC7F8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Policy.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D70);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256CC7F8C();
  sub_256CEE878();
  sub_256CC7FD8();
  sub_256CEE5A8();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_8();
    sub_256BF937C();
    sub_256CEE5A8();
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_2_8();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_33();
}

uint64_t Policy.hashValue.getter()
{
  return sub_256CEE7F8();
}

void Policy.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14)
{
  OUTLINED_FUNCTION_32_0();
  int v16 = v15;
  uint64_t v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4910);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v19);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_256CC7F8C();
  sub_256CEE848();
  if (!v14)
  {
    sub_256CC8024();
    OUTLINED_FUNCTION_6_6();
    uint64_t v20 = OUTLINED_FUNCTION_4_7();
    sub_256BF9478();
    OUTLINED_FUNCTION_6_6();
    uint64_t v24 = OUTLINED_FUNCTION_4_7();
    uint64_t v21 = OUTLINED_FUNCTION_4_7();
    uint64_t v22 = OUTLINED_FUNCTION_10_7();
    v23(v22);
    *(unsigned char *)uint64_t v18 = a14;
    *(void *)(v18 + 8) = v20;
    *(unsigned char *)(v18 + 16) = a11;
    *(void *)(v18 + 24) = v24;
    *(void *)(v18 + 32) = v21;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256CC7D60()
{
  return sub_256CEE7F8();
}

void sub_256CC7E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Policy.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE4(vars8), SBYTE5(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_256CC7E4C()
{
}

uint64_t static AssetPolicy.< infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

BOOL AssetPolicy.allowAssetTimerUse.getter()
{
  return (*v0 & 1) == 0;
}

ModelManagerServices::AssetPolicy_optional __swiftcall AssetPolicy.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_256CEE438();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t AssetPolicy.rawValue.getter()
{
  if (*v0) {
    return 0x614364616F6C6E75;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t sub_256CC7F34(char *a1, char *a2)
{
  return sub_256BF0E20(*a1, *a2);
}

uint64_t sub_256CC7F40()
{
  return sub_256CD2688();
}

uint64_t sub_256CC7F48()
{
  return sub_256BF1124();
}

uint64_t sub_256CC7F50()
{
  return sub_256CD2730();
}

ModelManagerServices::AssetPolicy_optional sub_256CC7F58(Swift::String *a1)
{
  return AssetPolicy.init(rawValue:)(*a1);
}

uint64_t sub_256CC7F64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AssetPolicy.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_256CC7F8C()
{
  unint64_t result = qword_26B2C48B8;
  if (!qword_26B2C48B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48B8);
  }
  return result;
}

unint64_t sub_256CC7FD8()
{
  unint64_t result = qword_26B2C4A50;
  if (!qword_26B2C4A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4A50);
  }
  return result;
}

unint64_t sub_256CC8024()
{
  unint64_t result = qword_26B2C4890;
  if (!qword_26B2C4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4890);
  }
  return result;
}

unint64_t sub_256CC8074()
{
  unint64_t result = qword_26B2C48E8;
  if (!qword_26B2C48E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48E8);
  }
  return result;
}

unint64_t sub_256CC80C4()
{
  unint64_t result = qword_269FC5678;
  if (!qword_269FC5678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5678);
  }
  return result;
}

unint64_t sub_256CC8114()
{
  unint64_t result = qword_26B2C4880;
  if (!qword_26B2C4880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4880);
  }
  return result;
}

uint64_t sub_256CC8160()
{
  return sub_256CEE048();
}

uint64_t sub_256CC81C0()
{
  return sub_256CEE028();
}

BOOL sub_256CC8214(char *a1, char *a2)
{
  return sub_256CC6B44(*a1, *a2);
}

BOOL sub_256CC8220(char *a1, char *a2)
{
  return sub_256CC6B68(*a1, *a2);
}

BOOL sub_256CC822C(char *a1, char *a2)
{
  return sub_256CC6B8C(*a1, *a2);
}

uint64_t getEnumTagSinglePayload for Policy(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[40])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = v3 - 2;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Policy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for Policy()
{
}

void type metadata accessor for Policy.Asset()
{
}

void type metadata accessor for AssetPolicy()
{
}

unsigned char *storeEnumTagSinglePayload for Policy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256CC83B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Policy.CodingKeys()
{
  return &type metadata for Policy.CodingKeys;
}

unsigned char *_s20ModelManagerServices11AssetPolicyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256CC84B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Policy.Asset.CodingKeys()
{
  return &type metadata for Policy.Asset.CodingKeys;
}

unint64_t sub_256CC84F4()
{
  unint64_t result = qword_269FC5680;
  if (!qword_269FC5680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5680);
  }
  return result;
}

unint64_t sub_256CC8544()
{
  unint64_t result = qword_269FC5688;
  if (!qword_269FC5688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5688);
  }
  return result;
}

unint64_t sub_256CC8594()
{
  unint64_t result = qword_26B2C48C8;
  if (!qword_26B2C48C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48C8);
  }
  return result;
}

unint64_t sub_256CC85E4()
{
  unint64_t result = qword_26B2C48C0;
  if (!qword_26B2C48C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48C0);
  }
  return result;
}

unint64_t sub_256CC8634()
{
  unint64_t result = qword_26B2C48E0;
  if (!qword_26B2C48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48E0);
  }
  return result;
}

unint64_t sub_256CC8684()
{
  unint64_t result = qword_26B2C48D8;
  if (!qword_26B2C48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48D8);
  }
  return result;
}

unint64_t sub_256CC86D0()
{
  unint64_t result = qword_26B2C4888;
  if (!qword_26B2C4888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4888);
  }
  return result;
}

uint64_t TaskCancellingXPCPeerHandler.__allocating_init(handler:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_57_6();
  TaskCancellingXPCPeerHandler.init(handler:)();
  return v0;
}

uint64_t XPCSession.sendWithTaskCancellationWithReply<A, B>(_:)()
{
  OUTLINED_FUNCTION_2();
  v1[11] = v2;
  v1[12] = v0;
  v1[9] = v3;
  v1[10] = v4;
  v1[7] = v5;
  v1[8] = v6;
  v1[5] = v7;
  v1[6] = v8;
  uint64_t v9 = type metadata accessor for TaskCancellableMessage();
  v1[13] = v9;
  OUTLINED_FUNCTION_6(v9);
  v1[14] = v10;
  v1[15] = swift_task_alloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_256CC87FC()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_71_6();
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v6 = v0[10];
  uint64_t v24 = (void *)v0[15];
  sub_256CC9134(v0[6], v5, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  v0[16] = inited;
  *(_DWORD *)(inited + 20) = 0;
  *(unsigned char *)(inited + 16) = 0;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v8;
  v8[2] = v5;
  v8[3] = v4;
  v8[4] = v3;
  v8[5] = v6;
  v8[6] = v2;
  v8[7] = inited;
  uint64_t v9 = v2;
  v8[8] = v24;
  v8[9] = v1;
  uint64_t v10 = v1;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[18] = (uint64_t)v11;
  v11[2] = v5;
  v11[3] = v4;
  v11[4] = v3;
  v11[5] = v6;
  v11[6] = v9;
  v11[7] = inited;
  v11[8] = v10;
  v11[9] = v24;
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v0[19] = (uint64_t)v12;
  *uint64_t v12 = v13;
  v12[1] = sub_256CC8964;
  OUTLINED_FUNCTION_60_7();
  OUTLINED_FUNCTION_26_0();
  return MEMORY[0x270FA2338](v14, v15, v16, v17, v18, v19, v20, v21);
}

uint64_t sub_256CC8964()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256CC8A50()
{
  OUTLINED_FUNCTION_12();
  sub_256CC9CC4();
  uint64_t v1 = OUTLINED_FUNCTION_25_9();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_256CC8ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_44_1();
  uint64_t v14 = v12[14];
  uint64_t v13 = v12[15];
  uint64_t v15 = v12[13];
  swift_task_dealloc();
  swift_task_dealloc();
  sub_256CC9CC4();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_20_1();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

uint64_t XPCSession.sendWithTaskCancellation<A>(_:)()
{
  OUTLINED_FUNCTION_2();
  v1[8] = v2;
  v1[9] = v0;
  v1[6] = v3;
  v1[7] = v4;
  v1[5] = v5;
  uint64_t v6 = type metadata accessor for TaskCancellableMessage();
  v1[10] = v6;
  OUTLINED_FUNCTION_6(v6);
  v1[11] = v7;
  v1[12] = swift_task_alloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_256CC8C34()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  sub_256CC9134(v0[5], v5, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  v0[13] = inited;
  *(_DWORD *)(inited + 20) = 0;
  *(unsigned char *)(inited + 16) = 0;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v7;
  v7[2] = v5;
  v7[3] = v4;
  v7[4] = v2;
  v7[5] = inited;
  v7[6] = v1;
  v7[7] = v3;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = (uint64_t)v8;
  v8[2] = v5;
  v8[3] = v4;
  v8[4] = v2;
  v8[5] = inited;
  v8[6] = v3;
  v8[7] = v1;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[16] = (uint64_t)v9;
  *uint64_t v9 = v0;
  v9[1] = sub_256CC8D94;
  OUTLINED_FUNCTION_60_7();
  return MEMORY[0x270FA2338](v10, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_256CC8D94()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256CC8EB0()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_25_9();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_256CC8F2C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_25_9();
  v1(v0);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t TaskCancellableXPCRequest.needsCallback.getter()
{
  return 0;
}

uint64_t sub_256CC8FB0()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_26B2C9168);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B2C9168);
  return sub_256CEDC78();
}

uint64_t sub_256CC902C()
{
  uint64_t result = sub_256CC9094(0x3E8uLL);
  if (is_mul_ok(result, 0x186A0uLL))
  {
    uint64_t v1 = 100000 * result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F38);
    uint64_t result = swift_allocObject();
    *(_DWORD *)(result + 24) = 0;
    *(void *)(result + 16) = v1;
    qword_26B2C8F20 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_256CC9094(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x25A2AEBE0](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x25A2AEBE0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_256CC9120@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = (*result)++;
  *a2 = v2;
  return result;
}

uint64_t sub_256CC9134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_26B2C8F28 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)(qword_26B2C8F20 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(qword_26B2C8F20 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26B2C8F20 + 24));
  sub_256CC9120(v6, &v12);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v9 = (char *)a3 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v10 = *(int *)(TupleTypeMetadata3 + 64);
  os_unfair_lock_unlock(v7);
  *a3 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v9, a1, a2);
  *((unsigned char *)a3 + v10) = sub_256CEE1D8() & 1;
  type metadata accessor for TaskCancellableMessage();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CC92A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16);
  v9(v8, v3, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return ((uint64_t (*)(void *, uint64_t, uint64_t))v9)(a2, v3, a1);
  }
  uint64_t v11 = *v8;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = (char *)v8 + *(int *)(swift_getTupleTypeMetadata3() + 48);
  *a2 = v11;
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v13, v12);
}

uint64_t sub_256CC9414@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v7 = sub_256CEE2E8();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v44 = (uint64_t)&v36 - v9;
  uint64_t v42 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a3;
  uint64_t v12 = type metadata accessor for TaskCancellableMessage();
  uint64_t v40 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (uint64_t *)((char *)&v36 - v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = v47;
  sub_256CEE828();
  if (!v18)
  {
    char v36 = v15;
    uint64_t v37 = v17;
    int v47 = v11;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
    uint64_t v19 = sub_256CEE678();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
    sub_256CEE638();
    uint64_t v21 = v44;
    uint64_t v22 = a2;
    if (__swift_getEnumTagSinglePayload(v44, 1, a2) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v21, v39);
      uint64_t v23 = v37;
      *uint64_t v37 = v19;
      uint64_t v24 = v12;
      swift_storeEnumTagMultiPayload();
      uint64_t v26 = v40;
      uint64_t v25 = v41;
    }
    else
    {
      uint64_t v27 = v42;
      uint64_t v28 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v47, v21, v22);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v30 = (char *)v36 + *(int *)(TupleTypeMetadata3 + 48);
      *char v36 = v19;
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v30, v28, v22);
      __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v31 = sub_256CEE648();
      char v32 = 0;
      if ((v33 & 1) == 0 && v31 == 3)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
        char v32 = sub_256CEE658();
      }
      uint64_t v26 = v40;
      uint64_t v25 = v41;
      uint64_t v24 = v12;
      uint64_t v34 = *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v22);
      char v35 = v36;
      *((unsigned char *)v36 + v34) = v32 & 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = v37;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v26 + 32))(v37, v35, v24);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v26 + 32))(v25, v23, v24);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_256CC98C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (void *)MEMORY[0x270FA5388](v5);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_256CEE858();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v12, v2, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    sub_256CEE6A8();
  }
  else
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    int v14 = v12[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v15 = v18;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v7, &v12[*(int *)(TupleTypeMetadata3 + 48)], v4);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    uint64_t v16 = v21;
    sub_256CEE6A8();
    if (!v16)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      sub_256CEE698();
      if (v14)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
        sub_256CEE688();
      }
    }
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v7, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
}

uint64_t sub_256CC9B94(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = *(void *)v3;
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(&v3[*(int *)(TupleTypeMetadata3 + 48)], v7);
  }
  return v6;
}

void sub_256CC9CC4()
{
  OUTLINED_FUNCTION_57();
  uint64_t v0 = type metadata accessor for TaskCancellableMessage();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_256CEDC88();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2C9168);
  OUTLINED_FUNCTION_20_8();
  v3();
  uint64_t v4 = sub_256CEDC68();
  os_log_type_t v5 = sub_256CEE2A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    *(_DWORD *)uint64_t v6 = 134217984;
    sub_256CC9B94(v0);
    uint64_t v7 = OUTLINED_FUNCTION_70_5();
    v8(v7);
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v4, v5, "Returning response from message %llu.", v6, 0xCu);
    OUTLINED_FUNCTION_4();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_70_5();
    v10(v9);
  }

  OUTLINED_FUNCTION_71();
}

uint64_t sub_256CC9E70@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_256CC9414(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_256CC9E94(uint64_t a1, uint64_t a2)
{
  return sub_256CC98C8(a1, a2);
}

uint64_t sub_256CC9EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v10;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  return MEMORY[0x270FA2498](sub_256CC9EE4, 0, 0);
}

uint64_t sub_256CC9EE4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  long long v5 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v1;
  *(_OWORD *)(v3 + 56) = v5;
  *(void *)(v3 + 72) = v2;
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 96) = v6;
  *uint64_t v6 = v7;
  v6[1] = sub_256CC9FE4;
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256CC9FE4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *long long v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256CCA0E4()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

void sub_256CCA140(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256CD22E8(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256CCA1FC(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v32 = a6;
  uint64_t v29 = a1;
  uint64_t v30 = a4;
  uint64_t v31 = a9;
  uint64_t v34 = a5;
  uint64_t v13 = type metadata accessor for TaskCancellableMessage();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - v15;
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_256CEDC88();
  __swift_project_value_buffer(v17, (uint64_t)qword_26B2C9168);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v35 = a2;
  v18(v16, a2, v13);
  uint64_t v19 = sub_256CEDC68();
  os_log_type_t v20 = sub_256CEE2A8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = a7;
    uint64_t v22 = v21;
    uint64_t v28 = a8;
    *(_DWORD *)uint64_t v21 = 134217984;
    uint64_t v26 = a3;
    uint64_t v23 = sub_256CC9B94(v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v36 = v23;
    a8 = v28;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v19, v20, "Sending message %llu.", v22, 0xCu);
    uint64_t v24 = v22;
    a7 = v27;
    MEMORY[0x25A2AEBD0](v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  sub_256CCA500(v30, v34, v32, a7, a8, v31);
  swift_getWitnessTable();
  uint64_t v25 = v33;
  sub_256CEDCF8();
  if (v25)
  {
    swift_release();
  }
  else
  {
    swift_release();
    *uint64_t v29 = 1;
    if (sub_256CEE1D8()) {
      sub_256CCA914();
    }
  }
}

uint64_t (*sub_256CCA500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(uint64_t a1)
{
  uint64_t v19 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C8CD8);
  uint64_t v11 = sub_256CEE108();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - v13, a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a2;
  *((void *)v16 + 3) = a3;
  *((void *)v16 + 4) = a4;
  *((void *)v16 + 5) = a5;
  *((void *)v16 + 6) = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v16[v15], v14, v11);
  return sub_256CD23B0;
}

uint64_t sub_256CCA678(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C8CD8);
  uint64_t v2 = sub_256CEE108();
  return sub_256CCA6D8(a1, v2);
}

uint64_t sub_256CCA6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_256CEE808();
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_256CEE0E8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_256CEE0F8();
  }
}

void sub_256CCA914()
{
  OUTLINED_FUNCTION_57();
  uint64_t v0 = type metadata accessor for TaskCancellableMessage();
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_6();
  uint64_t v6 = (void *)(v4 - v5);
  MEMORY[0x270FA5388](v7);
  type metadata accessor for _OSActivity();
  swift_initStackObject();
  uint64_t v8 = _OSActivity.init(_:)("XPC message with reply cancelled", 32, 2);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_256CEDC88();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B2C9168);
  OUTLINED_FUNCTION_20_8();
  v10();
  uint64_t v11 = sub_256CEDC68();
  os_log_type_t v12 = sub_256CEE2A8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    *(_DWORD *)uint64_t v13 = 134217984;
    sub_256CC9B94(v0);
    uint64_t v14 = OUTLINED_FUNCTION_42_6();
    v2(v14);
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v11, v12, "Task for message %llu cancelled, sending cancellation message.", v13, 0xCu);
    OUTLINED_FUNCTION_4();
  }
  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_42_6();
    v2(v15);
  }

  sub_256CC92A4(v0, v6);
  swift_getWitnessTable();
  sub_256CEDD08();
  ((void (*)(void *, uint64_t))v2)(v6, v0);
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v8 + 24));
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_71();
}

void sub_256CCABE4(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_256CD2270(v1);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_256CCAC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_256CCAC74, 0, 0);
}

uint64_t sub_256CCAC74()
{
  OUTLINED_FUNCTION_257();
  uint64_t v9 = v1;
  OUTLINED_FUNCTION_15();
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v4 + 32) = v2;
  *(_OWORD *)(v4 + 40) = v5;
  uint64_t v6 = v3 + 4;
  v3 += 5;
  os_unfair_lock_lock(v3);
  sub_256CD224C(v6);
  os_unfair_lock_unlock(v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v7();
}

void sub_256CCAD38(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a1;
  v22[4] = a4;
  uint64_t v10 = type metadata accessor for TaskCancellableMessage();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v22 - v12;
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_256CEDC88();
  __swift_project_value_buffer(v14, (uint64_t)qword_26B2C9168);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v25 = a2;
  v15(v13, a2, v10);
  uint64_t v16 = sub_256CEDC68();
  os_log_type_t v17 = sub_256CEE2A8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    v22[2] = a3;
    uint64_t v19 = v18;
    v22[3] = a6;
    *(_DWORD *)uint64_t v18 = 134217984;
    v22[1] = a5;
    uint64_t v20 = sub_256CC9B94(v10);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v26 = v20;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v16, v17, "Sending message %llu.", v19, 0xCu);
    MEMORY[0x25A2AEBD0](v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  swift_getWitnessTable();
  uint64_t v21 = v24;
  sub_256CEDD08();
  if (!v21)
  {
    unsigned char *v23 = 1;
    if (sub_256CEE1D8()) {
      sub_256CCA914();
    }
  }
}

void sub_256CCAFE4(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_256CD2208(v1);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_256CCB044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_256BE3BF0;
  return TaskCancellablePeerHandler.handleIncomingRequestWithReply(_:callback:)(a1, a2, a3);
}

uint64_t sub_256CCB0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 72) = a2;
  *(void *)(v3 + 80) = a3;
  return MEMORY[0x270FA2498](sub_256CCB110, 0, 0);
}

uint64_t sub_256CCB110()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v15 = v0;
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_43_4(v1, (uint64_t)qword_26B2C8CA8);
  os_log_type_t v3 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_41(v3))
  {
    OUTLINED_FUNCTION_24_0();
    uint64_t v14 = OUTLINED_FUNCTION_38_7();
    v0[7] = OUTLINED_FUNCTION_66_5(4.8149e-34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC57C0);
    uint64_t v4 = OUTLINED_FUNCTION_64_5();
    uint64_t v6 = sub_256BE14CC(v4, v5, &v14);
    OUTLINED_FUNCTION_22_9(v6);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53(&dword_256BD4000, v7, v8, "Unhandled request requiring callback of type: %s");
    OUTLINED_FUNCTION_30_8();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }

  uint64_t v9 = MEMORY[0x263F8D318];
  v0[5] = MEMORY[0x263F8D310];
  v0[6] = v9;
  v0[2] = 0xD000000000000024;
  v0[3] = 0x8000000256D01AD0;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_256CD2454;
  uint64_t v11 = OUTLINED_FUNCTION_59_8();
  return v12(v11);
}

uint64_t sub_256CCB304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 72) = a2;
  *(void *)(v3 + 80) = a3;
  return MEMORY[0x270FA2498](sub_256CCB324, 0, 0);
}

uint64_t sub_256CCB324()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v15 = v0;
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_43_4(v1, (uint64_t)qword_26B2C8CA8);
  os_log_type_t v3 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_41(v3))
  {
    OUTLINED_FUNCTION_24_0();
    uint64_t v14 = OUTLINED_FUNCTION_38_7();
    v0[7] = OUTLINED_FUNCTION_66_5(4.8149e-34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC57C0);
    uint64_t v4 = OUTLINED_FUNCTION_64_5();
    uint64_t v6 = sub_256BE14CC(v4, v5, &v14);
    OUTLINED_FUNCTION_22_9(v6);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53(&dword_256BD4000, v7, v8, "Unhandled request requiring callback of type: %s");
    OUTLINED_FUNCTION_30_8();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }

  uint64_t v9 = MEMORY[0x263F8D318];
  v0[5] = MEMORY[0x263F8D310];
  v0[6] = v9;
  v0[2] = 0xD000000000000024;
  v0[3] = 0x8000000256D01AD0;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_256CCB518;
  uint64_t v11 = OUTLINED_FUNCTION_59_8();
  return v12(v11);
}

uint64_t sub_256CCB518()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 16;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_1();
  *unint64_t v5 = v4;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  OUTLINED_FUNCTION_16();
  return v6();
}

uint64_t TaskCancellablePeerHandler.handleIncomingRequestWithReply(_:callback:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  OUTLINED_FUNCTION_43_6();
  v3[11] = v4;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CCB60C, 0);
}

uint64_t sub_256CCB60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_28_0();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_71_6();
  a20 = v22;
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_256CEDC88();
  uint64_t v26 = (void *)OUTLINED_FUNCTION_43_4(v25, (uint64_t)qword_26B2C8CA8);
  os_log_type_t v27 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_41(v27))
  {
    OUTLINED_FUNCTION_24_0();
    a11 = OUTLINED_FUNCTION_38_7();
    v22[7] = OUTLINED_FUNCTION_65_6(4.8149e-34);
    swift_getMetatypeMetadata();
    uint64_t v28 = OUTLINED_FUNCTION_64_5();
    uint64_t v30 = sub_256BE14CC(v28, v29, &a11);
    OUTLINED_FUNCTION_22_9(v30);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53(&dword_256BD4000, v31, v32, "Unhandled request requiring callback of type: %s");
    OUTLINED_FUNCTION_30_8();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }

  uint64_t v33 = (int *)v22[9];
  uint64_t v34 = MEMORY[0x263F8D318];
  void v22[5] = MEMORY[0x263F8D310];
  v22[6] = v34;
  v22[2] = 0xD000000000000024;
  v22[3] = 0x8000000256D01AD0;
  uint64_t v45 = (char *)v33 + *v33;
  uint64_t v35 = (void *)swift_task_alloc();
  v22[12] = v35;
  *uint64_t v35 = v22;
  v35[1] = sub_256CCB7EC;
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_26_0();
  return v37(v36, v37, v38, v39, v40, v41, v42, v43, a9, v45, a11, a12, a13, a14);
}

uint64_t sub_256CCB7EC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 16;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_1();
  *unint64_t v5 = v4;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  OUTLINED_FUNCTION_16();
  return v6();
}

uint64_t sub_256CCB8B4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256BE3BF0;
  return TaskCancellablePeerHandler.handleIncomingRequest(_:)();
}

uint64_t TaskCancellablePeerHandler.handleIncomingRequest(_:)()
{
  OUTLINED_FUNCTION_43_6();
  *(void *)(v0 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CCB970, 0);
}

uint64_t sub_256CCB970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_21_5();
  a19 = v21;
  a20 = v22;
  OUTLINED_FUNCTION_44_1();
  a18 = v20;
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_256CEDC88();
  uint64_t v24 = (void *)OUTLINED_FUNCTION_43_4(v23, (uint64_t)qword_26B2C8CA8);
  os_log_type_t v25 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_41(v25))
  {
    OUTLINED_FUNCTION_24_0();
    a9 = OUTLINED_FUNCTION_38_7();
    *(void *)(v20 + 16) = OUTLINED_FUNCTION_65_6(4.8149e-34);
    swift_getMetatypeMetadata();
    uint64_t v26 = OUTLINED_FUNCTION_64_5();
    *(void *)(v20 + 16) = sub_256BE14CC(v26, v27, &a9);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53(&dword_256BD4000, v28, v29, "Unhandled one-way request of type: %s");
    OUTLINED_FUNCTION_30_8();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }

  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_20_1();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12);
}

uint64_t sub_256CCBAB4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256BDD6B8;
  return TaskCancellablePeerHandler.handleCancellation(error:)();
}

uint64_t TaskCancellablePeerHandler.handleCancellation(error:)()
{
  return sub_256BFD374(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_256CCBB74()
{
  return sub_256CEE1B8();
}

uint64_t TaskCancellingXPCPeerHandler.init(handler:)()
{
  swift_defaultActor_initialize();
  OUTLINED_FUNCTION_7_0();
  uint64_t v2 = *(void *)(v1 + 112);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B60);
  uint64_t v3 = sub_256CEDEB8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5C80);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  *(void *)(v0 + v2) = v4;
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(void))(v5 + 32))();
  return v0;
}

uint64_t type metadata accessor for TaskCancellableMessage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_256CCBC94()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BDD6B8;
  OUTLINED_FUNCTION_74_3();
  OUTLINED_FUNCTION_20_1();
  return sub_256CC9EAC(v3, v4, v5, v6, v7, v8, v9, v10);
}

void sub_256CCBD60()
{
  sub_256CCABE4(*(os_unfair_lock_s **)(v0 + 56));
}

uint64_t sub_256CCBD74()
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_74_3();
  OUTLINED_FUNCTION_9_2();
  return sub_256CCAC48(v3, v4, v5, v6, v7, v8, v9);
}

void sub_256CCBE24()
{
  sub_256CCAFE4(*(os_unfair_lock_s **)(v0 + 40));
}

void sub_256CCBE34()
{
  OUTLINED_FUNCTION_57();
  uint64_t v111 = v1;
  OUTLINED_FUNCTION_24_7();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v108 = v0;
  uint64_t v5 = *(void *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v109 = v5;
  uint64_t v110 = v3;
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v100 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v96 = (char *)v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v99 = (char *)v93 - v11;
  OUTLINED_FUNCTION_78_6();
  OUTLINED_FUNCTION_78_6();
  uint64_t v12 = type metadata accessor for TaskCancellableMessage();
  OUTLINED_FUNCTION_0_0();
  uint64_t v106 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_3_6();
  os_log_type_t v17 = (uint64_t *)(v15 - v16);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v93 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v22 = OUTLINED_FUNCTION_21(v21);
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_19();
  uint64_t v97 = v24 - v23;
  sub_256CEDE98();
  OUTLINED_FUNCTION_0_0();
  uint64_t v102 = v26;
  uint64_t v103 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v101 = v27;
  uint64_t v107 = (char *)v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_checkMetadataState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v98 = v28;
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v94 = (char *)v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v104 = (char *)v93 - v34;
  uint64_t v105 = v33;
  uint64_t v35 = type metadata accessor for TaskCancellableMessage();
  OUTLINED_FUNCTION_0_0();
  uint64_t v37 = v36;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_3_6();
  uint64_t v41 = (uint64_t *)(v39 - v40);
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)v93 - v43;
  if (sub_256CEDE48())
  {
    uint64_t v106 = v37;
    swift_getWitnessTable();
    sub_256CEDE78();
    uint64_t v45 = v106;
    OUTLINED_FUNCTION_20_8();
    v46();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v48 = *v41;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v49 = sub_256CEE178();
      OUTLINED_FUNCTION_72_2(v97, v50, v51, v49);
      uint64_t v52 = (void *)swift_allocObject();
      v52[2] = 0;
      v52[3] = 0;
      v52[4] = v108;
      v52[5] = v48;
      swift_retain();
      sub_256BDB760();
      swift_release();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v35);
    }
    else
    {
      uint64_t v100 = v44;
      LODWORD(v99) = *((unsigned __int8 *)v41 + *(int *)(swift_getTupleTypeMetadata3() + 64));
      uint64_t v61 = *(char **)(v98 + 32);
      uint64_t v97 = v98 + 32;
      uint64_t v96 = v61;
      OUTLINED_FUNCTION_33_3();
      v62();
      if (qword_26B2C9180 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_256CEDC88();
      uint64_t v64 = OUTLINED_FUNCTION_43_4(v63, (uint64_t)qword_26B2C9168);
      os_log_type_t v65 = sub_256CEE2A8();
      uint64_t v66 = v65;
      if (os_log_type_enabled(v64, v65))
      {
        *(_DWORD *)OUTLINED_FUNCTION_24_0() = 134217984;
        uint64_t v112 = v48;
        sub_256CEE308();
        OUTLINED_FUNCTION_63_7(&dword_256BD4000, v64, (os_log_type_t)v66, "Received message %llu.");
        OUTLINED_FUNCTION_4();
      }

      sub_256CEDE58();
      uint64_t v67 = v102;
      uint64_t v68 = v103;
      OUTLINED_FUNCTION_20_8();
      v69();
      uint64_t v95 = v48;
      uint64_t v70 = v98;
      OUTLINED_FUNCTION_20_8();
      v71();
      unint64_t v72 = (v30
           + ((v101
             + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))
             + *(unsigned __int8 *)(v70 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))
           + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v73 = swift_allocObject();
      uint64_t v74 = OUTLINED_FUNCTION_46_6(v73);
      (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v74, v107, v68);
      uint64_t v75 = v105;
      OUTLINED_FUNCTION_33_3();
      v76();
      *(void *)(v66 + v72) = v108;
      *(void *)(v66 + ((v72 + 15) & 0xFFFFFFFFFFFFFFF8)) = v95;
      swift_retain();
      sub_256CCED38();
      swift_release();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v104, v75);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v100, v35);
    }
  }
  else
  {
    swift_getWitnessTable();
    sub_256CEDE78();
    uint64_t v53 = v106;
    OUTLINED_FUNCTION_20_8();
    v54();
    int v55 = swift_getEnumCaseMultiPayload();
    uint64_t v105 = *v17;
    if (v55 == 1)
    {
      uint64_t v56 = sub_256CEE178();
      OUTLINED_FUNCTION_72_2(v97, v57, v58, v56);
      uint64_t v59 = (void *)swift_allocObject();
      v59[2] = 0;
      v59[3] = 0;
      uint64_t v60 = v105;
      v59[4] = v108;
      v59[5] = v60;
      swift_retain();
      sub_256BDB760();
      swift_release();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v20, v12);
    }
    else
    {
      uint64_t v98 = v12;
      uint64_t v104 = v20;
      LODWORD(v97) = *((unsigned __int8 *)v17 + *(int *)(swift_getTupleTypeMetadata3() + 64));
      uint64_t v77 = v99;
      uint64_t v78 = *((void *)v100 + 4);
      uint64_t v94 = v100 + 32;
      v93[1] = v78;
      OUTLINED_FUNCTION_33_3();
      v79();
      if (qword_26B2C9180 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_256CEDC88();
      uint64_t v81 = OUTLINED_FUNCTION_43_4(v80, (uint64_t)qword_26B2C9168);
      os_log_type_t v82 = sub_256CEE2A8();
      if (os_log_type_enabled(v81, v82))
      {
        *(_DWORD *)OUTLINED_FUNCTION_24_0() = 134217984;
        uint64_t v112 = v105;
        sub_256CEE308();
        OUTLINED_FUNCTION_63_7(&dword_256BD4000, v81, v82, "Received message %llu.");
        OUTLINED_FUNCTION_4();
      }

      sub_256CEDE58();
      uint64_t v83 = v102;
      uint64_t v84 = v103;
      OUTLINED_FUNCTION_20_8();
      v85();
      uint64_t v86 = v100;
      OUTLINED_FUNCTION_20_8();
      v87();
      unint64_t v88 = (v95
           + ((v101
             + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))
             + v86[80]) & ~(unint64_t)v86[80])
           + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v89 = swift_allocObject();
      uint64_t v90 = OUTLINED_FUNCTION_46_6(v89);
      (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v90, v107, v84);
      OUTLINED_FUNCTION_33_3();
      v91();
      *(void *)&v77[v88] = v108;
      *(void *)&v77[(v88 + 15) & 0xFFFFFFFFFFFFFFF8] = v105;
      swift_retain();
      sub_256CCED38();
      swift_release();
      (*((void (**)(char *, uint64_t))v86 + 1))(v99, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v104, v98);
    }
  }
  uint64_t v92 = (_OWORD *)v111;
  *(void *)(v111 + 32) = 0;
  *uint64_t v92 = 0u;
  v92[1] = 0u;
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256CCCA94(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = *a3;
  v4[12] = *(void *)(*a3 + 88);
  v4[13] = *(void *)(v5 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[14] = AssociatedTypeWitness;
  v4[15] = *(void *)(AssociatedTypeWitness - 8);
  v4[16] = swift_task_alloc();
  uint64_t v7 = sub_256CEDE98();
  v4[17] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[18] = v8;
  v4[19] = *(void *)(v8 + 64);
  v4[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CCCC00, 0, 0);
}

uint64_t sub_256CCCC00()
{
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_44_1();
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v26 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[14];
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for TaskCancellingXPCReceivedMessage();
  uint64_t v9 = v26;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v27(v1, v7, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v6, v5);
  v0[21] = sub_256CCD1E0(v1);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(v5, AssociatedConformanceWitness))
  {
    uint64_t v10 = v0[20];
    uint64_t v11 = v0[17];
    uint64_t v12 = v0[18];
    uint64_t v13 = v0[11];
    v27(v10, v0[8], v11);
    unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v15 = swift_allocObject();
    v0[22] = v15;
    *(void *)(v15 + 16) = v13;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v15 + v14, v10, v11);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[23] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_256CCCE5C;
    OUTLINED_FUNCTION_20_1();
    return sub_256CCDD80(v17, v18, v19, v20);
  }
  else
  {
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    v0[24] = v23;
    void *v23 = v24;
    v23[1] = sub_256CCCFAC;
    OUTLINED_FUNCTION_20_1();
    return sub_256CCDA98();
  }
}

uint64_t sub_256CCCE5C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CCCF40()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CCCFAC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CCD074()
{
  OUTLINED_FUNCTION_15();
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  uint64_t v2 = OUTLINED_FUNCTION_43_4(v1, (uint64_t)qword_26B2C9168);
  os_log_type_t v3 = sub_256CEE2A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[11];
    uint64_t v5 = (float *)OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_45_5(v5, 3.852e-34);
    v0[7] = v4;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v2, v3, "Replying to message %llu.", (uint8_t *)v5, 0xCu);
    OUTLINED_FUNCTION_4();
  }

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_256CEDE68();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v6();
}

uint64_t sub_256CCD1E0(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_57_6();
  sub_256CCF74C(a1);
  return v2;
}

uint64_t sub_256CCD224(void *a1)
{
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_256CEDC88();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2C9168);
  os_log_type_t v3 = sub_256CEDC68();
  os_log_type_t v4 = sub_256CEE2A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v3, v4, "Replying to message %llu.", v5, 0xCu);
    MEMORY[0x25A2AEBD0](v5, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_256CEDE68();
}

uint64_t sub_256CCD368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_256BE3BF0;
  return sub_256CCE950(a5);
}

uint64_t sub_256CCD404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  v4[6] = swift_getAssociatedTypeWitness();
  v4[7] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[8] = AssociatedTypeWitness;
  v4[9] = *(void *)(AssociatedTypeWitness - 8);
  v4[10] = swift_task_alloc();
  uint64_t v6 = sub_256CEDE98();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CCD5BC, 0, 0);
}

uint64_t sub_256CCD5BC()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_71_6();
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[3];
  uint64_t v9 = v0[2];
  OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_69_5();
  type metadata accessor for TaskCancellingXPCReceivedMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v11, v4);
  v0[14] = sub_256CCD1E0(v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[15] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_256CCD6F8;
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_26_0();
  return sub_256CCD82C();
}

uint64_t sub_256CCD6F8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CCD7C0()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CCD82C()
{
  OUTLINED_FUNCTION_257();
  uint64_t v13 = v2;
  OUTLINED_FUNCTION_15();
  v1[2] = v3;
  v1[3] = v0;
  OUTLINED_FUNCTION_24_7();
  uint64_t v5 = *(void *)(v4 + 88);
  OUTLINED_FUNCTION_27_11();
  uint64_t v7 = *(void *)(v6 + 80);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  v1[4] = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_256CCD960;
  uint64_t v10 = OUTLINED_FUNCTION_49();
  return v12(v10, v7, v5);
}

uint64_t sub_256CCD960()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256CCDA40, v2, 0);
}

uint64_t sub_256CCDA40()
{
  OUTLINED_FUNCTION_2();
  sub_256CCF41C();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CCDA98()
{
  OUTLINED_FUNCTION_59();
  uint64_t v3 = v2;
  v1[9] = v4;
  v1[10] = v0;
  v1[8] = v5;
  OUTLINED_FUNCTION_24_7();
  uint64_t v7 = *(void *)(v6 + 88);
  OUTLINED_FUNCTION_27_11();
  uint64_t v9 = *(void *)(v8 + 80);
  unint64_t v14 = (int *)((char *)v10 + *v10);
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v1[11] = v11;
  void *v11 = v12;
  v11[1] = sub_256CCDBE0;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))v14)(v1 + 2, v3, v9, v7);
}

uint64_t sub_256CCDBE0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256CCDCC0, v2, 0);
}

uint64_t sub_256CCDCC0()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (uint64_t *)v0[8];
  sub_256CCF41C();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v1[3] = v2;
  v1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(void))(v4 + 16))();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_198();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_256CCDD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  OUTLINED_FUNCTION_4_6();
  uint64_t v5[7] = v6;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CCDDB4, v4);
}

uint64_t sub_256CCDDB4()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[3];
  uint64_t v6 = (void *)swift_allocObject();
  v0[8] = v6;
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = v1;
  v6[5] = v5;
  uint64_t v9 = v2 + 80;
  uint64_t v8 = *(void *)(v2 + 80);
  uint64_t v7 = *(void *)(v9 + 8);
  uint64_t v13 = (uint64_t (*)(uint64_t, void *, void *, uint64_t, uint64_t))(*(void *)(v7 + 32) + **(int **)(v7 + 32));
  swift_retain();
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_256CCDF2C;
  uint64_t v11 = v0[2];
  return v13(v11, &unk_269FC5738, v6, v8, v7);
}

uint64_t sub_256CCDF2C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256CCE008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_256CCE030, 0, 0);
}

uint64_t sub_256CCE030()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 40);
  (*(void (**)(void))(v0 + 24))(*(void *)(v0 + 16));
  return MEMORY[0x270FA2498](sub_256CCE09C, v1, 0);
}

uint64_t sub_256CCE09C()
{
  OUTLINED_FUNCTION_2();
  sub_256CCF41C();
  OUTLINED_FUNCTION_16();
  return v0();
}

void sub_256CCE0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_57();
  a19 = v21;
  a20 = v22;
  uint64_t v23 = *v20;
  uint64_t v24 = sub_256CEDDE8();
  OUTLINED_FUNCTION_0_0();
  uint64_t v26 = v25;
  uint64_t v28 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v32 = OUTLINED_FUNCTION_21(v31);
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_19();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = sub_256CEE178();
  OUTLINED_FUNCTION_72_2(v35, v37, v38, v36);
  OUTLINED_FUNCTION_20_8();
  v39();
  uint64_t v40 = *(void *)(v23 + 80);
  uint64_t v41 = *(void *)(v23 + 88);
  type metadata accessor for TaskCancellingXPCPeerHandler();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v43 = (*(unsigned __int8 *)(v26 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v44 = (char *)swift_allocObject();
  *((void *)v44 + 2) = v20;
  *((void *)v44 + 3) = WitnessTable;
  *((void *)v44 + 4) = v40;
  *((void *)v44 + 5) = v41;
  *((void *)v44 + 6) = v20;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v44[v43], v30, v24);
  swift_retain_n();
  sub_256BDB760();
  swift_release();
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256CCE2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  uint64_t v7 = *(void *)(*(void *)a4 + 88);
  uint64_t v8 = *(void *)(*(void *)a4 + 80);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 48) + **(int **)(v7 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_256CCE408;
  return v11(a5, v8, v7);
}

uint64_t sub_256CCE408()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256CCE4E8, v2, 0);
}

uint64_t sub_256CCE4E8()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 112));
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_256CCE59C(v2);
  os_unfair_lock_unlock(v3);
  OUTLINED_FUNCTION_16();
  return v4();
}

uint64_t sub_256CCE59C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = sub_256CEDEC8();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    sub_256BF973C(*(void *)(v1 + 56) + 40 * i, (uint64_t)v16);
    uint64_t v14 = v17;
    uint64_t v15 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v6) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_256CCE744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_57();
  a19 = v21;
  a20 = v22;
  uint64_t v23 = *v20;
  uint64_t v24 = sub_256CEDDE8();
  OUTLINED_FUNCTION_0_0();
  uint64_t v26 = v25;
  uint64_t v28 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v31 = OUTLINED_FUNCTION_21(v30);
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_19();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_256CEE178();
  OUTLINED_FUNCTION_72_2(v34, v36, v37, v35);
  OUTLINED_FUNCTION_20_8();
  v38();
  unint64_t v39 = (*(unsigned __int8 *)(v26 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v40 = (char *)swift_allocObject();
  *((void *)v40 + 2) = 0;
  *((void *)v40 + 3) = 0;
  *((void *)v40 + 4) = *(void *)(v23 + 80);
  *((void *)v40 + 5) = *(void *)(v23 + 88);
  *((void *)v40 + 6) = v20;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v40[v39], (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  swift_retain();
  sub_256BDB760();
  swift_release();
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256CCE8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_256CCE8F8, a4, 0);
}

#error "256CCE920: call analysis failed (funcsize=22)"

uint64_t sub_256CCE950(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CCE96C, v1);
}

uint64_t sub_256CCE96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  unint64_t v12 = OUTLINED_FUNCTION_43_4(v11, (uint64_t)qword_26B2C9168);
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = v10[3];
    uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    *(_DWORD *)uint64_t v15 = 134217984;
    v10[2] = v14;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Received task cancellation for message %llu.", v15, 0xCu);
    OUTLINED_FUNCTION_4();
  }

  uint64_t v16 = v10[3];
  uint64_t v17 = *(void *)(v10[4] + *(void *)(*(void *)v10[4] + 112));
  *(void *)(swift_task_alloc() + 16) = v16;
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
  sub_256C00A8C((uint64_t *)(v17 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_9_2();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
}

void sub_256CCEB00(uint64_t *a1, uint64_t a2)
{
  sub_256CEB8BC(a2, *a1, (uint64_t)&v17);
  if (v18)
  {
    sub_256BE3924(&v17, (uint64_t)v19);
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    if (qword_26B2C9180 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_256CEDC88();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B2C9168);
    int64_t v6 = sub_256CEDC68();
    os_log_type_t v7 = sub_256CEE2A8();
    if (os_log_type_enabled(v6, v7))
    {
      int64_t v8 = (float *)swift_slowAlloc();
      OUTLINED_FUNCTION_45_5(v8, 3.852e-34);
      *(void *)&long long v17 = a2;
      sub_256CEE308();
      OUTLINED_FUNCTION_67_6(&dword_256BD4000, v9, v10, "Cancelled task for message %llu.");
      MEMORY[0x25A2AEBD0](v8, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  }
  else
  {
    sub_256CD21B8((uint64_t)&v17, &qword_26B2C5B68);
    if (qword_26B2C9180 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_256CEDC88();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
    unint64_t v12 = sub_256CEDC68();
    os_log_type_t v13 = sub_256CEE2A8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (float *)swift_slowAlloc();
      OUTLINED_FUNCTION_45_5(v14, 3.852e-34);
      v19[0] = a2;
      sub_256CEE308();
      OUTLINED_FUNCTION_67_6(&dword_256BD4000, v15, v16, "Task for message %llu not found to cancel.");
      MEMORY[0x25A2AEBD0](v14, -1, -1);
    }
  }
}

void sub_256CCED38()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + *(void *)(*(void *)v0 + 112));
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_256C00AA8(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_256CCEDB0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v10 = OUTLINED_FUNCTION_21(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_19();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  *(void *)(v15 + 32) = a2;
  *(unsigned char *)(v15 + 40) = a3;
  *(void *)(v15 + 48) = a4;
  *(void *)(v15 + 56) = a5;
  swift_retain();
  uint64_t v16 = sub_256BDB760();
  uint64_t v18[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5C78);
  v18[4] = &off_270621060;
  v18[0] = v16;
  return sub_256CD513C((uint64_t)v18, a2);
}

uint64_t sub_256CCEEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = a7;
  *(unsigned char *)(v7 + 81) = a5;
  *(void *)(v7 + 40) = a4;
  return MEMORY[0x270FA2498](sub_256CCEF04, 0, 0);
}

uint64_t sub_256CCEF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_71_6();
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_256CEDC88();
  *(void *)(v14 + 64) = __swift_project_value_buffer(v15, (uint64_t)qword_26B2C9168);
  uint64_t v16 = sub_256CEDC68();
  os_log_type_t v17 = sub_256CEE2A8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = *(void *)(v14 + 40);
    *(_DWORD *)OUTLINED_FUNCTION_24_0() = 134217984;
    *(void *)(v14 + 32) = v18;
    sub_256CEE308();
    OUTLINED_FUNCTION_63_7(&dword_256BD4000, v16, v17, "Starting task for message %llu.");
    OUTLINED_FUNCTION_4();
  }

  if (*(unsigned char *)(v14 + 81) == 1)
  {
    uint64_t v19 = sub_256CEDC68();
    os_log_type_t v20 = sub_256CEE2A8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = *(void *)(v14 + 40);
      *(_DWORD *)OUTLINED_FUNCTION_24_0() = 134217984;
      *(void *)(v14 + 24) = v21;
      sub_256CEE308();
      OUTLINED_FUNCTION_63_7(&dword_256BD4000, v19, v20, "Precancelling task for message %llu.");
      OUTLINED_FUNCTION_4();
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4868);
    sub_256CEE448();
  }
  uint64_t v32 = *(void *)(v14 + 48) + **(int **)(v14 + 48);
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v14 + 72) = v22;
  *uint64_t v22 = v14;
  v22[1] = sub_256CCF164;
  OUTLINED_FUNCTION_26_0();
  return v23(v23, v24, v25, v26, v27, v28, v29, v30, a9, v32, a11, a12, a13, a14);
}

uint64_t sub_256CCF164()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CCF22C()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = sub_256CEDC68();
  os_log_type_t v2 = sub_256CEE2A8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 16) = v3;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v1, v2, "Completed task for message %llu.", v4, 0xCu);
    OUTLINED_FUNCTION_4();
  }

  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_198();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_256CCF30C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4C20);
  MEMORY[0x270FA5388](v4 - 8);
  int64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256C900C4(a1, (uint64_t)v6);
  uint64_t v7 = sub_256CEE258();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t result = sub_256CD21B8((uint64_t)v6, &qword_269FC4C20);
  }
  else
  {
    sub_256CEE248();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  *a2 = EnumTagSinglePayload == 1;
  return result;
}

void sub_256CCF41C()
{
  OUTLINED_FUNCTION_7_0();
  os_log_type_t v2 = *(os_unfair_lock_s **)(v0 + *(void *)(v1 + 112));
  uint64_t v3 = (uint64_t *)&v2[4];
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_256C00A70(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_256CCF488(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v4 = sub_256C9BE74(a2), (v5 & 1) != 0))
  {
    sub_256BF973C(*(void *)(v2 + 56) + 40 * v4, (uint64_t)&v11);
    sub_256CD21B8((uint64_t)&v11, &qword_26B2C5B68);
    if (qword_26B2C9180 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_256CEDC88();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B2C9168);
    uint64_t v7 = sub_256CEDC68();
    os_log_type_t v8 = sub_256CEE2A8();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134217984;
      *(void *)&long long v11 = a2;
      sub_256CEE308();
      _os_log_impl(&dword_256BD4000, v7, v8, "Message %llu done.", v9, 0xCu);
      MEMORY[0x25A2AEBD0](v9, -1, -1);
    }

    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    return sub_256CD513C((uint64_t)&v11, a2);
  }
  else
  {
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    return sub_256CD21B8((uint64_t)&v11, &qword_26B2C5B68);
  }
}

uint64_t TaskCancellingXPCPeerHandler.deinit()
{
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(void))(v1 + 8))();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t TaskCancellingXPCPeerHandler.__deallocating_deinit()
{
  TaskCancellingXPCPeerHandler.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t TaskCancellingXPCPeerHandler.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_256CCF6E8()
{
  return TaskCancellingXPCPeerHandler.unownedExecutor.getter();
}

void sub_256CCF704()
{
}

#error "256CCF73C: call analysis failed (funcsize=9)"

uint64_t sub_256CCF74C(uint64_t a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v2 + 16) = sub_256CEDE88() & 1;
  unint64_t v4 = sub_256CEDE38();
  int v5 = v4;
  int v7 = v6;
  int v9 = v8;
  int v11 = v10;
  unint64_t v12 = HIDWORD(v4);
  unint64_t v13 = HIDWORD(v6);
  unint64_t v14 = HIDWORD(v8);
  unint64_t v15 = HIDWORD(v10);
  sub_256CEDE98();
  OUTLINED_FUNCTION_17_7();
  (*(void (**)(uint64_t))(v16 + 8))(a1);
  *(_DWORD *)(v2 + 20) = v5;
  *(_DWORD *)(v2 + 24) = v12;
  *(_DWORD *)(v2 + 28) = v7;
  *(_DWORD *)(v2 + 32) = v13;
  *(_DWORD *)(v2 + 36) = v9;
  *(_DWORD *)(v2 + 40) = v14;
  *(_DWORD *)(v2 + 44) = v11;
  *(_DWORD *)(v2 + 48) = v15;
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(void))(v17 + 32))();
  return v2;
}

uint64_t TaskCancellingXPCReceivedMessage.__allocating_init(isSync:auditToken:request:)(char a1, _OWORD *a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_57_6();
  TaskCancellingXPCReceivedMessage.init(isSync:auditToken:request:)(a1, a2);
  return v4;
}

uint64_t TaskCancellingXPCReceivedMessage.init(isSync:auditToken:request:)(char a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *(_OWORD *)(v2 + 20) = *a2;
  *(unsigned char *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 36) = v3;
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(void))(v4 + 32))();
  return v2;
}

uint64_t TaskCancellingXPCReceivedMessage.decode()()
{
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_33_0();
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t TaskCancellingXPCReceivedMessage.isSync.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

__n128 TaskCancellingXPCReceivedMessage.auditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 20);
  long long v3 = *(_OWORD *)(v1 + 36);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t TaskCancellingXPCReceivedMessage.deinit()
{
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(void))(v1 + 8))();
  return v0;
}

uint64_t TaskCancellingXPCReceivedMessage.__deallocating_deinit()
{
  TaskCancellingXPCReceivedMessage.deinit();
  OUTLINED_FUNCTION_4_6();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return MEMORY[0x270FA0228](v0, v2, v3);
}

uint64_t sub_256CCFA3C()
{
  OUTLINED_FUNCTION_257();
  uint64_t v7 = v0;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_72_5();
  uint64_t v1 = OUTLINED_FUNCTION_11_4();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  uint64_t v4 = OUTLINED_FUNCTION_48_9();
  return v5(v4);
}

uint64_t sub_256CCFACC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = OUTLINED_FUNCTION_11_4();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_49();
  return v5(v3);
}

uint64_t sub_256CCFB60()
{
  OUTLINED_FUNCTION_257();
  uint64_t v7 = v0;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_72_5();
  uint64_t v1 = OUTLINED_FUNCTION_11_4();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  uint64_t v4 = OUTLINED_FUNCTION_48_9();
  return v5(v4);
}

uint64_t sub_256CCFBF4()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_14_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_198();
  return sub_256CCD368(v3, v4, v5, v6, v7);
}

uint64_t sub_256CCFC88()
{
  OUTLINED_FUNCTION_57();
  uint64_t v1 = sub_256CEDE98();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v6 = v4 + *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  unint64_t v10 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, AssociatedTypeWitness);
  swift_release();
  OUTLINED_FUNCTION_71();
  return MEMORY[0x270FA0238](v11, v12, v13);
}

uint64_t sub_256CCFDE8()
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  uint64_t v0 = sub_256CEDE98();
  OUTLINED_FUNCTION_6(v0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6(AssociatedTypeWitness);
  OUTLINED_FUNCTION_44_8();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_9_2();
  return sub_256CCD404(v5, v6, v7, v8);
}

uint64_t sub_256CCFF44()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_14_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_198();
  return sub_256CCD368(v3, v4, v5, v6, v7);
}

uint64_t sub_256CCFFD8()
{
  OUTLINED_FUNCTION_57();
  uint64_t v1 = sub_256CEDE98();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v6 = v4 + *(void *)(v5 + 64);
  uint64_t v7 = OUTLINED_FUNCTION_79_3();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  unint64_t v10 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v7);
  swift_release();
  OUTLINED_FUNCTION_71();
  return MEMORY[0x270FA0238](v11, v12, v13);
}

uint64_t sub_256CD00EC()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = sub_256CEDE98();
  OUTLINED_FUNCTION_6(v0);
  uint64_t v1 = OUTLINED_FUNCTION_79_3();
  OUTLINED_FUNCTION_6(v1);
  OUTLINED_FUNCTION_44_8();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_198();
  return sub_256CCCA94(v5, v6, v7, v8);
}

uint64_t sub_256CD01F8()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_256CD0238()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_14_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_198();
  return sub_256CCE008(v3, v4, v5, v6, v7);
}

uint64_t sub_256CD02E0()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = sub_256CEDDE8();
  OUTLINED_FUNCTION_24(v0);
  OUTLINED_FUNCTION_51_4();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_198();
  return sub_256CCE8D8(v4, v5, v6, v7, v8);
}

uint64_t dispatch thunk of TaskCancellableXPCRequest.needsCallback.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TaskCancellablePeerHandler.handleIncomingRequestWithReply(_:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_76_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_258();
  return v3();
}

uint64_t dispatch thunk of TaskCancellablePeerHandler.handleIncomingRequestWithReply(_:callback:)()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 32) + **(int **)(v0 + 32));
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_14(v10);
  void *v11 = v12;
  v11[1] = sub_256BE3BF0;
  return v14(v9, v7, v5, v3, v1);
}

uint64_t dispatch thunk of TaskCancellablePeerHandler.handleIncomingRequest(_:)()
{
  OUTLINED_FUNCTION_257();
  uint64_t v7 = v0;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  uint64_t v4 = OUTLINED_FUNCTION_17();
  return v5(v4);
}

uint64_t dispatch thunk of TaskCancellablePeerHandler.handleCancellation(error:)()
{
  OUTLINED_FUNCTION_257();
  uint64_t v7 = v0;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  uint64_t v4 = OUTLINED_FUNCTION_17();
  return v5(v4);
}

uint64_t dispatch thunk of static TaskCancellablePeerHandler.responseForXPCDecodingError(error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_256CD076C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TaskCancellingXPCPeerHandler()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for TaskCancellingXPCPeerHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TaskCancellingXPCPeerHandler);
}

uint64_t dispatch thunk of TaskCancellingXPCPeerHandler.__allocating_init(handler:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TaskCancellingXPCPeerHandler.handleIncomingRequest(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of TaskCancellingXPCPeerHandler.handleIncomingRequest(_:id:)()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_7_0();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 136) + **(int **)(v4 + 136));
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_14(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_256BE3BF0;
  return v9(v3, v1);
}

uint64_t dispatch thunk of TaskCancellingXPCPeerHandler.handleIncomingRequestWithReply(_:id:)()
{
  OUTLINED_FUNCTION_257();
  uint64_t v13 = v0;
  OUTLINED_FUNCTION_15();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_7_0();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 144) + **(int **)(v7 + 144));
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_14(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_256BE3BF0;
  return v12(v6, v4, v2);
}

uint64_t dispatch thunk of TaskCancellingXPCPeerHandler.handleIncomingRequestWithReply(_:id:callback:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_76_2();
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_258();
  return v3();
}

uint64_t dispatch thunk of TaskCancellingXPCPeerHandler.handleCancellation(error:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of TaskCancellingXPCPeerHandler.cancel(id:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 176) + **(int **)(v0 + 176));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  uint64_t v4 = OUTLINED_FUNCTION_49();
  return v6(v4);
}

uint64_t sub_256CD0CA8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TaskCancellingXPCReceivedMessage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for TaskCancellingXPCReceivedMessage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TaskCancellingXPCReceivedMessage);
}

uint64_t dispatch thunk of TaskCancellingXPCReceivedMessage.__allocating_init(isSync:auditToken:request:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_256CD0D94()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = MEMORY[0x263F8CF70] + 64;
    swift_getTupleTypeLayout3();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_256CD0E4C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = v7 + ((v6 + 8) & ~v6);
  if ((unint64_t)(v8 + 1) > 8) {
    uint64_t v9 = v8 + 1;
  }
  else {
    uint64_t v9 = 8;
  }
  int v10 = v5 & 0x100000;
  if (v6 > 7 || v10 != 0 || (unint64_t)(v9 + 1) > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v13 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v14 = a2[v9];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v16 = v9;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_22;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_22;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_22;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_22:
          int v18 = (v17 | (v15 << (8 * v9))) + 2;
          unsigned int v14 = v17 + 2;
          if (v9 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    *a1 = *(void *)a2;
    if (v14 == 1)
    {
      *((unsigned char *)a1 + v9) = 1;
    }
    else
    {
      uint64_t v19 = ((unint64_t)a1 + v6 + 8) & ~v6;
      uint64_t v20 = (unint64_t)&a2[v6 + 8] & ~v6;
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v19, v20);
      *(unsigned char *)(v19 + v7) = *(unsigned char *)(v20 + v7);
      *((unsigned char *)v3 + v9) = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_256CD1010(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64) + ((v3 + 8) & ~v3);
  if ((unint64_t)(v4 + 1) > 8) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 8;
  }
  unsigned int v6 = result[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *result;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)result;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)result;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 != 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(unint64_t))(v2 + 8))((unint64_t)&result[v3 + 8] & ~v3);
  }
  return result;
}

void *sub_256CD1130(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = v6 + ((v5 + 8) & ~v5);
  if ((unint64_t)(v7 + 1) > 8) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 8;
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_13;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_13:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  *a1 = *(void *)a2;
  if (v9 == 1)
  {
    char v14 = 1;
  }
  else
  {
    uint64_t v15 = ((unint64_t)a1 + v5 + 8) & ~v5;
    uint64_t v16 = (unint64_t)&a2[v5 + 8] & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v15, v16);
    char v14 = 0;
    *(unsigned char *)(v15 + v6) = *(unsigned char *)(v16 + v6);
  }
  *((unsigned char *)a1 + v8) = v14;
  return a1;
}

unsigned __int8 *sub_256CD12B4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 64);
    uint64_t v9 = v8 + ((v7 + 8) & ~v7);
    if ((unint64_t)(v9 + 1) > 8) {
      uint64_t v10 = v9 + 1;
    }
    else {
      uint64_t v10 = 8;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_14;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_14:
          int v15 = (v14 | (v12 << (8 * v10))) + 2;
          unsigned int v11 = v14 + 2;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v7;
    if (v11 != 1) {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v7 + 8] & v16, v5);
    }
    unsigned int v17 = a2[v10];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_27;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_27:
          int v21 = (v20 | (v18 << (8 * v10))) + 2;
          unsigned int v17 = v20 + 2;
          if (v10 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    *(void *)a1 = *(void *)a2;
    if (v17 == 1)
    {
      char v22 = 1;
    }
    else
    {
      uint64_t v23 = &a2[v7];
      uint64_t v24 = (unint64_t)&a1[v7 + 8] & v16;
      uint64_t v25 = (unint64_t)(v23 + 8) & v16;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v24, v25, v5);
      char v22 = 0;
      *(unsigned char *)(v24 + v8) = *(unsigned char *)(v25 + v8);
    }
    a1[v10] = v22;
  }
  return a1;
}

void *sub_256CD1508(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = v6 + ((v5 + 8) & ~v5);
  if ((unint64_t)(v7 + 1) > 8) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 8;
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_13;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_13:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  *a1 = *(void *)a2;
  if (v9 == 1)
  {
    char v14 = 1;
  }
  else
  {
    uint64_t v15 = ((unint64_t)a1 + v5 + 8) & ~v5;
    uint64_t v16 = (unint64_t)&a2[v5 + 8] & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v15, v16);
    char v14 = 0;
    *(unsigned char *)(v15 + v6) = *(unsigned char *)(v16 + v6);
  }
  *((unsigned char *)a1 + v8) = v14;
  return a1;
}

unsigned __int8 *sub_256CD168C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 64);
    uint64_t v9 = v8 + ((v7 + 8) & ~v7);
    if ((unint64_t)(v9 + 1) > 8) {
      uint64_t v10 = v9 + 1;
    }
    else {
      uint64_t v10 = 8;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_14;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_14:
          int v15 = (v14 | (v12 << (8 * v10))) + 2;
          unsigned int v11 = v14 + 2;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v7;
    if (v11 != 1) {
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v7 + 8] & v16, v5);
    }
    unsigned int v17 = a2[v10];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_27;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_27:
          int v21 = (v20 | (v18 << (8 * v10))) + 2;
          unsigned int v17 = v20 + 2;
          if (v10 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    *(void *)a1 = *(void *)a2;
    if (v17 == 1)
    {
      char v22 = 1;
    }
    else
    {
      uint64_t v23 = &a2[v7];
      uint64_t v24 = (unint64_t)&a1[v7 + 8] & v16;
      uint64_t v25 = (unint64_t)(v23 + 8) & v16;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v24, v25, v5);
      char v22 = 0;
      *(unsigned char *)(v24 + v8) = *(unsigned char *)(v25 + v8);
    }
    a1[v10] = v22;
  }
  return a1;
}

uint64_t sub_256CD18E0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80));
  uint64_t v4 = 8;
  if (v3 + 1 > 8) {
    uint64_t v4 = v3 + 1;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_256CD1A54(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80));
  if (v5 + 1 > 8) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 8;
  }
  size_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if (a3 < 0xFF)
  {
    int v9 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v10 = a2 - 255;
    if (v7 < 4)
    {
      int v11 = (v10 >> v8) + 1;
      if (v6 != -1)
      {
        int v13 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v7] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v11;
        break;
      case 3:
LABEL_35:
        __break(1u);
        JUMPOUT(0x256CD1C58);
      case 4:
        *(_DWORD *)&a1[v7] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_23;
      case 3:
        goto LABEL_35;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      default:
LABEL_23:
        if (a2) {
LABEL_24:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_256CD1C80(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  uint64_t v3 = 8;
  if (v2 + 1 > 8) {
    uint64_t v3 = v2 + 1;
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_256CD1D78(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
     + 1
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80));
  if (a2 > 1)
  {
    if (v4 <= 8) {
      size_t v5 = 8;
    }
    else {
      size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
    }
         + 1
         + ((*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80));
    unsigned int v6 = a2 - 2;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    if (v4 <= 8) {
      unint64_t v4 = 8;
    }
    a1[v4] = a2;
  }
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v1 = sub_256CEDDE8();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 56) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t sub_256CD1F48()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = sub_256CEDDE8();
  OUTLINED_FUNCTION_24(v0);
  OUTLINED_FUNCTION_51_4();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_198();
  return sub_256CCE2BC(v4, v5, v6, v7, v8);
}

uint64_t sub_256CD1FF0()
{
  sub_256CEDE98();
  OUTLINED_FUNCTION_17_7();
  uint64_t v3 = OUTLINED_FUNCTION_52_6();
  v4(v3);
  return MEMORY[0x270FA0238](v1, v0, v2);
}

uint64_t sub_256CD2064(void *a1)
{
  uint64_t v2 = sub_256CEDE98();
  OUTLINED_FUNCTION_24(v2);
  return sub_256CCD224(a1);
}

uint64_t sub_256CD20B8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_256CD20F8()
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_9_2();
  return sub_256CCEEDC(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_256CD21B8(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_17_7();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_256CD2208(unsigned char *a1)
{
  if (*a1 == 1) {
    sub_256CCA914();
  }
}

void sub_256CD224C(unsigned char *a1)
{
  sub_256CCAD38(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

void sub_256CD2270(unsigned char *a1)
{
  if (*a1 == 1) {
    sub_256CCA914();
  }
}

void sub_256CD22B4(uint64_t a1)
{
  sub_256CCA140(a1, *(os_unfair_lock_s **)(v1 + 56));
}

void sub_256CD22E8(unsigned char *a1)
{
  sub_256CCA1FC(a1, v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_256CD231C()
{
  uint64_t v2 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C8CD8);
  sub_256CEE108();
  OUTLINED_FUNCTION_17_7();
  uint64_t v3 = OUTLINED_FUNCTION_52_6();
  v4(v3);
  return MEMORY[0x270FA0238](v0, v2, v1);
}

uint64_t sub_256CD23B0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C8CD8);
  uint64_t v2 = sub_256CEE108();
  OUTLINED_FUNCTION_24(v2);
  return sub_256CCA678(a1);
}

uint64_t OUTLINED_FUNCTION_22_9(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_59_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_64_5()
{
  return sub_256CEDF88();
}

uint64_t OUTLINED_FUNCTION_65_6(float a1)
{
  float *v1 = a1;
  return *(void *)(v2 + 80);
}

uint64_t OUTLINED_FUNCTION_79_3()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_256CD2560()
{
  return sub_256CD2878();
}

uint64_t sub_256CD256C()
{
  return sub_256CD295C();
}

uint64_t sub_256CD2578(uint64_t a1)
{
  return sub_256CD25F0(a1, (void (*)(unsigned char *, uint64_t))sub_256BF107C);
}

uint64_t sub_256CD2590()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD25D8(uint64_t a1)
{
  return sub_256CD25F0(a1, (void (*)(unsigned char *, uint64_t))sub_256BF0FB4);
}

uint64_t sub_256CD25F0(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_256CEE798();
  a2(v5, a1);
  return sub_256CEE7F8();
}

uint64_t sub_256CD2640()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD2688()
{
  return sub_256CD2730();
}

uint64_t sub_256CD2694()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD26E4()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD2730()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD27B8(uint64_t a1, uint64_t a2)
{
  return sub_256CD27E8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_256BF107C);
}

uint64_t sub_256CD27D0(uint64_t a1, uint64_t a2)
{
  return sub_256CD27E8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_256BF0FB4);
}

uint64_t sub_256CD27E8(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_256CEE798();
  a3(v6, a2);
  return sub_256CEE7F8();
}

uint64_t sub_256CD2834()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD2878()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD2918()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD295C()
{
  return sub_256CEE7F8();
}

uint64_t static AuditToken.== infix(_:_:)(_OWORD *a1, _OWORD *a2)
{
  v14[1] = *MEMORY[0x263EF8340];
  long long v2 = a1[1];
  v13[0] = *a1;
  v13[1] = v2;
  long long v3 = a2[1];
  v12[0] = *a2;
  v12[1] = v3;
  uint64_t v4 = sub_256CD2CC4((uint64_t)v13, (uint64_t)v14);
  unint64_t v6 = v5;
  uint64_t v7 = sub_256CD2CC4((uint64_t)v12, (uint64_t)v13);
  unint64_t v9 = v8;
  char v10 = MEMORY[0x25A2AD700](v4, v6, v7, v8);
  sub_256BF9568(v7, v9);
  sub_256BF9568(v4, v6);
  return v10 & 1;
}

void __swiftcall AuditToken.init(_:)(ModelManagerServices::AuditToken *__return_ptr retstr, audit_token_t *a2)
{
  *(void *)retstr->token.val = a2;
  *(void *)&retstr->token.val[2] = v2;
  *(void *)&retstr->token.val[4] = v3;
  *(void *)&retstr->token.val[6] = v4;
}

uint64_t AuditToken.token.getter()
{
  return *(void *)v0;
}

uint64_t AuditToken.auditUserIdentifier.getter()
{
  return sub_256CD2B8C(MEMORY[0x263F8C010]);
}

uint64_t AuditToken.effectiveUserIdentifier.getter()
{
  return sub_256CD2B8C(MEMORY[0x263F8C020]);
}

uint64_t AuditToken.effectiveGroupIdentifier.getter()
{
  return sub_256CD2B8C(MEMORY[0x263F8C018]);
}

uint64_t AuditToken.realUserIdentifier.getter()
{
  return sub_256CD2B8C(MEMORY[0x263F8C040]);
}

uint64_t AuditToken.realGroupIdentifier.getter()
{
  return sub_256CD2B8C(MEMORY[0x263F8C038]);
}

uint64_t AuditToken.processIdentifier.getter()
{
  return sub_256CD2B8C(MEMORY[0x263F8C028]);
}

uint64_t AuditToken.auditSessionIdentifier.getter()
{
  return sub_256CD2B8C(MEMORY[0x263F8C008]);
}

uint64_t AuditToken.processIdentifierVersion.getter()
{
  return sub_256CD2B8C(MEMORY[0x263F8C030]);
}

uint64_t sub_256CD2B8C(uint64_t (*a1)(_OWORD *))
{
  long long v2 = v1[1];
  v4[0] = *v1;
  v4[1] = v2;
  return a1(v4);
}

uint64_t AuditToken.hash(into:)()
{
  return sub_256CEE7A8();
}

uint64_t sub_256CD2C30(uint64_t a1)
{
  uint64_t v1 = sub_256CD2CC4(a1, a1 + 32);
  unint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C55F8);
  sub_256CD35F4();
  sub_256CEE5A8();
  return sub_256BF9568(v1, v3);
}

uint64_t sub_256CD2CC4(uint64_t a1, uint64_t a2)
{
  v8[3] = MEMORY[0x263F8D3E8];
  v8[4] = MEMORY[0x263F07B80];
  v8[0] = a1;
  v8[1] = a2;
  unint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x263F8D3E8]);
  uint64_t v3 = *v2;
  if (*v2 && (uint64_t v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_256CED9E8();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = MEMORY[0x25A2AD6E0]();
    }
    else
    {
      uint64_t v6 = MEMORY[0x25A2AD6F0]();
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v6;
}

uint64_t AuditToken.hashValue.getter()
{
  return sub_256CEE7F8();
}

BOOL sub_256CD2E00()
{
  uint64_t v0 = sub_256CEE438();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_256CD2E58()
{
  return sub_256CEE7F8();
}

BOOL sub_256CD2EB0@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_256CD2E00();
  *a1 = result;
  return result;
}

uint64_t sub_256CD2EE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_1_4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_256CD2F14@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = sub_256CD2E48();
  *a1 = result != 0;
  return result;
}

void sub_256CD2F44(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_256CD2F50(uint64_t a1)
{
  unint64_t v2 = sub_256CD3178();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256CD2F8C(uint64_t a1)
{
  unint64_t v2 = sub_256CD3178();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuditToken.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FD0);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CD3178();
  sub_256CEE848();
  if (!v2)
  {
    sub_256CD31C4();
    sub_256CEE4D8();
    sub_256CD3210();
    sub_256CED948();
    uint64_t v6 = OUTLINED_FUNCTION_14_0();
    v7(v6);
    sub_256BF9568(v9, v10);
    *a2 = 0u;
    a2[1] = 0u;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_256CD3178()
{
  unint64_t result = qword_26B2C7780;
  if (!qword_26B2C7780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7780);
  }
  return result;
}

unint64_t sub_256CD31C4()
{
  unint64_t result = qword_26B2C4EC8;
  if (!qword_26B2C4EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4EC8);
  }
  return result;
}

unint64_t sub_256CD3210()
{
  unint64_t result = qword_26B2C4ED0;
  if (!qword_26B2C4ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4ED0);
  }
  return result;
}

uint64_t AuditToken.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v15 = *MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C55F8);
  OUTLINED_FUNCTION_0_3();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CD3178();
  sub_256CEE878();
  uint64_t v12 = *v3;
  long long v13 = *(_OWORD *)(v3 + 1);
  uint64_t v14 = v3[3];
  sub_256CD2C30((uint64_t)&v12);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v2);
}

unint64_t sub_256CD33A4()
{
  unint64_t result = qword_269FC5808;
  if (!qword_269FC5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5808);
  }
  return result;
}

uint64_t sub_256CD33F0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AuditToken.init(from:)(a1, a2);
}

uint64_t sub_256CD3408(void *a1)
{
  return AuditToken.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for AuditToken()
{
  return &type metadata for AuditToken;
}

unsigned char *storeEnumTagSinglePayload for AuditToken.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256CD34CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuditToken.CodingKeys()
{
  return &type metadata for AuditToken.CodingKeys;
}

unint64_t sub_256CD3508()
{
  unint64_t result = qword_269FC5810;
  if (!qword_269FC5810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC5810);
  }
  return result;
}

unint64_t sub_256CD3558()
{
  unint64_t result = qword_26B2C7790;
  if (!qword_26B2C7790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7790);
  }
  return result;
}

unint64_t sub_256CD35A8()
{
  unint64_t result = qword_26B2C7788;
  if (!qword_26B2C7788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7788);
  }
  return result;
}

unint64_t sub_256CD35F4()
{
  unint64_t result = qword_26B2C5438;
  if (!qword_26B2C5438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5438);
  }
  return result;
}

uint64_t sub_256CD3640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5960);
  uint64_t v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), v5);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a2, v7, 1, v6);
}

uint64_t InferenceProviderXPCRequestDispatcher.__allocating_init(configuration:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  InferenceProviderXPCRequestDispatcher.init(configuration:)(a1);
  return v2;
}

uint64_t sub_256CD372C(void *a1)
{
  if (a1)
  {
    if (a1 == (void *)1)
    {
      sub_256C8DC38((id)1);
      return 0xD000000000000017;
    }
    else if (a1 == (void *)2)
    {
      unint64_t v2 = 0xD000000000000011;
      sub_256C8DC38((id)2);
    }
    else
    {
      sub_256CEE368();
      sub_256CEDFB8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
      sub_256CEE3B8();
      sub_256C8DC38(a1);
      return 0;
    }
  }
  else
  {
    sub_256C8DC38(0);
    return 0x6C616E696D6F4ELL;
  }
  return v2;
}

uint64_t sub_256CD3848(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = a2;
  *(unsigned char *)(v3 + 57) = *v2;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CD3868, a2);
}

uint64_t sub_256CD3868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  OUTLINED_FUNCTION_257();
  a18 = v20;
  a19 = v21;
  OUTLINED_FUNCTION_15();
  a17 = v19;
  OUTLINED_FUNCTION_22_1();
  uint64_t v22 = OUTLINED_FUNCTION_51();
  sub_256CE4DA0(v22, v23);
  if (*(unsigned char *)(v19 + 56) == 1)
  {
    uint64_t v24 = *(void (**)(char *))(v19 + 16);
    a12 = *(unsigned char *)(v19 + 57);
    v24(&a12);
    sub_256CDA1B8(v19 + 16);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(v19 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_72();
  }
  else
  {
    sub_256CE4DD8(v19 + 16);
    if (qword_269FC2740 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_256CEDC88();
    uint64_t v26 = (void *)OUTLINED_FUNCTION_43_4(v25, (uint64_t)qword_269FC5818);
    os_log_type_t v27 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_25_0(v27))
    {
      uint64_t v28 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v28);
      OUTLINED_FUNCTION_61(&dword_256BD4000, v29, v30, "Inference provider extension configured multiple times");
      OUTLINED_FUNCTION_4();
    }

    uint64_t v31 = sub_256CEDEB8();
    sub_256BE9EDC();
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_140_1(v32, (uint64_t)"Inference provider extension configured multiple times");
    *(_OWORD *)(v33 + 16) = xmmword_256CF5E20;
    *(void *)(v33 + 32) = 0;
    *(void *)(v33 + 40) = v31;
    *(unsigned char *)(v33 + 48) = 88;
    swift_willThrow();
    OUTLINED_FUNCTION_16();
  }
  OUTLINED_FUNCTION_256();
  return v35(v34, v35, v36, v37, v38, v39, v40, v41);
}

uint64_t sub_256CD3A54(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CD3A70, a2);
}

uint64_t sub_256CD3A70()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_144_0();
  if (v0)
  {
    OUTLINED_FUNCTION_32_7();
LABEL_9:
    return v2();
  }
  uint64_t v3 = OUTLINED_FUNCTION_17_1();
  sub_256BF973C(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4F00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FA8);
  OUTLINED_FUNCTION_113();
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v1 + 12));
    if (qword_269FC2740 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_256CEDC88();
    uint64_t v6 = (void *)OUTLINED_FUNCTION_43_4(v5, (uint64_t)qword_269FC5818);
    os_log_type_t v7 = sub_256CEE298();
    if (OUTLINED_FUNCTION_41(v7))
    {
      *(_WORD *)OUTLINED_FUNCTION_99() = 0;
      OUTLINED_FUNCTION_78_7(&dword_256BD4000, v8, v9, "PrewarmBundle called with legacy provider");
      OUTLINED_FUNCTION_4();
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v1 + 2));
    OUTLINED_FUNCTION_72();
    goto LABEL_9;
  }
  uint64_t v11 = v1[6];
  uint64_t v12 = (void *)OUTLINED_FUNCTION_17_1();
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v15 = (uint64_t (*)(void))(*(void *)(v11 + 16) + **(int **)(v11 + 16));
  uint64_t v14 = (void *)swift_task_alloc();
  v1[20] = v14;
  *uint64_t v14 = v1;
  v14[1] = sub_256CD3CB0;
  OUTLINED_FUNCTION_32_1(v1[19]);
  OUTLINED_FUNCTION_113();
  return v15();
}

uint64_t sub_256CD3CB0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CD3D8C()
{
  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  OUTLINED_FUNCTION_116_2();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  OUTLINED_FUNCTION_72();
  return v1();
}

uint64_t sub_256CD3DFC(uint64_t a1, uint64_t a2)
{
  v3[41] = a2;
  v3[42] = v2;
  v3[40] = a1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CD3E18, a2);
}

void sub_256CD3E18()
{
  OUTLINED_FUNCTION_71_6();
  OUTLINED_FUNCTION_144_0();
  if (v0)
  {
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_103_2();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v4 = OUTLINED_FUNCTION_28();
  sub_256BF973C(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4F00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FA8);
  int v6 = swift_dynamicCast();
  uint64_t v7 = *(void *)(v1 + 336);
  if (v6)
  {
    sub_256BE3924((long long *)(v1 + 168), v1 + 208);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 208), *(void *)(v1 + 232));
    *(unsigned char *)(v1 + 65) = *(unsigned char *)(v7 + 32);
    *(unsigned char *)(v1 + 66) = *(unsigned char *)(v7 + 33);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v1 + 344) = v8;
    *uint64_t v8 = v1;
    v8[1] = sub_256CD4110;
    OUTLINED_FUNCTION_102_3();
    OUTLINED_FUNCTION_103_2();
    __asm { BRAA            X8, X16 }
  }
  *(void *)(v1 + 200) = 0;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  sub_256BE33C8(v1 + 168, &qword_26B2C4FB0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 248), *(void *)(v1 + 272));
  uint64_t v11 = *(void *)(v7 + 8);
  long long v12 = *(_OWORD *)(v7 + 16);
  *(void *)(v1 + 288) = *(void *)v7;
  *(void *)(v1 + 296) = v11;
  *(_OWORD *)(v1 + 304) = v12;
  *(unsigned char *)(v1 + 67) = *(unsigned char *)(v7 + 32);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v1 + 352) = v13;
  void *v13 = v1;
  v13[1] = sub_256CD4268;
  OUTLINED_FUNCTION_103_2();
  __asm { BRAA            X6, X16 }
}

uint64_t sub_256CD4110()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *int v6 = v5;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 328);
  if (v0) {
    uint64_t v8 = sub_256CD43B8;
  }
  else {
    uint64_t v8 = sub_256CD41F0;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256CD41F0()
{
  OUTLINED_FUNCTION_2();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  OUTLINED_FUNCTION_116_2();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 248);
  OUTLINED_FUNCTION_72();
  return v1();
}

uint64_t sub_256CD4268()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *int v6 = v5;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 328);
  if (v0) {
    uint64_t v8 = sub_256CD4450;
  }
  else {
    uint64_t v8 = sub_256CD4348;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256CD4348()
{
  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  OUTLINED_FUNCTION_116_2();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 248);
  OUTLINED_FUNCTION_72();
  return v1();
}

uint64_t sub_256CD43B8()
{
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_100_2();
  uint64_t v1 = OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_93_3(v1, v2, v3, v4, v5, v6, v7, v8, v9, v12);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 208);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 248);
  OUTLINED_FUNCTION_32_7();
  return v10();
}

uint64_t sub_256CD4450()
{
  OUTLINED_FUNCTION_44_1();
  long long v12 = *(_OWORD *)(v0 + 88);
  long long v13 = *(_OWORD *)(v0 + 72);
  sub_256BE9EDC();
  uint64_t v1 = OUTLINED_FUNCTION_94();
  uint64_t v9 = OUTLINED_FUNCTION_86_2(v1, v2, v3, v4, v5, v6, v7, v8, v12, v13);
  __swift_destroy_boxed_opaque_existential_1Tm(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_256CD44F0()
{
  OUTLINED_FUNCTION_2();
  v1[8] = v2;
  v1[9] = v0;
  v1[7] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v4);
  v1[10] = OUTLINED_FUNCTION_98_3();
  v1[11] = swift_task_alloc();
  uint64_t NextStreamResultsRequest = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  OUTLINED_FUNCTION_6(NextStreamResultsRequest);
  v1[12] = v6;
  v1[13] = *(void *)(v7 + 64);
  v1[14] = OUTLINED_FUNCTION_98_3();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_256CD45D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_28_0();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_71_6();
  a20 = v22;
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_256CEDC88();
  v22[17] = __swift_project_value_buffer(v25, (uint64_t)qword_269FC5818);
  sub_256CEB298();
  uint64_t v26 = sub_256CEDC68();
  os_log_type_t v27 = sub_256CEE298();
  BOOL v28 = OUTLINED_FUNCTION_31_5(v27);
  uint64_t v29 = v22[16];
  if (v28)
  {
    uint64_t v30 = v22[11];
    OUTLINED_FUNCTION_30_9();
    a11 = OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_72_6(4.8149e-34);
    sub_256C5FC18(v29, v30, &qword_26B2C7798);
    uint64_t v31 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v33 = v32;
    sub_256BE33C8(v30, &qword_26B2C7798);
    v22[6] = sub_256BE14CC(v31, v33, &a11);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256CEB2EC(v29, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
    OUTLINED_FUNCTION_58_5(&dword_256BD4000, v26, v34, "Requesting next results in stream %s");
    OUTLINED_FUNCTION_270();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256CEB2EC(v22[16], (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  }

  sub_256C5FC18(v22[9], v22[10], &qword_26B2C7798);
  OUTLINED_FUNCTION_96();
  sub_256CEB298();
  v22[18] = swift_allocObject();
  sub_256CEB340();
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v22[19] = v35;
  *uint64_t v35 = v36;
  v35[1] = sub_256CD4894;
  OUTLINED_FUNCTION_26_0();
  return sub_256CDB9B0();
}

uint64_t sub_256CD4894()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256BE33C8(*(void *)(v0 + 80), &qword_26B2C7798);
  swift_release();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256CD49CC()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 24);
  *(void *)uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + 8) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38D0);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v3();
}

uint64_t sub_256CD4A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  uint64_t v18 = v16[20];
  sub_256CEB298();
  MEMORY[0x25A2AE9C0](v18);
  MEMORY[0x25A2AE9C0](v18);
  uint64_t v19 = sub_256CEDC68();
  os_log_type_t v20 = sub_256CEE2B8();
  if (OUTLINED_FUNCTION_31_5(v20))
  {
    uint64_t v21 = (void *)v16[20];
    uint64_t v22 = v16[14];
    uint64_t v23 = v16[11];
    uint64_t v24 = swift_slowAlloc();
    a10 = (void *)swift_slowAlloc();
    a11 = OUTLINED_FUNCTION_23_0();
    a12 = a11;
    *(_DWORD *)uint64_t v24 = 136315394;
    sub_256C5FC18(v22, v23, &qword_26B2C7798);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    sub_256BE33C8(v23, &qword_26B2C7798);
    uint64_t v25 = OUTLINED_FUNCTION_102_3();
    v16[4] = sub_256BE14CC(v25, v26, v27);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256CEB2EC(v22, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
    *(_WORD *)(v24 + 12) = 2112;
    MEMORY[0x25A2AE9C0](v21);
    uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
    void v16[5] = v28;
    sub_256CEE308();
    *a10 = v28;

    _os_log_impl(&dword_256BD4000, v19, v17, "Encountered error when fetching results for stream %s: %@", (uint8_t *)v24, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    uint64_t v29 = (void *)v16[20];
    sub_256CEB2EC(v16[14], (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_22();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_256CD4D30()
{
  OUTLINED_FUNCTION_2();
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v4);
  v1[6] = OUTLINED_FUNCTION_51_0();
  uint64_t v5 = type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(0);
  OUTLINED_FUNCTION_21(v5);
  v1[7] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256CD4DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_28_0();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_71_6();
  a20 = v22;
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_256CEDC88();
  __swift_project_value_buffer(v25, (uint64_t)qword_269FC5818);
  sub_256CEB298();
  unint64_t v26 = sub_256CEDC68();
  os_log_type_t v27 = sub_256CEE2D8();
  BOOL v28 = OUTLINED_FUNCTION_31_5(v27);
  uint64_t v29 = v22[7];
  if (v28)
  {
    a10 = v22 + 2;
    uint64_t v30 = v22[6];
    OUTLINED_FUNCTION_30_9();
    a11 = OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_72_6(4.8149e-34);
    sub_256C5FC18(v29, v30, &qword_26B2C7798);
    uint64_t v31 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v33 = v32;
    sub_256BE33C8(v30, &qword_26B2C7798);
    uint64_t v34 = sub_256BE14CC(v31, v33, &a11);
    OUTLINED_FUNCTION_128_1(v34);
    swift_bridgeObjectRelease();
    sub_256CEB2EC(v29, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
    OUTLINED_FUNCTION_58_5(&dword_256BD4000, v26, v35, "Handshake for request: %s");
    OUTLINED_FUNCTION_270();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256CEB2EC(v22[7], (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  }

  sub_256CDF750(v22[5]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_26_0();
  return v37(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_256CD4FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5950);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for InferenceProviderRequestStream();
  MEMORY[0x270FA5388](v7);
  if (__swift_getEnumTagSinglePayload(a1, 1, v8) == 1)
  {
    sub_256BE33C8(a1, &qword_269FC5950);
    sub_256C9C340();
    sub_256BE33C8(a2, &qword_26B2C7798);
    uint64_t v9 = (uint64_t)v6;
    uint64_t v10 = &qword_269FC5950;
  }
  else
  {
    sub_256CEB340();
    sub_256C9C9F4();
    uint64_t v10 = &qword_26B2C7798;
    uint64_t v9 = a2;
  }
  return sub_256BE33C8(v9, v10);
}

uint64_t sub_256CD513C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_256BE3924((long long *)a1, (uint64_t)v9);
    return sub_256C9CB0C();
  }
  else
  {
    sub_256BE33C8(a1, &qword_26B2C5B68);
    unint64_t v5 = sub_256C9BE74(a2);
    if (v6)
    {
      unint64_t v7 = v5;
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v8 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5C88);
      sub_256CEE3C8();
      sub_256BE3924((long long *)(*(void *)(v8 + 56) + 40 * v7), (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B60);
      OUTLINED_FUNCTION_141_1();
      sub_256CEE3E8();
      *uint64_t v2 = v8;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      memset(v9, 0, sizeof(v9));
    }
    return sub_256BE33C8((uint64_t)v9, &qword_26B2C5B68);
  }
}

uint64_t sub_256CD5268(uint64_t a1)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 160)) = a1;
  return swift_release();
}

uint64_t sub_256CD528C(uint64_t a1)
{
  *(void *)(v1 + 200) = a1;
  return swift_release();
}

uint64_t sub_256CD529C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 168));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *unint64_t v5 = a1;
  v5[1] = a2;
  return sub_256BEE8D8(v6);
}

uint64_t sub_256CD5308(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 208);
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = a2;
  return sub_256BEE8D8(v5);
}

uint64_t sub_256CD535C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_defaultActor_initialize();
  *(void *)(v5 + 168) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 20) = 0;
  *(unsigned char *)(v11 + 16) = 0;
  *(void *)(v5 + 176) = v11;
  *(void *)(v5 + 184) = *(void *)sub_256CEDB38();
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  sub_256CEB150(a1, v5 + 128);
  *(void *)(v5 + 112) = a2;
  *(void *)(v5 + 120) = a3;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v5 + 208);
  *(void *)(v5 + 208) = a4;
  *(void *)(v5 + 216) = a5;
  swift_retain();
  sub_256BEE8D8(v12);
  sub_256CC216C(a1);
  *(void *)(v5 + 224) = 0;
  *(void *)(v5 + 232) = 0;
  return v5;
}

uint64_t sub_256CD5450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_defaultActor_initialize();
  OUTLINED_FUNCTION_7_0();
  *(void *)(v5 + *(void *)(v11 + 128)) = 0;
  OUTLINED_FUNCTION_7_0();
  uint64_t v13 = *(void *)(v12 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 20) = 0;
  *(unsigned char *)(v14 + 16) = 0;
  *(void *)(v5 + v13) = v14;
  OUTLINED_FUNCTION_7_0();
  uint64_t v16 = *(void *)(v15 + 144);
  *(void *)(v5 + v16) = *(void *)sub_256CEDB38();
  OUTLINED_FUNCTION_7_0();
  *(void *)(v5 + *(void *)(v17 + 152)) = 0;
  OUTLINED_FUNCTION_7_0();
  *(void *)(v5 + *(void *)(v18 + 160)) = 0;
  OUTLINED_FUNCTION_7_0();
  os_log_type_t v20 = (uint64_t *)(v5 + *(void *)(v19 + 168));
  *os_log_type_t v20 = 0;
  v20[1] = 0;
  OUTLINED_FUNCTION_7_0();
  sub_256CEB298();
  *(void *)(v5 + 112) = a2;
  *(void *)(v5 + 120) = a3;
  swift_beginAccess();
  uint64_t v21 = *v20;
  *os_log_type_t v20 = a4;
  v20[1] = a5;
  swift_retain();
  swift_retain();
  sub_256BEFD8C(a4);
  sub_256BEE8D8(v21);
  uint64_t v22 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ModelServiceClient.StreamBacking() + 32));
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  uint64_t v25 = OUTLINED_FUNCTION_102_3();
  sub_256BEFD8C(v25);
  sub_256BEE8D8(a4);
  swift_release();
  sub_256CEB2EC(a1, (void (*)(void))type metadata accessor for ModelServiceClient.StreamBacking);
  OUTLINED_FUNCTION_7_0();
  os_log_type_t v27 = (void *)(v5 + *(void *)(v26 + 176));
  *os_log_type_t v27 = v23;
  v27[1] = v24;
  return v5;
}

uint64_t sub_256CD5634(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return MEMORY[0x270FA2498](sub_256CD5654, v1, 0);
}

uint64_t sub_256CD5654()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = (void *)v0[8];
  if (v1)
  {
    uint64_t v2 = v0[9];
    OUTLINED_FUNCTION_7_0();
    uint64_t v4 = (void *)(v2 + *(void *)(v3 + 144));
    OUTLINED_FUNCTION_13();
    MEMORY[0x25A2AE9C0](v1);
    swift_release();
    *uint64_t v4 = *(void *)sub_256CEDB38();
    swift_endAccess();
    MEMORY[0x25A2AE9C0](v1);
    swift_retain();
    sub_256C88D74();
  }
  else
  {
    sub_256C88D74();
  }
  uint64_t v5 = (uint64_t *)v0[9];
  uint64_t v6 = *v5;
  unint64_t v7 = (void (**)(void))((char *)v5 + *(void *)(*v5 + 176));
  if (*v7)
  {
    (*v7)();
    uint64_t v6 = *v5;
    uint64_t v5 = (uint64_t *)v0[9];
  }
  uint64_t v8 = (uint64_t *)((char *)v5 + *(void *)(v6 + 168));
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_22_1();
  uint64_t v9 = *v8;
  v0[10] = *v8;
  if (v9)
  {
    v0[11] = v8[1];
    swift_retain();
    sub_256CD529C(0, 0);
    OUTLINED_FUNCTION_56_5();
    uint64_t v14 = (uint64_t (*)(void))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[12] = v11;
    void *v11 = v0;
    v11[1] = sub_256CD5860;
    return v14();
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v13();
  }
}

uint64_t sub_256CD5860()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CD593C()
{
  OUTLINED_FUNCTION_2();
  sub_256BEE8D8(*(void *)(v0 + 80));
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256CD5994(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return MEMORY[0x270FA2498](sub_256CD59B4, v1, 0);
}

uint64_t sub_256CD59B4()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (void *)v0[8];
  if (v1)
  {
    uint64_t v2 = v0[9];
    OUTLINED_FUNCTION_13();
    MEMORY[0x25A2AE9C0](v1);
    swift_release();
    *(void *)(v2 + 184) = *(void *)sub_256CEDB38();
    swift_endAccess();
    MEMORY[0x25A2AE9C0](v1);
    swift_retain();
    sub_256C88D98((uint64_t)v1);
  }
  else
  {
    sub_256C88D98(2);
  }
  uint64_t v3 = v0[9];
  uint64_t v4 = *(void (**)(void))(v3 + 224);
  if (v4)
  {
    v4();
    uint64_t v3 = v0[9];
  }
  OUTLINED_FUNCTION_22_1();
  uint64_t v5 = *(void *)(v3 + 208);
  v0[10] = v5;
  if (v5)
  {
    v0[11] = *(void *)(v0[9] + 216);
    swift_retain();
    sub_256CD5308(0, 0);
    OUTLINED_FUNCTION_56_5();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[12] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_256CD5860;
    OUTLINED_FUNCTION_198();
    return v7(v7, v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_198();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23);
  }
}

uint64_t sub_256CD5B64()
{
  OUTLINED_FUNCTION_2();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  OUTLINED_FUNCTION_21(v3);
  v1[7] = OUTLINED_FUNCTION_51_0();
  uint64_t v4 = type metadata accessor for ClientData(0);
  v1[8] = v4;
  OUTLINED_FUNCTION_6(v4);
  v1[9] = v5;
  v1[10] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

void *sub_256CD5C14()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_51_5();
  if (*(void *)(v1 + *(void *)(v3 + 128)) > 1uLL)
  {
    if (qword_26B2C8CC0 == -1)
    {
LABEL_8:
      uint64_t v13 = sub_256CEDC88();
      uint64_t v14 = (void *)OUTLINED_FUNCTION_43_4(v13, (uint64_t)qword_26B2C8CA8);
      os_log_type_t v15 = sub_256CEE2C8();
      if (OUTLINED_FUNCTION_25_0(v15))
      {
        uint64_t v16 = (_WORD *)OUTLINED_FUNCTION_99();
        OUTLINED_FUNCTION_147(v16);
        OUTLINED_FUNCTION_61(&dword_256BD4000, v17, v18, "Appending element to a GreedyBufferingAsyncSequence after it's been terminated");
        OUTLINED_FUNCTION_4();
      }

      goto LABEL_11;
    }
LABEL_21:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(v2 + 152);
  uint64_t v5 = *(void *)(v1 + v4);
  BOOL v6 = __CFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[5];
  *(void *)(v1 + v4) = v7;
  sub_256C5FC18(v10, v8, &qword_269FC3228);
  if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
  {
    sub_256BE33C8(v0[7], &qword_269FC3228);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[11] = v11;
    void *v11 = v0;
    v11[1] = sub_256CD5EB8;
    return (void *)sub_256CD5634(0);
  }
  uint64_t v20 = v0[6];
  sub_256CEB340();
  OUTLINED_FUNCTION_7_0();
  uint64_t v22 = (uint64_t *)(v20 + *(void *)(v21 + 144));
  OUTLINED_FUNCTION_13();
  unint64_t result = (void *)*v22;
  uint64_t v23 = *(void *)(*v22 + 24);
  uint64_t v24 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    return result;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = *v22;
  if (*(void *)(*v22 + 16) < v24 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_256CE9508(v24);
    uint64_t v26 = *v22;
  }
  unint64_t result = OUTLINED_FUNCTION_76_3(v26);
  if (!v24)
  {
    uint64_t v27 = v0[10];
    swift_endAccess();
    sub_256CEB2EC(v27, (void (*)(void))type metadata accessor for ClientData);
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return (void *)v19();
  }
  return result;
}

uint64_t sub_256CD5EB8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_16_10();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_135_1();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_2();
  return v3();
}

uint64_t sub_256CD5FA8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  v2[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ClientData(0);
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CD6098, v1, 0);
}

void *sub_256CD6098()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0[6];
  if (*(void *)(v1 + 168) > 1uLL)
  {
    if (qword_26B2C8CC0 == -1)
    {
LABEL_8:
      uint64_t v10 = sub_256CEDC88();
      uint64_t v11 = (void *)OUTLINED_FUNCTION_43_4(v10, (uint64_t)qword_26B2C8CA8);
      os_log_type_t v12 = sub_256CEE2C8();
      if (OUTLINED_FUNCTION_25_0(v12))
      {
        uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_99();
        OUTLINED_FUNCTION_147(v13);
        OUTLINED_FUNCTION_61(&dword_256BD4000, v14, v15, "Appending element to a GreedyBufferingAsyncSequence after it's been terminated");
        OUTLINED_FUNCTION_4();
      }

      goto LABEL_11;
    }
LABEL_21:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)(v1 + 192);
  BOOL v3 = __CFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[5];
  *(void *)(v1 + 192) = v4;
  sub_256C5FC18(v7, v5, &qword_269FC3228);
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    sub_256BE33C8(v0[7], &qword_269FC3228);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[11] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_256CD5EB8;
    return (void *)sub_256CD5994(0);
  }
  uint64_t v17 = v0[6];
  sub_256CEB340();
  uint64_t v18 = (uint64_t *)(v17 + 184);
  OUTLINED_FUNCTION_13();
  unint64_t result = *(void **)(v17 + 184);
  uint64_t v19 = result[3];
  uint64_t v20 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    return result;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *v18;
  if (*(void *)(*v18 + 16) < v20 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_256CE9508(v20);
    uint64_t v22 = *v18;
  }
  unint64_t result = OUTLINED_FUNCTION_76_3(v22);
  if (!v20)
  {
    uint64_t v23 = v0[10];
    swift_endAccess();
    sub_256CEB2EC(v23, (void (*)(void))type metadata accessor for ClientData);
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return (void *)v16();
  }
  return result;
}

uint64_t sub_256CD630C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CD6328, v1);
}

uint64_t sub_256CD6328()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_51_5();
  if (*(void *)(v0 + *(void *)(v2 + 128)) <= 1uLL)
  {
    uint64_t v3 = *(void *)(v1 + 152);
    uint64_t v4 = *(void *)(v0 + v3);
    BOOL v5 = __CFADD__(v4, 1);
    uint64_t v6 = v4 + 1;
    if (!v5)
    {
      *(void *)(v0 + v3) = v6;
      uint64_t v7 = swift_task_alloc();
      uint64_t v8 = (void *)OUTLINED_FUNCTION_40_7(v7);
      *uint64_t v8 = v9;
      v8[1] = sub_256C8380C;
      uint64_t v10 = OUTLINED_FUNCTION_49();
      return sub_256CD5634(v10);
    }
    __break(1u);
    goto LABEL_13;
  }
  if (qword_26B2C8CC0 != -1) {
LABEL_13:
  }
    swift_once();
  uint64_t v12 = sub_256CEDC88();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_43_4(v12, (uint64_t)qword_26B2C8CA8);
  os_log_type_t v14 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_25_0(v14))
  {
    uint64_t v15 = (_WORD *)OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_147(v15);
    OUTLINED_FUNCTION_61(&dword_256BD4000, v16, v17, "Failing a GreedyBufferingAsyncSequence after it's been terminated");
    OUTLINED_FUNCTION_4();
  }

  OUTLINED_FUNCTION_16();
  return v18();
}

uint64_t sub_256CD64AC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256CD64CC, v1, 0);
}

uint64_t sub_256CD64CC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 24);
  if (*(void *)(v1 + 168) <= 1uLL)
  {
    uint64_t v2 = *(void *)(v1 + 192);
    BOOL v3 = __CFADD__(v2, 1);
    uint64_t v4 = v2 + 1;
    if (!v3)
    {
      *(void *)(v1 + 192) = v4;
      uint64_t v5 = swift_task_alloc();
      uint64_t v6 = (void *)OUTLINED_FUNCTION_40_7(v5);
      *uint64_t v6 = v7;
      v6[1] = sub_256C8380C;
      uint64_t v8 = OUTLINED_FUNCTION_49();
      return sub_256CD5994(v8);
    }
    __break(1u);
    goto LABEL_13;
  }
  if (qword_26B2C8CC0 != -1) {
LABEL_13:
  }
    swift_once();
  uint64_t v10 = sub_256CEDC88();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_43_4(v10, (uint64_t)qword_26B2C8CA8);
  os_log_type_t v12 = sub_256CEE2C8();
  if (OUTLINED_FUNCTION_25_0(v12))
  {
    uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_147(v13);
    OUTLINED_FUNCTION_61(&dword_256BD4000, v14, v15, "Failing a GreedyBufferingAsyncSequence after it's been terminated");
    OUTLINED_FUNCTION_4();
  }

  OUTLINED_FUNCTION_16();
  return v16();
}

void sub_256CD6630()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v3 = OUTLINED_FUNCTION_21(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_32();
  if (*(void *)(v1 + *(void *)(*(void *)v1 + 128)) <= 1uLL
    && !*(void *)(v1 + *(void *)(*(void *)v1 + 160)))
  {
    sub_256C88D74();
    uint64_t v4 = sub_256CEE178();
    OUTLINED_FUNCTION_72_2(v0, v5, v6, v4);
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v7;
    uint64_t v9 = sub_256BDB760();
    sub_256CD5268(v9);
  }
}

void sub_256CD6764()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v3 = OUTLINED_FUNCTION_21(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_32();
  if (*(void *)(v1 + 168) <= 1uLL && !*(void *)(v1 + 200))
  {
    sub_256C88D98(0);
    uint64_t v4 = sub_256CEE178();
    OUTLINED_FUNCTION_72_2(v0, v5, v6, v4);
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v7;
    uint64_t v9 = sub_256BDB760();
    sub_256CD528C(v9);
  }
}

uint64_t sub_256CD6854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  return MEMORY[0x270FA2498](sub_256CD6874, 0, 0);
}

uint64_t sub_256CD6874()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_22_1();
  uint64_t v1 = OUTLINED_FUNCTION_134_1();
  *(void *)(v0 + 72) = v1;
  if (v1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_39();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_109_3(v2);
    *uint64_t v3 = v4;
    v3[1] = sub_256CD6990;
    os_log_type_t v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_88_4((uint64_t)v3, v5, v6, v7, v8, v9, v10, v11, v16);
    return v12();
  }
  else
  {
    OUTLINED_FUNCTION_28_10();
    uint64_t Strong = swift_weakLoadStrong();
    *(void *)(v0 + 96) = Strong;
    if (Strong)
    {
      return MEMORY[0x270FA2498](sub_256CD6C0C, Strong, 0);
    }
    else
    {
      OUTLINED_FUNCTION_16();
      return v15();
    }
  }
}

uint64_t sub_256CD6990()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CD6A6C()
{
  OUTLINED_FUNCTION_2();
  unint64_t v1 = *(void *)(*(void *)(v0 + 72) + *(void *)(**(void **)(v0 + 72) + 128));
  *(void *)(v0 + 88) = v1;
  sub_256C8FFD0(v1);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_256CD6AE8()
{
  OUTLINED_FUNCTION_2();
  unint64_t v1 = (void *)v0[11];
  swift_release();
  sub_256C8DC38(v1);
  if (v1 || (uint64_t v3 = OUTLINED_FUNCTION_134_1(), (v0[9] = v3) == 0))
  {
    OUTLINED_FUNCTION_28_10();
    uint64_t Strong = swift_weakLoadStrong();
    v0[12] = Strong;
    if (Strong)
    {
      return MEMORY[0x270FA2498](sub_256CD6C0C, Strong, 0);
    }
    else
    {
      OUTLINED_FUNCTION_16();
      return v15();
    }
  }
  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_39();
    uint64_t v5 = (void *)OUTLINED_FUNCTION_109_3(v4);
    *uint64_t v5 = v6;
    v5[1] = sub_256CD6990;
    uint64_t v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_88_4((uint64_t)v5, v7, v8, v9, v10, v11, v12, v13, v17);
    return v14();
  }
}

uint64_t sub_256CD6C0C()
{
  OUTLINED_FUNCTION_2();
  sub_256CD5268(0);
  swift_release();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CD6C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  return MEMORY[0x270FA2498](sub_256CD6C90, 0, 0);
}

uint64_t sub_256CD6C90()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_22_1();
  uint64_t v1 = OUTLINED_FUNCTION_134_1();
  *(void *)(v0 + 72) = v1;
  if (v1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_39();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_109_3(v2);
    *uint64_t v3 = v4;
    v3[1] = sub_256CD6DAC;
    uint64_t v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_88_4((uint64_t)v3, v5, v6, v7, v8, v9, v10, v11, v16);
    return v12();
  }
  else
  {
    OUTLINED_FUNCTION_28_10();
    uint64_t Strong = swift_weakLoadStrong();
    *(void *)(v0 + 96) = Strong;
    if (Strong)
    {
      return MEMORY[0x270FA2498](sub_256CD7014, Strong, 0);
    }
    else
    {
      OUTLINED_FUNCTION_16();
      return v15();
    }
  }
}

uint64_t sub_256CD6DAC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CD6E88()
{
  OUTLINED_FUNCTION_2();
  unint64_t v1 = *(void *)(*(void *)(v0 + 72) + 168);
  *(void *)(v0 + 88) = v1;
  sub_256C8FFD0(v1);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_256CD6EF0()
{
  OUTLINED_FUNCTION_2();
  unint64_t v1 = (void *)v0[11];
  swift_release();
  sub_256C8DC38(v1);
  if (v1 || (uint64_t v3 = OUTLINED_FUNCTION_134_1(), (v0[9] = v3) == 0))
  {
    OUTLINED_FUNCTION_28_10();
    uint64_t Strong = swift_weakLoadStrong();
    v0[12] = Strong;
    if (Strong)
    {
      return MEMORY[0x270FA2498](sub_256CD7014, Strong, 0);
    }
    else
    {
      OUTLINED_FUNCTION_16();
      return v15();
    }
  }
  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_39();
    uint64_t v5 = (void *)OUTLINED_FUNCTION_109_3(v4);
    *uint64_t v5 = v6;
    v5[1] = sub_256CD6DAC;
    uint64_t v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_88_4((uint64_t)v5, v7, v8, v9, v10, v11, v12, v13, v17);
    return v14();
  }
}

uint64_t sub_256CD7014()
{
  OUTLINED_FUNCTION_2();
  sub_256CD528C(0);
  swift_release();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CD7078()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_256CD7098, v0, 0);
}

void sub_256CD7098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_28_0();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_71_6();
  a20 = v22;
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_256CEDC88();
  v22[4] = __swift_project_value_buffer(v25, (uint64_t)qword_26B2C8CA8);
  uint64_t v26 = (void *)sub_256CEDC68();
  os_log_type_t v27 = sub_256CEE2D8();
  if (OUTLINED_FUNCTION_25_0(v27))
  {
    uint64_t v28 = (_WORD *)OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_147(v28);
    OUTLINED_FUNCTION_61(&dword_256BD4000, v29, v30, "Cancelling sequence buffering and waiting for upstream sequence termination");
    OUTLINED_FUNCTION_4();
  }
  uint64_t v31 = v22 + 3;
  uint64_t v32 = v22[3];

  unint64_t v33 = (os_unfair_lock_s *)(*(void *)(v32 + 176) + 20);
  os_unfair_lock_lock(v33);
  OUTLINED_FUNCTION_138_1();
  sub_256C8BB1C(v34);
  os_unfair_lock_unlock(v33);
  if (v32)
  {
    OUTLINED_FUNCTION_26_0();
  }
  else
  {
    uint64_t v35 = *v31;
    if (*(void *)(*v31 + 200))
    {
      swift_retain();
      sub_256CEE1B8();
      swift_release();
      uint64_t v35 = *v31;
    }
    if (*(void *)(v35 + 168) >= 2uLL)
    {
      swift_retain_n();
      uint64_t v46 = sub_256CEDC68();
      os_log_type_t v47 = sub_256CEE2D8();
      BOOL v48 = OUTLINED_FUNCTION_70(v47);
      uint64_t v49 = v22[3];
      if (v48)
      {
        uint64_t v50 = (_DWORD *)swift_slowAlloc();
        uint64_t v51 = OUTLINED_FUNCTION_23_0();
        *uint64_t v50 = 136315138;
        a9 = v50 + 1;
        a10 = v51;
        uint64_t v52 = *(void **)(v49 + 168);
        sub_256C8FFD0((unint64_t)v52);
        uint64_t v53 = sub_256CD372C(v52);
        v22[2] = sub_256BE14CC(v53, v54, &a10);
        sub_256CEE308();
        swift_bridgeObjectRelease();
        swift_release_n();
        OUTLINED_FUNCTION_58_5(&dword_256BD4000, v46, v55, "Sequence buffering terminated post-cancellation in state: %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_4();
        OUTLINED_FUNCTION_4();
      }
      else
      {
        swift_release_n();
      }

      OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_26_0();
      v57(v56, v57, v58, v59, v60, v61, v62, v63, a9, a10, a11, a12, a13, a14);
    }
    else
    {
      sub_256CD6764();
      uint64_t v36 = *(void *)(v35 + 200);
      void v22[5] = v36;
      if (v36)
      {
        swift_retain();
        uint64_t v37 = (void *)swift_task_alloc();
        v22[6] = v37;
        *uint64_t v37 = v22;
        v37[1] = sub_256CD7408;
        OUTLINED_FUNCTION_26_0();
        MEMORY[0x270FA1FD0](v38, v39, v40, v41, v42, v43, v44, v45, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
      }
      else
      {
        uint64_t v64 = swift_task_alloc();
        os_log_type_t v65 = (void *)OUTLINED_FUNCTION_108_2(v64);
        *os_log_type_t v65 = v66;
        v65[1] = sub_256CD7588;
        OUTLINED_FUNCTION_26_0();
        MEMORY[0x270FA2000](v67, v68, v69, v70, v71, v72, v73, v74, a9, a10, a11, a12, a13, a14);
      }
    }
  }
}

uint64_t sub_256CD7408()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CD7500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_2();
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_108_2(v14);
  *uint64_t v15 = v23;
  v15[1] = sub_256CD7588;
  return MEMORY[0x270FA2000](v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_256CD7588()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CD7664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_28_0();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_71_6();
  a20 = v22;
  uint64_t v25 = v22[3];
  if (*(void *)(v25 + 168) >= 2uLL)
  {
    swift_retain_n();
    uint64_t v36 = sub_256CEDC68();
    os_log_type_t v37 = sub_256CEE2D8();
    BOOL v38 = OUTLINED_FUNCTION_70(v37);
    uint64_t v39 = v22[3];
    if (v38)
    {
      uint64_t v40 = (_DWORD *)swift_slowAlloc();
      uint64_t v41 = OUTLINED_FUNCTION_23_0();
      _DWORD *v40 = 136315138;
      a10 = v40 + 1;
      a11 = v41;
      uint64_t v42 = *(void **)(v39 + 168);
      sub_256C8FFD0((unint64_t)v42);
      uint64_t v43 = sub_256CD372C(v42);
      v22[2] = sub_256BE14CC(v43, v44, &a11);
      sub_256CEE308();
      swift_bridgeObjectRelease();
      swift_release_n();
      OUTLINED_FUNCTION_58_5(&dword_256BD4000, v36, v45, "Sequence buffering terminated post-cancellation in state: %s");
      OUTLINED_FUNCTION_270();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      swift_release_n();
    }

    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_26_0();
    return v47(v46, v47, v48, v49, v50, v51, v52, v53, a9, a10, a11, a12, a13, a14);
  }
  else
  {
    sub_256CD6764();
    uint64_t v26 = *(void *)(v25 + 200);
    void v22[5] = v26;
    if (v26)
    {
      swift_retain();
      os_log_type_t v27 = (void *)swift_task_alloc();
      v22[6] = v27;
      *os_log_type_t v27 = v22;
      v27[1] = sub_256CD7408;
      OUTLINED_FUNCTION_26_0();
      return MEMORY[0x270FA1FD0](v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    }
    else
    {
      uint64_t v54 = swift_task_alloc();
      uint64_t v55 = (void *)OUTLINED_FUNCTION_108_2(v54);
      *uint64_t v55 = v56;
      v55[1] = sub_256CD7588;
      OUTLINED_FUNCTION_26_0();
      return MEMORY[0x270FA2000](v57, v58, v59, v60, v61, v62, v63, v64, a9, a10, a11, a12, a13, a14);
    }
  }
}

uint64_t sub_256CD78C8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + 168);
  BOOL v4 = v3 == 2;
  if (v3 < 2)
  {
    unint64_t v3 = v1 + 184;
    swift_beginAccess();
    if (!*(void *)(*(void *)(v1 + 184) + 24))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
      uint64_t v11 = a1;
      uint64_t v12 = 1;
      return __swift_storeEnumTagSinglePayload(v11, v12, 1, v10);
    }
    swift_beginAccess();
    if (*(void *)(*(void *)v3 + 24)) {
      goto LABEL_9;
    }
    __break(1u);
  }
  if (!v4)
  {
    MEMORY[0x25A2AE9C0](v3);
    return swift_willThrow();
  }
  unint64_t v3 = v1 + 184;
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 184) + 24))
  {
    uint64_t v9 = type metadata accessor for ClientData(0);
    uint64_t v7 = a1;
    uint64_t v8 = 1;
LABEL_12:
    __swift_storeEnumTagSinglePayload(v7, v8, 1, v9);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
    uint64_t v11 = a1;
    uint64_t v12 = 0;
    return __swift_storeEnumTagSinglePayload(v11, v12, 1, v10);
  }
  swift_beginAccess();
  uint64_t result = *(void *)v3;
  if (*(void *)(*(void *)v3 + 24))
  {
LABEL_9:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_256CE9C8C();
    }
    uint64_t v5 = *(void *)v3;
    uint64_t v6 = type metadata accessor for ClientData(0);
    sub_256CE9D7C((void *)(v5 + 16));
    swift_endAccess();
    uint64_t v7 = a1;
    uint64_t v8 = 0;
    uint64_t v9 = v6;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_256CD7A98(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A80);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CD7B48, v1, 0);
}

uint64_t sub_256CD7B48()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  sub_256CD78C8(v0[6]);
  v0[7] = 0;
  uint64_t v1 = v0[6];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  v0[8] = v2;
  OUTLINED_FUNCTION_54_6(v2, v3, v2);
  if (v4)
  {
    sub_256BE33C8(v1, &qword_269FC5A80);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[9] = (uint64_t)v5;
    *uint64_t v5 = v0;
    v5[1] = sub_256CD7CA8;
    OUTLINED_FUNCTION_256();
    return sub_256C8BCD4();
  }
  else
  {
    sub_256C5FC70(v1, v0[2], &qword_269FC3228);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_256();
    return v9(v8, v9, v10, v11, v12, v13, v14, v15);
  }
}

uint64_t sub_256CD7CA8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CD7D84()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0[7];
  uint64_t v2 = sub_256CD78C8(v0[5]);
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_32_7();
  }
  else
  {
    uint64_t v4 = v0[5];
    OUTLINED_FUNCTION_54_6(v2, v3, v0[8]);
    if (v5)
    {
      sub_256BE33C8(v4, &qword_269FC5A80);
      if (qword_26B2C8CC0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_256CEDC88();
      __swift_project_value_buffer(v6, (uint64_t)qword_26B2C8CA8);
      uint64_t v7 = (void *)sub_256CEDC68();
      os_log_type_t v8 = sub_256CEE2D8();
      if (OUTLINED_FUNCTION_41(v8))
      {
        *(_WORD *)OUTLINED_FUNCTION_99() = 0;
        OUTLINED_FUNCTION_78_7(&dword_256BD4000, v9, v10, "Greedy buffer was not filled as it should have been. Retrying up to 10 times.");
        OUTLINED_FUNCTION_4();
      }

      uint64_t v11 = 10;
      while (1)
      {
        uint64_t v12 = sub_256CD78C8(v0[4]);
        uint64_t v4 = v0[4];
        OUTLINED_FUNCTION_54_6(v12, v13, v0[8]);
        if (!v5) {
          break;
        }
        uint64_t v14 = OUTLINED_FUNCTION_150_0();
        sub_256BE33C8(v14, v15);
        if (!--v11)
        {
          uint64_t v16 = (void *)sub_256CEDC68();
          os_log_type_t v17 = sub_256CEE2C8();
          if (OUTLINED_FUNCTION_25_0(v17))
          {
            uint64_t v18 = (_WORD *)OUTLINED_FUNCTION_99();
            OUTLINED_FUNCTION_147(v18);
            OUTLINED_FUNCTION_61(&dword_256BD4000, v19, v20, "Greedy buffer filling failed after 10 retries. Terminating sequence early.");
            OUTLINED_FUNCTION_4();
          }
          uint64_t v21 = v0[2];

          uint64_t v22 = type metadata accessor for ClientData(0);
          OUTLINED_FUNCTION_72_2(v21, v23, v24, v22);
          goto LABEL_17;
        }
      }
    }
    sub_256C5FC70(v4, v0[2], &qword_269FC3228);
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
  }
  OUTLINED_FUNCTION_198();
  return v26(v25, v26, v27, v28, v29, v30, v31, v32);
}

uint64_t sub_256CD7F88()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_269FC5818);
  __swift_project_value_buffer(v0, (uint64_t)qword_269FC5818);
  return sub_256CEDC78();
}

uint64_t InferenceProviderRequestStream.uuid.getter()
{
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t InferenceProviderRequestStream.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for InferenceProviderRequestStream();
  return sub_256C5FC18(v1 + *(int *)(v3 + 20), a1, &qword_26B2C7798);
}

uint64_t InferenceProviderRequestStream.cancellationReason.getter()
{
  type metadata accessor for InferenceProviderRequestStream();
  return swift_retain();
}

void InferenceProviderRequestStream.init(stream:id:)()
{
  OUTLINED_FUNCTION_57();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for InferenceProviderRequestStream();
  uint64_t v6 = (int *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_16_1();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  uint64_t v7 = v6[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5830);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(void *)(v8 + 16) = 4;
  *(void *)(v0 + v7) = v8;
  *(unsigned char *)(v0 + v6[10]) = 0;
  *(void *)(v0 + v6[11]) = MEMORY[0x263F8EE78];
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t))(v12 + 16))(v11 - v10);
  v13[3] = swift_getAssociatedTypeWitness();
  v13[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1Tm(v13);
  sub_256CEE208();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4C18);
  swift_allocObject();
  *(void *)(v0 + v6[8]) = sub_256CD535C((uint64_t)v13, (uint64_t)&unk_269FC5838, 0, 0, 0);
  sub_256C5FC70(v2, v0 + v6[7], &qword_26B2C7798);
  OUTLINED_FUNCTION_118_0();
  sub_256CEB340();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256CD82F8(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  *(void *)(v1 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CD8390, a1, 0);
}

uint64_t sub_256CD8390()
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  sub_256C90080(&qword_269FC4C10, &qword_269FC4C18);
  OUTLINED_FUNCTION_13();
  uint64_t v1 = OUTLINED_FUNCTION_102_3();
  __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 112) = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_256CD8494;
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_9_2();
  return MEMORY[0x270FA1E88](v5, v6, v7, v8, v9, v10);
}

uint64_t sub_256CD8494()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[12];
    return MEMORY[0x270FA2498](sub_256CD8730, v7, 0);
  }
  else
  {
    swift_endAccess();
    uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&dword_269FC5AA8 + dword_269FC5AA8);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[15] = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_256CD85EC;
    uint64_t v9 = OUTLINED_FUNCTION_32_1(v3[13]);
    return v11(v9);
  }
}

uint64_t sub_256CD85EC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CD86C8()
{
  OUTLINED_FUNCTION_2();
  sub_256BE33C8(*(void *)(v0 + 104), &qword_269FC3228);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256CD8730()
{
  OUTLINED_FUNCTION_44_1();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 16);
  sub_256BE9EDC();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_94();
  *(void *)(v0 + 128) = v1;
  OUTLINED_FUNCTION_86_2((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v14, v15);
  swift_endAccess();
  type metadata accessor for ModelManagerError();
  sub_256CEA740(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  uint64_t v9 = OUTLINED_FUNCTION_94();
  uint64_t v11 = v10;
  *(void *)(v0 + 136) = v9;
  MEMORY[0x25A2AE9C0](v1);
  ModelManagerError.init(wrapping:)(v1, v11);
  uint64_t v16 = (uint64_t (*)(uint64_t))((char *)&dword_269FC5AA0 + dword_269FC5AA0);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_256CD8890;
  return v16(v9);
}

uint64_t sub_256CD8890()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void **)(v1 + 136);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();

  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256CD8988()
{
  OUTLINED_FUNCTION_2();

  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t static InferenceProviderRequestStream.== infix(_:_:)()
{
  OUTLINED_FUNCTION_63();
  type metadata accessor for InferenceProviderRequestStream();
  return _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t InferenceProviderRequestStream.hash(into:)()
{
  return sub_256CEDF18();
}

void InferenceProviderRequestStream.setCancellationReason(_:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + *(int *)(type metadata accessor for InferenceProviderRequestStream() + 28));
  p_os_unfair_lock_opaque = (unint64_t *)&v1[4]._os_unfair_lock_opaque;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_256CD9A40(p_os_unfair_lock_opaque);
  os_unfair_lock_unlock(v3);
}

uint64_t InferenceProviderRequestStream.filteredCancellationError(_:)(uint64_t a1)
{
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v1 + *(int *)(type metadata accessor for InferenceProviderRequestStream() + 28))
                          + 24);
  os_unfair_lock_lock(v4);
  OUTLINED_FUNCTION_138_1();
  sub_256CD8EC0(v5, v6);
  os_unfair_lock_unlock(v4);
  switch(v26)
  {
    case 0uLL:
      if (qword_269FC2740 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_256CEDC88();
      long long v14 = (void *)OUTLINED_FUNCTION_43_4(v13, (uint64_t)qword_269FC5818);
      os_log_type_t v15 = sub_256CEE298();
      if (OUTLINED_FUNCTION_102(v15))
      {
        uint64_t v16 = (_WORD *)OUTLINED_FUNCTION_99();
        OUTLINED_FUNCTION_147(v16);
        OUTLINED_FUNCTION_80_4(&dword_256BD4000, v17, v18, "Stream found to be cancelled due to policy change. Throwing deniedDueToSystemState.");
        OUTLINED_FUNCTION_4();
      }

      type metadata accessor for ModelManagerError();
      sub_256CEA740(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
      a1 = OUTLINED_FUNCTION_94();
      swift_storeEnumTagMultiPayload();
      unint64_t v12 = 0;
      goto LABEL_19;
    case 1uLL:
    case 2uLL:
      sub_256CD9A80(v26);
      goto LABEL_3;
    case 3uLL:
      if (qword_269FC2740 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_256CEDC88();
      uint64_t v20 = (void *)OUTLINED_FUNCTION_43_4(v19, (uint64_t)qword_269FC5818);
      os_log_type_t v21 = sub_256CEE298();
      if (OUTLINED_FUNCTION_102(v21))
      {
        uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_99();
        OUTLINED_FUNCTION_147(v22);
        OUTLINED_FUNCTION_80_4(&dword_256BD4000, v23, v24, "Stream found to be cancelled due to preemption. Throwing cancelledByPreemption.");
        OUTLINED_FUNCTION_4();
      }

      type metadata accessor for ModelManagerError();
      sub_256CEA740(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
      a1 = OUTLINED_FUNCTION_94();
      swift_storeEnumTagMultiPayload();
      unint64_t v12 = 3;
      goto LABEL_19;
    case 4uLL:
LABEL_3:
      MEMORY[0x25A2AE9C0](a1);
      break;
    default:
      sub_256C255D4(v26);
      if (qword_269FC2740 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_256CEDC88();
      uint64_t v8 = OUTLINED_FUNCTION_43_4(v7, (uint64_t)qword_269FC5818);
      os_log_type_t v9 = sub_256CEE298();
      if (OUTLINED_FUNCTION_41(v9))
      {
        uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_99();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl(&dword_256BD4000, v8, v2, "Stream found to be cancelled due to policy change. Throwing deniedDueToSpecifiedSystemState.", v10, 2u);
        OUTLINED_FUNCTION_4();
      }

      type metadata accessor for ModelManagerError();
      sub_256CEA740(&qword_26B2C7B78, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
      a1 = OUTLINED_FUNCTION_94();
      unint64_t *v11 = v26;
      swift_storeEnumTagMultiPayload();
      unint64_t v12 = v26;
LABEL_19:
      sub_256CD9A80(v12);
      break;
  }
  return a1;
}

unint64_t sub_256CD8EC0@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2 = *a1;
  *a2 = v2;
  return sub_256CEA7AC(v2);
}

uint64_t InferenceProviderRequestStream.startBuffering()()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CD8F0C, 0);
}

uint64_t sub_256CD8F0C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for InferenceProviderRequestStream() + 24));
  *(void *)(v0 + 24) = v2;
  return MEMORY[0x270FA2498](sub_256CD8F7C, v2, 0);
}

uint64_t sub_256CD8F7C()
{
  OUTLINED_FUNCTION_2();
  sub_256CD6764();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t InferenceProviderRequestStream.cancelBufferingAndWait()()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CD8FF0, 0);
}

uint64_t sub_256CD8FF0()
{
  OUTLINED_FUNCTION_2();
  type metadata accessor for InferenceProviderRequestStream();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_39();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_256BDCDB4;
  os_log_type_t v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_88_4((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v11);
  return v9();
}

uint64_t InferenceProviderRequestStream.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CD90A8, 0);
}

uint64_t sub_256CD90A8()
{
  OUTLINED_FUNCTION_2();
  type metadata accessor for InferenceProviderRequestStream();
  uint64_t v1 = OUTLINED_FUNCTION_39();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_40_7(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256CD914C;
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4);
}

uint64_t sub_256CD914C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256CD9244()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void **)(v0 + 40);
  InferenceProviderRequestStream.filteredCancellationError(_:)((uint64_t)v1);
  swift_willThrow();

  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t InferenceProviderRequestStream.consumingBufferedResults<A>(closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CD92E4, 0);
}

uint64_t sub_256CD92E4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 40);
  type metadata accessor for InferenceProviderRequestStream();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  long long v3 = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_136_1(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_256CD93C4;
  return sub_256C8D608();
}

uint64_t sub_256CD93C4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256CD94C4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void **)(v0 + 72);
  swift_task_dealloc();
  InferenceProviderRequestStream.filteredCancellationError(_:)((uint64_t)v1);
  swift_willThrow();

  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t sub_256CD9544(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  v7[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4BE0);
  v7[4] = sub_256C90080(&qword_269FC4BE8, &qword_269FC4BE0);
  v7[0] = a1;
  swift_retain();
  a3(v7, a2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
}

uint64_t InferenceProviderRequestStream.hashValue.getter()
{
  return sub_256CEE7F8();
}

uint64_t sub_256CD96A4()
{
  return sub_256CEE7F8();
}

uint64_t (*sub_256CD9740())()
{
  return j__swift_endAccess;
}

uint64_t sub_256CD978C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_256CEDD88();
  uint64_t v3 = OUTLINED_FUNCTION_21(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_19();
  if (*(void *)(v0 + 184))
  {
    uint64_t v4 = *(void *)(v0 + 184);
  }
  else
  {
    swift_retain();
    sub_256CEDD78();
    sub_256CEDDC8();
    swift_allocObject();
    uint64_t v4 = sub_256CEDD68();
    *(void *)(v1 + 184) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_256CD9874()
{
  return sub_256CEDD98();
}

uint64_t sub_256CD990C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PerRequestInferenceProviderXPCRequestDispatcher();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = swift_retain();
  sub_256CE357C(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A40);
  swift_allocObject();
  uint64_t result = sub_256BFE21C(v2);
  *a1 = result;
  return result;
}

uint64_t InferenceProviderXPCRequestDispatcher.init(configuration:)(long long *a1)
{
  uint64_t v2 = v1;
  swift_defaultActor_initialize();
  type metadata accessor for InferenceProviderXPCRequestDispatcher.StreamExclusivityWrapper();
  uint64_t v4 = swift_allocObject();
  sub_256CE0708();
  uint64_t v5 = MEMORY[0x263F8EE80];
  *(void *)(v2 + 160) = v4;
  *(void *)(v2 + 168) = v5;
  *(void *)(v2 + 176) = MEMORY[0x263F8EE88];
  *(void *)(v2 + 184) = 0;
  sub_256CE4D88(a1, (_OWORD *)(v2 + 112));
  return v2;
}

uint64_t type metadata accessor for InferenceProviderRequestStream()
{
  uint64_t result = qword_26B2C4F80;
  if (!qword_26B2C4F80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t *sub_256CD9A40(unint64_t *result)
{
  if (*result == 4)
  {
    unint64_t v2 = *(void *)(v1 + 16);
    *uint64_t result = v2;
    return (unint64_t *)sub_256C255D4(v2);
  }
  return result;
}

unint64_t sub_256CD9A80(unint64_t result)
{
  if (result != 4) {
    return sub_256C715C0(result);
  }
  return result;
}

uint64_t sub_256CD9A90@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  sub_256CE4DA0(v1 + 112, (uint64_t)v11);
  if ((v12 & 1) == 0) {
    return sub_256BE3924(v11, a1);
  }
  sub_256CE4DD8((uint64_t)v11);
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_256CEDC88();
  __swift_project_value_buffer(v3, (uint64_t)qword_269FC5818);
  uint64_t v4 = sub_256CEDC68();
  os_log_type_t v5 = sub_256CEE2C8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_256BD4000, v4, v5, "Inference Provider service was never configured with a .configureBuiltInProvider message", v6, 2u);
    MEMORY[0x25A2AEBD0](v6, -1, -1);
  }

  uint64_t v7 = sub_256CEDEB8();
  sub_256BE9EDC();
  swift_allocError();
  OUTLINED_FUNCTION_140_1(v8, (uint64_t)"Inference Provider service was never configured with a .configureBuiltInProvider message");
  *(_OWORD *)(v9 + 16) = xmmword_256CF5E20;
  *(void *)(v9 + 32) = 0;
  *(void *)(v9 + 40) = v7;
  *(unsigned char *)(v9 + 48) = 88;
  return swift_willThrow();
}

uint64_t sub_256CD9C34()
{
  OUTLINED_FUNCTION_12();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_40_7(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_256CD9CF0;
  return sub_256C665A0();
}

uint64_t sub_256CD9CF0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 24);
    return MEMORY[0x270FA2498](sub_256CD9DEC, v7, 0);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v8();
  }
}

uint64_t sub_256CD9DEC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(uint64_t **)(v0 + 16);
  v2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5878);
  v2[4] = sub_256CE4E08(&qword_269FC5880);
  v2[5] = sub_256CE4E08(&qword_269FC5888);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v2);
  MEMORY[0x25A2AE9C0](v1);
  ModelManagerError.init(wrapping:)(v1, (uint64_t)boxed_opaque_existential_1Tm);
  OUTLINED_FUNCTION_17_1();
  swift_storeEnumTagMultiPayload();

  OUTLINED_FUNCTION_16();
  return v4();
}

uint64_t sub_256CD9EDC()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_49();
  return sub_256C681BC();
}

uint64_t static InferenceProviderXPCRequestDispatcher.responseForXPCDecodingError(error:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_256CEDC88();
  __swift_project_value_buffer(v5, (uint64_t)qword_269FC5818);
  MEMORY[0x25A2AE9C0](a1);
  MEMORY[0x25A2AE9C0](a1);
  uint64_t v6 = sub_256CEDC68();
  os_log_type_t v7 = sub_256CEE298();
  if (OUTLINED_FUNCTION_70(v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_30_9();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    MEMORY[0x25A2AE9C0](a1);
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    sub_256CEE308();
    *uint64_t v9 = v12;

    _os_log_impl(&dword_256BD4000, v6, v2, "Error during decoding the message: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
  }
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5878);
  a2[4] = sub_256CE4E08(&qword_269FC5888);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  sub_256CEE3B8();
  uint64_t *boxed_opaque_existential_1Tm = 0;
  boxed_opaque_existential_1Tm[1] = 0xE000000000000000;
  type metadata accessor for ModelManagerError();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_141_1();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256CDA1B8(uint64_t a1)
{
  sub_256BF973C(a1, (uint64_t)v3);
  v3[40] = 0;
  OUTLINED_FUNCTION_13();
  sub_256CEAF28((uint64_t)v3, v1 + 112);
  return swift_endAccess();
}

uint64_t sub_256CDA20C()
{
  OUTLINED_FUNCTION_2();
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v4);
  v1[6] = OUTLINED_FUNCTION_38();
  v1[7] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256CDA29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_28_0();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_71_6();
  a20 = v22;
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_256CEDC88();
  __swift_project_value_buffer(v25, (uint64_t)qword_269FC5818);
  uint64_t v26 = OUTLINED_FUNCTION_28();
  sub_256C5FC18(v26, v27, v28);
  uint64_t v29 = sub_256CEDC68();
  os_log_type_t v30 = sub_256CEE298();
  BOOL v31 = OUTLINED_FUNCTION_31_5(v30);
  uint64_t v32 = v22[7];
  if (v31)
  {
    uint64_t v33 = v22[6];
    OUTLINED_FUNCTION_30_9();
    a11 = OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_72_6(4.8149e-34);
    sub_256C5FC18(v32, v33, &qword_26B2C7798);
    uint64_t v34 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v36 = v35;
    sub_256BE33C8(v33, &qword_26B2C7798);
    uint64_t v37 = sub_256BE14CC(v34, v36, &a11);
    OUTLINED_FUNCTION_128_1(v37);
    swift_bridgeObjectRelease();
    sub_256BE33C8(v32, &qword_26B2C7798);
    OUTLINED_FUNCTION_58_5(&dword_256BD4000, v29, v38, "Requesting first result in stream %s");
    OUTLINED_FUNCTION_270();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256BE33C8(v22[7], &qword_26B2C7798);
  }

  v22[8] = *(void *)(v22[5] + 160);
  uint64_t v50 = (char *)&dword_269FC5A30 + dword_269FC5A30;
  swift_retain();
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v22[9] = v39;
  *uint64_t v39 = v40;
  v39[1] = sub_256CDA4B4;
  OUTLINED_FUNCTION_26_0();
  return v45(v41, v42, v43, v44, v45, v46, v47, v48, a9, v50, a11, a12, a13, a14);
}

uint64_t sub_256CDA4B4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 40);
    return MEMORY[0x270FA2498](sub_256CDA5CC, v7, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
    return v8();
  }
}

uint64_t sub_256CDA5CC()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CDA63C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  v2[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CDA6D0, 0, 0);
}

uint64_t sub_256CDA6D0()
{
  OUTLINED_FUNCTION_2();
  *(_DWORD *)(v0 + 72) = *(_DWORD *)(type metadata accessor for InferenceProviderRequestStream() + 24);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 40) = v1;
  void *v1 = v2;
  v1[1] = sub_256CDA778;
  uint64_t v3 = *(void *)(v0 + 32);
  return v5(v3);
}

uint64_t sub_256CDA778()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256CDA854()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = type metadata accessor for ClientData(0);
  *(void *)(v0 + 56) = v2;
  OUTLINED_FUNCTION_54_6(v2, v3, v2);
  if (v4)
  {
    sub_256BE33C8(v1, &qword_269FC3228);
    OUTLINED_FUNCTION_72_2(*(void *)(v0 + 16), v5, v6, *(void *)(v0 + 56));
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
    return v7();
  }
  else
  {
    uint64_t v9 = *(int *)(v0 + 72);
    uint64_t v10 = *(void *)(v0 + 24);
    sub_256CEB340();
    uint64_t v11 = *(void *)(v10 + v9);
    *(void *)(v0 + 64) = v11;
    return MEMORY[0x270FA2498](sub_256CDA9D8, v11, 0);
  }
}

uint64_t sub_256CDA954()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void **)(v0 + 48);
  InferenceProviderRequestStream.filteredCancellationError(_:)((uint64_t)v1);
  swift_willThrow();

  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_256();
  return v3(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_256CDA9D8()
{
  OUTLINED_FUNCTION_2();
  sub_256CD6764();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_256CDAA38()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_90_2();
  __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v4();
}

uint64_t sub_256CDAAA4()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 128) = v2;
  *(void *)(v1 + 136) = v0;
  *(unsigned char *)(v1 + 65) = v3;
  *(void *)(v1 + 112) = v4;
  *(void *)(v1 + 120) = v5;
  uint64_t v6 = type metadata accessor for ClientData(0);
  *(void *)(v1 + 144) = v6;
  OUTLINED_FUNCTION_21(v6);
  *(void *)(v1 + 152) = OUTLINED_FUNCTION_51_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v7);
  *(void *)(v1 + 160) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_256CDAB50()
{
  OUTLINED_FUNCTION_59();
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    uint64_t v1 = swift_task_alloc();
    uint64_t v2 = (void *)OUTLINED_FUNCTION_35_4(v1);
    *uint64_t v2 = v3;
    v2[1] = sub_256CDAD88;
    return sub_256CDB0FC();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 160);
    type metadata accessor for InferenceProviderRequestConfiguration(0);
    sub_256CEDB08();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v6();
    OUTLINED_FUNCTION_144_0();
    if (v5)
    {
      sub_256BE33C8(*(void *)(v0 + 160), &qword_26B2C7798);
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_32_7();
      return v7();
    }
    else
    {
      uint64_t v8 = *(void *)(v0 + 96);
      uint64_t v9 = *(void *)(v0 + 104);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 72), v8);
      os_log_type_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 40)
                                                                                         + **(int **)(v9 + 40));
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      *(void *)(v0 + 176) = v10;
      *uint64_t v10 = v11;
      v10[1] = sub_256CDAE84;
      uint64_t v12 = *(void *)(v0 + 152);
      uint64_t v13 = *(void *)(v0 + 120);
      uint64_t v14 = *(void *)(v0 + 128);
      return v15(v12, v13, v14, v0 + 16, v8, v9);
    }
  }
}

uint64_t sub_256CDAD88()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_2();
  return v3();
}

uint64_t sub_256CDAE84()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 136);
  if (v0) {
    uint64_t v8 = sub_256CDB04C;
  }
  else {
    uint64_t v8 = sub_256CDAF64;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256CDAF64()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  uint64_t v3 = OUTLINED_FUNCTION_150_0();
  sub_256C5FC70(v3, v4, v5);
  uint64_t v6 = v2 + *(int *)(type metadata accessor for InferenceProviderRequestResult(0) + 20);
  uint64_t v7 = sub_256CEDD58();
  OUTLINED_FUNCTION_72_2(v6, v8, v9, v7);
  OUTLINED_FUNCTION_28();
  sub_256CEB340();
  OUTLINED_FUNCTION_90_2();
  __swift_storeEnumTagSinglePayload(v10, v11, v12, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_198();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20);
}

uint64_t sub_256CDB04C()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v1 = *(void *)(v0 + 160);
  OUTLINED_FUNCTION_100_2();
  uint64_t v2 = OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_93_3(v2, v3, v4, v5, v6, v7, v8, v9, v10, v13);
  sub_256BE33C8(v1, &qword_26B2C7798);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7();
  return v11();
}

uint64_t sub_256CDB0FC()
{
  OUTLINED_FUNCTION_2();
  v1[16] = v2;
  v1[17] = v0;
  v1[14] = v3;
  v1[15] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  OUTLINED_FUNCTION_21(v5);
  v1[18] = OUTLINED_FUNCTION_51_0();
  uint64_t v6 = sub_256CEDD58();
  v1[19] = v6;
  OUTLINED_FUNCTION_6(v6);
  v1[20] = v7;
  v1[21] = OUTLINED_FUNCTION_51_0();
  uint64_t v8 = type metadata accessor for InferenceProviderRequestConfiguration(0);
  v1[22] = v8;
  OUTLINED_FUNCTION_21(v8);
  v1[23] = OUTLINED_FUNCTION_38();
  v1[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v9);
  v1[25] = OUTLINED_FUNCTION_38();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t sub_256CDB21C()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[27];
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v2();
  OUTLINED_FUNCTION_144_0();
  if (v1)
  {
    sub_256BE33C8(v0[27], &qword_26B2C7798);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_32_7();
    return v3();
  }
  else
  {
    uint64_t v5 = v0[16];
    uint64_t v6 = v0[15];
    uint64_t v7 = v0[10];
    uint64_t v8 = v0[11];
    __swift_project_boxed_opaque_existential_1(v0 + 7, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 7));
    swift_retain();
    sub_256CE07CC();
    swift_release();
    if (qword_269FC2740 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_256CEDC88();
    uint64_t v10 = __swift_project_value_buffer(v9, (uint64_t)qword_269FC5818);
    OUTLINED_FUNCTION_131_0(v10, v11, &qword_26B2C7798);
    OUTLINED_FUNCTION_118_0();
    sub_256CEB298();
    uint64_t v12 = sub_256CEDC68();
    os_log_type_t v13 = sub_256CEE298();
    BOOL v14 = OUTLINED_FUNCTION_102(v13);
    uint64_t v15 = v0[26];
    if (v14)
    {
      os_log_type_t type = v10;
      uint64_t v16 = v0[25];
      uint64_t v26 = v0[24];
      uint64_t v17 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      sub_256C5FC18(v15, v16, &qword_26B2C7798);
      uint64_t v18 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      unint64_t v20 = v19;
      sub_256BE33C8(v16, &qword_26B2C7798);
      v0[12] = sub_256BE14CC(v18, v20, v28);
      sub_256CEE308();
      swift_bridgeObjectRelease();
      sub_256BE33C8(v15, &qword_26B2C7798);
      *(_WORD *)(v17 + 12) = 2080;
      sub_256CEB298();
      uint64_t v21 = sub_256CEDF88();
      v0[13] = sub_256BE14CC(v21, v22, v28);
      sub_256CEE308();
      swift_bridgeObjectRelease();
      sub_256CEB2EC(v26, (void (*)(void))type metadata accessor for InferenceProviderRequestConfiguration);
      _os_log_impl(&dword_256BD4000, v12, type, "Created stream %s with configuration %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      uint64_t v23 = v0[24];
      sub_256BE33C8(v0[26], &qword_26B2C7798);
      sub_256CEB2EC(v23, (void (*)(void))type metadata accessor for InferenceProviderRequestConfiguration);
    }

    sub_256CD978C();
    sub_256CEDDB8();
    swift_release();
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    v0[28] = v24;
    void *v24 = v25;
    v24[1] = sub_256CDB6AC;
    return sub_256CDA20C();
  }
}

uint64_t sub_256CDB6AC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 232) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 136);
  if (v0) {
    uint64_t v6 = sub_256CDB8D4;
  }
  else {
    uint64_t v6 = sub_256CDB7AC;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256CDB7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_71_6();
  uint64_t v15 = v14[27];
  uint64_t v34 = v14[25];
  uint64_t v35 = v14[24];
  uint64_t v36 = v14[23];
  uint64_t v17 = v14[20];
  uint64_t v16 = v14[21];
  uint64_t v18 = v14[18];
  uint64_t v19 = v14[19];
  uint64_t v20 = v14[14];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v14 + 2));
  sub_256C5FC70(v15, v20, &qword_26B2C7798);
  uint64_t v21 = type metadata accessor for InferenceProviderRequestResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v20 + *(int *)(v21 + 20), v16, v19);
  OUTLINED_FUNCTION_90_2();
  __swift_storeEnumTagSinglePayload(v22, v23, v24, v19);
  sub_256C5FC70(v18, v20 + *(int *)(v21 + 24), &qword_269FC3228);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_26_0();
  return v26(v25, v26, v27, v28, v29, v30, v31, v32, v34, v35, v36, a12, a13, a14);
}

uint64_t sub_256CDB8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  uint64_t v11 = v10[27];
  (*(void (**)(void, void))(v10[20] + 8))(v10[21], v10[19]);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v10 + 2));
  sub_256BE33C8(v11, &qword_26B2C7798);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_9_2();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_256CDB9B0()
{
  OUTLINED_FUNCTION_2();
  v1[9] = v2;
  v1[10] = v0;
  v1[7] = v3;
  v1[8] = v4;
  v1[6] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  OUTLINED_FUNCTION_21(v6);
  v1[11] = OUTLINED_FUNCTION_51_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  v1[12] = v7;
  OUTLINED_FUNCTION_6(v7);
  v1[13] = v8;
  v1[14] = *(void *)(v9 + 64);
  v1[15] = OUTLINED_FUNCTION_38();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t sub_256CDBA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_47_3();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_95();
  a22 = v24;
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_256CEDC88();
  __swift_project_value_buffer(v27, (uint64_t)qword_269FC5818);
  uint64_t v28 = OUTLINED_FUNCTION_141_1();
  sub_256C5FC18(v28, v29, v30);
  uint64_t v31 = sub_256CEDC68();
  os_log_type_t v32 = sub_256CEE2D8();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = v24[16];
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = OUTLINED_FUNCTION_23_0();
    a13 = v35;
    *(_DWORD *)uint64_t v34 = 136315138;
    OUTLINED_FUNCTION_96_3(v35, v36, &qword_26B2C7798);
    uint64_t v37 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v39 = v38;
    sub_256BE33C8(v33, &qword_26B2C7798);
    v24[5] = sub_256BE14CC(v37, v39, &a13);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_95_3();
    _os_log_impl(&dword_256BD4000, v31, v32, "Consuming buffered results for stream %s", v34, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256BE33C8(v24[17], &qword_26B2C7798);
  }

  uint64_t v40 = v24[16];
  uint64_t v42 = v24[13];
  uint64_t v41 = v24[14];
  uint64_t v44 = v24[10];
  uint64_t v43 = v24[11];
  uint64_t v45 = v24[9];
  uint64_t v83 = v24[8];
  uint64_t v84 = v24[15];
  uint64_t v46 = v24[7];
  uint64_t v47 = sub_256CEE178();
  OUTLINED_FUNCTION_72_2(v43, v48, v49, v47);
  sub_256C5FC18(v46, v40, &qword_26B2C7798);
  uint64_t v51 = sub_256CEA740(&qword_269FC5978, v50, (void (*)(uint64_t))type metadata accessor for InferenceProviderXPCRequestDispatcher);
  unint64_t v52 = (*(unsigned __int8 *)(v42 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  unint64_t v53 = (v41 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = (void *)swift_allocObject();
  v54[2] = v44;
  v54[3] = v51;
  v54[4] = v44;
  sub_256C5FC70(v40, (uint64_t)v54 + v52, &qword_26B2C7798);
  uint64_t v55 = (void *)((char *)v54 + v53);
  *uint64_t v55 = v83;
  v55[1] = v45;
  swift_retain_n();
  swift_retain();
  uint64_t v56 = sub_256C1C318(v43, (uint64_t)&unk_269FC5A00, (uint64_t)v54);
  v24[18] = v56;
  sub_256C5FC18(v46, v84, &qword_26B2C7798);
  uint64_t v57 = (uint64_t *)(v44 + 168);
  OUTLINED_FUNCTION_13();
  swift_retain();
  swift_isUniquelyReferenced_nonNull_native();
  a13 = *(void *)(v44 + 168);
  uint64_t v58 = a13;
  *(void *)(v44 + 168) = 0x8000000000000000;
  sub_256C9BD5C(v84);
  if (__OFADD__(*(void *)(v58 + 16), (v60 & 1) == 0))
  {
    __break(1u);
    return MEMORY[0x270FA2338](v59, v60, v61, v62, v63, v64, v65, v66);
  }
  uint64_t v67 = v59;
  char v68 = v60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D90);
  char v69 = sub_256CEE3C8();
  uint64_t v70 = a13;
  if ((v69 & 1) == 0)
  {
LABEL_13:
    *uint64_t v57 = v70;
    swift_bridgeObjectRelease();
    uint64_t v75 = *v57;
    if ((v68 & 1) == 0)
    {
      uint64_t v76 = v24[16];
      sub_256C5FC18(v24[15], v76, &qword_26B2C7798);
      sub_256C9D50C(v67, v76, MEMORY[0x263F8EE88], v75);
    }
    uint64_t v77 = v24[15];
    uint64_t v78 = v24[7];
    sub_256CE65EC(&a13, v56);
    sub_256BE33C8(v77, &qword_26B2C7798);
    swift_endAccess();
    swift_release();
    uint64_t v79 = swift_task_alloc();
    v24[19] = v79;
    *(void *)(v79 + 16) = v78;
    *(void *)(v79 + 24) = v56;
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    v24[20] = v80;
    *uint64_t v80 = v81;
    v80[1] = sub_256CDBF80;
    OUTLINED_FUNCTION_22();
    return MEMORY[0x270FA2338](v59, v60, v61, v62, v63, v64, v65, v66);
  }
  sub_256C9BD5C(v24[15]);
  if ((v68 & 1) == (v72 & 1))
  {
    uint64_t v67 = v71;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_22();
  return sub_256CEE738();
}

uint64_t sub_256CDBF80()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = sub_256CDC10C;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 80);
    swift_task_dealloc();
    uint64_t v8 = sub_256CDC074;
    uint64_t v7 = v9;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256CDC074()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  sub_256CDC410(v0[7], v0[10], v0[18]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_198();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_256CDC10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  uint64_t v11 = v10[18];
  uint64_t v12 = v10[10];
  uint64_t v13 = v10[7];
  swift_task_dealloc();
  sub_256CDC410(v13, v12, v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_9_2();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
}

uint64_t sub_256CDC1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_256CDC1E0, a4, 0);
}

uint64_t sub_256CDC1E0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0[3] + 160);
  v0[7] = v1;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269FC5A28
                                                                                     + dword_269FC5A28);
  swift_retain();
  swift_retain();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_136_1(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256CDC2B0;
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = v0[3];
  uint64_t v7 = v0[4];
  uint64_t v9 = v0[2];
  return v11(v9, v7, v8, v1, v5, v6);
}

uint64_t sub_256CDC2B0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 24);
    return MEMORY[0x270FA2498](sub_256CDC3B4, v7, 0);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_16();
    return v8();
  }
}

uint64_t sub_256CDC3B4()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CDC410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v30 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v30 - v13;
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_256CEDC88();
  __swift_project_value_buffer(v15, (uint64_t)qword_269FC5818);
  sub_256C5FC18(a1, (uint64_t)v14, &qword_26B2C7798);
  uint64_t v16 = sub_256CEDC68();
  os_log_type_t v17 = sub_256CEE2D8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v32 = a1;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = a2;
    uint64_t v21 = v20;
    v36[0] = v20;
    uint64_t v34 = a3;
    *(_DWORD *)uint64_t v19 = 136315138;
    v30[1] = v19 + 4;
    uint64_t v31 = v9;
    sub_256C5FC18((uint64_t)v14, (uint64_t)v12, &qword_26B2C7798);
    uint64_t v22 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v24 = v23;
    sub_256BE33C8((uint64_t)v12, &qword_26B2C7798);
    v35[0] = sub_256BE14CC(v22, v24, v36);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    uint64_t v9 = v31;
    sub_256BE33C8((uint64_t)v14, &qword_26B2C7798);
    _os_log_impl(&dword_256BD4000, v16, v17, "Finished consuming buffered results for stream %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2AEBD0](v21, -1, -1);
    uint64_t v25 = v19;
    a1 = v32;
    MEMORY[0x25A2AEBD0](v25, -1, -1);
  }
  else
  {
    sub_256BE33C8((uint64_t)v14, &qword_26B2C7798);
  }

  sub_256C5FC18(a1, (uint64_t)v9, &qword_26B2C7798);
  uint64_t v26 = sub_256CD9740();
  uint64_t v27 = sub_256C940C8(v35, (uint64_t)v9);
  if (*v28)
  {
    sub_256CEA150();
    v27((uint64_t)v35, 0);
    sub_256BE33C8((uint64_t)v9, &qword_26B2C7798);
    ((void (*)(uint64_t *, void))v26)(v36, 0);
    return swift_release();
  }
  else
  {
    v27((uint64_t)v35, 0);
    sub_256BE33C8((uint64_t)v9, &qword_26B2C7798);
    return ((uint64_t (*)(uint64_t *, void))v26)(v36, 0);
  }
}

uint64_t sub_256CDC77C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  *uint64_t v3 = v1;
  v3[1] = sub_256BDD6B8;
  return MEMORY[0x270FA1FA8](a1);
}

uint64_t sub_256CDC848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v19 - v8;
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_256CEDC88();
  __swift_project_value_buffer(v10, (uint64_t)qword_269FC5818);
  sub_256C5FC18(a1, (uint64_t)v9, &qword_26B2C7798);
  uint64_t v11 = sub_256CEDC68();
  os_log_type_t v12 = sub_256CEE2D8();
  if (os_log_type_enabled(v11, v12))
  {
    v19[1] = a2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    v19[0] = v13 + 4;
    sub_256C5FC18((uint64_t)v9, (uint64_t)v7, &qword_26B2C7798);
    uint64_t v15 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v17 = v16;
    sub_256BE33C8((uint64_t)v7, &qword_26B2C7798);
    v19[2] = sub_256BE14CC(v15, v17, &v20);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256BE33C8((uint64_t)v9, &qword_26B2C7798);
    _os_log_impl(&dword_256BD4000, v11, v12, "consumeElements for %s was cancelled.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2AEBD0](v14, -1, -1);
    MEMORY[0x25A2AEBD0](v13, -1, -1);
  }
  else
  {
    sub_256BE33C8((uint64_t)v9, &qword_26B2C7798);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  return sub_256CEE1B8();
}

uint64_t sub_256CDCAD4()
{
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(v1 + 73) = v2;
  *(void *)(v1 + 80) = v3;
  *(void *)(v1 + 88) = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5950);
  OUTLINED_FUNCTION_21(v4);
  *(void *)(v1 + 96) = OUTLINED_FUNCTION_51_0();
  uint64_t v5 = type metadata accessor for InferenceProviderRequestStream();
  *(void *)(v1 + 104) = v5;
  OUTLINED_FUNCTION_21(v5);
  *(void *)(v1 + 112) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256CDCB7C()
{
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_22_1();
  sub_256CEDEC8();
  uint64_t v1 = OUTLINED_FUNCTION_17_1();
  uint64_t v3 = sub_256CEB878(v1, v2);
  *(void *)(v0 + 120) = v3;
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_49:
    OUTLINED_FUNCTION_94_3();
    OUTLINED_FUNCTION_38_8();
    uint64_t v26 = swift_task_alloc();
    uint64_t v27 = (void *)OUTLINED_FUNCTION_35_4(v26);
    *uint64_t v27 = v28;
    v27[1] = sub_256CDD27C;
    uint64_t v29 = OUTLINED_FUNCTION_55_6();
    return v30(v29);
  }
  OUTLINED_FUNCTION_13();
  sub_256C9C76C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  uint64_t v7 = v5 & *(void *)(v3 + 56);
  int64_t v8 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = (void *)sub_256CEDEC8();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  for (v7 &= v7 - 1; ; uint64_t v7 = (v12 - 1) & v12)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
    sub_256CEE1B8();
    uint64_t v9 = (void *)swift_release();
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    unint64_t v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if ((uint64_t)v11 >= v8) {
      break;
    }
    uint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v10;
    if (v12) {
      continue;
    }
    int64_t v10 = v11 + 1;
    if ((uint64_t)(v11 + 1) >= v8) {
      break;
    }
    uint64_t v12 = *(void *)(v4 + 8 * v10);
    if (v12) {
      continue;
    }
    int64_t v10 = v11 + 2;
    if ((uint64_t)(v11 + 2) >= v8) {
      break;
    }
    uint64_t v12 = *(void *)(v4 + 8 * v10);
    if (v12) {
      continue;
    }
    v11 += 3;
    if ((uint64_t)v11 >= v8) {
      break;
    }
    uint64_t v12 = *(void *)(v4 + 8 * v11);
    if (!v12)
    {
      while (1)
      {
        int64_t v10 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          break;
        }
        if (v10 >= v8) {
          goto LABEL_22;
        }
        uint64_t v12 = *(void *)(v4 + 8 * v10);
        ++v11;
        if (v12) {
          goto LABEL_19;
        }
      }
LABEL_40:
      __break(1u);
LABEL_41:
      if (v11 >= 0x140)
      {
        unint64_t v23 = v9[11];
        if (v23)
        {
          uint64_t v17 = 4;
          goto LABEL_32;
        }
        unint64_t v24 = v11 >> 6;
        uint64_t v25 = 12;
        while (v25 - 7 < v24)
        {
          unint64_t v23 = v9[v25++];
          if (v23)
          {
            uint64_t v17 = v25 - 8;
            goto LABEL_32;
          }
        }
      }
LABEL_48:
      swift_release();
      goto LABEL_49;
    }
    int64_t v10 = v11;
LABEL_19:
    ;
  }
LABEL_22:
  swift_release();
  char v13 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(v0 + 74) = v13;
  uint64_t v14 = -1;
  uint64_t v15 = -1 << v13;
  if (-v15 < 64) {
    uint64_t v14 = ~(-1 << -(char)v15);
  }
  unint64_t v16 = v14 & *(void *)(v3 + 56);
  if (v16)
  {
    uint64_t v17 = 0;
    unint64_t v18 = __clz(__rbit64(v16));
    uint64_t v19 = (v16 - 1) & v16;
    uint64_t v9 = *(void **)(v0 + 120);
  }
  else
  {
    unint64_t v11 = 63 - v15;
    uint64_t v9 = *(void **)(v0 + 120);
    if (v11 <= 0x7F) {
      goto LABEL_48;
    }
    unint64_t v23 = v9[8];
    if (v23)
    {
      uint64_t v17 = 1;
      goto LABEL_32;
    }
    if (v11 < 0xC0) {
      goto LABEL_48;
    }
    unint64_t v23 = v9[9];
    if (v23)
    {
      uint64_t v17 = 2;
      goto LABEL_32;
    }
    if (v11 < 0x100) {
      goto LABEL_48;
    }
    unint64_t v23 = v9[10];
    if (!v23) {
      goto LABEL_41;
    }
    uint64_t v17 = 3;
LABEL_32:
    uint64_t v19 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v17 << 6);
  }
  *(void *)(v0 + 128) = v17;
  *(void *)(v0 + 136) = v19;
  *(void *)(v0 + 144) = *(void *)(v9[6] + 8 * v18);
  swift_retain();
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  OUTLINED_FUNCTION_112_3();
  *uint64_t v20 = v21;
  v20[1] = sub_256CDCF90;
  uint64_t v22 = OUTLINED_FUNCTION_123_3();
  return MEMORY[0x270FA1FA8](v22);
}

uint64_t sub_256CDCF90()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  if (v0) {

  }
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256CDD090()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  uint64_t v1 = swift_bridgeObjectRelease();
  if (v0[17])
  {
    uint64_t v2 = OUTLINED_FUNCTION_83_4();
    goto LABEL_3;
  }
  if (__OFADD__(v0[16], 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v1 = OUTLINED_FUNCTION_82_5();
  if (v8 == v9) {
    goto LABEL_21;
  }
  uint64_t v10 = v1 + 56;
  if (*(void *)(v1 + 56 + 8 * v7))
  {
LABEL_10:
    OUTLINED_FUNCTION_126_1();
LABEL_3:
    OUTLINED_FUNCTION_127_1(v2, v3);
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[19] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
    OUTLINED_FUNCTION_112_3();
    *uint64_t v4 = v5;
    v4[1] = sub_256CDCF90;
    uint64_t v1 = OUTLINED_FUNCTION_123_3();
    return MEMORY[0x270FA1FA8](v1);
  }
  int64_t v11 = v6 >> 6;
  if (v7 + 1 < v11)
  {
    if (*(void *)(v10 + 8 * (v7 + 1))) {
      goto LABEL_10;
    }
    if (v7 + 2 < v11)
    {
      if (*(void *)(v10 + 8 * (v7 + 2))) {
        goto LABEL_10;
      }
      uint64_t v12 = v7 + 3;
      if (v12 < v11)
      {
        if (*(void *)(v10 + 8 * v12)) {
          goto LABEL_10;
        }
        while (1)
        {
          uint64_t v13 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            break;
          }
          if (v13 >= v11) {
            goto LABEL_21;
          }
          ++v12;
          if (*(void *)(v10 + 8 * v13)) {
            goto LABEL_10;
          }
        }
LABEL_25:
        __break(1u);
        return MEMORY[0x270FA1FA8](v1);
      }
    }
  }
LABEL_21:
  swift_release();
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_38_8();
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_35_4(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_256CDD27C;
  uint64_t v17 = OUTLINED_FUNCTION_55_6();
  return v18(v17);
}

uint64_t sub_256CDD27C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_34_3();
  if (v0) {

  }
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256CDD398()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 104);
  OUTLINED_FUNCTION_90_2();
  __swift_storeEnumTagSinglePayload(v2, v3, v4, v1);
  OUTLINED_FUNCTION_141_1();
  sub_256CEB340();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_39();
  *(void *)(v0 + 176) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_256CDD464;
  uint64_t v13 = (uint64_t (*)(void))OUTLINED_FUNCTION_88_4((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v15);
  return v13();
}

uint64_t sub_256CDD464()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CDD540()
{
  OUTLINED_FUNCTION_2();
  sub_256CEB2EC(*(void *)(v0 + 112), (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  if (*(unsigned char *)(v0 + 73) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v1;
    void *v1 = v0;
    v1[1] = sub_256CDD634;
    OUTLINED_FUNCTION_32_1(*(void *)(v0 + 80));
    return sub_256CDF1E8();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v3();
  }
}

uint64_t sub_256CDD634()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_16_10();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_135_1();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_2();
  return v3();
}

uint64_t sub_256CDD724()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = swift_release();
  if (v0[17])
  {
    uint64_t v2 = OUTLINED_FUNCTION_83_4();
    goto LABEL_3;
  }
  if (__OFADD__(v0[16], 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v1 = OUTLINED_FUNCTION_82_5();
  if (v8 == v9) {
    goto LABEL_21;
  }
  uint64_t v10 = v1 + 56;
  if (*(void *)(v1 + 56 + 8 * v7))
  {
LABEL_10:
    OUTLINED_FUNCTION_126_1();
LABEL_3:
    OUTLINED_FUNCTION_127_1(v2, v3);
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[19] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
    OUTLINED_FUNCTION_112_3();
    *uint64_t v4 = v5;
    v4[1] = sub_256CDCF90;
    uint64_t v1 = OUTLINED_FUNCTION_123_3();
    return MEMORY[0x270FA1FA8](v1);
  }
  int64_t v11 = v6 >> 6;
  if (v7 + 1 < v11)
  {
    if (*(void *)(v10 + 8 * (v7 + 1))) {
      goto LABEL_10;
    }
    if (v7 + 2 < v11)
    {
      if (*(void *)(v10 + 8 * (v7 + 2))) {
        goto LABEL_10;
      }
      uint64_t v12 = v7 + 3;
      if (v12 < v11)
      {
        if (*(void *)(v10 + 8 * v12)) {
          goto LABEL_10;
        }
        while (1)
        {
          uint64_t v13 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            break;
          }
          if (v13 >= v11) {
            goto LABEL_21;
          }
          ++v12;
          if (*(void *)(v10 + 8 * v13)) {
            goto LABEL_10;
          }
        }
LABEL_25:
        __break(1u);
        return MEMORY[0x270FA1FA8](v1);
      }
    }
  }
LABEL_21:
  swift_release();
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_38_8();
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_35_4(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_256CDD27C;
  uint64_t v17 = OUTLINED_FUNCTION_55_6();
  return v18(v17);
}

uint64_t sub_256CDD908()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 96);
  OUTLINED_FUNCTION_72_2(v1, v2, v3, *(void *)(v0 + 104));
  sub_256BE33C8(v1, &qword_269FC5950);
  if (*(unsigned char *)(v0 + 73) == 1)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_256CDD634;
    OUTLINED_FUNCTION_32_1(*(void *)(v0 + 80));
    return sub_256CDF1E8();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v6();
  }
}

uint64_t sub_256CDD9FC()
{
  OUTLINED_FUNCTION_2();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v3);
  v1[5] = OUTLINED_FUNCTION_38();
  v1[6] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256CDDA88()
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v2 = OUTLINED_FUNCTION_81_4();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269FC5818);
  OUTLINED_FUNCTION_131_0(v3, v4, &qword_26B2C7798);
  uint64_t v5 = (void *)sub_256CEDC68();
  os_log_type_t v6 = sub_256CEE2D8();
  if (OUTLINED_FUNCTION_31_5(v6))
  {
    OUTLINED_FUNCTION_30_9();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_53_8(4.8149e-34);
    OUTLINED_FUNCTION_96_3(v7, v8, &qword_26B2C7798);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    uint64_t v9 = OUTLINED_FUNCTION_68_5();
    uint64_t v10 = sub_256BE33C8(v9, &qword_26B2C7798);
    uint64_t v14 = OUTLINED_FUNCTION_73_4(v10, v11, v12, v13);
    OUTLINED_FUNCTION_67_7(v14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_95_3();
    OUTLINED_FUNCTION_139(&dword_256BD4000, v15, v16, "Received endOfStream request for %s");
    OUTLINED_FUNCTION_48_10();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256BE33C8(*(void *)(v0 + 24), &qword_26B2C7798);
  }

  uint64_t v18 = v1[3];
  uint64_t v17 = v1[4];
  uint64_t v19 = swift_task_alloc();
  v1[7] = v19;
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = swift_task_alloc();
  v1[8] = v20;
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = v17;
  sub_256CEA740(&qword_269FC5978, v21, (void (*)(uint64_t))type metadata accessor for InferenceProviderXPCRequestDispatcher);
  uint64_t v22 = (void *)swift_task_alloc();
  v1[9] = v22;
  *uint64_t v22 = v1;
  v22[1] = sub_256CDDCD8;
  OUTLINED_FUNCTION_22();
  return MEMORY[0x270FA2338](v23, v24, v25, v26, v27, v28, v29, v30);
}

uint64_t sub_256CDDCD8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256CDDDF8, v2, 0);
}

uint64_t sub_256CDDDF8()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CDDE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256CDDE78, a2, 0);
}

uint64_t sub_256CDDE78()
{
  OUTLINED_FUNCTION_12();
  uint64_t v2 = sub_256CEA740(&qword_269FC5978, v1, (void (*)(uint64_t))type metadata accessor for InferenceProviderXPCRequestDispatcher);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 40) = v3;
  long long v9 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 16) = v9;
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_256CDDFB4;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2318](v6, v9, v2, 0x727453664F646E65, 0xEF293A5F286D6165, sub_256CEAA0C, v3, v7);
}

uint64_t sub_256CDDFB4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v3();
}

uint64_t sub_256CDE090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v15);
  sub_256C5FC18(a3, (uint64_t)v11, &qword_26B2C7798);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
  uint64_t v17 = sub_256CEA740(&qword_269FC5978, v16, (void (*)(uint64_t))type metadata accessor for InferenceProviderXPCRequestDispatcher);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v19 = (v10 + *(unsigned __int8 *)(v5 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v24;
  *((void *)v20 + 2) = v24;
  *((void *)v20 + 3) = v17;
  *((void *)v20 + 4) = v21;
  sub_256C5FC70((uint64_t)v11, (uint64_t)&v20[v18], &qword_26B2C7798);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v20[v19], v7, v4);
  swift_retain_n();
  sub_256BDB760();
  return swift_release();
}

uint64_t sub_256CDE340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return MEMORY[0x270FA2498](sub_256CDE364, a4, 0);
}

uint64_t sub_256CDE364()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0[4];
  v0[5] = *(void *)(v0[2] + 160);
  uint64_t v2 = swift_task_alloc();
  v0[6] = v2;
  *(void *)(v2 + 16) = v1;
  OUTLINED_FUNCTION_38_8();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_108_2(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_256CDE440;
  return v7();
}

uint64_t sub_256CDE440()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 16);
    uint64_t v8 = sub_256CDE53C;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 16);
    swift_release();
    swift_task_dealloc();
    uint64_t v8 = sub_256C1DB88;
    uint64_t v7 = v9;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256CDE53C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();
  swift_task_dealloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
  sub_256CEE0F8();

  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t sub_256CDE5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x270FA2498](sub_256CDE5E8, 0, 0);
}

uint64_t sub_256CDE5E8()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for InferenceProviderRequestStream();
  if (*(unsigned char *)(v1 + *(int *)(v2 + 32)) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
    sub_256CEE0F8();
  }
  else
  {
    uint64_t v3 = (uint64_t *)(v1 + *(int *)(v2 + 36));
    sub_256CE4EF0();
    uint64_t v4 = *(void *)(*v3 + 16);
    OUTLINED_FUNCTION_113();
    sub_256CE4F50(v5, v6, v7);
    uint64_t v8 = *v3;
    *(void *)(*v3 + 16) = v4 + 1;
    __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_271();
    v9();
    *uint64_t v3 = v8;
  }
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_198();
  return v11(v10, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_256CDE708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  sub_256C5FC18(a1, (uint64_t)v7, &qword_26B2C7798);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v13 = (v6 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  sub_256C5FC70((uint64_t)v7, v14 + v12, &qword_26B2C7798);
  *(void *)(v14 + v13) = a2;
  swift_retain();
  sub_256BDB760();
  return swift_release();
}

uint64_t sub_256CDE8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  v5[5] = swift_task_alloc();
  v5[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CDE94C, 0, 0);
}

uint64_t sub_256CDE94C()
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v2 = OUTLINED_FUNCTION_81_4();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269FC5818);
  OUTLINED_FUNCTION_131_0(v3, v4, &qword_26B2C7798);
  uint64_t v5 = (void *)sub_256CEDC68();
  os_log_type_t v6 = sub_256CEE2D8();
  if (OUTLINED_FUNCTION_31_5(v6))
  {
    OUTLINED_FUNCTION_30_9();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_53_8(4.8149e-34);
    OUTLINED_FUNCTION_96_3(v7, v8, &qword_26B2C7798);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    uint64_t v9 = OUTLINED_FUNCTION_68_5();
    uint64_t v10 = sub_256BE33C8(v9, &qword_26B2C7798);
    uint64_t v14 = OUTLINED_FUNCTION_73_4(v10, v11, v12, v13);
    OUTLINED_FUNCTION_67_7(v14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_95_3();
    OUTLINED_FUNCTION_139(&dword_256BD4000, v15, v16, "endOfStream for %s was cancelled. Forwarding to fetchNext tasks and cancelling buffering");
    OUTLINED_FUNCTION_48_10();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256BE33C8(*(void *)(v0 + 24), &qword_26B2C7798);
  }

  uint64_t v17 = swift_task_alloc();
  unint64_t v18 = (void *)OUTLINED_FUNCTION_108_2(v17);
  *unint64_t v18 = v19;
  v18[1] = sub_256CDEAF0;
  OUTLINED_FUNCTION_32_1(*(void *)(v1 + 24));
  OUTLINED_FUNCTION_22();
  return sub_256CDFD58(v20);
}

uint64_t sub_256CDEAF0()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  *uint64_t v4 = *v1;
  swift_task_dealloc();
  os_log_type_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v6;
  *os_log_type_t v6 = v5;
  v6[1] = sub_256CDEC1C;
  OUTLINED_FUNCTION_32_1(*(void *)(v0 + 24));
  OUTLINED_FUNCTION_198();
  return sub_256CDCAD4();
}

uint64_t sub_256CDEC1C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256CDED14()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  v1[4] = v4;
  v1[5] = v0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v5);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v6 = sub_256CEDC88();
  v1[8] = v6;
  OUTLINED_FUNCTION_6(v6);
  v1[9] = v7;
  uint64_t v8 = OUTLINED_FUNCTION_51_0();
  uint64_t v9 = *v3;
  v1[10] = v8;
  v1[11] = v9;
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t sub_256CDEDEC()
{
  uint64_t v34 = v0;
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[10];
  unint64_t v2 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v7 = __swift_project_value_buffer(v4, (uint64_t)qword_269FC5818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v7, v4);
  sub_256C5FC18(v1, v6, &qword_26B2C7798);
  sub_256C255D4(v2);
  sub_256C255D4(v2);
  uint64_t v8 = sub_256CEDC68();
  os_log_type_t v9 = sub_256CEE2D8();
  BOOL v10 = os_log_type_enabled(v8, v9);
  unint64_t v11 = v0[11];
  if (v10)
  {
    os_log_type_t v32 = v9;
    uint64_t v31 = v8;
    uint64_t v12 = v0[6];
    uint64_t v13 = v0[7];
    uint64_t v14 = swift_slowAlloc();
    v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    sub_256C5FC18(v13, v12, &qword_26B2C7798);
    uint64_t v15 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v17 = v16;
    sub_256BE33C8(v12, &qword_26B2C7798);
    v0[2] = sub_256BE14CC(v15, v17, v33);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256BE33C8(v13, &qword_26B2C7798);
    *(_WORD *)(v14 + 12) = 2080;
    unint64_t v18 = 0xD000000000000010;
    unint64_t v19 = 0x8000000256D010D0;
    uint64_t v20 = v31;
    switch(v11)
    {
      case 0uLL:
        unint64_t v18 = OUTLINED_FUNCTION_65_7();
        break;
      case 1uLL:
        break;
      case 2uLL:
        uint64_t v23 = "Client Termination";
        goto LABEL_10;
      case 3uLL:
        uint64_t v23 = "Request Preemption";
LABEL_10:
        unint64_t v19 = (unint64_t)(v23 - 32) | 0x8000000000000000;
        unint64_t v18 = 0xD000000000000012;
        break;
      default:
        unint64_t v18 = OUTLINED_FUNCTION_65_7();
        uint64_t v20 = v31;
        break;
    }
    uint64_t v25 = v0[10];
    unint64_t v24 = v0[11];
    uint64_t v27 = v0[8];
    uint64_t v26 = v0[9];
    v0[3] = sub_256BE14CC(v18, v19, v33);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256C715C0(v24);
    sub_256C715C0(v24);
    _os_log_impl(&dword_256BD4000, v20, v32, "Noting willCancel for %s with reason: %s)", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  else
  {
    sub_256BE33C8(v0[7], &qword_26B2C7798);
    sub_256C715C0(v11);
    sub_256C715C0(v11);

    uint64_t v21 = OUTLINED_FUNCTION_51();
    v22(v21);
  }
  uint64_t v28 = v0[4];
  v33[0] = v0[11];
  sub_256C255D4(v33[0]);
  swift_retain();
  sub_256CE09F4((uint64_t)v33, v28);
  sub_256C715C0(v0[11]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v29();
}

uint64_t sub_256CDF1E8()
{
  OUTLINED_FUNCTION_2();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v3);
  v1[5] = OUTLINED_FUNCTION_38();
  v1[6] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256CDF274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v18 = OUTLINED_FUNCTION_81_4();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_269FC5818);
  OUTLINED_FUNCTION_131_0(v19, v20, &qword_26B2C7798);
  uint64_t v21 = (void *)sub_256CEDC68();
  os_log_type_t v22 = sub_256CEE2D8();
  if (OUTLINED_FUNCTION_31_5(v22))
  {
    a11 = v17 + 16;
    OUTLINED_FUNCTION_30_9();
    a13 = OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_53_8(4.8149e-34);
    OUTLINED_FUNCTION_96_3(v23, v24, &qword_26B2C7798);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    uint64_t v25 = OUTLINED_FUNCTION_68_5();
    uint64_t v26 = sub_256BE33C8(v25, &qword_26B2C7798);
    uint64_t v30 = OUTLINED_FUNCTION_73_4(v26, v27, v28, v29);
    OUTLINED_FUNCTION_67_7(v30);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_95_3();
    OUTLINED_FUNCTION_139(&dword_256BD4000, v31, v32, "Triggering end of stream for %s");
    OUTLINED_FUNCTION_48_10();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256BE33C8(*(void *)(v16 + 24), &qword_26B2C7798);
  }

  *(void *)(v17 + 56) = *(void *)(*(void *)(v17 + 32) + 160);
  uint64_t v45 = (char *)&dword_269FC5990 + dword_269FC5990;
  swift_retain();
  uint64_t v33 = swift_task_alloc();
  uint64_t v34 = (void *)OUTLINED_FUNCTION_136_1(v33);
  void *v34 = v35;
  v34[1] = sub_256CDF448;
  OUTLINED_FUNCTION_22();
  return v36(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, v45, a13, a14, a15, a16);
}

uint64_t sub_256CDF448()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  if (v0) {

  }
  swift_release();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256CDF56C(uint64_t a1, uint64_t a2)
{
  v2[2] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
  v2[3] = v3;
  v2[4] = *(void *)(v3 - 8);
  v2[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256CDF630, 0, 0);
}

uint64_t sub_256CDF630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_71_6();
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = type metadata accessor for InferenceProviderRequestStream();
  *(unsigned char *)(v15 + *(int *)(v16 + 32)) = 1;
  uint64_t v17 = *(int *)(v16 + 36);
  uint64_t v18 = *(void *)(v15 + v17);
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    a10 = *(int *)(v16 + 36);
    a11 = v15;
    uint64_t v20 = *(void *)(v14 + 32);
    os_log_type_t v22 = *(void (**)(void))(v20 + 16);
    v20 += 16;
    uint64_t v21 = v22;
    uint64_t v23 = v18 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v24 = *(void *)(v20 + 56);
    sub_256CEDEC8();
    do
    {
      OUTLINED_FUNCTION_113();
      v21();
      sub_256CEE0F8();
      uint64_t v25 = OUTLINED_FUNCTION_150_0();
      v26(v25);
      v23 += v24;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v17 = a10;
    uint64_t v15 = a11;
  }
  swift_bridgeObjectRelease();
  *(void *)(v15 + v17) = MEMORY[0x263F8EE78];
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_26_0();
  return v28(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_256CDF750(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v3 = OUTLINED_FUNCTION_21(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_6();
  uint64_t v6 = v4 - v5;
  MEMORY[0x270FA5388](v7);
  os_log_type_t v9 = (char *)&v13 - v8;
  sub_256C5FC18(a1, v6, &qword_26B2C7798);
  OUTLINED_FUNCTION_13();
  sub_256CE6808((uint64_t)v9, v6);
  uint64_t v10 = OUTLINED_FUNCTION_118_0();
  sub_256BE33C8(v10, v11);
  return swift_endAccess();
}

uint64_t sub_256CDF824()
{
  OUTLINED_FUNCTION_2();
  v1[7] = v2;
  v1[8] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3250);
  OUTLINED_FUNCTION_21(v3);
  v1[9] = OUTLINED_FUNCTION_51_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v4);
  v1[10] = OUTLINED_FUNCTION_38();
  v1[11] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256CDF8D4()
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)qword_269FC5818);
  OUTLINED_FUNCTION_131_0(v2, v3, &qword_26B2C7798);
  uint64_t v4 = (void *)sub_256CEDC68();
  os_log_type_t v5 = sub_256CEE2D8();
  if (OUTLINED_FUNCTION_31_5(v5))
  {
    OUTLINED_FUNCTION_30_9();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_53_8(4.8149e-34);
    OUTLINED_FUNCTION_96_3(v6, v7, &qword_26B2C7798);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    uint64_t v8 = OUTLINED_FUNCTION_68_5();
    uint64_t v9 = sub_256BE33C8(v8, &qword_26B2C7798);
    v0[6] = OUTLINED_FUNCTION_73_4(v9, v10, v11, v12);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_95_3();
    OUTLINED_FUNCTION_139(&dword_256BD4000, v13, v14, "Direct InferenceProvider connection for requestID %s died. Cancelling, ending, and removing stream.");
    OUTLINED_FUNCTION_48_10();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256BE33C8(v0[11], &qword_26B2C7798);
  }

  uint64_t v15 = v0[9];
  OUTLINED_FUNCTION_13();
  sub_256CEA344(v15);
  sub_256BE33C8(v15, &qword_269FC3250);
  swift_endAccess();
  v0[5] = 1;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[12] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_256CDFAF0;
  OUTLINED_FUNCTION_32_1(v0[7]);
  OUTLINED_FUNCTION_22();
  return sub_256CDED14();
}

uint64_t sub_256CDFAF0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v3 = v2;
  uint64_t v4 = *v0;
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 104) = v5;
  *os_log_type_t v5 = v4;
  v5[1] = sub_256CDFC3C;
  OUTLINED_FUNCTION_32_1(*(void *)(v1 + 56));
  return sub_256CDCAD4();
}

uint64_t sub_256CDFC3C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256CDFD58(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CDFD74, v1);
}

uint64_t sub_256CDFD74()
{
  OUTLINED_FUNCTION_12();
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  OUTLINED_FUNCTION_22_1();
  uint64_t v3 = *(void *)(v1 + 176);
  sub_256CEDEC8();
  LOBYTE(v2) = sub_256CE0118(v2, v3);
  swift_bridgeObjectRelease();
  if (v2)
  {
    if (qword_269FC2740 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_256CEDC88();
    uint64_t v5 = (void *)OUTLINED_FUNCTION_43_4(v4, (uint64_t)qword_269FC5818);
    os_log_type_t v6 = sub_256CEE2D8();
    if (OUTLINED_FUNCTION_25_0(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v7);
      OUTLINED_FUNCTION_61(&dword_256BD4000, v8, v9, "shouldTriggerEndOfStreamOnCancel returning false due to extant connection");
      OUTLINED_FUNCTION_4();
    }

    uint64_t v10 = OUTLINED_FUNCTION_79_4();
    return v11(v10);
  }
  else
  {
    v0[7] = *(void *)(v0[6] + 160);
    OUTLINED_FUNCTION_38_8();
    uint64_t v13 = swift_task_alloc();
    uint64_t v14 = (void *)OUTLINED_FUNCTION_136_1(v13);
    *uint64_t v14 = v15;
    v14[1] = sub_256CDFF08;
    uint64_t v16 = OUTLINED_FUNCTION_32_1(v0[5]);
    return v17(v16);
  }
}

uint64_t sub_256CDFF08()
{
  OUTLINED_FUNCTION_12();
  char v3 = v2;
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  *os_log_type_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v8 = v7;
  *(void *)(v5 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(void *)(v5 + 48);
    return MEMORY[0x270FA2498](sub_256CE002C, v9, 0);
  }
  else
  {
    swift_release();
    uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
    return v10(v3 & 1);
  }
}

uint64_t sub_256CE002C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  char v2 = (void *)OUTLINED_FUNCTION_43_4(v1, (uint64_t)qword_269FC5818);
  os_log_type_t v3 = sub_256CEE2D8();
  BOOL v4 = OUTLINED_FUNCTION_41(v3);
  uint64_t v5 = *(void **)(v0 + 72);
  if (v4)
  {
    *(_WORD *)OUTLINED_FUNCTION_99() = 0;
    OUTLINED_FUNCTION_78_7(&dword_256BD4000, v6, v7, "shouldTriggerEndOfStreamOnCancel returning false due to no existing stream");
    OUTLINED_FUNCTION_4();
  }

  uint64_t v8 = OUTLINED_FUNCTION_79_4();
  return v9(v8);
}

uint64_t sub_256CE0118(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_256CEE798(),
        sub_256CEDB08(),
        sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]),
        sub_256CEDF18(),
        uint64_t v7 = sub_256CEE7F8(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = *(void *)(v4 + 72);
    do
    {
      sub_256C5FC18(*(void *)(a2 + 48) + v11 * v9, (uint64_t)v6, &qword_26B2C7798);
      char v12 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_256BE33C8((uint64_t)v6, &qword_26B2C7798);
      if (v12) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_256CE02E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_256CE0300, 0, 0);
}

void sub_256CE0300()
{
  OUTLINED_FUNCTION_59();
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v2 + *(int *)(type metadata accessor for InferenceProviderRequestStream() + 28))
                          + 24);
  os_unfair_lock_lock(v3);
  OUTLINED_FUNCTION_138_1();
  sub_256CEB3A0(v4, v5);
  os_unfair_lock_unlock(v3);
  if (!v0)
  {
    switch(v13)
    {
      case 0uLL:
        unint64_t v6 = 0;
        goto LABEL_8;
      case 1uLL:
        unint64_t v6 = 1;
        goto LABEL_8;
      case 2uLL:
        sub_256C715C0(2uLL);
        sub_256C715C0(2uLL);
        sub_256CD9A80(2uLL);
        sub_256CD9A80(2uLL);
        int v7 = 1;
        goto LABEL_11;
      case 3uLL:
        unint64_t v6 = 3;
        goto LABEL_8;
      case 4uLL:
        sub_256CD9A80(4uLL);
        sub_256CD9A80(2uLL);
        goto LABEL_10;
      default:
        unint64_t v6 = v13;
LABEL_8:
        sub_256C715C0(v6);
        sub_256C715C0(2uLL);
LABEL_10:
        int v7 = 0;
LABEL_11:
        if (qword_269FC2740 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_256CEDC88();
        unint64_t v9 = OUTLINED_FUNCTION_43_4(v8, (uint64_t)qword_269FC5818);
        os_log_type_t v10 = sub_256CEE2D8();
        if (OUTLINED_FUNCTION_25_0(v10))
        {
          uint64_t v11 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v11 = 67109120;
          *(_DWORD *)(v1 + 32) = v7;
          sub_256CEE308();
          _os_log_impl(&dword_256BD4000, v9, (os_log_type_t)v3, "shouldTriggerEndOfStreamOnCancel returning %{BOOL}d with existing stream", v11, 8u);
          OUTLINED_FUNCTION_4();
        }

        **(unsigned char **)(v1 + 16) = v7;
        OUTLINED_FUNCTION_72();
        v12();
        break;
    }
  }
}

uint64_t InferenceProviderXPCRequestDispatcher.deinit()
{
  sub_256CE4DD8(v0 + 112);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t InferenceProviderXPCRequestDispatcher.__deallocating_deinit()
{
  InferenceProviderXPCRequestDispatcher.deinit();
  return MEMORY[0x270FA2418](v0);
}

void InferenceProviderXPCRequestDispatcher.unownedExecutor.getter()
{
}

void sub_256CE05B0()
{
}

uint64_t sub_256CE05CC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_60();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_117_1();
  return sub_256CD9C34();
}

uint64_t sub_256CE0660()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_49();
  return sub_256CD9EDC();
}

uint64_t sub_256CE06F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return static InferenceProviderXPCRequestDispatcher.responseForXPCDecodingError(error:)(a1, a2);
}

void *sub_256CE0708()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  type metadata accessor for InferenceProviderRequestStream();
  sub_256C90080(&qword_26B2C4EF0, &qword_26B2C7798);
  OUTLINED_FUNCTION_118_0();
  uint64_t v1 = sub_256CEDEB8();
  uint64_t v2 = MEMORY[0x263F8EE88];
  v0[2] = v1;
  v0[3] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FC0);
  v0[4] = OUTLINED_FUNCTION_129_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FC8);
  v0[5] = OUTLINED_FUNCTION_129_1();
  return v0;
}

void sub_256CE07CC()
{
  OUTLINED_FUNCTION_57();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5950);
  uint64_t v5 = OUTLINED_FUNCTION_21(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_19();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v10 = OUTLINED_FUNCTION_21(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_87_4();
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = type metadata accessor for InferenceProviderRequestStream();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_44_0();
  sub_256BF973C(v3, (uint64_t)&v23);
  uint64_t v16 = OUTLINED_FUNCTION_150_0();
  sub_256C5FC18(v16, v17, &qword_26B2C7798);
  InferenceProviderRequestStream.init(stream:id:)();
  uint64_t v18 = v0 + *(int *)(v14 + 20);
  sub_256C5FC18(v18, v1, &qword_26B2C7798);
  OUTLINED_FUNCTION_13();
  sub_256CE6808((uint64_t)v13, v1);
  sub_256BE33C8((uint64_t)v13, &qword_26B2C7798);
  swift_endAccess();
  sub_256C5FC18(v18, (uint64_t)v13, &qword_26B2C7798);
  sub_256CEB298();
  OUTLINED_FUNCTION_90_2();
  __swift_storeEnumTagSinglePayload(v19, v20, v21, v14);
  OUTLINED_FUNCTION_13();
  sub_256CD4FE4(v8, (uint64_t)v13);
  swift_endAccess();
  OUTLINED_FUNCTION_13();
  swift_retain();
  sub_256C9C9A8();
  swift_endAccess();
  sub_256CEB2EC(v0, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  OUTLINED_FUNCTION_71();
}

void sub_256CE09F4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 24);
  sub_256CEDEC8();
  char v6 = sub_256CE0118(a2, v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_beginAccess();
    uint64_t v7 = *(void *)(v2 + 32);
    sub_256CEDEC8();
    uint64_t v8 = sub_256CEB7E0(a2, v7);
    uint64_t v9 = swift_bridgeObjectRelease();
    if (v8)
    {
      MEMORY[0x270FA5388](v9);
      os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
      sub_256CEA790((unint64_t *)(v8 + 16));
      os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
      if (v3) {
        __break(1u);
      }
      else {
        swift_release();
      }
    }
  }
  else
  {
    OUTLINED_FUNCTION_143_1();
    sub_256CEE368();
    swift_bridgeObjectRelease();
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    sub_256CEDFB8();
    swift_bridgeObjectRelease();
    sub_256CEDEB8();
    sub_256BE9EDC();
    uint64_t v10 = swift_allocError();
    v11->n128_u64[0] = 0xD000000000000010;
    v11->n128_u64[1] = 0x8000000256D01D80;
    OUTLINED_FUNCTION_115_3((__n128)xmmword_256CF5E20, v10, v11);
    swift_willThrow();
  }
}

unint64_t sub_256CE0BCC(unint64_t *a1, unint64_t a2)
{
  *a1 = a2;
  return sub_256CEA7AC(a2);
}

uint64_t sub_256CE0C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for InferenceProviderRequestStream();
  v4[6] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[7] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_256CE0CFC;
  return sub_256CE24A8();
}

uint64_t sub_256CE0CFC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *char v6 = v5;
  v3[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[4];
    return MEMORY[0x270FA2498](sub_256CE0F2C, v7, 0);
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v3[9] = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_256CE0E3C;
    uint64_t v9 = v3[6];
    uint64_t v10 = v3[2];
    return sub_256CDA63C(v10, v9);
  }
}

uint64_t sub_256CE0E3C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256CE0F2C()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CE0F88()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 48);
  OUTLINED_FUNCTION_70_6();
  sub_256CEB2EC(v1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v2();
}

uint64_t sub_256CE1004()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 48);
  OUTLINED_FUNCTION_70_6();
  sub_256CEB2EC(v1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t sub_256CE1084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for InferenceProviderRequestStream();
  v4[6] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[7] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_256CE116C;
  return sub_256CE24A8();
}

uint64_t sub_256CE116C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  v3[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[4];
    return MEMORY[0x270FA2498](sub_256CEB38C, v7, 0);
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v3[9] = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_256CE12AC;
    uint64_t v9 = v3[6];
    uint64_t v10 = v3[2];
    return sub_256CDF56C(v10, v9);
  }
}

uint64_t sub_256CE12AC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256CE139C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  type metadata accessor for InferenceProviderRequestStream();
  v6[8] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v6[9] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_256CE1484;
  return sub_256CE24A8();
}

uint64_t sub_256CE1484()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  v3[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[4];
    return MEMORY[0x270FA2498](sub_256CE16F8, v7, 0);
  }
  else
  {
    unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(v3[5] + *(int *)v3[5]);
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    v3[11] = v8;
    *uint64_t v8 = v9;
    v8[1] = sub_256CE1608;
    uint64_t v10 = v3[8];
    uint64_t v11 = v3[2];
    return v13(v11, v10);
  }
}

uint64_t sub_256CE1608()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256CE16F8()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CE1754()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 64);
  OUTLINED_FUNCTION_70_6();
  sub_256CEB2EC(v1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v2();
}

uint64_t sub_256CE17D0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 64);
  OUTLINED_FUNCTION_70_6();
  sub_256CEB2EC(v1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t sub_256CE1850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for InferenceProviderRequestStream();
  v4[6] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[7] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_256CE1938;
  return sub_256CE24A8();
}

uint64_t sub_256CE1938()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 32);
    uint64_t v8 = sub_256C55540;
  }
  else
  {
    uint64_t v8 = sub_256CE1A20;
    uint64_t v7 = 0;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256CE1A20()
{
  OUTLINED_FUNCTION_2();
  sub_256CEB298();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_256CE1A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = type metadata accessor for InferenceProviderRequestStream();
  v6[9] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v6[10] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_256CE1B8C;
  return sub_256CE24A8();
}

uint64_t sub_256CE1B8C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 32);
    uint64_t v8 = sub_256CE1FB0;
  }
  else
  {
    uint64_t v8 = sub_256CE1C74;
    uint64_t v7 = 0;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256CE1C74()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0[9] + *(int *)(v0[8] + 24));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_77();
  v0[12] = v2;
  *uint64_t v2 = v3;
  v2[1] = sub_256CE1D18;
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[2];
  return v8(v6, v1, v4, v5);
}

uint64_t sub_256CE1D18()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = sub_256CE1E94;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + 32);
    uint64_t v7 = sub_256CE1E00;
  }
  return MEMORY[0x270FA2498](v7, v8, 0);
}

uint64_t sub_256CE1E00()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 72);
  OUTLINED_FUNCTION_70_6();
  sub_256CEB2EC(v1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v2();
}

uint64_t sub_256CE1E94()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void **)(v0 + 104);
  *(void *)(v0 + 112) = InferenceProviderRequestStream.filteredCancellationError(_:)((uint64_t)v1);
  swift_willThrow();

  OUTLINED_FUNCTION_256();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_256CE1F20()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 72);
  OUTLINED_FUNCTION_70_6();
  sub_256CEB2EC(v1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t sub_256CE1FB0()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CE2018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for InferenceProviderRequestStream();
  v3[5] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  void v3[6] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_256CE2100;
  return sub_256CE24A8();
}

uint64_t sub_256CE2100()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  v3[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[3];
    return MEMORY[0x270FA2498](sub_256CE2330, v7, 0);
  }
  else
  {
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    v3[8] = v8;
    *uint64_t v8 = v9;
    v8[1] = sub_256CE2240;
    uint64_t v10 = v3[5];
    return sub_256CE02E0((uint64_t)(v3 + 10), v10);
  }
}

uint64_t sub_256CE2240()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256CE2330()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  uint64_t v0 = OUTLINED_FUNCTION_79_4();
  return v1(v0);
}

uint64_t sub_256CE238C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 40);
  sub_256CE2DCC();
  sub_256CEB2EC(v1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 80);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_256CE2420()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 40);
  sub_256CE2DCC();
  sub_256CEB2EC(v1, (void (*)(void))type metadata accessor for InferenceProviderRequestStream);
  swift_task_dealloc();
  uint64_t v2 = OUTLINED_FUNCTION_79_4();
  return v3(v2);
}

uint64_t sub_256CE24A8()
{
  OUTLINED_FUNCTION_2();
  v1[13] = v2;
  v1[14] = v0;
  v1[11] = v3;
  v1[12] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v5);
  v1[15] = OUTLINED_FUNCTION_51_0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5950);
  OUTLINED_FUNCTION_21(v6);
  v1[16] = OUTLINED_FUNCTION_98_3();
  v1[17] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for InferenceProviderRequestStream();
  v1[18] = v7;
  OUTLINED_FUNCTION_21(v7);
  v1[19] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_73();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_256CE2584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_71_6();
  uint64_t v15 = v14[14];
  uint64_t v16 = v14[12];
  OUTLINED_FUNCTION_22_1();
  uint64_t v17 = *(void *)(v15 + 24);
  sub_256CEDEC8();
  LOBYTE(v16) = sub_256CE0118(v16, v17);
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v19 = v14[17];
    uint64_t v18 = v14[18];
    uint64_t v20 = v14[14];
    uint64_t v21 = v14[12];
    OUTLINED_FUNCTION_22_1();
    uint64_t v22 = *(void *)(v20 + 16);
    sub_256CEDEC8();
    sub_256CEB730(v21, v22, v19);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v19, 1, v18) == 1)
    {
      uint64_t v23 = v14[14];
      uint64_t v24 = v14[12];
      sub_256BE33C8(v14[17], &qword_269FC5950);
      sub_256CEA740(&qword_269FC5978, v25, (void (*)(uint64_t))type metadata accessor for InferenceProviderXPCRequestDispatcher);
      uint64_t v26 = swift_task_alloc();
      v14[20] = v26;
      *(void *)(v26 + 16) = v23;
      *(void *)(v26 + 24) = v24;
      uint64_t v27 = swift_task_alloc();
      uint64_t v28 = (void *)OUTLINED_FUNCTION_35_4(v27);
      *uint64_t v28 = v29;
      v28[1] = sub_256CE2918;
      OUTLINED_FUNCTION_26_0();
      return MEMORY[0x270FA2360](v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14);
    }
    uint64_t v41 = v14[18];
    uint64_t v42 = v14[16];
    uint64_t v43 = v14[15];
    uint64_t v44 = v14[12];
    sub_256CEB340();
    sub_256C5FC18(v44, v43, &qword_26B2C7798);
    __swift_storeEnumTagSinglePayload(v42, 1, 1, v41);
    OUTLINED_FUNCTION_13();
    uint64_t v45 = OUTLINED_FUNCTION_102_3();
    sub_256CD4FE4(v45, v46);
    swift_endAccess();
    sub_256CEB340();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
  }
  else
  {
    sub_256CEE368();
    swift_bridgeObjectRelease();
    a9 = 0xD000000000000010;
    a10 = 0x8000000256D01D80;
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    sub_256CEDFB8();
    swift_bridgeObjectRelease();
    sub_256CEDEB8();
    sub_256BE9EDC();
    uint64_t v39 = OUTLINED_FUNCTION_94();
    v40->n128_u64[0] = 0xD000000000000010;
    v40->n128_u64[1] = 0x8000000256D01D80;
    OUTLINED_FUNCTION_115_3((__n128)xmmword_256CF5E20, v39, v40);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_26_0();
  return v48(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_256CE2918()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 104);
    return MEMORY[0x270FA2498](sub_256CE2A50, v7, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
    return v8();
  }
}

uint64_t sub_256CE2A50()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256CE2ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5960);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v10 = MEMORY[0x270FA5388](v31);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - v13;
  sub_256C5FC18(a3, (uint64_t)&v31 - v13, &qword_26B2C7798);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v32 = v6;
  v15(v9, a1, v6);
  uint64_t v16 = (uint64_t *)(a2 + 40);
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = *(void *)(a2 + 40);
  uint64_t v17 = v33;
  *(void *)(a2 + 40) = 0x8000000000000000;
  sub_256C9BD5C((uint64_t)v14);
  if (__OFADD__(*(void *)(v17 + 16), (v19 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v20 = v18;
  char v21 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D78);
  char v22 = sub_256CEE3C8();
  uint64_t v23 = v33;
  if (v22)
  {
    sub_256C9BD5C((uint64_t)v14);
    if ((v21 & 1) == (v25 & 1))
    {
      uint64_t v20 = v24;
      goto LABEL_5;
    }
LABEL_9:
    uint64_t result = sub_256CEE738();
    __break(1u);
    return result;
  }
LABEL_5:
  *uint64_t v16 = v23;
  swift_bridgeObjectRelease();
  uint64_t v26 = *v16;
  if ((v21 & 1) == 0)
  {
    sub_256C5FC18((uint64_t)v14, (uint64_t)v12, &qword_26B2C7798);
    sub_256C9D50C(v20, v12, MEMORY[0x263F8EE78], v26);
  }
  uint64_t v27 = *(void *)(v26 + 56) + 8 * v20;
  sub_256CE4EF0();
  uint64_t v28 = *(void *)(*(void *)v27 + 16);
  sub_256CE4F50(v28, &qword_269FC5970, &qword_269FC5960);
  uint64_t v29 = *(void *)v27;
  *(void *)(v29 + 16) = v28 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v29+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v28, v9, v32);
  sub_256BE33C8((uint64_t)v14, &qword_26B2C7798);
  return swift_endAccess();
}

void sub_256CE2DCC()
{
  OUTLINED_FUNCTION_57();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5950);
  uint64_t v9 = OUTLINED_FUNCTION_21(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_3_0();
  uint64_t v84 = v10;
  uint64_t v11 = type metadata accessor for InferenceProviderRequestStream();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_0();
  uint64_t v85 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5958);
  uint64_t v15 = OUTLINED_FUNCTION_21(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_3_0();
  uint64_t v86 = v16;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_87_4();
  MEMORY[0x270FA5388](v18);
  uint64_t v90 = (uint64_t *)((char *)&v79 - v19);
  OUTLINED_FUNCTION_71_3();
  MEMORY[0x270FA5388](v20);
  uint64_t v89 = (uint64_t)&v79 - v21;
  OUTLINED_FUNCTION_71_3();
  MEMORY[0x270FA5388](v22);
  uint64_t v88 = (uint64_t)&v79 - v23;
  OUTLINED_FUNCTION_71_3();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v79 - v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5960);
  OUTLINED_FUNCTION_5();
  uint64_t v29 = v28;
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_3_6();
  *(void *)&long long v87 = v31 - v32;
  OUTLINED_FUNCTION_71_3();
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v79 - v34;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3250);
  uint64_t v37 = OUTLINED_FUNCTION_21(v36);
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_16_1();
  if (*(unsigned char *)(v7 + *(int *)(v11 + 32)) == 1)
  {
    OUTLINED_FUNCTION_13();
    sub_256CEA344(v1);
    sub_256BE33C8(v1, &qword_269FC3250);
    swift_endAccess();
    OUTLINED_FUNCTION_13();
    sub_256C9C4E8();
    uint64_t v39 = v38;
    swift_endAccess();
    if (v39)
    {
      uint64_t v40 = v27;
      uint64_t v41 = *(void *)(v39 + 16);
      if (v41)
      {
        uint64_t v43 = *(uint64_t **)(v29 + 16);
        uint64_t v42 = v29 + 16;
        uint64_t v44 = *(unsigned __int8 *)(v42 + 64);
        uint64_t v86 = v39;
        uint64_t v45 = v39 + ((v44 + 32) & ~v44);
        uint64_t v89 = *(void *)(v42 + 56);
        uint64_t v90 = v43;
        uint64_t v88 = 0x8000000256D01D80;
        long long v87 = xmmword_256CF5E20;
        do
        {
          ((void (*)(char *, uint64_t, uint64_t))v90)(v35, v45, v40);
          OUTLINED_FUNCTION_143_1();
          sub_256CEE368();
          swift_bridgeObjectRelease();
          unint64_t v93 = 0xD000000000000010;
          uint64_t v94 = v88;
          _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
          sub_256CEDFB8();
          swift_bridgeObjectRelease();
          unint64_t v46 = v93;
          uint64_t v47 = v94;
          uint64_t v48 = sub_256CEDEB8();
          sub_256BE9EDC();
          uint64_t v49 = OUTLINED_FUNCTION_94();
          *(void *)uint64_t v50 = v46;
          *(void *)(v50 + 8) = v47;
          *(_OWORD *)(v50 + 16) = v87;
          *(void *)(v50 + 32) = 0;
          *(void *)(v50 + 40) = v48;
          *(unsigned char *)(v50 + 48) = 72;
          unint64_t v93 = v49;
          sub_256CEE0E8();
          (*(void (**)(char *, uint64_t))(v42 - 8))(v35, v40);
          v45 += v89;
          --v41;
        }
        while (v41);
      }
      swift_bridgeObjectRelease();
    }
    goto LABEL_23;
  }
  uint64_t v80 = v29;
  uint64_t v81 = v7;
  uint64_t v83 = v5;
  sub_256C5FC18(v5, (uint64_t)v26, &qword_26B2C7798);
  uint64_t v51 = (uint64_t *)(v3 + 40);
  OUTLINED_FUNCTION_22_1();
  uint64_t v52 = *(void *)(v3 + 40);
  uint64_t v53 = *(void *)(v52 + 16);
  sub_256CEDEC8();
  if (v53 && (sub_256C9BD5C((uint64_t)v26), (v55 & 1) != 0))
  {
    uint64_t v56 = *(void *)(*(void *)(v52 + 56) + 8 * v54);
    sub_256CEDEC8();
  }
  else
  {
    uint64_t v56 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  sub_256BE33C8((uint64_t)v26, &qword_26B2C7798);
  uint64_t v57 = *(void *)(v56 + 16);
  swift_bridgeObjectRelease();
  if (!v57)
  {
    sub_256C5FC18(v83, v2, &qword_26B2C7798);
    uint64_t v75 = v84;
    sub_256CEB298();
    OUTLINED_FUNCTION_90_2();
    __swift_storeEnumTagSinglePayload(v76, v77, v78, v11);
    OUTLINED_FUNCTION_13();
    sub_256CD4FE4(v75, v2);
    swift_endAccess();
    goto LABEL_23;
  }
  uint64_t v58 = v27;
  uint64_t v59 = v88;
  sub_256C5FC18(v83, v88, &qword_26B2C7798);
  OUTLINED_FUNCTION_13();
  uint64_t v60 = v89;
  sub_256C5FC18(v59, v89, &qword_26B2C7798);
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = (void (*)(void, void, void))v90;
  sub_256C5FC18(v60, (uint64_t)v90, &qword_26B2C7798);
  uint64_t v92 = *v51;
  uint64_t v62 = v92;
  *uint64_t v51 = 0x8000000000000000;
  sub_256C9BD5C((uint64_t)v61);
  if (__OFADD__(*(void *)(v62 + 16), (v64 & 1) == 0))
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v65 = v63;
  char v66 = v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4D78);
  char v67 = sub_256CEE3C8();
  uint64_t v69 = v86;
  uint64_t v68 = v87;
  if ((v67 & 1) == 0)
  {
LABEL_16:
    if (v66)
    {
      uint64_t v72 = *(void *)(*(void *)(v92 + 56) + 8 * v65);
      uint64_t v91 = v72;
      if (*(void *)(v72 + 16))
      {
        sub_256CD3640(v72, v69);
        if (__swift_getEnumTagSinglePayload(v69, 1, v58) == 1)
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        uint64_t v73 = v80;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v68, v69, v58);
        if (*(void *)(v72 + 16))
        {
          sub_256CEA5CC(0, 1);
          sub_256CE9E4C((uint64_t)&v91, 1, (uint64_t)&v92, v65, (uint64_t)v61, (uint64_t)sub_256C9D50C, (uint64_t)&qword_26B2C4FC8, v74, v79, v80, v81, v82, v83, v84, v85, v86, v87, *((uint64_t *)&v87 + 1), v88,
            v89);
          swift_bridgeObjectRelease();
          sub_256BE33C8((uint64_t)v61, &qword_26B2C7798);
          *uint64_t v51 = v92;
          sub_256BE33C8(v60, &qword_26B2C7798);
          sub_256BE33C8(v59, &qword_26B2C7798);
          swift_endAccess();
          sub_256CEB298();
          OUTLINED_FUNCTION_51();
          sub_256CEE0F8();
          (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v68, v58);
LABEL_23:
          OUTLINED_FUNCTION_71();
          return;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_256C9BD5C((uint64_t)v61);
  if ((v66 & 1) == (v71 & 1))
  {
    uint64_t v65 = v70;
    goto LABEL_16;
  }
LABEL_29:
  sub_256CEE738();
  __break(1u);
}

uint64_t sub_256CE3510()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_256CE3548()
{
  sub_256CE3510();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_256CE357C(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3250);
  uint64_t v5 = OUTLINED_FUNCTION_21(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_44_0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_72_2(v2, v7, v8, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A50);
  OUTLINED_FUNCTION_131_1();
  uint64_t v9 = swift_allocObject();
  OUTLINED_FUNCTION_131_1();
  *(_DWORD *)((char *)v10 + v11) = 0;
  sub_256C5FC18(v2, (uint64_t)v10 + *(void *)(*MEMORY[0x263F8DD00] + *v10 + 16), &qword_269FC3250);
  sub_256BE33C8(v2, &qword_269FC3250);
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v9;
  return v1;
}

uint64_t sub_256CE36B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return static InferenceProviderXPCRequestDispatcher.responseForXPCDecodingError(error:)(a1, a2);
}

uint64_t sub_256CE36E8()
{
  OUTLINED_FUNCTION_2();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v4);
  v1[5] = OUTLINED_FUNCTION_51_0();
  uint64_t NextStreamResultsRequest = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  OUTLINED_FUNCTION_21(NextStreamResultsRequest);
  v1[6] = OUTLINED_FUNCTION_51_0();
  uint64_t v6 = type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(0);
  OUTLINED_FUNCTION_21(v6);
  v1[7] = OUTLINED_FUNCTION_51_0();
  uint64_t v7 = type metadata accessor for InferenceProviderXPCRequest(0);
  v1[8] = v7;
  OUTLINED_FUNCTION_21(v7);
  v1[9] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_256CE37D0()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  sub_256CEB298();
  OUTLINED_FUNCTION_51();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    uint64_t v12 = v0[5];
    uint64_t v11 = v0[6];
    uint64_t v13 = v0[4];
    sub_256CEB340();
    uint64_t v14 = *(void **)(v13 + 24);
    *(void *)(swift_task_alloc() + 16) = v11;
    uint64_t v15 = (uint64_t)v14 + *(void *)(*MEMORY[0x263F8DD00] + *v14 + 16);
    OUTLINED_FUNCTION_131_1();
    uint64_t v17 = (os_unfair_lock_s *)((char *)v14 + v16);
    os_unfair_lock_lock(v17);
    sub_256CE62D0(v15, v12);
    os_unfair_lock_unlock(v17);
    swift_task_dealloc();
    OUTLINED_FUNCTION_96();
    char v36 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
    if (v36)
    {
      uint64_t v37 = v0[6];
      sub_256BE33C8(v0[5], &qword_26B2C7798);
      uint64_t v9 = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest;
      uint64_t v10 = v37;
      goto LABEL_15;
    }
    if (qword_269FC2740 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_256CEDC88();
    uint64_t v42 = OUTLINED_FUNCTION_43_4(v41, (uint64_t)qword_269FC5818);
    os_log_type_t v43 = sub_256CEE2B8();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_99();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_256BD4000, v42, v43, "Direct InferenceProvider connection reused for different request", v44, 2u);
      OUTLINED_FUNCTION_4();
    }
    uint64_t v45 = v0[5];
    uint64_t v24 = v0[6];
    unint64_t v46 = (uint64_t *)v0[2];

    v46[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5878);
    v46[4] = sub_256CE4E08(&qword_269FC5880);
    v46[5] = sub_256CE4E08(&qword_269FC5888);
    __swift_allocate_boxed_opaque_existential_1Tm(v46);
    type metadata accessor for ModelManagerError();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_118_0();
    swift_storeEnumTagMultiPayload();
    sub_256BE33C8(v45, &qword_26B2C7798);
    uint64_t v26 = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest;
  }
  else
  {
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v2 = v0[7];
      uint64_t v3 = v0[4];
      sub_256CEB340();
      uint64_t v4 = *(void **)(v3 + 24);
      *(void *)(swift_task_alloc() + 16) = v2;
      uint64_t v5 = (uint64_t)v4 + *(void *)(*MEMORY[0x263F8DD00] + *v4 + 16);
      OUTLINED_FUNCTION_131_1();
      uint64_t v7 = (os_unfair_lock_s *)((char *)v4 + v6);
      os_unfair_lock_lock((os_unfair_lock_t)((char *)v4 + v6));
      sub_256CE62EC(v5);
      os_unfair_lock_unlock(v7);
      uint64_t v8 = v0[7];
      swift_task_dealloc();
      uint64_t v9 = type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake;
      uint64_t v10 = v8;
LABEL_15:
      sub_256CEB2EC(v10, (void (*)(void))v9);
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      v0[10] = v38;
      *uint64_t v38 = v39;
      v38[1] = sub_256CE3D64;
      OUTLINED_FUNCTION_256();
      return sub_256CD9C34();
    }
    if (qword_269FC2740 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_256CEDC88();
    uint64_t v19 = (void *)OUTLINED_FUNCTION_43_4(v18, (uint64_t)qword_269FC5818);
    os_log_type_t v20 = sub_256CEE2B8();
    if (OUTLINED_FUNCTION_102(v20))
    {
      uint64_t v21 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v21);
      OUTLINED_FUNCTION_80_4(&dword_256BD4000, v22, v23, "Unexpected message sent over direct InferenceProvider connection");
      OUTLINED_FUNCTION_4();
    }
    uint64_t v24 = v0[9];
    uint64_t v25 = (uint64_t *)v0[2];

    v25[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5878);
    v25[4] = sub_256CE4E08(&qword_269FC5880);
    v25[5] = sub_256CE4E08(&qword_269FC5888);
    __swift_allocate_boxed_opaque_existential_1Tm(v25);
    type metadata accessor for ModelManagerError();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_96();
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = type metadata accessor for InferenceProviderXPCRequest;
  }
  sub_256CEB2EC(v24, (void (*)(void))v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_256();
  return v28(v27, v28, v29, v30, v31, v32, v33, v34);
}

uint64_t sub_256CE3D64()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_16_10();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_135_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_2();
  return v3();
}

uint64_t sub_256CE3E94(uint64_t a1, uint64_t a2)
{
  sub_256BE33C8(a1, &qword_269FC3250);
  sub_256C5FC18(a2, a1, &qword_26B2C7798);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v4);
}

uint64_t sub_256CE3F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3250);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v14 - v10;
  sub_256C5FC18(a1, (uint64_t)&v14 - v10, &qword_269FC3250);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) != 1) {
    return sub_256C5FC70((uint64_t)v11, a3, &qword_26B2C7798);
  }
  sub_256BE33C8(a1, &qword_269FC3250);
  sub_256BE33C8((uint64_t)v11, &qword_269FC3250);
  sub_256C5FC18(a2, a1, &qword_26B2C7798);
  __swift_storeEnumTagSinglePayload(a1, 0, 1, v12);
  sub_256C5FC18(a1, (uint64_t)v9, &qword_269FC3250);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12);
  uint64_t v11 = v9;
  if (result != 1) {
    return sub_256C5FC70((uint64_t)v11, a3, &qword_26B2C7798);
  }
  __break(1u);
  return result;
}

uint64_t sub_256CE4084(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256CE40A0, 0);
}

uint64_t sub_256CE40A0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_40_7(v0);
  void *v1 = v2;
  v1[1] = sub_256C8380C;
  OUTLINED_FUNCTION_49();
  return sub_256C681BC();
}

uint64_t sub_256CE4144()
{
  OUTLINED_FUNCTION_2();
  v1[2] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3250);
  OUTLINED_FUNCTION_21(v2);
  v1[3] = OUTLINED_FUNCTION_51_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  v1[4] = v3;
  OUTLINED_FUNCTION_21(v3);
  v1[5] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

void sub_256CE41EC()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1[2] + 24)
                          + ((*(unsigned int *)(**(void **)(v1[2] + 24) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  OUTLINED_FUNCTION_138_1();
  sub_256CE4540(v3, v4);
  os_unfair_lock_unlock(v2);
  if (v0)
  {
    OUTLINED_FUNCTION_256();
  }
  else
  {
    uint64_t v7 = v1[3];
    OUTLINED_FUNCTION_54_6(v5, v6, v1[4]);
    if (v8)
    {
      sub_256BE33C8(v7, &qword_269FC3250);
      if (qword_269FC2740 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_256CEDC88();
      uint64_t v10 = (void *)OUTLINED_FUNCTION_43_4(v9, (uint64_t)qword_269FC5818);
      os_log_type_t v11 = sub_256CEE2B8();
      if (OUTLINED_FUNCTION_25_0(v11))
      {
        uint64_t v12 = (_WORD *)OUTLINED_FUNCTION_99();
        OUTLINED_FUNCTION_147(v12);
        OUTLINED_FUNCTION_61(&dword_256BD4000, v13, v14, "Direct InferenceProvider connection died before establishing a requestID");
        OUTLINED_FUNCTION_4();
      }

      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_256();
      v16(v15, v16, v17, v18, v19, v20, v21, v22);
    }
    else
    {
      sub_256C5FC70(v7, v1[5], &qword_26B2C7798);
      uint64_t v23 = (void *)swift_task_alloc();
      v1[6] = v23;
      void *v23 = v1;
      v23[1] = sub_256CE4404;
      OUTLINED_FUNCTION_32_1(v1[5]);
      OUTLINED_FUNCTION_256();
      sub_256CDF824();
    }
  }
}

uint64_t sub_256CE4404()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256CE44CC()
{
  OUTLINED_FUNCTION_2();
  sub_256BE33C8(*(void *)(v0 + 40), &qword_26B2C7798);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256CE4540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256C5FC18(a1, a2, &qword_269FC3250);
}

uint64_t sub_256CE4574()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_256CE459C()
{
  sub_256CE4574();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t sub_256CE45D0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256BE3BF0;
  return sub_256CE36E8();
}

uint64_t sub_256CE467C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_256BE3BF0;
  return sub_256CE4084(a1);
}

uint64_t sub_256CE4714()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256BE3BF0;
  return sub_256CE4144();
}

uint64_t sub_256CE47A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_256CE36B4(a1, a2);
}

void sub_256CE47BC(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v48 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t NextStreamResultsRequest = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  uint64_t v9 = MEMORY[0x270FA5388](NextStreamResultsRequest - 8);
  os_log_type_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x270FA5388](v14);
  (*(void (**)(char *))(v16 + 16))((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ClientData(0);
  uint64_t v17 = sub_256CEE0C8();
  if (qword_269FC2740 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_256CEDC88();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_269FC5818);
  sub_256CEB298();
  sub_256CEDEC8();
  uint64_t v20 = sub_256CEDC68();
  os_log_type_t v21 = sub_256CEE2D8();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v46 = v19;
    LODWORD(v45) = v22;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v44 = (char *)v25;
    *(_DWORD *)uint64_t v24 = 134218242;
    uint64_t v49 = *(void *)(v17 + 16);
    uint64_t v50 = v25;
    int v47 = a2;
    sub_256CEE308();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v43 = v24 + 14;
    uint64_t v26 = v48;
    sub_256C5FC18((uint64_t)v13, v48, &qword_26B2C7798);
    uint64_t v27 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    uint64_t v42 = v13;
    uint64_t v28 = v27;
    uint64_t v29 = a3;
    unint64_t v31 = v30;
    sub_256BE33C8(v26, &qword_26B2C7798);
    uint64_t v49 = sub_256BE14CC(v28, v31, &v50);
    a2 = v47;
    sub_256CEE308();
    a3 = v29;
    swift_bridgeObjectRelease();
    sub_256CEB2EC((uint64_t)v42, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
    _os_log_impl(&dword_256BD4000, v20, (os_log_type_t)v45, "Returning buffer of %ld items from strea %s", (uint8_t *)v24, 0x16u);
    uint64_t v32 = (uint64_t)v44;
    swift_arrayDestroy();
    MEMORY[0x25A2AEBD0](v32, -1, -1);
    MEMORY[0x25A2AEBD0](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_256CEB2EC((uint64_t)v13, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  }

  if (a2)
  {
    sub_256CEB298();
    uint64_t v33 = sub_256CEDC68();
    os_log_type_t v34 = sub_256CEE2D8();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v50 = v36;
      int v47 = a2;
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t v45 = v35 + 4;
      uint64_t v46 = a3;
      uint64_t v37 = v48;
      sub_256C5FC18((uint64_t)v11, v48, &qword_26B2C7798);
      uint64_t v38 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      uint64_t v44 = v11;
      unint64_t v40 = v39;
      sub_256BE33C8(v37, &qword_26B2C7798);
      uint64_t v49 = sub_256BE14CC(v38, v40, &v50);
      a3 = v46;
      LOBYTE(a2) = v47;
      sub_256CEE308();
      swift_bridgeObjectRelease();
      sub_256CEB2EC((uint64_t)v44, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
      _os_log_impl(&dword_256BD4000, v33, v34, "Reached end of stream %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2AEBD0](v36, -1, -1);
      MEMORY[0x25A2AEBD0](v35, -1, -1);
    }
    else
    {
      sub_256CEB2EC((uint64_t)v11, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
    }
  }
  *(void *)a3 = v17;
  *(unsigned char *)(a3 + 8) = a2 & 1;
}

uint64_t sub_256CE4D44(uint64_t a1, uint64_t a2)
{
  return sub_256CD9544(a1, a2, *(void (**)(void *, uint64_t))(v2 + 24));
}

uint64_t type metadata accessor for InferenceProviderXPCRequestDispatcher.StreamExclusivityWrapper()
{
  return self;
}

_OWORD *sub_256CE4D88(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_256CE4DA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_256CE4DD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_256CE4E08(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC5878);
    sub_256CEA740(&qword_26B2C9150, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    sub_256CEA740(&qword_26B2C9148, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256CE4EF0()
{
  OUTLINED_FUNCTION_60();
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result)
  {
    uint64_t result = sub_256CE4F98(0, *(void *)(v3 + 16) + 1, 1, v3, v2, v0);
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_256CE4F50(uint64_t result, uint64_t *a2, uint64_t *a3)
{
  unint64_t v4 = *(void *)(*v3 + 24);
  if (result + 1 > (uint64_t)(v4 >> 1))
  {
    uint64_t result = sub_256CE4F98(v4 > 1, result + 1, 1, *v3, a2, a3);
    *uint64_t v3 = result;
  }
  return result;
}

uint64_t sub_256CE4F98(char a1, int64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a6);
  OUTLINED_FUNCTION_6(v13);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size_0(v18);
  if (!v15 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v15 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_24:
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_107_1();
    uint64_t result = sub_256CEE3F8();
    __break(1u);
    return result;
  }
  v18[2] = v11;
  uint64_t v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
  OUTLINED_FUNCTION_24(v21);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v18 + v23;
  if (a1)
  {
    sub_256CE53E4(a4 + v23, v11, v24, a6);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_256CE5168(0, v11, v24, a4, a6);
  }
  return (uint64_t)v18;
}

uint64_t sub_256CE5168(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  OUTLINED_FUNCTION_39_9();
  OUTLINED_FUNCTION_107_1();
  uint64_t result = sub_256CEE428();
  __break(1u);
  return result;
}

void sub_256CE52A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

uint64_t sub_256CE52B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t result = sub_256CEE428();
    __break(1u);
  }
  else if (a3 < a1 {
         || (uint64_t result = type metadata accessor for ClientData(0),
  }
             a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    type metadata accessor for ClientData(0);
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

void sub_256CE53E4(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_107_1();
    sub_256CEE428();
    __break(1u);
  }
  else if (a3 < a1 {
         || (__swift_instantiateConcreteTypeFromMangledName(a4),
  }
             OUTLINED_FUNCTION_10(),
             a1 + *(void *)(v8 + 72) * a2 <= a3))
  {
    __swift_instantiateConcreteTypeFromMangledName(a4);
    OUTLINED_FUNCTION_137_1();
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    OUTLINED_FUNCTION_137_1();
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_256CE54E8()
{
  return sub_256CEA740(&qword_269FC5898, 255, (void (*)(uint64_t))type metadata accessor for InferenceProviderRequestStream);
}

uint64_t sub_256CE5534()
{
  return sub_256CEA740(qword_269FC58A0, 255, (void (*)(uint64_t))type metadata accessor for InferenceProviderXPCRequest);
}

void *initializeBufferWithCopyOfBuffer for InferenceProviderRequestStream(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v10 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
    swift_retain();
    swift_retain();
    sub_256CEDEC8();
  }
  return a1;
}

uint64_t destroy for InferenceProviderRequestStream(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceProviderRequestStream(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_retain();
  swift_retain();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for InferenceProviderRequestStream(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for InferenceProviderRequestStream(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for InferenceProviderRequestStream(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  uint64_t v8 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderRequestStream(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256CE5AD8);
}

uint64_t sub_256CE5AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_256CEDB08();
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderRequestStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256CE5BA4);
}

void sub_256CE5BA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_256CEDB08();
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }
  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t sub_256CE5C58()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for InferenceProviderXPCRequestDispatcher()
{
  return self;
}

uint64_t method lookup function for InferenceProviderXPCRequestDispatcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InferenceProviderXPCRequestDispatcher);
}

uint64_t dispatch thunk of InferenceProviderXPCRequestDispatcher.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of InferenceProviderXPCRequestDispatcher.provider.getter()
{
  OUTLINED_FUNCTION_7_0();
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of InferenceProviderXPCRequestDispatcher.handleIncomingRequestWithReply(_:)()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_7_0();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 264) + **(int **)(v0 + 264));
  uint64_t v1 = swift_task_alloc();
  long long v2 = (void *)OUTLINED_FUNCTION_112(v1);
  *long long v2 = v3;
  v2[1] = sub_256BE3BF0;
  uint64_t v4 = OUTLINED_FUNCTION_117_1();
  return v6(v4);
}

uint64_t dispatch thunk of InferenceProviderXPCRequestDispatcher.handleIncomingRequest(_:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  int v5 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 272) + **(int **)(v1 + 272));
  long long v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *long long v2 = v0;
  v2[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_49();
  return v5(v3);
}

uint64_t destroy for InferenceProviderXPCRequestDispatcher.ProviderConfiguration(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1) {
    return swift_release();
  }
  else {
    return __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
}

uint64_t initializeWithCopy for InferenceProviderXPCRequestDispatcher.ProviderConfiguration(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
    char v5 = 1;
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t))(v6 - 8))(a1);
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for InferenceProviderXPCRequestDispatcher.ProviderConfiguration(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      swift_release();
    }
    else {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 40) = 1;
      swift_retain();
    }
    else
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for InferenceProviderXPCRequestDispatcher.ProviderConfiguration(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      swift_release();
    }
    else {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v5) = 0;
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 40) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequestDispatcher.ProviderConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequestDispatcher.ProviderConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_256CE6250(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_256CE626C(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

void type metadata accessor for InferenceProviderXPCRequestDispatcher.ProviderConfiguration()
{
}

uint64_t type metadata accessor for PerRequestInferenceProviderXPCRequestDispatcher()
{
  return self;
}

void type metadata accessor for InferenceProviderRequestStream.SequenceBacking()
{
}

uint64_t sub_256CE62D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256CE3F08(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_256CE62EC(uint64_t a1)
{
  return sub_256CE3E94(a1, *(void *)(v1 + 16));
}

void sub_256CE6308()
{
  OUTLINED_FUNCTION_57();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_5();
  uint64_t v22 = v6;
  MEMORY[0x270FA5388]();
  OUTLINED_FUNCTION_3_6();
  uint64_t v9 = v7 - v8;
  MEMORY[0x270FA5388]();
  unint64_t v23 = (char *)&v19 - v10;
  uint64_t v11 = *v0;
  sub_256CEE798();
  sub_256CEDB08();
  sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
  sub_256CEDEC8();
  sub_256CEDF18();
  uint64_t v12 = sub_256CEE7F8();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    size_t v19 = v0;
    uint64_t v20 = v3;
    uint64_t v21 = v5;
    uint64_t v15 = ~v13;
    while (1)
    {
      sub_256CEB298();
      char v16 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_256CEB2EC(v9, (void (*)(void))type metadata accessor for Assertion.DaemonRep);
      if (v16) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
      if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_256CEB2EC(v20, (void (*)(void))type metadata accessor for Assertion.DaemonRep);
    sub_256CEB298();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = (uint64_t)v23;
    sub_256CEB298();
    uint64_t v24 = *v1;
    uint64_t *v1 = 0x8000000000000000;
    sub_256CE7570(v18, v14, isUniquelyReferenced_nonNull_native);
    uint64_t *v1 = v24;
    swift_bridgeObjectRelease();
    sub_256CEB340();
  }
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256CE65EC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_256CEE798();
  sub_256CEDEC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  sub_256CEE198();
  uint64_t v7 = sub_256CEE7F8();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    unint64_t v17 = v2;
    uint64_t v18 = a1;
    goto LABEL_8;
  }
  swift_retain();
  char v11 = sub_256CEE188();
  swift_release();
  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    unint64_t v9 = (v9 + 1) & v12;
    unint64_t v17 = v2;
    uint64_t v18 = a1;
    if ((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      while (1)
      {
        swift_retain();
        char v13 = sub_256CEE188();
        swift_release();
        if (v13) {
          break;
        }
        unint64_t v9 = (v9 + 1) & v12;
        if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_8;
        }
      }
      uint64_t v3 = v2;
      goto LABEL_10;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    *unint64_t v17 = 0x8000000000000000;
    uint64_t v15 = swift_retain();
    sub_256CE7808(v15, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v17 = v19;
    swift_bridgeObjectRelease();
    *uint64_t v18 = a2;
    return 1;
  }
LABEL_10:
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v3 + 48) + 8 * v9);
  swift_retain();
  return 0;
}

uint64_t sub_256CE6808(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = *v2;
  sub_256CEE798();
  sub_256CEDB08();
  sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
  sub_256CEDEC8();
  sub_256CEDF18();
  uint64_t v14 = sub_256CEE7F8();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  unint64_t v16 = v14 & ~v15;
  if ((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    uint64_t v22 = v12;
    unint64_t v23 = v2;
    uint64_t v24 = a1;
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v7 + 72);
    while (1)
    {
      sub_256C5FC18(*(void *)(v13 + 48) + v18 * v16, (uint64_t)v10, &qword_26B2C7798);
      char v19 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_256BE33C8((uint64_t)v10, &qword_26B2C7798);
      if (v19) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v17;
      if (((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v23;
        a1 = v24;
        uint64_t v12 = v22;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_256BE33C8(a2, &qword_26B2C7798);
    sub_256C5FC18(*(void *)(*v23 + 48) + v18 * v16, v24, &qword_26B2C7798);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_256C5FC18(a2, (uint64_t)v12, &qword_26B2C7798);
    uint64_t v25 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_256CE7A10((uint64_t)v12, v16, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v25;
    swift_bridgeObjectRelease();
    sub_256C5FC70(a2, a1, &qword_26B2C7798);
    return 1;
  }
}

uint64_t sub_256CE6AC0()
{
  type metadata accessor for Assertion.DaemonRep(0);
  MEMORY[0x270FA5388]();
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8298);
  uint64_t v2 = sub_256CEE358();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    unint64_t v23 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    uint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v22 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v7 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v9 = 0;
    if (!v6) {
      goto LABEL_7;
    }
LABEL_6:
    for (v6 &= v6 - 1; ; uint64_t v6 = (v11 - 1) & v11)
    {
      sub_256CEB340();
      sub_256CEE798();
      sub_256CEDB08();
      sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
      sub_256CEDF18();
      uint64_t result = sub_256CEE7F8();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v7 + 8 * (v14 >> 6))) == 0)
      {
        char v17 = 0;
        unint64_t v18 = (unint64_t)(63 - v13) >> 6;
        while (++v15 != v18 || (v17 & 1) == 0)
        {
          BOOL v19 = v15 == v18;
          if (v15 == v18) {
            unint64_t v15 = 0;
          }
          v17 |= v19;
          uint64_t v20 = *(void *)(v7 + 8 * v15);
          if (v20 != -1)
          {
            unint64_t v16 = __clz(__rbit64(~v20)) + (v15 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v7 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v7 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = sub_256CEB340();
      ++*(void *)(v3 + 16);
      if (v6) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_38;
      }
      if (v10 >= v22) {
        goto LABEL_32;
      }
      uint64_t v11 = v23[v10];
      ++v9;
      if (!v11)
      {
        int64_t v9 = v10 + 1;
        if (v10 + 1 >= v22) {
          goto LABEL_32;
        }
        uint64_t v11 = v23[v9];
        if (!v11)
        {
          int64_t v9 = v10 + 2;
          if (v10 + 2 >= v22) {
            goto LABEL_32;
          }
          uint64_t v11 = v23[v9];
          if (!v11)
          {
            int64_t v12 = v10 + 3;
            if (v12 >= v22)
            {
LABEL_32:
              swift_release();
              uint64_t v21 = 1 << *(unsigned char *)(v1 + 32);
              if (v21 > 63) {
                sub_256CE7C84(0, (unint64_t)(v21 + 63) >> 6, v23);
              }
              else {
                void *v23 = -1 << v21;
              }
              *(void *)(v1 + 16) = 0;
              break;
            }
            uint64_t v11 = v23[v12];
            if (!v11)
            {
              while (1)
              {
                int64_t v9 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_39;
                }
                if (v9 >= v22) {
                  goto LABEL_32;
                }
                uint64_t v11 = v23[v9];
                ++v12;
                if (v11) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v9 = v12;
          }
        }
      }
LABEL_20:
      ;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_256CE6EB8()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A18);
  uint64_t v2 = sub_256CEE358();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v5 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v1 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v9 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * i);
      sub_256CEE798();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
      sub_256CEE198();
      uint64_t result = sub_256CEE7F8();
      uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) == 0)
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          BOOL v24 = v20 == v23;
          if (v20 == v23) {
            unint64_t v20 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v20);
          if (v25 != -1)
          {
            unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(void *)(*(void *)(v3 + 48) + 8 * v21) = v17;
      ++*(void *)(v3 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v5[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v5[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v5[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v26 = 1 << *(unsigned char *)(v1 + 32);
              if (v26 > 63) {
                sub_256CE7C84(0, (unint64_t)(v26 + 63) >> 6, (void *)(v1 + 56));
              }
              else {
                *uint64_t v5 = -1 << v26;
              }
              *(void *)(v1 + 16) = 0;
              break;
            }
            unint64_t v15 = v5[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v5[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_256CE7190()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v36 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5968);
  uint64_t v6 = sub_256CEE358();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v35 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    uint64_t v33 = v0;
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    if (!v11) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
    {
      uint64_t v20 = v5;
      uint64_t v21 = *(void *)(v5 + 48);
      uint64_t v22 = *(void *)(v36 + 72);
      sub_256C5FC70(v21 + v22 * i, (uint64_t)v4, &qword_26B2C7798);
      sub_256CEE798();
      sub_256CEDB08();
      sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
      sub_256CEDF18();
      uint64_t result = sub_256CEE7F8();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) == 0)
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          BOOL v29 = v25 == v28;
          if (v25 == v28) {
            unint64_t v25 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v12 + 8 * v25);
          if (v30 != -1)
          {
            unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      uint64_t result = sub_256C5FC70((uint64_t)v4, *(void *)(v7 + 48) + v26 * v22, &qword_26B2C7798);
      ++*(void *)(v7 + 16);
      uint64_t v5 = v20;
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_38;
      }
      if (v17 >= v34) {
        goto LABEL_32;
      }
      unint64_t v18 = v35[v17];
      ++v14;
      if (!v18)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v34) {
          goto LABEL_32;
        }
        unint64_t v18 = v35[v14];
        if (!v18)
        {
          int64_t v14 = v17 + 2;
          if (v17 + 2 >= v34) {
            goto LABEL_32;
          }
          unint64_t v18 = v35[v14];
          if (!v18)
          {
            int64_t v19 = v17 + 3;
            if (v19 >= v34)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v33;
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 > 63) {
                sub_256CE7C84(0, (unint64_t)(v31 + 63) >> 6, v35);
              }
              else {
                *uint64_t v35 = -1 << v31;
              }
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v14 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_39;
                }
                if (v14 >= v34) {
                  goto LABEL_32;
                }
                unint64_t v18 = v35[v14];
                ++v19;
                if (v18) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v14 = v19;
          }
        }
      }
LABEL_20:
      unint64_t v11 = (v18 - 1) & v18;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

uint64_t sub_256CE7570(uint64_t a1, unint64_t a2, char a3)
{
  type metadata accessor for Assertion.DaemonRep(0);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(void *)(*v3 + 16);
  unint64_t v10 = *(void *)(*v3 + 24);
  uint64_t v22 = v3;
  uint64_t v23 = a1;
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_256CE6AC0();
  }
  else
  {
    if (v10 > v9)
    {
      sub_256CE7CA0();
      goto LABEL_12;
    }
    sub_256CE82D4();
  }
  uint64_t v11 = *v3;
  sub_256CEE798();
  sub_256CEDB08();
  sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
  sub_256CEDF18();
  uint64_t v12 = sub_256CEE7F8();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  a2 = v12 & ~v13;
  if ((*(void *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v14 = ~v13;
    do
    {
      sub_256CEB298();
      char v15 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_256CEB2EC((uint64_t)v8, (void (*)(void))type metadata accessor for Assertion.DaemonRep);
      if (v15) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v14;
    }
    while (((*(void *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v16 = *v22;
  *(void *)(*v22 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_256CEB340();
  uint64_t v18 = *(void *)(v16 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v16 + 16) = v20;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_256CEE728();
  __break(1u);
  return result;
}

uint64_t sub_256CE7808(uint64_t result, unint64_t i, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_13;
  }
  if (a3)
  {
    sub_256CE6EB8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_256CE7EC0();
      goto LABEL_13;
    }
    sub_256CE8690();
  }
  uint64_t v8 = *v3;
  sub_256CEE798();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  sub_256CEE198();
  uint64_t result = sub_256CEE7F8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t i = result & ~v9;
  uint64_t v10 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    swift_retain();
    char v11 = sub_256CEE188();
    uint64_t result = swift_release();
    if (v11) {
      goto LABEL_16;
    }
    uint64_t v12 = ~v9;
    for (unint64_t i = (i + 1) & v12; ((*(void *)(v10 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
    {
      swift_retain();
      char v13 = sub_256CEE188();
      uint64_t result = swift_release();
      if (v13) {
        goto LABEL_16;
      }
    }
  }
LABEL_13:
  uint64_t v14 = *v18;
  *(void *)(*v18 + 8 * (i >> 6) + 56) |= 1 << i;
  *(void *)(*(void *)(v14 + 48) + 8 * i) = v5;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A20);
  uint64_t result = sub_256CEE728();
  __break(1u);
  return result;
}

uint64_t sub_256CE7A10(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v13 = v8;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_256CE7190();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_256CE893C();
LABEL_8:
    uint64_t v14 = *v3;
    sub_256CEE798();
    sub_256CEDB08();
    sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
    sub_256CEDF18();
    uint64_t v15 = sub_256CEE7F8();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      v25[1] = v7;
      uint64_t v17 = ~v16;
      uint64_t v13 = v8;
      uint64_t v18 = *(void *)(v8 + 72);
      while (1)
      {
        sub_256C5FC18(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v10, &qword_26B2C7798);
        char v19 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
        sub_256BE33C8((uint64_t)v10, &qword_26B2C7798);
        if (v19) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v13 = v8;
  sub_256CE806C();
LABEL_14:
  uint64_t v20 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_256C5FC70(a1, *(void *)(v20 + 48) + *(void *)(v13 + 72) * a2, &qword_26B2C7798);
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_256CEE728();
  __break(1u);
  return result;
}

uint64_t sub_256CE7C84(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_256CE7CA0()
{
  OUTLINED_FUNCTION_57();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_6(v2);
  MEMORY[0x270FA5388]();
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8298);
  uint64_t v3 = *v0;
  uint64_t v4 = sub_256CEE348();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    swift_release();
    uint64_t *v1 = v5;
    OUTLINED_FUNCTION_71();
    return;
  }
  unint64_t v6 = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8) {
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = *(void *)(v3 + 56);
  uint64_t v13 = -1;
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  uint64_t v14 = v13 & v12;
  int64_t v15 = (unint64_t)(v11 + 63) >> 6;
  if ((v13 & v12) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  for (v14 &= v14 - 1; ; uint64_t v14 = (v17 - 1) & v17)
  {
    sub_256CEB298();
    sub_256CEB340();
    if (v14) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v15) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v7 + 8 * v16);
    ++v10;
    if (!v17)
    {
      int64_t v10 = v16 + 1;
      if (v16 + 1 >= v15) {
        goto LABEL_28;
      }
      uint64_t v17 = *(void *)(v7 + 8 * v10);
      if (!v17)
      {
        int64_t v10 = v16 + 2;
        if (v16 + 2 >= v15) {
          goto LABEL_28;
        }
        uint64_t v17 = *(void *)(v7 + 8 * v10);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    ;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v15) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
    int64_t v10 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v10 >= v15) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v7 + 8 * v10);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
}

void *sub_256CE7EC0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256CEE348();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    *(void *)(*(void *)(v4 + 48) + 8 * i) = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = (void *)swift_retain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_256CE806C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5968);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_256CEE348();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    uint64_t *v1 = v8;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  if (!v16) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    unint64_t v23 = *(void *)(v3 + 72) * i;
    sub_256C5FC18(*(void *)(v6 + 48) + v23, (uint64_t)v5, &qword_26B2C7798);
    uint64_t result = (void *)sub_256C5FC70((uint64_t)v5, *(void *)(v8 + 48) + v23, &qword_26B2C7798);
    if (v16) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v17) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v13;
    if (!v21)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v13);
      if (!v21)
      {
        int64_t v13 = v20 + 2;
        if (v20 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v13);
        if (!v21) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v16 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v17)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_30;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v13 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_256CE82D4()
{
  uint64_t v1 = v0;
  type metadata accessor for Assertion.DaemonRep(0);
  MEMORY[0x270FA5388]();
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8298);
  uint64_t v3 = sub_256CEE358();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v22 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  uint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v23 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  for (v7 &= v7 - 1; ; uint64_t v7 = (v12 - 1) & v12)
  {
    sub_256CEB298();
    sub_256CEE798();
    sub_256CEDB08();
    sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
    sub_256CEDF18();
    uint64_t result = sub_256CEE7F8();
    uint64_t v14 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v8 + 8 * (v15 >> 6))) == 0)
    {
      char v18 = 0;
      unint64_t v19 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v19 || (v18 & 1) == 0)
      {
        BOOL v20 = v16 == v19;
        if (v16 == v19) {
          unint64_t v16 = 0;
        }
        v18 |= v20;
        uint64_t v21 = *(void *)(v8 + 8 * v16);
        if (v21 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v21)) + (v16 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v8 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v8 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = sub_256CEB340();
    ++*(void *)(v4 + 16);
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v11 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v11 >= v23) {
      goto LABEL_32;
    }
    uint64_t v12 = *(void *)(v22 + 8 * v11);
    ++v10;
    if (!v12)
    {
      int64_t v10 = v11 + 1;
      if (v11 + 1 >= v23) {
        goto LABEL_32;
      }
      uint64_t v12 = *(void *)(v22 + 8 * v10);
      if (!v12)
      {
        int64_t v10 = v11 + 2;
        if (v11 + 2 >= v23) {
          goto LABEL_32;
        }
        uint64_t v12 = *(void *)(v22 + 8 * v10);
        if (!v12) {
          break;
        }
      }
    }
LABEL_20:
    ;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v23)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  uint64_t v12 = *(void *)(v22 + 8 * v13);
  if (v12)
  {
    int64_t v10 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v23) {
      goto LABEL_32;
    }
    uint64_t v12 = *(void *)(v22 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_256CE8690()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A18);
  uint64_t v2 = sub_256CEE358();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v9 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * i);
    sub_256CEE798();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
    sub_256CEE198();
    uint64_t result = sub_256CEE7F8();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v3 + 48) + 8 * v21) = v17;
    ++*(void *)(v3 + 16);
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v8) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v8)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_256CE893C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v33 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5968);
  uint64_t v6 = sub_256CEE358();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  if (!v11) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    uint64_t v20 = *(void *)(v33 + 72);
    sub_256C5FC18(*(void *)(v5 + 48) + v20 * i, (uint64_t)v4, &qword_26B2C7798);
    sub_256CEE798();
    sub_256CEDB08();
    sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
    sub_256CEDF18();
    uint64_t result = sub_256CEE7F8();
    uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
        if (v28 != -1)
        {
          unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t result = sub_256C5FC70((uint64_t)v4, *(void *)(v7 + 48) + v24 * v20, &qword_26B2C7798);
    ++*(void *)(v7 + 16);
    if (v11) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_36;
    }
    if (v17 >= v32) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v31 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v32) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v31 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v31 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v31 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_256CE8CDC()
{
  OUTLINED_FUNCTION_57();
  int64_t v2 = v1;
  type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_5();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_19();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = *v0;
  uint64_t v10 = *v0 + 56;
  uint64_t v11 = -1 << *(unsigned char *)(*v0 + 32);
  unint64_t v12 = (v2 + 1) & ~v11;
  if (((1 << v12) & *(void *)(v10 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v31 = v0;
    uint64_t v13 = ~v11;
    swift_retain();
    uint64_t v14 = sub_256CEE338();
    uint64_t v32 = v10;
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v15 = (v14 + 1) & v13;
      uint64_t v16 = *(void *)(v4 + 72);
      while (1)
      {
        int64_t v17 = v16 * v12;
        sub_256CEB298();
        sub_256CEE798();
        sub_256CEDB08();
        sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
        sub_256CEDF18();
        uint64_t v18 = sub_256CEE7F8();
        sub_256CEB2EC(v8, (void (*)(void))type metadata accessor for Assertion.DaemonRep);
        unint64_t v19 = v18 & v13;
        if (v2 >= (uint64_t)v15)
        {
          if (v19 < v15 || v2 < (uint64_t)v19) {
            goto LABEL_24;
          }
        }
        else if (v19 < v15 && v2 < (uint64_t)v19)
        {
          goto LABEL_24;
        }
        uint64_t v22 = *(void *)(v9 + 48);
        int64_t v23 = v16 * v2;
        unint64_t v24 = v22 + v16 * v2;
        unint64_t v25 = v22 + v17 + v16;
        if (v16 * v2 < v17 || v24 >= v25) {
          break;
        }
        int64_t v2 = v12;
        if (v23 != v17)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        unint64_t v12 = (v12 + 1) & v13;
        if (((*(void *)(v32 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          goto LABEL_25;
        }
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_23:
      int64_t v2 = v12;
      goto LABEL_24;
    }
LABEL_25:
    *(void *)(v32 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release();
    uint64_t v0 = v31;
  }
  else
  {
    *(void *)(v10 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
  }
  uint64_t v27 = *v0;
  uint64_t v28 = *(void *)(*v0 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v27 + 16) = v30;
    ++*(_DWORD *)(v27 + 36);
    OUTLINED_FUNCTION_71();
  }
}

unint64_t sub_256CE8F94(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_256CEE338();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_256CEE798();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
        sub_256CEE198();
        uint64_t v10 = sub_256CEE7F8();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            unint64_t v15 = (void *)(v14 + 8 * v2);
            uint64_t v16 = (void *)(v14 + 8 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              *unint64_t v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_256CE9178(int64_t a1)
{
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v3 = *(void *)(v31 - 8);
  uint64_t result = MEMORY[0x270FA5388](v31);
  unint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v30 = v1;
    uint64_t v11 = ~v9;
    swift_retain();
    uint64_t v12 = sub_256CEE338();
    uint64_t v32 = v8;
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      uint64_t v13 = (v12 + 1) & v11;
      uint64_t v33 = *(void *)(v3 + 72);
      while (1)
      {
        int64_t v14 = v33 * v10;
        sub_256C5FC18(*(void *)(v7 + 48) + v33 * v10, (uint64_t)v6, &qword_26B2C7798);
        sub_256CEE798();
        sub_256CEDB08();
        unint64_t v15 = v13;
        sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
        sub_256CEDF18();
        uint64_t v16 = sub_256CEE7F8();
        sub_256BE33C8((uint64_t)v6, &qword_26B2C7798);
        uint64_t v17 = v16 & v11;
        uint64_t v13 = v15;
        if (a1 >= (uint64_t)v15)
        {
          if (v17 < v15 || a1 < v17) {
            goto LABEL_24;
          }
        }
        else if (v17 < v15 && a1 < v17)
        {
          goto LABEL_24;
        }
        uint64_t v20 = *(void *)(v7 + 48);
        int64_t v21 = v33 * a1;
        unint64_t v22 = v20 + v33 * a1;
        unint64_t v23 = v20 + v14 + v33;
        if (v33 * a1 < v14 || v22 >= v23) {
          break;
        }
        a1 = v10;
        if (v21 != v14)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        unint64_t v10 = (v10 + 1) & v11;
        if (((*(void *)(v32 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_25;
        }
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_23:
      a1 = v10;
      goto LABEL_24;
    }
LABEL_25:
    *(void *)(v32 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    int64_t v1 = v30;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v25 = *v1;
  uint64_t v26 = *(void *)(*v1 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
  return result;
}

uint64_t sub_256CE946C()
{
  size_t v1 = _swift_stdlib_malloc_size_0(v0);
  uint64_t v2 = type metadata accessor for ClientData(0);
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t result = v2 - 8;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 72);
  if (v6)
  {
    int64_t v7 = v1 - ((v5 + 40) & ~v5);
    if (v6 != -1 || v7 != 0x8000000000000000) {
      return v7 / v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_256CE9508(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(*v1 + 16);
  uint64_t v5 = *v4;
  if (*v4 >= a1)
  {
    uint64_t v12 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ClientData(0) - 8) + 80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A88);
    uint64_t v11 = swift_allocObject();
    long long v13 = *(_OWORD *)(v3 + 24);
    *(void *)(v11 + 16) = v5;
    *(_OWORD *)(v11 + 24) = v13;
    if ((uint64_t)v13 >= 1) {
      sub_256CE9AF8(v11 + 16, v11 + ((v12 + 40) & ~v12), v4, v3 + ((v12 + 40) & ~v12));
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v1;
    uint64_t v8 = type metadata accessor for ClientData(0);
    sub_256CEDB78();
    uint64_t v9 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v10 = *(void *)(v7 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A88);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_256CE946C();
      *(void *)(v11 + 24) = v10;
      *(void *)(v11 + 32) = 0;
      if (v10 >= 1)
      {
        swift_retain();
        sub_256CE9824(v11 + 16, v11 + ((v9 + 40) & ~v9), (void *)(v7 + 16), v7 + ((v9 + 40) & ~v9));
        *(void *)(v7 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A88);
      uint64_t v11 = swift_allocObject();
      uint64_t v14 = sub_256CE946C();
      uint64_t v15 = *(void *)(v7 + 24);
      *(void *)(v11 + 16) = v14;
      *(void *)(v11 + 24) = v15;
      *(void *)(v11 + 32) = 0;
      if (v15 >= 1) {
        sub_256CE9954(v11 + 16, v11 + ((v9 + 40) & ~v9), (void *)(v7 + 16), v7 + ((v9 + 40) & ~v9));
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v11;
  return result;
}

void *sub_256CE9754(void *result)
{
  uint64_t v1 = result[1];
  uint64_t v2 = result[2];
  uint64_t v3 = v2 + v1;
  if (!__OFADD__(v2, v1))
  {
    uint64_t v4 = result;
    if ((v1 & 0x8000000000000000) == 0)
    {
      BOOL v5 = __OFSUB__(v3, *result);
      if (v3 < *result || (v3 -= *result, !v5))
      {
LABEL_9:
        type metadata accessor for ClientData(0);
        uint64_t result = (void *)sub_256CEB298();
        uint64_t v6 = v4[1];
        BOOL v5 = __OFADD__(v6, 1);
        uint64_t v7 = v6 + 1;
        if (!v5)
        {
          v4[1] = v7;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v3 < 0 && __OFADD__(v3, *result)) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_256CE9824(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = *(void *)(type metadata accessor for ClientData(0) - 8);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  BOOL v13 = v5 < v8;
  uint64_t v14 = *(void *)(v9 + 72);
  BOOL v15 = v10 != 0;
  BOOL v16 = v13 && v15;
  if (v13 && v15) {
    unint64_t v17 = v12;
  }
  else {
    unint64_t v17 = 0;
  }
  if (v13 && v15) {
    uint64_t v18 = v10;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v11 >= 1)
  {
    if (a4)
    {
      sub_256CE52B4(a4 + v14 * v4, v11, a2);
      goto LABEL_16;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = 0;
LABEL_16:
  if (!v16 || v18 <= 0) {
    return;
  }
  if (!v17)
  {
LABEL_23:
    __break(1u);
    return;
  }
  sub_256CE52B4(v17, v18, a2 + v14 * v11);
}

uint64_t sub_256CE9954(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = a3[1];
  uint64_t result = type metadata accessor for ClientData(0);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  uint64_t v13 = *(void *)(*(void *)(result - 8) + 72);
  if (v11 < 1)
  {
    uint64_t v11 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v14 = a4 + v13 * v4;
  if (v14 < a2 + v13 * v11 && v14 + v13 * v11 > a2) {
    goto LABEL_30;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 >= v8 || v10 < 1) {
    return result;
  }
  if (!v12)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = sub_256CEE428();
    __break(1u);
    return result;
  }
  unint64_t v17 = a2 + v13 * v11;
  if (v17 + v13 * v10 > v12 && v17 < v12 + v13 * v10) {
    goto LABEL_30;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_256CE9AF8(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t result = type metadata accessor for ClientData(0);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  uint64_t v13 = *(void *)(*(void *)(result - 8) + 72);
  if (v11 < 1) {
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v14 = a4 + v13 * v4;
  unint64_t v15 = a2 + v13 * v4;
  if (v14 < v15 + v13 * v11 && v15 < v14 + v13 * v11) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v10 >= 1)
  {
    if (v12)
    {
      if (a2 + v13 * v10 <= v12 || v12 + v13 * v10 <= a2) {
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = sub_256CEE428();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_256CE9C8C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for ClientData(0);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5A88);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1) {
    sub_256CE9AF8(v5 + 16, v5 + ((v4 + 40) & ~v4), (void *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v5;
  return result;
}

uint64_t sub_256CE9D7C(void *a1)
{
  type metadata accessor for ClientData(0);
  uint64_t result = sub_256CEB340();
  uint64_t v3 = a1[2];
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a1[1];
    if (v5 >= *a1) {
      uint64_t v5 = 0;
    }
    a1[2] = v5;
    if (!__OFSUB__(v6, 1))
    {
      a1[1] = v6 - 1;
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_256CE9E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256CE9E4C(a1, a2, a3, a4, a5, (uint64_t)sub_256C9D50C, (uint64_t)&unk_269FC4D98, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_256CE9E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_57();
  a19 = v20;
  a20 = v21;
  unint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v35 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_46_7();
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&a9 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = *v35;
  if (v39)
  {
    uint64_t v40 = *v31;
    if (v33)
    {
      *(void *)(*(void *)(v40 + 56) + 8 * v29) = v39;
    }
    else
    {
      sub_256C5FC18(v27, (uint64_t)&a9 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B2C7798);
      v25(v29, v38, v39, v40);
    }
  }
  else if (v33)
  {
    swift_arrayDestroy();
    __swift_instantiateConcreteTypeFromMangledName(v23);
    sub_256C90080(&qword_26B2C4EF0, &qword_26B2C7798);
    sub_256CEE3E8();
  }
  sub_256CEDEC8();
  OUTLINED_FUNCTION_71();
}

void sub_256CE9FB0()
{
  OUTLINED_FUNCTION_57();
  uint64_t v20 = v1;
  unint64_t v21 = v0;
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_46_7();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v7;
  uint64_t v12 = *(void *)(v7 + 8);
  uint64_t v13 = *(void *)(v7 + 16);
  uint64_t v14 = *(void *)(v7 + 24);
  uint64_t v15 = *(void *)(v7 + 32);
  char v16 = *(unsigned char *)(v7 + 40);
  if (v11 == 1)
  {
    if (v5)
    {
      swift_arrayDestroy();
      sub_256C90080(&qword_269FC4DA0, qword_26B2C5B70);
      sub_256CEE3E8();
    }
  }
  else
  {
    *(void *)&long long v22 = v11;
    *((void *)&v22 + 1) = v12;
    *(void *)unint64_t v23 = v13;
    *(void *)&v23[8] = v14;
    *(void *)&v23[16] = v15;
    v23[24] = v16;
    uint64_t v17 = *v3;
    if (v5)
    {
      uint64_t v18 = (_OWORD *)(*(void *)(v17 + 56) + 48 * v21);
      long long v19 = *(_OWORD *)v23;
      *uint64_t v18 = v22;
      v18[1] = v19;
      *(_OWORD *)((char *)v18 + 25) = *(_OWORD *)&v23[9];
    }
    else
    {
      sub_256C5FC18(v20, (uint64_t)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), qword_26B2C5B70);
      sub_256C9D71C(v21, (uint64_t)v10, (uint64_t)&v22, v17);
    }
  }
  sub_256CEB224(v11, v12, v13);
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256CEA150()
{
  uint64_t v1 = *v0;
  sub_256CEE798();
  sub_256CEDEC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  sub_256CEE198();
  uint64_t v2 = sub_256CEE7F8();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t i = v2 & ~v3;
  uint64_t v5 = v1 + 56;
  if (((*(void *)(v1 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) == 0) {
    goto LABEL_6;
  }
  swift_retain();
  char v6 = sub_256CEE188();
  swift_release();
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = ~v3;
    for (unint64_t i = (i + 1) & v7; ((*(void *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v7)
    {
      swift_retain();
      char v8 = sub_256CEE188();
      swift_release();
      if (v8) {
        goto LABEL_7;
      }
    }
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v0;
  uint64_t v13 = *v0;
  *unint64_t v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_256CE7EC0();
    uint64_t v11 = v13;
  }
  uint64_t v9 = *(void *)(*(void *)(v11 + 48) + 8 * i);
  sub_256CE8F94(i);
  *unint64_t v0 = v13;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_256CEA344@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_256CEE798();
  sub_256CEDB08();
  sub_256CEA740(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
  sub_256CEDEC8();
  sub_256CEDF18();
  uint64_t v8 = sub_256CEE7F8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    long long v19 = v1;
    uint64_t v20 = v3;
    uint64_t v21 = a1;
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v4 + 72);
    while (1)
    {
      sub_256C5FC18(*(void *)(v7 + 48) + v12 * v10, (uint64_t)v6, &qword_26B2C7798);
      char v13 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_256BE33C8((uint64_t)v6, &qword_26B2C7798);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = 1;
        uint64_t v3 = v20;
        a1 = v21;
        return __swift_storeEnumTagSinglePayload(a1, v14, 1, v3);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v15;
    uint64_t v22 = *v15;
    *uint64_t v15 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_256CE806C();
      uint64_t v17 = v22;
    }
    a1 = v21;
    sub_256C5FC70(*(void *)(v17 + 48) + v12 * v10, v21, &qword_26B2C7798);
    sub_256CE9178(v10);
    *uint64_t v15 = v22;
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
    uint64_t v3 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a1, v14, 1, v3);
}

void sub_256CEA5CC(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_256CE4F98(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_269FC5970, &qword_269FC5960);
  }
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC5960) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  unint64_t v15 = v13 + v14 * a1;
  swift_arrayDestroy();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(v4 + 16);
  if (__OFSUB__(v16, a2)) {
    goto LABEL_22;
  }
  sub_256CE53E4(v13 + v14 * a2, v16 - a2, v15, &qword_269FC5960);
  uint64_t v17 = *(void *)(v4 + 16);
  BOOL v18 = __OFADD__(v17, v8);
  uint64_t v19 = v17 - v7;
  if (!v18)
  {
    *(void *)(v4 + 16) = v19;
LABEL_16:
    *uint64_t v2 = v4;
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_256CEA740(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256CEA788(uint64_t a1)
{
  return sub_256CE2ADC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_256CEA790(unint64_t *a1)
{
  return sub_256CE0BCC(a1, *(void *)(v1 + 16));
}

unint64_t sub_256CEA7AC(unint64_t result)
{
  if (result != 4) {
    return sub_256C255D4(result);
  }
  return result;
}

uint64_t sub_256CEA7BC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = swift_task_alloc();
  char v6 = (void *)OUTLINED_FUNCTION_112(v5);
  *char v6 = v7;
  v6[1] = sub_256BDD6B8;
  return sub_256CDDE58(v2, v4, v3);
}

uint64_t sub_256CEA85C()
{
  return sub_256CDE708(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_256CEA864()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_6(v3);
  OUTLINED_FUNCTION_146_0();
  swift_unknownObjectRelease();
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v4();
  swift_release();
  return MEMORY[0x270FA0238](v1, v2 + 8, v0);
}

uint64_t sub_256CEA928()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_6(v0);
  OUTLINED_FUNCTION_145_0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_112(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_198();
  return sub_256CDE8A8(v4, v5, v6, v7, v8);
}

uint64_t sub_256CEAA0C(uint64_t a1)
{
  return sub_256CDE090(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_256CEAA14()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_6(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
  OUTLINED_FUNCTION_5();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (((v3 + 40) & ~v3) + v5 + v11) & ~v11;
  uint64_t v13 = v12 + *(void *)(v10 + 64);
  uint64_t v14 = v3 | v11 | 7;
  swift_unknownObjectRelease();
  swift_release();
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v15();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v12, v6);
  return MEMORY[0x270FA0238](v0, v13, v14);
}

uint64_t sub_256CEAB3C()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_6(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
  OUTLINED_FUNCTION_24(v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_85_3();
  return sub_256CDE340(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_256CEAC48()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_60();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_112(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BE3BF0;
  uint64_t v5 = OUTLINED_FUNCTION_117_1();
  return sub_256CDE5C8(v5, v6, v1);
}

uint64_t sub_256CEACE0()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_6(v3);
  OUTLINED_FUNCTION_146_0();
  swift_unknownObjectRelease();
  swift_release();
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v4();
  swift_release();
  return MEMORY[0x270FA0238](v1, v2 + 16, v0);
}

uint64_t sub_256CEADB0()
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_6(v0);
  OUTLINED_FUNCTION_145_0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_112(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_9_2();
  return sub_256CDC1B8(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_256CEAE90()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_112(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BE3BF0;
  return sub_256CDC77C(v1);
}

uint64_t sub_256CEAF20()
{
  return sub_256CDC848(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_256CEAF28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_256CEAF60()
{
  return sub_256CD9874();
}

uint64_t sub_256CEAF68@<X0>(uint64_t *a1@<X8>)
{
  return sub_256CD990C(a1);
}

uint64_t sub_256CEAF70()
{
  uint64_t NextStreamResultsRequest = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  OUTLINED_FUNCTION_6(NextStreamResultsRequest);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80) | 7;
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v3();
  uint64_t v4 = OUTLINED_FUNCTION_51();
  return MEMORY[0x270FA0238](v4, v5, v2);
}

void sub_256CEB014(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t NextStreamResultsRequest = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  OUTLINED_FUNCTION_24(NextStreamResultsRequest);
  sub_256CE47BC(a1, a2, a3);
}

uint64_t sub_256CEB07C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_256CEB0B8()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  void *v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256CD6C70(v3, v4, v5, v6);
}

uint64_t sub_256CEB150(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_256CEB18C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  void *v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256CD6854(v3, v4, v5, v6);
}

uint64_t sub_256CEB224(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    swift_retain();
    return sub_256C5BFF8(a2, a3);
  }
  return result;
}

uint64_t sub_256CEB298()
{
  uint64_t v1 = OUTLINED_FUNCTION_63();
  v2(v1);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v3();
  return v0;
}

uint64_t sub_256CEB2EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v3();
  return a1;
}

uint64_t sub_256CEB340()
{
  uint64_t v1 = OUTLINED_FUNCTION_63();
  v2(v1);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_297();
  v4(v3);
  return v0;
}

unint64_t sub_256CEB3A0@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_256CD8EC0(a1, a2);
}

BOOL OUTLINED_FUNCTION_31_5(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_48_10()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_58_5(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_65_7()
{
  return 0x43207963696C6F50;
}

void *OUTLINED_FUNCTION_76_3@<X0>(uint64_t a1@<X8>)
{
  return sub_256CE9754((void *)(a1 + 16));
}

uint64_t OUTLINED_FUNCTION_79_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_82_5()
{
  return *(void *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_83_4()
{
  return *(void *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_88_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

__n128 OUTLINED_FUNCTION_93_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, long long a10)
{
  __n128 result = a9;
  *(_OWORD *)a2 = a10;
  *(__n128 *)(a2 + 16) = a9;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v11;
  *(unsigned char *)(a2 + 48) = v12;
  return result;
}

void OUTLINED_FUNCTION_94_3()
{
  *(void *)(v0 + 160) = *(void *)(*(void *)(v0 + 88) + 160);
}

uint64_t OUTLINED_FUNCTION_95_3()
{
  return sub_256BE33C8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_96_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_256C5FC18(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_98_3()
{
  return swift_task_alloc();
}

unint64_t OUTLINED_FUNCTION_100_2()
{
  return sub_256BE9EDC();
}

uint64_t OUTLINED_FUNCTION_102_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_108_2(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_118_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_127_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v4[16] = a2;
  v4[17] = v2;
  v4[18] = *(void *)(*(void *)(result + 48) + 8 * v3);
  return result;
}

uint64_t OUTLINED_FUNCTION_128_1(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_129_1()
{
  return sub_256CEDEB8();
}

uint64_t OUTLINED_FUNCTION_134_1()
{
  return swift_weakLoadStrong();
}

uint64_t OUTLINED_FUNCTION_136_1(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

void OUTLINED_FUNCTION_140_1(unint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  a1[1] = (a2 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_141_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_143_1()
{
  *(void *)(v0 - 112) = 0;
  *(void *)(v0 - 104) = 0xE000000000000000;
  return 18;
}

uint64_t OUTLINED_FUNCTION_144_0()
{
  return sub_256CD9A90(v0);
}

uint64_t OUTLINED_FUNCTION_150_0()
{
  return v0;
}

uint64_t sub_256CEB730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 16) && (sub_256C9BD5C(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = v5;
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = type metadata accessor for InferenceProviderRequestStream();
    sub_256CEC584(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v7, a3);
    uint64_t v10 = a3;
    uint64_t v11 = 0;
    uint64_t v12 = v9;
  }
  else
  {
    uint64_t v12 = type metadata accessor for InferenceProviderRequestStream();
    uint64_t v10 = a3;
    uint64_t v11 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v10, v11, 1, v12);
}

uint64_t sub_256CEB7E0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_256C9BD5C(a1), (v2 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_256CEB824(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = sub_256C9BE24();
  if ((v3 & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 56) + 16 * v2;
  uint64_t v5 = *(void *)v4;
  id v6 = *(id *)(v4 + 8);
  return v5;
}

uint64_t sub_256CEB878(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_256C9BD5C(a1), (v2 & 1) != 0)) {
    return sub_256CEDEC8();
  }
  else {
    return 0;
  }
}

double sub_256CEB8BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_256C9BE74(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 40 * v5;
    sub_256BF973C(v7, a3);
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_256CEB928()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_269FC5AE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269FC5AE0);
  return sub_256CEDC78();
}

id sub_256CEB9A8()
{
  v15[1] = *(id *)MEMORY[0x263EF8340];
  sub_256CEC548(0, &qword_269FC5B10);
  id v0 = sub_256CEBCAC();
  id v1 = objc_msgSend(self, sel_currentProcess);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC5B18);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_256CFF6F0;
  *(void *)(v2 + 32) = v0;
  sub_256CEE088();
  objc_allocWithZone(MEMORY[0x263F64408]);
  id v3 = v0;
  id v4 = sub_256CEC440(0xD00000000000001BLL, 0x8000000256D01EC0, v1);
  v15[0] = 0;
  if (!objc_msgSend(v4, sel_acquireWithError_, v15))
  {
    id v12 = v15[0];
    sub_256CED9D8();

    swift_willThrow();
LABEL_8:

    return v4;
  }
  uint64_t v5 = qword_269FC2748;
  id v6 = v15[0];
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_256CEDC88();
  __swift_project_value_buffer(v7, (uint64_t)qword_269FC5AE0);
  uint64_t v8 = sub_256CEDC68();
  os_log_type_t v9 = sub_256CEE2D8();
  if (!os_log_type_enabled(v8, v9))
  {

    goto LABEL_8;
  }
  uint64_t v10 = (uint8_t *)swift_slowAlloc();
  uint64_t v14 = v3;
  uint64_t v11 = (void *)swift_slowAlloc();
  v15[0] = v11;
  *(_DWORD *)uint64_t v10 = 136315138;
  sub_256BE14CC(0xD00000000000001BLL, 0x8000000256D01EC0, (uint64_t *)v15);
  sub_256CEE308();
  _os_log_impl(&dword_256BD4000, v8, v9, "Acquired RBSAssertion for self. Reason: %s", v10, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x25A2AEBD0](v11, -1, -1);
  MEMORY[0x25A2AEBD0](v10, -1, -1);

  return v4;
}

id sub_256CEBCAC()
{
  id v0 = (void *)sub_256CEDF38();
  swift_bridgeObjectRelease();
  id v1 = (void *)sub_256CEDF38();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributeWithDomain_name_, v0, v1);

  return v2;
}

uint64_t sub_256CEBD40()
{
  swift_beginAccess();
  uint64_t result = sub_256CEB824(*(void *)(v0 + 112));
  if (!v3)
  {
    id v7 = sub_256CEB9A8();
    if (v1) {
      return (uint64_t)v1;
    }
    uint64_t v8 = v7;
    OUTLINED_FUNCTION_2_9();
    id v5 = v8;
LABEL_4:
    sub_256C9CAC0();
    swift_endAccess();

    type metadata accessor for RunningBoardSelfAssertionToken();
    id v6 = (void *)swift_allocObject();
    id v1 = sub_256CEC4E8(v0, v6);
    swift_retain();
    return (uint64_t)v1;
  }
  if (!__OFADD__(result, 1))
  {
    id v4 = v3;
    OUTLINED_FUNCTION_2_9();
    id v5 = v4;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_256CEBE34(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return MEMORY[0x270FA2498](sub_256CEBEC4, v1, 0);
}

uint64_t sub_256CEBEC4()
{
  uint64_t v1 = (void **)(v0 + 5);
  uint64_t v2 = v0[9];
  swift_release();
  swift_beginAccess();
  uint64_t v3 = sub_256CEB824(*(void *)(v2 + 112));
  if (!v4)
  {
    if (qword_269FC2748 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_256CEDC88();
    __swift_project_value_buffer(v7, (uint64_t)qword_269FC5AE0);
    uint64_t v8 = sub_256CEDC68();
    os_log_type_t v9 = sub_256CEE2C8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      v0[5] = OUTLINED_FUNCTION_0_4((uint64_t)"Finish Task Uninterruptable", v25, v26);
      sub_256CEE308();
      _os_log_impl(&dword_256BD4000, v8, v9, "Unbalanced RunningBoard assertion relinquish of type: \"%s\"", v10, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }

    goto LABEL_15;
  }
  id v5 = v4;
  if (v3 >= 2)
  {
    OUTLINED_FUNCTION_1_5();
    id v6 = v5;
    sub_256C9CAC0();
    swift_endAccess();

LABEL_15:
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_1_5();
  id v11 = v5;
  sub_256C9C6A8();
  uint64_t v13 = v12;
  swift_endAccess();

  void *v1 = 0;
  unsigned int v14 = objc_msgSend(v11, sel_invalidateSyncWithError_, v0 + 5);

  unint64_t v15 = *v1;
  if (v14)
  {
    uint64_t v16 = qword_269FC2748;
    id v17 = v15;
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_256CEDC88();
    __swift_project_value_buffer(v18, (uint64_t)qword_269FC5AE0);
    uint64_t v19 = sub_256CEDC68();
    os_log_type_t v20 = sub_256CEE2D8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      v0[5] = OUTLINED_FUNCTION_0_4((uint64_t)"Finish Task Uninterruptable", v25, v26);
      sub_256CEE308();
      _os_log_impl(&dword_256BD4000, v19, v20, "Relinquished RBSAssertion for self. Reason: %s", v21, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }

    goto LABEL_15;
  }
  id v24 = v15;
  sub_256CED9D8();

  swift_willThrow();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v22();
}

uint64_t sub_256CEC2A0()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for RunningBoardSelfAssertions()
{
  return self;
}

uint64_t sub_256CEC2FC(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_256CEC31C, v3, 0);
}

uint64_t sub_256CEC31C()
{
  uint64_t v1 = sub_256CEBD40();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_256CEC398(uint64_t a1)
{
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_256C81004;
  return sub_256CEBE34(a1);
}

id sub_256CEC440(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)sub_256CEDF38();
  swift_bridgeObjectRelease();
  sub_256CEC548(0, &qword_269FC5B20);
  id v6 = (void *)sub_256CEE068();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v3, sel_initWithExplanation_target_attributes_, v5, a3, v6);

  return v7;
}

void *sub_256CEC4E8(uint64_t a1, void *a2)
{
  a2[5] = type metadata accessor for RunningBoardSelfAssertions();
  a2[6] = &off_27061B0B0;
  a2[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 20) = 0;
  *(unsigned char *)(v4 + 16) = 0;
  a2[7] = v4;
  return a2;
}

uint64_t sub_256CEC548(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_256CEC584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InferenceProviderRequestStream();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OSEligibilityChecking.isGreymatterEligible.getter(uint64_t a1, uint64_t a2)
{
  void v3[6] = a2;
  v3[7] = v2;
  v3[2] = 122;
  v3[5] = a1;
  id v6 = *(int **)(a2 + 8);
  v3[8] = v6;
  v3[9] = (a2 + 8) & 0xFFFFFFFFFFFFLL | 0x8792000000000000;
  os_log_type_t v9 = (int *)((char *)v6 + *v6);
  id v7 = (void *)swift_task_alloc();
  v3[10] = v7;
  *id v7 = v3;
  v7[1] = sub_256CEC6FC;
  return ((uint64_t (*)(void *, uint64_t, uint64_t))v9)(v3 + 2, a1, a2);
}

uint64_t sub_256CEC6FC(char a1)
{
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *id v6 = v5;
  swift_task_dealloc();
  if (a1)
  {
    id v7 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v7(1);
  }
  else
  {
    *(void *)(v4 + 24) = 123;
    os_log_type_t v9 = (void *)(v4 + 24);
    uint64_t v13 = (uint64_t (*)(void *, uint64_t, uint64_t))(v9[5] + *(int *)v9[5]);
    uint64_t v10 = (void *)swift_task_alloc();
    v9[8] = v10;
    *uint64_t v10 = v5;
    v10[1] = sub_256CEC88C;
    uint64_t v11 = v9[3];
    uint64_t v12 = v9[2];
    return v13(v9, v12, v11);
  }
}

uint64_t sub_256CEC88C(char a1)
{
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  *id v6 = v5;
  swift_task_dealloc();
  if (a1)
  {
    id v7 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v7(1);
  }
  else
  {
    *(void *)(v4 + 32) = 125;
    os_log_type_t v9 = (void *)(v4 + 32);
    uint64_t v13 = (uint64_t (*)(void *, uint64_t, uint64_t))(v9[4] + *(int *)v9[4]);
    uint64_t v10 = (void *)swift_task_alloc();
    v9[8] = v10;
    *uint64_t v10 = v5;
    v10[1] = sub_256CECA1C;
    uint64_t v11 = v9[2];
    uint64_t v12 = v9[1];
    return v13(v9, v12, v11);
  }
}

uint64_t sub_256CECA1C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_256CECAE8()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_26B2C86F0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C86F0);
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8CA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t OSEligibilityChecker.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_256CECC58();
  *(void *)(v0 + 112) = sub_256CEDEB8();
  return v0;
}

uint64_t OSEligibilityChecker.init()()
{
  swift_defaultActor_initialize();
  sub_256CECC58();
  *(void *)(v0 + 112) = sub_256CEDEB8();
  return v0;
}

unint64_t sub_256CECC58()
{
  unint64_t result = qword_26B2C86C0;
  if (!qword_26B2C86C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C86C0);
  }
  return result;
}

uint64_t sub_256CECCA4(uint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  uint64_t v7 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v1;
  void v8[5] = v6;
  swift_retain();
  sub_256BDB760();
  return swift_release();
}

uint64_t sub_256CECD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_256CECE20;
  return sub_256CED0A8();
}

uint64_t sub_256CECE20()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_256CECEE4()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_256CECF24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_256CECFE4;
  return sub_256CECD84(a1, v4, v5, v7, v6);
}

uint64_t sub_256CECFE4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_256CED0A8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = *v2;
  *(void *)(v1 + 72) = v0;
  *(void *)(v1 + 80) = v3;
  return MEMORY[0x270FA2498](sub_256CED138, v0, 0);
}

uint64_t sub_256CED138()
{
  uint64_t v3 = v0[9] + 112;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if (*(void *)(*(void *)v3 + 16))
  {
    unint64_t v5 = sub_256C9BC8C(v0[10]);
    if (v6 & 1) != 0 && (*(unsigned char *)(*(void *)(v4 + 56) + v5))
    {
      uint64_t v7 = 1;
      goto LABEL_23;
    }
  }
  v0[8] = 0;
  int domain_answer = os_eligibility_get_domain_answer();
  if (domain_answer == sub_256CEDEA8())
  {
    if (v0[8] != 4)
    {
      if (qword_26B2C8710 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_256CEDC88();
      __swift_project_value_buffer(v17, (uint64_t)qword_26B2C86F0);
      uint64_t v10 = sub_256CEDC68();
      os_log_type_t v18 = sub_256CEE2B8();
      if (!OUTLINED_FUNCTION_4_8(v18))
      {
        uint64_t v7 = 0;
        goto LABEL_22;
      }
      uint64_t v12 = OUTLINED_FUNCTION_6_7();
      OUTLINED_FUNCTION_3_9((float *)v12, 3.852e-34);
      uint64_t v7 = 0;
      uint64_t v13 = "Determined not eligible for domain %llu";
      goto LABEL_20;
    }
    if (qword_26B2C8710 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_256CEDC88();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B2C86F0);
    uint64_t v10 = sub_256CEDC68();
    os_log_type_t v11 = sub_256CEE298();
    if (OUTLINED_FUNCTION_4_8(v11))
    {
      uint64_t v12 = OUTLINED_FUNCTION_6_7();
      OUTLINED_FUNCTION_3_9((float *)v12, 3.852e-34);
      uint64_t v7 = 1;
      uint64_t v13 = "Determined eligible for domain %llu";
LABEL_20:
      _os_log_impl(&dword_256BD4000, v10, v1, v13, (uint8_t *)v12, v2);
      MEMORY[0x25A2AEBD0](v12, -1, -1);
      goto LABEL_22;
    }
  }
  else
  {
    if (qword_26B2C8710 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_256CEDC88();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B2C86F0);
    uint64_t v10 = sub_256CEDC68();
    os_log_type_t v15 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_4_8(v15))
    {
      uint64_t v16 = v0[10];
      uint32_t v2 = 18;
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134218240;
      v0[5] = v16;
      sub_256CEE308();
      *(_WORD *)(v12 + 12) = 1024;
      *((_DWORD *)v0 + 10) = domain_answer;
      sub_256CEE308();
      uint64_t v7 = 1;
      uint64_t v13 = "Unable to determine eligibility for domain %llu, status: %d";
      goto LABEL_20;
    }
  }
  uint64_t v7 = 1;
LABEL_22:
  uint64_t v19 = v0[10];

  swift_beginAccess();
  sub_256C9C8CC(v7, v19);
  swift_endAccess();
LABEL_23:
  os_log_type_t v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v7);
}

uint64_t OSEligibilityDomain.underlyingDomain.getter()
{
  return *(void *)v0;
}

uint64_t sub_256CED49C()
{
  type metadata accessor for OSEligibilityChecker();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_256CECC58();
  uint64_t result = sub_256CEDEB8();
  *(void *)(v0 + 112) = result;
  qword_26B2C86D0 = v0;
  return result;
}

uint64_t static OSEligibilityChecker.shared.getter()
{
  if (qword_26B2C86D8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t OSEligibilityChecker.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t OSEligibilityChecker.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t OSEligibilityChecker.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_256CED5C8()
{
  return OSEligibilityChecker.unownedExecutor.getter();
}

uint64_t sub_256CED5E4()
{
  os_log_type_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256CED8A4;
  return sub_256CED0A8();
}

uint64_t sub_256CED67C(uint64_t *a1)
{
  return sub_256CECCA4(a1);
}

void static OSEligibilityDomain.greymatter.getter(void *a1@<X8>)
{
}

void static OSEligibilityDomain.codeLM.getter(void *a1@<X8>)
{
}

void static OSEligibilityDomain.swiftAssist.getter(void *a1@<X8>)
{
}

Swift::Void __swiftcall OSEligibilityChecking.prewarmGreymatter()()
{
  uint64_t v8 = *(uint64_t (**)(char *))(v1 + 16);
  uint64_t v9 = OUTLINED_FUNCTION_2_10(v0, v1, v2, v3, v4, v5, v6, v7, v28, 122);
  uint64_t v10 = v8(v9);
  os_log_type_t v18 = OUTLINED_FUNCTION_2_10(v10, v11, v12, v13, v14, v15, v16, v17, v29, 123);
  uint64_t v19 = v8(v18);
  uint64_t v27 = OUTLINED_FUNCTION_2_10(v19, v20, v21, v22, v23, v24, v25, v26, v30, 125);
  v8(v27);
}

uint64_t type metadata accessor for OSEligibilityChecker()
{
  return self;
}

uint64_t method lookup function for OSEligibilityChecker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OSEligibilityChecker);
}

uint64_t dispatch thunk of OSEligibilityChecker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of OSEligibilityChecker.prewarm(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of OSEligibilityChecker.isEligible(for:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_256BEED64;
  return v6(a1);
}

uint64_t sub_256CED8A8()
{
  return MEMORY[0x270EEDE28]();
}

uint64_t sub_256CED8B8()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_256CED8C8()
{
  return MEMORY[0x270EEDE48]();
}

uint64_t sub_256CED8D8()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_256CED8E8()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_256CED8F8()
{
  return MEMORY[0x270EEDEA0]();
}

uint64_t sub_256CED908()
{
  return MEMORY[0x270EEDEB8]();
}

uint64_t sub_256CED918()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_256CED928()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_256CED938()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_256CED948()
{
  return MEMORY[0x270EEE298]();
}

uint64_t sub_256CED958()
{
  return MEMORY[0x270EEE438]();
}

uint64_t sub_256CED968()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_256CED978()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_256CED988()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_256CED998()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_256CED9A8()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_256CED9B8()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_256CED9C8()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_256CED9D8()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_256CED9E8()
{
  return MEMORY[0x270EEFF98]();
}

uint64_t sub_256CED9F8()
{
  return MEMORY[0x270EEFFB8]();
}

uint64_t sub_256CEDA08()
{
  return MEMORY[0x270EF0008]();
}

uint64_t sub_256CEDA18()
{
  return MEMORY[0x270EF0158]();
}

uint64_t sub_256CEDA28()
{
  return MEMORY[0x270EF0198]();
}

uint64_t sub_256CEDA38()
{
  return MEMORY[0x270EF02D8]();
}

uint64_t sub_256CEDA48()
{
  return MEMORY[0x270EF07E8]();
}

uint64_t sub_256CEDA58()
{
  return MEMORY[0x270EF07F8]();
}

uint64_t sub_256CEDA68()
{
  return MEMORY[0x270EF0808]();
}

uint64_t sub_256CEDA78()
{
  return MEMORY[0x270EF0820]();
}

uint64_t sub_256CEDA88()
{
  return MEMORY[0x270EF0840]();
}

uint64_t sub_256CEDA98()
{
  return MEMORY[0x270EF0890]();
}

uint64_t sub_256CEDAA8()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_256CEDAB8()
{
  return MEMORY[0x270EF0C20]();
}

uint64_t sub_256CEDAC8()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_256CEDB08()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_256CEDB18()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_256CEDB28()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_256CEDB38()
{
  return MEMORY[0x270F18248]();
}

uint64_t sub_256CEDB48()
{
  return MEMORY[0x270F18270]();
}

uint64_t sub_256CEDB58()
{
  return MEMORY[0x270F18278]();
}

uint64_t sub_256CEDB68()
{
  return MEMORY[0x270F18288]();
}

uint64_t sub_256CEDB78()
{
  return MEMORY[0x270F18290]();
}

uint64_t sub_256CEDB88()
{
  return MEMORY[0x270F182A0]();
}

uint64_t sub_256CEDB98()
{
  return MEMORY[0x270F182B0]();
}

uint64_t sub_256CEDBA8()
{
  return MEMORY[0x270F182B8]();
}

uint64_t sub_256CEDBB8()
{
  return MEMORY[0x270EEB7C0]();
}

uint64_t sub_256CEDBC8()
{
  return MEMORY[0x270EEB7C8]();
}

uint64_t sub_256CEDBD8()
{
  return MEMORY[0x270EEB7E8]();
}

uint64_t sub_256CEDBF8()
{
  return MEMORY[0x270EEB7F8]();
}

uint64_t sub_256CEDC08()
{
  return MEMORY[0x270EEB800]();
}

uint64_t sub_256CEDC18()
{
  return MEMORY[0x270EEB808]();
}

uint64_t sub_256CEDC28()
{
  return MEMORY[0x270EEB810]();
}

uint64_t sub_256CEDC38()
{
  return MEMORY[0x270EEB818]();
}

uint64_t sub_256CEDC48()
{
  return MEMORY[0x270EEB880]();
}

uint64_t sub_256CEDC58()
{
  return MEMORY[0x270EEB8E8]();
}

uint64_t sub_256CEDC68()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_256CEDC78()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_256CEDC88()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_256CEDC98()
{
  return MEMORY[0x270FA1A80]();
}

uint64_t sub_256CEDCA8()
{
  return MEMORY[0x270FA1AA0]();
}

uint64_t sub_256CEDCB8()
{
  return MEMORY[0x270FA1AC0]();
}

uint64_t sub_256CEDCC8()
{
  return MEMORY[0x270FA1AD0]();
}

uint64_t sub_256CEDCD8()
{
  return MEMORY[0x270FA1AF0]();
}

uint64_t sub_256CEDCE8()
{
  return MEMORY[0x270FA1B00]();
}

uint64_t sub_256CEDCF8()
{
  return MEMORY[0x270FA1B30]();
}

uint64_t sub_256CEDD08()
{
  return MEMORY[0x270FA1B40]();
}

uint64_t sub_256CEDD18()
{
  return MEMORY[0x270FA1B48]();
}

uint64_t sub_256CEDD28()
{
  return MEMORY[0x270FA1B58]();
}

uint64_t sub_256CEDD38()
{
  return MEMORY[0x270FA1B68]();
}

uint64_t sub_256CEDD48()
{
  return MEMORY[0x270FA1B90]();
}

uint64_t sub_256CEDD58()
{
  return MEMORY[0x270FA1BA0]();
}

uint64_t sub_256CEDD68()
{
  return MEMORY[0x270FA1BA8]();
}

uint64_t sub_256CEDD78()
{
  return MEMORY[0x270FA1BB0]();
}

uint64_t sub_256CEDD88()
{
  return MEMORY[0x270FA1BC8]();
}

uint64_t sub_256CEDD98()
{
  return MEMORY[0x270FA1C00]();
}

uint64_t sub_256CEDDA8()
{
  return MEMORY[0x270FA1C28]();
}

uint64_t sub_256CEDDB8()
{
  return MEMORY[0x270FA1C58]();
}

uint64_t sub_256CEDDC8()
{
  return MEMORY[0x270FA1C60]();
}

uint64_t sub_256CEDDD8()
{
  return MEMORY[0x270FA1C70]();
}

uint64_t sub_256CEDDE8()
{
  return MEMORY[0x270FA1C88]();
}

uint64_t sub_256CEDE08()
{
  return MEMORY[0x270FA1D00]();
}

uint64_t sub_256CEDE18()
{
  return MEMORY[0x270FA1D10]();
}

uint64_t sub_256CEDE28()
{
  return MEMORY[0x270FA1D28]();
}

uint64_t sub_256CEDE38()
{
  return MEMORY[0x270FA1D38]();
}

uint64_t sub_256CEDE48()
{
  return MEMORY[0x270FA1D40]();
}

uint64_t sub_256CEDE58()
{
  return MEMORY[0x270FA1D60]();
}

uint64_t sub_256CEDE68()
{
  return MEMORY[0x270FA1D68]();
}

uint64_t sub_256CEDE78()
{
  return MEMORY[0x270FA1D78]();
}

uint64_t sub_256CEDE88()
{
  return MEMORY[0x270FA1D88]();
}

uint64_t sub_256CEDE98()
{
  return MEMORY[0x270FA1D98]();
}

uint64_t sub_256CEDEA8()
{
  return MEMORY[0x270FA08E0]();
}

uint64_t sub_256CEDEB8()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_256CEDEC8()
{
  return MEMORY[0x270F9D0F0]();
}

uint64_t sub_256CEDED8()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_256CEDEE8()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_256CEDEF8()
{
  return MEMORY[0x270F9D210]();
}

uint64_t sub_256CEDF08()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_256CEDF18()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_256CEDF28()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_256CEDF38()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_256CEDF48()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_256CEDF58()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_256CEDF68()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_256CEDF78()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_256CEDF88()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_256CEDF98()
{
  return MEMORY[0x270F9D5E8]();
}

uint64_t sub_256CEDFA8()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_256CEDFB8()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_256CEDFC8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_256CEDFD8()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_256CEDFE8()
{
  return MEMORY[0x270F9D948]();
}

uint64_t sub_256CEDFF8()
{
  return MEMORY[0x270F9D958]();
}

uint64_t sub_256CEE008()
{
  return MEMORY[0x270F9D960]();
}

uint64_t sub_256CEE018()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_256CEE028()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_256CEE038()
{
  return MEMORY[0x270F9DAC8]();
}

uint64_t sub_256CEE048()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_256CEE058()
{
  return MEMORY[0x270F9DB48]();
}

uint64_t sub_256CEE068()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_256CEE078()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_256CEE088()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_256CEE098()
{
  return MEMORY[0x270F9DBC8]();
}

uint64_t sub_256CEE0A8()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_256CEE0B8()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_256CEE0C8()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_256CEE0D8()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_256CEE0E8()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_256CEE0F8()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_256CEE108()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_256CEE148()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_256CEE158()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_256CEE168()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_256CEE178()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_256CEE188()
{
  return MEMORY[0x270FA1F98]();
}

uint64_t sub_256CEE198()
{
  return MEMORY[0x270FA1FA0]();
}

uint64_t sub_256CEE1B8()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_256CEE1D8()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_256CEE1E8()
{
  return MEMORY[0x270FA1FE0]();
}

uint64_t sub_256CEE208()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_256CEE218()
{
  return MEMORY[0x270FA2098]();
}

uint64_t sub_256CEE228()
{
  return MEMORY[0x270FA20D8]();
}

uint64_t sub_256CEE238()
{
  return MEMORY[0x270FA2120]();
}

uint64_t sub_256CEE248()
{
  return MEMORY[0x270FA2130]();
}

uint64_t sub_256CEE258()
{
  return MEMORY[0x270FA2138]();
}

uint64_t sub_256CEE268()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_256CEE278()
{
  return MEMORY[0x270F9E140]();
}

uint64_t sub_256CEE288()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_256CEE298()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_256CEE2A8()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_256CEE2B8()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_256CEE2C8()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_256CEE2D8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_256CEE2E8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_256CEE2F8()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_256CEE308()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_256CEE318()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_256CEE328()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_256CEE338()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_256CEE348()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_256CEE358()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_256CEE368()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_256CEE378()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_256CEE388()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_256CEE398()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_256CEE3A8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_256CEE3B8()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_256CEE3C8()
{
  return MEMORY[0x270F9EF08]();
}

uint64_t sub_256CEE3D8()
{
  return MEMORY[0x270F9EF10]();
}

uint64_t sub_256CEE3E8()
{
  return MEMORY[0x270F9EF20]();
}

uint64_t sub_256CEE3F8()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_256CEE408()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_256CEE418()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_256CEE428()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_256CEE438()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_256CEE448()
{
  return MEMORY[0x270FA22C0]();
}

uint64_t sub_256CEE458()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_256CEE468()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_256CEE478()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_256CEE488()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_256CEE498()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_256CEE4A8()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_256CEE4B8()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_256CEE4C8()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_256CEE4D8()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_256CEE4E8()
{
  return MEMORY[0x270F9F330]();
}

uint64_t sub_256CEE4F8()
{
  return MEMORY[0x270F9F340]();
}

uint64_t sub_256CEE508()
{
  return MEMORY[0x270F9F350]();
}

uint64_t sub_256CEE518()
{
  return MEMORY[0x270F9F358]();
}

uint64_t sub_256CEE528()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_256CEE538()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_256CEE548()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_256CEE558()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_256CEE568()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_256CEE578()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_256CEE588()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_256CEE598()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_256CEE5A8()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_256CEE5B8()
{
  return MEMORY[0x270F9F470]();
}

uint64_t sub_256CEE5C8()
{
  return MEMORY[0x270F9F480]();
}

uint64_t sub_256CEE5D8()
{
  return MEMORY[0x270F9F490]();
}

uint64_t sub_256CEE5E8()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_256CEE5F8()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_256CEE608()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_256CEE628()
{
  return MEMORY[0x270FA2328]();
}

uint64_t sub_256CEE638()
{
  return MEMORY[0x270F9F548]();
}

uint64_t sub_256CEE648()
{
  return MEMORY[0x270F9F550]();
}

uint64_t sub_256CEE658()
{
  return MEMORY[0x270F9F560]();
}

uint64_t sub_256CEE668()
{
  return MEMORY[0x270F9F578]();
}

uint64_t sub_256CEE678()
{
  return MEMORY[0x270F9F598]();
}

uint64_t sub_256CEE688()
{
  return MEMORY[0x270F9F638]();
}

uint64_t sub_256CEE698()
{
  return MEMORY[0x270F9F658]();
}

uint64_t sub_256CEE6A8()
{
  return MEMORY[0x270F9F678]();
}

uint64_t sub_256CEE6B8()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_256CEE6C8()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_256CEE6E8()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_256CEE6F8()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_256CEE708()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_256CEE728()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_256CEE738()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_256CEE768()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_256CEE778()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_256CEE788()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_256CEE798()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_256CEE7A8()
{
  return MEMORY[0x270F9FC50]();
}

uint64_t sub_256CEE7B8()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_256CEE7C8()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_256CEE7D8()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_256CEE7E8()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_256CEE7F8()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_256CEE808()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_256CEE818()
{
  return MEMORY[0x270F9FD50]();
}

uint64_t sub_256CEE828()
{
  return MEMORY[0x270F9FD58]();
}

uint64_t sub_256CEE838()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_256CEE848()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_256CEE858()
{
  return MEMORY[0x270F9FD80]();
}

uint64_t sub_256CEE868()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_256CEE878()
{
  return MEMORY[0x270F9FD98]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x270ED8028](dso, description, activity, *(void *)&flags);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

void exit(int a1)
{
}

void free(void *a1)
{
}

pid_t getpid(void)
{
  return MEMORY[0x270ED9CE0]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

uint64_t os_eligibility_get_domain_answer()
{
  return MEMORY[0x270EDA920]();
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x270FA0468]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return MEMORY[0x270EDBEA0](connection);
}

xpc_object_t xpc_data_create(const void *bytes, size_t length)
{
  return (xpc_object_t)MEMORY[0x270EDBF90](bytes, length);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x270EDBFA8](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x270EDBFB8](xdata);
}