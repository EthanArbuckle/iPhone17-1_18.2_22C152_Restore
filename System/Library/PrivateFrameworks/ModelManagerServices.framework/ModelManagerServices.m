uint64_t OUTLINED_FUNCTION_43_0()
{
  uint64_t v0;

  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_44()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  return 0;
}

void OUTLINED_FUNCTION_43_3(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_43_4(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return sub_256CEDC68();
}

uint64_t OUTLINED_FUNCTION_43_5()
{
  return sub_256CEE5A8();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_0_4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_256BE14CC(0xD00000000000001BLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

void OUTLINED_FUNCTION_4()
{
  JUMPOUT(0x25A2AEBD0);
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_7@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_9(float *a1, float a2)
{
  *a1 = a2;
  *(void *)(v2 + 40) = v3;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_58()
{
  return -1;
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_4()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_35_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_35_3@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return sub_256CEE5B8();
}

uint64_t OUTLINED_FUNCTION_35_4(uint64_t result)
{
  *(void *)(v1 + 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_35_7(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_11()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_13()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_11_0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_31()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_11_1@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_11_2(uint64_t (*a1)(void))
{
  return sub_256BF95D8(a1);
}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return sub_256CEE878();
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_81(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA2498](a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  return sub_256CEE698();
}

uint64_t OUTLINED_FUNCTION_7(uint64_t a1)
{
  return MEMORY[0x270FA2498](a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return sub_256CEE458();
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return swift_beginAccess();
}

unint64_t OUTLINED_FUNCTION_2_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  *(void *)uint64_t v16 = a10;
  *(void *)(v16 + 8) = a11;
  *(void *)(v16 + 16) = a12;
  *(void *)(v16 + 24) = a13;
  *(void *)(v16 + 32) = a14;
  *(void *)(v16 + 40) = a15;
  *(unsigned char *)(v16 + 48) = a16;
  *(void *)(v17 + 16) = a10;
  *(void *)(v17 + 24) = a11;
  *(void *)(v17 + 32) = a12;
  *(void *)(v17 + 40) = a13;
  *(void *)(v17 + 48) = a14;
  *(void *)(v17 + 56) = a15;
  *(unsigned char *)(v17 + 64) = a16;
  return sub_256BE9EDC();
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_94()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return sub_256CEE458();
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return sub_256CEE598();
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  return swift_beginAccess();
}

char *OUTLINED_FUNCTION_2_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t OUTLINED_FUNCTION_16()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_21(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_14_4()
{
  return sub_256CEE458();
}

uint64_t OUTLINED_FUNCTION_14_5(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_112(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

void OUTLINED_FUNCTION_16_0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 72) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  return sub_256CEE458();
}

uint64_t OUTLINED_FUNCTION_14_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_256C84BF8(v15, v14, v13, v12, 0, v11, v10, v16, a9, a10);
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return v0;
}

void *OUTLINED_FUNCTION_13_3()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_13_4(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return *(void *)(v0 + 16);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t OUTLINED_FUNCTION_28()
{
  return v0;
}

void OUTLINED_FUNCTION_61(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_6()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_6_7()
{
  return swift_slowAlloc();
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return sub_256CEE458();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  uint64_t v2 = *(void *)(v0 - 96);
  return __swift_mutable_project_boxed_opaque_existential_1(v0 - 120, v2);
}

uint64_t OUTLINED_FUNCTION_24(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return sub_256CEE4C8();
}

BOOL OUTLINED_FUNCTION_4_8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_15_0()
{
  return InferenceError.caseName.getter();
}

uint64_t OUTLINED_FUNCTION_15_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + a1);
  sub_256BEFD8C(v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  return 0;
}

void *OUTLINED_FUNCTION_15_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(a1 - 256);
  *uint64_t v3 = v1;
  v3[1] = v2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_15_5()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_15_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_244()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_8@<X0>(void *a1@<X8>)
{
  uint64_t v1 = a1[18];
  __swift_project_boxed_opaque_existential_1(a1 + 14, a1[17]);
  return v1;
}

void *OUTLINED_FUNCTION_15_9()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_32_1@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_9()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_32_3()
{
  return swift_task_dealloc();
}

BOOL OUTLINED_FUNCTION_41(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return 0;
}

__n128 OUTLINED_FUNCTION_32_5(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return sub_256CEE848();
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_17()
{
  return v0;
}

void OUTLINED_FUNCTION_47(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_47_0(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_47_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_2(uint64_t a1)
{
  return *(void *)a1;
}

void OUTLINED_FUNCTION_47_4(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return v0;
}

void OUTLINED_FUNCTION_47_6(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_47_7@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_18()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_2@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

void OUTLINED_FUNCTION_18_3(float a1)
{
  *uint64_t v1 = a1;
}

void OUTLINED_FUNCTION_53(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return sub_256CEE458();
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  return v0;
}

void OUTLINED_FUNCTION_10_5()
{
  JUMPOUT(0x25A2AEBD0);
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return v2 + 16;
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  return v0;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return type metadata accessor for _OSActivity();
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  *a13 = v13;
  return v14;
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_135()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_8()
{
  return sub_256CEE458();
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_1()
{
  return *(void *)(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_21_4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_21_6()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v1[5]);
  return v2 + 32;
}

uint64_t OUTLINED_FUNCTION_21_8()
{
  return *(void *)(v0 + 40);
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_97()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_70(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_97_0()
{
}

void OUTLINED_FUNCTION_97_1()
{
  *(void *)(v1 + 16) = v0;
  JUMPOUT(0x25A2AE9C0);
}

void OUTLINED_FUNCTION_97_2(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, os_log_t log)
{
  _os_log_impl(a1, log, v20, a4, v21, 0xCu);
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  return *(void *)(v0 + 64);
}

void OUTLINED_FUNCTION_57_2()
{
  *(unsigned char *)(v0 - 81) = 1;
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  *uint64_t v1 = v0;
  return v2;
}

uint64_t OUTLINED_FUNCTION_57_4(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_57_6()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_38()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_23(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_3(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  return type metadata accessor for Request(0);
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_38_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return sub_256CEE6C8();
}

uint64_t OUTLINED_FUNCTION_33_4()
{
  return sub_256CEDEC8();
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 112);
  return sub_256C09E84(v2, v3);
}

uint64_t OUTLINED_FUNCTION_33_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  *a10 = v10;
  return v11;
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  return sub_256CEE848();
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  type metadata accessor for RequestMetadata(0);
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_33_9(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v2;
}

unint64_t OUTLINED_FUNCTION_33_10(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  return sub_256CEE498();
}

uint64_t OUTLINED_FUNCTION_17_4(uint64_t a1)
{
  *uint64_t v1 = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_39()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_51()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return sub_256CEE698();
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return sub_256CEE4D8();
}

void OUTLINED_FUNCTION_17_6(void *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_30(float a1)
{
  *uint64_t v2 = a1;
  return sub_256BE0F14(v3, v1);
}

uint64_t OUTLINED_FUNCTION_36()
{
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_30_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_256C04124(a1, v3);
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return sub_256CEE878();
}

uint64_t OUTLINED_FUNCTION_30_5()
{
  return *(void *)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_7@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_30_9()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_296(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_256C5F6BC(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_29_2@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return sub_256CEE4A8();
}

uint64_t OUTLINED_FUNCTION_29_3(uint64_t a1)
{
  *uint64_t v1 = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_23_1@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 144) = a1;
  *(void *)(v2 - 136) = v1;
  return sub_256CEDFB8();
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_23_3()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_25_0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_99()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return sub_256CEE878();
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_1()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_270()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_71_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_71_4()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_44_3(float a1)
{
  *uint64_t v1 = a1;
  return sub_256CEDEC8();
}

_WORD *OUTLINED_FUNCTION_147(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_44_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44_6()
{
  return 24;
}

uint64_t OUTLINED_FUNCTION_44_7()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return v0;
}

void OUTLINED_FUNCTION_27_8(unsigned char *a1@<X8>)
{
  sub_256C8AB18(v2, a1);
  os_unfair_lock_unlock(v1);
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_27_10()
{
  type metadata accessor for ModelXPCRequest(0);
  return v0;
}

unint64_t OUTLINED_FUNCTION_1_1()
{
  uint64_t v3 = *(void *)(v1 - 72);
  *(void *)(v1 - 144) = *(void *)(v1 - 152);
  *(void *)(v1 - 136) = v3;
  uint64_t v4 = *(void *)(v1 - 200);
  *(void *)(v1 - 128) = *(void *)(v1 - 216);
  *(void *)(v1 - 120) = v4;
  uint64_t v5 = *(void *)(v1 - 192);
  *(void *)(v1 - 112) = *(void *)(v1 - 208);
  *(void *)(v1 - 104) = v5;
  *(unsigned char *)(v1 - 96) = v0;
  return sub_256BE971C();
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return 0x6E656B6F74;
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  return swift_beginAccess();
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return sub_256CEE668();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return v2 + 8;
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_72_3()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_72_4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *(void *)(v4 - 72);
  return sub_256C5FC70(v6, v3, a3);
}

void OUTLINED_FUNCTION_72_6(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_63()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  return swift_dynamicCast();
}

uint64_t *OUTLINED_FUNCTION_63_3(uint64_t a1)
{
  v1[5] = a1;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_63_7(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_34_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return a18;
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return sub_256BE958C(v6, v5, v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_34_2@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return sub_256CEE4E8();
}

void OUTLINED_FUNCTION_34_4(float a1)
{
  *uint64_t v1 = a1;
}

void *OUTLINED_FUNCTION_34_5()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  *(void *)uint64_t v2 = v0;
  *(unsigned char *)(v2 + 8) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_34_8()
{
  return sub_256CEE848();
}

uint64_t OUTLINED_FUNCTION_196(uint64_t result)
{
  *(void *)(v1 + 288) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  return sub_256CEE568();
}

uint64_t OUTLINED_FUNCTION_37_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_16_7(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_9(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t OUTLINED_FUNCTION_114()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_114_0()
{
}

uint64_t OUTLINED_FUNCTION_114_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_81_1()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_297()
{
  return v0;
}

void *OUTLINED_FUNCTION_81_2@<X0>(uint64_t a1@<X8>)
{
  return __swift_project_boxed_opaque_existential_1((void *)(a1 + 112), *(void *)(a1 + 136));
}

void OUTLINED_FUNCTION_81_3(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_81_4()
{
  return sub_256CEDC88();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return type metadata accessor for InferenceProviderRequestConfiguration(0);
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_75_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53_1(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_53_2()
{
  return sub_256CEE458();
}

void OUTLINED_FUNCTION_53_3(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
}

uint64_t OUTLINED_FUNCTION_53_5()
{
  return type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
}

uint64_t OUTLINED_FUNCTION_53_7()
{
  return v0;
}

void OUTLINED_FUNCTION_53_8(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_45_1(uint64_t a1, uint64_t a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_45_2(uint64_t a1@<X8>)
{
  *(void *)(v1 - 96) = a1;
}

uint64_t OUTLINED_FUNCTION_45_3(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_45_4()
{
  return sub_256CEE5A8();
}

float *OUTLINED_FUNCTION_45_5(float *result, float a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_1@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_41_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_41_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_7()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_40(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  return sub_256CEDFB8();
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_40_4()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_40_6()
{
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_40_7(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_28_5()
{
  *(unsigned char *)(v0 - 65) = 2;
}

uint64_t OUTLINED_FUNCTION_28_6(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  return *(void *)(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_28_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_9()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_28_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_26_4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_26_5()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return sub_256CEDB08();
}

void *OUTLINED_FUNCTION_25_8(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_25_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_256BE958C(a1, 0, v6, v7, a5, a6, 0x88u);
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_20_6()
{
  return *(void *)(v0 + 144);
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_48()
{
  return swift_arrayDestroy();
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t OUTLINED_FUNCTION_89@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_256CEE498();
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_89_1(uint64_t a1, void *a2)
{
  *a2 = v3;
  a2[1] = v2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_49()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_78()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return swift_beginAccess();
}

BOOL OUTLINED_FUNCTION_78_1(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_78_2@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_78_4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_256CEE308();
}

void OUTLINED_FUNCTION_78_5(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_78_6()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_78_7(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_77_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_256BE14CC(v8, v7, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_77_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_77_2(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v4 - 96);
  return sub_256CA65D4(v3, v6, a3);
}

uint64_t OUTLINED_FUNCTION_68@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_68_0(uint64_t a1)
{
  *(void *)(v1 + 160) = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_68_3()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_68_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42()
{
  return sub_256CEE798();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  *uint64_t v1 = v0;
  return v2;
}

uint64_t OUTLINED_FUNCTION_55_3(float a1)
{
  *uint64_t v1 = a1;
  return sub_256CEDEC8();
}

uint64_t OUTLINED_FUNCTION_55_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return sub_256C5BFF8(a18, a20);
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  return *(void *)(v0 + 96);
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return *(void *)(v0 + 120);
}

void OUTLINED_FUNCTION_52_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_52_4()
{
  return sub_256C5BFF8(v0, v1);
}

void OUTLINED_FUNCTION_139(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_52_5()
{
  return sub_256CEE848();
}

uint64_t OUTLINED_FUNCTION_52_6()
{
  return v1 + v0;
}

uint64_t OUTLINED_FUNCTION_39_0(float a1)
{
  *uint64_t v2 = a1;
  return sub_256BE0F14(v3, v1);
}

uint64_t OUTLINED_FUNCTION_39_1()
{
  return sub_256CEE498();
}

void OUTLINED_FUNCTION_39_3()
{
  *(void *)(v0 - 144) = 0x206E6F6973736553;
  *(void *)(v0 - 136) = 0xE800000000000000;
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return sub_256CEDEC8();
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  return v0;
}

void OUTLINED_FUNCTION_39_7(os_unfair_lock_s *a1@<X8>)
{
  os_unfair_lock_lock(a1 + 5);
}

uint64_t OUTLINED_FUNCTION_39_8(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_24_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return sub_256BE952C(a18, a19, v22, v21, a16, v20, v19);
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  return sub_256CEE568();
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_24_4(uint64_t a1)
{
  *uint64_t v1 = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return v0;
}

void OUTLINED_FUNCTION_7_2()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return *(void *)(v0 - 160);
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  return v0;
}

void OUTLINED_FUNCTION_124(float a1)
{
  *uint64_t v1 = a1;
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_123(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_123_1(uint64_t a1, uint64_t a2)
{
  return a2 + 8;
}

uint64_t OUTLINED_FUNCTION_123_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_121()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_121_1()
{
  return sub_256CEE668();
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return *(void *)(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_4()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_12_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  *a12 = v12;
  return a10;
}

uint64_t OUTLINED_FUNCTION_12_6(uint64_t a1)
{
  *uint64_t v1 = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_12_7(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  return sub_256CEDF88();
}

uint64_t OUTLINED_FUNCTION_103_1()
{
  return __swift_mutable_project_boxed_opaque_existential_1(v1 - 120, v0);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t OUTLINED_FUNCTION_86()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_86_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  *(_OWORD *)a2 = a10;
  *(_OWORD *)(a2 + 16) = a9;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v12;
  *(unsigned char *)(a2 + 48) = v13;
  return v10;
}

uint64_t OUTLINED_FUNCTION_80()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_80_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return v0;
}

void OUTLINED_FUNCTION_80_2()
{
  *uint64_t v0 = 0x8000000000000000;
}

void OUTLINED_FUNCTION_80_3(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_80_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return sub_256CEDEC8();
}

void OUTLINED_FUNCTION_59_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

BOOL OUTLINED_FUNCTION_73_1(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_73_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return sub_256BE14CC(v5, v4, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_70_0()
{
  return sub_256CEE848();
}

void OUTLINED_FUNCTION_70_1()
{
}

uint64_t OUTLINED_FUNCTION_70_2()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_70_4()
{
  return *(void *)(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_70_5()
{
  return v0;
}

void OUTLINED_FUNCTION_70_6()
{
  sub_256CE2DCC();
}

uint64_t OUTLINED_FUNCTION_69()
{
  return sub_256CEE6C8();
}

BOOL OUTLINED_FUNCTION_69_0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void *OUTLINED_FUNCTION_69_2()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

BOOL OUTLINED_FUNCTION_102(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_69_5()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_67()
{
  return sub_256CEDFA8();
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  return *(void *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_67_1(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  *(_DWORD *)(a1 + 20) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_67_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  return v0;
}

void OUTLINED_FUNCTION_67_4(float a1)
{
  *uint64_t v1 = a1;
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_67_5@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_256CA65D4(a1, v4, a2);
}

void OUTLINED_FUNCTION_67_6(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_67_7(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_66()
{
  return sub_256CEDFA8();
}

__n128 OUTLINED_FUNCTION_66_0(__n128 *a1)
{
  *(void *)(v2 + 48) = a1;
  __n128 result = *(__n128 *)(v2 + 24);
  a1[1] = result;
  a1[2].n128_u64[0] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  return *(void *)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_66_3()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_66_5(float a1)
{
  *unint64_t v1 = a1;
  return type metadata accessor for InferenceProviderXPCRequest(0);
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return sub_256CEE178();
}

uint64_t OUTLINED_FUNCTION_54_2()
{
  return sub_256CEE5A8();
}

uint64_t OUTLINED_FUNCTION_54_3()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_54_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_54_5()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_54_6(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(v3, 1, a3);
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return sub_256CEE5A8();
}

void OUTLINED_FUNCTION_50_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void OUTLINED_FUNCTION_50_4(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_log_type_t type)
{
  _os_log_impl(a1, v14, type, a4, v13, 0x16u);
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return sub_256CEE558();
}

uint64_t OUTLINED_FUNCTION_50_7()
{
  return sub_256C88DA4();
}

uint64_t OUTLINED_FUNCTION_46(uint64_t a1, uint64_t *a2)
{
  return sub_256BE33C8(v2, a2);
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return *(void *)(v0 + 72);
}

void OUTLINED_FUNCTION_46_2(float a1)
{
  *unint64_t v1 = a1;
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return sub_256CEE488();
}

uint64_t OUTLINED_FUNCTION_46_5()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_46_6(uint64_t a1)
{
  uint64_t v3 = *(void *)(v2 - 160);
  *(void *)(a1 + 16) = *(void *)(v2 - 168);
  *(void *)(a1 + 24) = v3;
  return a1 + v1;
}

uint64_t OUTLINED_FUNCTION_37_2(void *a1)
{
  uint64_t v1 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return v1;
}

void OUTLINED_FUNCTION_37_3()
{
  *(unsigned char *)(v0 - 65) = 3;
}

void OUTLINED_FUNCTION_37_4(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t *buf, int a14, os_log_type_t type)
{
  _os_log_impl(a1, v15, type, a4, buf, 0xCu);
}

uint64_t OUTLINED_FUNCTION_37_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_37_7()
{
  return sub_256CEDB98();
}

uint64_t OUTLINED_FUNCTION_36_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_256BE952C(a1, a2, a3, a4, v6, v5, v4);
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  return sub_256CEE6C8();
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return sub_256CEE538();
}

uint64_t OUTLINED_FUNCTION_36_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_36_6()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_298(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_260()
{
  return swift_willThrowTypedImpl();
}

void OUTLINED_FUNCTION_236()
{
}

uint64_t OUTLINED_FUNCTION_217(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_210(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_256C5F6BC(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_195(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_194()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_193()
{
  return *(void *)(v0 + 240);
}

void OUTLINED_FUNCTION_192()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

void OUTLINED_FUNCTION_182()
{
}

uint64_t OUTLINED_FUNCTION_180()
{
  return *(void *)(v0 + 192);
}

uint64_t OUTLINED_FUNCTION_179(uint64_t result)
{
  *(void *)(v1 + 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_178(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_137_0()
{
  return sub_256C0044C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_137_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_122()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return *(void *)(v0 + 48);
}

void OUTLINED_FUNCTION_122_1()
{
  *(unsigned char *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_119()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_119_2()
{
  return sub_256CEE5A8();
}

void OUTLINED_FUNCTION_116(float a1)
{
  *uint64_t v1 = a1;
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_116_0()
{
  return *(void *)(v0 + 216);
}

uint64_t OUTLINED_FUNCTION_116_2()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_115()
{
  *uint64_t v0 = v2;
}

void OUTLINED_FUNCTION_115_0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t OUTLINED_FUNCTION_115_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_115_2@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 96) = a1;
  return 0;
}

void OUTLINED_FUNCTION_115_3(__n128 a1, uint64_t a2, __n128 *a3)
{
  a3[1] = a1;
  a3[2].n128_u64[0] = 0;
  a3[2].n128_u64[1] = v3;
  a3[3].n128_u8[0] = 72;
}

void OUTLINED_FUNCTION_112_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_112_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_112_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_111()
{
  return sub_256CEE368();
}

uint64_t OUTLINED_FUNCTION_111_0()
{
  uint64_t result = __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  *(void *)(v1 + 280) = *v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_111_2(__n128 *a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2].n128_u64[0] = v3;
}

void OUTLINED_FUNCTION_110(float a1)
{
  *uint64_t v1 = a1;
  JUMPOUT(0x25A2AE9C0);
}

void OUTLINED_FUNCTION_110_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_110_1()
{
  return sub_256CEE798();
}

uint64_t OUTLINED_FUNCTION_110_2()
{
  return sub_256CEE6C8();
}

void OUTLINED_FUNCTION_109_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_109_1(uint64_t a1)
{
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  return v1;
}

uint64_t OUTLINED_FUNCTION_109_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_109_3(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

BOOL OUTLINED_FUNCTION_105(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_105_0(uint64_t a1, uint64_t a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_101_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t OUTLINED_FUNCTION_101_1()
{
  return swift_bridgeObjectRelease_n();
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t objectdestroy_4Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t objectdestroy_59Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t objectdestroy_6Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t))(v2 + 8))(v1 + v4);
  return MEMORY[0x270FA0238](v1, v5, v6);
}

uint64_t objectdestroyTm_0()
{
  _Block_release(*(const void **)(v0 + 16));

  uint64_t v1 = OUTLINED_FUNCTION_7_8();
  return MEMORY[0x270FA0238](v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_7_12(void *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_256BDA80C()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_26B2C8278);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8278);
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8CA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t Assertion.policy.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t Assertion.description.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t Assertion.uuid.getter()
{
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t Assertion.id.getter()
{
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t default argument 3 of Assertion.init(policy:description:collection:osEligibilityChecker:)@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26B2C86D8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26B2C86D0;
  a1[3] = type metadata accessor for OSEligibilityChecker();
  a1[4] = (uint64_t)&protocol witness table for OSEligibilityChecker;
  *a1 = v2;
  return swift_retain();
}

uint64_t Assertion.__allocating_init(policy:description:collection:osEligibilityChecker:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_34();
  swift_allocObject();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF8;
  OUTLINED_FUNCTION_26_1();
  return Assertion.init(policy:description:collection:osEligibilityChecker:)();
}

uint64_t Assertion.init(policy:description:collection:osEligibilityChecker:)()
{
  OUTLINED_FUNCTION_2();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  v1[3] = v5;
  v1[4] = v6;
  v1[2] = v7;
  uint64_t v8 = type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_21(v8);
  v1[9] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_256BDABAC()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 32);
  long long v12 = *(_OWORD *)(v0 + 16);
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  uint64_t v6 = OBJC_IVAR____TtC20ModelManagerServices9Assertion_timestamp;
  sub_256CEDA38();
  *(void *)(v2 + v6) = v7;
  *(void *)(v2 + 32) = v5;
  *(void *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 16) = v12;
  *(void *)(v2 + OBJC_IVAR____TtC20ModelManagerServices9Assertion_collection) = v3;
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v8);
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_256BDACC4;
  return OSEligibilityChecking.isGreymatterEligible.getter(v8, v9);
}

uint64_t sub_256BDACC4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 104) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256BDAD94()
{
  OUTLINED_FUNCTION_12();
  if (*(unsigned char *)(v0 + 104) == 1)
  {
    Assertion.daemonRep.getter(*(void **)(v0 + 72));
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_256BDAF3C;
    OUTLINED_FUNCTION_32_1(*(void *)(v0 + 72));
    return sub_256BDDC20();
  }
  else
  {
    if (qword_26B2C8290 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_256CEDC88();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B2C8278);
    uint64_t v4 = sub_256CEDC68();
    os_log_type_t v5 = sub_256CEE298();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_256BD4000, v4, v5, "Device is ineligible. ModelManagerServices Assertions are disabled.", v6, 2u);
      OUTLINED_FUNCTION_4();
    }

    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm(*(void *)(v0 + 56));
    swift_task_dealloc();
    uint64_t v7 = OUTLINED_FUNCTION_57_0();
    return v8(v7);
  }
}

uint64_t sub_256BDAF3C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 72);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v8 = v7;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  sub_256BE0EB8(v6);
  if (v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_256BDB044()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(*(void *)(v0 + 56));
  swift_task_dealloc();
  uint64_t v1 = OUTLINED_FUNCTION_57_0();
  return v2(v1);
}

uint64_t sub_256BDB0B0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t Assertion.daemonRep.getter@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = *(void *)((char *)v1 + OBJC_IVAR____TtC20ModelManagerServices9Assertion_timestamp);
  uint64_t v8 = type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v9 = (char *)a1 + *(int *)(v8 + 28);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  (*(void (**)(char *, void *))(v10 + 16))(v9, v1);
  sub_256CEDEC8();
  sub_256CEDEC8();
  uint64_t result = getpid();
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  *(_DWORD *)((char *)a1 + *(int *)(v8 + 32)) = result;
  return result;
}

uint64_t Assertion.__allocating_init(policy:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256BDB208);
}

uint64_t sub_256BDB208()
{
  OUTLINED_FUNCTION_15();
  if (qword_26B2C7B00 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B2C86D8;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26B2C86D0;
  v0[5] = type metadata accessor for OSEligibilityChecker();
  v0[6] = &protocol witness table for OSEligibilityChecker;
  v0[2] = v2;
  swift_allocObject();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_256BDB36C;
  OUTLINED_FUNCTION_32_1(v0[7]);
  return Assertion.init(policy:description:collection:osEligibilityChecker:)();
}

uint64_t sub_256BDB36C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v7 = v6;
  *(void *)(v8 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    long long v12 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v12(v3);
  }
}

uint64_t sub_256BDB470()
{
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t Assertion.deinit()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v2 = OUTLINED_FUNCTION_21(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_19();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  uint64_t v7 = OUTLINED_FUNCTION_6(v6);
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v24 - v14;
  v24[1] = OBJC_IVAR____TtC20ModelManagerServices9Assertion_collection;
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC20ModelManagerServices9Assertion_collection);
  uint64_t v17 = v0 + OBJC_IVAR____TtC20ModelManagerServices9Assertion_uuid;
  uint64_t v18 = sub_256CEDB08();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v15, v17, v18);
  uint64_t v20 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v20);
  sub_256BE0F14((uint64_t)v15, (uint64_t)v13);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v16;
  sub_256BE1034((uint64_t)v13, (uint64_t)v22 + v21);
  swift_retain();
  sub_256BDB760();
  swift_release();
  sub_256BE33C8((uint64_t)v15, (uint64_t *)&unk_26B2C8608);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  swift_release();
  return v0;
}

uint64_t sub_256BDB6C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF0;
  return sub_256BDEC00();
}

uint64_t sub_256BDB760()
{
  uint64_t v3 = OUTLINED_FUNCTION_54_1();
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {
    sub_256BE33C8(v1, &qword_26B2C8A00);
  }
  else
  {
    sub_256CEE168();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_50();
    v4();
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_256CEE0D8();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v0;
  return swift_task_create();
}

uint64_t sub_256BDB8B0()
{
  uint64_t v3 = OUTLINED_FUNCTION_54_1();
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {
    sub_256BE33C8(v1, &qword_26B2C8A00);
  }
  else
  {
    sub_256CEE168();
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_50();
    v4();
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_256CEE0D8();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4868);
  return swift_task_create();
}

uint64_t Assertion.__deallocating_deinit()
{
  Assertion.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t Assertion.DaemonRep.init(policy:description:timestamp:id:acquirerPID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(double *)(a7 + 32) = a8;
  uint64_t v11 = type metadata accessor for Assertion.DaemonRep(0);
  uint64_t result = sub_256BE1034(a5, a7 + *(int *)(v11 + 28));
  *(_DWORD *)(a7 + *(int *)(v11 + 32)) = a6;
  return result;
}

uint64_t Assertion.hash(into:)()
{
  uint64_t v1 = type metadata accessor for Assertion.DaemonRep(0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_44_0();
  Assertion.daemonRep.getter(v0);
  sub_256CEDB08();
  sub_256BE218C(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
  sub_256CEDF18();
  return sub_256BE0EB8((uint64_t)v0);
}

uint64_t static Assertion.== infix(_:_:)()
{
  uint64_t v0 = type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v8 - v4;
  Assertion.daemonRep.getter((uint64_t *)((char *)&v8 - v4));
  Assertion.daemonRep.getter(v3);
  char v6 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
  sub_256BE0EB8((uint64_t)v3);
  sub_256BE0EB8((uint64_t)v5);
  return v6 & 1;
}

uint64_t static Assertion.DaemonRep.== infix(_:_:)()
{
  type metadata accessor for Assertion.DaemonRep(0);
  return _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t Assertion.invalidate()()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  OUTLINED_FUNCTION_21(v2);
  *(void *)(v1 + 24) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BDBD34()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[2] + OBJC_IVAR____TtC20ModelManagerServices9Assertion_uuid;
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v1, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_256BDBE18;
  OUTLINED_FUNCTION_32_1(v0[3]);
  return sub_256BDEC00();
}

uint64_t sub_256BDBE18()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_256BE33C8(v2, (uint64_t *)&unk_26B2C8608);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v5();
}

uint64_t Assertion.hashValue.getter()
{
  return sub_256CEE7F8();
}

uint64_t sub_256BDBF44()
{
  return static Assertion.== infix(_:_:)() & 1;
}

uint64_t sub_256BDBF68()
{
  return Assertion.hashValue.getter();
}

uint64_t sub_256BDBF8C()
{
  return Assertion.hash(into:)();
}

uint64_t sub_256BDBFB0()
{
  return sub_256CEE7F8();
}

uint64_t sub_256BDBFF0()
{
  return Assertion.uuid.getter();
}

uint64_t Assertion.DaemonRep.policy.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t Assertion.DaemonRep.description.getter()
{
  return OUTLINED_FUNCTION_28();
}

double Assertion.DaemonRep.timestamp.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t Assertion.DaemonRep.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Assertion.DaemonRep(0) + 28);
  return sub_256BE0F14(v3, a1);
}

uint64_t Assertion.DaemonRep.acquirerPID.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for Assertion.DaemonRep(0) + 32));
}

uint64_t Assertion.DaemonRep.init(policy:description:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  sub_256CEDA38();
  a6[4] = v8;
  uint64_t v9 = type metadata accessor for Assertion.DaemonRep(0);
  sub_256BE0F14(a5, (uint64_t)a6 + *(int *)(v9 + 28));
  pid_t v10 = getpid();
  uint64_t result = sub_256BE33C8(a5, (uint64_t *)&unk_26B2C8608);
  *(_DWORD *)((char *)a6 + *(int *)(v9 + 32)) = v10;
  return result;
}

uint64_t Assertion.DaemonRep.receivedFromPID(_:)@<X0>(int a1@<W0>, void *a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v10 = type metadata accessor for Assertion.DaemonRep(0);
  sub_256BE0F14((uint64_t)v2 + *(int *)(v10 + 28), (uint64_t)a2 + *(int *)(v10 + 28));
  *a2 = v6;
  a2[1] = v5;
  a2[2] = v8;
  a2[3] = v7;
  a2[4] = v9;
  *(_DWORD *)((char *)a2 + *(int *)(v10 + 32)) = a1;
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

uint64_t Assertion.DaemonRep.hash(into:)()
{
  return sub_256CEDF18();
}

BOOL sub_256BDC274(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_256BDC284()
{
  return sub_256CEE7B8();
}

uint64_t sub_256BDC2AC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7963696C6F70 && a2 == 0xE600000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 25705 && a2 == 0xE200000000000000;
        if (v8 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x7265726975716361 && a2 == 0xEB00000000444950)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_256CEE6C8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_256BDC4A4()
{
  return 5;
}

uint64_t sub_256BDC4AC()
{
  return sub_256CEE7F8();
}

uint64_t sub_256BDC4F4()
{
  return 0;
}

uint64_t sub_256BDC500(char a1)
{
  return *(void *)&aPolicy_3[8 * a1];
}

BOOL sub_256BDC520(char *a1, char *a2)
{
  return sub_256BDC274(*a1, *a2);
}

uint64_t sub_256BDC52C()
{
  return sub_256BDC4AC();
}

uint64_t sub_256BDC534()
{
  return sub_256BDC284();
}

uint64_t sub_256BDC53C()
{
  return sub_256CEE7F8();
}

uint64_t sub_256BDC580()
{
  return sub_256BDC500(*v0);
}

uint64_t sub_256BDC588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BDC2AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256BDC5B0()
{
  return sub_256BDC4F4();
}

uint64_t sub_256BDC5D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256BDC4A4();
  *a1 = result;
  return result;
}

uint64_t sub_256BDC5F8(uint64_t a1)
{
  unint64_t v2 = sub_256BE1194();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BDC634(uint64_t a1)
{
  unint64_t v2 = sub_256BE1194();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Assertion.DaemonRep.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C82A8);
  OUTLINED_FUNCTION_5();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256BE1194();
  sub_256CEE878();
  sub_256CEE568();
  if (!v1)
  {
    sub_256CEE568();
    sub_256CEE588();
    type metadata accessor for Assertion.DaemonRep(0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
    sub_256BE1228((unint64_t *)&unk_26B2C8268);
    sub_256CEE5A8();
    sub_256CEE5B8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t Assertion.DaemonRep.hashValue.getter()
{
  return sub_256CEE7F8();
}

uint64_t Assertion.DaemonRep.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_19();
  uint64_t v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4920);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_19();
  uint64_t v8 = type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_19();
  uint64_t v12 = (uint64_t *)(v11 - v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256BE1194();
  sub_256CEE848();
  if (v21) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  *uint64_t v12 = sub_256CEE498();
  v12[1] = v13;
  v12[2] = sub_256CEE498();
  v12[3] = v14;
  sub_256CEE4B8();
  v12[4] = v15;
  sub_256BE1228(&qword_26B2C4898);
  sub_256CEE4D8();
  sub_256BE1034(v6, (uint64_t)v12 + *(int *)(v8 + 28));
  int v16 = sub_256CEE4E8();
  uint64_t v17 = OUTLINED_FUNCTION_8();
  v18(v17);
  *(_DWORD *)((char *)v12 + *(int *)(v8 + 32)) = v16;
  sub_256BE1270((uint64_t)v12, a2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_256BE0EB8((uint64_t)v12);
}

uint64_t sub_256BDCC0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Assertion.DaemonRep.init(from:)(a1, a2);
}

uint64_t sub_256BDCC24(void *a1)
{
  return Assertion.DaemonRep.encode(to:)(a1);
}

uint64_t sub_256BDCC44()
{
  return sub_256CEE7F8();
}

uint64_t Assertion.LiveDaemonInterface.acquire(_:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256BDCCEC);
}

uint64_t sub_256BDCCEC()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BDCDB4;
  OUTLINED_FUNCTION_32_1(*(void *)(v0 + 16));
  return ModelServiceClient.acquireAssertion(assertion:)();
}

uint64_t sub_256BDCDB4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t Assertion.LiveDaemonInterface.invalidate(_:)()
{
  OUTLINED_FUNCTION_2();
  v0[4] = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  OUTLINED_FUNCTION_21(v2);
  v0[5] = swift_task_alloc();
  v0[6] = swift_task_alloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BDCF0C()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BDCFD4;
  uint64_t v2 = OUTLINED_FUNCTION_32_1(*(void *)(v0 + 32));
  return ModelServiceClient.releaseAssertion(id:)(v2);
}

uint64_t sub_256BDCFD4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256BDD0DC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, void *a12, os_log_t log, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_43();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  if (qword_26B2C8290 != -1) {
    swift_once();
  }
  uint64_t v29 = v26[4];
  uint64_t v30 = v26[8];
  uint64_t v31 = v26[6];
  uint64_t v32 = sub_256CEDC88();
  __swift_project_value_buffer(v32, (uint64_t)qword_26B2C8278);
  sub_256BE0F14(v29, v31);
  MEMORY[0x25A2AE9C0](v30);
  MEMORY[0x25A2AE9C0](v30);
  v33 = sub_256CEDC68();
  os_log_type_t v34 = sub_256CEE2C8();
  BOOL v35 = os_log_type_enabled(v33, v34);
  v36 = (void *)v26[8];
  uint64_t v37 = v26[6];
  if (v35)
  {
    a10 = v26 + 3;
    a11 = v26 + 2;
    log = v33;
    v38 = (uint64_t *)v26[5];
    uint64_t v39 = swift_slowAlloc();
    a12 = (void *)swift_slowAlloc();
    a14 = OUTLINED_FUNCTION_23_0();
    a15 = a14;
    *(_DWORD *)uint64_t v39 = 136315394;
    sub_256BE0F14(v37, (uint64_t)v38);
    uint64_t v40 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v42 = v41;
    OUTLINED_FUNCTION_46(v40, (uint64_t *)&unk_26B2C8608);
    v26[2] = sub_256BE14CC(v40, v42, &a15);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256BE33C8(v37, v38);
    *(_WORD *)(v39 + 12) = 2112;
    MEMORY[0x25A2AE9C0](v36);
    uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
    v26[3] = v43;
    sub_256CEE308();
    *a12 = v43;

    _os_log_impl(&dword_256BD4000, log, v34, "Error occurred while releasing assertion [%s]: %@", (uint8_t *)v39, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {

    sub_256BE33C8(v37, (uint64_t *)&unk_26B2C8608);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_9_0();
  return v45(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, log, a14, a15, a16, a17, a18);
}

uint64_t Assertion.LiveDaemonInterface.fetchAll()()
{
  return OUTLINED_FUNCTION_7((uint64_t)sub_256BDD3B0);
}

uint64_t sub_256BDD3B0()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BDD470;
  return ModelServiceClient.fetchAllAssertions()();
}

uint64_t sub_256BDD470()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t Assertion.LiveDaemonInterface.restore(_:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256BDD558);
}

uint64_t sub_256BDD558()
{
  OUTLINED_FUNCTION_2();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF4;
  uint64_t v2 = OUTLINED_FUNCTION_32_1(*(void *)(v0 + 16));
  return ModelServiceClient.restoreAssertions(_:)(v2);
}

uint64_t sub_256BDD624(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_256BDD6B8;
  return Assertion.LiveDaemonInterface.acquire(_:)(a1);
}

uint64_t sub_256BDD6B8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256BDD778()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BDD80C;
  return Assertion.LiveDaemonInterface.invalidate(_:)();
}

uint64_t sub_256BDD80C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_256BDD8D4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF8;
  return Assertion.LiveDaemonInterface.fetchAll()();
}

uint64_t sub_256BDD960(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_256BE3BF0;
  return Assertion.LiveDaemonInterface.restore(_:)(a1);
}

uint64_t sub_256BDD9F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256BDDA4C();
  *a1 = result;
  return result;
}

uint64_t sub_256BDDA20()
{
  uint64_t v0 = sub_256CEDEC8();
  return sub_256BDDA84(v0);
}

uint64_t sub_256BDDA4C()
{
  return sub_256CEDEC8();
}

uint64_t sub_256BDDA84(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_256BDDACC())()
{
  return j__swift_endAccess;
}

uint64_t sub_256BDDB1C(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  return swift_release();
}

uint64_t Assertion.Collection.__allocating_init(daemonInterface:)()
{
  return sub_256BDDB5C();
}

uint64_t Assertion.Collection.init(daemonInterface:)()
{
  return sub_256BDDB5C();
}

uint64_t sub_256BDDB5C()
{
  OUTLINED_FUNCTION_60();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v4);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_19();
  uint64_t v9 = v8 - v7;
  (*(void (**)(uint64_t))(v10 + 16))(v8 - v7);
  uint64_t v11 = v0(v9, v1, v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm(v2);
  return v11;
}

uint64_t sub_256BDDC20()
{
  OUTLINED_FUNCTION_12();
  v1[22] = v2;
  v1[23] = v0;
  uint64_t v3 = sub_256CEDDE8();
  v1[24] = v3;
  OUTLINED_FUNCTION_6(v3);
  v1[25] = v4;
  v1[26] = OUTLINED_FUNCTION_38();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Assertion.DaemonRep(0);
  v1[29] = v5;
  OUTLINED_FUNCTION_21(v5);
  v1[30] = OUTLINED_FUNCTION_38();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256BDDD34()
{
  v26 = v0;
  v25[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[32];
  sub_256BE1270(v0[22], v0[31]);
  OUTLINED_FUNCTION_13();
  sub_256CE6308();
  char v3 = v2;
  sub_256BE0EB8(v1);
  swift_endAccess();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22();
    __asm { BRAA            X1, X16 }
  }
  type metadata accessor for _OSActivity();
  v0[33] = swift_initStackObject();
  v0[34] = _OSActivity.init(_:)("Acquiring Assertion", 19, 2);
  if (qword_26B2C8290 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[22];
  uint64_t v6 = sub_256CEDC88();
  v0[35] = __swift_project_value_buffer(v6, (uint64_t)qword_26B2C8278);
  sub_256BE1270(v5, v4);
  uint64_t v7 = sub_256CEDC68();
  os_log_type_t v8 = sub_256CEE2D8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[32];
    uint64_t v10 = v0[30];
    uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    v25[0] = OUTLINED_FUNCTION_23_0();
    *(_DWORD *)uint64_t v11 = 136315138;
    sub_256BE1270(v10, v9);
    uint64_t v12 = sub_256CEDF88();
    v0[21] = sub_256BE14CC(v12, v13, v25);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256BE0EB8(v10);
    _os_log_impl(&dword_256BD4000, v7, v8, "Acquiring assertion: %s", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256BE0EB8(v0[30]);
  }

  uint64_t v16 = v0[23];
  if (*(unsigned char *)(v16 + 120))
  {
    __swift_project_boxed_opaque_existential_1((void *)(v16 + 128), *(void *)(v16 + 152));
    uint64_t v17 = (void *)swift_task_alloc();
    v0[37] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_256BDE408;
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_22();
    __asm { BRAA            X4, X16 }
  }
  *(unsigned char *)(v16 + 120) = 1;
  if (qword_26B2C89B0 != -1) {
    swift_once();
  }
  v0[36] = qword_26B2C9660;
  swift_retain();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_22();
  return MEMORY[0x270FA2498](v20, v21, v22);
}

uint64_t sub_256BDE188()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0 + 184);
  type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle();
  swift_allocObject();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_256BE3A6C;
  *(void *)(v2 + 24) = v1;
  OUTLINED_FUNCTION_13();
  swift_retain();
  swift_retain();
  sub_256C9C934();
  swift_endAccess();
  swift_release();
  swift_release_n();
  return MEMORY[0x270FA2498](sub_256BDE2D8, v1, 0);
}

uint64_t sub_256BDE2D8()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v2 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v1[19]);
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
  char v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v3;
  *char v3 = v0;
  v3[1] = sub_256BDE408;
  OUTLINED_FUNCTION_55();
  return v5();
}

uint64_t sub_256BDE408()
{
  OUTLINED_FUNCTION_12();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 304) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v6 = sub_256BDE648;
  }
  else {
    uint64_t v6 = sub_256BDE558;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256BDE558()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0 + 272);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v1 + 24));
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_27_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_256BDE648()
{
  v23[1] = *MEMORY[0x263EF8340];
  *(void *)(v0 + 152) = *(void *)(v0 + 304);
  MEMORY[0x25A2AE9C0]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 216);
    uint64_t v1 = *(void *)(v0 + 224);
    uint64_t v4 = *(void *)(v0 + 200);
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 192);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
    uint64_t v6 = sub_256CEDC68();
    os_log_type_t v7 = sub_256CEE2B8();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 200);
    if (v8)
    {
      unint64_t v13 = (_DWORD *)OUTLINED_FUNCTION_24_0();
      v23[0] = OUTLINED_FUNCTION_23_0();
      *unint64_t v13 = 136315138;
      uint64_t v14 = sub_256CEDDD8();
      *(void *)(v0 + 160) = sub_256BE14CC(v14, v15, v23);
      sub_256CEE308();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v16(v9, v12);
      OUTLINED_FUNCTION_42_0(&dword_256BD4000, v6, v17, "Acquiring assertion caught XPC error: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();

      v16(v10, v12);
    }
    else
    {

      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v19(v9, v12);
      v19(v10, v12);
    }

    uint64_t v20 = *(void *)(v0 + 272);
    OUTLINED_FUNCTION_13();
    os_activity_scope_leave((os_activity_scope_state_t)(v20 + 24));
    swift_endAccess();
    swift_release();
    OUTLINED_FUNCTION_27_0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 272);

    OUTLINED_FUNCTION_13();
    os_activity_scope_leave((os_activity_scope_state_t)(v18 + 24));
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
  }
  OUTLINED_FUNCTION_22();
  __asm { BRAA            X1, X16 }
}

void sub_256BDE9B0(char a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v6 = sub_256CEE178();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
    os_log_type_t v7 = (void *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = a2;
    swift_retain();
    sub_256BDB760();
    swift_release();
  }
  else
  {
    if (qword_26B2C8290 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_256CEDC88();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B2C8278);
    os_log_t v13 = (os_log_t)sub_256CEDC68();
    os_log_type_t v9 = sub_256CEE2D8();
    if (os_log_type_enabled(v13, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_256BD4000, v13, v9, "Can't retry modelmanagerd connection. Assertions cannot be restored.", v10, 2u);
      MEMORY[0x25A2AEBD0](v10, -1, -1);
    }
    os_log_t v11 = v13;
  }
}

uint64_t sub_256BDEB70()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF0;
  return sub_256BDFE78();
}

uint64_t sub_256BDEC00()
{
  OUTLINED_FUNCTION_12();
  v1[18] = v2;
  v1[19] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  OUTLINED_FUNCTION_21(v3);
  v1[20] = OUTLINED_FUNCTION_38();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_21(v4);
  v1[23] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256BDECEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_43();
  a25 = v31;
  a26 = v32;
  a24 = v27;
  a15 = *MEMORY[0x263EF8340];
  type metadata accessor for _OSActivity();
  v27[24] = swift_initStackObject();
  v27[25] = _OSActivity.init(_:)("Invalidating Assertion", 22, 2);
  uint64_t v33 = v27[19];
  if (*(void *)(v33 + 168))
  {
    OUTLINED_FUNCTION_35();
    if (!v34) {
      swift_once();
    }
    uint64_t v35 = sub_256CEDC88();
    __swift_project_value_buffer(v35, (uint64_t)qword_26B2C8278);
    v36 = sub_256CEDC68();
    os_log_type_t v37 = sub_256CEE2D8();
    if (os_log_type_enabled(v36, v37))
    {
      v26 = (_WORD *)swift_slowAlloc();
      _WORD *v26 = 0;
      OUTLINED_FUNCTION_61(&dword_256BD4000, v38, v39, "Waiting for assertion restoration to complete.");
      OUTLINED_FUNCTION_4();
    }
    uint64_t v40 = v27[19];

    uint64_t v41 = *(void *)(v40 + 168);
    v27[26] = v41;
    if (v41)
    {
      swift_retain();
      unint64_t v42 = (void *)swift_task_alloc();
      v27[27] = (uint64_t)v42;
      *unint64_t v42 = v27;
      v42[1] = sub_256BDF300;
      OUTLINED_FUNCTION_9_0();
      return MEMORY[0x270FA1FD0](v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    }
    uint64_t v33 = v27[19];
  }
  OUTLINED_FUNCTION_18();
  uint64_t v51 = *(os_activity_scope_state_s **)(v33 + 112);
  uint64_t v52 = swift_task_alloc();
  *(void *)(v52 + 16) = v26;
  sub_256CEDEC8();
  sub_256BDFC98((uint64_t (*)(char *))sub_256BE3998, v52, (uint64_t)v51);
  OUTLINED_FUNCTION_29_0();
  *(void *)(v28 + 80) = 0;
  *(void *)(v28 + 88) = v29;
  *(unsigned char *)(v28 + 104) = v30;
  swift_task_dealloc();
  if (v33)
  {
    uint64_t v53 = v27[23];
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_56_0();
    sub_256BE0EB8(v53);
    swift_endAccess();
    OUTLINED_FUNCTION_35();
    if (!v34) {
      swift_once();
    }
    uint64_t v54 = v27[22];
    uint64_t v55 = v27[18];
    uint64_t v56 = sub_256CEDC88();
    __swift_project_value_buffer(v56, (uint64_t)qword_26B2C8278);
    sub_256BE0F14(v55, v54);
    v57 = sub_256CEDC68();
    os_log_type_t v58 = sub_256CEE2D8();
    BOOL v59 = os_log_type_enabled(v57, v58);
    uint64_t v60 = v27[22];
    if (v59)
    {
      v61 = (uint64_t *)v27[21];
      OUTLINED_FUNCTION_24_0();
      a14 = OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_30(4.8149e-34);
      uint64_t v62 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      unint64_t v64 = v63;
      OUTLINED_FUNCTION_46(v62, (uint64_t *)&unk_26B2C8608);
      uint64_t v65 = sub_256BE14CC(v62, v64, &a14);
      OUTLINED_FUNCTION_40(v65);
      swift_bridgeObjectRelease();
      sub_256BE33C8(v60, v61);
      OUTLINED_FUNCTION_42_0(&dword_256BD4000, v57, v66, "Invalidating assertion: %s");
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      sub_256BE33C8(v27[22], (uint64_t *)&unk_26B2C8608);
    }

    OUTLINED_FUNCTION_31_0();
    v98 = (char *)v79 + *v79;
    uint64_t v99 = v78;
    v80 = (void *)swift_task_alloc();
    v27[30] = (uint64_t)v80;
    void *v80 = v27;
    v80[1] = sub_256BDFA0C;
    OUTLINED_FUNCTION_41_1(v27[18]);
    OUTLINED_FUNCTION_9_0();
    return v85(v81, v82, v83, v84, v85, v86, v87, v88, a9, a10, v98, v99, a13, a14, a15, a16, a17, a18);
  }
  else
  {
    OUTLINED_FUNCTION_35();
    if (!v34) {
      swift_once();
    }
    uint64_t v67 = v27[20];
    uint64_t v68 = v27[18];
    uint64_t v69 = sub_256CEDC88();
    __swift_project_value_buffer(v69, (uint64_t)qword_26B2C8278);
    sub_256BE0F14(v68, v67);
    v70 = sub_256CEDC68();
    os_log_type_t v71 = sub_256CEE2D8();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint64_t *)v27[21];
      a10 = v27[20];
      a11 = v27 + 16;
      OUTLINED_FUNCTION_24_0();
      a14 = OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_39_0(4.8149e-34);
      uint64_t v73 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      uint64_t v51 = v74;
      OUTLINED_FUNCTION_46(v73, (uint64_t *)&unk_26B2C8608);
      uint64_t v75 = sub_256BE14CC(v73, (unint64_t)v51, &a14);
      OUTLINED_FUNCTION_53_1(v75);
      swift_bridgeObjectRelease();
      sub_256BE33C8(a10, v72);
      OUTLINED_FUNCTION_47(&dword_256BD4000, v76, v77, "Assertion %s has already been removed.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      sub_256BE33C8(v27[20], (uint64_t *)&unk_26B2C8608);
    }

    OUTLINED_FUNCTION_11();
    os_activity_scope_leave(v51);
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_9_0();
    return v90(v89, v90, v91, v92, v93, v94, v95, v96, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  }
}

uint64_t sub_256BDF300()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BDF42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_43();
  a25 = v31;
  a26 = v32;
  a24 = v27;
  a15 = *MEMORY[0x263EF8340];
  uint64_t v33 = v27[19];
  if (*(void *)(v33 + 168))
  {
    OUTLINED_FUNCTION_35();
    if (!v34) {
      swift_once();
    }
    uint64_t v35 = sub_256CEDC88();
    __swift_project_value_buffer(v35, (uint64_t)qword_26B2C8278);
    v36 = sub_256CEDC68();
    os_log_type_t v37 = sub_256CEE2D8();
    if (os_log_type_enabled(v36, v37))
    {
      v26 = (_WORD *)swift_slowAlloc();
      _WORD *v26 = 0;
      OUTLINED_FUNCTION_61(&dword_256BD4000, v38, v39, "Waiting for assertion restoration to complete.");
      OUTLINED_FUNCTION_4();
    }
    uint64_t v40 = v27[19];

    uint64_t v41 = *(void *)(v40 + 168);
    v27[26] = v41;
    if (v41)
    {
      swift_retain();
      unint64_t v42 = (void *)swift_task_alloc();
      v27[27] = (uint64_t)v42;
      *unint64_t v42 = v27;
      v42[1] = sub_256BDF300;
      OUTLINED_FUNCTION_9_0();
      return MEMORY[0x270FA1FD0](v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    }
    uint64_t v33 = v27[19];
  }
  OUTLINED_FUNCTION_18();
  uint64_t v51 = *(os_activity_scope_state_s **)(v33 + 112);
  uint64_t v52 = swift_task_alloc();
  *(void *)(v52 + 16) = v26;
  sub_256CEDEC8();
  sub_256BDFC98((uint64_t (*)(char *))sub_256BE3998, v52, (uint64_t)v51);
  OUTLINED_FUNCTION_29_0();
  *(void *)(v28 + 80) = 0;
  *(void *)(v28 + 88) = v29;
  *(unsigned char *)(v28 + 104) = v30;
  swift_task_dealloc();
  if (v33)
  {
    uint64_t v53 = v27[23];
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_56_0();
    sub_256BE0EB8(v53);
    swift_endAccess();
    OUTLINED_FUNCTION_35();
    if (!v34) {
      swift_once();
    }
    uint64_t v54 = v27[22];
    uint64_t v55 = v27[18];
    uint64_t v56 = sub_256CEDC88();
    __swift_project_value_buffer(v56, (uint64_t)qword_26B2C8278);
    sub_256BE0F14(v55, v54);
    v57 = sub_256CEDC68();
    os_log_type_t v58 = sub_256CEE2D8();
    BOOL v59 = os_log_type_enabled(v57, v58);
    uint64_t v60 = v27[22];
    if (v59)
    {
      v61 = (uint64_t *)v27[21];
      OUTLINED_FUNCTION_24_0();
      a14 = OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_30(4.8149e-34);
      uint64_t v62 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      unint64_t v64 = v63;
      OUTLINED_FUNCTION_46(v62, (uint64_t *)&unk_26B2C8608);
      uint64_t v65 = sub_256BE14CC(v62, v64, &a14);
      OUTLINED_FUNCTION_40(v65);
      swift_bridgeObjectRelease();
      sub_256BE33C8(v60, v61);
      OUTLINED_FUNCTION_42_0(&dword_256BD4000, v57, v66, "Invalidating assertion: %s");
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      sub_256BE33C8(v27[22], (uint64_t *)&unk_26B2C8608);
    }

    OUTLINED_FUNCTION_31_0();
    v98 = (char *)v79 + *v79;
    uint64_t v99 = v78;
    v80 = (void *)swift_task_alloc();
    v27[30] = (uint64_t)v80;
    void *v80 = v27;
    v80[1] = sub_256BDFA0C;
    OUTLINED_FUNCTION_41_1(v27[18]);
    OUTLINED_FUNCTION_9_0();
    return v85(v81, v82, v83, v84, v85, v86, v87, v88, a9, a10, v98, v99, a13, a14, a15, a16, a17, a18);
  }
  else
  {
    OUTLINED_FUNCTION_35();
    if (!v34) {
      swift_once();
    }
    uint64_t v67 = v27[20];
    uint64_t v68 = v27[18];
    uint64_t v69 = sub_256CEDC88();
    __swift_project_value_buffer(v69, (uint64_t)qword_26B2C8278);
    sub_256BE0F14(v68, v67);
    v70 = sub_256CEDC68();
    os_log_type_t v71 = sub_256CEE2D8();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint64_t *)v27[21];
      a10 = v27[20];
      a11 = v27 + 16;
      OUTLINED_FUNCTION_24_0();
      a14 = OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_39_0(4.8149e-34);
      uint64_t v73 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      uint64_t v51 = v74;
      OUTLINED_FUNCTION_46(v73, (uint64_t *)&unk_26B2C8608);
      uint64_t v75 = sub_256BE14CC(v73, (unint64_t)v51, &a14);
      OUTLINED_FUNCTION_53_1(v75);
      swift_bridgeObjectRelease();
      sub_256BE33C8(a10, v72);
      OUTLINED_FUNCTION_47(&dword_256BD4000, v76, v77, "Assertion %s has already been removed.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      sub_256BE33C8(v27[20], (uint64_t *)&unk_26B2C8608);
    }

    OUTLINED_FUNCTION_11();
    os_activity_scope_leave(v51);
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_9_0();
    return v90(v89, v90, v91, v92, v93, v94, v95, v96, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  }
}

uint64_t sub_256BDFA0C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 152);
  if (v0)
  {

    uint64_t v6 = sub_256BE3B80;
  }
  else
  {
    uint64_t v6 = sub_256BDFB64;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256BDFB64()
{
  OUTLINED_FUNCTION_59();
  sub_256BE39B8(*(void *)(v0 + 224), *(void *)(v0 + 232), *(unsigned char *)(v0 + 248));
  OUTLINED_FUNCTION_11();
  os_activity_scope_leave(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_256BDFC48()
{
  return _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1;
}

uint64_t sub_256BDFC98(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a1;
  uint64_t v5 = type metadata accessor for Assertion.DaemonRep(0);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t result = sub_256BE34FC(a3);
  if (v13)
  {
LABEL_11:
    __break(1u);
    return 0;
  }
  else
  {
    int64_t v14 = result;
    int v15 = v12;
    while (*(_DWORD *)(a3 + 36) == v15)
    {
      uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
      if (v14 == v16) {
        return 0;
      }
      if (v14 < 0 || v14 >= v16) {
        goto LABEL_15;
      }
      if (((*(void *)(a3 + 56 + (((unint64_t)v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_16;
      }
      sub_256BE1270(*(void *)(a3 + 48) + *(void *)(v21 + 72) * v14, (uint64_t)v10);
      sub_256BE38B0((uint64_t)v10, (uint64_t)v8);
      char v17 = v22(v8);
      sub_256BE0EB8((uint64_t)v8);
      if (v3 || (v17 & 1) != 0) {
        return v14;
      }
      uint64_t result = sub_256BE3418(v14, v15, 0, a3);
      int64_t v14 = result;
      int v15 = v18;
      if (v19) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_256BDFE78()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  OUTLINED_FUNCTION_21(v2);
  *(void *)(v1 + 24) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BDFEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_12();
  uint64_t v20 = v18[2];
  uint64_t v19 = v18[3];
  uint64_t v21 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload(v19, 1, 1, v21);
  uint64_t v23 = sub_256BE218C(&qword_269FC28D8, v22, (void (*)(uint64_t))type metadata accessor for Assertion.Collection);
  v24 = (void *)swift_allocObject();
  void v24[2] = v20;
  v24[3] = v23;
  v24[4] = v20;
  swift_retain_n();
  uint64_t v25 = sub_256BDB760();
  v18[4] = v25;
  uint64_t v26 = swift_retain();
  sub_256BDDB1C(v26);
  uint64_t v27 = (void *)swift_task_alloc();
  v18[5] = v27;
  *uint64_t v27 = v18;
  v27[1] = sub_256BE0050;
  uint64_t v33 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA1FD0](v27, v25, v33, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_256BE0050()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BE012C()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256BE018C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a4;
  uint64_t v6 = type metadata accessor for Assertion.DaemonRep(0);
  v4[19] = v6;
  v4[20] = *(void *)(v6 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  v4[23] = v7;
  v4[24] = *(void *)(v7 - 8);
  v4[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256BE02F4, a4, 0);
}

uint64_t sub_256BE02F4()
{
  uint64_t v40 = v0;
  v39[1] = *MEMORY[0x263EF8340];
  type metadata accessor for _OSActivity();
  v0[26] = swift_initStackObject();
  v0[27] = _OSActivity.init(_:)("Restoring Assertions", 20, 2);
  if (qword_26B2C8290 != -1) {
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v1 = sub_256CEDC88();
    v0[28] = __swift_project_value_buffer(v1, (uint64_t)qword_26B2C8278);
    swift_retain_n();
    uint64_t v2 = sub_256CEDC68();
    os_log_type_t v3 = sub_256CEE2D8();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = v0[18];
    if (!v4)
    {

      swift_release_n();
      goto LABEL_17;
    }
    os_log_type_t v34 = v3;
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    v39[0] = OUTLINED_FUNCTION_23_0();
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_beginAccess();
    uint64_t v7 = *(void *)(v5 + 112);
    int64_t v8 = *(void *)(v7 + 16);
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (!v8) {
      break;
    }
    uint64_t v32 = v6;
    uint64_t v33 = v2;
    uint64_t v10 = v0[24];
    uint64_t v35 = v0[19];
    uint64_t v36 = v0[20];
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_256CEDEC8();
    sub_256BE1D80(0, v8, 0);
    int64_t v11 = sub_256BE34FC(v7);
    int v13 = v12;
    char v15 = v14 & 1;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(v7 + 32))
    {
      if (((*(void *)(v7 + 56 + (((unint64_t)v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_21;
      }
      if (*(_DWORD *)(v7 + 36) != v13) {
        goto LABEL_22;
      }
      uint64_t v16 = v0[25];
      uint64_t v17 = v0[21];
      uint64_t v18 = v0[22];
      sub_256BE1270(*(void *)(v7 + 48) + *(void *)(v36 + 72) * v11, v18);
      sub_256BE38B0(v18, v17);
      sub_256BE0F14(v17 + *(int *)(v35 + 28), v16);
      sub_256BE0EB8(v17);
      uint64_t v9 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_256BE1D80(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v9 = v38;
      }
      unint64_t v20 = *(void *)(v9 + 16);
      unint64_t v19 = *(void *)(v9 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_256BE1D80(v19 > 1, v20 + 1, 1);
        uint64_t v9 = v38;
      }
      uint64_t v21 = v0[25];
      *(void *)(v9 + 16) = v20 + 1;
      sub_256BE1034(v21, v9+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v20);
      int64_t v22 = sub_256BE3418(v11, v13, v15 & 1, v7);
      int64_t v11 = v22;
      int v13 = v23;
      char v15 = v24 & 1;
      if (!--v8)
      {
        sub_256BE3914(v22, v23, v24 & 1);
        swift_bridgeObjectRelease();
        uint64_t v2 = v33;
        uint64_t v6 = v32;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_once();
  }
LABEL_16:
  uint64_t v25 = MEMORY[0x25A2ADD60](v9, v0[23]);
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  v0[17] = sub_256BE14CC(v25, v27, v39);
  sub_256CEE308();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_256BD4000, v2, v34, "Restoring assertions: %s", v6, 0xCu);
  swift_arrayDestroy();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_4();

LABEL_17:
  uint64_t v28 = (void *)v0[18];
  uint64_t v29 = v28[20];
  __swift_project_boxed_opaque_existential_1(v28 + 16, v28[19]);
  swift_beginAccess();
  v0[29] = v28[14];
  os_log_type_t v37 = (uint64_t (*)(void))(*(void *)(v29 + 32) + **(int **)(v29 + 32));
  sub_256CEDEC8();
  uint64_t v30 = (void *)swift_task_alloc();
  v0[30] = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_256BE07F4;
  OUTLINED_FUNCTION_55();
  return v37();
}

uint64_t sub_256BE07F4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *BOOL v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  *(void *)(v3 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 144);
    int64_t v8 = sub_256BE0A28;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 144);
    swift_bridgeObjectRelease();
    int64_t v8 = sub_256BE0934;
    uint64_t v7 = v9;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256BE0934()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = *(void *)(v0 + 216);
  sub_256BDDB1C(0);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v1 + 24));
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_256BE0A28()
{
  uint64_t v1 = v0[31];
  swift_bridgeObjectRelease();
  MEMORY[0x25A2AE9C0](v1);
  MEMORY[0x25A2AE9C0](v1);
  uint64_t v2 = sub_256CEDC68();
  os_log_type_t v3 = sub_256CEE2B8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (void *)v0[31];
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    MEMORY[0x25A2AE9C0](v4);
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    sub_256CEE308();
    void *v6 = v7;

    _os_log_impl(&dword_256BD4000, v2, v3, "Failed to restore all assertions: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    int64_t v8 = (void *)v0[31];
  }
  uint64_t v9 = v0[27];
  sub_256BDDB1C(0);
  OUTLINED_FUNCTION_13();
  os_activity_scope_leave((os_activity_scope_state_t)(v9 + 24));
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_256BE0C58()
{
  type metadata accessor for Assertion.Collection();
  uint64_t v0 = swift_allocObject();
  os_log_type_t v3 = &type metadata for Assertion.LiveDaemonInterface;
  uint64_t v4 = &protocol witness table for Assertion.LiveDaemonInterface;
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x263F8EE88];
  *(unsigned char *)(v0 + 120) = 0;
  *(void *)(v0 + 168) = 0;
  uint64_t result = sub_256BE3924(&v2, v0 + 128);
  qword_26B2C7AF8 = v0;
  return result;
}

uint64_t static Assertion.Collection.default.getter()
{
  if (qword_26B2C7B00 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t Assertion.Collection.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t Assertion.Collection.__deallocating_deinit()
{
  Assertion.Collection.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t Assertion.Collection.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_256BE0D9C()
{
  return Assertion.Collection.unownedExecutor.getter();
}

void default argument 1 of InferenceProviderDescriptor.init(id:instance:hostedOnServer:)(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t default argument 2 of InferenceProviderDescriptor.init(id:instance:hostedOnServer:)()
{
  return 0;
}

uint64_t default argument 0 of ClientData.init(_:)()
{
  return 0;
}

uint64_t default argument 3 of Session.init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:sessionSetID:client:)()
{
  return 0;
}

uint64_t default argument 1 of ModelServiceClient.init(sender:runningBoardAssertions:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for RunningBoardSelfAssertions();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8718);
  sub_256BE20F4();
  uint64_t result = sub_256CEDEB8();
  *(void *)(v3 + 112) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_27061B0B0;
  *a1 = v3;
  return result;
}

void default argument 0 of Policy.init(assetPolicy:memoryBudget:cancelPriority:inactiveAssetTimeout:assetTransitionDelay:)(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void default argument 2 of Policy.init(assetPolicy:memoryBudget:cancelPriority:inactiveAssetTimeout:assetTransitionDelay:)(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t default argument 0 of TaskCancellingXPCReceivedMessage.init(isSync:auditToken:request:)()
{
  return 0;
}

double default argument 1 of TaskCancellingXPCReceivedMessage.init(isSync:auditToken:request:)@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t type metadata accessor for Assertion.DaemonRep(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C8CC8);
}

uint64_t sub_256BE0EB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Assertion.DaemonRep(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256BE0F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256BE0F7C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  OUTLINED_FUNCTION_6(v0);
  swift_unknownObjectRelease();
  swift_release();
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v1();
  OUTLINED_FUNCTION_55();
  return MEMORY[0x270FA0238](v2, v3, v4);
}

uint64_t sub_256BE1034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256BE109C()
{
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  return sub_256BDB6C4();
}

unint64_t sub_256BE1194()
{
  unint64_t result = qword_26B2C8620;
  if (!qword_26B2C8620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8620);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_256BE1228(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B2C8608);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256BE1270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Assertion.DaemonRep(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256BE12D4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_256BE3C08;
  return v6(a1);
}

uint64_t sub_256BE13B0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0
    || ((uint64_t v5 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608) - 8)
                        + 72)
            * a2,
         unint64_t v6 = a3 + v5,
         unint64_t v7 = a1 + v5,
         v6 > a1)
      ? (BOOL v8 = v7 > a3)
      : (BOOL v8 = 0),
        v8))
  {
    uint64_t result = sub_256CEE428();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_256BE14CC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_20();
  uint64_t v9 = sub_256BE159C(v6, v7, v8, 1, a1, a2);
  uint64_t v10 = v15[0];
  if (v9)
  {
    uint64_t v11 = v9;
    uint64_t ObjectType = swift_getObjectType();
    v15[0] = v11;
    uint64_t v12 = *a3;
    if (*a3)
    {
      sub_256BE393C((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v15[0] = a1;
    v15[1] = a2;
    uint64_t v13 = *a3;
    if (*a3)
    {
      sub_256BE393C((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }
    sub_256CEDEC8();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v10;
}

uint64_t sub_256BE159C(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_256BE16F4((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_256CEE318();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_256BE17CC(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_256CEE3A8();
    if (!v8)
    {
      uint64_t result = sub_256CEE3F8();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_256BE16F4(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_256CEE428();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_256BE17CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_256BE1864(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_256BE1A40(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_256BE1A40((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_256BE1864(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_256CEDFC8();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = sub_256BE19D8(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_256CEE378();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_256CEE428();
  __break(1u);
LABEL_14:
  uint64_t result = sub_256CEE3F8();
  __break(1u);
  return result;
}

void *sub_256BE19D8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C50B0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_256BE1A40(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C50B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_256BE1BF0(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_256BE1B18(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_256BE1B18(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_256CEE428();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_256BE1BF0(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_256CEE428();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_256BE1C80@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a1 < 0 || (uint64_t v9 = *v4, 1 << *(unsigned char *)(*v4 + 32) <= a1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (((*(void *)(v9 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*(_DWORD *)(v9 + 36) == a2)
  {
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  __break(1u);
LABEL_12:
  sub_256CE7CA0();
  uint64_t v9 = v13;
LABEL_6:
  uint64_t v10 = *(void *)(v9 + 48);
  uint64_t v11 = type metadata accessor for Assertion.DaemonRep(0);
  sub_256BE38B0(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3);
  sub_256CE8CDC();
  *unint64_t v4 = v13;
  return swift_bridgeObjectRelease();
}

size_t sub_256BE1D80(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_256BE1DA0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_256BE1DA0(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4878);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_24;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (unint64_t)v13 + v16;
  unint64_t v18 = a4 + v16;
  if (v5)
  {
    sub_256CE52A8(v18, v8, v17);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_256BE13B0(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_256BE1F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Assertion.Collection();
  uint64_t v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  uint64_t v11 = sub_256BE2054((uint64_t)v9, v10, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  return v11;
}

uint64_t sub_256BE2054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  swift_defaultActor_initialize();
  *(void *)(a2 + 112) = MEMORY[0x263F8EE88];
  *(unsigned char *)(a2 + 120) = 0;
  *(void *)(a2 + 168) = 0;
  sub_256BE3924(&v9, a2 + 128);
  return a2;
}

unint64_t sub_256BE20F4()
{
  unint64_t result = qword_26B2C86E0;
  if (!qword_26B2C86E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C86E0);
  }
  return result;
}

uint64_t sub_256BE2140()
{
  return sub_256BE218C((unint64_t *)&unk_269FC27C8, 255, (void (*)(uint64_t))type metadata accessor for Assertion);
}

uint64_t sub_256BE218C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Assertion(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C85E0);
}

uint64_t sub_256BE21F4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256BE2228()
{
  return sub_256BE218C((unint64_t *)&unk_26B2C8650, 255, (void (*)(uint64_t))type metadata accessor for Assertion.DaemonRep);
}

uint64_t dispatch thunk of AssertionDaemonInterface.acquire(_:)()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_17();
  return v4(v3);
}

uint64_t dispatch thunk of AssertionDaemonInterface.invalidate(_:)()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_17();
  return v4(v3);
}

uint64_t dispatch thunk of AssertionDaemonInterface.fetchAll()()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_60();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 24) + **(int **)(v2 + 24));
  uint64_t v3 = swift_task_alloc();
  unint64_t v4 = (void *)OUTLINED_FUNCTION_14(v3);
  *unint64_t v4 = v5;
  v4[1] = sub_256BE2518;
  return v7(v1, v0);
}

uint64_t sub_256BE2518()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *unint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t dispatch thunk of AssertionDaemonInterface.restore(_:)()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_17();
  return v4(v3);
}

uint64_t sub_256BE26C4()
{
  return type metadata accessor for Assertion(0);
}

uint64_t sub_256BE26CC()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Assertion(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Assertion);
}

uint64_t dispatch thunk of Assertion.__allocating_init(policy:description:collection:osEligibilityChecker:)()
{
  OUTLINED_FUNCTION_34();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 120) + **(int **)(v0 + 120));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3C04;
  uint64_t v4 = OUTLINED_FUNCTION_26_1();
  return v6(v4);
}

uint64_t *initializeBufferWithCopyOfBuffer for Assertion.DaemonRep(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    a1[4] = a2[4];
    uint64_t v12 = sub_256CEDB08();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_256CEDEC8();
    sub_256CEDEC8();
    v13(v10, v11, v12);
    *(_DWORD *)((char *)v4 + *(int *)(a3 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t destroy for Assertion.DaemonRep(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_256CEDB08();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for Assertion.DaemonRep(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_256CEDB08();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  v12(v9, v10, v11);
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *assignWithCopy for Assertion.DaemonRep(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t initializeWithTake for Assertion.DaemonRep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_DWORD *)(a1 + *(int *)(a3 + 32)) = *(_DWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

void *assignWithTake for Assertion.DaemonRep(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for Assertion.DaemonRep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256BE2D3C);
}

uint64_t sub_256BE2D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Assertion.DaemonRep(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256BE2DDC);
}

uint64_t sub_256BE2DDC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B2C8608);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_256BE2E60()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Assertion.LiveDaemonInterface()
{
  return &type metadata for Assertion.LiveDaemonInterface;
}

uint64_t type metadata accessor for Assertion.Collection()
{
  return self;
}

uint64_t method lookup function for Assertion.Collection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Assertion.Collection);
}

uint64_t dispatch thunk of Assertion.Collection.allAssertions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of Assertion.Collection.allAssertions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of Assertion.Collection.allAssertions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of Assertion.Collection.__allocating_init(daemonInterface:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t initializeBufferWithCopyOfBuffer for InferenceError.Context(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t getEnumTagSinglePayload for AuditToken(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AuditToken(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_256BE3080(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_256BE30A0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void sub_256BE30F0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for Assertion.DaemonRep.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Assertion.DaemonRep.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256BE328CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_256BE32B4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_256BE32C0(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Assertion.DaemonRep.CodingKeys()
{
  return &type metadata for Assertion.DaemonRep.CodingKeys;
}

unint64_t sub_256BE32DC()
{
  unint64_t result = qword_269FC28B0;
  if (!qword_269FC28B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC28B0);
  }
  return result;
}

unint64_t sub_256BE332C()
{
  unint64_t result = qword_26B2C8638;
  if (!qword_26B2C8638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8638);
  }
  return result;
}

unint64_t sub_256BE337C()
{
  unint64_t result = qword_26B2C8630;
  if (!qword_26B2C8630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8630);
  }
  return result;
}

uint64_t sub_256BE33C8(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v3();
  return a1;
}

int64_t sub_256BE3418(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_256BE34FC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_256BE357C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  char v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_256BE365C;
  return v5(v2 + 32);
}

uint64_t sub_256BE365C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  char v5 = *(unsigned char **)(v4 + 16);
  uint64_t v6 = *v0;
  OUTLINED_FUNCTION_1();
  *unint64_t v7 = v6;
  swift_task_dealloc();
  unsigned char *v5 = *(unsigned char *)(v2 + 32);
  unint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
  return v8();
}

uint64_t sub_256BE373C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256BE3774()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_33_1();
  return v4(v3);
}

uint64_t sub_256BE3814()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256BE018C(v3, v4, v5, v6);
}

uint64_t sub_256BE38B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Assertion.DaemonRep(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256BE3914(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_256BE3924(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_256BE393C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_256BE3998()
{
  return sub_256BDFC48() & 1;
}

uint64_t sub_256BE39B8(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_256BE3914(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_256BE39D0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_33_1();
  return v4(v3);
}

void sub_256BE3A6C(char a1)
{
  sub_256BDE9B0(a1, v1);
}

uint64_t sub_256BE3A74(unsigned __int8 *a1)
{
  return sub_256C91C4C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_256BE3A80()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_45_0();
  return sub_256BDEB70();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_256BE3B80()
{
  OUTLINED_FUNCTION_2();
  return sub_256BDFB64();
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v1[19]);
  return v2 + 16;
}

void OUTLINED_FUNCTION_42_0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return sub_256BE1C80(v0, v1, v2);
}

uint64_t InferenceError.Context.additionalDescription.getter()
{
  uint64_t v1 = *v0;
  sub_256CEDEC8();
  return v1;
}

uint64_t InferenceError.Context.domain.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_256CEDEC8();
  return v1;
}

uint64_t InferenceError.Context.code.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t InferenceError.Context.userInfo.getter()
{
  return sub_256CEDEC8();
}

uint64_t InferenceError.Context.fallbackAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

void __swiftcall InferenceError.Context.init(additionalDescription:domain:code:userInfo:fallbackAllowed:)(ModelManagerServices::InferenceError::Context *__return_ptr retstr, Swift::String additionalDescription, Swift::String domain, Swift::Int code, Swift::OpaquePointer userInfo, Swift::Bool fallbackAllowed)
{
  retstr->additionalDescription = additionalDescription;
  retstr->domain = domain;
  retstr->code = code;
  retstr->userInfo = userInfo;
  retstr->fallbackAllowed = fallbackAllowed;
}

uint64_t static InferenceError.Context.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  BOOL v12 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v12 || (v13 = sub_256CEE6C8(), uint64_t result = 0, (v13 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      if (v4 != v10) {
        return 0;
      }
    }
    else
    {
      char v16 = sub_256CEE6C8();
      uint64_t result = 0;
      if ((v16 & 1) == 0 || v4 != v10) {
        return result;
      }
    }
    if (sub_256BE3E04(v5, v9)) {
      return v6 ^ v11 ^ 1u;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_256BE3E04(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v26) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v26) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v10);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_256CEDEC8();
    sub_256CEDEC8();
    unint64_t v20 = sub_256C9BC20(v15, v16);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v23 = (void *)(*(void *)(a2 + 56) + 16 * v20);
    if (*v23 == v19 && v23[1] == v18)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = sub_256CEE6C8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v25 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v26) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v26) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_256BE4020(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000256CFFE60 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
    if (v5 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 1701080931 && a2 == 0xE400000000000000;
      if (v6 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v7 = a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000;
        if (v7 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEF6465776F6C6C41)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_256CEE6C8();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

unint64_t sub_256BE4214(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E69616D6F64;
      break;
    case 2:
      unint64_t result = 1701080931;
      break;
    case 3:
      unint64_t result = 0x6F666E4972657375;
      break;
    case 4:
      unint64_t result = 0x6B6361626C6C6166;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_256BE42CC()
{
  return sub_256BE4214(*v0);
}

uint64_t sub_256BE42D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BE4020(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256BE42FC(uint64_t a1)
{
  unint64_t v2 = sub_256BE456C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE4338(uint64_t a1)
{
  unint64_t v2 = sub_256BE456C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceError.Context.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2970);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256BE456C();
  sub_256CEE878();
  sub_256CEE568();
  if (!v0)
  {
    OUTLINED_FUNCTION_42_1();
    sub_256CEE568();
    OUTLINED_FUNCTION_42_1();
    sub_256CEE598();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2980);
    sub_256BE48D0(&qword_269FC2988);
    OUTLINED_FUNCTION_42_1();
    sub_256CEE5A8();
    OUTLINED_FUNCTION_42_1();
    sub_256CEE578();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_33();
}

unint64_t sub_256BE456C()
{
  unint64_t result = qword_269FC2978;
  if (!qword_269FC2978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2978);
  }
  return result;
}

void InferenceError.Context.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2990);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_28_2();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256BE456C();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_256CEE498();
    uint64_t v8 = v7;
    uint64_t v16 = v6;
    sub_256CEDEC8();
    uint64_t v9 = sub_256CEE498();
    uint64_t v17 = v10;
    uint64_t v15 = v9;
    sub_256CEDEC8();
    uint64_t v14 = sub_256CEE4C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2980);
    sub_256BE48D0(&qword_269FC2998);
    sub_256CEE4D8();
    sub_256CEDEC8();
    char v11 = sub_256CEE4A8();
    uint64_t v12 = OUTLINED_FUNCTION_13_0();
    v13(v12);
    *(void *)uint64_t v4 = v16;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v15;
    *(void *)(v4 + 24) = v17;
    *(void *)(v4 + 32) = v14;
    *(void *)(v4 + 40) = v18;
    *(unsigned char *)(v4 + 48) = v11 & 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256BE48D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC2980);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256BE4934()
{
}

void sub_256BE494C()
{
}

uint64_t InferenceError.description.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 >> 3 >= 0xF)
  {
    if (v1 >> 3 == 15)
    {
      sub_256CEE368();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_15_0();
      sub_256CEDFB8();
      swift_bridgeObjectRelease();
      sub_256CEDFB8();
      sub_256CEDFB8();
      return v3;
    }
    sub_256CEE368();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_15_0();
    sub_256CEDFB8();
  }
  else
  {
    sub_256BE952C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v1);
    sub_256CEE368();
    uint64_t v3 = 0;
    sub_256CEDFB8();
    InferenceError.caseName.getter();
    sub_256CEDFB8();
    swift_bridgeObjectRelease();
    sub_256CEDFB8();
    sub_256CEE3B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t InferenceError.context.getter@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(unsigned __int8 *)(v1 + 48);
  if (v3 > 0x77)
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    char v8 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v5 = *(void *)(v1 + 40);
    uint64_t v7 = *(void *)(v1 + 16);
    uint64_t v6 = *(void *)(v1 + 24);
    char v8 = v3 & 1;
    uint64_t v10 = *(void *)v1;
    uint64_t v9 = *(void *)(v1 + 8);
    uint64_t result = sub_256BE952C(*(void *)v1, v9, v7, v6, v4, v5, v3);
  }
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v8;
  return result;
}

unint64_t InferenceError.caseName.getter()
{
  uint64_t v1 = *v0;
  unsigned int v2 = *((unsigned __int8 *)v0 + 48);
  unint64_t result = 0xD00000000000001BLL;
  switch(v2 >> 3)
  {
    case 1u:
      unint64_t result = 0xD000000000000011;
      break;
    case 2u:
    case 3u:
      unint64_t result = 0xD000000000000016;
      break;
    case 4u:
      unint64_t result = 0x4C79646165726C61;
      break;
    case 5u:
      unint64_t result = 0x6564616F4C746F6ELL;
      break;
    case 6u:
      unint64_t result = 0x6C69614664616F6CLL;
      break;
    case 7u:
      unint64_t result = 0x636E657265666E69;
      break;
    case 8u:
      unint64_t result = 0xD000000000000013;
      break;
    case 9u:
      unint64_t result = 0x6F4E6D6165727473;
      break;
    case 0xAu:
      unint64_t result = 0x696D694C65746172;
      break;
    case 0xBu:
      unint64_t result = 0x6C616E7265746E69;
      break;
    case 0xCu:
      unint64_t result = 0x456B726F7774656ELL;
      break;
    case 0xDu:
      unint64_t result = 0x656372756F736572;
      break;
    case 0xEu:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0xFu:
      return result;
    case 0x10u:
      unint64_t result = 0x726F727245637078;
      break;
    case 0x11u:
      uint64_t v4 = v0[3];
      uint64_t v5 = v0[4] | v0[5];
      uint64_t v6 = v0[2] | v0[1];
      if (v2 != 136 || v5 | v1 | v4 | v6)
      {
        BOOL v7 = v2 == 136;
        BOOL v9 = v1 == 1 && (v5 | v4 | v6) == 0;
        if (v7 && v9) {
          unint64_t result = 0xD000000000000012;
        }
        else {
          unint64_t result = 0xD000000000000014;
        }
      }
      else
      {
        unint64_t result = 0x6669636570736E75;
      }
      break;
    default:
      unint64_t result = 0x656C706D49746F6ELL;
      break;
  }
  return result;
}

void InferenceError.init(wrapping:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x25A2AE9C0]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  if (swift_dynamicCast())
  {

    uint64_t v4 = v20;
    uint64_t v5 = v22;
    uint64_t v6 = v23;
    uint64_t v7 = v24;
    id v8 = v25;
    uint64_t v9 = v26;
    char v10 = v27;
  }
  else
  {
    char v11 = (void *)sub_256CED9C8();
    if (qword_26B2C8CC0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_256CEDC88();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B2C8CA8);
    MEMORY[0x25A2AE9C0](a1);
    MEMORY[0x25A2AE9C0](a1);
    int64_t v13 = sub_256CEDC68();
    os_log_type_t v14 = sub_256CEE2B8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412290;
      MEMORY[0x25A2AE9C0](a1);
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_256CEE308();
      *uint64_t v16 = v21;

      _os_log_impl(&dword_256BD4000, v13, v14, "got unrecognized error %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      swift_arrayDestroy();
      MEMORY[0x25A2AEBD0](v16, -1, -1);
      MEMORY[0x25A2AEBD0](v15, -1, -1);
    }
    else
    {
    }
    MEMORY[0x25A2AE9C0](a1);
    uint64_t v4 = sub_256CEDF88();
    uint64_t v5 = v17;
    id v18 = objc_msgSend(v11, sel_domain);
    uint64_t v6 = sub_256CEDF48();
    uint64_t v7 = v19;

    id v8 = objc_msgSend(v11, sel_code);
    uint64_t v9 = sub_256CEDEB8();

    char v10 = 112;
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(unsigned char *)(a2 + 48) = v10;
}

uint64_t InferenceError.errorCode.getter()
{
  uint64_t v1 = *v0;
  unsigned int v2 = *((unsigned __int8 *)v0 + 48);
  uint64_t result = 2001;
  switch(v2 >> 3)
  {
    case 1u:
      uint64_t result = 2014;
      break;
    case 2u:
      uint64_t result = 2003;
      break;
    case 3u:
      uint64_t result = 2004;
      break;
    case 4u:
      uint64_t result = 2005;
      break;
    case 5u:
      uint64_t result = 2006;
      break;
    case 6u:
      uint64_t result = 2007;
      break;
    case 7u:
      uint64_t result = 2008;
      break;
    case 8u:
      uint64_t result = 2009;
      break;
    case 9u:
      uint64_t result = 2010;
      break;
    case 0xAu:
      uint64_t result = 2011;
      break;
    case 0xBu:
      uint64_t result = 2012;
      break;
    case 0xCu:
      uint64_t result = 2016;
      break;
    case 0xDu:
      uint64_t result = 2017;
      break;
    case 0xEu:
    case 0xFu:
      return result;
    case 0x10u:
      uint64_t result = 2015;
      break;
    case 0x11u:
      uint64_t v4 = v0[3];
      uint64_t v5 = v0[4] | v0[5];
      uint64_t v6 = v0[2] | v0[1];
      if (v2 == 136 && (v5 | v1 | v4 | v6) == 0)
      {
        uint64_t result = 2000;
      }
      else
      {
        if (v5 | v4 | v6) {
          BOOL v8 = 0;
        }
        else {
          BOOL v8 = v1 == 1;
        }
        if (v8 && v2 == 136) {
          uint64_t result = 2013;
        }
        else {
          uint64_t result = 2018;
        }
      }
      break;
    default:
      uint64_t result = 2002;
      break;
  }
  return result;
}

uint64_t static InferenceError.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  unsigned int v10 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v12 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 40);
  unsigned int v17 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v188 = v14;
  uint64_t v193 = *(void *)a2;
  uint64_t v196 = v11;
  switch(v10 >> 3)
  {
    case 1u:
      if ((v17 & 0xF8) == 8) {
        goto LABEL_39;
      }
      goto LABEL_73;
    case 2u:
      if ((v17 & 0xF8) != 0x10) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 3u:
      if ((v17 & 0xF8) != 0x18) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 4u:
      if ((v17 & 0xF8) != 0x20) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 5u:
      if ((v17 & 0xF8) != 0x28) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 6u:
      if ((v17 & 0xF8) != 0x30) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 7u:
      if ((v17 & 0xF8) != 0x38) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 8u:
      if ((v17 & 0xF8) != 0x40) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 9u:
      if ((v17 & 0xF8) != 0x48) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 0xAu:
      if ((v17 & 0xF8) != 0x50) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 0xBu:
      if ((v17 & 0xF8) != 0x58) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 0xCu:
      if ((v17 & 0xF8) != 0x60) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 0xDu:
      if ((v17 & 0xF8) == 0x68) {
        goto LABEL_39;
      }
      goto LABEL_73;
    case 0xEu:
      if ((v17 & 0xF8) != 0x70) {
        goto LABEL_73;
      }
LABEL_39:
      uint64_t v61 = OUTLINED_FUNCTION_14_1();
      uint64_t v173 = v62;
      uint64_t v66 = OUTLINED_FUNCTION_36_0(v61, v63, v64, v65);
      uint64_t v74 = OUTLINED_FUNCTION_22_2(v66, v67, v68, v69, v70, v71, v72, v73, v139, v144, v150, v157, v164, v173, v176);
      OUTLINED_FUNCTION_24_1(v74, v75, v76, v77, v78, v79, v80, v81, v142, v148, v154, v162, v167, v174, v180, v183, v14, v193, v196);
      uint64_t v82 = v175;
      uint64_t v83 = v181;
      sub_256BE952C(v4, v5, v181, v7, v175, v16, v10);
      static InferenceError.Context.== infix(_:_:)((uint64_t)v198, (uint64_t)v197);
      uint64_t v84 = OUTLINED_FUNCTION_25_1();
      uint64_t v87 = sub_256BE958C(v84, v85, v181, v7, v175, v86, v10);
      uint64_t v95 = OUTLINED_FUNCTION_34_0(v87, v88, v89, v90, v91, v92, v93, v94, v143, v149, v155, v163, v168, v175, v181, v186, v191, v195);
      sub_256BE958C(v95, v96, v97, v98, v187, v156, v17);
      sub_256BE958C(v82, v83, v192, v13, v187, v156, v17);
      uint64_t v54 = v4;
      uint64_t v55 = v5;
      uint64_t v56 = v182;
      uint64_t v57 = v7;
      goto LABEL_40;
    case 0xFu:
      if ((v17 & 0xF8) != 0x78) {
        goto LABEL_73;
      }
      goto LABEL_25;
    case 0x10u:
      if ((v17 & 0xF8) != 0x80) {
        goto LABEL_73;
      }
LABEL_25:
      uint64_t v147 = *(void *)(a1 + 24);
      uint64_t v172 = *(void *)(a1 + 32);
      uint64_t v161 = *(void *)(a1 + 40);
      if (v4 == v12 && v5 == v11)
      {
        LOBYTE(v14) = 1;
      }
      else
      {
        uint64_t v59 = *(void *)a2;
        uint64_t v14 = *(void *)(a2 + 8);
        char v60 = sub_256CEE6C8();
        uint64_t v12 = v59;
        uint64_t v11 = v14;
        LOBYTE(v14) = v60;
      }
      sub_256BE952C(v12, v11, v188, v13, v16, v15, v17);
      sub_256BE952C(v4, v5, v6, v147, v172, v161, v10);
      sub_256BE958C(v4, v5, v6, v147, v172, v161, v10);
      uint64_t v54 = v193;
      uint64_t v55 = v196;
      uint64_t v99 = v16;
      uint64_t v56 = v188;
      uint64_t v57 = v13;
      uint64_t v100 = v15;
      unsigned __int8 v101 = v17;
      goto LABEL_41;
    case 0x11u:
      if (!(v6 | v5 | v4 | v7 | v8 | v9) && v10 == 136)
      {
        if ((v17 & 0xF8) == 0x88 && !(v14 | v11 | v12 | v13 | v16 | v15) && v17 == 136)
        {
          OUTLINED_FUNCTION_20_3(0, a2, a3, a4, v8, v9);
LABEL_72:
          OUTLINED_FUNCTION_40_0();
          sub_256BE958C(v117, v118, v119, v120, v121, v122, v123);
          LOBYTE(v14) = 1;
          return v14 & 1;
        }
        goto LABEL_73;
      }
      BOOL v102 = v10 == 136 && v4 == 1;
      if (!v102 || v6 | v5 | v7 | v8 | v9)
      {
        if ((v17 & 0xF8) == 0x88 && v17 == 136 && v12 == 2)
        {
          OUTLINED_FUNCTION_38_0();
          if (!v116)
          {
            OUTLINED_FUNCTION_20_3(2, v111, v112, v113, v114, v115);
            goto LABEL_72;
          }
        }
        goto LABEL_73;
      }
      if ((v17 & 0xF8) != 0x88
        || (v17 == 136 ? (BOOL v103 = v12 == 1) : (BOOL v103 = 0), !v103 || (OUTLINED_FUNCTION_38_0(), v109)))
      {
LABEL_73:
        sub_256BE952C(v12, v11, v14, v13, v16, v15, v17);
        uint64_t v124 = OUTLINED_FUNCTION_21_0();
        sub_256BE952C(v124, v125, v126, v127, v128, v129, v130);
        uint64_t v131 = OUTLINED_FUNCTION_21_0();
        sub_256BE958C(v131, v132, v133, v134, v135, v136, v137);
        sub_256BE958C(v193, v196, v14, v13, v16, v15, v17);
        LOBYTE(v14) = 0;
        return v14 & 1;
      }
      LOBYTE(v14) = 1;
      OUTLINED_FUNCTION_20_3(1, v104, v105, v106, v107, v108);
      OUTLINED_FUNCTION_40_0();
LABEL_41:
      sub_256BE958C(v54, v55, v56, v57, v99, v100, v101);
      return v14 & 1;
    default:
      if (v17 >= 8) {
        goto LABEL_73;
      }
      uint64_t v18 = OUTLINED_FUNCTION_14_1();
      uint64_t v22 = OUTLINED_FUNCTION_36_0(v18, v19, v20, v21);
      uint64_t v30 = OUTLINED_FUNCTION_22_2(v22, v23, v24, v25, v26, v27, v28, v29, v139, v144, v150, v157, v164, v169, v176);
      OUTLINED_FUNCTION_24_1(v30, v31, v32, v33, v34, v35, v36, v37, v140, v145, v151, v158, v165, v170, v177, v183, v14, v193, v196);
      uint64_t v38 = v178;
      sub_256BE952C(v4, v5, v178, v7, v6, v16, v10);
      static InferenceError.Context.== infix(_:_:)((uint64_t)v198, (uint64_t)v197);
      uint64_t v39 = OUTLINED_FUNCTION_25_1();
      uint64_t v42 = sub_256BE958C(v39, v40, v178, v7, v6, v41, v10);
      uint64_t v50 = OUTLINED_FUNCTION_34_0(v42, v43, v44, v45, v46, v47, v48, v49, v141, v7, v152, v159, v166, v6, v178, v184, v189, v194);
      sub_256BE958C(v50, v51, v52, v53, v185, v153, v17);
      sub_256BE958C(v38, v6, v190, v13, v185, v153, v17);
      uint64_t v54 = v4;
      uint64_t v55 = v5;
      uint64_t v56 = v179;
      uint64_t v57 = v146;
LABEL_40:
      uint64_t v99 = v171;
      uint64_t v100 = v160;
      unsigned __int8 v101 = v10;
      goto LABEL_41;
  }
}

uint64_t sub_256BE5878(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C706D49746F6ELL && a2 == 0xEE006465746E656DLL;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000256CFFD30 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x8000000256CFFDD0 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x8000000256CFFDB0 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      BOOL v7 = a1 == 0x4C79646165726C61 && a2 == 0xED0000646564616FLL;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 0x6564616F4C746F6ELL && a2 == 0xE900000000000064;
        if (v8 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 0x6C69614664616F6CLL && a2 == 0xEA00000000006465;
          if (v9 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            BOOL v10 = a1 == 0x636E657265666E69 && a2 == 0xEF64656C69614665;
            if (v10 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x8000000256CFFD90 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x8000000256CFFD70 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x8000000256CFFD50 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else
            {
              BOOL v11 = a1 == 0x6F4E6D6165727473 && a2 == 0xEE00646E756F4674;
              if (v11 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else
              {
                BOOL v12 = a1 == 0x696D694C65746172 && a2 == 0xEB00000000646574;
                if (v12 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else
                {
                  BOOL v13 = a1 == 0x6C616E7265746E69 && a2 == 0xED0000726F727245;
                  if (v13 || (sub_256CEE6C8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 14;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272;
                    if (v14 || (sub_256CEE6C8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 15;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x656372756F736572 && a2 == 0xED00007973754273;
                      if (v15 || (sub_256CEE6C8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 16;
                      }
                      else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000256CFFDF0 || (sub_256CEE6C8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 17;
                      }
                      else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000256CFFE10 || (sub_256CEE6C8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 18;
                      }
                      else if (a1 == 0x726F727245637078 && a2 == 0xE800000000000000)
                      {
                        swift_bridgeObjectRelease();
                        return 19;
                      }
                      else
                      {
                        char v17 = sub_256CEE6C8();
                        swift_bridgeObjectRelease();
                        if (v17) {
                          return 19;
                        }
                        else {
                          return 20;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_256BE6054()
{
  return 20;
}

unint64_t sub_256BE605C(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C706D49746F6ELL;
      break;
    case 2:
      return result;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x4C79646165726C61;
      break;
    case 6:
      unint64_t result = 0x6564616F4C746F6ELL;
      break;
    case 7:
      unint64_t result = 0x6C69614664616F6CLL;
      break;
    case 8:
      unint64_t result = 0x636E657265666E69;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0x6F4E6D6165727473;
      break;
    case 13:
      unint64_t result = 0x696D694C65746172;
      break;
    case 14:
      unint64_t result = 0x6C616E7265746E69;
      break;
    case 15:
      unint64_t result = 0x456B726F7774656ELL;
      break;
    case 16:
      unint64_t result = 0x656372756F736572;
      break;
    case 17:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 18:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 19:
      unint64_t result = 0x726F727245637078;
      break;
    default:
      unint64_t result = 0x6669636570736E75;
      break;
  }
  return result;
}

uint64_t sub_256BE62FC()
{
  return 1;
}

uint64_t sub_256BE631C()
{
  return 0;
}

uint64_t sub_256BE6328()
{
  return 1;
}

uint64_t sub_256BE6330()
{
  return sub_256CEE7B8();
}

uint64_t sub_256BE6358()
{
  return 12383;
}

uint64_t sub_256BE6364(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256BE63D4()
{
  return sub_256CEE7F8();
}

uint64_t sub_256BE641C()
{
  return sub_256BE63D4();
}

uint64_t sub_256BE6440(uint64_t a1)
{
  unint64_t v2 = sub_256BE9AAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE647C(uint64_t a1)
{
  unint64_t v2 = sub_256BE9AAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE64BC(uint64_t a1)
{
  unint64_t v2 = sub_256BE98E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE64F8(uint64_t a1)
{
  unint64_t v2 = sub_256BE98E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6534()
{
  return sub_256BDC4AC();
}

unint64_t sub_256BE6550()
{
  return sub_256BE605C(*v0);
}

uint64_t sub_256BE6558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BE5878(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256BE6580@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256BE6054();
  *a1 = result;
  return result;
}

uint64_t sub_256BE65A8(uint64_t a1)
{
  unint64_t v2 = sub_256BE95EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE65E4(uint64_t a1)
{
  unint64_t v2 = sub_256BE95EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6620(uint64_t a1)
{
  unint64_t v2 = sub_256BE99C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE665C(uint64_t a1)
{
  unint64_t v2 = sub_256BE99C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6698(uint64_t a1)
{
  unint64_t v2 = sub_256BE9800();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE66D4(uint64_t a1)
{
  unint64_t v2 = sub_256BE9800();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6710(uint64_t a1)
{
  unint64_t v2 = sub_256BE9B90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE674C(uint64_t a1)
{
  unint64_t v2 = sub_256BE9B90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6788(uint64_t a1)
{
  unint64_t v2 = sub_256BE9A14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE67C4(uint64_t a1)
{
  unint64_t v2 = sub_256BE9A14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6800(uint64_t a1)
{
  unint64_t v2 = sub_256BE97B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE683C(uint64_t a1)
{
  unint64_t v2 = sub_256BE97B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6878(uint64_t a1)
{
  unint64_t v2 = sub_256BE9BDC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE68B4(uint64_t a1)
{
  unint64_t v2 = sub_256BE9BDC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE68F0(uint64_t a1)
{
  unint64_t v2 = sub_256BE9A60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE692C(uint64_t a1)
{
  unint64_t v2 = sub_256BE9A60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6968(uint64_t a1)
{
  unint64_t v2 = sub_256BE9930();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE69A4(uint64_t a1)
{
  unint64_t v2 = sub_256BE9930();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE69E0(uint64_t a1)
{
  unint64_t v2 = sub_256BE997C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6A1C(uint64_t a1)
{
  unint64_t v2 = sub_256BE997C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6A58(uint64_t a1)
{
  unint64_t v2 = sub_256BE984C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6A94(uint64_t a1)
{
  unint64_t v2 = sub_256BE984C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6AD0(uint64_t a1)
{
  unint64_t v2 = sub_256BE9768();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6B0C(uint64_t a1)
{
  unint64_t v2 = sub_256BE9768();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6B48(uint64_t a1)
{
  unint64_t v2 = sub_256BE9AF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6B84(uint64_t a1)
{
  unint64_t v2 = sub_256BE9AF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6BC0(uint64_t a1)
{
  unint64_t v2 = sub_256BE9898();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6BFC(uint64_t a1)
{
  unint64_t v2 = sub_256BE9898();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6C38(uint64_t a1)
{
  unint64_t v2 = sub_256BE9684();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6C74(uint64_t a1)
{
  unint64_t v2 = sub_256BE9684();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6CB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256BE62FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_256BE6CDC(uint64_t a1)
{
  unint64_t v2 = sub_256BE9C28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6D18(uint64_t a1)
{
  unint64_t v2 = sub_256BE9C28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BE6364(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256BE6D80()
{
  return sub_256BDC4F4();
}

uint64_t sub_256BE6D9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256BE6328();
  *a1 = result & 1;
  return result;
}

uint64_t sub_256BE6DC8(uint64_t a1)
{
  unint64_t v2 = sub_256BE96D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6E04(uint64_t a1)
{
  unint64_t v2 = sub_256BE96D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6E40(uint64_t a1)
{
  unint64_t v2 = sub_256BE9B44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6E7C(uint64_t a1)
{
  unint64_t v2 = sub_256BE9B44();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BE6EB8()
{
  return sub_256CEE7F8();
}

uint64_t sub_256BE6EF8(uint64_t a1)
{
  unint64_t v2 = sub_256BE9638();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BE6F34(uint64_t a1)
{
  unint64_t v2 = sub_256BE9638();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceError.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v94 = v1;
  char v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29A0);
  OUTLINED_FUNCTION_0_0();
  v86[55] = v6;
  v86[56] = v5;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_23(v7, v86[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29A8);
  OUTLINED_FUNCTION_0_0();
  v86[52] = v9;
  v86[53] = v8;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_11_0((uint64_t)v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[51] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29B0);
  OUTLINED_FUNCTION_0_0();
  v86[50] = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_11_0((uint64_t)v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29B8);
  OUTLINED_FUNCTION_0_0();
  v86[12] = v14;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v16);
  v86[47] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29C0);
  OUTLINED_FUNCTION_0_0();
  v86[46] = v17;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v19);
  v86[44] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29C8);
  OUTLINED_FUNCTION_0_0();
  v86[43] = v20;
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v22);
  v86[20] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29D0);
  OUTLINED_FUNCTION_0_0();
  v86[11] = v23;
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v25);
  v86[41] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29D8);
  OUTLINED_FUNCTION_0_0();
  v86[40] = v26;
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v28);
  v86[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29E0);
  OUTLINED_FUNCTION_0_0();
  v86[2] = v29;
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v31);
  v86[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29E8);
  OUTLINED_FUNCTION_0_0();
  v86[5] = v32;
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v34);
  v86[18] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29F0);
  OUTLINED_FUNCTION_0_0();
  v86[10] = v35;
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v37);
  v86[38] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC29F8);
  OUTLINED_FUNCTION_0_0();
  v86[37] = v38;
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v40);
  v86[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A00);
  OUTLINED_FUNCTION_0_0();
  v86[9] = v41;
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v43);
  v86[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A08);
  OUTLINED_FUNCTION_0_0();
  v86[8] = v44;
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v46);
  v86[35] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A10);
  OUTLINED_FUNCTION_0_0();
  v86[34] = v47;
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v49);
  v86[32] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A18);
  OUTLINED_FUNCTION_0_0();
  v86[31] = v50;
  MEMORY[0x270FA5388](v51);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v52);
  v86[29] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A20);
  OUTLINED_FUNCTION_0_0();
  v86[28] = v53;
  MEMORY[0x270FA5388](v54);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v55);
  v86[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A28);
  OUTLINED_FUNCTION_0_0();
  v86[25] = v56;
  MEMORY[0x270FA5388](v57);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v58);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A30);
  OUTLINED_FUNCTION_0_0();
  v86[23] = v60;
  MEMORY[0x270FA5388](v61);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A38);
  OUTLINED_FUNCTION_0_0();
  v86[7] = v62;
  MEMORY[0x270FA5388](v63);
  OUTLINED_FUNCTION_29();
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2A40);
  OUTLINED_FUNCTION_0_0();
  uint64_t v91 = v64;
  MEMORY[0x270FA5388](v65);
  uint64_t v67 = (char *)v86 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = *v0;
  uint64_t v103 = v0[1];
  uint64_t v68 = v0[3];
  uint64_t v69 = v0[4];
  uint64_t v87 = v0[2];
  uint64_t v88 = v69;
  uint64_t v70 = v0[5];
  uint64_t v89 = v68;
  uint64_t v90 = v70;
  unsigned int v71 = *((unsigned __int8 *)v0 + 48);
  uint64_t v72 = v4;
  uint64_t v73 = v4[3];
  __swift_project_boxed_opaque_existential_1(v72, v73);
  sub_256BE95EC();
  uint64_t v92 = v67;
  sub_256CEE878();
  switch(v71 >> 3)
  {
    case 1u:
      LOBYTE(v96) = 2;
      sub_256BE9B90();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 2u:
      LOBYTE(v96) = 3;
      sub_256BE9B44();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 3u:
      LOBYTE(v96) = 4;
      sub_256BE9AF8();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 4u:
      LOBYTE(v96) = 5;
      sub_256BE9AAC();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 5u:
      LOBYTE(v96) = 6;
      sub_256BE9A60();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 6u:
      LOBYTE(v96) = 7;
      sub_256BE9A14();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 7u:
      LOBYTE(v96) = 8;
      sub_256BE99C8();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 8u:
      LOBYTE(v96) = 9;
      sub_256BE997C();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 9u:
      LOBYTE(v96) = 12;
      sub_256BE9898();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 0xAu:
      LOBYTE(v96) = 13;
      sub_256BE984C();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 0xBu:
      LOBYTE(v96) = 14;
      sub_256BE9800();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 0xCu:
      LOBYTE(v96) = 15;
      sub_256BE97B4();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 0xDu:
      LOBYTE(v96) = 16;
      sub_256BE9768();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
      goto LABEL_23;
    case 0xEu:
      LOBYTE(v96) = 17;
      sub_256BE96D0();
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_1_1();
      OUTLINED_FUNCTION_9_1();
LABEL_23:
      OUTLINED_FUNCTION_50();
      v82();
      OUTLINED_FUNCTION_37_1();
      uint64_t v79 = v73;
      uint64_t v80 = v2;
      goto LABEL_24;
    case 0xFu:
      LOBYTE(v96) = 18;
      sub_256BE9684();
      OUTLINED_FUNCTION_26_2();
      sub_256CEE568();
      goto LABEL_14;
    case 0x10u:
      LOBYTE(v96) = 19;
      sub_256BE9638();
      OUTLINED_FUNCTION_26_2();
      sub_256CEE568();
LABEL_14:
      OUTLINED_FUNCTION_50();
      v81();
      OUTLINED_FUNCTION_37_1();
      uint64_t v79 = v2;
      uint64_t v80 = v59;
      goto LABEL_24;
    case 0x11u:
      if (v87 | v103 | v95 | v89 | v88 | v90 || v71 != 136)
      {
        BOOL v83 = v71 == 136 && v95 == 1;
        if (!v83 || v87 | v103 | v89 | v88 | v90)
        {
          LOBYTE(v96) = 11;
          sub_256BE98E4();
          OUTLINED_FUNCTION_31();
          OUTLINED_FUNCTION_27();
        }
        else
        {
          LOBYTE(v96) = 10;
          sub_256BE9930();
          OUTLINED_FUNCTION_31();
          OUTLINED_FUNCTION_27();
        }
      }
      else
      {
        LOBYTE(v96) = 0;
        sub_256BE9C28();
        sub_256CEE538();
      }
      OUTLINED_FUNCTION_50();
      v84();
      OUTLINED_FUNCTION_37_1();
      OUTLINED_FUNCTION_50();
      v85();
      goto LABEL_25;
    default:
      char v74 = v71 & 1;
      LOBYTE(v96) = 1;
      sub_256BE9BDC();
      uint64_t v76 = v92;
      uint64_t v75 = v93;
      sub_256CEE538();
      uint64_t v96 = v95;
      uint64_t v97 = v103;
      uint64_t v98 = v87;
      uint64_t v99 = v89;
      uint64_t v100 = v88;
      uint64_t v101 = v90;
      char v102 = v74;
      sub_256BE971C();
      sub_256CEE5A8();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v77();
      OUTLINED_FUNCTION_37_1();
      uint64_t v79 = (uint64_t)v76;
      uint64_t v80 = v75;
LABEL_24:
      v78(v79, v80);
LABEL_25:
      OUTLINED_FUNCTION_33();
      return;
  }
}

void InferenceError.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  char v4 = v3;
  v231 = v5;
  uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2AF8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v220 = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  uint64_t v230 = v8;
  uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B00);
  OUTLINED_FUNCTION_0_0();
  uint64_t v218 = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_0();
  uint64_t v229 = v11;
  uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B08);
  OUTLINED_FUNCTION_0_0();
  uint64_t v216 = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_0();
  uint64_t v228 = v14;
  uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B10);
  OUTLINED_FUNCTION_0_0();
  uint64_t v214 = v15;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_3_0();
  uint64_t v227 = v17;
  uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B18);
  OUTLINED_FUNCTION_0_0();
  uint64_t v212 = v18;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_3_0();
  uint64_t v226 = v20;
  uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B20);
  OUTLINED_FUNCTION_0_0();
  uint64_t v210 = v21;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_3_0();
  uint64_t v225 = v23;
  uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B28);
  OUTLINED_FUNCTION_0_0();
  uint64_t v208 = v24;
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_23(v26, v181[0]);
  uint64_t v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B30);
  OUTLINED_FUNCTION_0_0();
  uint64_t v206 = v27;
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_0();
  uint64_t v224 = v29;
  uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B38);
  OUTLINED_FUNCTION_0_0();
  uint64_t v204 = v30;
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_3_0();
  uint64_t v223 = v32;
  uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B40);
  OUTLINED_FUNCTION_0_0();
  uint64_t v201 = v33;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v35);
  uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B48);
  OUTLINED_FUNCTION_0_0();
  uint64_t v203 = v36;
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v38);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B50);
  OUTLINED_FUNCTION_0_0();
  uint64_t v199 = v39;
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v41);
  uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B58);
  OUTLINED_FUNCTION_0_0();
  uint64_t v197 = v42;
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_3_0();
  uint64_t v234 = v44;
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B60);
  OUTLINED_FUNCTION_0_0();
  uint64_t v195 = v45;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_11_0((uint64_t)v181 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B68);
  OUTLINED_FUNCTION_0_0();
  uint64_t v193 = v48;
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_11_0((uint64_t)v181 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B70);
  OUTLINED_FUNCTION_0_0();
  uint64_t v191 = v51;
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_3_0();
  uint64_t v233 = v53;
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B78);
  OUTLINED_FUNCTION_0_0();
  uint64_t v188 = v54;
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_3_0();
  unint64_t v232 = v56;
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B80);
  OUTLINED_FUNCTION_0_0();
  uint64_t v186 = v57;
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v59);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B88);
  OUTLINED_FUNCTION_0_0();
  uint64_t v184 = v60;
  MEMORY[0x270FA5388](v61);
  uint64_t v63 = (char *)v181 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B90);
  OUTLINED_FUNCTION_0_0();
  uint64_t v183 = v65;
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_28_2();
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2B98);
  OUTLINED_FUNCTION_0_0();
  uint64_t v69 = v68;
  MEMORY[0x270FA5388](v70);
  OUTLINED_FUNCTION_29();
  uint64_t v71 = v4[3];
  v235 = v4;
  __swift_project_boxed_opaque_existential_1(v4, v71);
  sub_256BE95EC();
  sub_256CEE848();
  if (v0)
  {
    uint64_t v72 = (uint64_t)v235;
    goto LABEL_36;
  }
  v181[2] = v2;
  v181[1] = v64;
  v181[3] = (uint64_t)v63;
  unint64_t v74 = v232;
  uint64_t v73 = v233;
  uint64_t v237 = v69;
  uint64_t v75 = sub_256CEE528();
  uint64_t v76 = *(void *)(v75 + 16);
  if (!v76)
  {
    uint64_t v91 = v1;
    uint64_t v92 = v67;
LABEL_9:
    uint64_t v72 = (uint64_t)v235;
    uint64_t v93 = sub_256CEE398();
    swift_allocError();
    uint64_t v95 = v94;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2BA0);
    *uint64_t v95 = &type metadata for InferenceError;
    sub_256CEE468();
    sub_256CEE388();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v93 - 8) + 104))(v95, *MEMORY[0x263F8DCB0], v93);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v91, v92);
    goto LABEL_36;
  }
  uint64_t v182 = v67;
  uint64_t v77 = v1;
  v181[0] = 0;
  uint64_t v78 = *(unsigned __int8 *)(v75 + 32);
  uint64_t v79 = sub_256BEBCF0(1, v76, v75, v75 + 32, 0, (2 * v76) | 1);
  uint64_t v81 = v80;
  unint64_t v83 = v82;
  swift_bridgeObjectRelease();
  uint64_t v72 = v79;
  if (v81 != v83 >> 1)
  {
    uint64_t v91 = v77;
    uint64_t v92 = v182;
    goto LABEL_9;
  }
  switch(v78)
  {
    case 1:
      char v236 = 1;
      sub_256BE9BDC();
      OUTLINED_FUNCTION_2_0();
      sub_256BE9C74();
      uint64_t v73 = v185;
      sub_256CEE4D8();
      unint64_t v83 = v237;
      OUTLINED_FUNCTION_50();
      v164();
      swift_unknownObjectRelease();
      uint64_t v165 = OUTLINED_FUNCTION_35_0();
      v166(v165);
      OUTLINED_FUNCTION_8_0();
      uint64_t v72 = (uint64_t)v235;
      goto LABEL_35;
    case 2:
      char v236 = 2;
      sub_256BE9B90();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v96 = OUTLINED_FUNCTION_5_0();
      v97(v96);
      swift_unknownObjectRelease();
      uint64_t v98 = OUTLINED_FUNCTION_6_0();
      v99(v98);
      OUTLINED_FUNCTION_8_0();
      char v90 = v100 | 8;
      goto LABEL_35;
    case 3:
      uint64_t v233 = v79;
      char v236 = 3;
      sub_256BE9B44();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      unint64_t v83 = v74;
      sub_256CEE4D8();
      OUTLINED_FUNCTION_16_3();
      if (v81)
      {
        OUTLINED_FUNCTION_19_1();
LABEL_32:
        OUTLINED_FUNCTION_50();
        v148();
        swift_unknownObjectRelease();
        uint64_t v146 = OUTLINED_FUNCTION_6_0();
        v147(v146);
      }
      else
      {
        OUTLINED_FUNCTION_19_1();
        OUTLINED_FUNCTION_50();
        v151();
        swift_unknownObjectRelease();
        uint64_t v152 = OUTLINED_FUNCTION_6_0();
        v153(v152);
        OUTLINED_FUNCTION_8_0();
        char v90 = v154 | 0x10;
LABEL_35:
        uint64_t v180 = v231;
        uint64_t *v231 = v73;
        v180[1] = v83;
        v180[2] = v86;
        v180[3] = v87;
        v180[4] = v88;
        v180[5] = v89;
        *((unsigned char *)v180 + 48) = v90;
      }
      break;
    case 4:
      char v236 = 4;
      sub_256BE9AF8();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v101 = OUTLINED_FUNCTION_5_0();
      v102(v101);
      swift_unknownObjectRelease();
      uint64_t v103 = OUTLINED_FUNCTION_6_0();
      v104(v103);
      OUTLINED_FUNCTION_8_0();
      char v90 = v105 | 0x18;
      goto LABEL_35;
    case 5:
      char v236 = 5;
      sub_256BE9AAC();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v106 = OUTLINED_FUNCTION_5_0();
      v107(v106);
      swift_unknownObjectRelease();
      uint64_t v108 = OUTLINED_FUNCTION_6_0();
      v109(v108);
      OUTLINED_FUNCTION_8_0();
      char v90 = v110 | 0x20;
      goto LABEL_35;
    case 6:
      char v236 = 6;
      sub_256BE9A60();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v111 = OUTLINED_FUNCTION_5_0();
      v112(v111);
      swift_unknownObjectRelease();
      uint64_t v113 = OUTLINED_FUNCTION_6_0();
      v114(v113);
      OUTLINED_FUNCTION_8_0();
      char v116 = 40;
      goto LABEL_27;
    case 7:
      uint64_t v233 = v79;
      char v236 = 7;
      sub_256BE9A14();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v167 = OUTLINED_FUNCTION_5_0();
      v168(v167);
      swift_unknownObjectRelease();
      uint64_t v169 = OUTLINED_FUNCTION_6_0();
      v170(v169);
      OUTLINED_FUNCTION_8_0();
      char v90 = v171 | 0x30;
      goto LABEL_35;
    case 8:
      char v236 = 8;
      sub_256BE99C8();
      unint64_t v117 = v222;
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      unint64_t v83 = v117;
      sub_256CEE4D8();
      uint64_t v73 = v237;
      if (v81) {
        goto LABEL_32;
      }
      OUTLINED_FUNCTION_50();
      v172();
      swift_unknownObjectRelease();
      uint64_t v173 = OUTLINED_FUNCTION_6_0();
      v174(v173);
      OUTLINED_FUNCTION_8_0();
      char v90 = v175 | 0x38;
      goto LABEL_35;
    case 9:
      char v236 = 9;
      sub_256BE997C();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v118 = OUTLINED_FUNCTION_5_0();
      v119(v118);
      swift_unknownObjectRelease();
      uint64_t v120 = OUTLINED_FUNCTION_6_0();
      v121(v120);
      OUTLINED_FUNCTION_8_0();
      char v90 = v122 | 0x40;
      goto LABEL_35;
    case 10:
      char v236 = 10;
      sub_256BE9930();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_50();
      v123();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v124();
      OUTLINED_FUNCTION_17_0();
      uint64_t v73 = 1;
      goto LABEL_35;
    case 11:
      char v236 = 11;
      sub_256BE98E4();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_50();
      v149();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v150();
      OUTLINED_FUNCTION_17_0();
      uint64_t v73 = 2;
      goto LABEL_35;
    case 12:
      char v236 = 12;
      sub_256BE9898();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v125 = OUTLINED_FUNCTION_5_0();
      v126(v125);
      swift_unknownObjectRelease();
      uint64_t v127 = OUTLINED_FUNCTION_6_0();
      v128(v127);
      OUTLINED_FUNCTION_8_0();
      char v116 = 72;
      goto LABEL_27;
    case 13:
      char v236 = 13;
      sub_256BE984C();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v129 = OUTLINED_FUNCTION_5_0();
      v130(v129);
      swift_unknownObjectRelease();
      uint64_t v131 = OUTLINED_FUNCTION_6_0();
      v132(v131);
      OUTLINED_FUNCTION_8_0();
      char v116 = 80;
      goto LABEL_27;
    case 14:
      char v236 = 14;
      sub_256BE9800();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v133 = OUTLINED_FUNCTION_5_0();
      v134(v133);
      swift_unknownObjectRelease();
      uint64_t v135 = OUTLINED_FUNCTION_6_0();
      v136(v135);
      OUTLINED_FUNCTION_8_0();
      char v116 = 88;
      goto LABEL_27;
    case 15:
      char v236 = 15;
      sub_256BE97B4();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v137 = OUTLINED_FUNCTION_5_0();
      v138(v137);
      swift_unknownObjectRelease();
      uint64_t v139 = OUTLINED_FUNCTION_6_0();
      v140(v139);
      OUTLINED_FUNCTION_8_0();
      char v90 = v141 | 0x60;
      goto LABEL_35;
    case 16:
      char v236 = 16;
      sub_256BE9768();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v142 = OUTLINED_FUNCTION_5_0();
      v143(v142);
      swift_unknownObjectRelease();
      uint64_t v144 = OUTLINED_FUNCTION_6_0();
      v145(v144);
      OUTLINED_FUNCTION_8_0();
      char v116 = 104;
LABEL_27:
      char v90 = v115 | v116;
      goto LABEL_35;
    case 17:
      char v236 = 17;
      sub_256BE96D0();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      sub_256BE9C74();
      OUTLINED_FUNCTION_7_3();
      OUTLINED_FUNCTION_16_3();
      uint64_t v155 = OUTLINED_FUNCTION_5_0();
      v156(v155);
      swift_unknownObjectRelease();
      uint64_t v157 = OUTLINED_FUNCTION_6_0();
      v158(v157);
      OUTLINED_FUNCTION_8_0();
      char v90 = v159 | 0x70;
      goto LABEL_35;
    case 18:
      char v236 = 18;
      sub_256BE9684();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      uint64_t v73 = OUTLINED_FUNCTION_39_1();
      unint64_t v83 = v160;
      OUTLINED_FUNCTION_50();
      v161();
      swift_unknownObjectRelease();
      uint64_t v162 = OUTLINED_FUNCTION_18_0();
      v163(v162);
      OUTLINED_FUNCTION_41_2();
      char v90 = 120;
      goto LABEL_35;
    case 19:
      char v236 = 19;
      sub_256BE9638();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      uint64_t v73 = OUTLINED_FUNCTION_39_1();
      unint64_t v83 = v176;
      OUTLINED_FUNCTION_50();
      v177();
      swift_unknownObjectRelease();
      uint64_t v178 = OUTLINED_FUNCTION_18_0();
      v179(v178);
      OUTLINED_FUNCTION_41_2();
      char v90 = 0x80;
      goto LABEL_35;
    default:
      char v236 = 0;
      sub_256BE9C28();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_50();
      v84();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v85();
      uint64_t v73 = 0;
      OUTLINED_FUNCTION_17_0();
      goto LABEL_35;
  }
LABEL_36:
  __swift_destroy_boxed_opaque_existential_1Tm(v72);
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256BE93A8(uint64_t a1)
{
  unint64_t v2 = sub_256BE9D10();
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_256BE93E4(uint64_t a1)
{
  unint64_t v2 = sub_256BE9D10();
  return MEMORY[0x270EF2668](a1, v2);
}

void sub_256BE942C()
{
}

void sub_256BE9444()
{
}

uint64_t sub_256BE9460()
{
  sub_256BEBCCC(v0, (uint64_t)v2);
  return sub_256C00F30();
}

uint64_t sub_256BE94AC()
{
  sub_256BEBCCC(v0, (uint64_t)v2);
  return sub_256C00F6C();
}

uint64_t sub_256BE94E4(uint64_t a1)
{
  if (a1 < 16) {
    return 0;
  }
  sub_256CEE368();
  return 0;
}

uint64_t sub_256BE952C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result = a2;
  unsigned int v9 = a7 >> 3;
  BOOL v10 = v9 >= 0xF;
  unsigned int v11 = v9 - 15;
  if (v10)
  {
    if (v11 >= 2) {
      return result;
    }
  }
  else
  {
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  return sub_256CEDEC8();
}

uint64_t sub_256BE958C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result = a2;
  unsigned int v9 = a7 >> 3;
  BOOL v10 = v9 >= 0xF;
  unsigned int v11 = v9 - 15;
  if (v10)
  {
    if (v11 >= 2) {
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_256BE95EC()
{
  unint64_t result = qword_269FC2A48;
  if (!qword_269FC2A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A48);
  }
  return result;
}

unint64_t sub_256BE9638()
{
  unint64_t result = qword_269FC2A50;
  if (!qword_269FC2A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A50);
  }
  return result;
}

unint64_t sub_256BE9684()
{
  unint64_t result = qword_269FC2A58;
  if (!qword_269FC2A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A58);
  }
  return result;
}

unint64_t sub_256BE96D0()
{
  unint64_t result = qword_269FC2A60;
  if (!qword_269FC2A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A60);
  }
  return result;
}

unint64_t sub_256BE971C()
{
  unint64_t result = qword_269FC2A68;
  if (!qword_269FC2A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A68);
  }
  return result;
}

unint64_t sub_256BE9768()
{
  unint64_t result = qword_269FC2A70;
  if (!qword_269FC2A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A70);
  }
  return result;
}

unint64_t sub_256BE97B4()
{
  unint64_t result = qword_269FC2A78;
  if (!qword_269FC2A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A78);
  }
  return result;
}

unint64_t sub_256BE9800()
{
  unint64_t result = qword_269FC2A80;
  if (!qword_269FC2A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A80);
  }
  return result;
}

unint64_t sub_256BE984C()
{
  unint64_t result = qword_269FC2A88;
  if (!qword_269FC2A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A88);
  }
  return result;
}

unint64_t sub_256BE9898()
{
  unint64_t result = qword_269FC2A90;
  if (!qword_269FC2A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A90);
  }
  return result;
}

unint64_t sub_256BE98E4()
{
  unint64_t result = qword_269FC2A98;
  if (!qword_269FC2A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2A98);
  }
  return result;
}

unint64_t sub_256BE9930()
{
  unint64_t result = qword_269FC2AA0;
  if (!qword_269FC2AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AA0);
  }
  return result;
}

unint64_t sub_256BE997C()
{
  unint64_t result = qword_269FC2AA8;
  if (!qword_269FC2AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AA8);
  }
  return result;
}

unint64_t sub_256BE99C8()
{
  unint64_t result = qword_269FC2AB0;
  if (!qword_269FC2AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AB0);
  }
  return result;
}

unint64_t sub_256BE9A14()
{
  unint64_t result = qword_269FC2AB8;
  if (!qword_269FC2AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AB8);
  }
  return result;
}

unint64_t sub_256BE9A60()
{
  unint64_t result = qword_269FC2AC0;
  if (!qword_269FC2AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AC0);
  }
  return result;
}

unint64_t sub_256BE9AAC()
{
  unint64_t result = qword_269FC2AC8;
  if (!qword_269FC2AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AC8);
  }
  return result;
}

unint64_t sub_256BE9AF8()
{
  unint64_t result = qword_269FC2AD0;
  if (!qword_269FC2AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AD0);
  }
  return result;
}

unint64_t sub_256BE9B44()
{
  unint64_t result = qword_269FC2AD8;
  if (!qword_269FC2AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AD8);
  }
  return result;
}

unint64_t sub_256BE9B90()
{
  unint64_t result = qword_269FC2AE0;
  if (!qword_269FC2AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AE0);
  }
  return result;
}

unint64_t sub_256BE9BDC()
{
  unint64_t result = qword_269FC2AE8;
  if (!qword_269FC2AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AE8);
  }
  return result;
}

unint64_t sub_256BE9C28()
{
  unint64_t result = qword_269FC2AF0;
  if (!qword_269FC2AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2AF0);
  }
  return result;
}

unint64_t sub_256BE9C74()
{
  unint64_t result = qword_269FC2BA8;
  if (!qword_269FC2BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BA8);
  }
  return result;
}

unint64_t sub_256BE9CC0(void *a1)
{
  a1[1] = sub_256BE9D10();
  a1[2] = sub_256BE9D5C();
  a1[3] = sub_256BE9DA8();
  a1[4] = sub_256BE9DF4();
  a1[5] = sub_256BE9E40();
  unint64_t result = sub_256BE9E8C();
  a1[6] = result;
  return result;
}

unint64_t sub_256BE9D10()
{
  unint64_t result = qword_269FC2BB0;
  if (!qword_269FC2BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BB0);
  }
  return result;
}

unint64_t sub_256BE9D5C()
{
  unint64_t result = qword_269FC2BB8;
  if (!qword_269FC2BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BB8);
  }
  return result;
}

unint64_t sub_256BE9DA8()
{
  unint64_t result = qword_269FC2BC0;
  if (!qword_269FC2BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BC0);
  }
  return result;
}

unint64_t sub_256BE9DF4()
{
  unint64_t result = qword_269FC2BC8;
  if (!qword_269FC2BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BC8);
  }
  return result;
}

unint64_t sub_256BE9E40()
{
  unint64_t result = qword_269FC2BD0;
  if (!qword_269FC2BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BD0);
  }
  return result;
}

unint64_t sub_256BE9E8C()
{
  unint64_t result = qword_269FC2BD8;
  if (!qword_269FC2BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BD8);
  }
  return result;
}

unint64_t sub_256BE9EDC()
{
  unint64_t result = qword_269FC2BE0;
  if (!qword_269FC2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BE0);
  }
  return result;
}

uint64_t destroy for InferenceError(uint64_t a1)
{
  return sub_256BE958C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for InferenceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_256BE952C(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for InferenceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_256BE952C(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_256BE958C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for InferenceError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_256BE958C(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x6F && *(unsigned char *)(a1 + 49))
    {
      unsigned int v2 = *(_DWORD *)a1 + 110;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 0xFFFFFF9F | (32 * ((*(unsigned __int8 *)(a1 + 48) >> 1) & 3))) ^ 0x7F;
      if (v2 >= 0x6E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for InferenceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x6E)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 111;
    if (a3 >= 0x6F) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x6F) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(unsigned char *)(result + 48) = 2 * (((-a2 >> 5) & 3) - 4 * a2);
    }
  }
  return result;
}

uint64_t sub_256BEA178(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 <= 0x87) {
    return v1 >> 3;
  }
  else {
    return (*(_DWORD *)a1 + 17);
  }
}

uint64_t sub_256BEA194(uint64_t result)
{
  *(unsigned char *)(result + 48) &= 7u;
  return result;
}

uint64_t sub_256BEA1A4(uint64_t result, unsigned int a2)
{
  if (a2 < 0x11)
  {
    char v2 = *(unsigned char *)(result + 48) & 1 | (8 * a2);
  }
  else
  {
    *(void *)__n128 result = a2 - 17;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    char v2 = -120;
  }
  *(unsigned char *)(result + 48) = v2;
  return result;
}

ValueMetadata *type metadata accessor for InferenceError()
{
  return &type metadata for InferenceError;
}

uint64_t destroy for InferenceError.Context()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceError.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for InferenceError.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for InferenceError.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceError.Context(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceError.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.Context()
{
  return &type metadata for InferenceError.Context;
}

uint64_t getEnumTagSinglePayload for InferenceError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xED)
  {
    if (a2 + 19 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 19) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 20;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v5 = v6 - 20;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for InferenceError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *__n128 result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256BEA57CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.CodingKeys()
{
  return &type metadata for InferenceError.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.UnspecifiedCodingKeys()
{
  return &type metadata for InferenceError.UnspecifiedCodingKeys;
}

uint64_t sub_256BEA5CC()
{
  return 0;
}

ValueMetadata *type metadata accessor for InferenceError.NotImplementedCodingKeys()
{
  return &type metadata for InferenceError.NotImplementedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.InvalidClientDataCodingKeys()
{
  return &type metadata for InferenceError.InvalidClientDataCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.UnsupportedRequestTypeCodingKeys()
{
  return &type metadata for InferenceError.UnsupportedRequestTypeCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.ResponseEncodingFailedCodingKeys()
{
  return &type metadata for InferenceError.ResponseEncodingFailedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.AlreadyLoadedCodingKeys()
{
  return &type metadata for InferenceError.AlreadyLoadedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.NotLoadedCodingKeys()
{
  return &type metadata for InferenceError.NotLoadedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.LoadFailedCodingKeys()
{
  return &type metadata for InferenceError.LoadFailedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.InferenceFailedCodingKeys()
{
  return &type metadata for InferenceError.InferenceFailedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.OperationNotAllowedCodingKeys()
{
  return &type metadata for InferenceError.OperationNotAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.OperationCancelledCodingKeys()
{
  return &type metadata for InferenceError.OperationCancelledCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.AssetVersionMismatchCodingKeys()
{
  return &type metadata for InferenceError.AssetVersionMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.StreamNotFoundCodingKeys()
{
  return &type metadata for InferenceError.StreamNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.RateLimitedCodingKeys()
{
  return &type metadata for InferenceError.RateLimitedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.InternalErrorCodingKeys()
{
  return &type metadata for InferenceError.InternalErrorCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.NetworkErrorCodingKeys()
{
  return &type metadata for InferenceError.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.ResourcesBusyCodingKeys()
{
  return &type metadata for InferenceError.ResourcesBusyCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.UnspecifiedUnderlyingErrorCodingKeys()
{
  return &type metadata for InferenceError.UnspecifiedUnderlyingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.UnrecognizedUnderlyingErrorCodingKeys()
{
  return &type metadata for InferenceError.UnrecognizedUnderlyingErrorCodingKeys;
}

uint64_t getEnumTagSinglePayload for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s20ModelManagerServices14InferenceErrorO24NotImplementedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256BEA7E0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.XpcErrorCodingKeys()
{
  return &type metadata for InferenceError.XpcErrorCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InferenceError.Context.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256BEA8E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.Context.CodingKeys()
{
  return &type metadata for InferenceError.Context.CodingKeys;
}

unint64_t sub_256BEA920()
{
  unint64_t result = qword_269FC2BE8;
  if (!qword_269FC2BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BE8);
  }
  return result;
}

unint64_t sub_256BEA970()
{
  unint64_t result = qword_269FC2BF0;
  if (!qword_269FC2BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BF0);
  }
  return result;
}

unint64_t sub_256BEA9C0()
{
  unint64_t result = qword_269FC2BF8;
  if (!qword_269FC2BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2BF8);
  }
  return result;
}

unint64_t sub_256BEAA10()
{
  unint64_t result = qword_269FC2C00;
  if (!qword_269FC2C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C00);
  }
  return result;
}

unint64_t sub_256BEAA60()
{
  unint64_t result = qword_269FC2C08;
  if (!qword_269FC2C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C08);
  }
  return result;
}

unint64_t sub_256BEAAB0()
{
  unint64_t result = qword_269FC2C10;
  if (!qword_269FC2C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C10);
  }
  return result;
}

unint64_t sub_256BEAB00()
{
  unint64_t result = qword_269FC2C18;
  if (!qword_269FC2C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C18);
  }
  return result;
}

unint64_t sub_256BEAB50()
{
  unint64_t result = qword_269FC2C20;
  if (!qword_269FC2C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C20);
  }
  return result;
}

unint64_t sub_256BEABA0()
{
  unint64_t result = qword_269FC2C28;
  if (!qword_269FC2C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C28);
  }
  return result;
}

unint64_t sub_256BEABF0()
{
  unint64_t result = qword_269FC2C30;
  if (!qword_269FC2C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C30);
  }
  return result;
}

unint64_t sub_256BEAC40()
{
  unint64_t result = qword_269FC2C38;
  if (!qword_269FC2C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C38);
  }
  return result;
}

unint64_t sub_256BEAC90()
{
  unint64_t result = qword_269FC2C40;
  if (!qword_269FC2C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C40);
  }
  return result;
}

unint64_t sub_256BEACE0()
{
  unint64_t result = qword_269FC2C48;
  if (!qword_269FC2C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C48);
  }
  return result;
}

unint64_t sub_256BEAD30()
{
  unint64_t result = qword_269FC2C50;
  if (!qword_269FC2C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C50);
  }
  return result;
}

unint64_t sub_256BEAD80()
{
  unint64_t result = qword_269FC2C58;
  if (!qword_269FC2C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C58);
  }
  return result;
}

unint64_t sub_256BEADD0()
{
  unint64_t result = qword_269FC2C60;
  if (!qword_269FC2C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C60);
  }
  return result;
}

unint64_t sub_256BEAE20()
{
  unint64_t result = qword_269FC2C68;
  if (!qword_269FC2C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C68);
  }
  return result;
}

unint64_t sub_256BEAE70()
{
  unint64_t result = qword_269FC2C70;
  if (!qword_269FC2C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C70);
  }
  return result;
}

unint64_t sub_256BEAEC0()
{
  unint64_t result = qword_269FC2C78;
  if (!qword_269FC2C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C78);
  }
  return result;
}

unint64_t sub_256BEAF10()
{
  unint64_t result = qword_269FC2C80;
  if (!qword_269FC2C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C80);
  }
  return result;
}

unint64_t sub_256BEAF60()
{
  unint64_t result = qword_269FC2C88;
  if (!qword_269FC2C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C88);
  }
  return result;
}

unint64_t sub_256BEAFB0()
{
  unint64_t result = qword_269FC2C90;
  if (!qword_269FC2C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C90);
  }
  return result;
}

unint64_t sub_256BEB000()
{
  unint64_t result = qword_269FC2C98;
  if (!qword_269FC2C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2C98);
  }
  return result;
}

unint64_t sub_256BEB050()
{
  unint64_t result = qword_269FC2CA0;
  if (!qword_269FC2CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CA0);
  }
  return result;
}

unint64_t sub_256BEB0A0()
{
  unint64_t result = qword_269FC2CA8;
  if (!qword_269FC2CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CA8);
  }
  return result;
}

unint64_t sub_256BEB0F0()
{
  unint64_t result = qword_269FC2CB0;
  if (!qword_269FC2CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CB0);
  }
  return result;
}

unint64_t sub_256BEB140()
{
  unint64_t result = qword_269FC2CB8;
  if (!qword_269FC2CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CB8);
  }
  return result;
}

unint64_t sub_256BEB190()
{
  unint64_t result = qword_269FC2CC0;
  if (!qword_269FC2CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CC0);
  }
  return result;
}

unint64_t sub_256BEB1E0()
{
  unint64_t result = qword_269FC2CC8;
  if (!qword_269FC2CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CC8);
  }
  return result;
}

unint64_t sub_256BEB230()
{
  unint64_t result = qword_269FC2CD0;
  if (!qword_269FC2CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CD0);
  }
  return result;
}

unint64_t sub_256BEB280()
{
  unint64_t result = qword_269FC2CD8;
  if (!qword_269FC2CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CD8);
  }
  return result;
}

unint64_t sub_256BEB2D0()
{
  unint64_t result = qword_269FC2CE0;
  if (!qword_269FC2CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CE0);
  }
  return result;
}

unint64_t sub_256BEB320()
{
  unint64_t result = qword_269FC2CE8;
  if (!qword_269FC2CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CE8);
  }
  return result;
}

unint64_t sub_256BEB370()
{
  unint64_t result = qword_269FC2CF0;
  if (!qword_269FC2CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CF0);
  }
  return result;
}

unint64_t sub_256BEB3C0()
{
  unint64_t result = qword_269FC2CF8;
  if (!qword_269FC2CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2CF8);
  }
  return result;
}

unint64_t sub_256BEB410()
{
  unint64_t result = qword_269FC2D00;
  if (!qword_269FC2D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D00);
  }
  return result;
}

unint64_t sub_256BEB460()
{
  unint64_t result = qword_269FC2D08;
  if (!qword_269FC2D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D08);
  }
  return result;
}

unint64_t sub_256BEB4B0()
{
  unint64_t result = qword_269FC2D10;
  if (!qword_269FC2D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D10);
  }
  return result;
}

unint64_t sub_256BEB500()
{
  unint64_t result = qword_269FC2D18;
  if (!qword_269FC2D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D18);
  }
  return result;
}

unint64_t sub_256BEB550()
{
  unint64_t result = qword_269FC2D20;
  if (!qword_269FC2D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D20);
  }
  return result;
}

unint64_t sub_256BEB5A0()
{
  unint64_t result = qword_269FC2D28;
  if (!qword_269FC2D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D28);
  }
  return result;
}

unint64_t sub_256BEB5F0()
{
  unint64_t result = qword_269FC2D30;
  if (!qword_269FC2D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D30);
  }
  return result;
}

unint64_t sub_256BEB640()
{
  unint64_t result = qword_269FC2D38;
  if (!qword_269FC2D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D38);
  }
  return result;
}

unint64_t sub_256BEB690()
{
  unint64_t result = qword_269FC2D40;
  if (!qword_269FC2D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D40);
  }
  return result;
}

unint64_t sub_256BEB6E0()
{
  unint64_t result = qword_269FC2D48;
  if (!qword_269FC2D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D48);
  }
  return result;
}

unint64_t sub_256BEB730()
{
  unint64_t result = qword_269FC2D50;
  if (!qword_269FC2D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D50);
  }
  return result;
}

unint64_t sub_256BEB780()
{
  unint64_t result = qword_269FC2D58;
  if (!qword_269FC2D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D58);
  }
  return result;
}

unint64_t sub_256BEB7D0()
{
  unint64_t result = qword_269FC2D60;
  if (!qword_269FC2D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D60);
  }
  return result;
}

unint64_t sub_256BEB820()
{
  unint64_t result = qword_269FC2D68;
  if (!qword_269FC2D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D68);
  }
  return result;
}

unint64_t sub_256BEB870()
{
  unint64_t result = qword_269FC2D70;
  if (!qword_269FC2D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D70);
  }
  return result;
}

unint64_t sub_256BEB8C0()
{
  unint64_t result = qword_269FC2D78;
  if (!qword_269FC2D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D78);
  }
  return result;
}

unint64_t sub_256BEB910()
{
  unint64_t result = qword_269FC2D80;
  if (!qword_269FC2D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D80);
  }
  return result;
}

unint64_t sub_256BEB960()
{
  unint64_t result = qword_269FC2D88;
  if (!qword_269FC2D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D88);
  }
  return result;
}

unint64_t sub_256BEB9B0()
{
  unint64_t result = qword_269FC2D90;
  if (!qword_269FC2D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D90);
  }
  return result;
}

unint64_t sub_256BEBA00()
{
  unint64_t result = qword_269FC2D98;
  if (!qword_269FC2D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2D98);
  }
  return result;
}

unint64_t sub_256BEBA50()
{
  unint64_t result = qword_269FC2DA0;
  if (!qword_269FC2DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2DA0);
  }
  return result;
}

unint64_t sub_256BEBAA0()
{
  unint64_t result = qword_269FC2DA8;
  if (!qword_269FC2DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2DA8);
  }
  return result;
}

unint64_t sub_256BEBAF0()
{
  unint64_t result = qword_269FC2DB0;
  if (!qword_269FC2DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2DB0);
  }
  return result;
}

unint64_t sub_256BEBB40()
{
  unint64_t result = qword_269FC2DB8;
  if (!qword_269FC2DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2DB8);
  }
  return result;
}

unint64_t sub_256BEBB90()
{
  unint64_t result = qword_269FC2DC0;
  if (!qword_269FC2DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2DC0);
  }
  return result;
}

unint64_t sub_256BEBBE0()
{
  unint64_t result = qword_269FC2DC8;
  if (!qword_269FC2DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2DC8);
  }
  return result;
}

unint64_t sub_256BEBC30()
{
  unint64_t result = qword_269FC2DD0;
  if (!qword_269FC2DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2DD0);
  }
  return result;
}

unint64_t sub_256BEBC80()
{
  unint64_t result = qword_269FC2DD8;
  if (!qword_269FC2DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2DD8);
  }
  return result;
}

uint64_t sub_256BEBCCC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(unsigned char *)(a2 + 48) = *((unsigned char *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_256BEBCF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_22_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return sub_256BE952C(v18, v20, a15, v19, v17, v16, v15);
}

uint64_t loadAssetBundle(_:)()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 112) = v2;
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BEBE58()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_5_1();
  v0[15] = swift_initStackObject();
  v0[16] = _OSActivity.init(_:)("Loading asset bundle", 20, 2);
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  v0[17] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BEBF7C;
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  return ModelXPCSender.loadAssetBundle(_:dynamicMode:)(v3, v2, 0);
}

uint64_t sub_256BEBF7C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t loadAssetBundleToDynamicMode(_:)()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 112) = v2;
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BEC10C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_5_1();
  v0[15] = swift_initStackObject();
  v0[16] = _OSActivity.init(_:)("Loading asset bundle to dynamic mode", 36, 2);
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  v0[17] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BEBF7C;
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  return ModelXPCSender.loadAssetBundle(_:dynamicMode:)(v3, v2, 1);
}

uint64_t holdAssetBundle(_:)()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 112) = v2;
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BEC2B8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_5_1();
  v0[15] = swift_initStackObject();
  v0[16] = _OSActivity.init(_:)("Holding asset bundle", 20, 2);
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  v0[17] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BEC3D8;
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  return ModelXPCSender.holdAssetBundle(_:)(v3, v2);
}

uint64_t sub_256BEC3D8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256BEC4E0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_1();
  os_activity_scope_leave(v0);
  swift_endAccess();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_256BEC590()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_1();
  os_activity_scope_leave(v0);
  swift_endAccess();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t forceAssetVersionSwitch()()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_256BEC6C4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_5_1();
  v0[13] = swift_initStackObject();
  v0[14] = _OSActivity.init(_:)("Forcing asset version switch", 28, 2);
  if (qword_26B2C89E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BEC7DC;
  return ModelXPCSender.forceAssetVersionSwitch()();
}

uint64_t sub_256BEC7DC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256BEC8E4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_1();
  os_activity_scope_leave(v0);
  swift_endAccess();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_256BEC994()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_1();
  os_activity_scope_leave(v0);
  swift_endAccess();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_256BECA44()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_7_4();
  return sub_256BEC590();
}

uint64_t sub_256BECAB0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_7_4();
  return sub_256BEC4E0();
}

uint64_t sub_256BECB1C()
{
  return swift_retain();
}

uint64_t sub_256BECB54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_269FC2E20;
  swift_beginAccess();
  return sub_256BEFE04(v3, a1);
}

uint64_t sub_256BECBA8(uint64_t a1)
{
  uint64_t v3 = v1 + qword_269FC2E20;
  swift_beginAccess();
  sub_256BEFD9C(a1, v3);
  return swift_endAccess();
}

uint64_t sub_256BECC04()
{
  return OUTLINED_FUNCTION_15_1(qword_269FC2E30);
}

uint64_t sub_256BECC2C(uint64_t a1, uint64_t a2)
{
  return sub_256BECC94(a1, a2, &qword_269FC2E30, (uint64_t (*)(uint64_t, uint64_t))sub_256BEFF7C);
}

uint64_t sub_256BECC4C()
{
  return OUTLINED_FUNCTION_15_1(qword_269FC2E38);
}

uint64_t sub_256BECC74(uint64_t a1, uint64_t a2)
{
  return sub_256BECC94(a1, a2, qword_269FC2E38, (uint64_t (*)(uint64_t, uint64_t))sub_256BEE8D8);
}

uint64_t sub_256BECC94(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = (uint64_t *)(v4 + *a3);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t *v5 = a1;
  v5[1] = a2;
  return a4(v6, v7);
}

uint64_t sub_256BECCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_256BECD20(a1, a2, a3, a4, a5);
}

uint64_t sub_256BECD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_defaultActor_initialize();
  uint64_t v10 = v5 + qword_269FC2E20;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v11);
  uint64_t v12 = (uint64_t *)(v5 + qword_269FC2E30);
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (uint64_t *)(v5 + qword_269FC2E38);
  *uint64_t v13 = 0;
  v13[1] = 0;
  type metadata accessor for BufferedStreamSequence.BufferValue();
  sub_256CEE0B8();
  swift_getWitnessTable();
  *(void *)(v5 + 112) = sub_256CEDBA8();
  uint64_t v14 = *v12;
  *uint64_t v12 = a2;
  v12[1] = a3;
  sub_256BEE8D8(v14);
  uint64_t v15 = *v13;
  *uint64_t v13 = a4;
  v13[1] = a5;
  sub_256BEE8D8(v15);
  return v5;
}

uint64_t BufferedStreamSequence.__allocating_init(onFirst:onCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for BufferedStreamSequence.BufferValue();
  uint64_t v8 = sub_256CEE0A8();
  return sub_256BECCB4(v8, a1, a2, a3, a4);
}

uint64_t BufferedStreamSequence.__allocating_init(error:)(uint64_t a1)
{
  type metadata accessor for BufferedStreamSequence.BufferValue();
  sub_256CEE608();
  swift_allocObject();
  uint64_t v2 = sub_256CEE098();
  *uint64_t v3 = a1;
  swift_storeEnumTagMultiPayload();
  sub_256CEE0B8();
  return sub_256BECCB4(v2, 0, 0, 0, 0);
}

uint64_t sub_256BECFB8()
{
  return swift_retain();
}

uint64_t sub_256BECFC0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2E28);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  type metadata accessor for BufferedStreamSequence.BufferValue();
  sub_256CEDB98();
  sub_256CEDB68();
  swift_endAccess();
  sub_256BECB54((uint64_t)v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    sub_256BEE878((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v5, v6);
    sub_256CEE0F8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v6);
  return sub_256BECBA8((uint64_t)v3);
}

uint64_t sub_256BED1B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_256BECC4C();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = v6;
    sub_256BECC74(0, 0);
    uint64_t v9 = sub_256CEE178();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v9);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v7;
    v10[5] = v8;
    v10[6] = a1;
    MEMORY[0x25A2AE9C0](a1);
    sub_256BDB760();
    return swift_release();
  }
  return result;
}

uint64_t sub_256BED2B4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_256BE3BF0;
  return v10(a6);
}

uint64_t sub_256BED390()
{
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = type metadata accessor for BufferedStreamSequence.BufferValue();
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v7 - v4;
  sub_256BED1B0(0);
  swift_storeEnumTagMultiPayload();
  sub_256BECFC0();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v0);
}

uint64_t sub_256BED44C()
{
  OUTLINED_FUNCTION_2();
  v1[2] = v2;
  v1[3] = v0;
  OUTLINED_FUNCTION_7_0();
  v1[4] = *(void *)(v3 + 80);
  uint64_t v4 = type metadata accessor for BufferedStreamSequence.BufferValue();
  v1[5] = v4;
  OUTLINED_FUNCTION_6(v4);
  v1[6] = v5;
  v1[7] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256BED4EC()
{
  uint64_t v1 = sub_256BECC04();
  v0[8] = v1;
  if (v1)
  {
    uint64_t v3 = (int *)v1;
    v0[9] = v2;
    sub_256BECC2C(0, 0);
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[10] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_256BED694;
    uint64_t v5 = v0[2];
    return v10(v5);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0[4] - 8) + 16))(v0[7], v0[2]);
    OUTLINED_FUNCTION_17_1();
    swift_storeEnumTagMultiPayload();
    sub_256BECFC0();
    uint64_t v7 = OUTLINED_FUNCTION_17_1();
    v8(v7);
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v9();
  }
}

uint64_t sub_256BED694()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BED770()
{
  OUTLINED_FUNCTION_2();
  sub_256BEE8D8(*(void *)(v0 + 64));
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256BED7D0(uint64_t a1)
{
  OUTLINED_FUNCTION_7_0();
  uint64_t v2 = type metadata accessor for BufferedStreamSequence.BufferValue();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v9 - v6);
  sub_256BED1B0(a1);
  *uint64_t v7 = a1;
  swift_storeEnumTagMultiPayload();
  MEMORY[0x25A2AE9C0](a1);
  sub_256BECFC0();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_256BED8A4()
{
  OUTLINED_FUNCTION_12();
  *(unsigned char *)(v1 + 160) = v2;
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = v0;
  OUTLINED_FUNCTION_7_0();
  *(void *)(v1 + 72) = *(void *)(v4 + 80);
  *(void *)(v1 + 80) = type metadata accessor for BufferedStreamSequence.BufferValue();
  OUTLINED_FUNCTION_0_0();
  *(void *)(v1 + 88) = v5;
  *(void *)(v1 + 96) = swift_task_alloc();
  *(void *)(v1 + 104) = swift_task_alloc();
  uint64_t v6 = sub_256CEE2E8();
  *(void *)(v1 + 112) = v6;
  OUTLINED_FUNCTION_6(v6);
  *(void *)(v1 + 120) = v7;
  *(void *)(v1 + 128) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

void sub_256BED9A0()
{
  *(void *)(v0 + 40) = sub_256BECB1C();
  *(void *)(v0 + 136) = sub_256CEDB98();
  *(void *)(v0 + 144) = swift_getWitnessTable();
  char v1 = sub_256CEE288();
  swift_release();
  if (v1)
  {
    type metadata accessor for BufferedStreamSequence();
    swift_getWitnessTable();
    char v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    *char v2 = v0;
    v2[1] = sub_256BEDCB0;
    OUTLINED_FUNCTION_8_1();
    MEMORY[0x270FA2318]();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 80);
    *(void *)(v0 + 48) = sub_256BECB1C();
    sub_256CEE278();
    swift_release();
    if (__swift_getEnumTagSinglePayload(v4, 1, v5) != 1)
    {
      int v8 = *(unsigned __int8 *)(v0 + 160);
      uint64_t v9 = OUTLINED_FUNCTION_12_2();
      v10(v9);
      if (v8 == 1)
      {
        uint64_t v11 = *(void *)(v0 + 104);
        OUTLINED_FUNCTION_14_2();
        v12(v11);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v14 = *(void (**)(void))(v5 + 8);
        OUTLINED_FUNCTION_13_1();
        v14();
        if (!EnumCaseMultiPayload)
        {
          OUTLINED_FUNCTION_6_1();
          sub_256CEDB48();
          OUTLINED_FUNCTION_13_1();
          v14();
          swift_endAccess();
        }
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_8_1();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v6 = OUTLINED_FUNCTION_11_1(*(void *)(v0 + 128));
    v7(v6);
    sub_256CEE408();
    OUTLINED_FUNCTION_8_1();
  }
}

uint64_t sub_256BEDCB0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *char v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

void sub_256BEDD8C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = sub_256BECB1C();
  *(void *)(v0 + 48) = v3;
  sub_256CEE278();
  swift_release();
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) != 1)
  {
    int v6 = *(unsigned __int8 *)(v0 + 160);
    uint64_t v7 = OUTLINED_FUNCTION_12_2();
    v8(v7);
    if (v6 == 1)
    {
      uint64_t v9 = *(void *)(v0 + 104);
      OUTLINED_FUNCTION_14_2();
      v10(v9);
      OUTLINED_FUNCTION_17_1();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = *(void (**)(void))(v3 + 8);
      OUTLINED_FUNCTION_17_1();
      OUTLINED_FUNCTION_13_1();
      v12();
      if (!EnumCaseMultiPayload)
      {
        OUTLINED_FUNCTION_6_1();
        sub_256CEDB48();
        OUTLINED_FUNCTION_13_1();
        v12();
        swift_endAccess();
      }
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_8_1();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v4 = OUTLINED_FUNCTION_11_1(*(void *)(v0 + 128));
  v5(v4);
  sub_256CEE408();
  OUTLINED_FUNCTION_8_1();
}

uint64_t sub_256BEDF48(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2E28);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_269FC2EF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v4, a1, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
  return sub_256BECBA8((uint64_t)v4);
}

uint64_t sub_256BEE020()
{
  OUTLINED_FUNCTION_2();
  v1[2] = v2;
  v1[3] = v0;
  OUTLINED_FUNCTION_7_0();
  v1[4] = *(void *)(v3 + 80);
  v1[5] = type metadata accessor for BufferedStreamSequence.BufferValue();
  v1[6] = OUTLINED_FUNCTION_51_0();
  uint64_t v4 = (void *)swift_task_alloc();
  v1[7] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_256BEE0F4;
  OUTLINED_FUNCTION_16_4();
  return sub_256BED8A4();
}

uint64_t sub_256BEE0F4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BEE1D0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0[6];
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_willThrow();
      swift_task_dealloc();
      OUTLINED_FUNCTION_16();
      goto LABEL_7;
    }
    uint64_t v4 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v0[4] - 8) + 32))(v0[2], v1);
    uint64_t v4 = 0;
  }
  __swift_storeEnumTagSinglePayload(v0[2], v4, 1, v0[4]);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
LABEL_7:
  return v3();
}

uint64_t sub_256BEE2BC()
{
  OUTLINED_FUNCTION_2();
  v1[2] = v0;
  OUTLINED_FUNCTION_7_0();
  uint64_t v2 = type metadata accessor for BufferedStreamSequence.BufferValue();
  v1[3] = v2;
  OUTLINED_FUNCTION_6(v2);
  v1[4] = v3;
  v1[5] = OUTLINED_FUNCTION_51_0();
  uint64_t v4 = (void *)swift_task_alloc();
  v1[6] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_256BEE394;
  OUTLINED_FUNCTION_16_4();
  return sub_256BED8A4();
}

uint64_t sub_256BEE394()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256BEE470()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (uint64_t *)v0[5];
  uint64_t v2 = v0[3];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = *v1;
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v0[4] + 8))(v1, v2);
    uint64_t v3 = 0;
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t BufferedStreamSequence.deinit()
{
  swift_release();
  sub_256BEE878(v0 + qword_269FC2E20);
  sub_256BEE8D8(*(void *)(v0 + qword_269FC2E30));
  sub_256BEE8D8(*(void *)(v0 + qword_269FC2E38[0]));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t BufferedStreamSequence.__deallocating_deinit()
{
  BufferedStreamSequence.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t BufferedStreamSequence.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_256BEE5B0()
{
  return BufferedStreamSequence.unownedExecutor.getter();
}

uint64_t sub_256BEE5CC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  sub_256BECFB8();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_256BEE600()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BDD6B8;
  return sub_256BEE020();
}

uint64_t sub_256BEE69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v11;
  uint64_t v12 = type metadata accessor for BufferedStreamSequence();
  *uint64_t v11 = v6;
  v11[1] = sub_256BEE788;
  return MEMORY[0x270FA1E90](a1, a2, a3, v12, a6, v6 + 16);
}

uint64_t sub_256BEE788()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v3 + 24) = *(void *)(v3 + 16);
  }
  OUTLINED_FUNCTION_16();
  return v6();
}

uint64_t type metadata accessor for BufferedStreamSequence.BufferValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_256BEE878(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2E28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256BEE8D8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_256BEE8E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_256BEE904()
{
  return MEMORY[0x263F8E4E0];
}

void sub_256BEE914()
{
  sub_256BEEE30();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for BufferedStreamSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BufferedStreamSequence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BufferedStreamSequence);
}

uint64_t dispatch thunk of BufferedStreamSequence.makeAsyncIterator()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of BufferedStreamSequence.end()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of BufferedStreamSequence.pushElement(_:)()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_7_0();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 264) + **(int **)(v2 + 264));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_14(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_256BDD6B8;
  return v7(v1);
}

uint64_t dispatch thunk of BufferedStreamSequence.pushError(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of BufferedStreamSequence.next()()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 288) + **(int **)(v0 + 288));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BDD6B8;
  uint64_t v4 = OUTLINED_FUNCTION_16_4();
  return v6(v4);
}

uint64_t dispatch thunk of BufferedStreamSequence.immediateError.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(v0 + 296) + **(int **)(v0 + 296));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BEED64;
  return v5();
}

uint64_t sub_256BEED64()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

void sub_256BEEE30()
{
  if (!qword_269FC2EE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269FC2EF0);
    unint64_t v0 = sub_256CEE2E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269FC2EE8);
    }
  }
}

uint64_t sub_256BEEE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_256BEEE94()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_256BEEF28(void *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      MEMORY[0x25A2AE9C0](*(void *)a2);
      *uint64_t v3 = v14;
      *((unsigned char *)v3 + v5) = 1;
    }
    else if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(__dst);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_256BEF0C4(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1)
  {
  }
  else if (!v3)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

unsigned char *sub_256BEF1CC(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    MEMORY[0x25A2AE9C0](*(void *)a2);
    *(void *)__dst = v10;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_256BEF328(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    char v9 = 8 * v7;
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << v9)) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << v9)) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      id v19 = *__src;
      MEMORY[0x25A2AE9C0](v19);
      *__dst = v19;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

unsigned char *sub_256BEF560(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_256BEF6AC(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    char v9 = 8 * v7;
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << v9)) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << v9)) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      *__dst = *__src;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_256BEF8DC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_256BEFA10(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x256BEFBD4);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_256BEFBFC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_256BEFCB4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_256BEFD8C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_256BEFD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_256BEFE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256BEFE6C(uint64_t a1)
{
  return sub_256BEDF48(a1);
}

uint64_t sub_256BEFE74()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_256BEFEBC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (int *)v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = swift_task_alloc();
  int v7 = (void *)OUTLINED_FUNCTION_14(v6);
  *int v7 = v8;
  v7[1] = sub_256BE3BF0;
  uint64_t v9 = OUTLINED_FUNCTION_16_4();
  return sub_256BED2B4(v9, v1, v2, v3, v4, v5);
}

ModelManagerServices::BuiltInInferenceProvider_optional __swiftcall BuiltInInferenceProvider.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_256CEE438();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static BuiltInInferenceProvider.allCases.getter()
{
  return &unk_27061F3F8;
}

unint64_t BuiltInInferenceProvider.rawValue.getter()
{
  if (*v0) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

uint64_t sub_256BF0040(char *a1, char *a2)
{
  return sub_256BF0EBC(*a1, *a2);
}

ModelManagerServices::BuiltInInferenceProvider_optional sub_256BF004C(Swift::String *a1)
{
  return BuiltInInferenceProvider.init(rawValue:)(*a1);
}

unint64_t sub_256BF0058@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BuiltInInferenceProvider.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_256BF0084()
{
  unint64_t result = qword_269FC2F88;
  if (!qword_269FC2F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2F88);
  }
  return result;
}

uint64_t sub_256BF00D0()
{
  return sub_256CD2560();
}

uint64_t sub_256BF00D8()
{
  return sub_256BF11C0();
}

uint64_t sub_256BF00E0()
{
  return sub_256CD2878();
}

uint64_t sub_256BF00E8()
{
  return sub_256CEE048();
}

uint64_t sub_256BF0148()
{
  return sub_256CEE028();
}

unint64_t sub_256BF019C()
{
  unint64_t result = qword_269FC2F90;
  if (!qword_269FC2F90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC2F98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2F90);
  }
  return result;
}

void sub_256BF01F0(void *a1@<X8>)
{
  *a1 = &unk_27061F3F8;
}

uint64_t getEnumTagSinglePayload for BuiltInInferenceProvider(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for BuiltInInferenceProvider(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256BF0354);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltInInferenceProvider()
{
  return &type metadata for BuiltInInferenceProvider;
}

unint64_t sub_256BF038C()
{
  unint64_t result = qword_269FC2FA0;
  if (!qword_269FC2FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2FA0);
  }
  return result;
}

uint64_t sub_256BF03D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[18] = v4;
  v5[19] = a4;
  v5[17] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_256CEE0D8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  v5[20] = v6;
  v5[21] = v8;
  return MEMORY[0x270FA2498](sub_256BF047C, v6, v8);
}

uint64_t sub_256BF047C()
{
  OUTLINED_FUNCTION_2();
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_256BF0510;
  return sub_256BF6D90();
}

uint64_t sub_256BF0510()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  int v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  v3[23] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[20];
    uint64_t v8 = v3[21];
    return MEMORY[0x270FA2498](sub_256BF0608, v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v9();
  }
}

uint64_t sub_256BF0608()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 152);
  *(void *)(v0 + 128) = *(void *)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  swift_dynamicCast();
  char v2 = *(unsigned char *)(v0 + 64);
  long long v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 88) = v3;
  *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 48);
  *(unsigned char *)(v0 + 120) = v2;
  sub_256BE9EDC();
  swift_willThrowTypedImpl();
  char v4 = *(unsigned char *)(v0 + 64);
  long long v5 = *(_OWORD *)(v0 + 32);
  long long v6 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v5;
  *(_OWORD *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 48) = v4;
  OUTLINED_FUNCTION_20_0();
  return v7();
}

uint64_t sub_256BF06EC()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  v0[3] = v3;
  v0[4] = v4;
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v0[5] = v5;
  void *v5 = v6;
  v5[1] = sub_256BF0784;
  return ResponseIterator.next()(v2);
}

uint64_t sub_256BF0784()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (*(void *)(v3 + 24))
    {
      swift_getObjectType();
      uint64_t v7 = sub_256CEE0D8();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    return MEMORY[0x270FA2498](sub_256BF08BC, v7, v9);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256BF08BC()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 16) = *(void *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256BF093C()
{
  OUTLINED_FUNCTION_12();
  v1[3] = v2;
  v1[4] = v0;
  if (v3)
  {
    swift_getObjectType();
    uint64_t v4 = sub_256CEE0D8();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v1[5] = v4;
  v1[6] = v6;
  return MEMORY[0x270FA2498](sub_256BF09D8, v4, v6);
}

uint64_t sub_256BF09D8()
{
  OUTLINED_FUNCTION_2();
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_256BF0A70;
  return InferenceMonitor.AsyncIterator.next()();
}

uint64_t sub_256BF0A70()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  v3[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[5];
    uint64_t v8 = v3[6];
    return MEMORY[0x270FA2498](sub_256BF0B68, v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v9();
  }
}

uint64_t sub_256BF0B68()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 16) = *(void *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256BF0BE8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000016;
  unint64_t v3 = 0x8000000256CFF880;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000016;
  switch(v4)
  {
    case 1:
      break;
    case 2:
      unint64_t v3 = 0xE900000000000064;
      unint64_t v5 = 0x656C6C65636E6163;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701736302;
      break;
  }
  unint64_t v6 = 0x8000000256CFF880;
  switch(a2)
  {
    case 1:
      break;
    case 2:
      unint64_t v6 = 0xE900000000000064;
      unint64_t v2 = 0x656C6C65636E6163;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v2 = 0x6E776F6E6B6E75;
      break;
    default:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v2 = 1701736302;
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = OUTLINED_FUNCTION_36_1();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_256BF0D48()
{
  OUTLINED_FUNCTION_55_0();
  BOOL v2 = v2 && v0 == v1;
  if (v2) {
    char v3 = 1;
  }
  else {
    char v3 = OUTLINED_FUNCTION_36_1();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_256BF0DB4()
{
  OUTLINED_FUNCTION_55_0();
  BOOL v2 = v2 && v0 == v1;
  if (v2) {
    char v3 = 1;
  }
  else {
    char v3 = OUTLINED_FUNCTION_36_1();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_256BF0E20(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x614364616F6C6E75;
  }
  else {
    uint64_t v3 = 0x647261646E617473;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEC00000064656863;
  }
  if (a2) {
    uint64_t v5 = 0x614364616F6C6E75;
  }
  else {
    uint64_t v5 = 0x647261646E617473;
  }
  if (a2) {
    unint64_t v6 = 0xEC00000064656863;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = OUTLINED_FUNCTION_36_1();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_256BF0EBC(char a1, char a2)
{
  unint64_t v2 = 0xD00000000000001BLL;
  unint64_t v3 = 0x8000000256CFF7D0;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0x8000000256CFF7F0;
    }
    else {
      unint64_t v4 = 0x8000000256CFF810;
    }
    unint64_t v5 = 0xD00000000000001BLL;
  }
  else
  {
    unint64_t v5 = 0xD00000000000001ALL;
    unint64_t v4 = 0x8000000256CFF7D0;
  }
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v3 = 0x8000000256CFF7F0;
    }
    else {
      unint64_t v3 = 0x8000000256CFF810;
    }
  }
  else
  {
    unint64_t v2 = 0xD00000000000001ALL;
  }
  if (v5 == v2 && v4 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_256CEE6C8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

BOOL sub_256BF0FA8(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_256BF0FB4()
{
  sub_256CEDFA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_256BF107C()
{
  sub_256CEDFA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_256BF10D0()
{
  sub_256CEDFA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_256BF1124()
{
  sub_256CEDFA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_256BF1198()
{
  return sub_256CEE7C8();
}

uint64_t sub_256BF11C0()
{
  sub_256CEDFA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_256BF124C()
{
  return sub_256CEE7E8();
}

uint64_t sub_256BF1274()
{
  return sub_256CEDFA8();
}

uint64_t InferenceProviderRequestConfiguration.requestLoggingIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t InferenceProviderRequestConfiguration.assetIdentifiers.getter()
{
  return sub_256CEDEC8();
}

uint64_t InferenceProviderRequestConfiguration.requestUUID.getter()
{
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t type metadata accessor for InferenceProviderRequestConfiguration(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C78A0);
}

uint64_t InferenceProviderRequestConfiguration.sessionUUID.getter()
{
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t InferenceProviderRequestConfiguration.onBehalfOfPID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for InferenceProviderRequestConfiguration(0) + 36));
}

uint64_t InferenceProviderRequestConfiguration.parentOfOnBehalfOfPID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for InferenceProviderRequestConfiguration(0) + 40));
}

uint64_t InferenceProviderRequestConfiguration.sessionSetID.getter()
{
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

__n128 InferenceProviderRequestConfiguration.auditToken.getter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_75() + 48);
  char v3 = *(unsigned char *)(v2 + 32);
  __n128 result = *(__n128 *)v2;
  long long v5 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v2;
  *(_OWORD *)(v0 + 16) = v5;
  *(unsigned char *)(v0 + 32) = v3;
  return result;
}

uint64_t InferenceProviderRequestConfiguration.auditSessionUIDt.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for InferenceProviderRequestConfiguration(0) + 52));
}

uint64_t InferenceProviderRequestConfiguration.useCaseIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t InferenceProviderRequestConfiguration.assetBundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t InferenceProviderRequestConfiguration.requestPriority.getter()
{
  uint64_t result = OUTLINED_FUNCTION_75();
  *uint64_t v0 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t InferenceProviderRequestConfiguration.requestPriority.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for InferenceProviderRequestConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 64)) = v2;
  return result;
}

uint64_t (*InferenceProviderRequestConfiguration.requestPriority.modify())()
{
  return nullsub_1;
}

double InferenceProviderRequestConfiguration.init(sessionLoggingIdentifier:requestLoggingIdentifier:assetIdentifiers:requestUUID:sessionUUID:onBehalfOfPID:auditSessionUID:useCaseIdentifier:assetBundleIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v20 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  uint64_t v21 = &a9[v20[8]];
  uint64_t v22 = sub_256CEDB08();
  OUTLINED_FUNCTION_26();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a7, v22);
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  *((void *)a9 + 2) = a3;
  *((void *)a9 + 3) = a4;
  *((void *)a9 + 4) = a5;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
  v25(&a9[v20[7]], a6, v22);
  v25(&a9[v20[11]], a7, v22);
  *(void *)&a9[v20[9]] = a8;
  *(void *)&a9[v20[10]] = 0;
  uint64_t v26 = &a9[v20[12]];
  double result = 0.0;
  *(_OWORD *)uint64_t v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  v26[32] = 1;
  *(_DWORD *)&a9[v20[13]] = a10;
  uint64_t v28 = &a9[v20[14]];
  *(void *)uint64_t v28 = a11;
  *((void *)v28 + 1) = a12;
  uint64_t v29 = &a9[v20[15]];
  *(void *)uint64_t v29 = a13;
  *((void *)v29 + 1) = a14;
  a9[v20[16]] = 0;
  return result;
}

__n128 InferenceProviderRequestConfiguration.init(sessionLoggingIdentifier:requestLoggingIdentifier:assetIdentifiers:requestUUID:sessionUUID:sessionSetID:onBehalfOfPID:parentOfOnBehalfOfPID:auditToken:auditSessionUID:useCaseIdentifier:assetBundleIdentifier:requestPriority:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>, uint64_t a7, uint64_t a8, __n128 *a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *a15)
{
  __n128 v26 = *a9;
  unint64_t v16 = a9[1].n128_u64[0];
  unint64_t v25 = a9[1].n128_u64[1];
  unsigned __int8 v24 = a9[2].n128_u8[0];
  char v27 = *a15;
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  int v17 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  id v19 = *(void (**)(void))(v18 + 32);
  OUTLINED_FUNCTION_56_1();
  v19();
  OUTLINED_FUNCTION_56_1();
  v19();
  OUTLINED_FUNCTION_56_1();
  v19();
  *(void *)((char *)a6 + v17[9]) = a7;
  *(void *)((char *)a6 + v17[10]) = a8;
  uint64_t v20 = (__n128 *)((char *)a6 + v17[12]);
  __n128 result = v26;
  *uint64_t v20 = v26;
  v20[1].n128_u64[0] = v16;
  v20[1].n128_u64[1] = v25;
  v20[2].n128_u8[0] = v24;
  *(_DWORD *)((char *)a6 + v17[13]) = a10;
  uint64_t v22 = (void *)((char *)a6 + v17[14]);
  *uint64_t v22 = a11;
  v22[1] = a12;
  uint64_t v23 = (void *)((char *)a6 + v17[15]);
  *uint64_t v23 = a13;
  v23[1] = a14;
  *((unsigned char *)a6 + v17[16]) = v27;
  return result;
}

uint64_t InferenceProviderRequestConfiguration.hash(into:)()
{
  sub_256CEDEC8();
  OUTLINED_FUNCTION_66();
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  OUTLINED_FUNCTION_66();
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  uint64_t v1 = OUTLINED_FUNCTION_28();
  sub_256BF911C(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for InferenceProviderRequestConfiguration(0);
  sub_256CEDB08();
  sub_256BF92E8(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_64();
  sub_256CEE7B8();
  sub_256CEE7B8();
  OUTLINED_FUNCTION_64();
  if (*(unsigned char *)(v0 + *(int *)(v3 + 48) + 32) == 1)
  {
    sub_256CEE7C8();
  }
  else
  {
    sub_256CEE7C8();
    sub_256CEE7A8();
  }
  sub_256CEE7D8();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_67();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_67();
  swift_bridgeObjectRelease();
  return sub_256BF107C();
}

uint64_t static InferenceProviderRequestConfiguration.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_256CEE6C8() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_256CEE6C8() & 1) == 0) {
    return 0;
  }
  sub_256BF1CB0(a1[4], a2[4]);
  if ((v6 & 1) == 0) {
    return 0;
  }
  char v7 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0
    || (_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0
    || *(void *)((char *)a1 + v7[9]) != *(void *)((char *)a2 + v7[9])
    || *(void *)((char *)a1 + v7[10]) != *(void *)((char *)a2 + v7[10])
    || (_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0)
  {
    return 0;
  }
  uint64_t v8 = v7[12];
  uint64_t v9 = (_OWORD *)((char *)a1 + v8);
  char v10 = *((unsigned char *)a1 + v8 + 32);
  uint64_t v11 = (char *)a2 + v8;
  char v12 = v11[32];
  if (v10)
  {
    if ((v11[32] & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v14 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    uint64_t v16 = *((void *)v11 + 2);
    uint64_t v15 = *((void *)v11 + 3);
    long long v17 = v9[1];
    v28[0] = *v9;
    v28[1] = v17;
    char v29 = 0;
    if (v12) {
      return 0;
    }
    *(void *)&long long v25 = v14;
    *((void *)&v25 + 1) = v13;
    uint64_t v26 = v16;
    uint64_t v27 = v15;
    if ((static AuditToken.== infix(_:_:)(v28, &v25) & 1) == 0) {
      return 0;
    }
  }
  if (*(_DWORD *)((char *)a1 + v7[13]) != *(_DWORD *)((char *)a2 + v7[13])) {
    return 0;
  }
  OUTLINED_FUNCTION_68(v7[14]);
  BOOL v20 = v4 && v18 == v19;
  if (!v20 && (sub_256CEE6C8() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_68(v7[15]);
  BOOL v23 = v4 && v21 == v22;
  if (!v23 && (sub_256CEE6C8() & 1) == 0) {
    return 0;
  }
  return sub_256BF0D48();
}

void sub_256BF1CB0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v32 = a1 + 56;
  OUTLINED_FUNCTION_62_0();
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  OUTLINED_FUNCTION_91();
  uint64_t v33 = v9;
  uint64_t v10 = a2 + 56;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  uint64_t v34 = v8;
  for (unint64_t i = v11 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v15 << 6))
  {
    uint64_t v17 = v7;
    uint64_t v18 = (uint64_t *)(*(void *)(v7 + 48) + 16 * i);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_256CEE798();
    sub_256CEDEC8();
    sub_256CEDFA8();
    uint64_t v21 = sub_256CEE7F8();
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)(v10 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v24 = *(void *)(a2 + 48);
    long long v25 = (void *)(v24 + 16 * v23);
    BOOL v26 = *v25 == v20 && v25[1] == v19;
    if (!v26 && (sub_256CEE6C8() & 1) == 0)
    {
      uint64_t v27 = ~v22;
      for (unint64_t j = v23 + 1; ; unint64_t j = v29 + 1)
      {
        uint64_t v29 = j & v27;
        if (((*(void *)(v10 + (((j & v27) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v27)) & 1) == 0) {
          break;
        }
        uint64_t v30 = (void *)(v24 + 16 * v29);
        BOOL v31 = *v30 == v20 && v30[1] == v19;
        if (v31 || (sub_256CEE6C8() & 1) != 0) {
          goto LABEL_28;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v7 = v17;
    uint64_t v8 = v34;
    if (v6) {
      goto LABEL_7;
    }
LABEL_8:
    uint64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v33) {
      return;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v13);
    uint64_t v15 = v8 + 1;
    if (!v14)
    {
      uint64_t v15 = v8 + 2;
      if (v8 + 2 >= v33) {
        return;
      }
      unint64_t v14 = *(void *)(v32 + 8 * v15);
      if (!v14)
      {
        uint64_t v15 = v8 + 3;
        if (v8 + 3 >= v33) {
          return;
        }
        unint64_t v14 = *(void *)(v32 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v14 - 1) & v14;
    uint64_t v34 = v15;
  }
  uint64_t v16 = v8 + 4;
  if (v8 + 4 >= v33) {
    return;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v16);
  if (v14)
  {
    uint64_t v15 = v8 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v33) {
      return;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_42:
  __break(1u);
}

void sub_256BF1F30()
{
}

void sub_256BF1F44()
{
}

void sub_256BF1F58()
{
  OUTLINED_FUNCTION_57();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_39_2();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(v2);
  uint64_t v17 = OUTLINED_FUNCTION_21(v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_19();
  if (v8 != v6 && *(void *)(v8 + 16) == *(void *)(v6 + 16))
  {
    uint64_t v46 = v8;
    uint64_t v47 = v8 + 56;
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_91();
    uint64_t v48 = v20;
    uint64_t v21 = v6 + 56;
    uint64_t v44 = v18;
    uint64_t v45 = v11;
    uint64_t v51 = v6 + 56;
    if (!v22) {
      goto LABEL_5;
    }
LABEL_4:
    OUTLINED_FUNCTION_82();
    uint64_t v49 = v24;
    uint64_t v50 = v25;
    for (uint64_t i = v26 | (v25 << 6); ; uint64_t i = v34 + (v33 << 6))
    {
      uint64_t v35 = *(void *)(v11 + 72);
      uint64_t v36 = *(void *)(v8 + 48) + v35 * i;
      uint64_t v37 = v23;
      sub_256BFD41C(v36, v23, v4);
      __swift_storeEnumTagSinglePayload(v37, 0, 1, v9);
      if (__swift_getEnumTagSinglePayload(v37, 1, v9) == 1) {
        goto LABEL_28;
      }
      sub_256BFD46C(v37, (uint64_t)v15, v4);
      sub_256CEE798();
      sub_256CEDB08();
      sub_256BF92E8(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
      sub_256CEDF18();
      uint64_t v38 = sub_256CEE7F8();
      uint64_t v39 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v40 = v38 & ~v39;
      if (((*(void *)(v21 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
      {
LABEL_27:
        sub_256BE33C8((uint64_t)v15, v4);
        goto LABEL_28;
      }
      uint64_t v41 = ~v39;
      while (1)
      {
        sub_256BFD41C(*(void *)(v6 + 48) + v40 * v35, v0, v4);
        OUTLINED_FUNCTION_99_0();
        char v42 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
        sub_256BE33C8(v0, v4);
        if (v42) {
          break;
        }
        unint64_t v40 = (v40 + 1) & v41;
        if (((*(void *)(v21 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
          goto LABEL_27;
        }
      }
      sub_256BE33C8((uint64_t)v15, v4);
      uint64_t v11 = v45;
      uint64_t v8 = v46;
      uint64_t v18 = v44;
      uint64_t v19 = v50;
      if (v49) {
        goto LABEL_4;
      }
LABEL_5:
      uint64_t v28 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        break;
      }
      if (v28 >= v48) {
        goto LABEL_29;
      }
      if (!*(void *)(v47 + 8 * v28))
      {
        if (v19 + 2 >= v48) {
          goto LABEL_29;
        }
        if (!*(void *)(v47 + 8 * (v19 + 2)))
        {
          if (v19 + 3 >= v48) {
            goto LABEL_29;
          }
          if (!*(void *)(v47 + 8 * (v19 + 3)))
          {
            uint64_t v29 = v19 + 4;
            if (v19 + 4 >= v48)
            {
LABEL_29:
              __swift_storeEnumTagSinglePayload(v18, 1, 1, v9);
              goto LABEL_28;
            }
            if (!*(void *)(v47 + 8 * v29))
            {
              do
              {
                uint64_t v30 = v29 + 1;
                if (__OFADD__(v29, 1)) {
                  goto LABEL_31;
                }
                if (v30 >= v48) {
                  goto LABEL_29;
                }
                ++v29;
              }
              while (!*(void *)(v47 + 8 * v30));
            }
          }
        }
      }
      OUTLINED_FUNCTION_32_2();
      uint64_t v49 = v32 & v31;
      uint64_t v50 = v33;
    }
    __break(1u);
LABEL_31:
    __break(1u);
    return;
  }
LABEL_28:
  OUTLINED_FUNCTION_71();
}

void sub_256BF22EC()
{
  OUTLINED_FUNCTION_57();
  uint64_t v3 = OUTLINED_FUNCTION_63();
  uint64_t active = type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(v3);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_40_1();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v30 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v30 - v9;
  if (v1 == v0 || *(void *)(v1 + 16) != *(void *)(v0 + 16)) {
    goto LABEL_34;
  }
  v30[2] = v1;
  uint64_t v31 = v1 + 56;
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_91();
  uint64_t v32 = v12;
  uint64_t v36 = v0 + 56;
  v30[0] = v10;
  v30[1] = v13;
  if (!v14) {
    goto LABEL_5;
  }
  while (2)
  {
    OUTLINED_FUNCTION_82();
    uint64_t v33 = v15;
    uint64_t v34 = v16;
LABEL_19:
    sub_256BF969C();
    sub_256BFD3C8();
    sub_256CEE798();
    sub_256CEDB08();
    sub_256BF92E8(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
    sub_256CEDF18();
    uint64_t v21 = *(int *)(active + 20);
    sub_256BF107C();
    uint64_t v22 = sub_256CEE7F8();
    uint64_t v23 = -1 << *(unsigned char *)(v0 + 32);
    unint64_t v24 = v22 & ~v23;
    if (((*(void *)(v36 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    {
LABEL_33:
      sub_256BF96E8((uint64_t)v8, (void (*)(void))type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
      goto LABEL_34;
    }
    uint64_t v25 = ~v23;
    while (1)
    {
      sub_256BF969C();
      if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
        goto LABEL_27;
      }
      uint64_t v26 = *(char *)(v2 + *(int *)(active + 20));
      uint64_t v27 = v8[v21];
      if (*(void *)&aNone_2[8 * v26] == *(void *)&aNone_2[8 * v27]
        && *(void *)&aBackgrouuserin[8 * v26 + 24] == *(void *)&aBackgrouuserin[8 * v27 + 24])
      {
        break;
      }
      char v29 = sub_256CEE6C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29) {
        goto LABEL_30;
      }
LABEL_27:
      sub_256BF96E8(v2, (void (*)(void))type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
      unint64_t v24 = (v24 + 1) & v25;
      if (((*(void *)(v36 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_30:
    sub_256BF96E8(v2, (void (*)(void))type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
    sub_256BF96E8((uint64_t)v8, (void (*)(void))type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
    uint64_t v11 = v34;
    if (v33) {
      continue;
    }
    break;
  }
LABEL_5:
  uint64_t v17 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v17 >= v32) {
    goto LABEL_34;
  }
  uint64_t v18 = *(void *)(v31 + 8 * v17);
  uint64_t v19 = v11 + 1;
  if (v18) {
    goto LABEL_18;
  }
  uint64_t v19 = v17 + 1;
  if (v17 + 1 >= v32) {
    goto LABEL_34;
  }
  uint64_t v18 = *(void *)(v31 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  uint64_t v19 = v17 + 2;
  if (v17 + 2 >= v32) {
    goto LABEL_34;
  }
  uint64_t v18 = *(void *)(v31 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  uint64_t v20 = v17 + 3;
  if (v20 >= v32)
  {
LABEL_34:
    OUTLINED_FUNCTION_71();
    return;
  }
  uint64_t v18 = *(void *)(v31 + 8 * v20);
  if (v18)
  {
    uint64_t v19 = v20;
LABEL_18:
    uint64_t v33 = (v18 - 1) & v18;
    uint64_t v34 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v32) {
      goto LABEL_34;
    }
    uint64_t v18 = *(void *)(v31 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_256BF2718(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000256D00110 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000256D00130 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000256D00150 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    BOOL v5 = a1 == 0x5574736575716572 && a2 == 0xEB00000000444955;
    if (v5 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v6 = a1 == 0x556E6F6973736573 && a2 == 0xEB00000000444955;
      if (v6 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v7 = a1 == 0x666C616865426E6FLL && a2 == 0xED0000444950664FLL;
        if (v7 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x8000000256D00170 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v8 = a1 == 0x536E6F6973736573 && a2 == 0xEC00000044497465;
          if (v8 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            BOOL v9 = a1 == 0x6B6F547469647561 && a2 == 0xEA00000000006E65;
            if (v9 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x8000000256D00190 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D001B0 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD000000000000015 && a2 == 0x8000000256D001D0 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0x5074736575716572 && a2 == 0xEF797469726F6972)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              char v11 = sub_256CEE6C8();
              swift_bridgeObjectRelease();
              if (v11) {
                return 12;
              }
              else {
                return 13;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_256BF2C24()
{
  return 13;
}

unint64_t sub_256BF2C2C(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x5574736575716572;
      break;
    case 4:
      unint64_t result = 0x556E6F6973736573;
      break;
    case 5:
      unint64_t result = 0x666C616865426E6FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x536E6F6973736573;
      break;
    case 8:
      unint64_t result = 0x6B6F547469647561;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    case 12:
      unint64_t result = 0x5074736575716572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_256BF2DCC()
{
  return sub_256BF2C2C(*v0);
}

uint64_t sub_256BF2DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BF2718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256BF2DFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256BF2C24();
  *a1 = result;
  return result;
}

uint64_t sub_256BF2E24(uint64_t a1)
{
  unint64_t v2 = sub_256BF929C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BF2E60(uint64_t a1)
{
  unint64_t v2 = sub_256BF929C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderRequestConfiguration.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2FA8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_16_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256BF929C();
  sub_256CEE878();
  OUTLINED_FUNCTION_24_2();
  if (!v0)
  {
    OUTLINED_FUNCTION_24_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256BF93C8(&qword_26B2C4B88);
    sub_256CEE5A8();
    type metadata accessor for InferenceProviderRequestConfiguration(0);
    sub_256CEDB08();
    sub_256BF92E8(&qword_26B2C8838, 255, MEMORY[0x263F07508]);
    OUTLINED_FUNCTION_27_1();
    OUTLINED_FUNCTION_27_1();
    OUTLINED_FUNCTION_58_0(5);
    OUTLINED_FUNCTION_58_0(6);
    OUTLINED_FUNCTION_27_1();
    sub_256BF9330();
    OUTLINED_FUNCTION_49_0();
    sub_256CEE558();
    OUTLINED_FUNCTION_49_0();
    sub_256CEE5D8();
    OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_24_2();
    sub_256BF937C();
    OUTLINED_FUNCTION_49_0();
    sub_256CEE5A8();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_33();
}

uint64_t InferenceProviderRequestConfiguration.hashValue.getter()
{
  return sub_256BF5B84((void (*)(unsigned char *))InferenceProviderRequestConfiguration.hash(into:));
}

void InferenceProviderRequestConfiguration.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v4 = v3;
  uint64_t v40 = v5;
  sub_256CEDB08();
  OUTLINED_FUNCTION_0_0();
  uint64_t v45 = v7;
  uint64_t v46 = v6;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_39_2();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v38 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2FB8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_16_1();
  uint64_t v47 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_3_0();
  uint64_t v43 = v4;
  uint64_t v44 = v16;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_256BF929C();
  uint64_t v41 = v1;
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
  }
  else
  {
    uint64_t v39 = v2;
    LOBYTE(v48) = 0;
    uint64_t v17 = sub_256CEE498();
    uint64_t v18 = v44;
    *uint64_t v44 = v17;
    v18[1] = v19;
    OUTLINED_FUNCTION_88(1);
    v18[2] = sub_256CEE498();
    v18[3] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256BF93C8(&qword_269FC2FC0);
    sub_256CEE4D8();
    v18[4] = v48;
    LOBYTE(v48) = 3;
    sub_256BF92E8(&qword_26B2C7B60, 255, MEMORY[0x263F07508]);
    uint64_t v21 = v46;
    OUTLINED_FUNCTION_65();
    uint64_t v22 = (char *)v18 + v47[7];
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v38(v22, v13, v21);
    LOBYTE(v48) = 4;
    OUTLINED_FUNCTION_65();
    v38((char *)v18 + v47[8], v11, v21);
    OUTLINED_FUNCTION_88(5);
    uint64_t v23 = sub_256CEE4C8();
    unint64_t v24 = v47;
    *(uint64_t *)((char *)v18 + v47[9]) = v23;
    OUTLINED_FUNCTION_88(6);
    *(uint64_t *)((char *)v18 + v24[10]) = sub_256CEE4C8();
    LOBYTE(v48) = 7;
    uint64_t v25 = v39;
    sub_256CEE4D8();
    v38((char *)v18 + v24[11], v25, v46);
    sub_256BF942C();
    sub_256CEE488();
    char v26 = v50;
    uint64_t v27 = (char *)v18 + v47[12];
    long long v28 = v49;
    *(_OWORD *)uint64_t v27 = v48;
    *((_OWORD *)v27 + 1) = v28;
    v27[32] = v26;
    OUTLINED_FUNCTION_88(9);
    *(_DWORD *)((char *)v44 + v47[13]) = sub_256CEE508();
    uint64_t v29 = OUTLINED_FUNCTION_89(10);
    uint64_t v30 = (uint64_t *)((char *)v44 + v47[14]);
    *uint64_t v30 = v29;
    v30[1] = v31;
    uint64_t v32 = OUTLINED_FUNCTION_89(11);
    uint64_t v33 = (uint64_t *)((char *)v44 + v47[15]);
    uint64_t *v33 = v32;
    v33[1] = v34;
    sub_256BF9478();
    sub_256CEE4D8();
    uint64_t v35 = OUTLINED_FUNCTION_22_3();
    v36(v35);
    uint64_t v37 = (uint64_t)v44;
    *((unsigned char *)v44 + v47[16]) = v48;
    sub_256BF969C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
    sub_256BF96E8(v37, (void (*)(void))type metadata accessor for InferenceProviderRequestConfiguration);
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256BF3938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256BF5F90(a1, a2, a3, (void (*)(unsigned char *))InferenceProviderRequestConfiguration.hash(into:));
}

void sub_256BF3950()
{
}

void sub_256BF3968()
{
}

uint64_t LoadState.description.getter()
{
  return *(void *)&aUnloadeddynami[8 * *v0];
}

uint64_t LoadState.rawValue.getter()
{
  return *(void *)&aUnloadeddynami[8 * *v0];
}

ModelManagerServices::LoadState_optional __swiftcall LoadState.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_256CEE438();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_256BF3A20()
{
  return sub_256BF0DB4();
}

uint64_t sub_256BF3A2C()
{
  return sub_256CD256C();
}

uint64_t sub_256BF3A34()
{
  return sub_256BF10D0();
}

uint64_t sub_256BF3A3C()
{
  return sub_256CD295C();
}

ModelManagerServices::LoadState_optional sub_256BF3A44(Swift::String *a1)
{
  return LoadState.init(rawValue:)(*a1);
}

uint64_t sub_256BF3A50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LoadState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_256BF3A78()
{
  return sub_256CEE048();
}

uint64_t sub_256BF3AD8()
{
  return sub_256CEE028();
}

uint64_t sub_256BF3B2C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF0;
  return InferenceProvider.loadIn(inferenceAssetIdentifier:)();
}

uint64_t InferenceProvider.loadIn(inferenceAssetIdentifier:)()
{
  OUTLINED_FUNCTION_3_1();
  return OUTLINED_FUNCTION_11_2(v0);
}

uint64_t sub_256BF3BCC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF0;
  return InferenceProvider.loadIn(inferenceAssetIdentifier:)();
}

uint64_t sub_256BF3C58()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF0;
  return sub_256BDD6B8();
}

uint64_t InferenceProvider.transitionAsset(withIdentifier:to:)()
{
  OUTLINED_FUNCTION_3_1();
  return OUTLINED_FUNCTION_11_2(v0);
}

void *sub_256BF3CFC@<X0>(void *a1@<X8>)
{
  return InferenceProvider.requestStream(clientData:configuration:)(a1);
}

void *InferenceProvider.requestStream(clientData:configuration:)@<X0>(void *a1@<X8>)
{
  sub_256BE9EDC();
  uint64_t v2 = OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_61_0(v2, v3);
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2FE0);
  a1[4] = sub_256BF94C4();
  uint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[2] = 0;
  result[3] = 0;
  result[4] = v2;
  result[5] = nullsub_1;
  result[6] = 0;
  return result;
}

uint64_t InferenceProvider.requestStream(clientData:configuration:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  ClientData.data.getter();
  uint64_t v6 = OUTLINED_FUNCTION_99_0();
  v7(v6);
  uint64_t v8 = OUTLINED_FUNCTION_99_0();
  sub_256BF9568(v8, v9);
  uint64_t v10 = v15;
  uint64_t v11 = v16;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(v14, v15);
  type metadata accessor for ClientData(255);
  a3[3] = sub_256CEE628();
  a3[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_1Tm(a3);
  sub_256BF4570((uint64_t)v12, a1, v10, a2, v11);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_256BF3EC0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BF3F4C;
  return InferenceProvider.requestOneShot(clientData:configuration:)();
}

uint64_t sub_256BF3F4C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v3 = v2;
  uint64_t v4 = swift_task_dealloc();
  char v5 = *(uint64_t (**)(uint64_t))(v2 + 8);
  if (!v0) {
    uint64_t v4 = OUTLINED_FUNCTION_96();
  }
  return v5(v4);
}

uint64_t InferenceProvider.requestOneShot(clientData:configuration:)()
{
  OUTLINED_FUNCTION_3_1();
  return sub_256BF95C0(v1, v0, 0, 0xC000000000000000);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_2();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[2] = v5;
  v1[3] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  OUTLINED_FUNCTION_21(v7);
  v1[8] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_256BF4048()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF0;
  return InferenceProvider.requestOneShot(clientData:configuration:)();
}

uint64_t sub_256BF4198()
{
  OUTLINED_FUNCTION_15();
  uint64_t v6 = v0[6];
  v0[9] = ClientData.data.getter();
  v0[10] = v1;
  char v5 = (uint64_t (*)(uint64_t))(*(void *)(v6 + 56) + **(int **)(v6 + 56));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_256BF42AC;
  uint64_t v3 = OUTLINED_FUNCTION_96();
  return v5(v3);
}

uint64_t sub_256BF42AC()
{
  OUTLINED_FUNCTION_15();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_3();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v10 = v9;
  v7[12] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    unint64_t v11 = v7[10];
    if (v11 >> 60 == 15) {
      uint64_t v12 = 0;
    }
    else {
      uint64_t v12 = v7[9];
    }
    if (v11 >> 60 == 15) {
      unint64_t v13 = 0xC000000000000000;
    }
    else {
      unint64_t v13 = v7[10];
    }
    v7[13] = v3;
    v7[14] = v5;
    sub_256BF9568(v12, v13);
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v14, v15, v16);
}

uint64_t sub_256BF43C4()
{
  OUTLINED_FUNCTION_12();
  unint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[2];
  sub_256CEDE28();
  uint64_t v5 = OUTLINED_FUNCTION_95_0();
  __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  ClientData.init(data:xpcData:)(v2, v1, v3, v4);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v9();
}

uint64_t sub_256BF4454()
{
  OUTLINED_FUNCTION_2();
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 60 == 15) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(void *)(v0 + 72);
  }
  if (v1 >> 60 == 15) {
    unint64_t v3 = 0xC000000000000000;
  }
  else {
    unint64_t v3 = *(void *)(v0 + 80);
  }
  sub_256BF9568(v2, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v4();
}

uint64_t sub_256BF44D0()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_256BDD6B8;
  return InferenceProvider.cancelRequest(uuid:)();
}

uint64_t InferenceProvider.cancelRequest(uuid:)()
{
  OUTLINED_FUNCTION_3_1();
  return OUTLINED_FUNCTION_11_2(v0);
}

uint64_t sub_256BF4570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v10 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  type metadata accessor for ClientData(0);
  sub_256CEE218();
  return swift_release();
}

uint64_t sub_256BF46A0(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  v2[6] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[7] = AssociatedTypeWitness;
  v2[8] = *(void *)(AssociatedTypeWitness - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256BF47B0, 0, 0);
}

uint64_t sub_256BF47B0()
{
  OUTLINED_FUNCTION_59();
  (*(void (**)(void, void, void))(v0[8] + 16))(v0[9], v0[5], v0[7]);
  char v1 = swift_dynamicCast();
  uint64_t v2 = v0[6];
  if (v1)
  {
    unint64_t v4 = v0[3];
    uint64_t v3 = v0[4];
    uint64_t v5 = v0[2];
    uint64_t v6 = sub_256CEDE28();
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v6);
    ClientData.init(data:xpcData:)(v5, v4, v2, v3);
  }
  else
  {
    sub_256BE9EDC();
    uint64_t v8 = OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_61_0(v8, v9);
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t InferenceProviderAssetDescriptor.identifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t InferenceProviderAssetDescriptor.version.getter()
{
  return OUTLINED_FUNCTION_28();
}

ModelManagerServices::InferenceProviderAssetDescriptor __swiftcall InferenceProviderAssetDescriptor.init(identifier:version:)(Swift::String identifier, Swift::String_optional version)
{
  v2->value = identifier;
  v2[1] = version;
  result.version = version;
  result.identifier = identifier;
  return result;
}

uint64_t InferenceProviderAssetDescriptor.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_256CEE7C8();
  }
  sub_256CEE7C8();
  sub_256CEDEC8();
  sub_256CEDFA8();
  return swift_bridgeObjectRelease();
}

uint64_t static InferenceProviderAssetDescriptor.== infix(_:_:)(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_47_0(a1);
  uint64_t v7 = v5[2];
  uint64_t v6 = v5[3];
  BOOL v8 = v3 == *v5 && v4 == v5[1];
  if (v8 || (sub_256CEE6C8(), uint64_t result = OUTLINED_FUNCTION_78(), (v10 & 1) != 0))
  {
    if (v1)
    {
      if (v6)
      {
        BOOL v11 = v2 == v7 && v1 == v6;
        if (v11 || (OUTLINED_FUNCTION_69() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v6)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_256BF4A88(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256BF4B78(char a1)
{
  if (a1) {
    return 0x6E6F6973726576;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_256BF4BB4()
{
  return sub_256BF4B78(*v0);
}

uint64_t sub_256BF4BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BF4A88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256BF4BE4(uint64_t a1)
{
  unint64_t v2 = sub_256BF95E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BF4C20(uint64_t a1)
{
  unint64_t v2 = sub_256BF95E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderAssetDescriptor.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5628);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256BF95E4();
  OUTLINED_FUNCTION_93();
  sub_256CEE878();
  sub_256CEE568();
  if (!v0) {
    sub_256CEE548();
  }
  OUTLINED_FUNCTION_45();
  v4();
  OUTLINED_FUNCTION_33();
}

uint64_t InferenceProviderAssetDescriptor.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_42();
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7C8();
  if (v1)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  return sub_256CEE7F8();
}

void InferenceProviderAssetDescriptor.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FE8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256BF95E4();
  OUTLINED_FUNCTION_70_0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    uint64_t v11 = sub_256CEE498();
    uint64_t v13 = v12;
    sub_256CEDEC8();
    uint64_t v14 = sub_256CEE478();
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v19 = v14;
    v17(v10, v5);
    *uint64_t v4 = v11;
    v4[1] = v13;
    v4[2] = v19;
    v4[3] = v16;
    sub_256CEDEC8();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_33();
}

void sub_256BF4FC4()
{
}

void sub_256BF4FDC()
{
}

uint64_t sub_256BF4FFC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_256CEE798();
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7C8();
  if (v1)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  return sub_256CEE7F8();
}

uint64_t InferenceProviderAssetDescriptor.description.getter()
{
  return 60;
}

uint64_t InferenceProviderPrewarmInformation.modelBundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

__n128 InferenceProviderPrewarmInformation.requestorAuditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s20ModelManagerServices35InferenceProviderPrewarmInformationV19internalSessionUUID10Foundation0J0Vvg_0()
{
  type metadata accessor for InferenceProviderPrewarmInformation(0);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t _s20ModelManagerServices35InferenceProviderPrewarmInformationV25internalUseCaseIdentifierSSvg_0()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t InferenceProviderPrewarmInformation.onBehalfOfPid.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for InferenceProviderPrewarmInformation(0) + 32));
}

uint64_t InferenceProviderPrewarmInformation.init(bundleIdentifier:requestorAuditToken:sessionUUID:useCaseIdentifier:onBehalfOfPid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X8>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  long long v12 = a3[1];
  *(_OWORD *)(a7 + 16) = *a3;
  *(_OWORD *)(a7 + 32) = v12;
  type metadata accessor for InferenceProviderPrewarmInformation(0);
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_59_1();
  uint64_t result = v13();
  uint64_t v15 = (void *)(a7 + *(int *)(v7 + 28));
  *uint64_t v15 = a4;
  v15[1] = a5;
  *(_DWORD *)(a7 + *(int *)(v7 + 32)) = a6;
  return result;
}

__n128 InferenceProviderPrewarmInformation.init(bundleIdentifier:requestorAuditToken:sessionUUID:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  type metadata accessor for InferenceProviderPrewarmInformation(0);
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_10();
  __n128 v14 = *a3;
  unint64_t v9 = a3[1].n128_u64[0];
  unint64_t v10 = a3[1].n128_u64[1];
  OUTLINED_FUNCTION_59_1();
  v11();
  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  __n128 result = v14;
  a4[1] = v14;
  a4[2].n128_u64[0] = v9;
  a4[2].n128_u64[1] = v10;
  uint64_t v13 = (unint64_t *)((char *)a4->n128_u64 + *(int *)(v4 + 28));
  *uint64_t v13 = 0;
  v13[1] = 0xE000000000000000;
  *(unsigned __int32 *)((char *)a4->n128_u32 + *(int *)(v4 + 32)) = 0;
  return result;
}

uint64_t InferenceProviderPrewarmInformation.hash(into:)()
{
  return sub_256CEE7D8();
}

uint64_t static InferenceProviderPrewarmInformation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (sub_256CEE6C8(), uint64_t result = OUTLINED_FUNCTION_78(), (v6 & 1) != 0))
  {
    long long v7 = *(_OWORD *)(a1 + 32);
    v17[0] = *(_OWORD *)(a1 + 16);
    v17[1] = v7;
    long long v8 = *(_OWORD *)(a2 + 32);
    v16[0] = *(_OWORD *)(a2 + 16);
    v16[1] = v8;
    if ((static AuditToken.== infix(_:_:)(v17, v16) & 1) != 0
      && (uint64_t v9 = type metadata accessor for InferenceProviderPrewarmInformation(0),
          (_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) != 0))
    {
      uint64_t v10 = *(int *)(v9 + 28);
      uint64_t v11 = *(void *)(a1 + v10);
      uint64_t v12 = *(void *)(a1 + v10 + 8);
      uint64_t v13 = (void *)(a2 + v10);
      if (v11 == *v13 && v12 == v13[1]) {
        return *(_DWORD *)(a1 + *(int *)(v9 + 32)) == *(_DWORD *)(a2 + *(int *)(v9 + 32));
      }
      sub_256CEE6C8();
      uint64_t result = OUTLINED_FUNCTION_78();
      if (v15) {
        return *(_DWORD *)(a1 + *(int *)(v9 + 32)) == *(_DWORD *)(a2 + *(int *)(v9 + 32));
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_256BF5628(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000256D001F0 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000256D00210 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000256D00230 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000256D00250 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000256D00270)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_256BF581C(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_256BF58C8()
{
  return sub_256BF581C(*v0);
}

uint64_t sub_256BF58D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BF5628(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256BF58F8(uint64_t a1)
{
  unint64_t v2 = sub_256BF9650();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BF5934(uint64_t a1)
{
  unint64_t v2 = sub_256BF9650();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceProviderPrewarmInformation.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5630);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256BF9650();
  OUTLINED_FUNCTION_93();
  sub_256CEE878();
  OUTLINED_FUNCTION_87_0();
  if (!v1)
  {
    sub_256BF9330();
    sub_256CEE5A8();
    type metadata accessor for InferenceProviderPrewarmInformation(0);
    sub_256CEDB08();
    sub_256BF92E8(&qword_26B2C8838, 255, MEMORY[0x263F07508]);
    sub_256CEE5A8();
    OUTLINED_FUNCTION_87_0();
    sub_256CEE5B8();
  }
  OUTLINED_FUNCTION_45();
  return v4();
}

uint64_t InferenceProviderPrewarmInformation.hashValue.getter()
{
  return sub_256BF5B84((void (*)(unsigned char *))InferenceProviderPrewarmInformation.hash(into:));
}

uint64_t sub_256BF5B84(void (*a1)(unsigned char *))
{
  OUTLINED_FUNCTION_42();
  a1(v3);
  return sub_256CEE7F8();
}

void InferenceProviderPrewarmInformation.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v3 = v2;
  uint64_t v20 = sub_256CEDB08();
  OUTLINED_FUNCTION_0_0();
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FF0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_19();
  long long v7 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_19();
  uint64_t v11 = v10 - v9;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256BF9650();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  }
  else
  {
    LOBYTE(v21) = 0;
    *(void *)uint64_t v11 = sub_256CEE498();
    *(void *)(v11 + 8) = v12;
    sub_256BF942C();
    sub_256CEE4D8();
    *(_OWORD *)(v11 + 16) = v21;
    *(_OWORD *)(v11 + 32) = v22;
    sub_256BF92E8(&qword_26B2C7B60, 255, MEMORY[0x263F07508]);
    sub_256CEE4D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v11 + v7[6], v1, v20);
    OUTLINED_FUNCTION_84_0(3);
    uint64_t v13 = sub_256CEE498();
    __n128 v14 = (uint64_t *)(v11 + v7[7]);
    *__n128 v14 = v13;
    v14[1] = v15;
    OUTLINED_FUNCTION_84_0(4);
    int v16 = sub_256CEE4E8();
    uint64_t v17 = OUTLINED_FUNCTION_15_2();
    v18(v17);
    *(_DWORD *)(v11 + v7[8]) = v16;
    sub_256BF969C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    sub_256BF96E8(v11, (void (*)(void))type metadata accessor for InferenceProviderPrewarmInformation);
  }
  OUTLINED_FUNCTION_33();
}

void sub_256BF5F40()
{
}

uint64_t sub_256BF5F58(void *a1)
{
  return InferenceProviderPrewarmInformation.encode(to:)(a1);
}

uint64_t sub_256BF5F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256BF5F90(a1, a2, a3, (void (*)(unsigned char *))InferenceProviderPrewarmInformation.hash(into:));
}

uint64_t sub_256BF5F90(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_256CEE798();
  a4(v6);
  return sub_256CEE7F8();
}

uint64_t sub_256BF5FD8()
{
  return sub_256BFD374(*(uint64_t (**)(void))(v0 + 8));
}

void InferenceProviderAdapter.init()()
{
}

uint64_t InferenceProviderAdapter.init(_:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256BE3924(a1, a2);
}

uint64_t _s20ModelManagerServices24InferenceProviderAdapterV15transitionAsset_2toyAA0deH10DescriptorV_AA9LoadStateOtYaAA0D5ErrorOYKF()
{
  OUTLINED_FUNCTION_3_1();
  return OUTLINED_FUNCTION_11_2(v0);
}

uint64_t _s20ModelManagerServices24InferenceProviderAdapterV15transitionAsset14withIdentifier2to4fromySS_AA9LoadStateOAItYaAA0D5ErrorOYKF(uint64_t a1, uint64_t a2, unsigned char *a3, unsigned char *a4, uint64_t a5)
{
  *(void *)(v6 + 88) = v5;
  *(void *)(v6 + 96) = a5;
  *(void *)(v6 + 72) = a1;
  *(void *)(v6 + 80) = a2;
  *(unsigned char *)(v6 + 66) = *a3;
  *(unsigned char *)(v6 + 67) = *a4;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256BF60B4);
}

uint64_t sub_256BF60B4()
{
  OUTLINED_FUNCTION_59();
  char v1 = *(unsigned char *)(v0 + 66);
  unint64_t v2 = *(void **)(v0 + 88);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  *(unsigned char *)(v0 + 65) = v1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 32) + **(int **)(v4 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v5;
  void *v5 = v0;
  v5[1] = sub_256BF61D0;
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 80);
  return v9(v7, v6, v0 + 65, v3, v4);
}

uint64_t sub_256BF61D0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256BF62AC()
{
  OUTLINED_FUNCTION_15();
  if (!*(unsigned char *)(v0 + 66))
  {
    swift_bridgeObjectRelease();
LABEL_9:
    OUTLINED_FUNCTION_37_2(*(void **)(v0 + 88));
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v5;
    void *v5 = v0;
    v5[1] = sub_256BF6520;
    uint64_t v6 = OUTLINED_FUNCTION_46_0();
    return v7(v6);
  }
  char v1 = OUTLINED_FUNCTION_33_2();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_9;
  }
  if (!*(unsigned char *)(v0 + 67))
  {
    swift_bridgeObjectRelease();
LABEL_13:
    OUTLINED_FUNCTION_37_2(*(void **)(v0 + 88));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_256BF6618;
    uint64_t v6 = OUTLINED_FUNCTION_46_0();
    return v7(v6);
  }
  char v2 = OUTLINED_FUNCTION_33_2();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_72();
  return v3();
}

uint64_t sub_256BF6520()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256BF6618()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256BF6710()
{
  OUTLINED_FUNCTION_44_1();
  char v1 = *(void **)(v0 + 112);
  uint64_t v2 = MEMORY[0x25A2AE9C0](v1);
  OUTLINED_FUNCTION_90(v2);
  OUTLINED_FUNCTION_2_2(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15, v16, v17, v18, v19, v20);
  swift_willThrowTypedImpl();

  OUTLINED_FUNCTION_20_0();
  return v11();
}

uint64_t sub_256BF679C()
{
  OUTLINED_FUNCTION_44_1();
  char v1 = *(void **)(v0 + 128);
  uint64_t v2 = MEMORY[0x25A2AE9C0](v1);
  OUTLINED_FUNCTION_90(v2);
  OUTLINED_FUNCTION_2_2(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15, v16, v17, v18, v19, v20);
  swift_willThrowTypedImpl();

  OUTLINED_FUNCTION_20_0();
  return v11();
}

uint64_t sub_256BF6828()
{
  OUTLINED_FUNCTION_44_1();
  char v1 = *(void **)(v0 + 144);
  uint64_t v2 = MEMORY[0x25A2AE9C0](v1);
  OUTLINED_FUNCTION_90(v2);
  OUTLINED_FUNCTION_2_2(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15, v16, v17, v18, v19, v20);
  swift_willThrowTypedImpl();

  OUTLINED_FUNCTION_20_0();
  return v11();
}

uint64_t _s20ModelManagerServices24InferenceProviderAdapterV14requestOneShot10clientData13configurationAA06ClientK0VAH_AA0dE20RequestConfigurationVtYaAA0D5ErrorOYKF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = v4;
  v5[13] = a4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256BF68D4);
}

uint64_t sub_256BF68D4()
{
  OUTLINED_FUNCTION_15();
  uint64_t v10 = (void *)(OUTLINED_FUNCTION_37_2(*(void **)(v2 + 96)) + 64);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*v10 + *(int *)*v10);
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v2 + 112) = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_256BF69C8;
  uint64_t v5 = *(void *)(v2 + 80);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = *(void *)(v2 + 72);
  return v9(v7, v5, v6, v0, v1);
}

uint64_t sub_256BF69C8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256BF6AC0()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = MEMORY[0x25A2AE9C0](v1);
  OUTLINED_FUNCTION_90(v2);
  OUTLINED_FUNCTION_2_2(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15, v16, v17, v18, v19, v20);
  swift_willThrowTypedImpl();

  OUTLINED_FUNCTION_20_0();
  return v11();
}

uint64_t InferenceProviderAdapter.requestStream(clientData:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(v14, a1, a2, v7, v8);
  sub_256BF973C((uint64_t)v14, (uint64_t)v13);
  uint64_t v9 = type metadata accessor for InferenceProviderAdapter.StreamAdapter();
  uint64_t v10 = swift_allocObject();
  sub_256BF6C3C(v13);
  a3[3] = v9;
  a3[4] = sub_256BF92E8(&qword_269FC3028, v11, (void (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter);
  *a3 = v10;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t sub_256BF6C3C(void *a1)
{
  swift_defaultActor_initialize();
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t))(v6 + 16))(v5 - v4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v8);
  sub_256CEE208();
  sub_256BE33C8((uint64_t)a1, &qword_269FC3260);
  sub_256BE3924(&v8, v1 + 112);
  return v1;
}

uint64_t sub_256BF6D90()
{
  OUTLINED_FUNCTION_2();
  v1[25] = v2;
  v1[26] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  OUTLINED_FUNCTION_21(v3);
  v1[27] = OUTLINED_FUNCTION_51_0();
  return MEMORY[0x270FA2498](sub_256BF6E14, v0, 0);
}

uint64_t sub_256BF6E14()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = v0[26];
  uint64_t v3 = sub_256BF92E8(&qword_269FC3230, v2, (void (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 136);
  v0[28] = v4;
  uint64_t v5 = *(void *)(v1 + 144);
  v0[29] = v5;
  __swift_mutable_project_boxed_opaque_existential_1(v1 + 112, v4);
  v0[30] = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_256CEE2E8();
  v0[31] = v6;
  OUTLINED_FUNCTION_6(v6);
  v0[32] = v7;
  uint64_t v8 = OUTLINED_FUNCTION_51_0();
  v0[33] = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[34] = AssociatedTypeWitness;
  OUTLINED_FUNCTION_6(AssociatedTypeWitness);
  v0[35] = v10;
  v0[36] = *(void *)(v11 + 64);
  uint64_t v12 = OUTLINED_FUNCTION_51_0();
  v0[37] = v12;
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v0[38] = v13;
  *uint64_t v13 = v14;
  v13[1] = sub_256BF6FFC;
  return MEMORY[0x270FA1E88](v8, v1, v3, v12, v4, v5);
}

uint64_t sub_256BF6FFC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 208);
    uint64_t v8 = sub_256BF740C;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 208);
    swift_endAccess();
    swift_task_dealloc();
    uint64_t v8 = sub_256BF70F8;
    uint64_t v7 = v9;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256BF70F8()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 240);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 256) + 8))(v1, *(void *)(v0 + 248));
    swift_task_dealloc();
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  else
  {
    *(void *)(v0 + 72) = v2;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 48));
    OUTLINED_FUNCTION_59_1();
    v3();
    swift_task_dealloc();
  }
  uint64_t v4 = OUTLINED_FUNCTION_96();
  sub_256BFD46C(v4, v5, &qword_269FC3238);
  sub_256BFD41C(v0 + 16, v0 + 112, &qword_269FC3238);
  if (*(void *)(v0 + 136))
  {
    sub_256BFD324((_OWORD *)(v0 + 112), (_OWORD *)(v0 + 80));
    sub_256BE393C(v0 + 80, v0 + 144);
    uint64_t v6 = type metadata accessor for ClientData(0);
    int v7 = swift_dynamicCast();
    uint64_t v8 = *(void *)(v0 + 216);
    if (v7)
    {
      uint64_t v9 = *(void *)(v0 + 200);
      __swift_storeEnumTagSinglePayload(*(void *)(v0 + 216), 0, 1, v6);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      sub_256BE33C8(v0 + 16, &qword_269FC3238);
      sub_256BFD3C8();
      uint64_t v10 = v9;
      uint64_t v11 = 0;
    }
    else
    {
      __swift_storeEnumTagSinglePayload(*(void *)(v0 + 216), 1, 1, v6);
      sub_256BE33C8(v8, &qword_269FC3228);
      if (qword_26B2C8CC0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_256CEDC88();
      __swift_project_value_buffer(v14, (uint64_t)qword_26B2C8CA8);
      uint64_t v15 = sub_256CEDC68();
      os_log_type_t v16 = sub_256CEE2B8();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_256BD4000, v15, v16, "InferenceProvider stream produced a non-ClientData element", v17, 2u);
        MEMORY[0x25A2AEBD0](v17, -1, -1);
      }
      uint64_t v18 = *(void *)(v0 + 200);

      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      sub_256BE33C8(v0 + 16, &qword_269FC3238);
      uint64_t v10 = v18;
      uint64_t v11 = 1;
    }
    uint64_t v12 = 1;
    uint64_t v13 = v6;
  }
  else
  {
    sub_256BE33C8(v0 + 16, &qword_269FC3238);
    sub_256BE33C8(v0 + 112, &qword_269FC3238);
    type metadata accessor for ClientData(0);
    uint64_t v10 = OUTLINED_FUNCTION_95_0();
  }
  __swift_storeEnumTagSinglePayload(v10, v11, v12, v13);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v19();
}

uint64_t sub_256BF740C()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v4 = OUTLINED_FUNCTION_51_0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v5(v4, v1, v2);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = sub_256CEE6B8();
  if (v6)
  {
    int v7 = (void *)v6;
    (*(void (**)(uint64_t, void))(v0[35] + 8))(v4, v0[34]);
  }
  else
  {
    uint64_t v8 = v0[34];
    int v7 = (void *)OUTLINED_FUNCTION_94();
    v5(v9, v4, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_endAccess();
  swift_task_dealloc();
  sub_256BE9EDC();
  OUTLINED_FUNCTION_94();
  uint64_t v11 = v10;
  MEMORY[0x25A2AE9C0](v7);
  InferenceError.init(wrapping:)(v7, v11);
  swift_willThrow();

  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v12();
}

uint64_t sub_256BF75A0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 112);
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

void sub_256BF75D8()
{
}

void sub_256BF75E0()
{
}

uint64_t sub_256BF75FC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF0;
  return sub_256BF6D90();
}

uint64_t sub_256BF7698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 72) = a4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269FC3220 + dword_269FC3220);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 80) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_256BF7770;
  return v10(a1, a2, a3, v4 + 16);
}

uint64_t sub_256BF7770()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 72);
    char v8 = *(unsigned char *)(v3 + 64);
    long long v9 = *(_OWORD *)(v3 + 32);
    long long v10 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v7 + 16) = v9;
    *(_OWORD *)(v7 + 32) = v10;
    *(unsigned char *)(v7 + 48) = v8;
    OUTLINED_FUNCTION_20_0();
  }
  else
  {
    OUTLINED_FUNCTION_16();
  }
  return v11();
}

void sub_256BF7854()
{
}

uint64_t sub_256BF7864()
{
  nullsub_1();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_256BFD374(v1);
}

uint64_t sub_256BF78E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 72) = a3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 80) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_256BFD598;
  return _s20ModelManagerServices24InferenceProviderAdapterV15transitionAsset_2toyAA0deH10DescriptorV_AA9LoadStateOtYaAA0D5ErrorOYKF();
}

uint64_t sub_256BF7974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 72) = a4;
  char v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 80) = v8;
  *char v8 = v4;
  v8[1] = sub_256BFD598;
  return _s20ModelManagerServices24InferenceProviderAdapterV14requestOneShot10clientData13configurationAA06ClientK0VAH_AA0dE20RequestConfigurationVtYaAA0D5ErrorOYKF(a1, a2, a3, v4 + 16);
}

uint64_t sub_256BF7A38(uint64_t a1, uint64_t a2, unsigned char *a3, unsigned char *a4, uint64_t a5)
{
  *(void *)(v5 + 72) = a5;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 80) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_256BFD598;
  return _s20ModelManagerServices24InferenceProviderAdapterV15transitionAsset14withIdentifier2to4fromySS_AA9LoadStateOAItYaAA0D5ErrorOYKF(a1, a2, a3, a4, v5 + 16);
}

uint64_t InferenceProviderDescriptor.Instance.hash(into:)()
{
  if (!*(void *)(v0 + 8)) {
    return sub_256CEE7B8();
  }
  sub_256CEE7B8();
  return sub_256CEDFA8();
}

uint64_t static InferenceProviderDescriptor.Instance.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  return sub_256CEE6C8();
}

BOOL sub_256BF7BEC(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_256BF7BFC()
{
  return sub_256CEE7B8();
}

uint64_t sub_256BF7C24(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49746C7561666564 && a2 == 0xEF65636E6174736ELL;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000256D00290)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256BF7D24()
{
  return 2;
}

uint64_t sub_256BF7D2C()
{
  return sub_256CEE7F8();
}

uint64_t sub_256BF7D6C(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x49746C7561666564;
  }
}

BOOL sub_256BF7DB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_256BF7BEC(*a1, *a2);
}

uint64_t sub_256BF7DC0()
{
  return sub_256BF7D2C();
}

uint64_t sub_256BF7DDC()
{
  return sub_256BF7BFC();
}

uint64_t sub_256BF7DE4()
{
  return sub_256BF7D6C(*v0);
}

uint64_t sub_256BF7DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BF7C24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256BF7E14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256BF7D24();
  *a1 = result;
  return result;
}

uint64_t sub_256BF7E3C(uint64_t a1)
{
  unint64_t v2 = sub_256BF97C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BF7E78(uint64_t a1)
{
  unint64_t v2 = sub_256BF97C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BF7EB4(uint64_t a1)
{
  unint64_t v2 = sub_256BF985C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BF7EF0(uint64_t a1)
{
  unint64_t v2 = sub_256BF985C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256BF7F30(uint64_t a1)
{
  unint64_t v2 = sub_256BF9810();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BF7F6C(uint64_t a1)
{
  unint64_t v2 = sub_256BF9810();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderDescriptor.Instance.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3030);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_54();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3038);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3040);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_53_0();
  uint64_t v6 = *(void *)(v0 + 8);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256BF97C4();
  sub_256CEE878();
  if (v6)
  {
    sub_256BF9810();
    sub_256CEE538();
    sub_256CEE568();
  }
  else
  {
    sub_256BF985C();
    sub_256CEE538();
  }
  OUTLINED_FUNCTION_50();
  v7();
  OUTLINED_FUNCTION_45();
  v8();
  OUTLINED_FUNCTION_33();
}

uint64_t InferenceProviderDescriptor.Instance.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  OUTLINED_FUNCTION_42();
  sub_256CEE7B8();
  if (v1) {
    sub_256CEDFA8();
  }
  return sub_256CEE7F8();
}

void InferenceProviderDescriptor.Instance.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v2 = v1;
  long long v28 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3060);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3068);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_54();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3070);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_44_0();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_99_0();
  __swift_project_boxed_opaque_existential_1(v7, v8);
  sub_256BF97C4();
  OUTLINED_FUNCTION_93();
  sub_256CEE848();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v29 = v2;
  uint64_t v9 = sub_256CEE528();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10
    || (char v30 = *(unsigned char *)(v9 + 32),
        sub_256BEBCEC(1, v10, v9, v9 + 32, 0, (2 * v10) | 1),
        uint64_t v12 = v11,
        unint64_t v14 = v13,
        swift_bridgeObjectRelease(),
        v12 != v14 >> 1))
  {
    uint64_t v15 = sub_256CEE398();
    swift_allocError();
    uint64_t v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2BA0);
    *uint64_t v17 = &type metadata for InferenceProviderDescriptor.Instance;
    sub_256CEE468();
    sub_256CEE388();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x263F8DCB0], v15);
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_45();
    v18();
    uint64_t v2 = v29;
LABEL_8:
    uint64_t v19 = v2;
    goto LABEL_9;
  }
  if (v30)
  {
    sub_256BF9810();
    sub_256CEE458();
    uint64_t v22 = sub_256CEE498();
    uint64_t v24 = v23;
    OUTLINED_FUNCTION_50();
    v25();
    swift_unknownObjectRelease();
    uint64_t v26 = OUTLINED_FUNCTION_74();
    v27(v26);
  }
  else
  {
    sub_256BF985C();
    sub_256CEE458();
    OUTLINED_FUNCTION_50();
    v20();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_50();
    v21();
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  *long long v28 = v22;
  v28[1] = v24;
  uint64_t v19 = v2;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1Tm(v19);
  OUTLINED_FUNCTION_33();
}

void sub_256BF8658()
{
}

void sub_256BF8670()
{
}

uint64_t sub_256BF8690()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_256CEE798();
  sub_256CEE7B8();
  if (v1) {
    sub_256CEDFA8();
  }
  return sub_256CEE7F8();
}

uint64_t InferenceProviderDescriptor.id.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t InferenceProviderDescriptor.instance.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return sub_256CEDEC8();
}

uint64_t InferenceProviderDescriptor.hostedOnServer.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

__n128 InferenceProviderDescriptor.init(id:instance:hostedOnServer:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unsigned __int8 a4@<W3>, __n128 *a5@<X8>)
{
  a5->n128_u64[0] = a1;
  a5->n128_u64[1] = a2;
  __n128 result = *a3;
  a5[1] = *a3;
  a5[2].n128_u8[0] = a4;
  return result;
}

uint64_t InferenceProviderDescriptor.description.getter()
{
  uint64_t v1 = *v0;
  if (v0[3])
  {
    uint64_t v3 = *v0;
    sub_256CEDEC8();
    sub_256CEDFB8();
    sub_256CEDFB8();
    sub_256CEDFB8();
    return v3;
  }
  else
  {
    sub_256CEDEC8();
  }
  return v1;
}

uint64_t InferenceProviderDescriptor.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7B8();
  if (v1)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  return sub_256CEE7C8();
}

uint64_t static InferenceProviderDescriptor.== infix(_:_:)(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_47_0(a1);
  int v7 = *(unsigned __int8 *)(v6 + 32);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  int v10 = *(unsigned __int8 *)(v5 + 32);
  if (v3 != *(void *)v5 || v4 != *(void *)(v5 + 8))
  {
    sub_256CEE6C8();
    uint64_t result = OUTLINED_FUNCTION_78();
    if ((v13 & 1) == 0) {
      return result;
    }
  }
  if (!v1)
  {
    if (!v8)
    {
      swift_bridgeObjectRelease_n();
      return v7 ^ v10 ^ 1u;
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  if (v2 == v9 && v1 == v8) {
    return v7 ^ v10 ^ 1u;
  }
  OUTLINED_FUNCTION_69();
  uint64_t result = OUTLINED_FUNCTION_78();
  if (v15) {
    return v7 ^ v10 ^ 1u;
  }
  return result;
}

uint64_t sub_256BF893C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65636E6174736E69 && a2 == 0xE800000000000000;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E4F646574736F68 && a2 == 0xEE00726576726553)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_256CEE6C8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_256BF8A7C()
{
  return 3;
}

uint64_t sub_256BF8A84()
{
  return sub_256CEE7F8();
}

uint64_t sub_256BF8AC4(char a1)
{
  return qword_256CF2300[a1];
}

uint64_t sub_256BF8AE4()
{
  return sub_256BF8A84();
}

uint64_t sub_256BF8B00()
{
  return sub_256BF8AC4(*v0);
}

uint64_t sub_256BF8B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256BF893C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256BF8B30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256BF8A7C();
  *a1 = result;
  return result;
}

uint64_t sub_256BF8B58(uint64_t a1)
{
  unint64_t v2 = sub_256BF9E10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256BF8B94(uint64_t a1)
{
  unint64_t v2 = sub_256BF9E10();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderDescriptor.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3078);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256BF9E10();
  OUTLINED_FUNCTION_93();
  sub_256CEE878();
  sub_256CEE568();
  if (!v0)
  {
    sub_256BF9E5C();
    sub_256CEE5A8();
    sub_256CEE578();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_33();
}

uint64_t InferenceProviderDescriptor.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_42();
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7B8();
  if (v1)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  sub_256CEE7C8();
  return sub_256CEE7F8();
}

void InferenceProviderDescriptor.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3090);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256BF9E10();
  OUTLINED_FUNCTION_70_0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    LOBYTE(v13) = 0;
    uint64_t v6 = sub_256CEE498();
    uint64_t v8 = v7;
    uint64_t v12 = v6;
    sub_256BF9EA8();
    sub_256CEDEC8();
    sub_256CEE4D8();
    sub_256CEDEC8();
    char v9 = sub_256CEE4A8();
    uint64_t v10 = OUTLINED_FUNCTION_14_0();
    v11(v10);
    *(void *)uint64_t v4 = v12;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v13;
    *(void *)(v4 + 24) = v14;
    *(unsigned char *)(v4 + 32) = v9 & 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_33();
}

void sub_256BF9014()
{
}

void sub_256BF902C()
{
}

uint64_t sub_256BF904C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_256CEE798();
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7B8();
  if (v1)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  sub_256CEE7C8();
  return sub_256CEE7F8();
}

void sub_256BF9108()
{
}

uint64_t sub_256BF911C(uint64_t a1, uint64_t a2)
{
  sub_256CEE7F8();
  uint64_t v3 = a2 + 56;
  OUTLINED_FUNCTION_19_2();
  uint64_t v6 = v5 & v4;
  int64_t v8 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = sub_256CEDEC8();
  uint64_t v10 = 0;
  int64_t v11 = 0;
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  for (v6 &= v6 - 1; ; uint64_t v6 = v15 & v14)
  {
    sub_256CEE798();
    sub_256CEDEC8();
    sub_256CEDFA8();
    uint64_t v16 = sub_256CEE7F8();
    uint64_t result = swift_bridgeObjectRelease();
    v10 ^= v16;
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    if (__OFADD__(v11++, 1)) {
      goto LABEL_17;
    }
    if (v11 >= v8)
    {
LABEL_15:
      swift_release();
      return sub_256CEE7B8();
    }
    if (!*(void *)(v3 + 8 * v11)) {
      break;
    }
LABEL_12:
    OUTLINED_FUNCTION_32_2();
  }
  int64_t v13 = v11 + 1;
  if (v11 + 1 >= v8) {
    goto LABEL_15;
  }
  if (*(void *)(v3 + 8 * v13))
  {
    ++v11;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v11 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_15;
    }
    ++v13;
    if (*(void *)(v3 + 8 * v11)) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

unint64_t sub_256BF929C()
{
  unint64_t result = qword_269FC2FB0;
  if (!qword_269FC2FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2FB0);
  }
  return result;
}

uint64_t sub_256BF92E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256BF9330()
{
  unint64_t result = qword_26B2C54B0;
  if (!qword_26B2C54B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C54B0);
  }
  return result;
}

unint64_t sub_256BF937C()
{
  unint64_t result = qword_26B2C4A70;
  if (!qword_26B2C4A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4A70);
  }
  return result;
}

uint64_t sub_256BF93C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B80);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256BF942C()
{
  unint64_t result = qword_26B2C4EE0;
  if (!qword_26B2C4EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4EE0);
  }
  return result;
}

unint64_t sub_256BF9478()
{
  unint64_t result = qword_26B2C48B0;
  if (!qword_26B2C48B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48B0);
  }
  return result;
}

unint64_t sub_256BF94C4()
{
  unint64_t result = qword_269FC2FE8;
  if (!qword_269FC2FE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC2FE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC2FE8);
  }
  return result;
}

uint64_t sub_256BF9518()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_256BF9568(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_256BF95C0(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_256BF95D8(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_256BF95E4()
{
  unint64_t result = qword_26B2C7860;
  if (!qword_26B2C7860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7860);
  }
  return result;
}

uint64_t type metadata accessor for InferenceProviderPrewarmInformation(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C7890);
}

unint64_t sub_256BF9650()
{
  unint64_t result = qword_26B2C7878;
  if (!qword_26B2C7878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7878);
  }
  return result;
}

uint64_t sub_256BF969C()
{
  uint64_t v1 = OUTLINED_FUNCTION_63();
  v2(v1);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_97();
  v4(v3);
  return v0;
}

uint64_t sub_256BF96E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v3();
  return a1;
}

uint64_t sub_256BF973C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for InferenceProviderAdapter.StreamAdapter()
{
  return self;
}

unint64_t sub_256BF97C4()
{
  unint64_t result = qword_269FC3048;
  if (!qword_269FC3048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3048);
  }
  return result;
}

unint64_t sub_256BF9810()
{
  unint64_t result = qword_269FC3050;
  if (!qword_269FC3050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3050);
  }
  return result;
}

unint64_t sub_256BF985C()
{
  unint64_t result = qword_269FC3058;
  if (!qword_269FC3058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3058);
  }
  return result;
}

void sub_256BF98A8()
{
}

void sub_256BF98BC()
{
  OUTLINED_FUNCTION_57();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_0_0();
  uint64_t v31 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_53_0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(v2);
  uint64_t v11 = OUTLINED_FUNCTION_21(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_19();
  uint64_t v14 = v13 - v12;
  sub_256CEE7F8();
  uint64_t v15 = v6 + 56;
  OUTLINED_FUNCTION_19_2();
  unint64_t v18 = v17 & v16;
  OUTLINED_FUNCTION_91();
  uint64_t v30 = v19;
  uint64_t v32 = v6;
  sub_256CEDEC8();
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  if (!v18) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = v28 + (v21 << 6))
  {
    sub_256BFD41C(*(void *)(v32 + 48) + *(void *)(v31 + 72) * i, v14, v4);
    __swift_storeEnumTagSinglePayload(v14, 0, 1, v7);
    if (__swift_getEnumTagSinglePayload(v14, 1, v7) == 1) {
      goto LABEL_17;
    }
    sub_256BFD46C(v14, v0, v4);
    sub_256CEE798();
    sub_256CEDB08();
    sub_256BF92E8(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
    sub_256CEDF18();
    uint64_t v29 = sub_256CEE7F8();
    sub_256BE33C8(v0, v4);
    v20 ^= v29;
    if (v18) {
      goto LABEL_2;
    }
LABEL_3:
    if (__OFADD__(v21++, 1)) {
      goto LABEL_19;
    }
    if (v21 >= v30) {
      goto LABEL_16;
    }
    if (!*(void *)(v15 + 8 * v21)) {
      break;
    }
LABEL_12:
    OUTLINED_FUNCTION_32_2();
    unint64_t v18 = v27 & v26;
  }
  uint64_t v25 = v21 + 1;
  if (v21 + 1 >= v30)
  {
LABEL_16:
    __swift_storeEnumTagSinglePayload(v14, 1, 1, v7);
LABEL_17:
    swift_release();
    sub_256CEE7B8();
    OUTLINED_FUNCTION_71();
    return;
  }
  if (*(void *)(v15 + 8 * v25))
  {
    ++v21;
    goto LABEL_12;
  }
  while (1)
  {
    uint64_t v21 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v21 >= v30) {
      goto LABEL_16;
    }
    ++v25;
    if (*(void *)(v15 + 8 * v21)) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_256BF9B6C()
{
  OUTLINED_FUNCTION_57();
  uint64_t v2 = v1;
  type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_40_1();
  MEMORY[0x270FA5388](v4);
  sub_256CEE7F8();
  uint64_t v5 = v2 + 56;
  OUTLINED_FUNCTION_19_2();
  uint64_t v8 = v7 & v6;
  int64_t v10 = (unint64_t)(v9 + 63) >> 6;
  sub_256CEDEC8();
  uint64_t v11 = 0;
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_3;
  }
LABEL_2:
  for (v8 &= v8 - 1; ; uint64_t v8 = v16 & v15)
  {
    sub_256BF969C();
    sub_256BFD3C8();
    sub_256CEE798();
    sub_256CEDB08();
    sub_256BF92E8(&qword_26B2C8840, 255, MEMORY[0x263F07508]);
    sub_256CEDF18();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_256CEE7F8();
    sub_256BF96E8(v0, (void (*)(void))type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
    v11 ^= v17;
    if (v8) {
      goto LABEL_2;
    }
LABEL_3:
    if (__OFADD__(v12++, 1)) {
      goto LABEL_17;
    }
    if (v12 >= v10)
    {
LABEL_15:
      swift_release();
      sub_256CEE7B8();
      OUTLINED_FUNCTION_71();
      return;
    }
    if (!*(void *)(v5 + 8 * v12)) {
      break;
    }
LABEL_12:
    OUTLINED_FUNCTION_32_2();
  }
  int64_t v14 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_15;
  }
  if (*(void *)(v5 + 8 * v14))
  {
    ++v12;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_15;
    }
    ++v14;
    if (*(void *)(v5 + 8 * v12)) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

unint64_t sub_256BF9E10()
{
  unint64_t result = qword_269FC3080;
  if (!qword_269FC3080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3080);
  }
  return result;
}

unint64_t sub_256BF9E5C()
{
  unint64_t result = qword_269FC3088;
  if (!qword_269FC3088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3088);
  }
  return result;
}

unint64_t sub_256BF9EA8()
{
  unint64_t result = qword_269FC3098;
  if (!qword_269FC3098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3098);
  }
  return result;
}

uint64_t sub_256BF9EF4()
{
  return sub_256BF92E8(&qword_269FC30A0, 255, (void (*)(uint64_t))type metadata accessor for InferenceProviderRequestConfiguration);
}

unint64_t sub_256BF9F44()
{
  unint64_t result = qword_269FC30A8;
  if (!qword_269FC30A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC30A8);
  }
  return result;
}

unint64_t sub_256BF9F94()
{
  unint64_t result = qword_269FC30B0;
  if (!qword_269FC30B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC30B0);
  }
  return result;
}

uint64_t sub_256BF9FE0()
{
  return sub_256BF92E8(&qword_269FC30B8, 255, (void (*)(uint64_t))type metadata accessor for InferenceProviderPrewarmInformation);
}

unint64_t sub_256BFA030()
{
  unint64_t result = qword_269FC30E0;
  if (!qword_269FC30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC30E0);
  }
  return result;
}

unint64_t sub_256BFA080()
{
  unint64_t result = qword_26B2C54C8;
  if (!qword_26B2C54C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C54C8);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for InferenceProviderRequestConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v8;
    uint64_t v9 = a3[7];
    uint64_t v29 = &a1[v9];
    int64_t v10 = &a2[v9];
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v11 = sub_256CEDB08();
    int64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
    v12(v29, v10, v11);
    v12(&v4[a3[8]], &a2[a3[8]], v11);
    uint64_t v13 = a3[10];
    *(void *)&v4[a3[9]] = *(void *)&a2[a3[9]];
    *(void *)&v4[v13] = *(void *)&a2[v13];
    v12(&v4[a3[11]], &a2[a3[11]], v11);
    uint64_t v14 = a3[12];
    uint64_t v15 = a3[13];
    uint64_t v16 = &v4[v14];
    uint64_t v17 = &a2[v14];
    long long v18 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v18;
    v16[32] = v17[32];
    *(_DWORD *)&v4[v15] = *(_DWORD *)&a2[v15];
    uint64_t v19 = a3[14];
    uint64_t v20 = a3[15];
    uint64_t v21 = &v4[v19];
    unint64_t v22 = &a2[v19];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = &v4[v20];
    uint64_t v25 = &a2[v20];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    v4[a3[16]] = a2[a3[16]];
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  return v4;
}

uint64_t destroy for InferenceProviderRequestConfiguration(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_256CEDB08();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[8], v5);
  v6(a1 + a2[11], v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for InferenceProviderRequestConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  *((void *)a1 + 4) = *((void *)a2 + 4);
  uint64_t v8 = a3[7];
  uint64_t v27 = &a1[v8];
  uint64_t v9 = &a2[v8];
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  v11(v27, v9, v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v12 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  v11(&a1[a3[11]], &a2[a3[11]], v10);
  uint64_t v13 = a3[12];
  uint64_t v14 = a3[13];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  *(_DWORD *)&a1[v14] = *(_DWORD *)&a2[v14];
  uint64_t v18 = a3[14];
  uint64_t v19 = a3[15];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  uint64_t v23 = &a1[v19];
  uint64_t v24 = &a2[v19];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  a1[a3[16]] = a2[a3[16]];
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

char *assignWithCopy for InferenceProviderRequestConfiguration(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_256CEDB08();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  v10(&a1[a3[11]], &a2[a3[11]], v9);
  uint64_t v11 = a3[12];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  long long v14 = *(_OWORD *)v13;
  long long v15 = *((_OWORD *)v13 + 1);
  v12[32] = v13[32];
  *(_OWORD *)uint64_t v12 = v14;
  *((_OWORD *)v12 + 1) = v15;
  *(_DWORD *)&a1[a3[13]] = *(_DWORD *)&a2[a3[13]];
  uint64_t v16 = a3[14];
  long long v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)long long v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[15];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[a3[16]] = a2[a3[16]];
  return a1;
}

uint64_t initializeWithTake for InferenceProviderRequestConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  v11(a1 + a3[11], a2 + a3[11], v10);
  uint64_t v13 = a3[12];
  uint64_t v14 = a3[13];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = (long long *)(a2 + v13);
  long long v17 = *v16;
  long long v18 = v16[1];
  *(unsigned char *)(v15 + 32) = *((unsigned char *)v16 + 32);
  *(_OWORD *)uint64_t v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  uint64_t v19 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

char *assignWithTake for InferenceProviderRequestConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_256CEDB08();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  uint64_t v13 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  v12(&a1[a3[11]], &a2[a3[11]], v11);
  uint64_t v14 = a3[12];
  uint64_t v15 = a3[13];
  uint64_t v16 = &a1[v14];
  long long v17 = &a2[v14];
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v16[32] = v17[32];
  *(_DWORD *)&a1[v15] = *(_DWORD *)&a2[v15];
  uint64_t v19 = a3[14];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[15];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = (uint64_t *)&a2[v24];
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  a1[a3[16]] = a2[a3[16]];
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderRequestConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256BFA984);
}

uint64_t sub_256BFA984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_76();
  }
  uint64_t v7 = sub_256CEDB08();
  uint64_t v8 = a1 + *(int *)(a3 + 28);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderRequestConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256BFAA10);
}

void sub_256BFAA10()
{
  OUTLINED_FUNCTION_101();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_256CEDB08();
    uint64_t v6 = v1 + *(int *)(v4 + 28);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

uint64_t sub_256BFAA84()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for LoadState()
{
}

uint64_t dispatch thunk of InferenceProvider.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InferenceProvider.loadIn(inferenceAssetIdentifier:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_60_0();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_38_1();
  return v4(v3);
}

uint64_t dispatch thunk of InferenceProvider.loadOut(inferenceAssetIdentifier:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_60_0();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_38_1();
  return v4(v3);
}

uint64_t dispatch thunk of InferenceProvider.transitionAsset(withIdentifier:to:)()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_8_2();
  uint64_t v13 = *(void *)(v0 + 32) + **(int **)(v0 + 32);
  uint64_t v14 = v0 + 32;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_50_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of InferenceProvider.requestStream(clientData:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of InferenceProvider.requestStream(clientData:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of InferenceProvider.requestOneShot(clientData:configuration:)()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_8_2();
  uint64_t v13 = *(void *)(v0 + 56) + **(int **)(v0 + 56);
  uint64_t v14 = v0 + 56;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BFAF24;
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_50_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_8_2();
  uint64_t v13 = *(void *)(v0 + 64) + **(int **)(v0 + 64);
  uint64_t v14 = v0 + 64;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_50_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t sub_256BFAF24()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_96();
  return v4(v3);
}

uint64_t dispatch thunk of InferenceProvider.cancelRequest(uuid:)()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_17();
  return v4(v3);
}

void *initializeWithCopy for InferenceProviderAssetDescriptor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

void *assignWithCopy for InferenceProviderAssetDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for InferenceProviderAssetDescriptor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderAssetDescriptor(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderAssetDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for InferenceProviderAssetDescriptor()
{
}

void *initializeBufferWithCopyOfBuffer for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_256CEDB08();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_256CEDEC8();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (void *)((char *)v4 + v14);
    long long v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *(_DWORD *)((char *)v4 + v15) = *(_DWORD *)((char *)a2 + v15);
    sub_256CEDEC8();
  }
  return v4;
}

uint64_t destroy for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_256CEDB08();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  sub_256CEDEC8();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for InferenceProviderPrewarmInformation(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_DWORD *)((char *)a1 + v11) = *(_DWORD *)((char *)a2 + v11);
  return a1;
}

uint64_t assignWithTake for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256BFB880);
}

uint64_t sub_256BFB880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_76();
  }
  uint64_t v7 = sub_256CEDB08();
  uint64_t v8 = a1 + *(int *)(a3 + 24);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256BFB90C);
}

void sub_256BFB90C()
{
  OUTLINED_FUNCTION_101();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_256CEDB08();
    uint64_t v6 = v1 + *(int *)(v4 + 24);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

uint64_t sub_256BFB980()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of InferenceProviding.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InferenceProviding.prewarmHint(_:)()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_17();
  return v4(v3);
}

uint64_t _s20ModelManagerServices18InferenceProvidingP15transitionAsset_2toyAA0d8ProviderG10DescriptorV_AA9LoadStateOtYaAA0D5ErrorOYKFTj()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_8_2();
  uint64_t v13 = *(void *)(v0 + 24) + **(int **)(v0 + 24);
  uint64_t v14 = v0 + 24;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_50_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of InferenceProviding.requestStream(clientData:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t _s20ModelManagerServices18InferenceProvidingP14requestOneShot10clientData13configurationAA06ClientJ0VAH_AA0D28ProviderRequestConfigurationVtYaAA0D5ErrorOYKFTj()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 40)
                                                                                     + **(int **)(v0 + 40));
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_14(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_256BE3BF0;
  return v16(v11, v9, v7, v5, v3, v1);
}

uint64_t _s20ModelManagerServices36UndeprecatedInferenceProviderAdapterP15transitionAsset14withIdentifier2to4fromySS_AA9LoadStateOAItYaAA0E5ErrorOYKFTj()
{
  OUTLINED_FUNCTION_44_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 8)
                                                                                              + **(int **)(v0 + 8));
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_14(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_256BE3BF0;
  return v18(v13, v11, v9, v7, v5, v3, v1);
}

uint64_t destroy for InferenceProviderAdapter(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t initializeWithCopy for InferenceProviderAdapter(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for InferenceProviderAdapter(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for InferenceProviderAdapter(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderAdapter(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderAdapter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for InferenceProviderAdapter()
{
}

uint64_t destroy for Policy.Asset()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceProviderDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for InferenceProviderDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InferenceProviderDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderDescriptor(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for InferenceProviderDescriptor()
{
}

void *initializeBufferWithCopyOfBuffer for InferenceProviderDescriptor.Instance(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_256CEDEC8();
  return a1;
}

uint64_t destroy for InferenceProviderDescriptor.Instance()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for InferenceProviderDescriptor.Instance(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for InferenceProviderDescriptor.Instance(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderDescriptor.Instance(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderDescriptor.Instance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_256BFC538(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_256BFC550(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for InferenceProviderDescriptor.Instance()
{
}

unsigned char *_s20ModelManagerServices9LoadStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256BFC648);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderDescriptor.CodingKeys()
{
  return &type metadata for InferenceProviderDescriptor.CodingKeys;
}

unsigned char *sub_256BFC688(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderDescriptor.Instance.CodingKeys()
{
  return &type metadata for InferenceProviderDescriptor.Instance.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderDescriptor.Instance.DefaultInstanceCodingKeys()
{
  return &type metadata for InferenceProviderDescriptor.Instance.DefaultInstanceCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256BFC750);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys()
{
  return &type metadata for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InferenceProviderPrewarmInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256BFC854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderPrewarmInformation.CodingKeys()
{
  return &type metadata for InferenceProviderPrewarmInformation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StateDump.InferenceProviderState.ActiveRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s20ModelManagerServices27InferenceProviderDescriptorV8InstanceO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256BFC9E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderAssetDescriptor.CodingKeys()
{
  return &type metadata for InferenceProviderAssetDescriptor.CodingKeys;
}

uint64_t getEnumTagSinglePayload for InferenceProviderRequestConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for InferenceProviderRequestConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256BFCB6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderRequestConfiguration.CodingKeys()
{
  return &type metadata for InferenceProviderRequestConfiguration.CodingKeys;
}

unint64_t sub_256BFCBA8()
{
  unint64_t result = qword_269FC3178;
  if (!qword_269FC3178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3178);
  }
  return result;
}

unint64_t sub_256BFCBF8()
{
  unint64_t result = qword_269FC3180;
  if (!qword_269FC3180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3180);
  }
  return result;
}

unint64_t sub_256BFCC48()
{
  unint64_t result = qword_269FC3188;
  if (!qword_269FC3188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3188);
  }
  return result;
}

unint64_t sub_256BFCC98()
{
  unint64_t result = qword_269FC3190;
  if (!qword_269FC3190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3190);
  }
  return result;
}

unint64_t sub_256BFCCE8()
{
  unint64_t result = qword_269FC3198;
  if (!qword_269FC3198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3198);
  }
  return result;
}

unint64_t sub_256BFCD38()
{
  unint64_t result = qword_269FC31A0[0];
  if (!qword_269FC31A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269FC31A0);
  }
  return result;
}

uint64_t sub_256BFCD84(uint64_t a1, uint64_t a2)
{
  return sub_256BF92E8(&qword_269FC31B8, a2, (void (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter);
}

uint64_t sub_256BFCDCC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_256BF92E8(&qword_269FC31B8, a2, (void (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256BFCE28()
{
  unint64_t result = qword_269FC31C0;
  if (!qword_269FC31C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC31C0);
  }
  return result;
}

unint64_t sub_256BFCE78()
{
  unint64_t result = qword_269FC31C8;
  if (!qword_269FC31C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC31C8);
  }
  return result;
}

unint64_t sub_256BFCEC8()
{
  unint64_t result = qword_269FC31D0;
  if (!qword_269FC31D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC31D0);
  }
  return result;
}

unint64_t sub_256BFCF18()
{
  unint64_t result = qword_269FC31D8;
  if (!qword_269FC31D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC31D8);
  }
  return result;
}

unint64_t sub_256BFCF68()
{
  unint64_t result = qword_269FC31E0;
  if (!qword_269FC31E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC31E0);
  }
  return result;
}

unint64_t sub_256BFCFB8()
{
  unint64_t result = qword_269FC31E8;
  if (!qword_269FC31E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC31E8);
  }
  return result;
}

unint64_t sub_256BFD008()
{
  unint64_t result = qword_269FC31F0;
  if (!qword_269FC31F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC31F0);
  }
  return result;
}

unint64_t sub_256BFD058()
{
  unint64_t result = qword_269FC31F8;
  if (!qword_269FC31F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC31F8);
  }
  return result;
}

uint64_t sub_256BFD0A4(uint64_t a1, uint64_t a2)
{
  return sub_256BF92E8(&qword_269FC3200, a2, (void (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter);
}

uint64_t sub_256BFD0EC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_256BF92E8(&qword_269FC3208, a2, (void (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256BFD148()
{
  unint64_t result = qword_26B2C7888;
  if (!qword_26B2C7888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7888);
  }
  return result;
}

unint64_t sub_256BFD198()
{
  unint64_t result = qword_26B2C7880;
  if (!qword_26B2C7880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7880);
  }
  return result;
}

unint64_t sub_256BFD1E8()
{
  unint64_t result = qword_26B2C7870;
  if (!qword_26B2C7870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7870);
  }
  return result;
}

unint64_t sub_256BFD238()
{
  unint64_t result = qword_26B2C7868;
  if (!qword_26B2C7868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7868);
  }
  return result;
}

unint64_t sub_256BFD288()
{
  unint64_t result = qword_269FC3210;
  if (!qword_269FC3210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3210);
  }
  return result;
}

unint64_t sub_256BFD2D8()
{
  unint64_t result = qword_269FC3218;
  if (!qword_269FC3218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3218);
  }
  return result;
}

_OWORD *sub_256BFD324(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  OUTLINED_FUNCTION_26();
  if ((*(unsigned char *)(v2 + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v3;
  }
  return a1;
}

uint64_t sub_256BFD374(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_256BFD37C()
{
  unint64_t result = qword_26B2C78B0;
  if (!qword_26B2C78B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C78B0);
  }
  return result;
}

uint64_t sub_256BFD3C8()
{
  uint64_t v1 = OUTLINED_FUNCTION_63();
  v2(v1);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_59_1();
  v3();
  return v0;
}

uint64_t sub_256BFD41C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_97();
  v5(v4);
  return a2;
}

uint64_t sub_256BFD46C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_59_1();
  v4();
  return a2;
}

uint64_t sub_256BFD4C4()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_256BFD4D4()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_14(v4);
  void *v5 = v6;
  v5[1] = sub_256BE3BF0;
  return sub_256BF46A0(v3, v1);
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  return *(void *)(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return sub_256CEDEC8();
}

uint64_t OUTLINED_FUNCTION_58_0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_256CEE598();
}

double OUTLINED_FUNCTION_61_0(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(unsigned char *)(a2 + 48) = -120;
  return result;
}

uint64_t OUTLINED_FUNCTION_64()
{
  return sub_256CEDF18();
}

uint64_t OUTLINED_FUNCTION_65()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_76()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_83()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_84_0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return sub_256CEE568();
}

uint64_t OUTLINED_FUNCTION_88@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return v1 - 128;
}

void OUTLINED_FUNCTION_90(uint64_t a1, ...)
{
  va_start(va, a1);
  InferenceError.init(wrapping:)(v1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_96()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_98()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_99_0()
{
  return v0;
}

uint64_t sub_256BFD7D0()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_269FC3278);
  __swift_project_value_buffer(v0, (uint64_t)qword_269FC3278);
  return sub_256CEDC78();
}

uint64_t InferenceProviderExtension.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t InferenceProviderExtension.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_256BFD884(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t InferenceProviderExtension.deinit()
{
  swift_release();
  return v0;
}

uint64_t InferenceProviderExtension.__deallocating_deinit()
{
  InferenceProviderExtension.deinit();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t InferenceProviderExtension.configuration.getter()
{
  return swift_retain();
}

uint64_t sub_256BFD8F0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = InferenceProviderExtension.configuration.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_256BFD91C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 96))();
  *a1 = result;
  return result;
}

Swift::Bool __swiftcall InferenceProviderExtension.accept(connection:)(NSXPCConnection connection)
{
  return 0;
}

uint64_t sub_256BFD95C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = dynamic_cast_existential_1_conditional(v3);
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    *(void *)(a1 + 24) = &type metadata for InferenceProviderAdapter;
    *(void *)(a1 + 32) = &protocol witness table for InferenceProviderAdapter;
    int v9 = (uint64_t *)swift_allocObject();
    *(void *)a1 = v9;
    v9[5] = v6;
    v9[6] = v7;
    __swift_allocate_boxed_opaque_existential_1(v9 + 2);
    uint64_t result = v8(v6, v7);
LABEL_5:
    *(unsigned char *)(a1 + 40) = 0;
    return result;
  }
  uint64_t result = dynamic_cast_existential_1_conditional(v3);
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = v11;
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    *(void *)(a1 + 24) = result;
    *(void *)(a1 + 32) = v11;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    uint64_t result = v14(v12, v13);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t InferenceProviderExtension.handleConnection(_:)(_xpc_connection_s *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256CEDCD8();
  MEMORY[0x270FA5388](v7 - 8);
  pid_t pid = xpc_connection_get_pid(a1);
  swift_retain();
  sub_256BFD95C((uint64_t)v17);
  type metadata accessor for InferenceProviderXPCRequestDispatcher();
  swift_allocObject();
  InferenceProviderXPCRequestDispatcher.init(configuration:)(v17);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4F68);
  swift_allocObject();
  uint64_t v9 = swift_retain();
  sub_256BFE220(v9);
  sub_256CEDD48();
  *(_DWORD *)(swift_allocObject() + 16) = pid;
  swift_unknownObjectRetain();
  swift_retain();
  sub_256CEDCB8();
  uint64_t v10 = sub_256CEDCA8();
  uint64_t v11 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v11);
  sub_256CEE158();
  swift_retain();
  swift_retain();
  uint64_t v12 = sub_256CEE148();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8F500];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v2;
  void v13[5] = v10;
  sub_256BDB760();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_256BFDE70(uint64_t a1, int a2)
{
  uint64_t v4 = sub_256CEDDE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269FC2710 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_256CEDC88();
  __swift_project_value_buffer(v8, (uint64_t)qword_269FC3278);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, a1, v4);
  uint64_t v10 = sub_256CEDC68();
  os_log_type_t v11 = sub_256CEE2B8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109378;
    int v17 = a2;
    sub_256CEE308();
    *(_WORD *)(v12 + 8) = 2112;
    v16[1] = v12 + 10;
    sub_256C00054();
    swift_allocError();
    v9(v14, (uint64_t)v7, v4);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    _OWORD v16[2] = v15;
    sub_256CEE308();
    *uint64_t v13 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_256BD4000, v10, v11, "Session with host process with %d was cancelled: %@", (uint8_t *)v12, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    MEMORY[0x25A2AEBD0](v13, -1, -1);
    MEMORY[0x25A2AEBD0](v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  exit(1);
}

uint64_t sub_256BFE0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_256CEE158();
  v5[4] = sub_256CEE148();
  uint64_t v7 = sub_256CEE0D8();
  return MEMORY[0x270FA2498](sub_256BFE190, v7, v6);
}

uint64_t sub_256BFE190()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  uint64_t v0 = swift_retain();
  sub_256BFD884(v0);
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256BFE1F8(_xpc_connection_s *a1)
{
  return InferenceProviderExtension.handleConnection(_:)(a1);
}

uint64_t sub_256BFE220(uint64_t a1)
{
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B60);
  uint64_t v3 = sub_256CEDEB8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5C80);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  *(void *)(v1 + 112) = a1;
  *(void *)(v1 + 120) = v4;
  return v1;
}

double sub_256BFE2A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v69 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v70 = (uint64_t (*)(uint64_t))((char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v67 - v6;
  uint64_t v8 = sub_256CEDE98();
  uint64_t v73 = *(void *)(v8 - 8);
  uint64_t v74 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v72 = v9;
  uint64_t v76 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v71 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for InferenceProviderXPCRequest(0);
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v67 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v68 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v75 = (char *)&v67 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4F08);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char **)((char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v67 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C77A0);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char **)((char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v67 - v26;
  if (sub_256CEDE48())
  {
    sub_256C0035C(&qword_26B2C4F10, &qword_26B2C77A0);
    sub_256CEDE78();
    uint64_t v28 = a1;
    sub_256BFD41C((uint64_t)v27, (uint64_t)v25, &qword_26B2C77A0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v30 = *v25;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v31 = sub_256CEE178();
      __swift_storeEnumTagSinglePayload((uint64_t)v71, 1, 1, v31);
      uint64_t v32 = (void *)swift_allocObject();
      v32[2] = 0;
      v32[3] = 0;
      v32[4] = v77;
      v32[5] = v30;
      swift_retain();
      sub_256BDB760();
      swift_release();
    }
    else
    {
      LODWORD(v71) = *((unsigned __int8 *)v25
                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B2C78B8) + 64));
      sub_256C00498();
      if (qword_26B2C9180 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_256CEDC88();
      __swift_project_value_buffer(v40, (uint64_t)qword_26B2C9168);
      uint64_t v41 = sub_256CEDC68();
      os_log_type_t v42 = sub_256CEE2A8();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 134217984;
        uint64_t v79 = v30;
        sub_256CEE308();
        _os_log_impl(&dword_256BD4000, v41, v42, "Received message %llu.", v43, 0xCu);
        MEMORY[0x25A2AEBD0](v43, -1, -1);
      }

      sub_256CEDE58();
      uint64_t v44 = v73;
      uint64_t v45 = v28;
      uint64_t v46 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v76, v45, v74);
      uint64_t v70 = type metadata accessor for InferenceProviderXPCRequest;
      sub_256C004EC();
      unint64_t v47 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      unint64_t v48 = v13 + ((v72 + *(unsigned __int8 *)(v67 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80)) + 7;
      long long v49 = v30;
      unint64_t v50 = v48 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v51 = ((v48 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v52 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v52 + v47, v76, v46);
      uint64_t v53 = v70;
      sub_256C00498();
      *(void *)(v52 + v50) = v77;
      *(void *)(v52 + v51) = v49;
      swift_retain();
      sub_256BFFD0C();
      swift_release();
      sub_256C00A20((uint64_t)v75, (void (*)(void))v53);
    }
    uint64_t v38 = &qword_26B2C77A0;
    uint64_t v39 = (uint64_t)v27;
  }
  else
  {
    uint64_t v75 = v7;
    sub_256C0035C(&qword_269FC32A0, &qword_26B2C4F08);
    uint64_t v33 = a1;
    sub_256CEDE78();
    sub_256BFD41C((uint64_t)v21, (uint64_t)v19, &qword_26B2C4F08);
    int v34 = swift_getEnumCaseMultiPayload();
    uint64_t v68 = *v19;
    if (v34 == 1)
    {
      uint64_t v35 = sub_256CEE178();
      __swift_storeEnumTagSinglePayload((uint64_t)v71, 1, 1, v35);
      uint64_t v36 = (void *)swift_allocObject();
      v36[2] = 0;
      v36[3] = 0;
      uint64_t v37 = v68;
      v36[4] = v77;
      v36[5] = v37;
      swift_retain();
      sub_256BDB760();
      swift_release();
      uint64_t v38 = &qword_26B2C4F08;
      uint64_t v39 = (uint64_t)v21;
    }
    else
    {
      LODWORD(v67) = *((unsigned __int8 *)v19
                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC32B8) + 64));
      sub_256C00498();
      if (qword_26B2C9180 != -1) {
        swift_once();
      }
      uint64_t v71 = v21;
      uint64_t v54 = sub_256CEDC88();
      __swift_project_value_buffer(v54, (uint64_t)qword_26B2C9168);
      uint64_t v55 = sub_256CEDC68();
      os_log_type_t v56 = sub_256CEE2A8();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 134217984;
        uint64_t v79 = v68;
        sub_256CEE308();
        _os_log_impl(&dword_256BD4000, v55, v56, "Received message %llu.", v57, 0xCu);
        MEMORY[0x25A2AEBD0](v57, -1, -1);
      }

      uint64_t v58 = v33;
      sub_256CEDE58();
      uint64_t v60 = v73;
      uint64_t v59 = v74;
      uint64_t v61 = v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v76, v58, v74);
      sub_256C004EC();
      unint64_t v62 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      unint64_t v63 = (v4 + ((v72 + *(unsigned __int8 *)(v69 + 80) + v62) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v64 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v64 + v62, v61, v59);
      sub_256C00498();
      *(void *)(v64 + v63) = v77;
      *(void *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v68;
      swift_retain();
      sub_256BFFD0C();
      swift_release();
      sub_256C00A20((uint64_t)v75, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.Notification);
      uint64_t v38 = &qword_26B2C4F08;
      uint64_t v39 = (uint64_t)v71;
    }
  }
  sub_256C0044C(v39, v38);
  uint64_t v65 = (_OWORD *)v78;
  *(void *)(v78 + 32) = 0;
  double result = 0.0;
  *uint64_t v65 = 0u;
  v65[1] = 0u;
  return result;
}

uint64_t sub_256BFEE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  type metadata accessor for InferenceProviderXPCRequest(0);
  v4[12] = swift_task_alloc();
  uint64_t v5 = sub_256CEDE98();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256BFEF38, 0, 0);
}

uint64_t sub_256BFEF38()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0[15];
  uint64_t v2 = OUTLINED_FUNCTION_16_5();
  v3(v2);
  sub_256C004EC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4F98);
  swift_allocObject();
  uint64_t v4 = sub_256BFFDCC(v1);
  v0[16] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269FC32F0 + dword_269FC32F0);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  void *v5 = v0;
  v5[1] = sub_256BFF06C;
  uint64_t v6 = v0[11];
  return v8((uint64_t)(v0 + 2), v4, v6);
}

uint64_t sub_256BFF06C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256BFF138, 0, 0);
}

uint64_t sub_256BFF138()
{
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B2C9168);
  uint64_t v2 = sub_256CEDC68();
  os_log_type_t v3 = sub_256CEE2A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[11];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    v0[7] = v4;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v2, v3, "Replying to message %llu.", v5, 0xCu);
    OUTLINED_FUNCTION_4();
  }

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_256CEDE68();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v6();
}

uint64_t sub_256BFF2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_269FC32F8 + dword_269FC32F8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_256BE3BF0;
  return v9(a5);
}

uint64_t sub_256BFF37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  v4[6] = swift_task_alloc();
  uint64_t v5 = sub_256CEDE98();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256BFF46C, 0, 0);
}

uint64_t sub_256BFF46C()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0[9];
  uint64_t v2 = OUTLINED_FUNCTION_16_5();
  v3(v2);
  sub_256C004EC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3300);
  swift_allocObject();
  uint64_t v4 = sub_256BFFDCC(v1);
  v0[10] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269FC3308 + dword_269FC3308);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  void *v5 = v0;
  v5[1] = sub_256BFF58C;
  uint64_t v6 = v0[5];
  return v8(v4, v6);
}

uint64_t sub_256BFF58C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256BFF658, 0, 0);
}

uint64_t sub_256BFF658()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256BFF6C4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256BFF6E8, v2, 0);
}

uint64_t sub_256BFF6E8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BFF798;
  return sub_256C681BC();
}

uint64_t sub_256BFF798()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256BFF878, v2, 0);
}

uint64_t sub_256BFF878()
{
  OUTLINED_FUNCTION_2();
  sub_256BFFD70();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256BFF8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  return MEMORY[0x270FA2498](sub_256BFF8F4, v3, 0);
}

uint64_t sub_256BFF8F4()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BFF994;
  return sub_256CD9C34();
}

uint64_t sub_256BFF994()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256BFFA74, v2, 0);
}

uint64_t sub_256BFFA74()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (uint64_t *)v0[8];
  sub_256BFFD70();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[7];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v1[3] = v2;
  v1[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v2 - 8) + 16))(boxed_opaque_existential_1, v4, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_16();
  return v6();
}

uint64_t sub_256BFFB40(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_256BFFB60, v1, 0);
}

uint64_t sub_256BFFB60()
{
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B2C9168);
  uint64_t v2 = sub_256CEDC68();
  os_log_type_t v3 = sub_256CEE2A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    v0[2] = v4;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v2, v3, "Received task cancellation for message %llu.", v5, 0xCu);
    OUTLINED_FUNCTION_4();
  }

  uint64_t v6 = v0[3];
  uint64_t v7 = *(void *)(v0[4] + 120);
  *(void *)(swift_task_alloc() + 16) = v6;
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_256C00A8C((uint64_t *)(v7 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v8();
}

void sub_256BFFD0C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 120);
  uint64_t v2 = (uint64_t)&v1[4];
  os_log_type_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_256C00AA8(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256BFFD70()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 120);
  uint64_t v2 = (uint64_t *)&v1[4];
  os_log_type_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_256C00A70(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_256BFFDCC(uint64_t a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v2 + 16) = sub_256CEDE88() & 1;
  unint64_t v4 = sub_256CEDE38();
  int v5 = v4;
  int v7 = v6;
  int v9 = v8;
  int v11 = v10;
  unint64_t v12 = HIDWORD(v4);
  unint64_t v13 = HIDWORD(v6);
  unint64_t v14 = HIDWORD(v8);
  unint64_t v15 = HIDWORD(v10);
  sub_256CEDE98();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v16 + 8))(a1);
  *(_DWORD *)(v2 + 20) = v5;
  *(_DWORD *)(v2 + 24) = v12;
  *(_DWORD *)(v2 + 28) = v7;
  *(_DWORD *)(v2 + 32) = v13;
  *(_DWORD *)(v2 + 36) = v9;
  *(_DWORD *)(v2 + 40) = v14;
  *(_DWORD *)(v2 + 44) = v11;
  *(_DWORD *)(v2 + 48) = v15;
  sub_256C00498();
  return v2;
}

uint64_t sub_256BFFEB4()
{
  return MEMORY[0x270FA0238](v0, 20, 7);
}

void sub_256BFFEC4(uint64_t a1)
{
  sub_256BFDE70(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_256BFFECC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_256BFFF14()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_14_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_4_0();
  return sub_256BFE0F8(v3, v4, v5, v6, v7);
}

uint64_t sub_256BFFFB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_256BFFFCC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InferenceProviderExtension()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for InferenceProviderExtension(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InferenceProviderExtension);
}

uint64_t dispatch thunk of InferenceProviderExtension.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_256C00054()
{
  unint64_t result = qword_26B2C4860;
  if (!qword_26B2C4860)
  {
    sub_256CEDDE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4860);
  }
  return result;
}

uint64_t sub_256C000A8()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_14_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_4_0();
  return sub_256BFF2C8(v3, v4, v5, v6, v7);
}

uint64_t sub_256C00144()
{
  sub_256CEDE98();
  OUTLINED_FUNCTION_3_2();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  OUTLINED_FUNCTION_6(v8);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = v4 | v13 | 7;
  unint64_t v15 = (*(void *)(v12 + 64) + ((v5 + v7 + v13) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v0);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  uint64_t v16 = OUTLINED_FUNCTION_8_3();
  v17(v16);
  swift_release();
  return MEMORY[0x270FA0238](v1, ((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v14);
}

uint64_t sub_256C00264()
{
  uint64_t v0 = sub_256CEDE98();
  OUTLINED_FUNCTION_6(v0);
  uint64_t v1 = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  OUTLINED_FUNCTION_6(v1);
  OUTLINED_FUNCTION_7_5();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BE3BF0;
  uint64_t v5 = OUTLINED_FUNCTION_12_3();
  return sub_256BFF37C(v5, v6, v7, v8);
}

uint64_t sub_256C0035C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C003B0()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_14_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_4_0();
  return sub_256BFF2C8(v3, v4, v5, v6, v7);
}

uint64_t sub_256C0044C(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_8_3();
  v4(v3);
  return a1;
}

uint64_t sub_256C00498()
{
  uint64_t v2 = OUTLINED_FUNCTION_15_3();
  v3(v2);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_256C004EC()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_3();
  v2(v1);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_97();
  v4(v3);
  return v0;
}

uint64_t sub_256C00534()
{
  sub_256CEDE98();
  OUTLINED_FUNCTION_3_2();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for InferenceProviderXPCRequest(0) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v5 + v7 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v0);
  uint64_t v12 = v1 + v10;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v13 = v12 + *(int *)(type metadata accessor for InferenceProviderPrewarmInformation(0) + 24);
      sub_256CEDB08();
      OUTLINED_FUNCTION_10();
      (*(void (**)(uint64_t))(v14 + 8))(v13);
      goto LABEL_11;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
      goto LABEL_4;
    case 3u:
      uint64_t v17 = v12 + *(int *)(type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0) + 20);
      uint64_t v18 = sub_256CEDE28();
      if (!__swift_getEnumTagSinglePayload(v17, 1, v18)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      }
      uint64_t v19 = v17 + *(int *)(type metadata accessor for ClientData(0) + 20);
      if (!__swift_getEnumTagSinglePayload(v19, 1, v18)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v19, v18);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for InferenceProviderRequestConfiguration(0);
      sub_256CEDB08();
      OUTLINED_FUNCTION_10();
      uint64_t v21 = *(void (**)(void))(v20 + 8);
      OUTLINED_FUNCTION_10_0();
      v21();
      OUTLINED_FUNCTION_10_0();
      v21();
      OUTLINED_FUNCTION_10_0();
      v21();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_10_0();
      v21();
      break;
    case 4u:
    case 5u:
    case 6u:
LABEL_4:
      sub_256CEDB08();
      OUTLINED_FUNCTION_10();
      uint64_t v15 = OUTLINED_FUNCTION_8_3();
      v16(v15);
      break;
    case 7u:
      sub_256CEDB08();
      OUTLINED_FUNCTION_10();
      uint64_t v22 = OUTLINED_FUNCTION_8_3();
      v23(v22);
      if (*(void *)(v12
                     + *(int *)(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0) + 20)) >= 4uLL)
LABEL_11:
        swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_release();
  return MEMORY[0x270FA0238](v1, ((((v11 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v4 | v9 | 7);
}

uint64_t sub_256C00928()
{
  uint64_t v0 = sub_256CEDE98();
  OUTLINED_FUNCTION_6(v0);
  uint64_t v1 = type metadata accessor for InferenceProviderXPCRequest(0);
  OUTLINED_FUNCTION_6(v1);
  OUTLINED_FUNCTION_7_5();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BE3BF0;
  uint64_t v5 = OUTLINED_FUNCTION_12_3();
  return sub_256BFEE48(v5, v6, v7, v8);
}

uint64_t sub_256C00A20(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_8_3();
  v4(v3);
  return a1;
}

uint64_t sub_256C00A70(uint64_t *a1)
{
  return sub_256CCF488(a1, *(void *)(v1 + 16));
}

void sub_256C00A8C(uint64_t *a1)
{
  sub_256CCEB00(a1, *(void *)(v1 + 16));
}

uint64_t sub_256C00AA8(uint64_t a1)
{
  return sub_256CCEDB0(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_256C00B10()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

BOOL static RequestPriority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

ModelManagerServices::RequestPriority_optional __swiftcall RequestPriority.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_256CEE438();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t RequestPriority.rawValue.getter()
{
  return *(void *)&aNone_3[8 * *v0];
}

uint64_t sub_256C00BD8()
{
  return sub_256BF0D48();
}

unint64_t sub_256C00BE8()
{
  unint64_t result = qword_26B2C48A0;
  if (!qword_26B2C48A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48A0);
  }
  return result;
}

uint64_t sub_256C00C34()
{
  return sub_256CD2578(*v0);
}

uint64_t sub_256C00C3C()
{
  return sub_256BF107C();
}

uint64_t sub_256C00C44(uint64_t a1)
{
  return sub_256CD27B8(a1, *v1);
}

ModelManagerServices::RequestPriority_optional sub_256C00C4C(Swift::String *a1)
{
  return RequestPriority.init(rawValue:)(*a1);
}

uint64_t sub_256C00C58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RequestPriority.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_256C00C84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_256CC6B58(*a1, *a2);
}

BOOL sub_256C00C90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_256CC6B7C(*a1, *a2);
}

BOOL sub_256C00C9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_256CC6BA0(*a1, *a2);
}

uint64_t sub_256C00CA8()
{
  return sub_256CEE048();
}

uint64_t sub_256C00D08()
{
  return sub_256CEE028();
}

uint64_t getEnumTagSinglePayload for RequestPriority(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RequestPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C00EACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestPriority()
{
  return &type metadata for RequestPriority;
}

unint64_t sub_256C00EE4()
{
  unint64_t result = qword_26B2C48A8;
  if (!qword_26B2C48A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C48A8);
  }
  return result;
}

uint64_t sub_256C00F30()
{
  sub_256BEBCCC(v0, (uint64_t)v2);
  return InferenceError.description.getter();
}

uint64_t sub_256C00F6C()
{
  sub_256BEBCCC(v0, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_256CF2660;
  *(void *)(inited + 32) = sub_256CEDF48();
  *(void *)(inited + 40) = v2;
  uint64_t v3 = InferenceError.description.getter();
  uint64_t v4 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 80) = sub_256CEDF48();
  *(void *)(inited + 88) = v6;
  uint64_t v7 = InferenceError.description.getter();
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 104) = v8;
  OUTLINED_FUNCTION_17_1();
  return sub_256CEDEB8();
}

uint64_t sub_256C01030()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_256CF2660;
  *(void *)(inited + 32) = sub_256CEDF48();
  *(void *)(inited + 40) = v1;
  uint64_t v2 = ModelManagerError.description.getter();
  uint64_t v3 = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 80) = sub_256CEDF48();
  *(void *)(inited + 88) = v5;
  uint64_t v6 = ModelManagerError.description.getter();
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 104) = v7;
  return sub_256CEDEB8();
}

uint64_t sub_256C010E8()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_269FC3310);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269FC3310);
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8CA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_256C011B0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x636E657265666E69 && a2 == 0xEE00726F72724565;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656E696665646E75 && a2 == 0xEE00726F72724564;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000256D00810 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000256D00830 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x6C616E7265746E69 && a2 == 0xED0000726F727245;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000256D00850 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x8000000256D00870 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000256CFFE10 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        BOOL v8 = a1 == 0x726F727245637078 && a2 == 0xE800000000000000;
        if (v8 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000256D00890 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else
        {
          BOOL v9 = a1 == 0x4465736143657375 && a2 == 0xEF64656C62617369;
          if (v9 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000256D008B0 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0xD000000000000016 && a2 == 0x8000000256D008D0 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000256D008F0 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 13;
          }
          else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000256D00910 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 14;
          }
          else
          {
            BOOL v10 = a1 == 0x4E74736575716572 && a2 == 0xEF646E756F46746FLL;
            if (v10 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 15;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D00930 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x8000000256CFFD70 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x8000000256D00950 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 18;
            }
            else
            {
              BOOL v11 = a1 == 0x746F4E7465737361 && a2 == 0xED0000646E756F46;
              if (v11 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 19;
              }
              else if (a1 == 0xD000000000000020 && a2 == 0x8000000256D00970 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 20;
              }
              else if (a1 == 0xD000000000000022 && a2 == 0x8000000256D009A0 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 21;
              }
              else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000256D009D0 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 22;
              }
              else
              {
                BOOL v12 = a1 == 0x4E6E6F6973736573 && a2 == 0xEF646E756F46746FLL;
                if (v12 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 23;
                }
                else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000256D009F0 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 24;
                }
                else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000256D00A10 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 25;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00A30 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 26;
                }
                else if (a1 == 0xD000000000000017 && a2 == 0x8000000256D00A50 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 27;
                }
                else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000256D00A70 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 28;
                }
                else if (a1 == 0xD000000000000012 && a2 == 0x8000000256D00A90 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 29;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00AB0 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 30;
                }
                else
                {
                  BOOL v13 = a1 == 0x6F4E7963696C6F70 && a2 == 0xEE00646E756F4674;
                  if (v13 || (sub_256CEE6C8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 31;
                  }
                  else if (a1 == 0xD000000000000018 && a2 == 0x8000000256D00AD0 || (sub_256CEE6C8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 32;
                  }
                  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000256D00AF0 || (sub_256CEE6C8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 33;
                  }
                  else if (a1 == 0xD000000000000015 && a2 == 0x8000000256D00B10)
                  {
                    swift_bridgeObjectRelease();
                    return 34;
                  }
                  else
                  {
                    char v14 = sub_256CEE6C8();
                    swift_bridgeObjectRelease();
                    if (v14) {
                      return 34;
                    }
                    else {
                      return 35;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_256C01E44()
{
  return 35;
}

unint64_t sub_256C01E4C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656E696665646E75;
      break;
    case 2:
    case 6:
    case 17:
    case 29:
      return result;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0x6C616E7265746E69;
      break;
    case 5:
    case 7:
    case 11:
    case 14:
    case 24:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
      unint64_t result = 0x726F727245637078;
      break;
    case 9:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 10:
      unint64_t result = 0x4465736143657375;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    case 13:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 15:
      unint64_t result = 0x4E74736575716572;
      break;
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    case 18:
      unint64_t result = 0xD000000000000013;
      break;
    case 19:
      unint64_t result = 0x746F4E7465737361;
      break;
    case 20:
      unint64_t result = 0xD000000000000020;
      break;
    case 21:
      unint64_t result = 0xD000000000000022;
      break;
    case 22:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 23:
      unint64_t result = 0x4E6E6F6973736573;
      break;
    case 25:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 26:
      unint64_t result = 0xD000000000000011;
      break;
    case 27:
      unint64_t result = 0xD000000000000017;
      break;
    case 28:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 30:
      unint64_t result = 0xD000000000000011;
      break;
    case 31:
      unint64_t result = 0x6F4E7963696C6F70;
      break;
    case 32:
      unint64_t result = 0xD000000000000018;
      break;
    case 33:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 34:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      unint64_t result = 0x636E657265666E69;
      break;
  }
  return result;
}

uint64_t sub_256C021D0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256C022A0(char a1)
{
  if (a1) {
    return 1701080931;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_256C022CC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E75426C65646F6DLL && a2 == 0xED00004449656C64;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000256D00B30)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256C023CC()
{
  return sub_256CEE7F8();
}

uint64_t sub_256C02414(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x6E75426C65646F6DLL;
  }
}

uint64_t sub_256C0245C(uint64_t a1)
{
  unint64_t v2 = sub_256C098E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02498(uint64_t a1)
{
  unint64_t v2 = sub_256C098E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C024D4(uint64_t a1)
{
  unint64_t v2 = sub_256C097B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02510(uint64_t a1)
{
  unint64_t v2 = sub_256C097B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C0254C(uint64_t a1)
{
  unint64_t v2 = sub_256C095E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02588(uint64_t a1)
{
  unint64_t v2 = sub_256C095E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C025C4(uint64_t a1)
{
  unint64_t v2 = sub_256C09894();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02600(uint64_t a1)
{
  unint64_t v2 = sub_256C09894();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C0263C(uint64_t a1)
{
  unint64_t v2 = sub_256C09420();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02678(uint64_t a1)
{
  unint64_t v2 = sub_256C09420();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_256C026B4()
{
  return sub_256C01E4C(*v0);
}

uint64_t sub_256C026BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C011B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C026E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256C01E44();
  *a1 = result;
  return result;
}

uint64_t sub_256C0270C(uint64_t a1)
{
  unint64_t v2 = sub_256C093D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02748(uint64_t a1)
{
  unint64_t v2 = sub_256C093D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02784(uint64_t a1)
{
  unint64_t v2 = sub_256C09634();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C027C0(uint64_t a1)
{
  unint64_t v2 = sub_256C09634();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C027FC(uint64_t a1)
{
  unint64_t v2 = sub_256C09A5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02838(uint64_t a1)
{
  unint64_t v2 = sub_256C09A5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02874(uint64_t a1)
{
  unint64_t v2 = sub_256C09AA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C028B0(uint64_t a1)
{
  unint64_t v2 = sub_256C09AA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C028EC(uint64_t a1)
{
  unint64_t v2 = sub_256C09550();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02928(uint64_t a1)
{
  unint64_t v2 = sub_256C09550();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02964(uint64_t a1)
{
  unint64_t v2 = sub_256C09E38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C029A0(uint64_t a1)
{
  unint64_t v2 = sub_256C09E38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C029DC()
{
  return sub_256C023CC();
}

uint64_t sub_256C029F8()
{
  return sub_256C022A0(*v0);
}

uint64_t sub_256C02A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C021D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C02A28(uint64_t a1)
{
  unint64_t v2 = sub_256C094B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02A64(uint64_t a1)
{
  unint64_t v2 = sub_256C094B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02AA0(uint64_t a1)
{
  unint64_t v2 = sub_256C09AF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02ADC(uint64_t a1)
{
  unint64_t v2 = sub_256C09AF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02B18(uint64_t a1)
{
  unint64_t v2 = sub_256C09D08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02B54(uint64_t a1)
{
  unint64_t v2 = sub_256C09D08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02B90(uint64_t a1)
{
  unint64_t v2 = sub_256C09718();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02BCC(uint64_t a1)
{
  unint64_t v2 = sub_256C09718();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02C08()
{
  return sub_256C02414(*v0);
}

uint64_t sub_256C02C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C022CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C02C38(uint64_t a1)
{
  unint64_t v2 = sub_256C096CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02C74(uint64_t a1)
{
  unint64_t v2 = sub_256C096CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02CB0(uint64_t a1)
{
  unint64_t v2 = sub_256C09C70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02CEC(uint64_t a1)
{
  unint64_t v2 = sub_256C09C70();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02D28(uint64_t a1)
{
  unint64_t v2 = sub_256C09DA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02D64(uint64_t a1)
{
  unint64_t v2 = sub_256C09DA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02DA0(uint64_t a1)
{
  unint64_t v2 = sub_256C09680();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02DDC(uint64_t a1)
{
  unint64_t v2 = sub_256C09680();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02E18(uint64_t a1)
{
  unint64_t v2 = sub_256C097FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02E54(uint64_t a1)
{
  unint64_t v2 = sub_256C097FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02E90(uint64_t a1)
{
  unint64_t v2 = sub_256C09CBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02ECC(uint64_t a1)
{
  unint64_t v2 = sub_256C09CBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02F08(uint64_t a1)
{
  unint64_t v2 = sub_256C09A10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02F44(uint64_t a1)
{
  unint64_t v2 = sub_256C09A10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02F80(uint64_t a1)
{
  unint64_t v2 = sub_256C0992C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C02FBC(uint64_t a1)
{
  unint64_t v2 = sub_256C0992C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C02FF8(uint64_t a1)
{
  unint64_t v2 = sub_256C0959C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C03034(uint64_t a1)
{
  unint64_t v2 = sub_256C0959C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C03070(uint64_t a1)
{
  unint64_t v2 = sub_256C09504();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C030AC(uint64_t a1)
{
  unint64_t v2 = sub_256C09504();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C030E8(uint64_t a1)
{
  unint64_t v2 = sub_256C099C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C03124(uint64_t a1)
{
  unint64_t v2 = sub_256C099C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C03160(uint64_t a1)
{
  unint64_t v2 = sub_256C09978();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C0319C(uint64_t a1)
{
  unint64_t v2 = sub_256C09978();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C031D8(uint64_t a1)
{
  unint64_t v2 = sub_256C09764();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C03214(uint64_t a1)
{
  unint64_t v2 = sub_256C09764();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C03250(uint64_t a1)
{
  unint64_t v2 = sub_256C0946C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C0328C(uint64_t a1)
{
  unint64_t v2 = sub_256C0946C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C032C8(uint64_t a1)
{
  unint64_t v2 = sub_256C09DEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C03304(uint64_t a1)
{
  unint64_t v2 = sub_256C09DEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C03340(uint64_t a1)
{
  unint64_t v2 = sub_256C09B8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C0337C(uint64_t a1)
{
  unint64_t v2 = sub_256C09B8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C033B8(uint64_t a1)
{
  unint64_t v2 = sub_256C09848();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C033F4(uint64_t a1)
{
  unint64_t v2 = sub_256C09848();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C03430(uint64_t a1)
{
  unint64_t v2 = sub_256C09C24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C0346C(uint64_t a1)
{
  unint64_t v2 = sub_256C09C24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C034A8(uint64_t a1)
{
  unint64_t v2 = sub_256C09D54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C034E4(uint64_t a1)
{
  unint64_t v2 = sub_256C09D54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C03520(uint64_t a1)
{
  unint64_t v2 = sub_256C09B40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C0355C(uint64_t a1)
{
  unint64_t v2 = sub_256C09B40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C03598(uint64_t a1)
{
  unint64_t v2 = sub_256C09BD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C035D4(uint64_t a1)
{
  unint64_t v2 = sub_256C09BD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C03610(uint64_t a1)
{
  uint64_t v2 = sub_256C0A054(&qword_26B2C5B58, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_256C0367C(uint64_t a1)
{
  uint64_t v2 = sub_256C0A054(&qword_26B2C5B58, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t ModelManagerError.description.getter()
{
  uint64_t v2 = sub_256CEDB08();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_58_1();
  MEMORY[0x270FA5388](v9);
  BOOL v11 = (char *)&v35 - v10;
  type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256C04124(v0, (uint64_t)v14);
  uint64_t v15 = 0xD00000000000002CLL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v23 = 0xD000000000000015;
      uint64_t v24 = "Missing entitlement: ";
      goto LABEL_8;
    case 2u:
      unint64_t v23 = 0xD00000000000001FLL;
      uint64_t v24 = "Unrecognized underlying error: ";
      goto LABEL_8;
    case 3u:
      unint64_t v23 = 0x6F72726520435058;
      unint64_t v25 = 0xEB00000000203A72;
      goto LABEL_9;
    case 4u:
      unint64_t v23 = 0xD000000000000021;
      uint64_t v24 = "Unrecognized Inference Provider: ";
      goto LABEL_8;
    case 5u:
      unint64_t v23 = 0xD000000000000013;
      uint64_t v24 = "Use Case Disabled: ";
LABEL_8:
      unint64_t v25 = (unint64_t)(v24 - 32) | 0x8000000000000000;
LABEL_9:
      uint64_t v35 = v23;
      unint64_t v36 = v25;
      goto LABEL_10;
    case 6u:
      sub_256CEE268();
      swift_bridgeObjectRelease();
      uint64_t v35 = 0xD000000000000029;
      unint64_t v36 = 0x8000000256D00640;
      sub_256CEDFB8();
      swift_bridgeObjectRelease();
      sub_256CEDEC8();
      goto LABEL_10;
    case 7u:
      OUTLINED_FUNCTION_33_3();
      v26();
      sub_256BE94E4(20);
      swift_bridgeObjectRelease();
      uint64_t v35 = 0x2074736575716552;
      unint64_t v36 = 0xE800000000000000;
      sub_256C0A054(&qword_269FC3328, MEMORY[0x263F07508]);
      sub_256CEE5F8();
      OUTLINED_FUNCTION_61_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_40_2();
      uint64_t v15 = v35;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v2);
      return v15;
    case 8u:
      OUTLINED_FUNCTION_33_3();
      v27();
      sub_256BE94E4(28);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_3();
      sub_256C0A054(&qword_269FC3328, MEMORY[0x263F07508]);
      sub_256CEE5F8();
      OUTLINED_FUNCTION_61_1();
      swift_bridgeObjectRelease();
      sub_256CEDFB8();
      uint64_t v15 = v35;
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
      return v15;
    case 9u:
      sub_256BE94E4(42);
      swift_bridgeObjectRelease();
      uint64_t v28 = 0x7562207465737341;
      goto LABEL_16;
    case 0xAu:
      sub_256BE94E4(35);
      swift_bridgeObjectRelease();
      uint64_t v28 = 0x207465737341;
LABEL_16:
      OUTLINED_FUNCTION_23_1(v28);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 0xBu:
      sub_256BE94E4(45);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_1(0x207465737341);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 0xCu:
      sub_256BE94E4(42);
      swift_bridgeObjectRelease();
      uint64_t v35 = 0xD000000000000028;
      unint64_t v36 = 0x8000000256D00530;
      sub_256CEE268();
      OUTLINED_FUNCTION_61_1();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    case 0xDu:
      sub_256BE94E4(38);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_1(0x207465737341);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 0xEu:
      OUTLINED_FUNCTION_33_3();
      v29();
      sub_256BE94E4(20);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_39_3();
      sub_256C0A054(&qword_269FC3328, MEMORY[0x263F07508]);
      sub_256CEE5F8();
      OUTLINED_FUNCTION_61_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_40_2();
      uint64_t v15 = v35;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v2);
      return v15;
    case 0xFu:
      uint64_t v35 = sub_256BE94E4(64);
      unint64_t v36 = v30;
      sub_256CEDFB8();
      sub_256CEDFB8();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 0x10u:
      uint64_t v35 = sub_256BE94E4(82);
      unint64_t v36 = v31;
      sub_256CEDFB8();
      sub_256CEE268();
      sub_256CEDFB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_256CEDFB8();
      goto LABEL_10;
    case 0x11u:
      sub_256BE94E4(23);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_1(0xD000000000000015);
      goto LABEL_26;
    case 0x12u:
      sub_256BE94E4(42);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_1(0x207465737341);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 0x13u:
      sub_256BE94E4(19);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_1(0x207963696C6F50);
      swift_bridgeObjectRelease();
LABEL_23:
      sub_256CEDFB8();
      goto LABEL_27;
    case 0x14u:
      int v32 = *(_DWORD *)v14;
      uint64_t v33 = *((void *)v14 + 1);
      sub_256BE94E4(37);
      swift_bridgeObjectRelease();
      uint64_t v35 = 0xD000000000000020;
      unint64_t v36 = 0x8000000256D00370;
      LODWORD(v42) = v32;
      sub_256CEE5F8();
      sub_256CEDFB8();
      swift_bridgeObjectRelease();
      sub_256CEDFB8();
      uint64_t v42 = v33;
      sub_256CEE5F8();
LABEL_10:
      sub_256CEDFB8();
LABEL_26:
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v15 = v35;
      break;
    case 0x15u:
      uint64_t v15 = 0x656E696665646E55;
      break;
    case 0x16u:
      return v15;
    case 0x17u:
      uint64_t v15 = 0xD00000000000003BLL;
      break;
    case 0x18u:
      uint64_t v15 = 0x6C616E7265746E49;
      break;
    case 0x19u:
      uint64_t v15 = 0xD00000000000001FLL;
      break;
    case 0x1Au:
      uint64_t v15 = 0xD00000000000001DLL;
      break;
    case 0x1Bu:
      uint64_t v15 = 0xD000000000000039;
      break;
    case 0x1Cu:
      uint64_t v15 = 0xD000000000000041;
      break;
    case 0x1Du:
      uint64_t v15 = 0xD000000000000012;
      break;
    case 0x1Eu:
      uint64_t v15 = 0xD000000000000022;
      break;
    case 0x1Fu:
      uint64_t v15 = 0xD000000000000014;
      break;
    case 0x20u:
      uint64_t v15 = 0xD000000000000013;
      break;
    case 0x21u:
      uint64_t v15 = 0xD000000000000027;
      break;
    case 0x22u:
      uint64_t v15 = 0xD000000000000025;
      break;
    default:
      uint64_t v16 = *(void *)v14;
      uint64_t v17 = *((void *)v14 + 1);
      uint64_t v18 = *((void *)v14 + 2);
      uint64_t v19 = *((void *)v14 + 3);
      uint64_t v20 = *((void *)v14 + 4);
      uint64_t v21 = *((void *)v14 + 5);
      unsigned __int8 v22 = v14[48];
      uint64_t v35 = v16;
      unint64_t v36 = v17;
      uint64_t v37 = v18;
      uint64_t v38 = v19;
      uint64_t v39 = v20;
      uint64_t v40 = v21;
      unsigned __int8 v41 = v22;
      uint64_t v15 = InferenceError.description.getter();
      sub_256BE958C(v16, v17, v18, v19, v20, v21, v22);
      break;
  }
  return v15;
}

uint64_t type metadata accessor for ModelManagerError()
{
  uint64_t result = qword_26B2C9158;
  if (!qword_26B2C9158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256C04124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModelManagerError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ModelManagerError.errorCode.getter()
{
  type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_32();
  sub_256C04124(v1, v0);
  OUTLINED_FUNCTION_17_1();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 1002;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_256C09378(v0);
      uint64_t result = 1007;
      break;
    case 2:
      sub_256C09378(v0);
      uint64_t result = 1008;
      break;
    case 3:
      sub_256C09378(v0);
      uint64_t result = 1009;
      break;
    case 4:
      sub_256C09378(v0);
      uint64_t result = 1010;
      break;
    case 5:
      sub_256C09378(v0);
      uint64_t result = 1011;
      break;
    case 6:
      sub_256C09378(v0);
      goto LABEL_9;
    case 7:
      sub_256C09378(v0);
      uint64_t result = 1015;
      break;
    case 8:
      sub_256C09378(v0);
      uint64_t result = 1016;
      break;
    case 9:
      sub_256C09378(v0);
      uint64_t result = 1018;
      break;
    case 10:
      sub_256C09378(v0);
      uint64_t result = 1019;
      break;
    case 11:
      sub_256C09378(v0);
      uint64_t result = 1020;
      break;
    case 12:
      sub_256C09378(v0);
      uint64_t result = 1021;
      break;
    case 13:
      sub_256C09378(v0);
      uint64_t result = 1025;
      break;
    case 14:
      sub_256C09378(v0);
      uint64_t result = 1022;
      break;
    case 15:
      sub_256C09378(v0);
      uint64_t result = 1023;
      break;
    case 16:
      sub_256C09378(v0);
      uint64_t result = 1024;
      break;
    case 17:
      sub_256C09378(v0);
      uint64_t result = 1026;
      break;
    case 18:
      sub_256C09378(v0);
      uint64_t result = 1028;
      break;
    case 19:
      sub_256C09378(v0);
      uint64_t result = 1031;
      break;
    case 20:
      uint64_t result = 1032;
      break;
    case 21:
      return result;
    case 22:
      uint64_t result = 1003;
      break;
    case 23:
      uint64_t result = 1004;
      break;
    case 24:
      uint64_t result = 1005;
      break;
    case 25:
      uint64_t result = 1006;
      break;
    case 26:
      uint64_t result = 1012;
      break;
    case 27:
LABEL_9:
      uint64_t result = 1013;
      break;
    case 28:
      uint64_t result = 1014;
      break;
    case 29:
      uint64_t result = 1017;
      break;
    case 30:
      uint64_t result = 1027;
      break;
    case 31:
      uint64_t result = 1029;
      break;
    case 32:
      uint64_t result = 1030;
      break;
    case 33:
      uint64_t result = 1033;
      break;
    case 34:
      uint64_t result = 1034;
      break;
    default:
      sub_256C09378(v0);
      uint64_t result = 1001;
      break;
  }
  return result;
}

uint64_t static ModelManagerError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v118 = a1;
  uint64_t v119 = (char *)a2;
  sub_256CEDB08();
  OUTLINED_FUNCTION_0_0();
  uint64_t v115 = v5;
  uint64_t v116 = v6;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v8);
  v110[1] = (char *)v110 - v9;
  uint64_t v10 = type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_31_1();
  uint64_t v114 = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_18_1();
  uint64_t v113 = v19;
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  unint64_t v30 = (char *)v110 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)v110 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  unint64_t v36 = (char *)v110 - v35;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_57_1();
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  unsigned __int8 v41 = (char *)v110 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)v110 - v42;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3330);
  MEMORY[0x270FA5388](v44 - 8);
  OUTLINED_FUNCTION_32();
  uint64_t v46 = (uint64_t)&v2[*(int *)(v45 + 56)];
  sub_256C04124(v118, (uint64_t)v2);
  uint64_t v117 = v46;
  sub_256C04124((uint64_t)v119, v46);
  uint64_t v118 = v10;
  uint64_t v119 = v2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v58 = OUTLINED_FUNCTION_21_1();
      sub_256C04124(v58, (uint64_t)v41);
      uint64_t v60 = *(void *)v41;
      uint64_t v59 = *((void *)v41 + 1);
      if (OUTLINED_FUNCTION_50_1() != 1) {
        goto LABEL_83;
      }
      uint64_t v61 = *(void *)v41;
      uint64_t v62 = *((void *)v41 + 1);
      if (v60 == v61 && v59 == v62) {
        goto LABEL_63;
      }
      char v64 = sub_256CEE6C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v64 & 1) == 0) {
        goto LABEL_62;
      }
      goto LABEL_81;
    case 2u:
      uint64_t v65 = OUTLINED_FUNCTION_21_1();
      sub_256C04124(v65, v4);
      unsigned __int8 v41 = *(char **)v4;
      uint64_t v2 = *(char **)(v4 + 8);
      if (OUTLINED_FUNCTION_28_4() != 2) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 3u:
      uint64_t v66 = OUTLINED_FUNCTION_21_1();
      sub_256C04124(v66, v3);
      unsigned __int8 v41 = *(char **)v3;
      uint64_t v2 = *(char **)(v3 + 8);
      if (OUTLINED_FUNCTION_28_4() != 3) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 4u:
      uint64_t v67 = OUTLINED_FUNCTION_21_1();
      sub_256C04124(v67, (uint64_t)v36);
      unsigned __int8 v41 = *(char **)v36;
      uint64_t v2 = (char *)*((void *)v36 + 1);
      if (OUTLINED_FUNCTION_28_4() != 4) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 5u:
      uint64_t v68 = OUTLINED_FUNCTION_21_1();
      sub_256C04124(v68, (uint64_t)v33);
      unsigned __int8 v41 = *(char **)v33;
      uint64_t v2 = (char *)*((void *)v33 + 1);
      if (OUTLINED_FUNCTION_28_4() != 5) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 6u:
      uint64_t v69 = OUTLINED_FUNCTION_21_1();
      sub_256C04124(v69, (uint64_t)v30);
      if (OUTLINED_FUNCTION_50_1() != 6) {
        goto LABEL_83;
      }
      goto LABEL_34;
    case 7u:
      uint64_t v70 = OUTLINED_FUNCTION_21_1();
      uint64_t v71 = v111;
      sub_256C04124(v70, v111);
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_42;
      }
      OUTLINED_FUNCTION_46_1();
      uint64_t v72 = &v123;
      goto LABEL_39;
    case 8u:
      uint64_t v73 = OUTLINED_FUNCTION_21_1();
      uint64_t v71 = v112;
      sub_256C04124(v73, v112);
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_42;
      }
      OUTLINED_FUNCTION_46_1();
      uint64_t v72 = &v124;
      goto LABEL_39;
    case 9u:
      uint64_t v74 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v74, (uint64_t)v127);
      if (OUTLINED_FUNCTION_24_3() != 9) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 0xAu:
      uint64_t v75 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v75, (uint64_t)&v128);
      if (OUTLINED_FUNCTION_24_3() != 10) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 0xBu:
      uint64_t v76 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v76, (uint64_t)&v129);
      if (OUTLINED_FUNCTION_24_3() != 11) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 0xCu:
      uint64_t v77 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v77, (uint64_t)&v130);
      if (OUTLINED_FUNCTION_50_1() == 12) {
        goto LABEL_34;
      }
      goto LABEL_83;
    case 0xDu:
      uint64_t v82 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v82, (uint64_t)&v131);
      if (OUTLINED_FUNCTION_24_3() != 13) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 0xEu:
      uint64_t v83 = OUTLINED_FUNCTION_21_1();
      uint64_t v71 = v113;
      sub_256C04124(v83, v113);
      if (swift_getEnumCaseMultiPayload() != 14)
      {
LABEL_42:
        OUTLINED_FUNCTION_50();
        v89();
        goto LABEL_84;
      }
      OUTLINED_FUNCTION_46_1();
      uint64_t v72 = &v125;
LABEL_39:
      uint64_t v84 = *(v72 - 32);
      uint64_t v85 = v115;
      OUTLINED_FUNCTION_33_3();
      v86();
      char v81 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
      uint64_t v87 = (void (*)(uint64_t, uint64_t))*((void *)v33 + 1);
      v87(v84, v85);
      v87(v71, v85);
      goto LABEL_40;
    case 0xFu:
      uint64_t v90 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v90, (uint64_t)&v132);
      if (OUTLINED_FUNCTION_24_3() != 15) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 0x10u:
      uint64_t v91 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v91, (uint64_t)&v133);
      uint64_t v93 = *(void *)v2;
      uint64_t v92 = *((void *)v2 + 1);
      if (OUTLINED_FUNCTION_28_4() != 16)
      {
        swift_bridgeObjectRelease();
LABEL_83:
        swift_bridgeObjectRelease();
        goto LABEL_84;
      }
      if (v93 == *(void *)v33 && v92 == *((void *)v33 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v95 = sub_256CEE6C8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v95 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_62;
        }
      }
LABEL_34:
      uint64_t v78 = OUTLINED_FUNCTION_17_1();
      sub_256BF1CB0(v78, v79);
      char v81 = v80;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_40:
      uint64_t v88 = (uint64_t)v43;
      goto LABEL_41;
    case 0x11u:
      uint64_t v96 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v96, (uint64_t)&v134);
      if (OUTLINED_FUNCTION_24_3() != 17) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 0x12u:
      uint64_t v97 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v97, (uint64_t)&v135);
      if (OUTLINED_FUNCTION_24_3() != 18) {
        goto LABEL_83;
      }
      goto LABEL_57;
    case 0x13u:
      uint64_t v98 = OUTLINED_FUNCTION_21_1();
      OUTLINED_FUNCTION_30_0(v98, (uint64_t)v126);
      if (OUTLINED_FUNCTION_24_3() != 19) {
        goto LABEL_83;
      }
LABEL_57:
      uint64_t v99 = *(char **)v33;
      char v100 = (char *)*((void *)v33 + 1);
      if (v41 == v99 && v2 == v100)
      {
LABEL_63:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v102 = sub_256CEE6C8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v102 & 1) == 0)
        {
LABEL_62:
          sub_256C09378((uint64_t)v43);
          goto LABEL_85;
        }
      }
LABEL_81:
      sub_256C09378((uint64_t)v43);
      char v81 = 1;
      break;
    case 0x14u:
      uint64_t v103 = OUTLINED_FUNCTION_21_1();
      uint64_t v104 = v114;
      sub_256C04124(v103, v114);
      uint64_t v105 = *(void *)(v104 + 8);
      if (OUTLINED_FUNCTION_50_1() != 20) {
        goto LABEL_84;
      }
      if (*(_DWORD *)v104 != *(_DWORD *)v41) {
        goto LABEL_62;
      }
      char v81 = v105 == *((void *)v41 + 1);
      goto LABEL_40;
    case 0x15u:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 21;
      goto LABEL_79;
    case 0x16u:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 22;
      goto LABEL_79;
    case 0x17u:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 23;
      goto LABEL_79;
    case 0x18u:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 24;
      goto LABEL_79;
    case 0x19u:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 25;
      goto LABEL_79;
    case 0x1Au:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 26;
      goto LABEL_79;
    case 0x1Bu:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 27;
      goto LABEL_79;
    case 0x1Cu:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 28;
      goto LABEL_79;
    case 0x1Du:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 29;
      goto LABEL_79;
    case 0x1Eu:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 30;
      goto LABEL_79;
    case 0x1Fu:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 31;
      goto LABEL_79;
    case 0x20u:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 32;
      goto LABEL_79;
    case 0x21u:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 33;
      goto LABEL_79;
    case 0x22u:
      BOOL v57 = swift_getEnumCaseMultiPayload() == 34;
LABEL_79:
      uint64_t v43 = v119;
      if (!v57) {
        goto LABEL_84;
      }
      goto LABEL_81;
    default:
      uint64_t v47 = (uint64_t)v119;
      sub_256C04124((uint64_t)v119, (uint64_t)v43);
      uint64_t v49 = *(void *)v43;
      uint64_t v48 = *((void *)v43 + 1);
      uint64_t v51 = *((void *)v43 + 2);
      uint64_t v50 = *((void *)v43 + 3);
      uint64_t v53 = *((void *)v43 + 4);
      uint64_t v52 = *((void *)v43 + 5);
      char v54 = v43[48];
      if (OUTLINED_FUNCTION_50_1())
      {
        OUTLINED_FUNCTION_34_1();
        uint64_t v43 = (char *)v47;
LABEL_84:
        sub_256BE33C8((uint64_t)v43, &qword_269FC3330);
LABEL_85:
        char v81 = 0;
      }
      else
      {
        uint64_t v107 = *((void *)v41 + 1);
        uint64_t v118 = *(void *)v41;
        uint64_t v108 = *((void *)v41 + 2);
        uint64_t v115 = *((void *)v41 + 3);
        uint64_t v116 = v108;
        uint64_t v109 = *((void *)v41 + 4);
        uint64_t v113 = *((void *)v41 + 5);
        uint64_t v114 = v109;
        LODWORD(v117) = v41[48];
        v122[0] = v49;
        v122[1] = v48;
        v122[2] = v51;
        uint64_t v123 = v50;
        uint64_t v124 = v53;
        uint64_t v125 = v52;
        v126[0] = v54;
        v120[0] = v118;
        v120[1] = v107;
        v120[2] = v108;
        v120[3] = v115;
        v120[4] = v109;
        v120[5] = v113;
        char v121 = v117;
        char v81 = static InferenceError.== infix(_:_:)((uint64_t)v122, (uint64_t)v120, v55, v56);
        sub_256BE958C(v118, v107, v116, v115, v114, v113, v117);
        OUTLINED_FUNCTION_34_1();
        uint64_t v88 = v47;
LABEL_41:
        sub_256C09378(v88);
      }
      break;
  }
  return v81 & 1;
}

uint64_t ModelManagerError.encode(to:)(void *a1)
{
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C55F0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v186 = v4;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_3_0();
  v185[16] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D58);
  OUTLINED_FUNCTION_0_0();
  v185[13] = v8;
  v185[14] = v7;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D20);
  OUTLINED_FUNCTION_0_0();
  v160[1] = v10;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_23(v12, v160[0]);
  v185[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CB8);
  OUTLINED_FUNCTION_0_0();
  v185[10] = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v185[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CD8);
  OUTLINED_FUNCTION_0_0();
  v185[7] = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v185[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CF8);
  OUTLINED_FUNCTION_0_0();
  v185[2] = v19;
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v185[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C70);
  OUTLINED_FUNCTION_0_0();
  v185[4] = v22;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D18);
  OUTLINED_FUNCTION_0_0();
  uint64_t v181 = v25;
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CA0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v183 = v28;
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v185[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D50);
  OUTLINED_FUNCTION_0_0();
  v160[0] = v31;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C68);
  OUTLINED_FUNCTION_0_0();
  uint64_t v179 = v34;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CC8);
  OUTLINED_FUNCTION_0_0();
  v176[3] = v37;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v176[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D48);
  OUTLINED_FUNCTION_0_0();
  v176[0] = v40;
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v42);
  v175[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D68);
  OUTLINED_FUNCTION_0_0();
  v175[3] = v43;
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v45);
  v175[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C60);
  OUTLINED_FUNCTION_0_0();
  uint64_t v174 = v46;
  MEMORY[0x270FA5388](v47);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v48);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CB0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v172 = v49;
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v51);
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D00);
  OUTLINED_FUNCTION_0_0();
  uint64_t v170 = v52;
  MEMORY[0x270FA5388](v53);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v54);
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CF0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v166 = v55;
  MEMORY[0x270FA5388](v56);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v57);
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D08);
  OUTLINED_FUNCTION_0_0();
  uint64_t v168 = v58;
  MEMORY[0x270FA5388](v59);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v60);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CC0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v164 = v61;
  MEMORY[0x270FA5388](v62);
  OUTLINED_FUNCTION_3_0();
  v162[2] = v63;
  sub_256CEDB08();
  OUTLINED_FUNCTION_0_0();
  uint64_t v189 = v64;
  uint64_t v190 = v65;
  MEMORY[0x270FA5388](v64);
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v67);
  OUTLINED_FUNCTION_11_0((uint64_t)v160 - v68);
  v160[41] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D38);
  OUTLINED_FUNCTION_0_0();
  v160[39] = v69;
  MEMORY[0x270FA5388](v70);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v71);
  v161[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4938);
  OUTLINED_FUNCTION_0_0();
  v161[0] = v72;
  MEMORY[0x270FA5388](v73);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v74);
  v160[37] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D10);
  OUTLINED_FUNCTION_0_0();
  v160[36] = v75;
  MEMORY[0x270FA5388](v76);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v77);
  v160[32] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D28);
  OUTLINED_FUNCTION_0_0();
  v160[31] = v78;
  MEMORY[0x270FA5388](v79);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v80);
  v160[34] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CD0);
  OUTLINED_FUNCTION_0_0();
  v160[33] = v81;
  MEMORY[0x270FA5388](v82);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v83);
  v160[28] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D40);
  OUTLINED_FUNCTION_0_0();
  v160[27] = v84;
  MEMORY[0x270FA5388](v85);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v86);
  v160[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C80);
  OUTLINED_FUNCTION_0_0();
  v160[24] = v87;
  MEMORY[0x270FA5388](v88);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v89);
  v160[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C78);
  OUTLINED_FUNCTION_0_0();
  v160[21] = v90;
  MEMORY[0x270FA5388](v91);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v92);
  v160[19] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CE0);
  OUTLINED_FUNCTION_0_0();
  v160[18] = v93;
  MEMORY[0x270FA5388](v94);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v95);
  v160[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D30);
  OUTLINED_FUNCTION_0_0();
  v160[15] = v96;
  MEMORY[0x270FA5388](v97);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v98);
  v160[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C88);
  OUTLINED_FUNCTION_0_0();
  v160[12] = v99;
  MEMORY[0x270FA5388](v100);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v101);
  v160[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D60);
  OUTLINED_FUNCTION_0_0();
  v160[9] = v102;
  MEMORY[0x270FA5388](v103);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v104);
  v160[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CE8);
  OUTLINED_FUNCTION_0_0();
  v160[6] = v105;
  MEMORY[0x270FA5388](v106);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v107);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C98);
  OUTLINED_FUNCTION_0_0();
  v160[2] = v109;
  MEMORY[0x270FA5388](v110);
  OUTLINED_FUNCTION_29();
  v160[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4C90);
  OUTLINED_FUNCTION_0_0();
  v160[3] = v111;
  MEMORY[0x270FA5388](v112);
  OUTLINED_FUNCTION_37_0();
  uint64_t v113 = type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v114);
  OUTLINED_FUNCTION_32();
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4CA8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v191 = v115;
  MEMORY[0x270FA5388](v116);
  OUTLINED_FUNCTION_28_2();
  uint64_t v117 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256C093D4();
  uint64_t v192 = v2;
  sub_256CEE878();
  sub_256C04124(v195, v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 6;
      sub_256C09C70();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 2u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 7;
      sub_256C09C24();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 3u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 8;
      sub_256C09BD8();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 4u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 9;
      sub_256C09B8C();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 5u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 10;
      sub_256C09B40();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 6u:
      uint64_t v128 = *(void *)v1;
      LOBYTE(v196[0]) = 13;
      sub_256C09A5C();
      OUTLINED_FUNCTION_36_2();
      v196[0] = v128;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
      sub_256BF93C8(&qword_26B2C4B88);
      OUTLINED_FUNCTION_54_2();
      goto LABEL_16;
    case 7u:
      uint64_t v130 = v189;
      uint64_t v129 = v190;
      uint64_t v131 = v161[2];
      OUTLINED_FUNCTION_33_3();
      v132();
      LOBYTE(v196[0]) = 15;
      sub_256C099C4();
      OUTLINED_FUNCTION_35_2();
      sub_256C0A054(&qword_26B2C8838, MEMORY[0x263F07508]);
      OUTLINED_FUNCTION_43_0();
      goto LABEL_11;
    case 8u:
      uint64_t v130 = v189;
      uint64_t v129 = v190;
      uint64_t v131 = v162[0];
      OUTLINED_FUNCTION_33_3();
      v133();
      LOBYTE(v196[0]) = 16;
      sub_256C09978();
      OUTLINED_FUNCTION_35_2();
      sub_256C0A054(&qword_26B2C8838, MEMORY[0x263F07508]);
      OUTLINED_FUNCTION_43_0();
LABEL_11:
      OUTLINED_FUNCTION_50();
      v134();
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v131, v130);
      goto LABEL_20;
    case 9u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 18;
      sub_256C098E0();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 0xAu:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 19;
      sub_256C09894();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 0xBu:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 20;
      sub_256C09848();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 0xCu:
      uint64_t v135 = *(void *)v1;
      LOBYTE(v196[0]) = 21;
      sub_256C097FC();
      OUTLINED_FUNCTION_36_2();
      v196[0] = v135;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
      sub_256BF93C8(&qword_26B2C4B88);
      OUTLINED_FUNCTION_54_2();
LABEL_16:
      OUTLINED_FUNCTION_48_1();
      OUTLINED_FUNCTION_50();
      v136();
      uint64_t v137 = *(void (**)(uint64_t, uint64_t))(v191 + 8);
      uint64_t v138 = v113;
      uint64_t v139 = v117;
      goto LABEL_17;
    case 0xDu:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 22;
      sub_256C097B0();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 0xEu:
      uint64_t v141 = v189;
      uint64_t v140 = v190;
      uint64_t v142 = v162[1];
      OUTLINED_FUNCTION_33_3();
      v143();
      LOBYTE(v196[0]) = 23;
      sub_256C09764();
      OUTLINED_FUNCTION_35_2();
      sub_256C0A054(&qword_26B2C8838, MEMORY[0x263F07508]);
      sub_256CEE5A8();
      OUTLINED_FUNCTION_56_2();
      OUTLINED_FUNCTION_50();
      v144();
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v142, v141);
LABEL_20:
      uint64_t v145 = OUTLINED_FUNCTION_20_4();
      uint64_t v147 = v1;
      return v146(v145, v147);
    case 0xFu:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 24;
      sub_256C09718();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 0x10u:
      uint64_t v148 = *(void *)(v1 + 16);
      LOBYTE(v196[0]) = 25;
      sub_256C096CC();
      OUTLINED_FUNCTION_12_4();
      LOBYTE(v196[0]) = 0;
      uint64_t v149 = v194;
      sub_256CEE568();
      if (v149)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v150 = OUTLINED_FUNCTION_49_1();
LABEL_30:
        v152(v150, v151);
        uint64_t v145 = OUTLINED_FUNCTION_56_2();
        return v146(v145, v147);
      }
      else
      {
        swift_bridgeObjectRelease();
        v196[0] = v148;
        char v199 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
        sub_256BF93C8(&qword_26B2C4B88);
        sub_256CEE5A8();
        OUTLINED_FUNCTION_49_1();
        OUTLINED_FUNCTION_50();
        v159();
        uint64_t v138 = OUTLINED_FUNCTION_56_2();
LABEL_17:
        v137(v138, v139);
        return swift_bridgeObjectRelease();
      }
    case 0x11u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 26;
      sub_256C09680();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 0x12u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 28;
      sub_256C095E8();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 0x13u:
      uint64_t v127 = *(void *)v1;
      LOBYTE(v196[0]) = 31;
      sub_256C09504();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_16_6();
      OUTLINED_FUNCTION_27_2();
      goto LABEL_29;
    case 0x14u:
      LOBYTE(v196[0]) = 32;
      sub_256C094B8();
      OUTLINED_FUNCTION_12_4();
      LOBYTE(v196[0]) = 0;
      uint64_t v127 = v187;
      uint64_t v153 = v194;
      sub_256CEE5D8();
      if (!v153)
      {
        LOBYTE(v196[0]) = 1;
        sub_256CEE5E8();
      }
LABEL_29:
      uint64_t v150 = OUTLINED_FUNCTION_48_1();
      uint64_t v151 = v127;
      goto LABEL_30;
    case 0x15u:
      LOBYTE(v196[0]) = 1;
      sub_256C09DEC();
      sub_256CEE538();
      uint64_t v154 = OUTLINED_FUNCTION_48_1();
      uint64_t v156 = v108;
      goto LABEL_45;
    case 0x16u:
      LOBYTE(v196[0]) = 2;
      sub_256C09DA0();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_42_2();
      goto LABEL_44;
    case 0x17u:
      LOBYTE(v196[0]) = 3;
      sub_256C09D54();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = v161;
      goto LABEL_44;
    case 0x18u:
      LOBYTE(v196[0]) = 4;
      sub_256C09D08();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = v162;
      goto LABEL_44;
    case 0x19u:
      LOBYTE(v196[0]) = 5;
      sub_256C09CBC();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = (uint64_t *)&v163;
      goto LABEL_44;
    case 0x1Au:
      LOBYTE(v196[0]) = 11;
      sub_256C09AF4();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = v175;
      goto LABEL_44;
    case 0x1Bu:
      LOBYTE(v196[0]) = 12;
      sub_256C09AA8();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = v176;
      goto LABEL_44;
    case 0x1Cu:
      LOBYTE(v196[0]) = 14;
      sub_256C09A10();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = (uint64_t *)&v177;
      goto LABEL_44;
    case 0x1Du:
      LOBYTE(v196[0]) = 17;
      sub_256C0992C();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = v185;
      goto LABEL_44;
    case 0x1Eu:
      LOBYTE(v196[0]) = 27;
      sub_256C09634();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = v196;
      goto LABEL_44;
    case 0x1Fu:
      LOBYTE(v196[0]) = 29;
      sub_256C0959C();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = &v198;
      goto LABEL_44;
    case 0x20u:
      LOBYTE(v196[0]) = 30;
      sub_256C09550();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_27();
      uint64_t v157 = &v200;
LABEL_44:
      uint64_t v156 = *(v157 - 32);
      goto LABEL_45;
    case 0x21u:
      LOBYTE(v196[0]) = 33;
      sub_256C0946C();
      OUTLINED_FUNCTION_31();
      uint64_t v154 = OUTLINED_FUNCTION_20_4();
      goto LABEL_45;
    case 0x22u:
      LOBYTE(v196[0]) = 34;
      sub_256C09420();
      sub_256CEE538();
      uint64_t v154 = OUTLINED_FUNCTION_20_4();
      uint64_t v156 = v188;
LABEL_45:
      v155(v154, v156);
      OUTLINED_FUNCTION_50();
      uint64_t result = v158();
      break;
    default:
      uint64_t v119 = *(void *)(v1 + 8);
      uint64_t v195 = *(void *)v1;
      uint64_t v118 = v195;
      uint64_t v120 = *(void *)(v1 + 24);
      uint64_t v187 = *(void *)(v1 + 16);
      uint64_t v188 = v120;
      uint64_t v189 = v119;
      uint64_t v122 = *(void *)(v1 + 32);
      uint64_t v190 = *(void *)(v1 + 40);
      uint64_t v121 = v190;
      LODWORD(v186) = *(unsigned __int8 *)(v1 + 48);
      LOBYTE(v196[0]) = 0;
      sub_256C09E38();
      sub_256CEE538();
      v196[0] = v118;
      v196[1] = v119;
      uint64_t v123 = v187;
      v196[2] = v187;
      v196[3] = v120;
      v196[4] = v122;
      v196[5] = v121;
      LOBYTE(v120) = v186;
      char v197 = v186;
      sub_256BE9E40();
      sub_256CEE5A8();
      OUTLINED_FUNCTION_50();
      v124();
      OUTLINED_FUNCTION_50();
      v125();
      uint64_t result = sub_256BE958C(v195, v189, v123, v188, v122, v190, v120);
      break;
  }
  return result;
}

uint64_t ModelManagerError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v314 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5088);
  OUTLINED_FUNCTION_0_0();
  uint64_t v315 = v7;
  v316 = v6;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_3_0();
  uint64_t v313 = v8;
  v312[37] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B28);
  OUTLINED_FUNCTION_0_0();
  v312[36] = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_0();
  v312[70] = v11;
  v312[39] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AF0);
  OUTLINED_FUNCTION_0_0();
  v312[38] = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_23(v14, v281[0]);
  v312[35] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A88);
  OUTLINED_FUNCTION_0_0();
  v312[34] = v15;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v312[33] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AA8);
  OUTLINED_FUNCTION_0_0();
  v312[32] = v18;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v20);
  v312[30] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AC8);
  OUTLINED_FUNCTION_0_0();
  v312[28] = v21;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v23);
  v312[31] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A40);
  OUTLINED_FUNCTION_0_0();
  v312[29] = v24;
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v312[24] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AE8);
  OUTLINED_FUNCTION_0_0();
  v312[22] = v27;
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v29);
  v312[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A70);
  OUTLINED_FUNCTION_0_0();
  v312[23] = v30;
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v312[27] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B20);
  OUTLINED_FUNCTION_0_0();
  v312[26] = v33;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v35);
  v312[21] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A38);
  OUTLINED_FUNCTION_0_0();
  v312[20] = v36;
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v38);
  v312[19] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A98);
  OUTLINED_FUNCTION_0_0();
  v312[18] = v39;
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v41);
  v312[17] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B18);
  OUTLINED_FUNCTION_0_0();
  v312[16] = v42;
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v44);
  v312[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B38);
  OUTLINED_FUNCTION_0_0();
  v312[14] = v45;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v47);
  v312[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A30);
  OUTLINED_FUNCTION_0_0();
  v312[12] = v48;
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v312[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A80);
  OUTLINED_FUNCTION_0_0();
  v312[10] = v51;
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v53);
  v312[9] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AD0);
  OUTLINED_FUNCTION_0_0();
  v312[8] = v54;
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v312[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AC0);
  OUTLINED_FUNCTION_0_0();
  v312[4] = v57;
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v59);
  v312[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AD8);
  OUTLINED_FUNCTION_0_0();
  v312[6] = v60;
  MEMORY[0x270FA5388](v61);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v312[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A90);
  OUTLINED_FUNCTION_0_0();
  v312[2] = v63;
  MEMORY[0x270FA5388](v64);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v65);
  uint64_t v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B08);
  OUTLINED_FUNCTION_0_0();
  uint64_t v310 = v66;
  MEMORY[0x270FA5388](v67);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v68);
  v312[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A20);
  OUTLINED_FUNCTION_0_0();
  v312[0] = v69;
  MEMORY[0x270FA5388](v70);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v71);
  uint64_t v309 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AE0);
  OUTLINED_FUNCTION_0_0();
  v308[1] = v72;
  MEMORY[0x270FA5388](v73);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AF8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v305 = v75;
  MEMORY[0x270FA5388](v76);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  v308[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AA0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v306 = v78;
  MEMORY[0x270FA5388](v79);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v80);
  v304[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B10);
  OUTLINED_FUNCTION_0_0();
  v304[0] = v81;
  MEMORY[0x270FA5388](v82);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v83);
  uint64_t v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A50);
  OUTLINED_FUNCTION_0_0();
  v302[1] = v84;
  MEMORY[0x270FA5388](v85);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v86);
  v302[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A48);
  OUTLINED_FUNCTION_0_0();
  uint64_t v301 = v87;
  MEMORY[0x270FA5388](v88);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v300 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AB0);
  OUTLINED_FUNCTION_0_0();
  v299[1] = v90;
  MEMORY[0x270FA5388](v91);
  OUTLINED_FUNCTION_3_0();
  uint64_t v321 = v92;
  v299[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B00);
  OUTLINED_FUNCTION_0_0();
  uint64_t v298 = v93;
  MEMORY[0x270FA5388](v94);
  OUTLINED_FUNCTION_3_0();
  uint64_t v320 = v95;
  uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A58);
  OUTLINED_FUNCTION_0_0();
  uint64_t v296 = v96;
  MEMORY[0x270FA5388](v97);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v98);
  uint64_t v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5B30);
  OUTLINED_FUNCTION_0_0();
  uint64_t v294 = v99;
  MEMORY[0x270FA5388](v100);
  OUTLINED_FUNCTION_11_0((uint64_t)v281 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v293 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5AB8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v292 = v102;
  MEMORY[0x270FA5388](v103);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v104);
  uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A68);
  OUTLINED_FUNCTION_0_0();
  uint64_t v288 = v105;
  MEMORY[0x270FA5388](v106);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v107);
  uint64_t v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A60);
  OUTLINED_FUNCTION_0_0();
  uint64_t v290 = v108;
  MEMORY[0x270FA5388](v109);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_11_0(v110);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A78);
  OUTLINED_FUNCTION_0_0();
  uint64_t v318 = v112;
  uint64_t v319 = v111;
  MEMORY[0x270FA5388](v111);
  OUTLINED_FUNCTION_3_0();
  uint64_t v324 = v113;
  uint64_t v317 = type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v114);
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v115);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v116);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v117);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v118);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v119);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v120);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v121);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v122);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v123);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v124);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v125);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v126);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v127);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v128);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v129);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v130);
  OUTLINED_FUNCTION_59_2();
  MEMORY[0x270FA5388](v131);
  OUTLINED_FUNCTION_58_1();
  uint64_t v133 = MEMORY[0x270FA5388](v132);
  uint64_t v135 = (char *)v281 - v134;
  MEMORY[0x270FA5388](v133);
  OUTLINED_FUNCTION_57_1();
  uint64_t v137 = MEMORY[0x270FA5388](v136);
  uint64_t v139 = (char *)v281 - v138;
  MEMORY[0x270FA5388](v137);
  uint64_t v141 = (char *)v281 - v140;
  uint64_t v142 = a1[3];
  v322 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v142);
  sub_256C093D4();
  uint64_t v143 = (uint64_t)v323;
  sub_256CEE848();
  if (v143) {
    goto LABEL_42;
  }
  v281[1] = v4;
  v282 = v139;
  v283 = v135;
  uint64_t v284 = v2;
  uint64_t v285 = v3;
  uint64_t v144 = v320;
  v323 = v141;
  uint64_t v145 = v319;
  uint64_t v146 = sub_256CEE528();
  uint64_t v147 = *(void *)(v146 + 16);
  if (!v147
    || (v281[0] = 0,
        uint64_t v148 = *(unsigned __int8 *)(v146 + 32),
        sub_256BEBCEC(1, v147, v146, v146 + 32, 0, (2 * v147) | 1),
        uint64_t v150 = v149,
        unint64_t v152 = v151,
        swift_bridgeObjectRelease(),
        v150 != v152 >> 1))
  {
    uint64_t v156 = v317;
    uint64_t v157 = sub_256CEE398();
    swift_allocError();
    char v159 = v158;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2BA0);
    *char v159 = v156;
    uint64_t v160 = v324;
    sub_256CEE468();
    sub_256CEE388();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v157 - 8) + 104))(v159, *MEMORY[0x263F8DCB0], v157);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v318 + 8))(v160, v145);
LABEL_42:
    uint64_t v209 = (uint64_t)v322;
    return __swift_destroy_boxed_opaque_existential_1Tm(v209);
  }
  uint64_t v153 = v148;
  uint64_t v155 = v315;
  uint64_t v154 = v316;
  switch(v153)
  {
    case 1:
      LOBYTE(v325) = 1;
      sub_256C09DEC();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v161();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v162();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 2:
      LOBYTE(v325) = 2;
      sub_256C09DA0();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v163();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v164();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 3:
      LOBYTE(v325) = 3;
      sub_256C09D54();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_50();
      v165();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v166();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 4:
      LOBYTE(v325) = 4;
      sub_256C09D08();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v167();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v168();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 5:
      LOBYTE(v325) = 5;
      sub_256C09CBC();
      OUTLINED_FUNCTION_14_4();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v169();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v170();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 6:
      LOBYTE(v325) = 6;
      sub_256C09C70();
      OUTLINED_FUNCTION_4_2();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v219 = OUTLINED_FUNCTION_3_3();
      v220(v219);
      swift_unknownObjectRelease();
      uint64_t v221 = OUTLINED_FUNCTION_5_2();
      v222(v221);
      OUTLINED_FUNCTION_15_4((uint64_t)v299);
      goto LABEL_46;
    case 7:
      LOBYTE(v325) = 7;
      sub_256C09C24();
      OUTLINED_FUNCTION_53_2();
      uint64_t v154 = (_DWORD *)v302[0];
      sub_256CEE498();
      OUTLINED_FUNCTION_29_1();
      OUTLINED_FUNCTION_55_1();
      OUTLINED_FUNCTION_50();
      v223();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v224();
      OUTLINED_FUNCTION_15_4((uint64_t)&v300);
      goto LABEL_46;
    case 8:
      LOBYTE(v325) = 8;
      sub_256C09BD8();
      OUTLINED_FUNCTION_14_4();
      uint64_t v154 = (_DWORD *)v303;
      sub_256CEE498();
      OUTLINED_FUNCTION_29_1();
      OUTLINED_FUNCTION_50();
      v225();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v226();
      OUTLINED_FUNCTION_15_4((uint64_t)&v301);
      goto LABEL_46;
    case 9:
      LOBYTE(v325) = 9;
      sub_256C09B8C();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v227 = OUTLINED_FUNCTION_3_3();
      v228(v227);
      swift_unknownObjectRelease();
      uint64_t v229 = OUTLINED_FUNCTION_5_2();
      v230(v229);
      OUTLINED_FUNCTION_15_4((uint64_t)v302);
      goto LABEL_46;
    case 10:
      LOBYTE(v325) = 10;
      sub_256C09B40();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v231 = OUTLINED_FUNCTION_3_3();
      v232(v231);
      swift_unknownObjectRelease();
      uint64_t v233 = OUTLINED_FUNCTION_5_2();
      v234(v233);
      OUTLINED_FUNCTION_15_4((uint64_t)v304);
      goto LABEL_46;
    case 11:
      LOBYTE(v325) = 11;
      sub_256C09AF4();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v171();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v172();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 12:
      LOBYTE(v325) = 12;
      sub_256C09AA8();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v173();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v174();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 13:
      LOBYTE(v325) = 13;
      sub_256C09A5C();
      OUTLINED_FUNCTION_2_3();
      uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
      sub_256BF93C8(&qword_269FC2FC0);
      OUTLINED_FUNCTION_22_4();
      uint64_t v175 = OUTLINED_FUNCTION_3_3();
      v176(v175);
      swift_unknownObjectRelease();
      uint64_t v177 = OUTLINED_FUNCTION_5_2();
      v178(v177);
      OUTLINED_FUNCTION_60_1(v325);
      goto LABEL_45;
    case 14:
      LOBYTE(v325) = 14;
      sub_256C09A10();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v179();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v180();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 15:
      LOBYTE(v325) = 15;
      sub_256C099C4();
      OUTLINED_FUNCTION_2_3();
      sub_256CEDB08();
      sub_256C0A054(&qword_26B2C7B60, MEMORY[0x263F07508]);
      OUTLINED_FUNCTION_47_1();
      OUTLINED_FUNCTION_22_4();
      uint64_t v181 = OUTLINED_FUNCTION_3_3();
      v182(v181);
      swift_unknownObjectRelease();
      uint64_t v183 = OUTLINED_FUNCTION_5_2();
      v184(v183);
      goto LABEL_30;
    case 16:
      LOBYTE(v325) = 16;
      sub_256C09978();
      OUTLINED_FUNCTION_2_3();
      sub_256CEDB08();
      sub_256C0A054(&qword_26B2C7B60, MEMORY[0x263F07508]);
      OUTLINED_FUNCTION_47_1();
      OUTLINED_FUNCTION_22_4();
      uint64_t v185 = OUTLINED_FUNCTION_3_3();
      v186(v185);
      swift_unknownObjectRelease();
      uint64_t v187 = OUTLINED_FUNCTION_5_2();
      v188(v187);
      goto LABEL_30;
    case 17:
      LOBYTE(v325) = 17;
      sub_256C0992C();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v189();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v190();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 18:
      LOBYTE(v325) = 18;
      sub_256C098E0();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v235 = OUTLINED_FUNCTION_3_3();
      v236(v235);
      swift_unknownObjectRelease();
      uint64_t v237 = OUTLINED_FUNCTION_5_2();
      v238(v237);
      OUTLINED_FUNCTION_15_4((uint64_t)&v305);
      goto LABEL_46;
    case 19:
      LOBYTE(v325) = 19;
      sub_256C09894();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v239 = OUTLINED_FUNCTION_3_3();
      v240(v239);
      swift_unknownObjectRelease();
      uint64_t v241 = OUTLINED_FUNCTION_5_2();
      v242(v241);
      OUTLINED_FUNCTION_15_4((uint64_t)&v306);
      goto LABEL_46;
    case 20:
      LOBYTE(v325) = 20;
      sub_256C09848();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v243 = OUTLINED_FUNCTION_3_3();
      v244(v243);
      swift_unknownObjectRelease();
      uint64_t v245 = OUTLINED_FUNCTION_5_2();
      v246(v245);
      OUTLINED_FUNCTION_15_4((uint64_t)&v307);
      goto LABEL_46;
    case 21:
      LOBYTE(v325) = 21;
      sub_256C097FC();
      OUTLINED_FUNCTION_2_3();
      uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
      sub_256BF93C8(&qword_269FC2FC0);
      OUTLINED_FUNCTION_22_4();
      uint64_t v191 = OUTLINED_FUNCTION_3_3();
      v192(v191);
      swift_unknownObjectRelease();
      uint64_t v193 = OUTLINED_FUNCTION_5_2();
      v194(v193);
      OUTLINED_FUNCTION_60_1(v325);
      goto LABEL_45;
    case 22:
      LOBYTE(v325) = 22;
      sub_256C097B0();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v247 = OUTLINED_FUNCTION_3_3();
      v248(v247);
      swift_unknownObjectRelease();
      uint64_t v249 = OUTLINED_FUNCTION_5_2();
      v250(v249);
      OUTLINED_FUNCTION_15_4((uint64_t)v308);
      goto LABEL_46;
    case 23:
      LOBYTE(v325) = 23;
      sub_256C09764();
      OUTLINED_FUNCTION_2_3();
      sub_256CEDB08();
      sub_256C0A054(&qword_26B2C7B60, MEMORY[0x263F07508]);
      OUTLINED_FUNCTION_47_1();
      OUTLINED_FUNCTION_22_4();
      uint64_t v195 = OUTLINED_FUNCTION_3_3();
      v196(v195);
      swift_unknownObjectRelease();
      uint64_t v197 = OUTLINED_FUNCTION_5_2();
      v198(v197);
LABEL_30:
      swift_storeEnumTagMultiPayload();
      uint64_t v199 = v144;
      goto LABEL_47;
    case 24:
      LOBYTE(v325) = 24;
      sub_256C09718();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v251 = OUTLINED_FUNCTION_3_3();
      v252(v251);
      swift_unknownObjectRelease();
      uint64_t v253 = OUTLINED_FUNCTION_5_2();
      v254(v253);
      OUTLINED_FUNCTION_15_4((uint64_t)&v309);
      goto LABEL_46;
    case 25:
      LOBYTE(v325) = 25;
      sub_256C096CC();
      OUTLINED_FUNCTION_53_2();
      LOBYTE(v325) = 0;
      uint64_t v255 = sub_256CEE498();
      uint64_t v257 = v256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
      char v329 = 1;
      sub_256BF93C8(&qword_269FC2FC0);
      sub_256CEE4D8();
      uint64_t v276 = OUTLINED_FUNCTION_52_0();
      v277(v276);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v278();
      uint64_t v279 = v325;
      v280 = v286;
      uint64_t *v286 = v255;
      v280[1] = v257;
      v280[2] = v279;
      swift_storeEnumTagMultiPayload();
      uint64_t v199 = (uint64_t)v280;
      goto LABEL_47;
    case 26:
      LOBYTE(v325) = 26;
      sub_256C09680();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v258 = OUTLINED_FUNCTION_3_3();
      v259(v258);
      swift_unknownObjectRelease();
      uint64_t v260 = OUTLINED_FUNCTION_5_2();
      v261(v260);
      OUTLINED_FUNCTION_15_4((uint64_t)&v310);
      goto LABEL_46;
    case 27:
      LOBYTE(v325) = 27;
      sub_256C09634();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v200();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v201();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 28:
      LOBYTE(v325) = 28;
      sub_256C095E8();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v262 = OUTLINED_FUNCTION_3_3();
      v263(v262);
      swift_unknownObjectRelease();
      uint64_t v264 = OUTLINED_FUNCTION_5_2();
      v265(v264);
      OUTLINED_FUNCTION_15_4((uint64_t)&v311);
      goto LABEL_46;
    case 29:
      LOBYTE(v325) = 29;
      sub_256C0959C();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v202();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v203();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 30:
      LOBYTE(v325) = 30;
      sub_256C09550();
      OUTLINED_FUNCTION_10_1();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v204();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v205();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 31:
      LOBYTE(v325) = 31;
      sub_256C09504();
      OUTLINED_FUNCTION_2_3();
      OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_29_1();
      uint64_t v266 = OUTLINED_FUNCTION_3_3();
      v267(v266);
      swift_unknownObjectRelease();
      uint64_t v268 = OUTLINED_FUNCTION_5_2();
      v269(v268);
      OUTLINED_FUNCTION_15_4((uint64_t)v312);
      goto LABEL_46;
    case 32:
      LOBYTE(v325) = 32;
      sub_256C094B8();
      OUTLINED_FUNCTION_4_2();
      LOBYTE(v325) = 0;
      int v270 = sub_256CEE508();
      LOBYTE(v325) = 1;
      uint64_t v271 = sub_256CEE518();
      OUTLINED_FUNCTION_50();
      v272();
      swift_unknownObjectRelease();
      uint64_t v273 = OUTLINED_FUNCTION_5_2();
      v274(v273);
      uint64_t v154 = v287;
      _DWORD *v287 = v270;
      *((void *)v154 + 1) = v271;
LABEL_46:
      swift_storeEnumTagMultiPayload();
      uint64_t v199 = (uint64_t)v154;
      goto LABEL_47;
    case 33:
      LOBYTE(v325) = 33;
      sub_256C0946C();
      OUTLINED_FUNCTION_14_4();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_50();
      v206();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v207();
      OUTLINED_FUNCTION_19_3();
      goto LABEL_44;
    case 34:
      LOBYTE(v325) = 34;
      sub_256C09420();
      uint64_t v208 = v313;
      OUTLINED_FUNCTION_14_4();
      (*(void (**)(uint64_t, _DWORD *))(v155 + 8))(v208, v154);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v211();
      OUTLINED_FUNCTION_19_3();
LABEL_44:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      LOBYTE(v325) = 0;
      sub_256C09E38();
      OUTLINED_FUNCTION_2_3();
      sub_256BE9DF4();
      sub_256CEE4D8();
      uint64_t v212 = OUTLINED_FUNCTION_3_3();
      v213(v212);
      swift_unknownObjectRelease();
      uint64_t v214 = OUTLINED_FUNCTION_51_1();
      v215(v214);
      char v216 = v328;
      long long v217 = v326;
      uint64_t v218 = (uint64_t)v282;
      _OWORD *v282 = v325;
      *(_OWORD *)(v218 + 16) = v217;
      *(_OWORD *)(v218 + 32) = v327;
      *(unsigned char *)(v218 + 48) = v216;
LABEL_45:
      swift_storeEnumTagMultiPayload();
      uint64_t v199 = v218;
LABEL_47:
      unint64_t v152 = (unint64_t)v323;
      sub_256C09E84(v199, (uint64_t)v323);
      break;
  }
  uint64_t v275 = (uint64_t)v322;
  sub_256C09E84(v152, v314);
  uint64_t v209 = v275;
  return __swift_destroy_boxed_opaque_existential_1Tm(v209);
}

uint64_t sub_256C08E68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ModelManagerError.init(from:)(a1, a2);
}

uint64_t sub_256C08E80(void *a1)
{
  return ModelManagerError.encode(to:)(a1);
}

uint64_t ModelManagerError.init(wrapping:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4928);
  MEMORY[0x270FA5388](v11 - 8);
  OUTLINED_FUNCTION_37_0();
  uint64_t v12 = sub_256CEDDE8();
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_29();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C49C8);
  MEMORY[0x270FA5388](v16 - 8);
  OUTLINED_FUNCTION_28_2();
  uint64_t v38 = a1;
  MEMORY[0x25A2AE9C0](a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload(v4, 0, 1, v7);

    uint64_t v17 = v4;
    return sub_256C09E84(v17, a2);
  }
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v7);
  sub_256BE33C8(v4, qword_26B2C49C8);
  uint64_t v45 = a1;
  MEMORY[0x25A2AE9C0](a1);
  if (swift_dynamicCast())
  {

    unint64_t v18 = v39;
    uint64_t v19 = v40;
    uint64_t v20 = v41;
    uint64_t v21 = v42;
    uint64_t v22 = v43;
    unsigned __int8 v23 = v44;
    if ((v44 & 0xF8) == 0x88
      && (v44 == 136 ? (BOOL v24 = v38 == (void *)1) : (BOOL v24 = 0), v24 && !(v40 | v39 | v41 | v42 | v43)))
    {
      OUTLINED_FUNCTION_17_1();
    }
    else
    {
      *(void *)a2 = v38;
      *(void *)(a2 + 8) = v18;
      *(void *)(a2 + 16) = v19;
      *(void *)(a2 + 24) = v20;
      *(void *)(a2 + 32) = v21;
      *(void *)(a2 + 40) = v22;
      *(unsigned char *)(a2 + 48) = v23;
      OUTLINED_FUNCTION_17_1();
    }
  }
  else
  {
    uint64_t v38 = a1;
    MEMORY[0x25A2AE9C0](a1);
    if (swift_dynamicCast())
    {
      __swift_storeEnumTagSinglePayload(v2, 0, 1, v12);
      OUTLINED_FUNCTION_33_3();
      v25();
      uint64_t v38 = 0;
      unint64_t v39 = 0xE000000000000000;
      sub_256CEE3B8();

      uint64_t v26 = v38;
      unint64_t v27 = v39;
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v12);
      *uint64_t v10 = v26;
      v10[1] = v27;
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = (uint64_t)v10;
      return sub_256C09E84(v17, a2);
    }
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v12);
    sub_256BE33C8(v2, &qword_26B2C4928);
    if (qword_269FC2718 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_256CEDC88();
    __swift_project_value_buffer(v29, (uint64_t)qword_269FC3310);
    MEMORY[0x25A2AE9C0](a1);
    MEMORY[0x25A2AE9C0](a1);
    uint64_t v30 = sub_256CEDC68();
    os_log_type_t v31 = sub_256CEE2B8();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 138412290;
      MEMORY[0x25A2AE9C0](a1);
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v38 = (void *)v33;
      sub_256CEE308();
      uint64_t v34 = v37;
      *uint64_t v37 = v33;

      _os_log_impl(&dword_256BD4000, v30, v31, "got unrecognized error %@", v32, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      swift_arrayDestroy();
      MEMORY[0x25A2AEBD0](v34, -1, -1);
      MEMORY[0x25A2AEBD0](v32, -1, -1);
    }
    else
    {
    }
    uint64_t v38 = a1;
    *(void *)a2 = sub_256CEDF88();
    *(void *)(a2 + 8) = v35;
    OUTLINED_FUNCTION_17_1();
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256C09378(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModelManagerError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_256C093D4()
{
  unint64_t result = qword_26B2C7C40;
  if (!qword_26B2C7C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C40);
  }
  return result;
}

unint64_t sub_256C09420()
{
  unint64_t result = qword_269FC3338;
  if (!qword_269FC3338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3338);
  }
  return result;
}

unint64_t sub_256C0946C()
{
  unint64_t result = qword_269FC3340;
  if (!qword_269FC3340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3340);
  }
  return result;
}

unint64_t sub_256C094B8()
{
  unint64_t result = qword_269FC3348;
  if (!qword_269FC3348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3348);
  }
  return result;
}

unint64_t sub_256C09504()
{
  unint64_t result = qword_269FC3350;
  if (!qword_269FC3350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3350);
  }
  return result;
}

unint64_t sub_256C09550()
{
  unint64_t result = qword_269FC3358;
  if (!qword_269FC3358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3358);
  }
  return result;
}

unint64_t sub_256C0959C()
{
  unint64_t result = qword_269FC3360;
  if (!qword_269FC3360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3360);
  }
  return result;
}

unint64_t sub_256C095E8()
{
  unint64_t result = qword_269FC3368;
  if (!qword_269FC3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3368);
  }
  return result;
}

unint64_t sub_256C09634()
{
  unint64_t result = qword_269FC3370;
  if (!qword_269FC3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3370);
  }
  return result;
}

unint64_t sub_256C09680()
{
  unint64_t result = qword_26B2C7968;
  if (!qword_26B2C7968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7968);
  }
  return result;
}

unint64_t sub_256C096CC()
{
  unint64_t result = qword_269FC3378;
  if (!qword_269FC3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3378);
  }
  return result;
}

unint64_t sub_256C09718()
{
  unint64_t result = qword_269FC3380;
  if (!qword_269FC3380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3380);
  }
  return result;
}

unint64_t sub_256C09764()
{
  unint64_t result = qword_269FC3388;
  if (!qword_269FC3388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3388);
  }
  return result;
}

unint64_t sub_256C097B0()
{
  unint64_t result = qword_269FC3390;
  if (!qword_269FC3390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3390);
  }
  return result;
}

unint64_t sub_256C097FC()
{
  unint64_t result = qword_269FC3398;
  if (!qword_269FC3398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3398);
  }
  return result;
}

unint64_t sub_256C09848()
{
  unint64_t result = qword_269FC33A0;
  if (!qword_269FC33A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33A0);
  }
  return result;
}

unint64_t sub_256C09894()
{
  unint64_t result = qword_269FC33A8;
  if (!qword_269FC33A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33A8);
  }
  return result;
}

unint64_t sub_256C098E0()
{
  unint64_t result = qword_269FC33B0;
  if (!qword_269FC33B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33B0);
  }
  return result;
}

unint64_t sub_256C0992C()
{
  unint64_t result = qword_269FC33B8;
  if (!qword_269FC33B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33B8);
  }
  return result;
}

unint64_t sub_256C09978()
{
  unint64_t result = qword_269FC33C0;
  if (!qword_269FC33C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33C0);
  }
  return result;
}

unint64_t sub_256C099C4()
{
  unint64_t result = qword_269FC33C8;
  if (!qword_269FC33C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33C8);
  }
  return result;
}

unint64_t sub_256C09A10()
{
  unint64_t result = qword_269FC33D0;
  if (!qword_269FC33D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33D0);
  }
  return result;
}

unint64_t sub_256C09A5C()
{
  unint64_t result = qword_269FC33D8;
  if (!qword_269FC33D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33D8);
  }
  return result;
}

unint64_t sub_256C09AA8()
{
  unint64_t result = qword_269FC33E0;
  if (!qword_269FC33E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33E0);
  }
  return result;
}

unint64_t sub_256C09AF4()
{
  unint64_t result = qword_269FC33E8;
  if (!qword_269FC33E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33E8);
  }
  return result;
}

unint64_t sub_256C09B40()
{
  unint64_t result = qword_269FC33F0;
  if (!qword_269FC33F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33F0);
  }
  return result;
}

unint64_t sub_256C09B8C()
{
  unint64_t result = qword_269FC33F8;
  if (!qword_269FC33F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC33F8);
  }
  return result;
}

unint64_t sub_256C09BD8()
{
  unint64_t result = qword_269FC3400;
  if (!qword_269FC3400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3400);
  }
  return result;
}

unint64_t sub_256C09C24()
{
  unint64_t result = qword_269FC3408;
  if (!qword_269FC3408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3408);
  }
  return result;
}

unint64_t sub_256C09C70()
{
  unint64_t result = qword_26B2C5A28;
  if (!qword_26B2C5A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5A28);
  }
  return result;
}

unint64_t sub_256C09CBC()
{
  unint64_t result = qword_269FC3410;
  if (!qword_269FC3410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3410);
  }
  return result;
}

unint64_t sub_256C09D08()
{
  unint64_t result = qword_269FC3418;
  if (!qword_269FC3418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3418);
  }
  return result;
}

unint64_t sub_256C09D54()
{
  unint64_t result = qword_269FC3420;
  if (!qword_269FC3420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3420);
  }
  return result;
}

unint64_t sub_256C09DA0()
{
  unint64_t result = qword_269FC3428;
  if (!qword_269FC3428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3428);
  }
  return result;
}

unint64_t sub_256C09DEC()
{
  unint64_t result = qword_269FC3430;
  if (!qword_269FC3430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3430);
  }
  return result;
}

unint64_t sub_256C09E38()
{
  unint64_t result = qword_269FC3438;
  if (!qword_269FC3438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3438);
  }
  return result;
}

uint64_t sub_256C09E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModelManagerError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C09EE8(void *a1)
{
  a1[1] = sub_256C0A054(&qword_26B2C5B58, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  a1[2] = sub_256C0A054(&qword_269FC3440, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  a1[3] = sub_256C0A054(&qword_269FC3448, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  a1[4] = sub_256C0A054(&qword_26B2C9150, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  a1[5] = sub_256C0A054(&qword_26B2C9148, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  uint64_t result = sub_256C0A054(&qword_269FC3450, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  a1[6] = result;
  return result;
}

uint64_t sub_256C0A00C()
{
  return sub_256C0A054(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
}

uint64_t sub_256C0A054(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelManagerError(uint64_t *a1, const void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void *)a2;
        uint64_t v8 = *((void *)a2 + 1);
        uint64_t v9 = *((void *)a2 + 2);
        uint64_t v10 = *((void *)a2 + 3);
        uint64_t v11 = *((void *)a2 + 4);
        uint64_t v12 = *((void *)a2 + 5);
        unsigned __int8 v13 = *((unsigned char *)a2 + 48);
        sub_256BE952C(v7, v8, v9, v10, v11, v12, v13);
        *a1 = v7;
        a1[1] = v8;
        a1[2] = v9;
        a1[3] = v10;
        a1[4] = v11;
        a1[5] = v12;
        *((unsigned char *)a1 + 48) = v13;
        goto LABEL_10;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xFu:
      case 0x11u:
      case 0x12u:
      case 0x13u:
        uint64_t v17 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v17;
        sub_256CEDEC8();
        goto LABEL_10;
      case 6u:
      case 0xCu:
        *a1 = *(void *)a2;
        sub_256CEDEC8();
        goto LABEL_10;
      case 7u:
      case 8u:
      case 0xEu:
        uint64_t v15 = sub_256CEDB08();
        (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_10;
      case 0x10u:
        uint64_t v16 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v16;
        a1[2] = *((void *)a2 + 2);
        sub_256CEDEC8();
        sub_256CEDEC8();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ModelManagerError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v5 = *(void *)a1;
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
      uint64_t result = sub_256BE958C(v5, v6, v7, v8, v9, v10, v11);
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 15:
    case 17:
    case 18:
    case 19:
      goto LABEL_2;
    case 7:
    case 8:
    case 14:
      uint64_t v3 = sub_256CEDB08();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 16:
      swift_bridgeObjectRelease();
LABEL_2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for ModelManagerError(uint64_t *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *((void *)a2 + 1);
      uint64_t v8 = *((void *)a2 + 2);
      uint64_t v9 = *((void *)a2 + 3);
      uint64_t v10 = *((void *)a2 + 4);
      uint64_t v11 = *((void *)a2 + 5);
      unsigned __int8 v12 = *((unsigned char *)a2 + 48);
      sub_256BE952C(v6, v7, v8, v9, v10, v11, v12);
      *a1 = v6;
      a1[1] = v7;
      a1[2] = v8;
      a1[3] = v9;
      a1[4] = v10;
      a1[5] = v11;
      *((unsigned char *)a1 + 48) = v12;
      goto LABEL_8;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xFu:
    case 0x11u:
    case 0x12u:
    case 0x13u:
      uint64_t v15 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v15;
      sub_256CEDEC8();
      goto LABEL_8;
    case 6u:
    case 0xCu:
      *a1 = *(void *)a2;
      sub_256CEDEC8();
      goto LABEL_8;
    case 7u:
    case 8u:
    case 0xEu:
      uint64_t v13 = sub_256CEDB08();
      (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      goto LABEL_8;
    case 0x10u:
      uint64_t v14 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v14;
      a1[2] = *((void *)a2 + 2);
      sub_256CEDEC8();
      sub_256CEDEC8();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for ModelManagerError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_256C09378((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *a2;
        uint64_t v7 = a2[1];
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        uint64_t v10 = a2[4];
        uint64_t v11 = a2[5];
        unsigned __int8 v12 = *((unsigned char *)a2 + 48);
        sub_256BE952C(v6, v7, v8, v9, v10, v11, v12);
        *a1 = v6;
        a1[1] = v7;
        a1[2] = v8;
        a1[3] = v9;
        a1[4] = v10;
        a1[5] = v11;
        *((unsigned char *)a1 + 48) = v12;
        goto LABEL_9;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xFu:
      case 0x11u:
      case 0x12u:
      case 0x13u:
        *a1 = *a2;
        a1[1] = a2[1];
        sub_256CEDEC8();
        goto LABEL_9;
      case 6u:
      case 0xCu:
        *a1 = *a2;
        sub_256CEDEC8();
        goto LABEL_9;
      case 7u:
      case 8u:
      case 0xEu:
        uint64_t v13 = sub_256CEDB08();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_9;
      case 0x10u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_256CEDEC8();
        sub_256CEDEC8();
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for ModelManagerError(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 14 || EnumCaseMultiPayload == 8 || EnumCaseMultiPayload == 7)
  {
    uint64_t v7 = sub_256CEDB08();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ModelManagerError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_256C09378((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 14 || EnumCaseMultiPayload == 8 || EnumCaseMultiPayload == 7)
    {
      uint64_t v7 = sub_256CEDB08();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_256C0B184()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256C0B194()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModelManagerError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDE)
  {
    if (a2 + 34 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 34) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 35;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x23;
  int v5 = v6 - 35;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModelManagerError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 34 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 34) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDD)
  {
    unsigned int v6 = ((a2 - 222) >> 8) + 1;
    *uint64_t result = a2 + 34;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C0B3CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 34;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerError.CodingKeys()
{
  return &type metadata for ModelManagerError.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InferenceErrorCodingKeys()
{
  return &type metadata for ModelManagerError.InferenceErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UndefinedErrorCodingKeys()
{
  return &type metadata for ModelManagerError.UndefinedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.MissingFeatureFlagCodingKeys()
{
  return &type metadata for ModelManagerError.MissingFeatureFlagCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnsupportedNumberOfAssetBundlesCodingKeys()
{
  return &type metadata for ModelManagerError.UnsupportedNumberOfAssetBundlesCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InternalErrorCodingKeys()
{
  return &type metadata for ModelManagerError.InternalErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.NotSupportedOnExternalBuildCodingKeys()
{
  return &type metadata for ModelManagerError.NotSupportedOnExternalBuildCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.MissingEntitlementCodingKeys()
{
  return &type metadata for ModelManagerError.MissingEntitlementCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnrecognizedUnderlyingErrorCodingKeys()
{
  return &type metadata for ModelManagerError.UnrecognizedUnderlyingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.XpcErrorCodingKeys()
{
  return &type metadata for ModelManagerError.XpcErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnrecognizedInferenceProviderCodingKeys()
{
  return &type metadata for ModelManagerError.UnrecognizedInferenceProviderCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UseCaseDisabledCodingKeys()
{
  return &type metadata for ModelManagerError.UseCaseDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InsufficientSystemResourcesCodingKeys()
{
  return &type metadata for ModelManagerError.InsufficientSystemResourcesCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.DeniedDueToSystemStateCodingKeys()
{
  return &type metadata for ModelManagerError.DeniedDueToSystemStateCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.DeniedDueToSpecifiedSystemStateCodingKeys()
{
  return &type metadata for ModelManagerError.DeniedDueToSpecifiedSystemStateCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.OnBehalfOfProcessNotRunningCodingKeys()
{
  return &type metadata for ModelManagerError.OnBehalfOfProcessNotRunningCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.RequestNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.RequestNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.SessionInCancelStateCodingKeys()
{
  return &type metadata for ModelManagerError.SessionInCancelStateCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.OperationCancelledCodingKeys()
{
  return &type metadata for ModelManagerError.OperationCancelledCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.AssetBundleNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.AssetBundleNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.AssetNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.AssetNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnrecognizedModelCatalogResourceCodingKeys()
{
  return &type metadata for ModelManagerError.UnrecognizedModelCatalogResourceCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.NoCommonInferenceProviderForAssetsCodingKeys()
{
  return &type metadata for ModelManagerError.NoCommonInferenceProviderForAssetsCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.AssetDoesNotSupportDynamicModeCodingKeys()
{
  return &type metadata for ModelManagerError.AssetDoesNotSupportDynamicModeCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.SessionNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.SessionNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InvalidRequestModelBundleIDCodingKeys()
{
  return &type metadata for ModelManagerError.InvalidRequestModelBundleIDCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InvalidRequestRequiredAssetIDsCodingKeys()
{
  return &type metadata for ModelManagerError.InvalidRequestRequiredAssetIDsCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.ModelCatalogErrorCodingKeys()
{
  return &type metadata for ModelManagerError.ModelCatalogErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.DeniedAssertionBySystemCodingKeys()
{
  return &type metadata for ModelManagerError.DeniedAssertionBySystemCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.AssetNotAvailableInModelCatalogCodingKeys()
{
  return &type metadata for ModelManagerError.AssetNotAvailableInModelCatalogCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.PolicyNotAvailableCodingKeys()
{
  return &type metadata for ModelManagerError.PolicyNotAvailableCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.DeviceNotEligibleCodingKeys()
{
  return &type metadata for ModelManagerError.DeviceNotEligibleCodingKeys;
}

unsigned char *_s20ModelManagerServices17ModelManagerErrorO24InferenceErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256C0B698);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerError.PolicyNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.PolicyNotFoundCodingKeys;
}

unsigned char *_s20ModelManagerServices17ModelManagerErrorO40InvalidRequestRequiredAssetIDsCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C0B79CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerError.InferenceProviderCrashedCodingKeys()
{
  return &type metadata for ModelManagerError.InferenceProviderCrashedCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnableToForceAssetVersionSwitchCodingKeys()
{
  return &type metadata for ModelManagerError.UnableToForceAssetVersionSwitchCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.CancelledByPreemptionCodingKeys()
{
  return &type metadata for ModelManagerError.CancelledByPreemptionCodingKeys;
}

unint64_t sub_256C0B7F8()
{
  unint64_t result = qword_269FC3458;
  if (!qword_269FC3458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3458);
  }
  return result;
}

unint64_t sub_256C0B848()
{
  unint64_t result = qword_269FC3460;
  if (!qword_269FC3460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3460);
  }
  return result;
}

unint64_t sub_256C0B898()
{
  unint64_t result = qword_269FC3468;
  if (!qword_269FC3468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3468);
  }
  return result;
}

unint64_t sub_256C0B8E8()
{
  unint64_t result = qword_269FC3470;
  if (!qword_269FC3470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3470);
  }
  return result;
}

unint64_t sub_256C0B938()
{
  unint64_t result = qword_269FC3478;
  if (!qword_269FC3478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3478);
  }
  return result;
}

unint64_t sub_256C0B988()
{
  unint64_t result = qword_269FC3480;
  if (!qword_269FC3480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3480);
  }
  return result;
}

unint64_t sub_256C0B9D8()
{
  unint64_t result = qword_269FC3488;
  if (!qword_269FC3488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3488);
  }
  return result;
}

unint64_t sub_256C0BA28()
{
  unint64_t result = qword_269FC3490;
  if (!qword_269FC3490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3490);
  }
  return result;
}

unint64_t sub_256C0BA78()
{
  unint64_t result = qword_269FC3498;
  if (!qword_269FC3498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3498);
  }
  return result;
}

unint64_t sub_256C0BAC8()
{
  unint64_t result = qword_269FC34A0;
  if (!qword_269FC34A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34A0);
  }
  return result;
}

unint64_t sub_256C0BB18()
{
  unint64_t result = qword_269FC34A8;
  if (!qword_269FC34A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34A8);
  }
  return result;
}

unint64_t sub_256C0BB68()
{
  unint64_t result = qword_269FC34B0;
  if (!qword_269FC34B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34B0);
  }
  return result;
}

unint64_t sub_256C0BBB8()
{
  unint64_t result = qword_269FC34B8;
  if (!qword_269FC34B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34B8);
  }
  return result;
}

unint64_t sub_256C0BC08()
{
  unint64_t result = qword_269FC34C0;
  if (!qword_269FC34C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34C0);
  }
  return result;
}

unint64_t sub_256C0BC58()
{
  unint64_t result = qword_269FC34C8;
  if (!qword_269FC34C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34C8);
  }
  return result;
}

unint64_t sub_256C0BCA8()
{
  unint64_t result = qword_269FC34D0;
  if (!qword_269FC34D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34D0);
  }
  return result;
}

unint64_t sub_256C0BCF8()
{
  unint64_t result = qword_269FC34D8;
  if (!qword_269FC34D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34D8);
  }
  return result;
}

unint64_t sub_256C0BD48()
{
  unint64_t result = qword_269FC34E0;
  if (!qword_269FC34E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34E0);
  }
  return result;
}

unint64_t sub_256C0BD98()
{
  unint64_t result = qword_269FC34E8;
  if (!qword_269FC34E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34E8);
  }
  return result;
}

unint64_t sub_256C0BDE8()
{
  unint64_t result = qword_269FC34F0;
  if (!qword_269FC34F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34F0);
  }
  return result;
}

unint64_t sub_256C0BE38()
{
  unint64_t result = qword_269FC34F8;
  if (!qword_269FC34F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC34F8);
  }
  return result;
}

unint64_t sub_256C0BE88()
{
  unint64_t result = qword_269FC3500;
  if (!qword_269FC3500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3500);
  }
  return result;
}

unint64_t sub_256C0BED8()
{
  unint64_t result = qword_26B2C7C18;
  if (!qword_26B2C7C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C18);
  }
  return result;
}

unint64_t sub_256C0BF28()
{
  unint64_t result = qword_26B2C7C10;
  if (!qword_26B2C7C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C10);
  }
  return result;
}

unint64_t sub_256C0BF78()
{
  unint64_t result = qword_26B2C7C28;
  if (!qword_26B2C7C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C28);
  }
  return result;
}

unint64_t sub_256C0BFC8()
{
  unint64_t result = qword_26B2C7C20;
  if (!qword_26B2C7C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C20);
  }
  return result;
}

unint64_t sub_256C0C018()
{
  unint64_t result = qword_26B2C7CD0;
  if (!qword_26B2C7CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CD0);
  }
  return result;
}

unint64_t sub_256C0C068()
{
  unint64_t result = qword_26B2C7CC8;
  if (!qword_26B2C7CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CC8);
  }
  return result;
}

unint64_t sub_256C0C0B8()
{
  unint64_t result = qword_26B2C7DC0;
  if (!qword_26B2C7DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7DC0);
  }
  return result;
}

unint64_t sub_256C0C108()
{
  unint64_t result = qword_26B2C7DB8;
  if (!qword_26B2C7DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7DB8);
  }
  return result;
}

unint64_t sub_256C0C158()
{
  unint64_t result = qword_26B2C7C08;
  if (!qword_26B2C7C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C08);
  }
  return result;
}

unint64_t sub_256C0C1A8()
{
  unint64_t result = qword_26B2C7C00;
  if (!qword_26B2C7C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C00);
  }
  return result;
}

unint64_t sub_256C0C1F8()
{
  unint64_t result = qword_26B2C7D60;
  if (!qword_26B2C7D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D60);
  }
  return result;
}

unint64_t sub_256C0C248()
{
  unint64_t result = qword_26B2C7D58;
  if (!qword_26B2C7D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D58);
  }
  return result;
}

unint64_t sub_256C0C298()
{
  unint64_t result = qword_26B2C7CC0;
  if (!qword_26B2C7CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CC0);
  }
  return result;
}

unint64_t sub_256C0C2E8()
{
  unint64_t result = qword_26B2C7CB8;
  if (!qword_26B2C7CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CB8);
  }
  return result;
}

unint64_t sub_256C0C338()
{
  unint64_t result = qword_26B2C7BE8;
  if (!qword_26B2C7BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BE8);
  }
  return result;
}

unint64_t sub_256C0C388()
{
  unint64_t result = qword_26B2C7BE0;
  if (!qword_26B2C7BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BE0);
  }
  return result;
}

unint64_t sub_256C0C3D8()
{
  unint64_t result = qword_26B2C7BF8;
  if (!qword_26B2C7BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BF8);
  }
  return result;
}

unint64_t sub_256C0C428()
{
  unint64_t result = qword_26B2C7BF0;
  if (!qword_26B2C7BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BF0);
  }
  return result;
}

unint64_t sub_256C0C478()
{
  unint64_t result = qword_26B2C7D80;
  if (!qword_26B2C7D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D80);
  }
  return result;
}

unint64_t sub_256C0C4C8()
{
  unint64_t result = qword_26B2C7D78;
  if (!qword_26B2C7D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D78);
  }
  return result;
}

unint64_t sub_256C0C518()
{
  unint64_t result = qword_26B2C7CA0;
  if (!qword_26B2C7CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CA0);
  }
  return result;
}

unint64_t sub_256C0C568()
{
  unint64_t result = qword_26B2C7C98;
  if (!qword_26B2C7C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C98);
  }
  return result;
}

unint64_t sub_256C0C5B8()
{
  unint64_t result = qword_26B2C7D50;
  if (!qword_26B2C7D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D50);
  }
  return result;
}

unint64_t sub_256C0C608()
{
  unint64_t result = qword_26B2C7D48;
  if (!qword_26B2C7D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D48);
  }
  return result;
}

unint64_t sub_256C0C658()
{
  unint64_t result = qword_26B2C7D20;
  if (!qword_26B2C7D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D20);
  }
  return result;
}

unint64_t sub_256C0C6A8()
{
  unint64_t result = qword_26B2C7D18;
  if (!qword_26B2C7D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D18);
  }
  return result;
}

unint64_t sub_256C0C6F8()
{
  unint64_t result = qword_26B2C7B70;
  if (!qword_26B2C7B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7B70);
  }
  return result;
}

unint64_t sub_256C0C748()
{
  unint64_t result = qword_26B2C7B80;
  if (!qword_26B2C7B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7B80);
  }
  return result;
}

unint64_t sub_256C0C798()
{
  unint64_t result = qword_26B2C7D70;
  if (!qword_26B2C7D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D70);
  }
  return result;
}

unint64_t sub_256C0C7E8()
{
  unint64_t result = qword_26B2C7D68;
  if (!qword_26B2C7D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D68);
  }
  return result;
}

unint64_t sub_256C0C838()
{
  unint64_t result = qword_26B2C7C80;
  if (!qword_26B2C7C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C80);
  }
  return result;
}

unint64_t sub_256C0C888()
{
  unint64_t result = qword_26B2C7C78;
  if (!qword_26B2C7C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C78);
  }
  return result;
}

unint64_t sub_256C0C8D8()
{
  unint64_t result = qword_26B2C7D10;
  if (!qword_26B2C7D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D10);
  }
  return result;
}

unint64_t sub_256C0C928()
{
  unint64_t result = qword_26B2C7D08;
  if (!qword_26B2C7D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D08);
  }
  return result;
}

unint64_t sub_256C0C978()
{
  unint64_t result = qword_26B2C7CE0;
  if (!qword_26B2C7CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CE0);
  }
  return result;
}

unint64_t sub_256C0C9C8()
{
  unint64_t result = qword_26B2C7CD8;
  if (!qword_26B2C7CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CD8);
  }
  return result;
}

unint64_t sub_256C0CA18()
{
  unint64_t result = qword_26B2C7D00;
  if (!qword_26B2C7D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D00);
  }
  return result;
}

unint64_t sub_256C0CA68()
{
  unint64_t result = qword_26B2C7CF8;
  if (!qword_26B2C7CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CF8);
  }
  return result;
}

unint64_t sub_256C0CAB8()
{
  unint64_t result = qword_26B2C7C60;
  if (!qword_26B2C7C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C60);
  }
  return result;
}

unint64_t sub_256C0CB08()
{
  unint64_t result = qword_26B2C7C58;
  if (!qword_26B2C7C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C58);
  }
  return result;
}

unint64_t sub_256C0CB58()
{
  unint64_t result = qword_26B2C7BB8;
  if (!qword_26B2C7BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BB8);
  }
  return result;
}

unint64_t sub_256C0CBA8()
{
  unint64_t result = qword_26B2C7BB0;
  if (!qword_26B2C7BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BB0);
  }
  return result;
}

unint64_t sub_256C0CBF8()
{
  unint64_t result = qword_26B2C7DD0;
  if (!qword_26B2C7DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7DD0);
  }
  return result;
}

unint64_t sub_256C0CC48()
{
  unint64_t result = qword_26B2C7DC8;
  if (!qword_26B2C7DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7DC8);
  }
  return result;
}

unint64_t sub_256C0CC98()
{
  unint64_t result = qword_26B2C7D90;
  if (!qword_26B2C7D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D90);
  }
  return result;
}

unint64_t sub_256C0CCE8()
{
  unint64_t result = qword_26B2C7D88;
  if (!qword_26B2C7D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D88);
  }
  return result;
}

unint64_t sub_256C0CD38()
{
  unint64_t result = qword_26B2C7C90;
  if (!qword_26B2C7C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C90);
  }
  return result;
}

unint64_t sub_256C0CD88()
{
  unint64_t result = qword_26B2C7C88;
  if (!qword_26B2C7C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C88);
  }
  return result;
}

unint64_t sub_256C0CDD8()
{
  unint64_t result = qword_26B2C7BC8;
  if (!qword_26B2C7BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BC8);
  }
  return result;
}

unint64_t sub_256C0CE28()
{
  unint64_t result = qword_26B2C7BC0;
  if (!qword_26B2C7BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BC0);
  }
  return result;
}

unint64_t sub_256C0CE78()
{
  unint64_t result = qword_26B2C7DA0;
  if (!qword_26B2C7DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7DA0);
  }
  return result;
}

unint64_t sub_256C0CEC8()
{
  unint64_t result = qword_26B2C7D98;
  if (!qword_26B2C7D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D98);
  }
  return result;
}

unint64_t sub_256C0CF18()
{
  unint64_t result = qword_26B2C7C38;
  if (!qword_26B2C7C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C38);
  }
  return result;
}

unint64_t sub_256C0CF68()
{
  unint64_t result = qword_26B2C7C30;
  if (!qword_26B2C7C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C30);
  }
  return result;
}

unint64_t sub_256C0CFB8()
{
  unint64_t result = qword_26B2C7D30;
  if (!qword_26B2C7D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D30);
  }
  return result;
}

unint64_t sub_256C0D008()
{
  unint64_t result = qword_26B2C7D28;
  if (!qword_26B2C7D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D28);
  }
  return result;
}

unint64_t sub_256C0D058()
{
  unint64_t result = qword_26B2C7BD8;
  if (!qword_26B2C7BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BD8);
  }
  return result;
}

unint64_t sub_256C0D0A8()
{
  unint64_t result = qword_26B2C7BD0;
  if (!qword_26B2C7BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7BD0);
  }
  return result;
}

unint64_t sub_256C0D0F8()
{
  unint64_t result = qword_26B2C7CF0;
  if (!qword_26B2C7CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CF0);
  }
  return result;
}

unint64_t sub_256C0D148()
{
  unint64_t result = qword_26B2C7CE8;
  if (!qword_26B2C7CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CE8);
  }
  return result;
}

unint64_t sub_256C0D198()
{
  unint64_t result = qword_26B2C7CB0;
  if (!qword_26B2C7CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CB0);
  }
  return result;
}

unint64_t sub_256C0D1E8()
{
  unint64_t result = qword_26B2C7CA8;
  if (!qword_26B2C7CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7CA8);
  }
  return result;
}

unint64_t sub_256C0D238()
{
  unint64_t result = qword_26B2C7C70;
  if (!qword_26B2C7C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C70);
  }
  return result;
}

unint64_t sub_256C0D288()
{
  unint64_t result = qword_26B2C7C68;
  if (!qword_26B2C7C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C68);
  }
  return result;
}

unint64_t sub_256C0D2D8()
{
  unint64_t result = qword_26B2C7D40;
  if (!qword_26B2C7D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D40);
  }
  return result;
}

unint64_t sub_256C0D328()
{
  unint64_t result = qword_26B2C7D38;
  if (!qword_26B2C7D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7D38);
  }
  return result;
}

unint64_t sub_256C0D378()
{
  unint64_t result = qword_26B2C7DB0;
  if (!qword_26B2C7DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7DB0);
  }
  return result;
}

unint64_t sub_256C0D3C8()
{
  unint64_t result = qword_26B2C7DA8;
  if (!qword_26B2C7DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7DA8);
  }
  return result;
}

unint64_t sub_256C0D418()
{
  unint64_t result = qword_26B2C7978;
  if (!qword_26B2C7978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7978);
  }
  return result;
}

unint64_t sub_256C0D468()
{
  unint64_t result = qword_26B2C7970;
  if (!qword_26B2C7970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7970);
  }
  return result;
}

unint64_t sub_256C0D4B8()
{
  unint64_t result = qword_26B2C7C50;
  if (!qword_26B2C7C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C50);
  }
  return result;
}

unint64_t sub_256C0D508()
{
  unint64_t result = qword_26B2C7C48;
  if (!qword_26B2C7C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7C48);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_22_4()
{
  return sub_256CEE4D8();
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  return v0;
}

void *OUTLINED_FUNCTION_60_1@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(void **)(v1 - 256);
  *int v2 = a1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_61_1()
{
  return sub_256CEDFB8();
}

uint64_t StateDump.assertions.getter()
{
  return sub_256CEDEC8();
}

__n128 StateDump.currentPolicy.getter@<Q0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1[1].n128_u64[0];
  unsigned __int8 v3 = v1[1].n128_u8[8];
  *(unsigned char *)a1 = v1->n128_u8[8];
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  __n128 result = v1[2];
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t StateDump.sessions.getter()
{
  return sub_256CEDEC8();
}

uint64_t StateDump.requests.getter()
{
  return sub_256CEDEC8();
}

uint64_t StateDump.runningRequests.getter()
{
  return sub_256CEDEC8();
}

uint64_t StateDump.executionGroups.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  sub_256CEDEC8();
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

uint64_t StateDump.inferenceProviders.getter()
{
  return sub_256CEDEC8();
}

uint64_t StateDump.disabledUseCases.getter()
{
  return sub_256CEDEC8();
}

uint64_t StateDump.trials.getter()
{
  return sub_256CEDEC8();
}

uint64_t StateDump.budget.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t StateDump.AssetState.descriptor.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

uint64_t StateDump.AssetState.inferenceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  char v5 = *(unsigned char *)(v1 + 96);
  *(void *)a1 = *(void *)(v1 + 64);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

void StateDump.AssetState.loadState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 97);
}

uint64_t StateDump.AssetState.foregroundSessions.getter()
{
  type metadata accessor for StateDump.AssetState(0);
  return sub_256CEDEC8();
}

uint64_t type metadata accessor for StateDump.AssetState(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C4AA8);
}

uint64_t StateDump.AssetState.init(descriptor:path:cost:isCacheable:dynamicModeAllowed:useEnergyEfficientMode:inferenceProvider:loadState:timeLastRequestEnded:timeLastForegroundSessionEnded:requiredByOtherAssets:foregroundSessions:requests:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = *a4;
  uint64_t v18 = *a8;
  uint64_t v19 = a8[1];
  char v20 = *((unsigned char *)a8 + 32);
  char v21 = *a10;
  *(void *)a9 = *(void *)a1;
  *(void *)(a9 + 8) = v16;
  *(_OWORD *)(a9 + 16) = *(_OWORD *)(a1 + 16);
  *(void *)(a9 + 32) = a2;
  *(void *)(a9 + 40) = a3;
  *(void *)(a9 + 48) = v17;
  *(unsigned char *)(a9 + 56) = a5;
  *(unsigned char *)(a9 + 57) = a6;
  *(unsigned char *)(a9 + 58) = a7;
  *(void *)(a9 + 64) = v18;
  *(void *)(a9 + 72) = v19;
  *(_OWORD *)(a9 + 80) = *((_OWORD *)a8 + 1);
  *(unsigned char *)(a9 + 96) = v20;
  *(unsigned char *)(a9 + 97) = v21;
  uint64_t v22 = (int *)type metadata accessor for StateDump.AssetState(0);
  uint64_t v23 = a9 + v22[12];
  uint64_t v24 = sub_256CEDAC8();
  OUTLINED_FUNCTION_10();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32);
  v26(v23, a11, v24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v26)(a9 + v22[13], a12, v24);
  *(void *)(a9 + v22[14]) = a13;
  *(void *)(a9 + v22[15]) = a14;
  *(void *)(a9 + v22[16]) = a15;
  return result;
}

uint64_t StateDump.AssetState.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  sub_256CEDEC8();
  OUTLINED_FUNCTION_28();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7C8();
  if (v3)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7E8();
  sub_256CEE7C8();
  sub_256CEE7C8();
  sub_256CEE7C8();
  uint64_t v4 = *(void *)(v1 + 88);
  sub_256CEDEC8();
  swift_bridgeObjectRetain_n();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7B8();
  if (v4)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  sub_256CEE7C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for StateDump.AssetState(0);
  sub_256CEDAC8();
  sub_256C15940((uint64_t)&unk_269FC3508);
  OUTLINED_FUNCTION_64();
  uint64_t v6 = v1 + *(int *)(v5 + 52);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_39_4();
  sub_256BF911C(a1, v6);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39_4();
  OUTLINED_FUNCTION_28();
  sub_256BF98A8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39_4();
  sub_256BF9108();
  return swift_bridgeObjectRelease();
}

void static StateDump.AssetState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v8 && (sub_256CEE6C8() & 1) == 0) {
    return;
  }
  if (v5)
  {
    if (!v6) {
      return;
    }
    BOOL v9 = v4 == v7 && v5 == v6;
    if (!v9 && (sub_256CEE6C8() & 1) == 0) {
      return;
    }
  }
  else if (v6)
  {
    return;
  }
  BOOL v10 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (v10 || (sub_256CEE6C8())
    && *(void *)(a1 + 48) == *(void *)(a2 + 48)
    && *(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56)
    && *(unsigned __int8 *)(a1 + 57) == *(unsigned __int8 *)(a2 + 57)
    && *(unsigned __int8 *)(a1 + 58) == *(unsigned __int8 *)(a2 + 58))
  {
    uint64_t v11 = *(void *)(a1 + 72);
    char v12 = *(unsigned char *)(a1 + 96);
    v16[0] = *(void *)(a1 + 64);
    v16[1] = v11;
    long long v17 = *(_OWORD *)(a1 + 80);
    char v18 = v12;
    if (static InferenceProviderDescriptor.== infix(_:_:)((uint64_t)v16) & 1) != 0 && (sub_256BF0DB4())
    {
      uint64_t v13 = type metadata accessor for StateDump.AssetState(0);
      if (sub_256CEDAA8() & 1) != 0 && (sub_256CEDAA8())
      {
        sub_256BF1CB0(*(void *)(a1 + *(int *)(v13 + 56)), *(void *)(a2 + *(int *)(v13 + 56)));
        if (v14)
        {
          sub_256BF1F44();
          if (v15)
          {
            sub_256BF1F30();
          }
        }
      }
    }
  }
}

uint64_t sub_256C0DD70(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1752457584 && a2 == 0xE400000000000000;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1953722211 && a2 == 0xE400000000000000;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6165686361437369 && a2 == 0xEB00000000656C62;
        if (v8 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x8000000256D00B70 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x8000000256D00B90 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00BB0 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065;
          if (v9 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D00BD0 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000256D00BF0 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000256D00C10 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x8000000256D00C30 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0x7374736575716572 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else
          {
            char v11 = sub_256CEE6C8();
            swift_bridgeObjectRelease();
            if (v11) {
              return 12;
            }
            else {
              return 13;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_256C0E228(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 1752457584;
      break;
    case 2:
      unint64_t result = 1953722211;
      break;
    case 3:
      unint64_t result = 0x6165686361437369;
      break;
    case 4:
    case 11:
      return result;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x7461745364616F6CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 12:
      unint64_t result = 0x7374736575716572;
      break;
    default:
      unint64_t result = 0x7470697263736564;
      break;
  }
  return result;
}

unint64_t sub_256C0E390()
{
  return sub_256C0E228(*v0);
}

uint64_t sub_256C0E398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C0DD70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C0E3C0(uint64_t a1)
{
  unint64_t v2 = sub_256C157C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C0E3FC(uint64_t a1)
{
  unint64_t v2 = sub_256C157C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void StateDump.AssetState.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3510);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C157C4();
  OUTLINED_FUNCTION_11_3();
  sub_256C15810();
  OUTLINED_FUNCTION_9();
  if (!v0)
  {
    OUTLINED_FUNCTION_56_3();
    sub_256CEE568();
    OUTLINED_FUNCTION_28_5();
    sub_256C1585C();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_22_5(3);
    OUTLINED_FUNCTION_22_5(4);
    OUTLINED_FUNCTION_22_5(5);
    sub_256C158A8();
    OUTLINED_FUNCTION_9();
    sub_256C158F4();
    OUTLINED_FUNCTION_9();
    type metadata accessor for StateDump.AssetState(0);
    sub_256CEDAC8();
    sub_256C15940((uint64_t)&unk_26B2C5440);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_9();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256C15BE4((uint64_t)&qword_26B2C4B88);
    OUTLINED_FUNCTION_9();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3520);
    sub_256C15984();
    OUTLINED_FUNCTION_9();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5598);
    sub_256C15A1C();
    OUTLINED_FUNCTION_9();
  }
  OUTLINED_FUNCTION_8_5();
  v2();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_33();
}

uint64_t StateDump.AssetState.hashValue.getter()
{
  return sub_256C12008((void (*)(unsigned char *))StateDump.AssetState.hash(into:));
}

void StateDump.AssetState.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v3 = v2;
  uint64_t v5 = v4;
  uint64_t v38 = sub_256CEDAC8();
  OUTLINED_FUNCTION_0_0();
  uint64_t v35 = v6;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  BOOL v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v28 - v11;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3530);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_32();
  uint64_t v37 = (int *)type metadata accessor for StateDump.AssetState(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_3_0();
  uint64_t v36 = v15;
  uint64_t v16 = v3[3];
  uint64_t v34 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v16);
  sub_256C157C4();
  uint64_t v32 = v0;
  sub_256CEE848();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  }
  else
  {
    uint64_t v30 = v10;
    os_log_type_t v31 = v12;
    uint64_t v29 = v5;
    sub_256C15AB4();
    sub_256CEE4D8();
    uint64_t v17 = v40;
    char v18 = v36;
    void *v36 = v39;
    v18[1] = v17;
    *((_OWORD *)v18 + 1) = v41;
    OUTLINED_FUNCTION_56_3();
    v18[4] = sub_256CEE498();
    v18[5] = v19;
    OUTLINED_FUNCTION_28_5();
    sub_256C15B00();
    OUTLINED_FUNCTION_23_2();
    v18[6] = v39;
    *((unsigned char *)v18 + 56) = OUTLINED_FUNCTION_29_2(3) & 1;
    *((unsigned char *)v18 + 57) = OUTLINED_FUNCTION_29_2(4) & 1;
    *((unsigned char *)v18 + 58) = OUTLINED_FUNCTION_29_2(5) & 1;
    sub_256C15B4C();
    OUTLINED_FUNCTION_23_2();
    uint64_t v20 = v40;
    char v21 = v42;
    v18[8] = v39;
    v18[9] = v20;
    *((_OWORD *)v18 + 5) = v41;
    *((unsigned char *)v18 + 96) = v21;
    sub_256C15B98();
    OUTLINED_FUNCTION_23_2();
    *((unsigned char *)v18 + 97) = v39;
    LOBYTE(v39) = 8;
    sub_256C15940((uint64_t)&unk_269FC3538);
    uint64_t v22 = v31;
    sub_256CEE4D8();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v23((char *)v18 + v37[12], v22, v38);
    LOBYTE(v39) = 9;
    sub_256CEE4D8();
    v23((char *)v36 + v37[13], v30, v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256C15BE4((uint64_t)&qword_269FC2FC0);
    OUTLINED_FUNCTION_15_5();
    *(void *)((char *)v36 + v37[14]) = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3520);
    sub_256C15C44();
    OUTLINED_FUNCTION_15_5();
    *(void *)((char *)v36 + v37[15]) = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5598);
    sub_256C15CDC();
    OUTLINED_FUNCTION_15_5();
    OUTLINED_FUNCTION_8_5();
    v24();
    uint64_t v25 = (uint64_t)v36;
    *(void *)((char *)v36 + v37[16]) = v39;
    sub_256C15E78(v25, v29, (void (*)(void))type metadata accessor for StateDump.AssetState);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    uint64_t v26 = OUTLINED_FUNCTION_28();
    sub_256C15ECC(v26, v27);
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256C0EECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256C12444(a1, a2, a3, (void (*)(unsigned char *))StateDump.AssetState.hash(into:));
}

void sub_256C0EEE4()
{
}

void sub_256C0EEFC()
{
}

uint64_t StateDump.SessionState.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256BFD41C(v1, a1, qword_26B2C5B70);
}

int *StateDump.SessionState.init(identifier:supportedAssets:useCaseIdentifier:onBehalfOfPID:createdByPID:requests:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v16 = *a8;
  sub_256C15F44(a1, a9, qword_26B2C5B70);
  uint64_t result = (int *)type metadata accessor for StateDump.SessionState(0);
  *(void *)(a9 + result[5]) = a2;
  char v18 = (void *)(a9 + result[6]);
  *char v18 = a3;
  v18[1] = a4;
  *(_DWORD *)(a9 + result[7]) = a5;
  *(_DWORD *)(a9 + result[8]) = a6;
  *(void *)(a9 + result[9]) = a7;
  *(unsigned char *)(a9 + result[10]) = v16;
  return result;
}

uint64_t StateDump.SessionState.hash(into:)()
{
  OUTLINED_FUNCTION_48_2();
  sub_256C15940((uint64_t)&qword_26B2C8840);
  OUTLINED_FUNCTION_65_0();
  sub_256CEDF18();
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for StateDump.SessionState(0) + 20));
  sub_256CEDEC8();
  sub_256BF911C(v0, v2);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7D8();
  sub_256CEE7D8();
  OUTLINED_FUNCTION_39_4();
  sub_256BF9108();
  swift_bridgeObjectRelease();
  return sub_256BF0FB4();
}

uint64_t static StateDump.SessionState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for StateDump.SessionState(0);
  OUTLINED_FUNCTION_52_1();
  sub_256BF1CB0(*(void *)(a1 + v5), *(void *)(a2 + v5));
  if ((v6 & 1) == 0) {
    return 0;
  }
  uint64_t v7 = v2[6];
  uint64_t v8 = *(void *)(a1 + v7);
  uint64_t v9 = *(void *)(a1 + v7 + 8);
  BOOL v10 = (void *)(a2 + v7);
  BOOL v11 = v8 == *v10 && v9 == v10[1];
  if (!v11 && (sub_256CEE6C8() & 1) == 0) {
    return 0;
  }
  if (*(_DWORD *)(a1 + v2[7]) != *(_DWORD *)(a2 + v2[7])) {
    return 0;
  }
  if (*(_DWORD *)(a1 + v2[8]) != *(_DWORD *)(a2 + v2[8])) {
    return 0;
  }
  sub_256BF1F30();
  if ((v12 & 1) == 0) {
    return 0;
  }
  uint64_t v13 = v2[10];
  char v14 = *(unsigned char *)(a2 + v13);
  unsigned __int8 v15 = *(unsigned char *)(a1 + v13);
  return sub_256BF0BE8(v15, v14);
}

uint64_t sub_256C0F1F0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6574726F70707573 && a2 == 0xEF73746573734164;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D001B0 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x666C616865426E6FLL && a2 == 0xED0000444950664FLL;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x4264657461657263 && a2 == 0xEC00000044495079;
        if (v8 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x7374736575716572 && a2 == 0xE800000000000000;
          if (v9 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v11 = sub_256CEE6C8();
            swift_bridgeObjectRelease();
            if (v11) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_256C0F4D4()
{
  return 7;
}

unint64_t sub_256C0F4DC(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574726F70707573;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x666C616865426E6FLL;
      break;
    case 4:
      unint64_t result = 0x4264657461657263;
      break;
    case 5:
      unint64_t result = 0x7374736575716572;
      break;
    case 6:
      unint64_t result = 0x6574617473;
      break;
    default:
      unint64_t result = 0x696669746E656469;
      break;
  }
  return result;
}

unint64_t sub_256C0F5E8()
{
  return sub_256C0F4DC(*v0);
}

uint64_t sub_256C0F5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C0F1F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C0F618@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256C0F4D4();
  *a1 = result;
  return result;
}

uint64_t sub_256C0F640(uint64_t a1)
{
  unint64_t v2 = sub_256C15D94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C0F67C(uint64_t a1)
{
  unint64_t v2 = sub_256C15D94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StateDump.SessionState.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3550);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C15D94();
  OUTLINED_FUNCTION_11_3();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  sub_256C16968((uint64_t)&unk_26B2C7980);
  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_9();
  if (!v0)
  {
    type metadata accessor for StateDump.SessionState(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256C15BE4((uint64_t)&qword_26B2C4B88);
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_53_3(2);
    sub_256CEE568();
    OUTLINED_FUNCTION_35_3(3);
    OUTLINED_FUNCTION_35_3(4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5598);
    sub_256C15A1C();
    OUTLINED_FUNCTION_9();
    sub_256C15DE0();
    OUTLINED_FUNCTION_9();
  }
  OUTLINED_FUNCTION_45();
  return v2();
}

uint64_t StateDump.SessionState.hashValue.getter()
{
  return sub_256C12008((void (*)(unsigned char *))StateDump.SessionState.hash(into:));
}

void StateDump.SessionState.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v13 = v12;
  uint64_t v25 = v14;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_44_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3568);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_28_2();
  uint64_t v26 = (int *)type metadata accessor for StateDump.SessionState(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_3_0();
  uint64_t v19 = v18;
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_256C15D94();
  sub_256CEE848();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  else
  {
    LOBYTE(a10) = 0;
    sub_256C16968((uint64_t)&unk_26B2C7768);
    OUTLINED_FUNCTION_60_2();
    sub_256CEE4D8();
    sub_256C15F44(v11, v19, qword_26B2C5B70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    OUTLINED_FUNCTION_57_2();
    sub_256C15BE4((uint64_t)&qword_269FC2FC0);
    OUTLINED_FUNCTION_26_3();
    *(void *)(v19 + v26[5]) = a10;
    LOBYTE(a10) = 2;
    uint64_t v20 = sub_256CEE498();
    char v21 = (uint64_t *)(v19 + v26[6]);
    uint64_t *v21 = v20;
    v21[1] = v22;
    *(_DWORD *)(v19 + v26[7]) = OUTLINED_FUNCTION_34_2(3);
    *(_DWORD *)(v19 + v26[8]) = OUTLINED_FUNCTION_34_2(4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5598);
    sub_256C15CDC();
    OUTLINED_FUNCTION_26_3();
    *(void *)(v19 + v26[9]) = a10;
    sub_256C15E2C();
    sub_256CEE4D8();
    uint64_t v23 = OUTLINED_FUNCTION_10_2();
    v24(v23);
    *(unsigned char *)(v19 + v26[10]) = 2;
    sub_256C15E78(v19, v25, (void (*)(void))type metadata accessor for StateDump.SessionState);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    sub_256C15ECC(v19, (void (*)(void))type metadata accessor for StateDump.SessionState);
  }
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256C0FD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256C12444(a1, a2, a3, (void (*)(unsigned char *))StateDump.SessionState.hash(into:));
}

void sub_256C0FD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  StateDump.SessionState.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_256C0FD94()
{
  return StateDump.SessionState.encode(to:)();
}

uint64_t StateDump.RequestState.asset.getter()
{
  type metadata accessor for StateDump.RequestState(0);
  return sub_256CEDEC8();
}

__n128 StateDump.RequestState.init(identifier:session:asset:inferenceProvider:priority:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  __n128 v16 = *a4;
  unint64_t v9 = a4[1].n128_u64[0];
  unint64_t v10 = a4[1].n128_u64[1];
  unsigned __int8 v11 = a4[2].n128_u8[0];
  char v12 = *a5;
  sub_256C15F44(a1, a6, &qword_26B2C7798);
  uint64_t v13 = (int *)type metadata accessor for StateDump.RequestState(0);
  sub_256C15F44(a2, a6 + v13[5], qword_26B2C5B70);
  *(void *)(a6 + v13[6]) = a3;
  uint64_t v14 = (__n128 *)(a6 + v13[7]);
  __n128 result = v16;
  *uint64_t v14 = v16;
  v14[1].n128_u64[0] = v9;
  v14[1].n128_u64[1] = v10;
  v14[2].n128_u8[0] = v11;
  *(unsigned char *)(a6 + v13[8]) = v12;
  return result;
}

uint64_t StateDump.RequestState.hash(into:)()
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_48_2();
  sub_256C15940((uint64_t)&qword_26B2C8840);
  OUTLINED_FUNCTION_64();
  uint64_t v3 = type metadata accessor for StateDump.RequestState(0);
  uint64_t v4 = v1 + *(int *)(v3 + 20);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_39_4();
  sub_256BF911C(v0, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + *(int *)(v3 + 28) + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRetain_n();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7B8();
  if (v5)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  sub_256CEE7C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_256BF107C();
}

uint64_t static StateDump.RequestState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for StateDump.RequestState(0);
  OUTLINED_FUNCTION_52_1();
  if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  sub_256BF1CB0(*(void *)(a1 + *(int *)(v2 + 24)), *(void *)(a2 + *(int *)(v2 + 24)));
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1 + *(int *)(v2 + 28);
  uint64_t v7 = *(void *)(v6 + 8);
  char v8 = *(unsigned char *)(v6 + 32);
  v10[0] = *(void *)v6;
  v10[1] = v7;
  long long v11 = *(_OWORD *)(v6 + 16);
  char v12 = v8;
  if ((static InferenceProviderDescriptor.== infix(_:_:)((uint64_t)v10) & 1) == 0) {
    return 0;
  }
  return sub_256BF0D48();
}

uint64_t sub_256C100F4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7465737361 && a2 == 0xE500000000000000;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00BB0 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = sub_256CEE6C8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_256C102E8(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6973736573;
      break;
    case 2:
      unint64_t result = 0x7465737361;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0x797469726F697270;
      break;
    default:
      unint64_t result = 0x696669746E656469;
      break;
  }
  return result;
}

unint64_t sub_256C1039C()
{
  return sub_256C102E8(*v0);
}

uint64_t sub_256C103A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C100F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C103CC(uint64_t a1)
{
  unint64_t v2 = sub_256C15FA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C10408(uint64_t a1)
{
  unint64_t v2 = sub_256C15FA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void StateDump.RequestState.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_49_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3578);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C15FA0();
  OUTLINED_FUNCTION_11_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  sub_256C16968((uint64_t)&unk_26B2C54B8);
  OUTLINED_FUNCTION_59_3();
  OUTLINED_FUNCTION_19_0();
  if (!v0)
  {
    type metadata accessor for StateDump.RequestState(0);
    OUTLINED_FUNCTION_56_3();
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    sub_256C16968((uint64_t)&unk_26B2C7980);
    OUTLINED_FUNCTION_59_3();
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_28_5();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256C15BE4((uint64_t)&qword_26B2C4B88);
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_37_3();
    sub_256C158A8();
    OUTLINED_FUNCTION_19_0();
    sub_256BF937C();
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_8_5();
  v2();
  OUTLINED_FUNCTION_33();
}

uint64_t StateDump.RequestState.hashValue.getter()
{
  return sub_256C12008((void (*)(unsigned char *))StateDump.RequestState.hash(into:));
}

void StateDump.RequestState.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v4 = v3;
  uint64_t v15 = v5;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  uint64_t v16 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3588);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_37_0();
  long long v11 = (int *)type metadata accessor for StateDump.RequestState(v10);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_54();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_256C15FA0();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_256C16968((uint64_t)&unk_26B2C4EF8);
    OUTLINED_FUNCTION_59_3();
    sub_256CEE4D8();
    sub_256C15F44(v16, v2, &qword_26B2C7798);
    OUTLINED_FUNCTION_56_3();
    sub_256C16968((uint64_t)&unk_26B2C7768);
    OUTLINED_FUNCTION_59_3();
    sub_256CEE4D8();
    sub_256C15F44(v1, v2 + v11[5], qword_26B2C5B70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    OUTLINED_FUNCTION_28_5();
    sub_256C15BE4((uint64_t)&qword_269FC2FC0);
    sub_256CEE4D8();
    *(void *)(v2 + v11[6]) = v17;
    OUTLINED_FUNCTION_37_3();
    sub_256C15B4C();
    OUTLINED_FUNCTION_40_3();
    uint64_t v13 = v2 + v11[7];
    *(void *)uint64_t v13 = v17;
    *(void *)(v13 + 8) = v18;
    *(_OWORD *)(v13 + 16) = v19;
    *(unsigned char *)(v13 + 32) = v20;
    sub_256BF9478();
    OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_8_5();
    v14();
    *(unsigned char *)(v2 + v11[8]) = 0;
    sub_256C15E78(v2, v15, (void (*)(void))type metadata accessor for StateDump.RequestState);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    sub_256C15ECC(v2, (void (*)(void))type metadata accessor for StateDump.RequestState);
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256C10B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256C12444(a1, a2, a3, (void (*)(unsigned char *))StateDump.RequestState.hash(into:));
}

void sub_256C10B9C()
{
}

void sub_256C10BB4()
{
}

ModelManagerServices::StateDump::ExecutionGroupsState __swiftcall StateDump.ExecutionGroupsState.init(active:pendingForeground:pendingBackground:)(Swift::OpaquePointer active, Swift::OpaquePointer pendingForeground, Swift::OpaquePointer pendingBackground)
{
  v3->_rawValue = active._rawValue;
  v3[1]._rawValue = pendingForeground._rawValue;
  v3[2]._rawValue = pendingBackground._rawValue;
  result.pendingBackground = pendingBackground;
  result.pendingForeground = pendingForeground;
  result.uint64_t active = active;
  return result;
}

uint64_t StateDump.ExecutionGroupsState.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_256CEDEC8();
  sub_256C16040(a1, v3);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  uint64_t v4 = OUTLINED_FUNCTION_65_0();
  sub_256C16040(v4, v5);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  uint64_t v6 = OUTLINED_FUNCTION_28();
  sub_256C16040(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t static StateDump.ExecutionGroupsState.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_256C10CE0(*a1, *a2) & 1) == 0 || (sub_256C10CE0(v2, v3) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = OUTLINED_FUNCTION_28();
  return sub_256C10CE0(v4, v5);
}

uint64_t sub_256C10CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = type metadata accessor for StateDump.ExecutionGroupState(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2) {
      return 1;
    }
    uint64_t v38 = v5;
    uint64_t v39 = v18;
    uint64_t v19 = 0;
    unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v41 = a2 + v20;
    uint64_t v42 = a1 + v20;
    uint64_t v40 = *(void *)(v15 + 72);
    unsigned __int8 v44 = (int *)v11;
    uint64_t v45 = (char *)&v38 - v16;
    while (1)
    {
      uint64_t v43 = v19;
      uint64_t v21 = v40 * v19;
      sub_256C15E78(v42 + v40 * v19, (uint64_t)v17, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
      sub_256C15E78(v41 + v21, (uint64_t)v14, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
      uint64_t v22 = (uint64_t)v14;
      if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
        break;
      }
      sub_256BF1CB0(*(void *)&v45[v44[5]], *(void *)&v14[v44[5]]);
      if ((v23 & 1) == 0) {
        break;
      }
      uint64_t v24 = v44[6];
      uint64_t v25 = *(void *)&v45[v24];
      uint64_t v26 = *(void *)&v14[v24];
      uint64_t v27 = *(void *)(v25 + 16);
      if (v27 != *(void *)(v26 + 16)) {
        break;
      }
      if (v27 && v25 != v26)
      {
        unint64_t v28 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        uint64_t v29 = *(void *)(v38 + 72);
        do
        {
          sub_256BFD41C(v25 + v28, (uint64_t)v10, &qword_26B2C7798);
          sub_256BFD41C(v26 + v28, (uint64_t)v8, &qword_26B2C7798);
          char v30 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
          sub_256C15FEC((uint64_t)v8, &qword_26B2C7798);
          sub_256C15FEC((uint64_t)v10, &qword_26B2C7798);
          if ((v30 & 1) == 0) {
            goto LABEL_23;
          }
          v28 += v29;
        }
        while (--v27);
      }
      uint64_t v17 = v45;
      uint64_t v31 = v44[7];
      uint64_t v32 = *(void *)&v45[v31];
      uint64_t v33 = *(void *)&v45[v31 + 8];
      uint64_t v14 = (char *)v22;
      uint64_t v34 = (void *)(v22 + v31);
      if (v32 == *v34 && v33 == v34[1])
      {
        sub_256C15ECC(v22, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
        sub_256C15ECC((uint64_t)v17, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
      }
      else
      {
        char v36 = sub_256CEE6C8();
        sub_256C15ECC(v22, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
        sub_256C15ECC((uint64_t)v17, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
        if ((v36 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v19 = v43 + 1;
      uint64_t result = 1;
      if (v43 + 1 == v39) {
        return result;
      }
    }
LABEL_23:
    sub_256C15ECC(v22, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
    sub_256C15ECC((uint64_t)v45, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
  }
  return 0;
}

uint64_t sub_256C1109C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798) - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_256BFD41C(a1 + v12, (uint64_t)v10, &qword_26B2C7798);
        sub_256BFD41C(a2 + v12, (uint64_t)v7, &qword_26B2C7798);
        char v15 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
        sub_256C15FEC((uint64_t)v7, &qword_26B2C7798);
        sub_256C15FEC((uint64_t)v10, &qword_26B2C7798);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_256C11220(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x657669746361 && a2 == 0xE600000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00C50 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00C70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_256C1135C(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0x657669746361;
  }
}

uint64_t sub_256C113AC()
{
  return sub_256C1135C(*v0);
}

uint64_t sub_256C113B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C11220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C113DC(uint64_t a1)
{
  unint64_t v2 = sub_256C16230();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C11418(uint64_t a1)
{
  unint64_t v2 = sub_256C16230();
  return MEMORY[0x270FA00B8](a1, v2);
}

void StateDump.ExecutionGroupsState.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5648);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256C16230();
  OUTLINED_FUNCTION_11_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5578);
  sub_256C1627C();
  OUTLINED_FUNCTION_9();
  if (!v0)
  {
    OUTLINED_FUNCTION_57_2();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_9();
  }
  OUTLINED_FUNCTION_45();
  v4();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_33();
}

uint64_t StateDump.ExecutionGroupsState.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  OUTLINED_FUNCTION_42();
  sub_256CEDEC8();
  sub_256C16040((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  sub_256C16040((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  sub_256C16040((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_256CEE7F8();
}

void StateDump.ExecutionGroupsState.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v12 = v11;
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3590);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v15);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_256C16230();
  OUTLINED_FUNCTION_62_1();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5578);
    sub_256C16340();
    OUTLINED_FUNCTION_27_3();
    OUTLINED_FUNCTION_57_2();
    sub_256CEDEC8();
    OUTLINED_FUNCTION_27_3();
    sub_256CEDEC8();
    sub_256CEE4D8();
    OUTLINED_FUNCTION_8_5();
    v16();
    sub_256CEDEC8();
    sub_256CEDEC8();
    swift_bridgeObjectRelease();
    *uint64_t v14 = a10;
    v14[1] = a10;
    v14[2] = a10;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256C1187C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_256CEE798();
  sub_256CEDEC8();
  sub_256C16040((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  sub_256C16040((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  sub_256C16040((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_256CEE7F8();
}

void sub_256C11914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  StateDump.ExecutionGroupsState.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_256C1192C()
{
}

int *StateDump.ExecutionGroupState.init(id:assets:requests:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(a6, a1);
  uint64_t result = (int *)type metadata accessor for StateDump.ExecutionGroupState(0);
  *(void *)(a6 + result[5]) = a2;
  *(void *)(a6 + result[6]) = a3;
  uint64_t v14 = (void *)(a6 + result[7]);
  *uint64_t v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t StateDump.ExecutionGroupState.hash(into:)()
{
  OUTLINED_FUNCTION_48_2();
  sub_256C15940((uint64_t)&qword_26B2C8840);
  sub_256CEDF18();
  type metadata accessor for StateDump.ExecutionGroupState(0);
  OUTLINED_FUNCTION_52_1();
  sub_256CEDEC8();
  uint64_t v0 = OUTLINED_FUNCTION_65_0();
  sub_256BF911C(v0, v1);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  uint64_t v2 = OUTLINED_FUNCTION_65_0();
  sub_256C163E4(v2, v3);
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  OUTLINED_FUNCTION_28();
  sub_256CEDFA8();
  return swift_bridgeObjectRelease();
}

uint64_t static StateDump.ExecutionGroupState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for StateDump.ExecutionGroupState(0);
  OUTLINED_FUNCTION_52_1();
  sub_256BF1CB0(*(void *)(a1 + v5), *(void *)(a2 + v5));
  if ((v6 & 1) == 0
    || (sub_256C1109C(*(void *)(a1 + *(int *)(v2 + 24)), *(void *)(a2 + *(int *)(v2 + 24))) & 1) == 0)
  {
    return 0;
  }
  uint64_t v7 = *(int *)(v2 + 28);
  uint64_t v8 = *(void *)(a1 + v7);
  uint64_t v9 = *(void *)(a1 + v7 + 8);
  uint64_t v10 = (void *)(a2 + v7);
  if (v8 == *v10 && v9 == v10[1]) {
    return 1;
  }
  return sub_256CEE6C8();
}

uint64_t sub_256C11B84(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x737465737361 && a2 == 0xE600000000000000;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7374736575716572 && a2 == 0xE800000000000000;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_256CEE6C8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_256C11CF4()
{
  return 4;
}

uint64_t sub_256C11CFC(char a1)
{
  return qword_256CF5D88[a1];
}

uint64_t sub_256C11D1C()
{
  return sub_256C11CFC(*v0);
}

uint64_t sub_256C11D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C11B84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C11D4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256C11CF4();
  *a1 = result;
  return result;
}

uint64_t sub_256C11D74(uint64_t a1)
{
  unint64_t v2 = sub_256C165EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C11DB0(uint64_t a1)
{
  unint64_t v2 = sub_256C165EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StateDump.ExecutionGroupState.encode(to:)()
{
  OUTLINED_FUNCTION_49_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC35A8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C165EC();
  OUTLINED_FUNCTION_11_3();
  sub_256CEDB08();
  sub_256C15940((uint64_t)&qword_26B2C8838);
  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_19_0();
  if (!v0)
  {
    type metadata accessor for StateDump.ExecutionGroupState(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256C15BE4((uint64_t)&qword_26B2C4B88);
    OUTLINED_FUNCTION_19_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC35B8);
    sub_256C16638();
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_53_3(3);
    sub_256CEE568();
  }
  OUTLINED_FUNCTION_45();
  return v2();
}

uint64_t StateDump.ExecutionGroupState.hashValue.getter()
{
  return sub_256C12008((void (*)(unsigned char *))StateDump.ExecutionGroupState.hash(into:));
}

uint64_t sub_256C12008(void (*a1)(unsigned char *))
{
  OUTLINED_FUNCTION_42();
  a1(v3);
  return sub_256CEE7F8();
}

void StateDump.ExecutionGroupState.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v13 = v12;
  uint64_t v30 = v14;
  uint64_t v15 = sub_256CEDB08();
  OUTLINED_FUNCTION_0_0();
  uint64_t v31 = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_3_0();
  uint64_t v32 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC35C8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = OUTLINED_FUNCTION_37_0();
  uint64_t v21 = type metadata accessor for StateDump.ExecutionGroupState(v20);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_32();
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_256C165EC();
  sub_256CEE848();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  else
  {
    uint64_t v23 = v10;
    LOBYTE(a10) = 0;
    sub_256C15940((uint64_t)&qword_26B2C7B60);
    OUTLINED_FUNCTION_60_2();
    sub_256CEE4D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v10, v32, v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    OUTLINED_FUNCTION_57_2();
    sub_256C15BE4((uint64_t)&qword_269FC2FC0);
    sub_256CEE4D8();
    uint64_t v24 = v21;
    *(void *)(v23 + *(int *)(v21 + 20)) = a10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC35B8);
    sub_256C166D0();
    sub_256CEE4D8();
    *(void *)(v23 + *(int *)(v21 + 24)) = a10;
    uint64_t v25 = sub_256CEE498();
    uint64_t v27 = v26;
    OUTLINED_FUNCTION_25_3();
    v28();
    uint64_t v29 = (uint64_t *)(v23 + *(int *)(v24 + 28));
    *uint64_t v29 = v25;
    v29[1] = v27;
    sub_256C15E78(v23, v30, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    sub_256C15ECC(v23, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256C1242C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256C12444(a1, a2, a3, (void (*)(unsigned char *))StateDump.ExecutionGroupState.hash(into:));
}

uint64_t sub_256C12444(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_256CEE798();
  a4(v6);
  return sub_256CEE7F8();
}

void sub_256C12488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  StateDump.ExecutionGroupState.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_256C124A0()
{
  return StateDump.ExecutionGroupState.encode(to:)();
}

uint64_t StateDump.InferenceProviderState.pid.getter()
{
  return *v0;
}

uint64_t StateDump.InferenceProviderState.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 8);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

uint64_t StateDump.InferenceProviderState.ActiveRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256BFD41C(v1, a1, &qword_26B2C7798);
}

uint64_t StateDump.InferenceProviderState.ActiveRequest.init(request:priority:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a2;
  sub_256C15F44(a1, a3, &qword_26B2C7798);
  uint64_t result = type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t StateDump.InferenceProviderState.ActiveRequest.hash(into:)()
{
  OUTLINED_FUNCTION_48_2();
  sub_256C15940((uint64_t)&qword_26B2C8840);
  sub_256CEDF18();
  OUTLINED_FUNCTION_61_2();
  return sub_256BF107C();
}

uint64_t static StateDump.InferenceProviderState.ActiveRequest.== infix(_:_:)()
{
  if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_61_2();
  return sub_256BF0D48();
}

uint64_t sub_256C1265C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256C12744(char a1)
{
  if (a1) {
    return 0x797469726F697270;
  }
  else {
    return 0x74736575716572;
  }
}

uint64_t sub_256C1277C()
{
  return sub_256C023CC();
}

uint64_t sub_256C12784()
{
  return sub_256C12744(*v0);
}

uint64_t sub_256C1278C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C1265C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C127B4(uint64_t a1)
{
  unint64_t v2 = sub_256C16788();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C127F0(uint64_t a1)
{
  unint64_t v2 = sub_256C16788();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StateDump.InferenceProviderState.ActiveRequest.encode(to:)()
{
  OUTLINED_FUNCTION_49_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC35D8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C16788();
  OUTLINED_FUNCTION_11_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  sub_256C16968((uint64_t)&unk_26B2C54B8);
  OUTLINED_FUNCTION_19_0();
  if (!v0)
  {
    type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
    sub_256BF937C();
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_45();
  return v2();
}

uint64_t StateDump.InferenceProviderState.ActiveRequest.hashValue.getter()
{
  return sub_256CEE7F8();
}

void StateDump.InferenceProviderState.ActiveRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v15 = v14;
  uint64_t v23 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_3_0();
  uint64_t v24 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC35E8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v19);
  uint64_t active = type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_16_1();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_256C16788();
  sub_256CEE848();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
  else
  {
    sub_256C16968((uint64_t)&unk_26B2C4EF8);
    sub_256CEE4D8();
    sub_256C15F44(v24, v13, &qword_26B2C7798);
    sub_256BF9478();
    sub_256CEE4D8();
    OUTLINED_FUNCTION_45();
    v22();
    *(unsigned char *)(v13 + *(int *)(active + 20)) = a12;
    sub_256C15E78(v13, v23, (void (*)(void))type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    sub_256C15ECC(v13, (void (*)(void))type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256C12CB4()
{
  return sub_256CEE7F8();
}

void sub_256C12D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  StateDump.InferenceProviderState.ActiveRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

uint64_t sub_256C12D6C()
{
  return StateDump.InferenceProviderState.ActiveRequest.encode(to:)();
}

__n128 StateDump.InferenceProviderState.init(pid:descriptor:activeRequests:activePriority:loadingCount:)@<Q0>(int a1@<W0>, __n128 *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v6 = a2->n128_u64[0];
  unint64_t v7 = a2->n128_u64[1];
  unsigned __int8 v8 = a2[2].n128_u8[0];
  char v9 = *a4;
  *(_DWORD *)a6 = a1;
  *(void *)(a6 + 8) = v6;
  *(void *)(a6 + 16) = v7;
  __n128 result = a2[1];
  *(__n128 *)(a6 + 24) = result;
  *(unsigned char *)(a6 + 40) = v8;
  *(void *)(a6 + 48) = a3;
  *(unsigned char *)(a6 + 56) = v9;
  *(void *)(a6 + 64) = a5;
  return result;
}

uint64_t StateDump.InferenceProviderState.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_256CEE7D8();
  sub_256CEDEC8();
  swift_bridgeObjectRetain_n();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7B8();
  if (v1)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  sub_256CEE7C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  sub_256BF9B6C();
  swift_bridgeObjectRelease();
  sub_256BF107C();
  return sub_256CEE7B8();
}

uint64_t static StateDump.InferenceProviderState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a2 + 64);
  char v4 = *(unsigned char *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 16);
  v8[0] = *(void *)(a1 + 8);
  v8[1] = v5;
  long long v9 = *(_OWORD *)(a1 + 24);
  char v10 = v4;
  if ((static InferenceProviderDescriptor.== infix(_:_:)((uint64_t)v8) & 1) == 0) {
    return 0;
  }
  sub_256BF22EC();
  if (v6) {
    return sub_256BF0D48() & (v2 == v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_256C12FA0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 6580592 && a2 == 0xE300000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6552657669746361 && a2 == 0xEE00737473657571;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x7250657669746361 && a2 == 0xEE00797469726F69;
        if (v8 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x43676E6964616F6CLL && a2 == 0xEC000000746E756FLL)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_256CEE6C8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_256C131C8(char a1)
{
  return qword_256CF5DC8[a1];
}

uint64_t sub_256C131E8()
{
  return sub_256C131C8(*v0);
}

uint64_t sub_256C131F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C12FA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C13218(uint64_t a1)
{
  unint64_t v2 = sub_256C167D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C13254(uint64_t a1)
{
  unint64_t v2 = sub_256C167D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void StateDump.InferenceProviderState.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC35F0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256C167D4();
  sub_256CEE878();
  sub_256CEE5B8();
  if (!v0)
  {
    sub_256C158A8();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_28_5();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3600);
    sub_256C16820();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_37_3();
    sub_256BF937C();
    OUTLINED_FUNCTION_9();
    sub_256CEE598();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_33();
}

uint64_t StateDump.InferenceProviderState.hashValue.getter()
{
  return sub_256CEE7F8();
}

void StateDump.InferenceProviderState.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3618);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_44_2();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256C167D4();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  }
  else
  {
    LOBYTE(v9) = 0;
    OUTLINED_FUNCTION_58_2();
    int v6 = sub_256CEE4E8();
    sub_256C15B4C();
    OUTLINED_FUNCTION_63_0();
    sub_256CEE4D8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3600);
    OUTLINED_FUNCTION_28_5();
    sub_256C168C4();
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEE4D8();
    OUTLINED_FUNCTION_37_3();
    sub_256BF9478();
    OUTLINED_FUNCTION_51_2();
    OUTLINED_FUNCTION_63_0();
    sub_256CEE4D8();
    OUTLINED_FUNCTION_58_2();
    uint64_t v7 = sub_256CEE4C8();
    OUTLINED_FUNCTION_45();
    v8();
    sub_256CEDEC8();
    swift_bridgeObjectRelease();
    *(_DWORD *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v9;
    *(void *)(v4 + 16) = v10;
    *(void *)(v4 + 24) = v11;
    *(void *)(v4 + 32) = v12;
    *(unsigned char *)(v4 + 40) = v13;
    *(void *)(v4 + 48) = v9;
    *(unsigned char *)(v4 + 56) = 0;
    *(void *)(v4 + 64) = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_33();
}

uint64_t sub_256C13894()
{
  return sub_256CEE7F8();
}

void sub_256C1390C()
{
}

void sub_256C13924()
{
}

__n128 StateDump.init(assertions:currentPolicy:assets:sessions:requests:runningRequests:executionGroups:inferenceProviders:disabledUseCases:trials:budget:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10, uint64_t a11)
{
  __n128 result = a10;
  char v12 = *a2;
  uint64_t v13 = *((void *)a2 + 1);
  char v14 = a2[16];
  uint64_t v15 = *(void *)(a7 + 16);
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = v12;
  *(void *)(a9 + 16) = v13;
  *(unsigned char *)(a9 + 24) = v14;
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(a2 + 24);
  *(void *)(a9 + 48) = a3;
  *(void *)(a9 + 56) = a4;
  *(void *)(a9 + 64) = a5;
  *(void *)(a9 + 72) = a6;
  *(_OWORD *)(a9 + 80) = *(_OWORD *)a7;
  *(void *)(a9 + 96) = v15;
  *(void *)(a9 + 104) = a8;
  *(__n128 *)(a9 + 112) = a10;
  *(void *)(a9 + 128) = a11;
  return result;
}

uint64_t static StateDump.dump()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_256C139B0, 0, 0);
}

uint64_t sub_256C139B0()
{
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C13A80;
  uint64_t v2 = *(void *)(v0 + 16);
  return ModelServiceClient.dumpState()(v2);
}

uint64_t sub_256C13A80()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t StateDump.dataValue.getter()
{
  sub_256CEDF78();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_0();
  uint64_t v10 = sub_256CED8F8();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_37_0();
  uint64_t v6 = sub_256CED8D8();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_28_2();
  memcpy(v12, v0, sizeof(v12));
  sub_256CED938();
  swift_allocObject();
  sub_256CED928();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3638);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_256CF4DF0;
  sub_256CED8B8();
  sub_256CED8A8();
  sub_256CED8C8();
  v11[0] = v7;
  sub_256C15940((uint64_t)&unk_269FC3640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3648);
  sub_256C16968((uint64_t)&unk_269FC3650);
  sub_256CEE328();
  sub_256CED8E8();
  *uint64_t v1 = sub_256C13F30;
  v1[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v1, *MEMORY[0x263F06190], v10);
  sub_256CED908();
  memcpy(v11, v12, sizeof(v11));
  sub_256C169A8();
  uint64_t v8 = sub_256CED918();
  swift_release();
  return v8;
}

uint64_t sub_256C13F30(uint64_t a1, void *a2)
{
  uint64_t v26 = a1;
  uint64_t v3 = sub_256CEDA88();
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v23 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_256CEDA68();
  uint64_t v20 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v19 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_256CEDA48();
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v17 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_256CEDA58();
  uint64_t v8 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_256CEDB28();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = sub_256CEDA98();
  uint64_t v21 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_256CEE868();
  sub_256CEDB18();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F072A0], v16);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v17, *MEMORY[0x263F07288], v18);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v19, *MEMORY[0x263F072B8], v22);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, *MEMORY[0x263F072C8], v25);
  sub_256CEDA78();
  sub_256C15940((uint64_t)&unk_269FC3788);
  sub_256CEDAB8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
  sub_256CEE6F8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v12);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
}

uint64_t sub_256C143C0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6F69747265737361 && a2 == 0xEA0000000000736ELL;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x50746E6572727563 && a2 == 0xED00007963696C6FLL;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x737465737361 && a2 == 0xE600000000000000;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x736E6F6973736573 && a2 == 0xE800000000000000;
        if (v8 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x7374736575716572 && a2 == 0xE800000000000000;
          if (v9 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x52676E696E6E7572 && a2 == 0xEF73747365757165;
            if (v10 || (sub_256CEE6C8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6F69747563657865 && a2 == 0xEF7370756F72476ELL;
              if (v11 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x8000000256D00C90 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x8000000256D00CB0 || (sub_256CEE6C8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                BOOL v12 = a1 == 0x736C61697274 && a2 == 0xE600000000000000;
                if (v12 || (sub_256CEE6C8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else if (a1 == 0x746567647562 && a2 == 0xE600000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else
                {
                  char v14 = sub_256CEE6C8();
                  swift_bridgeObjectRelease();
                  if (v14) {
                    return 10;
                  }
                  else {
                    return 11;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_256C14800()
{
  return 11;
}

uint64_t sub_256C14808(char a1)
{
  uint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x50746E6572727563;
      break;
    case 2:
      uint64_t result = 0x737465737361;
      break;
    case 3:
      uint64_t result = 0x736E6F6973736573;
      break;
    case 4:
      uint64_t result = 0x7374736575716572;
      break;
    case 5:
      uint64_t result = 0x52676E696E6E7572;
      break;
    case 6:
      uint64_t v3 = 0x747563657865;
      goto LABEL_9;
    case 7:
      return result;
    case 8:
      uint64_t result = 0xD000000000000010;
      break;
    case 9:
      uint64_t result = 0x736C61697274;
      break;
    case 10:
      uint64_t result = 0x746567647562;
      break;
    default:
      uint64_t v3 = 0x747265737361;
LABEL_9:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6F69000000000000;
      break;
  }
  return result;
}

uint64_t sub_256C14984()
{
  return sub_256C14808(*v0);
}

uint64_t sub_256C1498C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C143C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C149B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256C14800();
  *a1 = result;
  return result;
}

uint64_t sub_256C149DC(uint64_t a1)
{
  unint64_t v2 = sub_256C169F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C14A18(uint64_t a1)
{
  unint64_t v2 = sub_256C169F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void StateDump.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4D78);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_54();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256C169F4();
  sub_256CEE878();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B28);
  sub_256C16A40();
  sub_256CEE5A8();
  if (!v0)
  {
    sub_256C16AE4();
    OUTLINED_FUNCTION_50_2();
    OUTLINED_FUNCTION_28_5();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B50);
    sub_256C16B30();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_37_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B70);
    sub_256C16BD4();
    OUTLINED_FUNCTION_2_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B60);
    sub_256C16C78();
    OUTLINED_FUNCTION_2_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5598);
    sub_256C15A1C();
    OUTLINED_FUNCTION_2_4();
    sub_256C16D1C();
    OUTLINED_FUNCTION_50_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B40);
    sub_256C16D68((uint64_t)&unk_26B2C4B48);
    OUTLINED_FUNCTION_2_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256C15BE4((uint64_t)&qword_26B2C4B88);
    OUTLINED_FUNCTION_2_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B18);
    sub_256C17194((uint64_t)&unk_26B2C4B20);
    OUTLINED_FUNCTION_2_4();
    sub_256CEE5E8();
  }
  OUTLINED_FUNCTION_21_2();
  v4();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_33();
}

void StateDump.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3658);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_54();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256C169F4();
  OUTLINED_FUNCTION_62_1();
  if (v0)
  {
    int v6 = 0;
    unsigned int v7 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B28);
    LOBYTE(v46[0]) = 0;
    sub_256C16E20();
    OUTLINED_FUNCTION_20_5();
    LOBYTE(v46[0]) = 1;
    unint64_t v13 = sub_256C16EC4();
    sub_256CEDEC8();
    OUTLINED_FUNCTION_20_5();
    uint64_t v40 = v47;
    if (v13)
    {
      uint64_t v14 = OUTLINED_FUNCTION_5_3();
      v15(v14);
      swift_bridgeObjectRelease();
      int v6 = 0;
      unsigned int v7 = 1;
    }
    else
    {
      char v30 = v47;
      char v31 = v49;
      uint64_t v32 = v48;
      uint64_t v33 = v50;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B50);
      sub_256C16F10();
      OUTLINED_FUNCTION_20_5();
      uint64_t v29 = v51;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B70);
      sub_256C16FB4();
      OUTLINED_FUNCTION_51_2();
      OUTLINED_FUNCTION_3_4();
      uint64_t v39 = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B60);
      LOBYTE(v46[0]) = 4;
      sub_256C17058();
      OUTLINED_FUNCTION_51_2();
      OUTLINED_FUNCTION_3_4();
      uint64_t v38 = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5598);
      LOBYTE(v46[0]) = 5;
      unint64_t v16 = sub_256C15CDC();
      sub_256CEDEC8();
      OUTLINED_FUNCTION_3_4();
      uint64_t v37 = v47;
      if (v16)
      {
        uint64_t v17 = OUTLINED_FUNCTION_5_3();
        v18(v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v6 = 0;
        unsigned int v7 = 29;
      }
      else
      {
        LOBYTE(v46[0]) = 6;
        unint64_t v19 = sub_256C170FC();
        sub_256CEDEC8();
        OUTLINED_FUNCTION_20_5();
        uint64_t v44 = v47;
        if (!v19)
        {
          uint64_t v43 = v48;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B40);
          LOBYTE(v46[0]) = 7;
          unint64_t v22 = sub_256C16D68((uint64_t)&unk_269FC36A8);
          uint64_t v42 = v47;
          sub_256CEDEC8();
          sub_256CEDEC8();
          uint64_t v41 = v49;
          sub_256CEDEC8();
          OUTLINED_FUNCTION_3_4();
          BOOL v45 = v22 == 0;
          if (v22)
          {
            uint64_t v23 = OUTLINED_FUNCTION_5_3();
            v24(v23);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v10 = 0;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
            LOBYTE(v46[0]) = 8;
            sub_256C15BE4((uint64_t)&qword_269FC2FC0);
            OUTLINED_FUNCTION_51_2();
            OUTLINED_FUNCTION_3_4();
            uint64_t v36 = v47;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B18);
            LOBYTE(v46[0]) = 9;
            unint64_t v25 = sub_256C17194((uint64_t)&unk_269FC36B8);
            uint64_t v35 = v47;
            sub_256CEDEC8();
            OUTLINED_FUNCTION_3_4();
            if (!v25)
            {
              char v64 = 10;
              uint64_t v34 = v47;
              sub_256CEDEC8();
              uint64_t v27 = sub_256CEE518();
              OUTLINED_FUNCTION_45();
              v28();
              v46[0] = v40;
              LOBYTE(v46[1]) = v30;
              v46[2] = v32;
              LOBYTE(v46[3]) = v31;
              v46[4] = v33;
              v46[5] = v29;
              v46[6] = v39;
              v46[7] = v38;
              v46[8] = v37;
              v46[9] = v44;
              v46[10] = v42;
              v46[11] = v43;
              v46[12] = v41;
              v46[13] = v36;
              v46[14] = v35;
              v46[15] = v34;
              v46[16] = v27;
              sub_256C1720C((uint64_t)v46);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              memcpy(v4, v46, 0x88uLL);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
              uint64_t v47 = v40;
              LOBYTE(v48) = v30;
              *(_DWORD *)((char *)&v48 + 1) = v66[0];
              HIDWORD(v48) = *(_DWORD *)((char *)v66 + 3);
              uint64_t v49 = v32;
              LOBYTE(v50) = v31;
              *(_DWORD *)((char *)&v50 + 1) = *(_DWORD *)v65;
              HIDWORD(v50) = *(_DWORD *)&v65[3];
              uint64_t v51 = v33;
              uint64_t v52 = v29;
              uint64_t v53 = v39;
              uint64_t v54 = v38;
              uint64_t v55 = v37;
              uint64_t v56 = v44;
              uint64_t v57 = v42;
              uint64_t v58 = v43;
              uint64_t v59 = v41;
              uint64_t v60 = v36;
              uint64_t v61 = v35;
              uint64_t v62 = v34;
              uint64_t v63 = v27;
              sub_256C172C8((uint64_t)&v47);
              goto LABEL_22;
            }
            OUTLINED_FUNCTION_45();
            v26();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v10 = 1;
          }
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
          LOBYTE(v12) = 1;
          int v8 = 1;
          int v9 = 1;
          int v6 = 1;
          int v11 = 1;
          goto LABEL_14;
        }
        uint64_t v20 = OUTLINED_FUNCTION_5_3();
        v21(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unsigned int v7 = 61;
        int v6 = 1;
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  int v8 = (v7 >> 3) & 1;
  int v9 = (v7 >> 4) & 1;
  if ((v7 & 1) == 0)
  {
    int v10 = 0;
    BOOL v45 = 0;
    int v11 = 0;
    if ((v7 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  int v11 = 0;
  BOOL v45 = 0;
  int v10 = 0;
  int v12 = (v7 >> 2) & 1;
LABEL_14:
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_6:
    if (v8) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  if (!v9)
  {
LABEL_8:
    if (v6) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  if (!v11)
  {
LABEL_10:
    if (v45) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v45)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_20:
  if (!v10) {
    goto LABEL_22;
  }
LABEL_21:
  swift_bridgeObjectRelease();
LABEL_22:
  OUTLINED_FUNCTION_33();
}

void sub_256C15794()
{
}

void sub_256C157AC()
{
}

unint64_t sub_256C157C4()
{
  unint64_t result = qword_269FC3518;
  if (!qword_269FC3518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3518);
  }
  return result;
}

unint64_t sub_256C15810()
{
  unint64_t result = qword_26B2C54F0;
  if (!qword_26B2C54F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C54F0);
  }
  return result;
}

unint64_t sub_256C1585C()
{
  unint64_t result = qword_26B2C4EA8;
  if (!qword_26B2C4EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4EA8);
  }
  return result;
}

unint64_t sub_256C158A8()
{
  unint64_t result = qword_26B2C5040;
  if (!qword_26B2C5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5040);
  }
  return result;
}

unint64_t sub_256C158F4()
{
  unint64_t result = qword_26B2C5538;
  if (!qword_26B2C5538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5538);
  }
  return result;
}

unint64_t sub_256C15940(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_256C15984()
{
  unint64_t result = qword_269FC3528;
  if (!qword_269FC3528)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC3520);
    sub_256C16968((uint64_t)&unk_26B2C7980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3528);
  }
  return result;
}

unint64_t sub_256C15A1C()
{
  unint64_t result = qword_26B2C55A0;
  if (!qword_26B2C55A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C5598);
    sub_256C16968((uint64_t)&unk_26B2C54B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C55A0);
  }
  return result;
}

unint64_t sub_256C15AB4()
{
  unint64_t result = qword_26B2C4F90;
  if (!qword_26B2C4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4F90);
  }
  return result;
}

unint64_t sub_256C15B00()
{
  unint64_t result = qword_26B2C4EC0;
  if (!qword_26B2C4EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4EC0);
  }
  return result;
}

unint64_t sub_256C15B4C()
{
  unint64_t result = qword_26B2C54D0;
  if (!qword_26B2C54D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C54D0);
  }
  return result;
}

unint64_t sub_256C15B98()
{
  unint64_t result = qword_26B2C4FB8;
  if (!qword_26B2C4FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4FB8);
  }
  return result;
}

unint64_t sub_256C15BE4(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_256C15C44()
{
  unint64_t result = qword_269FC3540;
  if (!qword_269FC3540)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC3520);
    sub_256C16968((uint64_t)&unk_26B2C7768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3540);
  }
  return result;
}

unint64_t sub_256C15CDC()
{
  unint64_t result = qword_269FC3548;
  if (!qword_269FC3548)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C5598);
    sub_256C16968((uint64_t)&unk_26B2C4EF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3548);
  }
  return result;
}

uint64_t type metadata accessor for StateDump.SessionState(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C4AE8);
}

unint64_t sub_256C15D94()
{
  unint64_t result = qword_269FC3558;
  if (!qword_269FC3558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3558);
  }
  return result;
}

unint64_t sub_256C15DE0()
{
  unint64_t result = qword_269FC3560;
  if (!qword_269FC3560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3560);
  }
  return result;
}

unint64_t sub_256C15E2C()
{
  unint64_t result = qword_269FC3570;
  if (!qword_269FC3570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3570);
  }
  return result;
}

uint64_t sub_256C15E78(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_97();
  v5(v4);
  return a2;
}

uint64_t sub_256C15ECC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for StateDump.RequestState(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C4AC8);
}

uint64_t sub_256C15F44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_256C15FA0()
{
  unint64_t result = qword_269FC3580;
  if (!qword_269FC3580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3580);
  }
  return result;
}

uint64_t sub_256C15FEC(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_256C16040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateDump.ExecutionGroupState(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t result = sub_256CEE7B8();
  if (v8)
  {
    uint64_t v10 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    do
    {
      sub_256C15E78(v10, (uint64_t)v7, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
      sub_256CEDB08();
      sub_256C15940((uint64_t)&qword_26B2C8840);
      sub_256CEDF18();
      uint64_t v12 = *(void *)&v7[*(int *)(v4 + 20)];
      sub_256CEDEC8();
      sub_256BF911C(a1, v12);
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)&v7[*(int *)(v4 + 24)];
      sub_256CEDEC8();
      sub_256C163E4(a1, v13);
      swift_bridgeObjectRelease();
      sub_256CEDEC8();
      sub_256CEDFA8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_256C15ECC((uint64_t)v7, (void (*)(void))type metadata accessor for StateDump.ExecutionGroupState);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

unint64_t sub_256C16230()
{
  unint64_t result = qword_26B2C5558;
  if (!qword_26B2C5558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5558);
  }
  return result;
}

unint64_t sub_256C1627C()
{
  unint64_t result = qword_26B2C5580;
  if (!qword_26B2C5580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C5578);
    sub_256C15940((uint64_t)&unk_26B2C5540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5580);
  }
  return result;
}

uint64_t type metadata accessor for StateDump.ExecutionGroupState(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C5548);
}

unint64_t sub_256C16340()
{
  unint64_t result = qword_269FC3598;
  if (!qword_269FC3598)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C5578);
    sub_256C15940((uint64_t)&unk_269FC35A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3598);
  }
  return result;
}

uint64_t sub_256C163E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3250);
  MEMORY[0x270FA5388](v7 - 8);
  int v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 + 16);
  sub_256CEE7B8();
  if (!v10) {
    return __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v3);
  }
  uint64_t v11 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v12 = *(void *)(v4 + 72);
  while (1)
  {
    sub_256BFD41C(v11, (uint64_t)v9, &qword_26B2C7798);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v3);
    uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v3);
    if (result == 1) {
      break;
    }
    sub_256C15F44((uint64_t)v9, (uint64_t)v6, &qword_26B2C7798);
    sub_256CEDB08();
    sub_256C15940((uint64_t)&qword_26B2C8840);
    sub_256CEDF18();
    sub_256C15FEC((uint64_t)v6, &qword_26B2C7798);
    v11 += v12;
    if (!--v10) {
      return __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v3);
    }
  }
  return result;
}

unint64_t sub_256C165EC()
{
  unint64_t result = qword_269FC35B0;
  if (!qword_269FC35B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC35B0);
  }
  return result;
}

unint64_t sub_256C16638()
{
  unint64_t result = qword_269FC35C0;
  if (!qword_269FC35C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC35B8);
    sub_256C16968((uint64_t)&unk_26B2C54B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC35C0);
  }
  return result;
}

unint64_t sub_256C166D0()
{
  unint64_t result = qword_269FC35D0;
  if (!qword_269FC35D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC35B8);
    sub_256C16968((uint64_t)&unk_26B2C4EF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC35D0);
  }
  return result;
}

uint64_t type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_269FC36D8);
}

unint64_t sub_256C16788()
{
  unint64_t result = qword_269FC35E0;
  if (!qword_269FC35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC35E0);
  }
  return result;
}

unint64_t sub_256C167D4()
{
  unint64_t result = qword_269FC35F8;
  if (!qword_269FC35F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC35F8);
  }
  return result;
}

unint64_t sub_256C16820()
{
  unint64_t result = qword_269FC3608;
  if (!qword_269FC3608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC3600);
    sub_256C15940((uint64_t)&unk_269FC3610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3608);
  }
  return result;
}

unint64_t sub_256C168C4()
{
  unint64_t result = qword_269FC3620;
  if (!qword_269FC3620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC3600);
    sub_256C15940((uint64_t)&unk_269FC3628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3620);
  }
  return result;
}

unint64_t sub_256C16968(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_256C169A8()
{
  unint64_t result = qword_26B2C4B10;
  if (!qword_26B2C4B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4B10);
  }
  return result;
}

unint64_t sub_256C169F4()
{
  unint64_t result = qword_26B2C4AF8;
  if (!qword_26B2C4AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4AF8);
  }
  return result;
}

unint64_t sub_256C16A40()
{
  unint64_t result = qword_26B2C4B30;
  if (!qword_26B2C4B30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B28);
    sub_256C15940((uint64_t)&unk_26B2C8640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4B30);
  }
  return result;
}

unint64_t sub_256C16AE4()
{
  unint64_t result = qword_26B2C4A78;
  if (!qword_26B2C4A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4A78);
  }
  return result;
}

unint64_t sub_256C16B30()
{
  unint64_t result = qword_26B2C4B58;
  if (!qword_26B2C4B58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B50);
    sub_256C15940((uint64_t)&unk_26B2C4A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4B58);
  }
  return result;
}

unint64_t sub_256C16BD4()
{
  unint64_t result = qword_26B2C4B78;
  if (!qword_26B2C4B78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B70);
    sub_256C15940((uint64_t)&unk_26B2C4AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4B78);
  }
  return result;
}

unint64_t sub_256C16C78()
{
  unint64_t result = qword_26B2C4B68;
  if (!qword_26B2C4B68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B60);
    sub_256C15940((uint64_t)&unk_26B2C4AB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4B68);
  }
  return result;
}

unint64_t sub_256C16D1C()
{
  unint64_t result = qword_26B2C5570;
  if (!qword_26B2C5570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5570);
  }
  return result;
}

unint64_t sub_256C16D68(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B40);
    v4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_256C16DD4()
{
  unint64_t result = qword_26B2C4A88;
  if (!qword_26B2C4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4A88);
  }
  return result;
}

unint64_t sub_256C16E20()
{
  unint64_t result = qword_269FC3660;
  if (!qword_269FC3660)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B28);
    sub_256C15940((uint64_t)&unk_26B2C4900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3660);
  }
  return result;
}

unint64_t sub_256C16EC4()
{
  unint64_t result = qword_269FC3668;
  if (!qword_269FC3668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3668);
  }
  return result;
}

unint64_t sub_256C16F10()
{
  unint64_t result = qword_269FC3670;
  if (!qword_269FC3670)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B50);
    sub_256C15940((uint64_t)&unk_269FC3678);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3670);
  }
  return result;
}

unint64_t sub_256C16FB4()
{
  unint64_t result = qword_269FC3680;
  if (!qword_269FC3680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B70);
    sub_256C15940((uint64_t)&unk_269FC3688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3680);
  }
  return result;
}

unint64_t sub_256C17058()
{
  unint64_t result = qword_269FC3690;
  if (!qword_269FC3690)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B60);
    sub_256C15940((uint64_t)&unk_269FC3698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3690);
  }
  return result;
}

unint64_t sub_256C170FC()
{
  unint64_t result = qword_269FC36A0;
  if (!qword_269FC36A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC36A0);
  }
  return result;
}

unint64_t sub_256C17148()
{
  unint64_t result = qword_269FC36B0;
  if (!qword_269FC36B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC36B0);
  }
  return result;
}

unint64_t sub_256C17194(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4B18);
    v4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_256C1720C(uint64_t a1)
{
  return a1;
}

uint64_t sub_256C172C8(uint64_t a1)
{
  return a1;
}

unint64_t sub_256C17384()
{
  return sub_256C15940((uint64_t)&unk_26B2C4AA0);
}

unint64_t sub_256C173CC()
{
  return sub_256C15940((uint64_t)&unk_26B2C4AE0);
}

unint64_t sub_256C17414()
{
  return sub_256C15940((uint64_t)&unk_26B2C4AC0);
}

unint64_t sub_256C17460()
{
  unint64_t result = qword_269FC36C0;
  if (!qword_269FC36C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC36C0);
  }
  return result;
}

unint64_t sub_256C174AC()
{
  return sub_256C15940((uint64_t)&unk_269FC36C8);
}

unint64_t sub_256C174F4()
{
  return sub_256C15940((uint64_t)&unk_269FC36D0);
}

unint64_t sub_256C17540()
{
  unint64_t result = qword_26B2C4A90;
  if (!qword_26B2C4A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4A90);
  }
  return result;
}

uint64_t destroy for StateDump()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for StateDump(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

void *__swift_memcpy136_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for StateDump(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateDump(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for StateDump()
{
}

void *initializeBufferWithCopyOfBuffer for StateDump.AssetState(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(unsigned char *)(a1 + 58) = *((unsigned char *)a2 + 58);
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = a2[10];
    uint64_t v12 = a2[11];
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    uint64_t v13 = a3[12];
    uint64_t v19 = (uint64_t)a2 + v13;
    uint64_t v20 = a1 + v13;
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    uint64_t v14 = sub_256CEDAC8();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
    v15(v20, v19, v14);
    v15((uint64_t)v4 + a3[13], (uint64_t)a2 + a3[13], v14);
    uint64_t v16 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(void *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    *(void *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  return v4;
}

uint64_t destroy for StateDump.AssetState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_256CEDAC8();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 52), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.AssetState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  uint64_t v12 = a3[12];
  uint64_t v17 = a2 + v12;
  uint64_t v18 = a1 + v12;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  uint64_t v13 = sub_256CEDAC8();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  v14(v18, v17, v13);
  v14(a1 + a3[13], a2 + a3[13], v13);
  uint64_t v15 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for StateDump.AssetState(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  uint64_t v6 = a3[12];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256CEDAC8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[13], a2 + a3[13], v9);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StateDump.AssetState(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  uint64_t v9 = a3[12];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v12 = sub_256CEDAC8();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + a3[13], a2 + a3[13], v12);
  uint64_t v14 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for StateDump.AssetState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  uint64_t v11 = a3[12];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_256CEDAC8();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[13], a2 + a3[13], v14);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.AssetState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C18248);
}

uint64_t sub_256C18248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_18_2(*(void *)(a1 + 8));
  }
  uint64_t v7 = sub_256CEDAC8();
  uint64_t v8 = a1 + *(int *)(a3 + 48);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for StateDump.AssetState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C182D8);
}

uint64_t sub_256C182D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_256CEDAC8();
    uint64_t v8 = v5 + *(int *)(a4 + 48);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_256C18358()
{
  uint64_t result = sub_256CEDAC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StateDump.SessionState(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[8];
    *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    *(_DWORD *)((char *)a1 + v12) = *(_DWORD *)((char *)a2 + v12);
    uint64_t v13 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  return a1;
}

uint64_t destroy for StateDump.SessionState(uint64_t a1)
{
  uint64_t v2 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.SessionState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for StateDump.SessionState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for StateDump.SessionState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for StateDump.SessionState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.SessionState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C18938);
}

uint64_t sub_256C18938()
{
  OUTLINED_FUNCTION_36_3();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return OUTLINED_FUNCTION_18_2(*(void *)(v0 + *(int *)(v2 + 20)));
  }
  uint64_t v4 = OUTLINED_FUNCTION_41_3();
  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for StateDump.SessionState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C189C0);
}

void sub_256C189C0()
{
  OUTLINED_FUNCTION_17_3();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_30_1();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t sub_256C18A34()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StateDump.RequestState(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  return a1;
}

uint64_t destroy for StateDump.RequestState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.RequestState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for StateDump.RequestState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for StateDump.RequestState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for StateDump.RequestState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(void *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.RequestState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C190A0);
}

uint64_t sub_256C190A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return OUTLINED_FUNCTION_18_2(*(void *)(a1 + *(int *)(a3 + 24)));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for StateDump.RequestState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C19164);
}

void sub_256C19164()
{
  OUTLINED_FUNCTION_17_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v9 + 84) != v3)
    {
      *(void *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
      return;
    }
    uint64_t v6 = v8;
    uint64_t v7 = v1 + *(int *)(v2 + 20);
  }
  __swift_storeEnumTagSinglePayload(v7, v0, v0, v6);
}

uint64_t sub_256C19210()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for StateDump.ExecutionGroupsState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s20ModelManagerServices9StateDumpV20ExecutionGroupsStateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

void *assignWithCopy for StateDump.ExecutionGroupsState(void *a1, void *a2)
{
  *a1 = *a2;
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StateDump.ExecutionGroupsState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.ExecutionGroupsState(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateDump.ExecutionGroupsState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for StateDump.ExecutionGroupsState()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for StateDump.ExecutionGroupState(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
  }
  return a1;
}

uint64_t destroy for StateDump.ExecutionGroupState(uint64_t a1)
{
  uint64_t v2 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.ExecutionGroupState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for StateDump.ExecutionGroupState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StateDump.ExecutionGroupState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for StateDump.ExecutionGroupState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.ExecutionGroupState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C19924);
}

uint64_t sub_256C19924()
{
  OUTLINED_FUNCTION_36_3();
  sub_256CEDB08();
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return OUTLINED_FUNCTION_18_2(*(void *)(v0 + *(int *)(v2 + 20)));
  }
  uint64_t v4 = OUTLINED_FUNCTION_41_3();
  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for StateDump.ExecutionGroupState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C199A8);
}

void sub_256C199A8()
{
  OUTLINED_FUNCTION_17_3();
  sub_256CEDB08();
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_30_1();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t sub_256C19A18()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for StateDump.InferenceProviderState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.InferenceProviderState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for StateDump.InferenceProviderState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for StateDump.InferenceProviderState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.InferenceProviderState(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateDump.InferenceProviderState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for StateDump.InferenceProviderState()
{
}

void *initializeBufferWithCopyOfBuffer for StateDump.InferenceProviderState.ActiveRequest(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1)
{
  uint64_t v2 = sub_256CEDB08();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C1A070);
}

uint64_t sub_256C1A070()
{
  OUTLINED_FUNCTION_36_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v3 + 84) == v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_41_3();
    return __swift_getEnumTagSinglePayload(v4, v5, v6);
  }
  else
  {
    unsigned int v8 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 20));
    if (v8 >= 4) {
      return v8 - 3;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C1A100);
}

void sub_256C1A100()
{
  OUTLINED_FUNCTION_17_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_30_1();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 3;
  }
}

uint64_t sub_256C1A174()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StateDump.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for StateDump.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C1A35CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump.CodingKeys()
{
  return &type metadata for StateDump.CodingKeys;
}

ValueMetadata *type metadata accessor for StateDump.InferenceProviderState.CodingKeys()
{
  return &type metadata for StateDump.InferenceProviderState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StateDump.InferenceProviderState.ActiveRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C1A478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump.InferenceProviderState.ActiveRequest.CodingKeys()
{
  return &type metadata for StateDump.InferenceProviderState.ActiveRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StateDump.ExecutionGroupState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C1A57CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump.ExecutionGroupState.CodingKeys()
{
  return &type metadata for StateDump.ExecutionGroupState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StateDump.ExecutionGroupsState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C1A680);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump.ExecutionGroupsState.CodingKeys()
{
  return &type metadata for StateDump.ExecutionGroupsState.CodingKeys;
}

unsigned char *_s20ModelManagerServices9StateDumpV22InferenceProviderStateV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C1A784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump.RequestState.CodingKeys()
{
  return &type metadata for StateDump.RequestState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StateDump.SessionState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for StateDump.SessionState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C1A910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump.SessionState.CodingKeys()
{
  return &type metadata for StateDump.SessionState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StateDump.AssetState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C1AA14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump.AssetState.CodingKeys()
{
  return &type metadata for StateDump.AssetState.CodingKeys;
}

unint64_t sub_256C1AA50()
{
  unint64_t result = qword_269FC36E8;
  if (!qword_269FC36E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC36E8);
  }
  return result;
}

unint64_t sub_256C1AAA0()
{
  unint64_t result = qword_269FC36F0;
  if (!qword_269FC36F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC36F0);
  }
  return result;
}

unint64_t sub_256C1AAF0()
{
  unint64_t result = qword_269FC36F8;
  if (!qword_269FC36F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC36F8);
  }
  return result;
}

unint64_t sub_256C1AB40()
{
  unint64_t result = qword_269FC3700;
  if (!qword_269FC3700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3700);
  }
  return result;
}

unint64_t sub_256C1AB90()
{
  unint64_t result = qword_269FC3708;
  if (!qword_269FC3708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3708);
  }
  return result;
}

unint64_t sub_256C1ABE0()
{
  unint64_t result = qword_269FC3710;
  if (!qword_269FC3710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3710);
  }
  return result;
}

unint64_t sub_256C1AC30()
{
  unint64_t result = qword_269FC3718;
  if (!qword_269FC3718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3718);
  }
  return result;
}

unint64_t sub_256C1AC80()
{
  unint64_t result = qword_269FC3720;
  if (!qword_269FC3720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3720);
  }
  return result;
}

unint64_t sub_256C1ACD0()
{
  unint64_t result = qword_26B2C4B08;
  if (!qword_26B2C4B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4B08);
  }
  return result;
}

unint64_t sub_256C1AD20()
{
  unint64_t result = qword_26B2C4B00;
  if (!qword_26B2C4B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4B00);
  }
  return result;
}

unint64_t sub_256C1AD70()
{
  unint64_t result = qword_269FC3728;
  if (!qword_269FC3728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3728);
  }
  return result;
}

unint64_t sub_256C1ADC0()
{
  unint64_t result = qword_269FC3730;
  if (!qword_269FC3730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3730);
  }
  return result;
}

unint64_t sub_256C1AE10()
{
  unint64_t result = qword_269FC3738;
  if (!qword_269FC3738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3738);
  }
  return result;
}

unint64_t sub_256C1AE60()
{
  unint64_t result = qword_269FC3740;
  if (!qword_269FC3740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3740);
  }
  return result;
}

unint64_t sub_256C1AEB0()
{
  unint64_t result = qword_269FC3748;
  if (!qword_269FC3748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3748);
  }
  return result;
}

unint64_t sub_256C1AF00()
{
  unint64_t result = qword_269FC3750;
  if (!qword_269FC3750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3750);
  }
  return result;
}

unint64_t sub_256C1AF50()
{
  unint64_t result = qword_26B2C5568;
  if (!qword_26B2C5568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5568);
  }
  return result;
}

unint64_t sub_256C1AFA0()
{
  unint64_t result = qword_26B2C5560;
  if (!qword_26B2C5560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5560);
  }
  return result;
}

unint64_t sub_256C1AFF0()
{
  unint64_t result = qword_269FC3758;
  if (!qword_269FC3758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3758);
  }
  return result;
}

unint64_t sub_256C1B040()
{
  unint64_t result = qword_269FC3760;
  if (!qword_269FC3760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3760);
  }
  return result;
}

unint64_t sub_256C1B090()
{
  unint64_t result = qword_269FC3768;
  if (!qword_269FC3768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3768);
  }
  return result;
}

unint64_t sub_256C1B0E0()
{
  unint64_t result = qword_269FC3770;
  if (!qword_269FC3770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3770);
  }
  return result;
}

unint64_t sub_256C1B130()
{
  unint64_t result = qword_269FC3778;
  if (!qword_269FC3778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3778);
  }
  return result;
}

unint64_t sub_256C1B180()
{
  unint64_t result = qword_269FC3780;
  if (!qword_269FC3780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3780);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_22_5@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return sub_256CEE578();
}

uint64_t OUTLINED_FUNCTION_48_2()
{
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_51_2()
{
  return sub_256CEDEC8();
}

void OUTLINED_FUNCTION_56_3()
{
  *(unsigned char *)(v0 - 120) = 1;
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  return v0 - 120;
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  return type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
}

uint64_t OUTLINED_FUNCTION_62_1()
{
  return sub_256CEE848();
}

uint64_t OUTLINED_FUNCTION_65_0()
{
  return v0;
}

uint64_t sub_256C1B2BC()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_269FC3790);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269FC3790);
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8CA8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

unint64_t static InferenceProviderXPCSender.extensionPointIdentifier.getter()
{
  return 0xD000000000000028;
}

unint64_t static InferenceProviderXPCSender.inferenceProviderIdentifierKey.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_256C1B3BC()
{
  uint64_t v0 = swift_retain();
  return sub_256C1B3E8(v0);
}

uint64_t sub_256C1B3E8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t (*sub_256C1B430())()
{
  return j__swift_endAccess;
}

uint64_t sub_256C1B480()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    sub_256BE33C8((uint64_t)v2, &qword_26B2C8A00);
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    sub_256CEE168();
    (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
    if (*(void *)(v4 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v5 = sub_256CEE0D8();
      uint64_t v6 = v7;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }
  }
  sub_256CEDBB8();
  if (v6 | v5)
  {
    v9[0] = 0;
    v9[1] = 0;
    v9[2] = v5;
    v9[3] = v6;
  }
  uint64_t result = swift_task_create();
  qword_269FC37A8 = result;
  return result;
}

uint64_t sub_256C1B654(uint64_t a1)
{
  v1[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3908);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  uint64_t v2 = sub_256CEDC58();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v3 = sub_256CEDC18();
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  uint64_t v4 = sub_256CEDBF8();
  v1[19] = v4;
  v1[20] = *(void *)(v4 - 8);
  v1[21] = swift_task_alloc();
  uint64_t v5 = sub_256CEDC38();
  v1[22] = v5;
  v1[23] = *(void *)(v5 - 8);
  v1[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C1B884, 0, 0);
}

uint64_t sub_256C1B884()
{
  OUTLINED_FUNCTION_15();
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  sub_256CEDBD8();
  sub_256CEDC28();
  sub_256CEDC08();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[25] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_256C1B980;
  return MEMORY[0x270EEB7F0]();
}

uint64_t sub_256C1B980()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 208) = v4;
  *(void *)(v2 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_256C1C0F0;
  }
  else {
    uint64_t v5 = sub_256C1BA68;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_256C1BA68()
{
  uint64_t v1 = *(void *)(v0 + 208);
  if (!v1)
  {
    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_256CEDC88();
    __swift_project_value_buffer(v19, (uint64_t)qword_269FC3790);
    uint64_t v20 = sub_256CEDC68();
    os_log_type_t v21 = sub_256CEE2C8();
    if (os_log_type_enabled(v20, v21))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_61(&dword_256BD4000, v22, v23, "No results found from _AppExtensionQuery");
      OUTLINED_FUNCTION_4();
    }

    uint64_t v24 = sub_256CEDEB8();
    sub_256BE9EDC();
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_109();
    *(void *)uint64_t v25 = v26 - 9;
    uint64_t v27 = "No results found from _AppExtensionQuery";
    goto LABEL_32;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v4 = v3 + 16;
    uint64_t v57 = v5;
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v56 = *(void *)(v4 + 56);
    uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    sub_256CEDEC8();
    OUTLINED_FUNCTION_109();
    uint64_t v54 = v8 - 22;
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 88);
      uint64_t v10 = *(void *)(v0 + 72);
      v57(v10, v6, v9);
      __swift_storeEnumTagSinglePayload(v10, 0, 1, v9);
      if (__swift_getEnumTagSinglePayload(v10, 1, v9) == 1) {
        break;
      }
      uint64_t v11 = *v7;
      (*v7)(*(void *)(v0 + 112), *(void *)(v0 + 72), *(void *)(v0 + 88));
      uint64_t v12 = sub_256CEDC48();
      if (*(void *)(v12 + 16) && (unint64_t v13 = sub_256C9BC20(v54, 0x8000000256D00D00), (v14 & 1) != 0))
      {
        sub_256BE393C(*(void *)(v12 + 56) + 32 * v13, v0 + 16);
      }
      else
      {
        *(_OWORD *)(v0 + 16) = 0u;
        *(_OWORD *)(v0 + 32) = 0u;
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 40))
      {
        if (swift_dynamicCast())
        {
          uint64_t v15 = *(void *)(v0 + 56);
          OUTLINED_FUNCTION_109();
          if (v16 == v17 && v15 == 0x8000000256D00E20)
          {
            swift_bridgeObjectRelease();
LABEL_38:
            uint64_t v50 = *(void *)(v0 + 112);
            uint64_t v52 = *(void *)(v0 + 80);
            uint64_t v51 = *(void *)(v0 + 88);
            swift_bridgeObjectRelease();
            v11(v52, v50, v51);
            uint64_t v28 = 0;
            goto LABEL_26;
          }
          char v18 = sub_256CEE6C8();
          swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_38;
          }
        }
      }
      else
      {
        sub_256BE33C8(v0 + 16, &qword_269FC3238);
      }
      (*(void (**)(void, void))(v4 - 8))(*(void *)(v0 + 112), *(void *)(v0 + 88));
      v6 += v56;
      if (!--v2) {
        goto LABEL_24;
      }
    }
  }
  else
  {
    sub_256CEDEC8();
LABEL_24:
    __swift_storeEnumTagSinglePayload(*(void *)(v0 + 72), 1, 1, *(void *)(v0 + 88));
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = 1;
LABEL_26:
  uint64_t v30 = *(void *)(v0 + 80);
  uint64_t v29 = *(void *)(v0 + 88);
  __swift_storeEnumTagSinglePayload(v30, v28, 1, v29);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v30, 1, v29) == 1)
  {
    sub_256BE33C8(*(void *)(v0 + 80), &qword_269FC3908);
    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_256CEDC88();
    __swift_project_value_buffer(v31, (uint64_t)qword_269FC3790);
    uint64_t v32 = sub_256CEDC68();
    os_log_type_t v33 = sub_256CEE2C8();
    if (os_log_type_enabled(v32, v33))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_61(&dword_256BD4000, v34, v35, "Builtin InferenceProviderService extension not found");
      OUTLINED_FUNCTION_4();
    }

    uint64_t v24 = sub_256CEDEB8();
    sub_256BE9EDC();
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_109();
    *(void *)uint64_t v25 = v36 + 3;
    uint64_t v27 = "Builtin InferenceProviderService extension not found";
LABEL_32:
    *(void *)(v25 + 8) = (unint64_t)(v27 - 32) | 0x8000000000000000;
    *(_OWORD *)(v25 + 16) = xmmword_256CF5E20;
    *(void *)(v25 + 32) = 0;
    *(void *)(v25 + 40) = v24;
    *(unsigned char *)(v25 + 48) = 88;
    swift_willThrow();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_100();
    v37();
    uint64_t v38 = OUTLINED_FUNCTION_99_1();
    v39(v38);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    goto LABEL_34;
  }
  uint64_t v42 = *(void *)(v0 + 184);
  uint64_t v41 = *(void *)(v0 + 192);
  uint64_t v43 = *(void *)(v0 + 168);
  uint64_t v44 = *(void *)(v0 + 160);
  uint64_t v53 = *(void *)(v0 + 152);
  uint64_t v55 = *(void *)(v0 + 176);
  uint64_t v45 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 96);
  uint64_t v47 = *(void *)(v0 + 104);
  uint64_t v48 = *(void *)(v0 + 88);
  (*(void (**)(uint64_t))(v46 + 32))(v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v47, v45, v48);
  sub_256CEDBC8();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v48);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v53);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v55);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
LABEL_34:
  return v40();
}

uint64_t sub_256C1C0F0()
{
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_100();
  v0();
  uint64_t v1 = OUTLINED_FUNCTION_99_1();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C1C1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_256CEE178();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    sub_256BE33C8(a1, &qword_26B2C8A00);
  }
  else
  {
    sub_256CEE168();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_256CEE0D8();
    swift_unknownObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4EA0);
  return swift_task_create();
}

uint64_t sub_256C1C318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256C1C334(a1, a2, a3);
}

uint64_t sub_256C1C324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256C1C334(a1, a2, a3);
}

uint64_t sub_256C1C334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_256CEE178();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    sub_256BE33C8(a1, &qword_26B2C8A00);
  }
  else
  {
    sub_256CEE168();
    OUTLINED_FUNCTION_50();
    v6();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_256CEE0D8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t static InferenceProviderXPCSender.builtInInferenceProviderExtensionIdentityCache.getter()
{
  if (qword_269FC2728 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t InferenceProviderXPCSender.__allocating_init(session:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  InferenceProviderXPCSender.init(session:)(a1);
  return v2;
}

uint64_t InferenceProviderXPCSender.init(session:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v5 = OUTLINED_FUNCTION_21(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  uint64_t v8 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = a1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    sub_256BE33C8((uint64_t)v7, &qword_26B2C8A00);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_256CEE168();
    OUTLINED_FUNCTION_50();
    v12();
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_256CEE0D8();
      uint64_t v11 = v13;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4EA0);
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    void v15[3] = v11;
  }
  *(void *)(v2 + 112) = swift_task_create();
  return v2;
}

uint64_t sub_256C1C6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_256C1C718, 0, 0);
}

uint64_t sub_256C1C718()
{
  OUTLINED_FUNCTION_12();
  **(void **)(v0 + 16) = *(void *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  swift_retain();
  return v2();
}

uint64_t sub_256C1C784()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_256C1C7C4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C1C6F8(v3, v4, v5, v6);
}

uint64_t InferenceProviderXPCSender.__allocating_init(builtInProvider:session:)(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  InferenceProviderXPCSender.init(builtInProvider:session:)(a1, a2);
  return v4;
}

uint64_t InferenceProviderXPCSender.init(builtInProvider:session:)(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v6 = OUTLINED_FUNCTION_21(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  swift_defaultActor_initialize();
  uint64_t v9 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = (_BYTE)a1;
  *(void *)(v10 + 40) = a2;
  *(void *)(v2 + 112) = sub_256C1C1CC((uint64_t)v8, (uint64_t)&unk_269FC37C8, v10);
  return v2;
}

uint64_t sub_256C1C994(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 176) = a4;
  *(void *)(v5 + 72) = a1;
  *(void *)(v5 + 80) = a5;
  *(void *)(v5 + 88) = type metadata accessor for ModelManagerError();
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  *(void *)(v5 + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  *(void *)(v5 + 120) = swift_task_alloc();
  *(void *)(v5 + 128) = swift_task_alloc();
  *(void *)(v5 + 136) = type metadata accessor for InferenceProviderXPCRequest(0);
  *(void *)(v5 + 144) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C1CAB0, 0, 0);
}

uint64_t sub_256C1CAB0()
{
  uint64_t v18 = v0;
  if (qword_269FC2720 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  *(void *)(v0 + 152) = __swift_project_value_buffer(v1, (uint64_t)qword_269FC3790);
  uint64_t v2 = sub_256CEDC68();
  os_log_type_t v3 = sub_256CEE298();
  if (OUTLINED_FUNCTION_105(v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 176);
    uint64_t v5 = (_DWORD *)OUTLINED_FUNCTION_24_0();
    uint64_t v17 = OUTLINED_FUNCTION_23_0();
    _DWORD *v5 = 136315138;
    OUTLINED_FUNCTION_65_1();
    if (v4 != 1) {
      unint64_t v8 = 0x8000000256CFF810;
    }
    if (v4) {
      uint64_t v9 = 0xD00000000000001BLL;
    }
    else {
      uint64_t v9 = v6;
    }
    if (v4) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = v7;
    }
    *(void *)(v0 + 64) = sub_256BE14CC(v9, v10, &v17);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_112_0(&dword_256BD4000, v2, v3, "Sending configure request to service for: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }

  **(unsigned char **)(v0 + 144) = *(unsigned char *)(v0 + 176);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 160) = v11;
  *uint64_t v11 = v12;
  v11[1] = sub_256C1CCC4;
  uint64_t v13 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 128);
  return v16(v14, v13);
}

uint64_t sub_256C1CCC4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *os_log_type_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v7 = sub_256C1D3BC;
  }
  else {
    unint64_t v7 = sub_256C1CDA8;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_256C1CDA8()
{
  uint64_t v36 = v0;
  sub_256BFD41C(*(void *)(v0 + 128), *(void *)(v0 + 120), &qword_26B2C7778);
  OUTLINED_FUNCTION_51();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v2 = *(void *)(v0 + 104);
    sub_256C09E84(*(void *)(v0 + 120), v3);
    sub_256C26398(v3, v2, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C255E4(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    swift_willThrowTypedImpl();
    sub_256C263EC(v3, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C09E84(v2, v3);
    uint64_t v4 = (void *)OUTLINED_FUNCTION_94();
    sub_256C09E84(v3, v5);
    sub_256BE33C8(v1, &qword_26B2C7778);
    MEMORY[0x25A2AE9C0](v4);
    MEMORY[0x25A2AE9C0](v4);
    uint64_t v6 = sub_256CEDC68();
    os_log_type_t v7 = sub_256CEE2B8();
    if (OUTLINED_FUNCTION_105(v7))
    {
      int v8 = *(unsigned __int8 *)(v0 + 176);
      uint64_t v9 = swift_slowAlloc();
      unint64_t v10 = (void *)OUTLINED_FUNCTION_22_0();
      v35[0] = OUTLINED_FUNCTION_23_0();
      *(_DWORD *)uint64_t v9 = 136315394;
      OUTLINED_FUNCTION_65_1();
      OUTLINED_FUNCTION_103();
      if (v8) {
        uint64_t v14 = 0xD00000000000001BLL;
      }
      else {
        uint64_t v14 = v11;
      }
      if (v8) {
        unint64_t v15 = v13;
      }
      else {
        unint64_t v15 = v12;
      }
      *(void *)(v0 + 40) = sub_256BE14CC(v14, v15, v35);
      sub_256CEE308();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2112;
      MEMORY[0x25A2AE9C0](v4);
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 48) = v16;
      sub_256CEE308();
      *unint64_t v10 = v16;

      _os_log_impl(&dword_256BD4000, v6, v7, "Configure request to service for: %s failed with %@", (uint8_t *)v9, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
    }
    OUTLINED_FUNCTION_111();
    uint64_t v29 = v35[1];
    *(void *)(v0 + 16) = v35[0];
    *(void *)(v0 + 24) = v29;
    sub_256CEDFB8();
    OUTLINED_FUNCTION_65_1();
    OUTLINED_FUNCTION_103();
    uint64_t v30 = *(void *)(v0 + 144);
    sub_256CEDFB8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_60_3();
    *(void *)(v0 + 32) = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
    sub_256CEE3B8();
    sub_256CEDD18();
    swift_bridgeObjectRelease();
    swift_willThrow();
    sub_256C263EC(v30, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v17 = sub_256CEDC68();
    os_log_type_t v18 = sub_256CEE298();
    if (OUTLINED_FUNCTION_105(v18))
    {
      int v19 = *(unsigned __int8 *)(v0 + 176);
      uint64_t v20 = (_DWORD *)OUTLINED_FUNCTION_24_0();
      v35[0] = OUTLINED_FUNCTION_23_0();
      *uint64_t v20 = 136315138;
      OUTLINED_FUNCTION_65_1();
      if (v19 != 1) {
        unint64_t v23 = 0x8000000256CFF810;
      }
      if (v19) {
        uint64_t v24 = 0xD00000000000001BLL;
      }
      else {
        uint64_t v24 = v21;
      }
      if (v19) {
        unint64_t v25 = v23;
      }
      else {
        unint64_t v25 = v22;
      }
      uint64_t v26 = *(void *)(v0 + 144);
      uint64_t v27 = *(void *)(v0 + 128);
      *(void *)(v0 + 56) = sub_256BE14CC(v24, v25, v35);
      sub_256CEE308();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_112_0(&dword_256BD4000, v17, v18, "Configure request for: %s returned");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();

      sub_256BE33C8(v27, &qword_26B2C7778);
      uint64_t v28 = v26;
    }
    else
    {
      uint64_t v32 = *(void *)(v0 + 144);
      uint64_t v33 = *(void *)(v0 + 128);

      sub_256BE33C8(v33, &qword_26B2C7778);
      uint64_t v28 = v32;
    }
    sub_256C263EC(v28, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
    **(void **)(v0 + 72) = *(void *)(v0 + 80);
    swift_retain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_72();
  }
  return v31();
}

uint64_t sub_256C1D3BC()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void **)(v0 + 168);
  MEMORY[0x25A2AE9C0](v1);
  MEMORY[0x25A2AE9C0](v1);
  uint64_t v2 = sub_256CEDC68();
  os_log_type_t v3 = sub_256CEE2B8();
  if (OUTLINED_FUNCTION_105(v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 176);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)OUTLINED_FUNCTION_22_0();
    v18[0] = OUTLINED_FUNCTION_23_0();
    *(_DWORD *)uint64_t v5 = 136315394;
    OUTLINED_FUNCTION_83_0();
    if (v4 != 1) {
      unint64_t v9 = v10;
    }
    if (v4) {
      uint64_t v11 = 0xD00000000000001BLL;
    }
    else {
      uint64_t v11 = v7;
    }
    if (v4) {
      unint64_t v12 = v9;
    }
    else {
      unint64_t v12 = v8;
    }
    *(void *)(v0 + 40) = sub_256BE14CC(v11, v12, v18);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2112;
    MEMORY[0x25A2AE9C0](v1);
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 48) = v13;
    sub_256CEE308();
    void *v6 = v13;

    _os_log_impl(&dword_256BD4000, v2, v3, "Configure request to service for: %s failed with %@", (uint8_t *)v5, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
  }
  OUTLINED_FUNCTION_111();
  uint64_t v14 = v18[1];
  *(void *)(v0 + 16) = v18[0];
  *(void *)(v0 + 24) = v14;
  sub_256CEDFB8();
  OUTLINED_FUNCTION_83_0();
  uint64_t v15 = *(void *)(v0 + 144);
  sub_256CEDFB8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_3();
  *(void *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  sub_256CEE3B8();
  sub_256CEDD18();
  swift_bridgeObjectRelease();
  swift_willThrow();
  sub_256C263EC(v15, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_98_0();
  return v16();
}

uint64_t sub_256C1D72C()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_256C1D76C()
{
  OUTLINED_FUNCTION_15();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 40);
  char v6 = *(unsigned char *)(v0 + 32);
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_14(v7);
  *unint64_t v8 = v9;
  v8[1] = sub_256C1D828;
  return sub_256C1C994(v2, v3, v4, v6, v5);
}

uint64_t sub_256C1D828()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C1D8EC()
{
  *(void *)(v1 + 48) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C1D908, v0);
}

uint64_t sub_256C1D908()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_78_0();
  *(void *)(v1 + 56) = *(void *)(v0 + 112);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4EA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  *uint64_t v2 = v1;
  v2[1] = sub_256C1D9E0;
  uint64_t v3 = OUTLINED_FUNCTION_119();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_256C1D9E0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = *v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  uint64_t v5 = *(void *)(v0 + 48);
  if (v1)
  {

    swift_release();
    char v6 = sub_256C1DB88;
  }
  else
  {
    swift_release();
    char v6 = sub_256C1DB0C;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_256C1DB0C()
{
  OUTLINED_FUNCTION_2();
  sub_256CEDD18();
  swift_release();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C1DB88()
{
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C1DBA0()
{
  *(void *)(v1 + 48) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C1DBBC, v0);
}

uint64_t sub_256C1DBBC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_78_0();
  *(void *)(v1 + 56) = *(void *)(v0 + 112);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4EA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  *uint64_t v2 = v1;
  v2[1] = sub_256C1DC94;
  uint64_t v3 = OUTLINED_FUNCTION_119();
  return MEMORY[0x270FA1FA8](v3);
}

uint64_t sub_256C1DC94()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C1DDA4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 40));
}

uint64_t sub_256C1DDC0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_256C1DDD8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t v3 = type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(v2);
  OUTLINED_FUNCTION_21(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C1DE50()
{
  OUTLINED_FUNCTION_2();
  sub_256C26398(v0[2], v0[4], (void (*)(void))type metadata accessor for InferenceProviderPrewarmInformation);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_39();
  v0[5] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C1DEF8;
  uint64_t v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_101_0((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v11);
  return v9();
}

uint64_t sub_256C1DEF8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 32);
  *uint64_t v4 = *v2;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_256C263EC(v5, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C1E01C()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v0();
}

uint64_t sub_256C1E074()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C1E0D0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v0;
  uint64_t v9 = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
  *(void *)(v1 + 32) = v9;
  OUTLINED_FUNCTION_21(v9);
  uint64_t v10 = OUTLINED_FUNCTION_51_0();
  uint64_t v11 = *v7;
  uint64_t v12 = v7[1];
  *(void *)(v1 + 40) = v10;
  *(void *)(v1 + 48) = v11;
  *(void *)(v1 + 56) = v12;
  *(_OWORD *)(v1 + 64) = *((_OWORD *)v7 + 1);
  *(unsigned char *)(v1 + 96) = *v5;
  *(unsigned char *)(v1 + 97) = *v3;
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v13, v14, v15);
}

uint64_t sub_256C1E184()
{
  OUTLINED_FUNCTION_59();
  __int16 v1 = *(_WORD *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 40);
  sub_256BFD41C(*(void *)(v0 + 16), v6 + *(int *)(*(void *)(v0 + 32) + 28), &qword_26B2C7798);
  *(void *)uint64_t v6 = v5;
  *(void *)(v6 + 8) = v4;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v2;
  *(_WORD *)(v6 + 32) = v1;
  uint64_t v9 = (uint64_t (*)(void))((char *)&dword_269FC37F0 + dword_269FC37F0);
  sub_256CEDEC8();
  sub_256CEDEC8();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_256C1E284;
  return v9();
}

uint64_t sub_256C1E284()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 40);
  *uint64_t v4 = *v2;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_256C263EC(v5, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C1E3A8()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v0();
}

uint64_t sub_256C1E400()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C1E45C()
{
  OUTLINED_FUNCTION_2();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
  OUTLINED_FUNCTION_21(v3);
  v1[7] = OUTLINED_FUNCTION_51_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v4);
  v1[8] = OUTLINED_FUNCTION_38();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C1E514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint8_t *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_47_3();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_95();
  a22 = v24;
  if (qword_269FC2720 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_256CEDC88();
  v24[11] = __swift_project_value_buffer(v27, (uint64_t)qword_269FC3790);
  uint64_t v28 = OUTLINED_FUNCTION_51();
  sub_256BFD41C(v28, v29, v30);
  uint64_t v31 = sub_256CEDC68();
  os_log_type_t v32 = sub_256CEE2D8();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v34 = v24[10];
  if (v33)
  {
    a11 = v24 + 4;
    uint64_t v35 = v24[9];
    uint64_t v36 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    a13 = OUTLINED_FUNCTION_23_0();
    *(_DWORD *)uint64_t v36 = 136315138;
    a10 = v36 + 4;
    sub_256BFD41C(v34, v35, &qword_26B2C7798);
    uint64_t v37 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v39 = v38;
    sub_256BE33C8(v35, &qword_26B2C7798);
    v24[4] = sub_256BE14CC(v37, v39, &a13);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256BE33C8(v34, &qword_26B2C7798);
    _os_log_impl(&dword_256BD4000, v31, v32, "Sending InferenceProvider EndOfStream message for %s", v36, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256BE33C8(v24[10], &qword_26B2C7798);
  }

  sub_256BFD41C(v24[5], v24[7], &qword_26B2C7798);
  uint64_t v50 = (char *)&dword_269FC3800 + dword_269FC3800;
  uint64_t v40 = (void *)swift_task_alloc();
  v24[12] = v40;
  *uint64_t v40 = v24;
  v40[1] = sub_256C1E770;
  OUTLINED_FUNCTION_22();
  return v42(v41, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, v50, a13, a14, a15, a16);
}

uint64_t sub_256C1E770()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v8 = v7;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  sub_256C263EC(v6, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
  if (v0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    return MEMORY[0x270FA2498](sub_256C1E8CC, v9, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256C1E8CC()
{
  os_log_type_t v18 = v0;
  uint64_t v1 = v0[13];
  sub_256BFD41C(v0[5], v0[8], &qword_26B2C7798);
  MEMORY[0x25A2AE9C0](v1);
  MEMORY[0x25A2AE9C0](v1);
  uint64_t v2 = sub_256CEDC68();
  os_log_type_t v3 = sub_256CEE2B8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (void *)v0[13];
    uint64_t v6 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v16 = (void *)OUTLINED_FUNCTION_22_0();
    uint64_t v17 = OUTLINED_FUNCTION_23_0();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_256BFD41C(v6, v5, &qword_26B2C7798);
    uint64_t v8 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v10 = v9;
    sub_256BE33C8(v5, &qword_26B2C7798);
    v0[2] = sub_256BE14CC(v8, v10, &v17);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256BE33C8(v6, &qword_26B2C7798);
    *(_WORD *)(v7 + 12) = 2112;
    MEMORY[0x25A2AE9C0](v4);
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v11;
    sub_256CEE308();
    *uint64_t v16 = v11;

    _os_log_impl(&dword_256BD4000, v2, v3, "Error occurred while sending EndOfStream message for %s: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    uint64_t v12 = (void *)v0[13];
    uint64_t v13 = v0[8];

    sub_256BE33C8(v13, &qword_26B2C7798);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v14();
}

uint64_t sub_256C1EB60()
{
  OUTLINED_FUNCTION_2();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  v1[4] = v5;
  uint64_t NextStreamResultsRequest = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  OUTLINED_FUNCTION_21(NextStreamResultsRequest);
  v1[9] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C1EBE4()
{
  OUTLINED_FUNCTION_12();
  sub_256BFD41C(v0[5], v0[9], &qword_26B2C7798);
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_77();
  v0[10] = (uint64_t)v1;
  *uint64_t v1 = v2;
  v1[1] = sub_256C1EC94;
  uint64_t v3 = v0[9];
  return v5(v0 + 2, v3);
}

uint64_t sub_256C1EC94()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C263EC(*(void *)(v4 + 72), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C1EDB4()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 96) = *(void *)(v0 + 16);
  int v1 = *(unsigned __int8 *)(v0 + 24);
  *(unsigned char *)(v0 + 25) = v1;
  if (v1 == 1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_256C1EF0C;
    OUTLINED_FUNCTION_108();
    return sub_256C1E45C();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 48) + **(int **)(v0 + 48));
    sub_256CEDEC8();
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    *(void *)(v0 + 112) = v4;
    *uint64_t v4 = v5;
    v4[1] = sub_256C1F0D8;
    uint64_t v6 = *(unsigned __int8 *)(v0 + 25);
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 32);
    return v9(v8, v7, v6);
  }
}

uint64_t sub_256C1EF0C()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v0;
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 48) + **(int **)(v1 + 48));
  sub_256CEDEC8();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 112) = v5;
  void *v5 = v4;
  v5[1] = sub_256C1F0D8;
  uint64_t v6 = *(unsigned __int8 *)(v2 + 25);
  uint64_t v7 = *(void *)(v2 + 96);
  uint64_t v8 = *(void *)(v1 + 32);
  return v10(v8, v7, v6);
}

uint64_t sub_256C1F0D8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v3();
}

uint64_t sub_256C1F1D8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C1F260;
  OUTLINED_FUNCTION_108();
  return sub_256C1E45C();
}

uint64_t sub_256C1F260()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C1F340()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void **)(v0 + 88);
  type metadata accessor for ModelManagerError();
  sub_256C255E4(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  OUTLINED_FUNCTION_94();
  uint64_t v3 = v2;
  MEMORY[0x25A2AE9C0](v1);
  ModelManagerError.init(wrapping:)(v1, v3);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_256C1F430()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  *(unsigned char *)(v1 + 80) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  uint64_t v6 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
  *(void *)(v1 + 48) = v6;
  OUTLINED_FUNCTION_21(v6);
  *(void *)(v1 + 56) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C1F4B8()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(unsigned char **)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 80);
  sub_256C26398(*(void *)(v0 + 24), (uint64_t)&v2[*(int *)(v1 + 20)], (void (*)(void))type metadata accessor for ClientData);
  sub_256C26398(v3, (uint64_t)&v2[*(int *)(v1 + 24)], (void (*)(void))type metadata accessor for InferenceProviderRequestConfiguration);
  type metadata accessor for InferenceProviderRequestConfiguration(0);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  uint64_t v5 = OUTLINED_FUNCTION_97();
  v6(v5);
  *uint64_t v2 = v4;
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 64) = v7;
  *uint64_t v7 = v8;
  v7[1] = sub_256C1F5F0;
  uint64_t v9 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 16);
  return v12(v10, v9);
}

uint64_t sub_256C1F5F0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2_5();
  *char v4 = v3;
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v8 = v7;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  sub_256C263EC(v6, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  if (v0)
  {
    uint64_t v9 = *(void *)(v3 + 40);
    return MEMORY[0x270FA2498](sub_256C1F730, v9, 0);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256C1F730()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_256C1F790()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t v3 = type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(v2);
  OUTLINED_FUNCTION_21(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C1F808()
{
  OUTLINED_FUNCTION_2();
  sub_256BFD41C(v0[2], v0[4], &qword_26B2C7798);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_39();
  v0[5] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C1F8A4;
  uint64_t v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_101_0((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v11);
  return v9();
}

uint64_t sub_256C1F8A4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 32);
  *uint64_t v4 = *v2;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_256C263EC(v5, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C1F9C8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  uint64_t v4 = OUTLINED_FUNCTION_123(v3);
  uint64_t v5 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(v4);
  v0[4] = v5;
  OUTLINED_FUNCTION_21(v5);
  uint64_t v6 = OUTLINED_FUNCTION_51_0();
  uint64_t v7 = *v2;
  v0[5] = v6;
  v0[6] = v7;
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_256C1FA4C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0[5];
  unint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_256BFD41C(v0[2], v1, &qword_26B2C7798);
  *(void *)(v1 + *(int *)(v3 + 20)) = v2;
  sub_256C255D4(v2);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_39();
  v0[7] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_256C1FB14;
  return v6();
}

uint64_t sub_256C1FB14()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 40);
  *uint64_t v4 = *v2;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  sub_256C263EC(v5, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C1FC38()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C1FC94()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t v3 = type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(v2);
  OUTLINED_FUNCTION_21(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C1FD0C()
{
  OUTLINED_FUNCTION_2();
  sub_256BFD41C(v0[2], v0[4], &qword_26B2C7798);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_39();
  v0[5] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C1FDA8;
  uint64_t v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_101_0((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v11);
  return v9();
}

uint64_t sub_256C1FDA8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = *v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = *(void *)(v0 + 24);
  if (v1)
  {

    sub_256C263EC(v6, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest);
    uint64_t v8 = sub_256C2652C;
  }
  else
  {
    sub_256C263EC(v6, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest);
    uint64_t v8 = sub_256C1FEFC;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256C1FEFC()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C1FF54(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_256CEDDE8();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  v3[18] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[19] = v5;
  void *v5 = v3;
  v5[1] = sub_256C20100;
  return sub_256C1DBA0();
}

uint64_t sub_256C20100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  OUTLINED_FUNCTION_68_0(v15);
  if (v10)
  {
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_2();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    return MEMORY[0x270FA2498](v25, v26, v27);
  }
}

uint64_t sub_256C20238()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = OUTLINED_FUNCTION_67_0();
  sub_256C26398(v1, v0, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  OUTLINED_FUNCTION_51();
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = OUTLINED_FUNCTION_11_4();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_35_4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C202EC;
  uint64_t v5 = OUTLINED_FUNCTION_20_6();
  return v6(v5);
}

uint64_t sub_256C202EC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C263EC(*(void *)(v4 + 136), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C20570: call analysis failed (funcsize=236)"

uint64_t sub_256C2080C(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_256CEDDE8();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  v3[18] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[19] = v5;
  void *v5 = v3;
  v5[1] = sub_256C209B8;
  return sub_256C1DBA0();
}

uint64_t sub_256C209B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  OUTLINED_FUNCTION_68_0(v15);
  if (v10)
  {
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_2();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    return MEMORY[0x270FA2498](v25, v26, v27);
  }
}

uint64_t sub_256C20AF0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = OUTLINED_FUNCTION_67_0();
  sub_256C26398(v1, v0, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  OUTLINED_FUNCTION_51();
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = OUTLINED_FUNCTION_11_4();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_35_4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C20BA4;
  uint64_t v5 = OUTLINED_FUNCTION_20_6();
  return v6(v5);
}

uint64_t sub_256C20BA4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C263EC(*(void *)(v4 + 136), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C20CC4()
{
  OUTLINED_FUNCTION_2();
  v1[6] = v2;
  v1[7] = v0;
  v1[5] = v3;
  uint64_t v4 = sub_256CEDDE8();
  v1[8] = v4;
  OUTLINED_FUNCTION_6(v4);
  v1[9] = v5;
  v1[10] = OUTLINED_FUNCTION_38();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ModelManagerError();
  v1[13] = v6;
  OUTLINED_FUNCTION_21(v6);
  v1[14] = OUTLINED_FUNCTION_38();
  v1[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for InferenceProviderXPCRequest(0);
  v1[16] = v7;
  OUTLINED_FUNCTION_21(v7);
  v1[17] = OUTLINED_FUNCTION_51_0();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38D0);
  OUTLINED_FUNCTION_21(v8);
  v1[18] = OUTLINED_FUNCTION_51_0();
  uint64_t v9 = (void *)swift_task_alloc();
  v1[19] = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_256C20E14;
  return sub_256C1DBA0();
}

uint64_t sub_256C20E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  OUTLINED_FUNCTION_68_0(v15);
  if (v10)
  {
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_2();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    return MEMORY[0x270FA2498](v25, v26, v27);
  }
}

uint64_t sub_256C20F4C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = OUTLINED_FUNCTION_67_0();
  sub_256C26398(v1, v0, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_51();
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = OUTLINED_FUNCTION_11_4();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_35_4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C21000;
  uint64_t v5 = OUTLINED_FUNCTION_20_6();
  return v6(v5);
}

uint64_t sub_256C21000()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C263EC(*(void *)(v4 + 136), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C21284: call analysis failed (funcsize=236)"

uint64_t sub_256C21520(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_256CEDDE8();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38C8);
  v3[18] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[19] = v5;
  void *v5 = v3;
  v5[1] = sub_256C216CC;
  return sub_256C1DBA0();
}

uint64_t sub_256C216CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  OUTLINED_FUNCTION_68_0(v15);
  if (v10)
  {
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_2();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    return MEMORY[0x270FA2498](v25, v26, v27);
  }
}

uint64_t sub_256C21804()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = OUTLINED_FUNCTION_67_0();
  sub_256C26398(v1, v0, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  OUTLINED_FUNCTION_51();
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = OUTLINED_FUNCTION_11_4();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_35_4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C218B8;
  uint64_t v5 = OUTLINED_FUNCTION_20_6();
  return v6(v5);
}

uint64_t sub_256C218B8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C263EC(*(void *)(v4 + 136), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C21B3C: call analysis failed (funcsize=236)"

uint64_t sub_256C21DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, NSObject *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  uint64_t v17 = *(void **)(v16 + 176);
  *(void *)(v16 + 16) = v17;
  uint64_t v18 = (void (*)(uint64_t))(v16 + 32);
  MEMORY[0x25A2AE9C0](v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  if (OUTLINED_FUNCTION_90_0())
  {

    uint64_t v19 = OUTLINED_FUNCTION_80_0();
    v20(v19);
    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v21 = *(void *)(v16 + 72);
    uint64_t v22 = sub_256CEDC88();
    __swift_project_value_buffer(v22, (uint64_t)qword_269FC3790);
    uint64_t v23 = *(void (**)(void))(v21 + 16);
    OUTLINED_FUNCTION_41_0();
    v23();
    uint64_t v24 = sub_256CEDC68();
    os_log_type_t v25 = sub_256CEE2D8();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      HIDWORD(a10) = v26;
      OUTLINED_FUNCTION_24_0();
      a11 = v24;
      OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_93_0(5.7779e-34);
      sub_256C255E4((unint64_t *)&qword_26B2C4860, MEMORY[0x263F8F408]);
      uint64_t v27 = OUTLINED_FUNCTION_10_3();
      uint64_t v29 = OUTLINED_FUNCTION_38_3(v27, v28);
      ((void (*)(uint64_t))v23)(v29);
      uint64_t v23 = (void (*)(void))_swift_stdlib_bridgeErrorToNSError();
      OUTLINED_FUNCTION_58_3((uint64_t)v23);
      uint64_t v30 = OUTLINED_FUNCTION_55_2();
      v18(v30);
      OUTLINED_FUNCTION_112_0(&dword_256BD4000, v24, (os_log_type_t)v26, "XPC Connection error: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      uint64_t v38 = OUTLINED_FUNCTION_79_0();
      v18(v38);
    }
    uint64_t v39 = *(void *)(v16 + 88);
    uint64_t v40 = *(void *)(v16 + 64);

    sub_256C255E4((unint64_t *)&qword_26B2C4860, MEMORY[0x263F8F408]);
    uint64_t v41 = OUTLINED_FUNCTION_10_3();
    uint64_t v43 = OUTLINED_FUNCTION_38_3(v41, v42);
    ((void (*)(uint64_t))v23)(v43);
    swift_willThrow();
    swift_release();
    ((void (*)(uint64_t, uint64_t))v18)(v39, v40);
  }
  else
  {

    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_256CEDC88();
    __swift_project_value_buffer(v31, (uint64_t)qword_269FC3790);
    MEMORY[0x25A2AE9C0](v17);
    MEMORY[0x25A2AE9C0](v17);
    os_log_type_t v32 = sub_256CEDC68();
    os_log_type_t v33 = sub_256CEE298();
    if (os_log_type_enabled(v32, v33))
    {
      a12 = v16 + 32;
      OUTLINED_FUNCTION_24_0();
      uint64_t v34 = (void *)OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_110(5.7779e-34);
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v16 + 24) = v35;
      OUTLINED_FUNCTION_61_3();
      *uint64_t v34 = v35;

      OUTLINED_FUNCTION_117(&dword_256BD4000, v36, v37, "Error from IP, passing along: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      OUTLINED_FUNCTION_44();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_98_0();
  OUTLINED_FUNCTION_22();
  return v45(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_256C221E0(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_256CEDDE8();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  v3[18] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[19] = v5;
  void *v5 = v3;
  v5[1] = sub_256C2238C;
  return sub_256C1DBA0();
}

uint64_t sub_256C2238C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  OUTLINED_FUNCTION_68_0(v15);
  if (v10)
  {
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_2();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    return MEMORY[0x270FA2498](v25, v26, v27);
  }
}

uint64_t sub_256C224C4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = OUTLINED_FUNCTION_67_0();
  sub_256C26398(v1, v0, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  OUTLINED_FUNCTION_51();
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = OUTLINED_FUNCTION_11_4();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_35_4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C20BA4;
  uint64_t v5 = OUTLINED_FUNCTION_20_6();
  return v6(v5);
}

uint64_t sub_256C22578(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_256CEDDE8();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  v3[18] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[19] = v5;
  void *v5 = v3;
  v5[1] = sub_256C22724;
  return sub_256C1DBA0();
}

uint64_t sub_256C22724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  OUTLINED_FUNCTION_68_0(v15);
  if (v10)
  {
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_2();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    return MEMORY[0x270FA2498](v25, v26, v27);
  }
}

uint64_t sub_256C2285C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = OUTLINED_FUNCTION_67_0();
  sub_256C26398(v1, v0, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
  OUTLINED_FUNCTION_51();
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = OUTLINED_FUNCTION_11_4();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_35_4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C20BA4;
  uint64_t v5 = OUTLINED_FUNCTION_20_6();
  return v6(v5);
}

uint64_t sub_256C22910(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_256CEDDE8();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  v3[18] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[19] = v5;
  void *v5 = v3;
  v5[1] = sub_256C22ABC;
  return sub_256C1DBA0();
}

uint64_t sub_256C22ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  OUTLINED_FUNCTION_68_0(v15);
  if (v10)
  {
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_2();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    return MEMORY[0x270FA2498](v25, v26, v27);
  }
}

uint64_t sub_256C22BF4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = OUTLINED_FUNCTION_67_0();
  sub_256C26398(v1, v0, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest);
  OUTLINED_FUNCTION_51();
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = OUTLINED_FUNCTION_11_4();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_35_4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C20BA4;
  uint64_t v5 = OUTLINED_FUNCTION_20_6();
  return v6(v5);
}

uint64_t sub_256C22CA8()
{
  OUTLINED_FUNCTION_15();
  v1[12] = v2;
  v1[13] = v0;
  v1[10] = v3;
  v1[11] = v4;
  v1[9] = v5;
  uint64_t v6 = sub_256CEDDE8();
  v1[14] = v6;
  OUTLINED_FUNCTION_6(v6);
  v1[15] = v7;
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[22] = AssociatedTypeWitness;
  OUTLINED_FUNCTION_6(AssociatedTypeWitness);
  v1[23] = v9;
  v1[24] = OUTLINED_FUNCTION_51_0();
  v1[25] = swift_getAssociatedTypeWitness();
  v1[26] = sub_256C255E4(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  uint64_t v10 = type metadata accessor for ModelXPCResult();
  v1[27] = v10;
  OUTLINED_FUNCTION_6(v10);
  v1[28] = v11;
  v1[29] = OUTLINED_FUNCTION_51_0();
  uint64_t v12 = (void *)swift_task_alloc();
  v1[30] = v12;
  *uint64_t v12 = v1;
  v12[1] = sub_256C22ECC;
  return sub_256C1DBA0();
}

uint64_t sub_256C22ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v14 = v13;
  *uint64_t v14 = *v11;
  *(void *)(v13 + 248) = v15;
  swift_task_dealloc();
  if (v10)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_2();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    return MEMORY[0x270FA2498](v25, v26, v27);
  }
}

uint64_t sub_256C23020()
{
  (*(void (**)(void, void))(v0[12] + 72))(v0[11], v0[12]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[32] = v1;
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_121();
  uint64_t v2 = OUTLINED_FUNCTION_120();
  uint64_t v3 = OUTLINED_FUNCTION_120();
  uint64_t v4 = sub_256C255E4(&qword_26B2C9150, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  uint64_t v5 = sub_256C255E4(&qword_26B2C9148, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  v0[2] = v2;
  v0[3] = v3;
  v0[4] = v4;
  v0[5] = v5;
  swift_getWitnessTable();
  *uint64_t v1 = v0;
  v1[1] = sub_256C231FC;
  return XPCSession.sendWithTaskCancellationWithReply<A, B>(_:)();
}

uint64_t sub_256C231FC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 264) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_100();
  v4();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C23378: call analysis failed (funcsize=272)"

uint64_t sub_256C237B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, NSObject *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  uint64_t v17 = *(void **)(v16 + 264);
  *(void *)(v16 + 48) = v17;
  uint64_t v18 = (void (*)(uint64_t))(v16 + 64);
  MEMORY[0x25A2AE9C0](v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  if (OUTLINED_FUNCTION_90_0())
  {

    uint64_t v19 = OUTLINED_FUNCTION_80_0();
    v20(v19);
    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v21 = *(void *)(v16 + 120);
    uint64_t v22 = sub_256CEDC88();
    __swift_project_value_buffer(v22, (uint64_t)qword_269FC3790);
    uint64_t v23 = *(void (**)(void))(v21 + 16);
    OUTLINED_FUNCTION_41_0();
    v23();
    uint64_t v24 = sub_256CEDC68();
    os_log_type_t v25 = sub_256CEE2D8();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      HIDWORD(a10) = v26;
      OUTLINED_FUNCTION_24_0();
      a11 = v24;
      OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_93_0(5.7779e-34);
      sub_256C255E4((unint64_t *)&qword_26B2C4860, MEMORY[0x263F8F408]);
      uint64_t v27 = OUTLINED_FUNCTION_10_3();
      uint64_t v29 = OUTLINED_FUNCTION_38_3(v27, v28);
      ((void (*)(uint64_t))v23)(v29);
      uint64_t v23 = (void (*)(void))_swift_stdlib_bridgeErrorToNSError();
      *(void *)(v16 + 64) = v23;
      sub_256CEE308();
      uint64_t v30 = OUTLINED_FUNCTION_55_2();
      v18(v30);
      OUTLINED_FUNCTION_112_0(&dword_256BD4000, v24, (os_log_type_t)v26, "XPC Connection error: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      uint64_t v38 = OUTLINED_FUNCTION_79_0();
      v18(v38);
    }
    uint64_t v39 = *(void *)(v16 + 136);
    uint64_t v40 = *(void *)(v16 + 112);

    sub_256C255E4((unint64_t *)&qword_26B2C4860, MEMORY[0x263F8F408]);
    uint64_t v41 = OUTLINED_FUNCTION_10_3();
    uint64_t v43 = OUTLINED_FUNCTION_38_3(v41, v42);
    ((void (*)(uint64_t))v23)(v43);
    swift_willThrow();
    swift_release();
    ((void (*)(uint64_t, uint64_t))v18)(v39, v40);
  }
  else
  {

    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_256CEDC88();
    __swift_project_value_buffer(v31, (uint64_t)qword_269FC3790);
    MEMORY[0x25A2AE9C0](v17);
    MEMORY[0x25A2AE9C0](v17);
    os_log_type_t v32 = sub_256CEDC68();
    os_log_type_t v33 = sub_256CEE298();
    if (os_log_type_enabled(v32, v33))
    {
      a12 = v16 + 64;
      OUTLINED_FUNCTION_24_0();
      uint64_t v34 = (void *)OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_110(5.7779e-34);
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v16 + 56) = v35;
      OUTLINED_FUNCTION_61_3();
      *uint64_t v34 = v35;

      OUTLINED_FUNCTION_117(&dword_256BD4000, v36, v37, "Error from IP, passing along: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      OUTLINED_FUNCTION_44();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_98_0();
  OUTLINED_FUNCTION_22();
  return v45(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_256C23BD4(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = sub_256CEDDE8();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  v2[12] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[13] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_256C23D08;
  return sub_256C1DBA0();
}

uint64_t sub_256C23D08()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 112) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + 48);
    return MEMORY[0x270FA2498](sub_256C23E38, v8, 0);
  }
}

uint64_t sub_256C23E38()
{
  OUTLINED_FUNCTION_2();
  sub_256C26398(v0[5], v0[12], (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_39();
  v0[15] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C23EF0;
  uint64_t v2 = v0[12];
  return v4(v2);
}

uint64_t sub_256C23EF0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C263EC(*(void *)(v4 + 96), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.Notification);
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C24010()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v0();
}

uint64_t sub_256C24098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, NSObject *a10, void (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  *(void *)(v16 + 16) = *(void *)(v16 + 128);
  MEMORY[0x25A2AE9C0]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  if (OUTLINED_FUNCTION_91_0())
  {

    uint64_t v17 = OUTLINED_FUNCTION_82_0();
    v18(v17);
    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v19 = *(void *)(v16 + 56);
    uint64_t v20 = *(void *)(v16 + 64);
    uint64_t v21 = sub_256CEDC88();
    __swift_project_value_buffer(v21, (uint64_t)qword_269FC3790);
    uint64_t v22 = *(void (**)(void))(v20 + 16);
    OUTLINED_FUNCTION_41_0();
    v23();
    uint64_t v24 = sub_256CEDC68();
    os_log_type_t v25 = sub_256CEE2D8();
    BOOL v26 = OUTLINED_FUNCTION_70(v25);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v16 + 56);
    if (v26)
    {
      OUTLINED_FUNCTION_24_0();
      a11 = v22;
      a10 = v24;
      uint64_t v24 = OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_94_0(5.7779e-34);
      sub_256C255E4((unint64_t *)&qword_26B2C4860, MEMORY[0x263F8F408]);
      OUTLINED_FUNCTION_10_3();
      OUTLINED_FUNCTION_41_0();
      v28();
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      OUTLINED_FUNCTION_58_3(v29);
      uint64_t v30 = OUTLINED_FUNCTION_57_3();
      v31(v30);
      OUTLINED_FUNCTION_59_0(&dword_256BD4000, a10, (os_log_type_t)v19, "XPC Connection error: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      OUTLINED_FUNCTION_89_0();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      uint64_t v41 = OUTLINED_FUNCTION_75_0();
      v42(v41);
    }
    uint64_t v43 = *(void *)(v16 + 80);
    uint64_t v44 = *(void *)(v16 + 56);

    sub_256C255E4((unint64_t *)&qword_26B2C4860, MEMORY[0x263F8F408]);
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_41_0();
    v22();
    swift_willThrow();
    swift_release();
    v27(v43, v44);
  }
  else
  {

    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v32 = *(void *)(v16 + 128);
    uint64_t v33 = sub_256CEDC88();
    os_log_type_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_269FC3790);
    MEMORY[0x25A2AE9C0](v32);
    MEMORY[0x25A2AE9C0](v32);
    uint64_t v35 = sub_256CEDC68();
    os_log_type_t v36 = sub_256CEE298();
    BOOL v37 = OUTLINED_FUNCTION_70(v36);
    uint64_t v38 = *(void **)(v16 + 128);
    if (v37)
    {
      a12 = v16 + 32;
      OUTLINED_FUNCTION_24_0();
      uint64_t v39 = (void *)OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_116(5.7779e-34);
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v16 + 24) = v40;
      OUTLINED_FUNCTION_61_3();
      *uint64_t v39 = v40;

      OUTLINED_FUNCTION_59_0(&dword_256BD4000, v35, v34, "Error from daemon, passing along: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_22();
  return v46(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_256C244AC()
{
  OUTLINED_FUNCTION_12();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  uint64_t v5 = sub_256CEDDE8();
  v1[9] = v5;
  OUTLINED_FUNCTION_6(v5);
  v1[10] = v6;
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[14] = AssociatedTypeWitness;
  OUTLINED_FUNCTION_6(AssociatedTypeWitness);
  v1[15] = v8;
  v1[16] = OUTLINED_FUNCTION_51_0();
  uint64_t v9 = (void *)swift_task_alloc();
  v1[17] = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_256C245E8;
  return sub_256C1DBA0();
}

uint64_t sub_256C245E8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2_5();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 144) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + 64);
    return MEMORY[0x270FA2498](sub_256C2471C, v8, 0);
  }
}

uint64_t sub_256C2471C()
{
  OUTLINED_FUNCTION_30_2();
  OUTLINED_FUNCTION_59();
  (*(void (**)(void, void))(v0[7] + 72))(v0[6], v0[7]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_114();
  *uint64_t v1 = v0;
  v1[1] = sub_256C24818;
  OUTLINED_FUNCTION_9_2();
  return XPCSession.sendWithTaskCancellation<A>(_:)();
}

uint64_t sub_256C24818()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_5();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_100();
  v4();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C24954()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v0();
}

uint64_t sub_256C249E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, NSObject *a10, void (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_95();
  *(void *)(v16 + 16) = *(void *)(v16 + 160);
  uint64_t v17 = *(void *)(v16 + 72);
  MEMORY[0x25A2AE9C0]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
  if (OUTLINED_FUNCTION_91_0())
  {

    uint64_t v18 = OUTLINED_FUNCTION_82_0();
    v19(v18);
    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v20 = *(void *)(v16 + 72);
    uint64_t v21 = *(void *)(v16 + 80);
    uint64_t v22 = sub_256CEDC88();
    __swift_project_value_buffer(v22, (uint64_t)qword_269FC3790);
    uint64_t v23 = *(void (**)(void))(v21 + 16);
    OUTLINED_FUNCTION_41_0();
    v24();
    os_log_type_t v25 = sub_256CEDC68();
    os_log_type_t v26 = sub_256CEE2D8();
    BOOL v27 = OUTLINED_FUNCTION_70(v26);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v16 + 72);
    if (v27)
    {
      OUTLINED_FUNCTION_24_0();
      a11 = v23;
      a10 = v25;
      os_log_type_t v25 = OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_94_0(5.7779e-34);
      sub_256C255E4((unint64_t *)&qword_26B2C4860, MEMORY[0x263F8F408]);
      OUTLINED_FUNCTION_10_3();
      OUTLINED_FUNCTION_41_0();
      v29();
      uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
      OUTLINED_FUNCTION_58_3(v30);
      uint64_t v31 = OUTLINED_FUNCTION_57_3();
      v32(v31);
      OUTLINED_FUNCTION_59_0(&dword_256BD4000, a10, (os_log_type_t)v20, "XPC Connection error: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      OUTLINED_FUNCTION_89_0();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
      uint64_t v41 = OUTLINED_FUNCTION_75_0();
      v42(v41);
    }
    uint64_t v43 = *(void *)(v16 + 96);
    uint64_t v44 = *(void *)(v16 + 72);

    sub_256C255E4((unint64_t *)&qword_26B2C4860, MEMORY[0x263F8F408]);
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_41_0();
    v23();
    swift_willThrow();
    swift_release();
    v28(v43, v44);
  }
  else
  {

    if (qword_269FC2720 != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)(v16 + 160);
    uint64_t v34 = sub_256CEDC88();
    __swift_project_value_buffer(v34, (uint64_t)qword_269FC3790);
    MEMORY[0x25A2AE9C0](v33);
    MEMORY[0x25A2AE9C0](v33);
    uint64_t v35 = sub_256CEDC68();
    os_log_type_t v36 = sub_256CEE298();
    BOOL v37 = OUTLINED_FUNCTION_70(v36);
    uint64_t v38 = *(void **)(v16 + 160);
    if (v37)
    {
      a12 = v16 + 32;
      OUTLINED_FUNCTION_24_0();
      uint64_t v39 = (void *)OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_116(5.7779e-34);
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v16 + 24) = v40;
      OUTLINED_FUNCTION_61_3();
      *uint64_t v39 = v40;

      OUTLINED_FUNCTION_59_0(&dword_256BD4000, v35, (os_log_type_t)v17, "Error from daemon, passing along: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {
    }
    swift_willThrow();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_22();
  return v46(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_256C24DF8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4F08);
  v2[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C24E8C, 0, 0);
}

uint64_t sub_256C24E8C()
{
  OUTLINED_FUNCTION_15();
  uint64_t v2 = v0[6];
  uint64_t v1 = (void *)v0[7];
  sub_256C53C0C(v0[5], v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  v0[8] = inited;
  *(_DWORD *)(inited + 20) = 0;
  *(unsigned char *)(inited + 16) = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = (uint64_t)v4;
  v4[2] = inited;
  v4[3] = v1;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = (uint64_t)v5;
  v5[2] = inited;
  v5[3] = v2;
  v5[4] = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v6;
  void *v6 = v0;
  v6[1] = sub_256C24FD4;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2338](v6, &unk_269FC38E8, v4, sub_256C262E4, v5, 0, 0, v7);
}

uint64_t sub_256C24FD4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_256C25168;
  }
  else {
    uint64_t v7 = sub_256C250F8;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_256C250F8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  sub_256BE33C8(v1, &qword_26B2C4F08);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v2();
}

uint64_t sub_256C25168()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  sub_256BE33C8(v1, &qword_26B2C4F08);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v2();
}

uint64_t InferenceProviderXPCSender.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t InferenceProviderXPCSender.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t InferenceProviderXPCSender.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_256C25248()
{
  return InferenceProviderXPCSender.unownedExecutor.getter();
}

uint64_t sub_256C25264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C25288, 0, 0);
}

uint64_t sub_256C25288()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 32);
  uint64_t v2 = v1 + 4;
  v1 += 5;
  os_unfair_lock_lock(v1);
  sub_256C26328(v2);
  os_unfair_lock_unlock(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C25344(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4F08);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_256CEDC88();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B2C9168);
  sub_256BFD41C(a2, (uint64_t)v8, &qword_26B2C4F08);
  uint64_t v10 = sub_256CEDC68();
  os_log_type_t v11 = sub_256CEE2A8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v19 = a2;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = v2;
    uint64_t v13 = v12;
    v17[1] = v6;
    *(_DWORD *)uint64_t v12 = 134217984;
    uint64_t v14 = sub_256C53DD8();
    sub_256BE33C8((uint64_t)v8, &qword_26B2C4F08);
    uint64_t v20 = v14;
    a2 = v19;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v10, v11, "Sending message %llu.", v13, 0xCu);
    uint64_t v15 = v13;
    uint64_t v3 = v18;
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256BE33C8((uint64_t)v8, &qword_26B2C4F08);
  }

  sub_256C26344();
  uint64_t result = sub_256CEDD08();
  if (!v3)
  {
    *a1 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BBF0(a2);
    }
  }
  return result;
}

void sub_256C2557C(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_256C262F0(v1);
  os_unfair_lock_unlock(v2);
}

unint64_t sub_256C255D4(unint64_t result)
{
  if (result >= 4) {
    return sub_256CEDEC8();
  }
  return result;
}

uint64_t sub_256C255E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C2562C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256BECB1C();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for InferenceProviderXPCSender()
{
  return self;
}

uint64_t method lookup function for InferenceProviderXPCSender(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InferenceProviderXPCSender);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sessionCache.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sessionCache.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sessionCache.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.__allocating_init(session:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.__allocating_init(builtInProvider:session:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.invalidate()()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(v0 + 136) + **(int **)(v0 + 136));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_14(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256C1D828;
  return v5();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.prewarmBundle(information:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_71_0();
  return v4(v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.transitionAsset(withDescriptor:to:from:requestIdentifier:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_96_0();
  return v3();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sendEndOfStream(for:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_71_0();
  return v4(v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.withNextFetchedStreamResults<A>(requestIdentifier:closure:)()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_7_0();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 176)
                                                                            + **(int **)(v10 + 176));
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_14(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_256C26524;
  return v15(v9, v7, v5, v3, v1);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.requestInference(asStream:clientData:configuration:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_96_0();
  return v3();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.directStreamHandshake(requestIdentifier:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_71_0();
  return v4(v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.willCancelActiveRequest(id:dueTo:)()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_7_0();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 200) + **(int **)(v4 + 200));
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_14(v5);
  void *v6 = v7;
  v6[1] = sub_256C26524;
  return v9(v3, v1);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.endOfStream(_:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_71_0();
  return v4(v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sendAsync<A>(_:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_7_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_96_0();
  return v3();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sendOnewayAsync<A>(_:)()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_7_0();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 224) + **(int **)(v6 + 224));
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_14(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_256C26524;
  return v11(v5, v3, v1);
}

uint64_t sub_256C26248()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C25264(v3, v4, v5, v6);
}

void sub_256C262E4()
{
  sub_256C2557C(*(os_unfair_lock_s **)(v0 + 16));
}

unsigned char *sub_256C262F0(unsigned char *result)
{
  if (*result == 1) {
    return (unsigned char *)sub_256C5BBF0(*(void *)(v1 + 24));
  }
  return result;
}

uint64_t sub_256C26328(unsigned char *a1)
{
  return sub_256C25344(a1, *(void *)(v1 + 16));
}

unint64_t sub_256C26344()
{
  unint64_t result = qword_269FC38F0;
  if (!qword_269FC38F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C4F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269FC38F0);
  }
  return result;
}

uint64_t sub_256C26398(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_97();
  v5(v4);
  return a2;
}

uint64_t sub_256C263EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v3();
  return a1;
}

uint64_t sub_256C26440()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256C26478()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C26524;
  return sub_256C1B654(v1);
}

void OUTLINED_FUNCTION_48_3(float a1)
{
  *uint64_t v1 = a1;
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_58_3(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_60_3()
{
  return sub_256CEDFB8();
}

uint64_t OUTLINED_FUNCTION_61_3()
{
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_74_0()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_76_0()
{
  *(void *)(v0 + 16) = v1;
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_85()
{
  return sub_256CEDC88();
}

void OUTLINED_FUNCTION_88_0(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_93_0(float a1)
{
  *uint64_t v1 = a1;
}

void OUTLINED_FUNCTION_94_0(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_99_1()
{
  return v0;
}

void OUTLINED_FUNCTION_102_0()
{
}

uint64_t OUTLINED_FUNCTION_107(uint64_t a1, uint64_t a2)
{
  return sub_256C09E84(v2, a2);
}

uint64_t OUTLINED_FUNCTION_108()
{
  return *(void *)(v0 + 40);
}

void OUTLINED_FUNCTION_117(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_120()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t ModelXPCSender.loadAssetBundle(_:dynamicMode:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 56) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C2681C);
}

uint64_t sub_256C2681C()
{
  OUTLINED_FUNCTION_2();
  sub_256CEDEC8();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_217(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256C268B8;
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 16);
  return sub_256C2AFC8((uint64_t)v2, v6, v4, v5);
}

uint64_t sub_256C268B8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t ModelXPCSender.holdAssetBundle(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C269D8);
}

uint64_t sub_256C269D8()
{
  OUTLINED_FUNCTION_2();
  sub_256CEDEC8();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_217(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256C268B8;
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 16);
  return sub_256C2B158((uint64_t)v2, v5, v4);
}

uint64_t ModelXPCSender.forceAssetVersionSwitch()()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26AF4;
  return sub_256C2B210((uint64_t)v1);
}

uint64_t sub_256C26AF4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 24) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C26BD4(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C26C6C, 0, 0);
}

uint64_t sub_256C26C6C()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8340);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C26D84()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  void *v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C26E74(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C26F0C, 0, 0);
}

uint64_t sub_256C26F0C()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7DF0);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C27024(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C270BC, 0, 0);
}

uint64_t sub_256C270BC()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3DF0);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C271D4(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C2726C, 0, 0);
}

uint64_t sub_256C2726C()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D98);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C27384(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C2741C, 0, 0);
}

uint64_t sub_256C2741C()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4158);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C27534(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C275CC, 0, 0);
}

uint64_t sub_256C275CC()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4100);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C276E4(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C2777C, 0, 0);
}

uint64_t sub_256C2777C()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC40A8);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C27894(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C2792C, 0, 0);
}

uint64_t sub_256C2792C()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C52D0);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C27A44(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C27ADC, 0, 0);
}

uint64_t sub_256C27ADC()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C78);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C27BF4()
{
  OUTLINED_FUNCTION_2();
  v1[6] = v2;
  v1[7] = v0;
  v1[5] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C77A0);
  OUTLINED_FUNCTION_21(v4);
  v1[8] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C27C78()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest, &qword_26B2C77A0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C27D90;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C27D90()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  void *v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C27E80()
{
  OUTLINED_FUNCTION_2();
  v1[6] = v2;
  v1[7] = v0;
  v1[5] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C77A0);
  OUTLINED_FUNCTION_21(v4);
  v1[8] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C27F04()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest, &qword_26B2C77A0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38D0);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C27D90;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C2801C()
{
  OUTLINED_FUNCTION_2();
  v1[6] = v2;
  v1[7] = v0;
  v1[5] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C77A0);
  OUTLINED_FUNCTION_21(v4);
  v1[8] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C280A0()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest, &qword_26B2C77A0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38C8);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C281B8;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C281B8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  void *v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C282A8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 64);
  sub_256C53E00(v1, &qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
  sub_256C0044C(v1, &qword_26B2C77A0);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v2();
}

uint64_t sub_256C28340()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_256C53E00(v1, &qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
  sub_256C0044C(v1, &qword_26B2C77A0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_256C283F0(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C28488, 0, 0);
}

uint64_t sub_256C28488()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3FB8);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C285A0(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C28638, 0, 0);
}

uint64_t sub_256C28638()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3F60);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C28750(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C287E8, 0, 0);
}

uint64_t sub_256C287E8()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C4D80);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C28900(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C28998, 0, 0);
}

uint64_t sub_256C28998()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3EE0);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C28AB0(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C28B48, 0, 0);
}

uint64_t sub_256C28B48()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5030);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C28C60(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C28CF8, 0, 0);
}

uint64_t sub_256C28CF8()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5020);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C28E10(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C28EA8, 0, 0);
}

uint64_t sub_256C28EA8()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7BA8);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C28FC0(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C29058, 0, 0);
}

uint64_t sub_256C29058()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D18);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C29170(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C29208, 0, 0);
}

uint64_t sub_256C29208()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3CC0);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C29320(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C293B8, 0, 0);
}

uint64_t sub_256C293B8()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C20);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C294D0;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C294D0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  void *v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C295C0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 64);
  sub_256C53E00(v1, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
  sub_256C0044C(v1, &qword_26B2C8AF0);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v2();
}

uint64_t sub_256C29658()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_256C53E00(v1, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
  sub_256C0044C(v1, &qword_26B2C8AF0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_256C29708(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C297A0, 0, 0);
}

uint64_t sub_256C297A0()
{
  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_15();
  uint64_t v2 = OUTLINED_FUNCTION_122_0();
  sub_256C53AEC(v2, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AF0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_67_1(inited);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_65_2(v4);
  OUTLINED_FUNCTION_91_1(v5);
  uint64_t v6 = swift_task_alloc();
  OUTLINED_FUNCTION_179(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3BC8);
  OUTLINED_FUNCTION_120_0();
  *uint64_t v1 = v7;
  v1[1] = sub_256C26D84;
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_198();
  return MEMORY[0x270FA2338](v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_256C298B8(uint64_t a1, uint64_t *a2)
{
  type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_19();
  uint64_t v9 = v8 - v7;
  sub_256C5FC18(v2, v8 - v7, a2);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v11 = sub_256C5EDE0(v9, v3, (void (*)(void))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_296(v11, v12, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_260();
    return sub_256C5F66C(v3, (void (*)(void))type metadata accessor for ModelManagerError);
  }
  return result;
}

void *sub_256C29A28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ModelManagerError();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C78);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256C5FC18(v2, (uint64_t)v10, &qword_269FC3C78);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return memcpy(a2, v10, 0x88uLL);
  }
  sub_256C5EDE0((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for ModelManagerError);
  sub_256C5F6BC((uint64_t)v7, a1, (void (*)(void))type metadata accessor for ModelManagerError);
  sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  swift_willThrowTypedImpl();
  return (void *)sub_256C5F66C((uint64_t)v7, (void (*)(void))type metadata accessor for ModelManagerError);
}

uint64_t sub_256C29BF8(uint64_t a1)
{
  return sub_256C298B8(a1, &qword_26B2C7778);
}

uint64_t sub_256C29C18@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38D0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_53_0();
  sub_256C5FC18(v1, v3, &qword_269FC38D0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v8 = sub_256C5EDE0(v3, v2, (void (*)(void))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_296(v8, v9, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_260();
    return sub_256C5F66C(v2, (void (*)(void))type metadata accessor for ModelManagerError);
  }
  else
  {
    char v10 = *(unsigned char *)(v3 + 8);
    *(void *)a1 = *(void *)v3;
    *(unsigned char *)(a1 + 8) = v10;
  }
  return result;
}

uint64_t sub_256C29DA4@<X0>(uint64_t a1@<X8>)
{
  return sub_256C29DD8(&qword_269FC38C8, (void (*)(void))type metadata accessor for InferenceProviderRequestResult, a1);
}

uint64_t sub_256C29DD8@<X0>(uint64_t *a1@<X1>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_19();
  uint64_t v11 = v10 - v9;
  sub_256C5FC18(v3, v10 - v9, a1);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_256C5EDE0(v11, a3, a2);
  }
  uint64_t v12 = sub_256C5EDE0(v11, v4, (void (*)(void))type metadata accessor for ModelManagerError);
  OUTLINED_FUNCTION_296(v12, v13, (void (*)(void))type metadata accessor for ModelManagerError);
  sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  OUTLINED_FUNCTION_260();
  return sub_256C5F66C(v4, (void (*)(void))type metadata accessor for ModelManagerError);
}

uint64_t sub_256C29F6C@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_53_0();
  sub_256C5FC18(v2, (uint64_t)v4, a1);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v10 = sub_256C5EDE0((uint64_t)v4, v3, (void (*)(void))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_296(v10, v11, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_260();
    return sub_256C5F66C(v3, (void (*)(void))type metadata accessor for ModelManagerError);
  }
  else
  {
    *a2 = *v4;
  }
  return result;
}

uint64_t sub_256C2A0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ModelManagerError();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3CC0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256C5FC18(v2, (uint64_t)v10, &qword_269FC3CC0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    sub_256C5EDE0((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C5F6BC((uint64_t)v7, a1, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    swift_willThrowTypedImpl();
    return sub_256C5F66C((uint64_t)v7, (void (*)(void))type metadata accessor for ModelManagerError);
  }
  else
  {
    uint64_t v12 = *((void *)v10 + 4);
    long long v13 = *((_OWORD *)v10 + 1);
    *(_OWORD *)a2 = *(_OWORD *)v10;
    *(_OWORD *)(a2 + 16) = v13;
    *(void *)(a2 + 32) = v12;
  }
  return result;
}

uint64_t sub_256C2A2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ModelManagerError();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C20);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256C5FC18(v2, (uint64_t)v10, &qword_269FC3C20);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    sub_256C5EDE0((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C5F6BC((uint64_t)v7, a1, (void (*)(void))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    swift_willThrowTypedImpl();
    return sub_256C5F66C((uint64_t)v7, (void (*)(void))type metadata accessor for ModelManagerError);
  }
  else
  {
    long long v12 = *((_OWORD *)v10 + 1);
    uint64_t v13 = *((void *)v10 + 4);
    uint64_t v14 = *((void *)v10 + 5);
    char v15 = v10[64];
    *(_OWORD *)a2 = *(_OWORD *)v10;
    *(_OWORD *)(a2 + 16) = v12;
    *(void *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v14;
    *(_OWORD *)(a2 + 48) = *((_OWORD *)v10 + 3);
    *(unsigned char *)(a2 + 64) = v15;
  }
  return result;
}

uint64_t sub_256C2A49C()
{
  if (qword_26B2C89B0 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_256C2A4F8()
{
  type metadata accessor for ModelXPCSender();
  uint64_t v0 = swift_allocObject();
  uint64_t result = ModelXPCSender.init()();
  qword_26B2C9670 = v0;
  return result;
}

uint64_t ModelXPCSender.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ModelXPCSender.init()();
  return v0;
}

uint64_t ModelXPCSender.init()()
{
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_256CEDC88();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B2C8CA8);
  OUTLINED_FUNCTION_271();
  v2();
  if (qword_26B2C89B0 != -1) {
    swift_once();
  }
  *(void *)(v0 + OBJC_IVAR____TtC20ModelManagerServices14ModelXPCSender_session) = qword_26B2C9660;
  swift_retain();
  return v0;
}

uint64_t ModelXPCSender.executeRequest(modelBundleID:taskPriority:metadata:)()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v0;
  *(unsigned char *)(v1 + 144) = v3;
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 24) = v6;
  *(void *)(v1 + 32) = v7;
  uint64_t v8 = type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(0);
  *(void *)(v1 + 72) = v8;
  OUTLINED_FUNCTION_21(v8);
  *(void *)(v1 + 80) = OUTLINED_FUNCTION_51_0();
  uint64_t v9 = type metadata accessor for ModelXPCRequest.ExecuteRequest(0);
  *(void *)(v1 + 88) = v9;
  OUTLINED_FUNCTION_21(v9);
  *(void *)(v1 + 96) = OUTLINED_FUNCTION_51_0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v10);
  *(void *)(v1 + 104) = OUTLINED_FUNCTION_51_0();
  uint64_t v11 = type metadata accessor for RequestMetadata(0);
  *(void *)(v1 + 112) = v11;
  OUTLINED_FUNCTION_21(v11);
  *(void *)(v1 + 120) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

uint64_t sub_256C2A75C()
{
  uint64_t v27 = v0;
  char v1 = sub_256CEE1D8();
  uint64_t v2 = *(void *)(v0 + 56);
  if (v1)
  {
    sub_256C5F6BC(v2, *(void *)(v0 + 120), (void (*)(void))type metadata accessor for RequestMetadata);
    char v3 = sub_256CEDC68();
    os_log_type_t v4 = sub_256CEE2D8();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void *)(v0 + 120);
    if (v5)
    {
      uint64_t v7 = *(void *)(v0 + 104);
      OUTLINED_FUNCTION_24_0();
      uint64_t v26 = OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_291(4.8149e-34);
      sub_256CEDB08();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_271();
      v8();
      uint64_t v9 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      unint64_t v11 = v10;
      sub_256C0044C(v7, &qword_26B2C7798);
      uint64_t v12 = sub_256BE14CC(v9, v11, &v26);
      OUTLINED_FUNCTION_298(v12);
      swift_bridgeObjectRelease();
      sub_256C5F66C(v6, (void (*)(void))type metadata accessor for RequestMetadata);
      OUTLINED_FUNCTION_295(&dword_256BD4000, v13, v14, "Task for execute request %s cancelled before sending");
      OUTLINED_FUNCTION_270();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {

      sub_256C5F66C(v6, (void (*)(void))type metadata accessor for RequestMetadata);
    }
    type metadata accessor for ModelManagerError();
    sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_294();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v15 = *(void *)(v0 + 96);
  char v16 = *(unsigned char *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v17 = *(void *)(v0 + 48);
  sub_256C5F6BC(v2, v15 + *(int *)(*(void *)(v0 + 88) + 24), (void (*)(void))type metadata accessor for RequestMetadata);
  *(void *)uint64_t v15 = v18;
  *(void *)(v15 + 8) = v17;
  *(unsigned char *)(v15 + 16) = v16;
  sub_256CEDEC8();
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_256C2AA78;
  OUTLINED_FUNCTION_22();
  return sub_256C2B430(v20, v21);
}

uint64_t sub_256C2AA78()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *char v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 136) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C2AB58()
{
  OUTLINED_FUNCTION_59();
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  sub_256C5F66C(v0[12], (void (*)(void))type metadata accessor for ModelXPCRequest.ExecuteRequest);
  sub_256C5EDE0(v1, v3, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
  uint64_t v5 = v1 + *(int *)(v2 + 20);
  uint64_t v6 = *(void *)(v5 + 8);
  char v7 = *(unsigned char *)(v5 + 32);
  long long v8 = *(_OWORD *)(v5 + 16);
  *(void *)uint64_t v4 = *(void *)v5;
  *(void *)(v4 + 8) = v6;
  *(_OWORD *)(v4 + 16) = v8;
  *(unsigned char *)(v4 + 32) = v7;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v9();
}

uint64_t sub_256C2AC4C()
{
  OUTLINED_FUNCTION_12();
  sub_256C5F66C(*(void *)(v0 + 96), (void (*)(void))type metadata accessor for ModelXPCRequest.ExecuteRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256C2ACEC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2AD10, 0, 0);
}

uint64_t sub_256C2AD10()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2ADA4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2ADC8, 0, 0);
}

uint64_t sub_256C2ADC8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2AE5C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256C2AE7C, 0, 0);
}

uint64_t sub_256C2AE7C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_232(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCCC;
  uint64_t v3 = OUTLINED_FUNCTION_230();
  return v4(v3);
}

uint64_t sub_256C2AF10(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2AF34, 0, 0);
}

uint64_t sub_256C2AF34()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2AFC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 56) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return MEMORY[0x270FA2498](sub_256C2AFF0, 0, 0);
}

uint64_t sub_256C2AFF0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = OUTLINED_FUNCTION_39();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_275(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256C2B094;
  uint64_t v4 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 16);
  return v9(v7, v5, v6, v4);
}

uint64_t sub_256C2B094()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C2B158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C2B17C, 0, 0);
}

uint64_t sub_256C2B17C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_275(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C2B094;
  uint64_t v3 = OUTLINED_FUNCTION_290();
  return v4(v3);
}

uint64_t sub_256C2B210(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256C2B230, 0, 0);
}

uint64_t sub_256C2B230()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_232(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCCC;
  uint64_t v3 = OUTLINED_FUNCTION_230();
  return v4(v3);
}

uint64_t sub_256C2B2C4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2B2E8, 0, 0);
}

uint64_t sub_256C2B2E8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2B37C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256C2B39C, 0, 0);
}

uint64_t sub_256C2B39C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_232(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCCC;
  uint64_t v3 = OUTLINED_FUNCTION_230();
  return v4(v3);
}

uint64_t sub_256C2B430(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2B454, 0, 0);
}

uint64_t sub_256C2B454()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2B4E8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2B50C, 0, 0);
}

uint64_t sub_256C2B50C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2B5A0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2B5C4, 0, 0);
}

uint64_t sub_256C2B5C4()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2B658(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2B67C, 0, 0);
}

uint64_t sub_256C2B67C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2B710(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2B734, 0, 0);
}

uint64_t sub_256C2B734()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2B7C8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2B7EC, 0, 0);
}

uint64_t sub_256C2B7EC()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCE4;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2B880(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256C2B8A0, 0, 0);
}

uint64_t sub_256C2B8A0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_232(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C2B934;
  uint64_t v3 = OUTLINED_FUNCTION_230();
  return v4(v3);
}

uint64_t sub_256C2B934()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C2B9F8(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256C2BA18, 0, 0);
}

uint64_t sub_256C2BA18()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_232(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCCC;
  uint64_t v3 = OUTLINED_FUNCTION_230();
  return v4(v3);
}

uint64_t sub_256C2BAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C2BAD0, 0, 0);
}

uint64_t sub_256C2BAD0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_275(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCD4;
  uint64_t v3 = OUTLINED_FUNCTION_290();
  return v4(v3);
}

uint64_t sub_256C2BB64(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_256C2BB88, 0, 0);
}

uint64_t sub_256C2BB88()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_195(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C2BC1C;
  uint64_t v3 = OUTLINED_FUNCTION_194();
  return v4(v3);
}

uint64_t sub_256C2BC1C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C2BCE0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256C2BD00, 0, 0);
}

uint64_t sub_256C2BD00()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_39();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_232(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCCC;
  uint64_t v3 = OUTLINED_FUNCTION_230();
  return v4(v3);
}

uint64_t ModelXPCSender.cancelRequest(id:sessionID:)()
{
  OUTLINED_FUNCTION_2();
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v3;
  uint64_t v4 = type metadata accessor for ModelXPCRequest.CancelRequest(0);
  v1[6] = v4;
  OUTLINED_FUNCTION_21(v4);
  v1[7] = OUTLINED_FUNCTION_51_0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v5);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C2BE54()
{
  uint64_t v18 = v0;
  sub_256C5FC18(v0[3], v0[9], &qword_26B2C7798);
  uint64_t v1 = sub_256CEDC68();
  os_log_type_t v2 = sub_256CEE2D8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[9];
    uint64_t v16 = v4;
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    uint64_t v17 = OUTLINED_FUNCTION_23_0();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_256C5FC18(v4, v3, &qword_26B2C7798);
    uint64_t v6 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    unint64_t v8 = v7;
    sub_256C0044C(v3, &qword_26B2C7798);
    v0[2] = sub_256BE14CC(v6, v8, &v17);
    sub_256CEE308();
    swift_bridgeObjectRelease();
    sub_256C0044C(v16, &qword_26B2C7798);
    _os_log_impl(&dword_256BD4000, v1, v2, "Sending CancelRequest for request %s", v5, 0xCu);
    OUTLINED_FUNCTION_270();
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_4();
  }
  else
  {
    uint64_t v9 = v0[9];

    sub_256C0044C(v9, &qword_26B2C7798);
  }
  uint64_t v11 = v0[6];
  uint64_t v10 = v0[7];
  uint64_t v12 = v0[4];
  sub_256C5FC18(v0[3], v10, &qword_26B2C7798);
  sub_256C5FC18(v12, v10 + *(int *)(v11 + 20), qword_26B2C5B70);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[10] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_256C2C08C;
  uint64_t v14 = v0[7];
  return sub_256C2B4E8((uint64_t)v13, v14);
}

uint64_t sub_256C2C08C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 56);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_3();
  *unint64_t v7 = v6;
  *(void *)(v8 + 88) = v0;
  swift_task_dealloc();
  sub_256C5F66C(v5, (void (*)(void))type metadata accessor for ModelXPCRequest.CancelRequest);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_256C2C19C()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v0();
}

uint64_t sub_256C2C208()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.createSession(metadata:alreadyLockedInferenceProvider:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  *(void *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v0;
  *(void *)(v1 + 24) = v5;
  uint64_t SessionRequest = type metadata accessor for ModelXPCRequest.CreateSessionRequest(0);
  *(void *)(v1 + 48) = SessionRequest;
  OUTLINED_FUNCTION_21(SessionRequest);
  *(void *)(v1 + 56) = OUTLINED_FUNCTION_51_0();
  uint64_t Session = type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response(0);
  OUTLINED_FUNCTION_21(Session);
  *(void *)(v1 + 64) = OUTLINED_FUNCTION_51_0();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_21(v8);
  *(void *)(v1 + 72) = OUTLINED_FUNCTION_51_0();
  uint64_t v9 = type metadata accessor for Session.Metadata(0);
  *(void *)(v1 + 80) = v9;
  OUTLINED_FUNCTION_21(v9);
  *(void *)(v1 + 88) = OUTLINED_FUNCTION_51_0();
  long long v10 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)v3;
  *(_OWORD *)(v1 + 112) = v10;
  *(unsigned char *)(v1 + 144) = *(unsigned char *)(v3 + 32);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_256C2C378()
{
  uint64_t v29 = v0;
  if (sub_256CEE1D8())
  {
    sub_256C5F6BC(*(void *)(v0 + 32), *(void *)(v0 + 88), (void (*)(void))type metadata accessor for Session.Metadata);
    uint64_t v1 = sub_256CEDC68();
    os_log_type_t v2 = sub_256CEE2D8();
    BOOL v3 = os_log_type_enabled(v1, v2);
    uint64_t v4 = *(void *)(v0 + 88);
    if (v3)
    {
      uint64_t v5 = *(void *)(v0 + 72);
      uint64_t v6 = *(void *)(v0 + 80);
      OUTLINED_FUNCTION_24_0();
      uint64_t v28 = OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_291(4.8149e-34);
      sub_256C5FC18(v4 + *(int *)(v6 + 36), v5, qword_26B2C5B70);
      uint64_t v7 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      unint64_t v9 = v8;
      sub_256C0044C(v5, qword_26B2C5B70);
      uint64_t v10 = sub_256BE14CC(v7, v9, &v28);
      OUTLINED_FUNCTION_298(v10);
      swift_bridgeObjectRelease();
      sub_256C5F66C(v4, (void (*)(void))type metadata accessor for Session.Metadata);
      OUTLINED_FUNCTION_295(&dword_256BD4000, v11, v12, "Task for create session %s cancelled before sending");
      OUTLINED_FUNCTION_270();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {

      sub_256C5F66C(v4, (void (*)(void))type metadata accessor for Session.Metadata);
    }
    type metadata accessor for ModelManagerError();
    sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_294();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v16 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 104);
  uint64_t v18 = *(void *)(v0 + 48);
  uint64_t v17 = *(void *)(v0 + 56);
  char v19 = *(unsigned char *)(v0 + 144);
  sub_256C5F6BC(*(void *)(v0 + 32), v17, (void (*)(void))type metadata accessor for Session.Metadata);
  uint64_t v20 = v17 + *(int *)(v18 + 20);
  *(void *)uint64_t v20 = v16;
  *(void *)(v20 + 8) = v15;
  *(void *)(v20 + 16) = v13;
  *(void *)(v20 + 24) = v14;
  *(unsigned char *)(v20 + 32) = v19;
  sub_256C5BFF8(v16, v15);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v21;
  void *v21 = v0;
  v21[1] = sub_256C2C684;
  OUTLINED_FUNCTION_22();
  return sub_256C2B5A0(v22, v23);
}

uint64_t sub_256C2C684()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  sub_256C5F66C(*(void *)(v1 + 56), (void (*)(void))type metadata accessor for ModelXPCRequest.CreateSessionRequest);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C2C79C()
{
  OUTLINED_FUNCTION_12();
  sub_256C5FC70(*(void *)(v0 + 64), *(void *)(v0 + 24), qword_26B2C5B70);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v1();
}

uint64_t sub_256C2C834()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.deleteSession(id:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t v3 = type metadata accessor for ModelXPCRequest.DeleteSessionRequest(v2);
  OUTLINED_FUNCTION_21(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C2C930()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_268();
  sub_256C5FC18(v0, v1, qword_26B2C5B70);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_217(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C2C9C4;
  OUTLINED_FUNCTION_263();
  return sub_256C2B658(v5, v6);
}

uint64_t sub_256C2C9C4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v7 = v6;
  *(void *)(v8 + 48) = v0;
  swift_task_dealloc();
  sub_256C5F66C(v5, (void (*)(void))type metadata accessor for ModelXPCRequest.DeleteSessionRequest);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t ModelXPCSender.cancelSession(id:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t v3 = type metadata accessor for ModelXPCRequest.CancelSessionRequest(v2);
  OUTLINED_FUNCTION_21(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C2CB4C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_268();
  sub_256C5FC18(v0, v1, qword_26B2C5B70);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_217(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C2CBE0;
  OUTLINED_FUNCTION_263();
  return sub_256C2B710(v5, v6);
}

uint64_t sub_256C2CBE0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v7 = v6;
  *(void *)(v8 + 48) = v0;
  swift_task_dealloc();
  sub_256C5F66C(v5, (void (*)(void))type metadata accessor for ModelXPCRequest.CancelSessionRequest);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_256C2CCF0()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ModelXPCSender.prewarmSession(id:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t v3 = type metadata accessor for ModelXPCRequest.PrewarmSession(v2);
  OUTLINED_FUNCTION_21(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C2CDC8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_268();
  sub_256C5FC18(v0, v1, qword_26B2C5B70);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_217(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C2CE5C;
  OUTLINED_FUNCTION_263();
  return sub_256C2B7C8(v5, v6);
}

uint64_t sub_256C2CE5C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v7 = v6;
  *(void *)(v8 + 48) = v0;
  swift_task_dealloc();
  sub_256C5F66C(v5, (void (*)(void))type metadata accessor for ModelXPCRequest.PrewarmSession);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t ModelXPCSender.acquireAssertion(assertion:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t v3 = type metadata accessor for ModelXPCRequest.AcquireRequest(v2);
  OUTLINED_FUNCTION_21(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C2CFE4()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_268();
  sub_256C5F6BC(v0, v1, (void (*)(void))type metadata accessor for Assertion.DaemonRep);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_217(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C2D084;
  OUTLINED_FUNCTION_263();
  return sub_256C2ACEC(v5, v6);
}

uint64_t sub_256C2D084()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v7 = v6;
  *(void *)(v8 + 48) = v0;
  swift_task_dealloc();
  sub_256C5F66C(v5, (void (*)(void))type metadata accessor for ModelXPCRequest.AcquireRequest);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t ModelXPCSender.releaseAssertion(id:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t v3 = type metadata accessor for ModelXPCRequest.ReleaseRequest(v2);
  OUTLINED_FUNCTION_21(v3);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C2D20C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_268();
  sub_256C5FC18(v0, v1, (uint64_t *)&unk_26B2C8608);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_217(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256C2D2A0;
  OUTLINED_FUNCTION_263();
  return sub_256C2ADA4(v5, v6);
}

uint64_t sub_256C2D2A0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v7 = v6;
  *(void *)(v8 + 48) = v0;
  swift_task_dealloc();
  sub_256C5F66C(v5, (void (*)(void))type metadata accessor for ModelXPCRequest.ReleaseRequest);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t ModelXPCSender.fetchAllAssertions()()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_274(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C2D438;
  uint64_t v3 = OUTLINED_FUNCTION_16_4();
  return sub_256C2AE5C(v3);
}

uint64_t sub_256C2D438()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 32) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t ModelXPCSender.restoreAssertions(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C2D530);
}

uint64_t sub_256C2D530()
{
  OUTLINED_FUNCTION_2();
  sub_256CEDEC8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C2D5C8;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_256C2AF10((uint64_t)v1, v2);
}

uint64_t sub_256C2D5C8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C2D6C4()
{
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.fetchAllAssetInfo()()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_274(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C2D768;
  uint64_t v3 = OUTLINED_FUNCTION_16_4();
  return sub_256C2B880(v3);
}

uint64_t sub_256C2D768()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 32) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C2D848()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_256C2D864()
{
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.fetchDynamicAssetInfo()()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_274(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C2D438;
  uint64_t v3 = OUTLINED_FUNCTION_16_4();
  return sub_256C2B9F8(v3);
}

uint64_t ModelXPCSender.fetchEffectivePolicy()()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 56) = v1;
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v3;
  v2[1] = sub_256C2D99C;
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_20();
  return sub_256C2BAAC(v4, v5, v6);
}

uint64_t sub_256C2D99C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C2DA7C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 == 2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 32);
    long long v5 = *(_OWORD *)(v0 + 40);
    *(unsigned char *)uint64_t v2 = v1 & 1;
    *(void *)(v2 + 8) = v4;
    *(unsigned char *)(v2 + 16) = v3;
    *(_OWORD *)(v2 + 24) = v5;
    return OUTLINED_FUNCTION_158();
  }
  return result;
}

uint64_t sub_256C2DAB4()
{
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.fetchPolicy(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C2DAEC);
}

uint64_t sub_256C2DAEC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0[9];
  sub_256CEDEC8();
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v0[11] = v2;
  *uint64_t v2 = v3;
  v2[1] = sub_256C2DBA0;
  uint64_t v4 = v0[8];
  return sub_256C2BAAC((uint64_t)(v0 + 2), v4, v1);
}

uint64_t sub_256C2DBA0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C2DCA4()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 == 2)
  {
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    type metadata accessor for ModelManagerError();
    sub_256C5F458(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_94();
    *uint64_t v4 = v3;
    v4[1] = v2;
    swift_storeEnumTagMultiPayload();
    sub_256CEDEC8();
    swift_willThrow();
    OUTLINED_FUNCTION_16();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 24);
    uint64_t v6 = *(void *)(v0 + 32);
    long long v8 = *(_OWORD *)(v0 + 40);
    *(unsigned char *)uint64_t v5 = v1 & 1;
    *(void *)(v5 + 8) = v7;
    *(unsigned char *)(v5 + 16) = v6;
    *(_OWORD *)(v5 + 24) = v8;
    OUTLINED_FUNCTION_72();
  }
  OUTLINED_FUNCTION_256();
  return v10(v9, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_256C2DDB0()
{
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.dumpState()()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 152) = v1;
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  *(void *)(v0 + 160) = v2;
  *uint64_t v2 = v3;
  v2[1] = sub_256C2DE5C;
  uint64_t v4 = OUTLINED_FUNCTION_16_4();
  return sub_256C2B37C(v4);
}

uint64_t sub_256C2DE5C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C2DF3C()
{
  OUTLINED_FUNCTION_2();
  memcpy(*(void **)(v0 + 152), (const void *)(v0 + 16), 0x88uLL);
  OUTLINED_FUNCTION_72();
  return v1();
}

uint64_t sub_256C2DF9C()
{
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.fetchModelInstance(session:)()
{
  OUTLINED_FUNCTION_2();
  v1[12] = v2;
  v1[13] = v0;
  v1[11] = v3;
  uint64_t ModelInstance = type metadata accessor for ModelXPCRequest.FetchModelInstance(0);
  OUTLINED_FUNCTION_21(ModelInstance);
  v1[14] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C2E038()
{
  OUTLINED_FUNCTION_2();
  sub_256C5FC18(v0[12], v0[14], qword_26B2C5B70);
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v0[15] = (uint64_t)v1;
  *uint64_t v1 = v2;
  v1[1] = sub_256C2E0DC;
  uint64_t v3 = OUTLINED_FUNCTION_16_4();
  return sub_256C2BB64(v3, v4);
}

uint64_t sub_256C2E0DC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 112);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v7 = v6;
  *(void *)(v8 + 128) = v0;
  swift_task_dealloc();
  sub_256C5F66C(v5, (void (*)(void))type metadata accessor for ModelXPCRequest.FetchModelInstance);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_256C2E1EC()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 88);
  long long v2 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 80);
  long long v6 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v2;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 48) = v6;
  *(unsigned char *)(v1 + 64) = v5;
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v7();
}

uint64_t sub_256C2E268()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.setAssetsHaveUpdated()()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C2E348;
  return sub_256C2BCE0((uint64_t)v1);
}

uint64_t sub_256C2E348()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  *(void *)(v6 + 24) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C2E428()
{
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t ModelXPCSender.startMonitoringInferences(endpoint:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = OUTLINED_FUNCTION_123(v1);
  uint64_t started = type metadata accessor for ModelXPCRequest.StartMonitoringInferences(v2);
  OUTLINED_FUNCTION_21(started);
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C2E4BC()
{
  OUTLINED_FUNCTION_2();
  sub_256CEDD58();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_217(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256C2E578;
  OUTLINED_FUNCTION_263();
  return sub_256C2B2C4(v4, v5);
}

uint64_t sub_256C2E578()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_3();
  *uint64_t v7 = v6;
  *(void *)(v8 + 48) = v0;
  swift_task_dealloc();
  sub_256C5F66C(v5, (void (*)(void))type metadata accessor for ModelXPCRequest.StartMonitoringInferences);
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t ModelXPCSender.deinit()
{
  sub_256CEDC88();
  OUTLINED_FUNCTION_10();
  uint64_t v1 = OUTLINED_FUNCTION_8_3();
  v2(v1);
  swift_release();
  return v0;
}

uint64_t ModelXPCSender.__deallocating_deinit()
{
  sub_256CEDC88();
  OUTLINED_FUNCTION_10();
  uint64_t v1 = OUTLINED_FUNCTION_8_3();
  v2(v1);
  swift_release();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_256C2E78C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.executeRequest(modelBundleID:taskPriority:metadata:)();
}

uint64_t sub_256C2E868()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.cancelRequest(id:sessionID:)();
}

uint64_t sub_256C2E910()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.createSession(metadata:alreadyLockedInferenceProvider:)();
}

uint64_t sub_256C2E9C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.deleteSession(id:)();
}

uint64_t sub_256C2EA5C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.cancelSession(id:)();
}

uint64_t sub_256C2EAF4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.prewarmSession(id:)();
}

uint64_t sub_256C2EB8C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.acquireAssertion(assertion:)();
}

uint64_t sub_256C2EC24()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.releaseAssertion(id:)();
}

uint64_t sub_256C2ECBC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C5FCD0;
  return ModelXPCSender.fetchAllAssertions()();
}

uint64_t sub_256C2ED4C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_256C26524;
  return ModelXPCSender.restoreAssertions(_:)(a1);
}

uint64_t sub_256C2EDE4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C2EE74;
  return ModelXPCSender.fetchAllAssetInfo()();
}

uint64_t sub_256C2EE74()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_256C2EF48()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C5FCD0;
  return ModelXPCSender.fetchDynamicAssetInfo()();
}

uint64_t sub_256C2EFD8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.fetchEffectivePolicy()();
}

uint64_t sub_256C2F074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_256C26524;
  return ModelXPCSender.fetchPolicy(_:)(a1, a2, a3);
}

uint64_t sub_256C2F128(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_256C26524;
  return ModelXPCSender.loadAssetBundle(_:dynamicMode:)(a1, a2, a3);
}

uint64_t sub_256C2F1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_256C26524;
  return ModelXPCSender.holdAssetBundle(_:)(a1, a2);
}

uint64_t sub_256C2F280()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.dumpState()();
}

uint64_t sub_256C2F31C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C1D828;
  return ModelXPCSender.fetchModelInstance(session:)();
}

uint64_t sub_256C2F3C8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.setAssetsHaveUpdated()();
}

uint64_t sub_256C2F458()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C26524;
  return ModelXPCSender.startMonitoringInferences(endpoint:)();
}

uint64_t sub_256C2F4F0(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8340);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C2F76C, v2, 0);
}

#error "256C2FDFC: call analysis failed (funcsize=505)"

uint64_t sub_256C3001C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C30828: call analysis failed (funcsize=510)"

#error "256C30FD8: call analysis failed (funcsize=466)"

uint64_t sub_256C311F8(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7DF0);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C31474, v2, 0);
}

#error "256C31B04: call analysis failed (funcsize=505)"

uint64_t sub_256C31D24()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C32530: call analysis failed (funcsize=510)"

#error "256C32CE0: call analysis failed (funcsize=466)"

uint64_t sub_256C32F00(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_256CEDB08();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_256CEDDE8();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for ModelManagerError();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = type metadata accessor for ModelXPCRequest(0);
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3DF0);
  v2[29] = swift_task_alloc();
  v2[30] = type metadata accessor for XPCSessionWrapper(0);
  v2[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C33178, v1, 0);
}

#error "256C33800: call analysis failed (funcsize=503)"

uint64_t sub_256C33A20()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 224), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C34238: call analysis failed (funcsize=512)"

#error "256C349F8: call analysis failed (funcsize=469)"

uint64_t sub_256C34C18(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D98);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C34E94, v2, 0);
}

#error "256C35520: call analysis failed (funcsize=504)"

uint64_t sub_256C35740()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C35F50: call analysis failed (funcsize=510)"

#error "256C36708: call analysis failed (funcsize=467)"

uint64_t sub_256C36928(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 312) = a4;
  *(void *)(v5 + 96) = a3;
  *(void *)(v5 + 104) = v4;
  *(void *)(v5 + 80) = a1;
  *(void *)(v5 + 88) = a2;
  uint64_t v6 = sub_256CEDB08();
  *(void *)(v5 + 112) = v6;
  *(void *)(v5 + 120) = *(void *)(v6 - 8);
  *(void *)(v5 + 128) = swift_task_alloc();
  uint64_t v7 = sub_256CEDDE8();
  *(void *)(v5 + 136) = v7;
  *(void *)(v5 + 144) = *(void *)(v7 - 8);
  *(void *)(v5 + 152) = swift_task_alloc();
  *(void *)(v5 + 160) = swift_task_alloc();
  *(void *)(v5 + 168) = swift_task_alloc();
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = type metadata accessor for ModelManagerError();
  *(void *)(v5 + 192) = swift_task_alloc();
  *(void *)(v5 + 200) = swift_task_alloc();
  *(void *)(v5 + 208) = swift_task_alloc();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = swift_task_alloc();
  *(void *)(v5 + 232) = type metadata accessor for ModelXPCRequest(0);
  *(void *)(v5 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4158);
  *(void *)(v5 + 248) = swift_task_alloc();
  *(void *)(v5 + 256) = type metadata accessor for XPCSessionWrapper(0);
  *(void *)(v5 + 264) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  *(void *)(v5 + 272) = swift_task_alloc();
  *(void *)(v5 + 280) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C36BA8, v4, 0);
}

#error "256C37278: call analysis failed (funcsize=521)"

uint64_t sub_256C37498()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 304) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 240), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C37CB4: call analysis failed (funcsize=513)"

#error "256C38474: call analysis failed (funcsize=469)"

uint64_t sub_256C38694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_256CEDB08();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_256CEDDE8();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = type metadata accessor for ModelManagerError();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = type metadata accessor for ModelXPCRequest(0);
  v4[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4100);
  v4[31] = swift_task_alloc();
  v4[32] = type metadata accessor for XPCSessionWrapper(0);
  v4[33] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C38910, v3, 0);
}

#error "256C38FC0: call analysis failed (funcsize=513)"

uint64_t sub_256C391E0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 304) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 240), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C399FC: call analysis failed (funcsize=513)"

#error "256C3A1BC: call analysis failed (funcsize=469)"

uint64_t sub_256C3A3DC(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_256CEDB08();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_256CEDDE8();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for ModelManagerError();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = type metadata accessor for ModelXPCRequest(0);
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC40A8);
  v2[29] = swift_task_alloc();
  v2[30] = type metadata accessor for XPCSessionWrapper(0);
  v2[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C3A654, v1, 0);
}

#error "256C3ACDC: call analysis failed (funcsize=503)"

uint64_t sub_256C3AEFC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 224), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C3B714: call analysis failed (funcsize=512)"

#error "256C3BED4: call analysis failed (funcsize=469)"

uint64_t sub_256C3C0F4(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C52D0);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C3C370, v2, 0);
}

#error "256C3CA00: call analysis failed (funcsize=505)"

uint64_t sub_256C3CC20()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C3D42C: call analysis failed (funcsize=510)"

#error "256C3DBDC: call analysis failed (funcsize=466)"

uint64_t sub_256C3DDFC(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_256CEDB08();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_256CEDDE8();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for ModelManagerError();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = type metadata accessor for ModelXPCRequest(0);
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C78);
  v2[29] = swift_task_alloc();
  v2[30] = type metadata accessor for XPCSessionWrapper(0);
  v2[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C3E074, v1, 0);
}

#error "256C3E6FC: call analysis failed (funcsize=503)"

uint64_t sub_256C3E91C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 224), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C3F12C: call analysis failed (funcsize=511)"

#error "256C3F8EC: call analysis failed (funcsize=469)"

uint64_t sub_256C3FB0C(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3FB8);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C3FD88, v2, 0);
}

#error "256C40418: call analysis failed (funcsize=505)"

uint64_t sub_256C40638()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C40E58: call analysis failed (funcsize=514)"

#error "256C41608: call analysis failed (funcsize=466)"

uint64_t sub_256C41828(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3F60);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C41AA4, v2, 0);
}

#error "256C42134: call analysis failed (funcsize=505)"

uint64_t sub_256C42354()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C42B60: call analysis failed (funcsize=510)"

#error "256C43310: call analysis failed (funcsize=466)"

uint64_t sub_256C43530(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C4D80);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C437AC, v2, 0);
}

#error "256C43E3C: call analysis failed (funcsize=505)"

uint64_t sub_256C4405C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C4487C: call analysis failed (funcsize=514)"

#error "256C4502C: call analysis failed (funcsize=466)"

uint64_t sub_256C4524C(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3EE0);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C454C8, v2, 0);
}

#error "256C45B58: call analysis failed (funcsize=505)"

uint64_t sub_256C45D78()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C46584: call analysis failed (funcsize=510)"

#error "256C46D34: call analysis failed (funcsize=466)"

uint64_t sub_256C46F54(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5030);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C471D0, v2, 0);
}

#error "256C47860: call analysis failed (funcsize=505)"

uint64_t sub_256C47A80()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C4828C: call analysis failed (funcsize=510)"

#error "256C48A3C: call analysis failed (funcsize=466)"

uint64_t sub_256C48C5C(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5020);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C48ED8, v2, 0);
}

#error "256C49568: call analysis failed (funcsize=505)"

uint64_t sub_256C49788()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C49F94: call analysis failed (funcsize=510)"

#error "256C4A744: call analysis failed (funcsize=466)"

uint64_t sub_256C4A964(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_256CEDB08();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_256CEDDE8();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for ModelManagerError();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = type metadata accessor for ModelXPCRequest(0);
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7BA8);
  v2[29] = swift_task_alloc();
  v2[30] = type metadata accessor for XPCSessionWrapper(0);
  v2[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C4ABDC, v1, 0);
}

#error "256C4B264: call analysis failed (funcsize=503)"

uint64_t sub_256C4B484()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 224), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C4BC9C: call analysis failed (funcsize=512)"

#error "256C4C45C: call analysis failed (funcsize=469)"

uint64_t sub_256C4C67C(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_256CEDB08();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_256CEDDE8();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for ModelManagerError();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = type metadata accessor for ModelXPCRequest(0);
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D18);
  v2[29] = swift_task_alloc();
  v2[30] = type metadata accessor for XPCSessionWrapper(0);
  v2[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C4C8F4, v1, 0);
}

#error "256C4CF7C: call analysis failed (funcsize=503)"

uint64_t sub_256C4D19C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 224), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C4D9B4: call analysis failed (funcsize=512)"

#error "256C4E174: call analysis failed (funcsize=469)"

uint64_t sub_256C4E394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_256CEDB08();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_256CEDDE8();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = type metadata accessor for ModelManagerError();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = type metadata accessor for ModelXPCRequest(0);
  v4[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3CC0);
  v4[31] = swift_task_alloc();
  v4[32] = type metadata accessor for XPCSessionWrapper(0);
  v4[33] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C4E610, v3, 0);
}

#error "256C4ECC0: call analysis failed (funcsize=513)"

uint64_t sub_256C4EEE0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 304) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 240), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C4F6F4: call analysis failed (funcsize=512)"

#error "256C4FEB4: call analysis failed (funcsize=469)"

uint64_t sub_256C500D4(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_256CEDB08();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_256CEDDE8();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = type metadata accessor for ModelManagerError();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for ModelXPCRequest(0);
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C20);
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for XPCSessionWrapper(0);
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C50350, v2, 0);
}

#error "256C509E0: call analysis failed (funcsize=505)"

uint64_t sub_256C50C00()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 232), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C51404: call analysis failed (funcsize=509)"

#error "256C51BB4: call analysis failed (funcsize=466)"

uint64_t sub_256C51DD4(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_256CEDB08();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_256CEDDE8();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = type metadata accessor for ModelManagerError();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = type metadata accessor for ModelXPCRequest(0);
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3BC8);
  v2[29] = swift_task_alloc();
  v2[30] = type metadata accessor for XPCSessionWrapper(0);
  v2[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C5204C, v1, 0);
}

#error "256C526D4: call analysis failed (funcsize=503)"

uint64_t sub_256C528F4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_3();
  sub_256C5F66C(*(void *)(v0 + 224), (void (*)(void))type metadata accessor for ModelXPCRequest);
  swift_release();
  OUTLINED_FUNCTION_19_4();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

#error "256C5310C: call analysis failed (funcsize=512)"

#error "256C538CC: call analysis failed (funcsize=469)"

uint64_t sub_256C53AEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  if (qword_26B2C8F28 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)(qword_26B2C8F20 + 16);
  uint64_t v11 = (os_unfair_lock_s *)(qword_26B2C8F20 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26B2C8F20 + 24));
  sub_256CC9120(v10, &v16);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = (uint64_t)a5 + *(int *)(v12 + 48);
  uint64_t v14 = *(int *)(v12 + 64);
  os_unfair_lock_unlock(v11);
  *a5 = v16;
  sub_256C5F6BC(a1, v13, a3);
  *((unsigned char *)a5 + v14) = sub_256CEE1D8() & 1;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256C53C0C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_256C53AEC(a1, &qword_269FC32B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.Notification, &qword_26B2C4F08, a2);
}

uint64_t sub_256C53C34@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v9 = v4;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_53_0();
  sub_256C5FC18(v9, (uint64_t)v5, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_256C5FC18(v9, (uint64_t)a4, a1);
  }
  uint64_t v13 = *v5;
  uint64_t v14 = (uint64_t)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 48);
  *a4 = v13;
  swift_storeEnumTagMultiPayload();
  return sub_256C5F66C(v14, a3);
}

uint64_t sub_256C53D1C(uint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v7 = v3;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_19();
  uint64_t v11 = (uint64_t *)(v10 - v9);
  sub_256C5FC18(v7, v10 - v9, a1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v13 = *v11;
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a2);
    sub_256C5F66C((uint64_t)v11 + *(int *)(v14 + 48), a3);
  }
  return v13;
}

uint64_t sub_256C53DD8()
{
  return sub_256C53D1C(&qword_26B2C4F08, &qword_269FC32B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.Notification);
}

void sub_256C53E00(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = OUTLINED_FUNCTION_21(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_16_1();
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a1, v4, a2);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    *(_DWORD *)uint64_t v14 = 134217984;
    sub_256C53D1C(a2, a3, a4);
    sub_256C0044C(v4, a2);
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Returning response from message %llu.", v14, 0xCu);
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256C0044C(v4, a2);
  }
}

uint64_t sub_256C53FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C53FC4, 0, 0);
}

uint64_t sub_256C53FC4()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8340);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54084()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  void *v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256C54188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C541AC, 0, 0);
}

uint64_t sub_256C541AC()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7DF0);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C5426C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54290, 0, 0);
}

uint64_t sub_256C54290()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3DF0);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54374, 0, 0);
}

uint64_t sub_256C54374()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D98);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54458, 0, 0);
}

uint64_t sub_256C54458()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4158);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C5453C, 0, 0);
}

uint64_t sub_256C5453C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4100);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C545FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54620, 0, 0);
}

uint64_t sub_256C54620()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC40A8);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C546E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54704, 0, 0);
}

uint64_t sub_256C54704()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C52D0);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C547C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C547E8, 0, 0);
}

uint64_t sub_256C547E8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C78);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C548A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C548CC, 0, 0);
}

uint64_t sub_256C548CC()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C5498C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C549B0, 0, 0);
}

uint64_t sub_256C549B0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38D0);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54A94, 0, 0);
}

uint64_t sub_256C54A94()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38C8);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54B78, 0, 0);
}

uint64_t sub_256C54B78()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3FB8);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54C5C, 0, 0);
}

uint64_t sub_256C54C5C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3F60);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54D40, 0, 0);
}

uint64_t sub_256C54D40()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C4D80);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54E24, 0, 0);
}

uint64_t sub_256C54E24()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3EE0);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54F08, 0, 0);
}

uint64_t sub_256C54F08()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5030);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C54FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C54FEC, 0, 0);
}

uint64_t sub_256C54FEC()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5020);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C550AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C550D0, 0, 0);
}

uint64_t sub_256C550D0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7BA8);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C55190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C551B4, 0, 0);
}

uint64_t sub_256C551B4()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D18);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C55274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C55298, 0, 0);
}

uint64_t sub_256C55298()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3CC0);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C55358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C5537C, 0, 0);
}

uint64_t sub_256C5537C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C20);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C5543C;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_256C5543C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  void *v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256C55540()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C5559C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_256C555C0, 0, 0);
}

uint64_t sub_256C555C0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_66_0(v1);
  uint64_t v2 = swift_task_alloc();
  OUTLINED_FUNCTION_178(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3BC8);
  OUTLINED_FUNCTION_121_0();
  *uint64_t v0 = v3;
  v0[1] = sub_256C54084;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58_4();
  return MEMORY[0x270FA2360]();
}

void sub_256C55680(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5E4E4(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55704(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5E368(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55788(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5E1EC(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C5580C(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5E070(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55890(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5FAAC(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55914(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5F930(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55998(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5F7B4(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55A1C(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5D4DC(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55AA0(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5DA80(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55B24(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5F14C(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55BA8(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5F53C(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55C2C(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5F2C8(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55CB0(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5EED0(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55D34(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5ED00(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55DB8(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5EAD4(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55E3C(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5E958(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55EC0(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5E7DC(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55F44(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5E660(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C55FC8(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5DEF4(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C5604C(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5DD78(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C560D0(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5DBFC(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C56154(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5D904(v2);
  os_unfair_lock_unlock(v3);
}

void sub_256C561D8(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = a2 + 4;
  uint64_t v3 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_256C5D690(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_256C5625C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8348);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8340);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_26B2C8338, &qword_26B2C8340, (void (*)(void))sub_256C5E52C, (void (*)(void))sub_256C5E578);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5663C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7DF8);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7DF0);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_26B2C7DE8, &qword_26B2C7DF0, (void (*)(void))sub_256C5E3B0, (void (*)(void))sub_256C5E3FC);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C56A1C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3E18);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3DF0);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3E20, &qword_269FC3DF0, (void (*)(void))sub_256C5E234, (void (*)(void))sub_256C5E280);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C56DFC(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3DC0);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D98);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3DC8, &qword_269FC3D98, (void (*)(void))sub_256C5E0B8, (void (*)(void))sub_256C5E104);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C571DC(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4180);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4158);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC4188, &qword_269FC4158, (void (*)(void))sub_256C5FB80, (void (*)(void))sub_256C5FBCC);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C575BC(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4128);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4100);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC4130, &qword_269FC4100, (void (*)(void))sub_256C5F978, (void (*)(void))sub_256C5F9C4);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5799C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC40D0);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC40A8);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC40D8, &qword_269FC40A8, (void (*)(void))sub_256C5F7FC, (void (*)(void))sub_256C5F848);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C57D7C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5330);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C52D0);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_26B2C52C8, &qword_26B2C52D0, (void (*)(void))sub_256C5D524, (void (*)(void))sub_256C5D570);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5815C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3CA0);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C78);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3CA8, &qword_269FC3C78, (void (*)(void))sub_256C5DAC8, (void (*)(void))sub_256C5DB14);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5853C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5590);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C77A0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C77A0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C77A0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C77A0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
  sub_256C5F61C(&qword_26B2C54C0, &qword_26B2C77A0);
  sub_256C5D6D8(&qword_26B2C7770, &qword_26B2C7778, (void (*)(void))sub_256C5F194, (void (*)(void))sub_256C5F1E0);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest, &qword_26B2C54C0);
    }
  }
  return result;
}

uint64_t sub_256C5891C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4078);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C77A0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C77A0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C77A0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C77A0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38D0);
  sub_256C5F61C(&qword_26B2C54C0, &qword_26B2C77A0);
  sub_256C5D6D8(&qword_269FC4080, &qword_269FC38D0, (void (*)(void))sub_256C5F584, (void (*)(void))sub_256C5F5D0);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest, &qword_26B2C54C0);
    }
  }
  return result;
}

uint64_t sub_256C58CFC(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4038);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C77A0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C77A0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C77A0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C77A0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38C8);
  sub_256C5F61C(&qword_26B2C54C0, &qword_26B2C77A0);
  sub_256C5F310();
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest, &qword_26B2C54C0);
    }
  }
  return result;
}

uint64_t sub_256C590A4(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3FE0);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3FB8);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5EF18();
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5944C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3F88);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3F60);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3F90, &qword_269FC3F60, (void (*)(void))sub_256C5ED48, (void (*)(void))sub_256C5ED94);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5982C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5070);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C4D80);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5EB1C();
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C59BD4(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3F08);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3EE0);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3F10, &qword_269FC3EE0, (void (*)(void))sub_256C5E9A0, (void (*)(void))sub_256C5E9EC);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C59FB4(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5068);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5030);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_26B2C5028, &qword_26B2C5030, (void (*)(void))sub_256C5E824, (void (*)(void))sub_256C5E870);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5A394(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5060);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5020);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_26B2C5018, &qword_26B2C5020, (void (*)(void))sub_256C5E6A8, (void (*)(void))sub_256C5E6F4);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5A774(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7B68);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7BA8);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_26B2C7BA0, &qword_26B2C7BA8, (void (*)(void))sub_256C5DF3C, (void (*)(void))sub_256C5DF88);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5AB54(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D40);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3D18);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3D48, &qword_269FC3D18, (void (*)(void))sub_256C5DDC0, (void (*)(void))sub_256C5DE0C);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5AF34(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3CE8);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3CC0);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3CF0, &qword_269FC3CC0, (void (*)(void))sub_256C5DC44, (void (*)(void))sub_256C5DC90);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5B314(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C48);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3C20);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3C50, &qword_269FC3C20, (void (*)(void))sub_256C5D94C, (void (*)(void))sub_256C5D998);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5B6F4(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3BF0);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_256CEDC88();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B2C9168);
  sub_256C5FC18(a2, (uint64_t)v10, &qword_26B2C8AF0);
  uint64_t v12 = sub_256CEDC68();
  os_log_type_t v13 = sub_256CEE2A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v15 = v14;
    uint64_t v23 = a4;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v16 = sub_256C53D1C(&qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest);
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
    uint64_t v31 = v16;
    a4 = v23;
    a2 = v24;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v12, v13, "Sending message %llu.", v15, 0xCu);
    MEMORY[0x25A2AEBD0](v15, -1, -1);
  }
  else
  {
    sub_256C0044C((uint64_t)v10, &qword_26B2C8AF0);
  }

  uint64_t v18 = v27;
  uint64_t v17 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v27, a4, v28);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v18, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3BC8);
  sub_256C5F61C(&qword_26B2C8AE8, &qword_26B2C8AF0);
  sub_256C5D6D8(&qword_269FC3BF8, &qword_269FC3BC8, (void (*)(void))sub_256C5D7D0, (void (*)(void))sub_256C5D81C);
  uint64_t v21 = v30;
  sub_256CEDCF8();
  uint64_t result = swift_release();
  if (!v21)
  {
    unsigned char *v26 = 1;
    uint64_t result = sub_256CEE1D8();
    if (result) {
      return sub_256C5BC74(a2, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
    }
  }
  return result;
}

uint64_t sub_256C5BAD4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v12 = OUTLINED_FUNCTION_21(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_16_1();
  sub_256C5FC18(a1, v6, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    return sub_256CEE0E8();
  }
  else
  {
    sub_256C5FC70(v6, v5, a3);
    __swift_instantiateConcreteTypeFromMangledName(a5);
    return sub_256CEE0F8();
  }
}

uint64_t sub_256C5BBF0(uint64_t a1)
{
  return sub_256C5BC74(a1, &qword_26B2C4F08, &qword_269FC32B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.Notification, &qword_269FC38F0);
}

uint64_t sub_256C5BC74(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(void), unint64_t *a5)
{
  uint64_t v30 = a3;
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_10();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (void *)((char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v25 - v14;
  type metadata accessor for _OSActivity();
  swift_initStackObject();
  uint64_t v29 = _OSActivity.init(_:)("XPC message with reply cancelled", 32, 2);
  if (qword_26B2C9180 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_256CEDC88();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B2C9168);
  uint64_t v28 = a1;
  sub_256C5FC18(a1, (uint64_t)v15, a2);
  uint64_t v17 = sub_256CEDC68();
  os_log_type_t v18 = sub_256CEE2A8();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v19 = (uint8_t *)OUTLINED_FUNCTION_24_0();
    uint64_t v27 = v5;
    uint64_t v20 = v19;
    uint64_t v26 = a5;
    *(_DWORD *)unint64_t v19 = 134217984;
    v25[1] = v19 + 4;
    uint64_t v21 = v30;
    uint64_t v22 = sub_256C53D1C(a2, v30, a4);
    sub_256C0044C((uint64_t)v15, a2);
    uint64_t v32 = v22;
    a5 = v26;
    sub_256CEE308();
    _os_log_impl(&dword_256BD4000, v17, v18, "Task for message %llu cancelled, sending cancellation message.", v20, 0xCu);
    OUTLINED_FUNCTION_4();
  }
  else
  {
    sub_256C0044C((uint64_t)v15, a2);
    uint64_t v21 = v30;
  }

  sub_256C53C34(a2, v21, a4, v13);
  sub_256C5F61C(a5, a2);
  sub_256CEDD08();
  sub_256C0044C((uint64_t)v13, a2);
  uint64_t v23 = v29;
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v23 + 24));
  swift_endAccess();
  return swift_release();
}

void sub_256C5BF48(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_256C5D48C(v1);
  os_unfair_lock_unlock(v2);
}

void sub_256C5BFA0(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_256C5F0FC(v1);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_256C5BFF8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_256CEDEC8();
    return sub_256CEDEC8();
  }
  return result;
}

uint64_t dispatch thunk of ModelXPCSending.executeRequest(modelBundleID:taskPriority:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 8) + **(int **)(a8 + 8));
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_112(v16);
  *uint64_t v17 = v18;
  v17[1] = sub_256C26524;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of ModelXPCSending.cancelRequest(id:sessionID:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_60_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_258();
  return v3();
}

uint64_t dispatch thunk of ModelXPCSending.createSession(metadata:alreadyLockedInferenceProvider:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_8_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_261();
  return v4(v3);
}

uint64_t dispatch thunk of ModelXPCSending.deleteSession(id:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelXPCSending.cancelSession(id:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelXPCSending.prewarmSession(id:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelXPCSending.acquireAssertion(assertion:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelXPCSending.releaseAssertion(id:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelXPCSending.fetchAllAssertions()()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_60();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCF8;
  uint64_t v3 = OUTLINED_FUNCTION_244();
  return v4(v3);
}

uint64_t dispatch thunk of ModelXPCSending.restoreAssertions(_:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelXPCSending.fetchAllAssetInfo()()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_60();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5CA04;
  uint64_t v3 = OUTLINED_FUNCTION_244();
  return v4(v3);
}

uint64_t sub_256C5CA04()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t dispatch thunk of ModelXPCSending.fetchDynamicAssetInfo()()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_60();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C5FCF8;
  uint64_t v3 = OUTLINED_FUNCTION_244();
  return v4(v3);
}

uint64_t dispatch thunk of ModelXPCSending.fetchEffectivePolicy()()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelXPCSending.fetchPolicy(_:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_8_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_261();
  return v4(v3);
}

uint64_t dispatch thunk of ModelXPCSending.loadAssetBundle(_:dynamicMode:)()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 120)
                                                                            + **(int **)(v0 + 120));
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_14(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_256C26524;
  return v14(v9, v7, v5, v3, v1);
}

uint64_t dispatch thunk of ModelXPCSending.holdAssetBundle(_:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_60_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_258();
  return v3();
}

uint64_t dispatch thunk of ModelXPCSending.dumpState()()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ModelXPCSending.fetchModelInstance(session:)()
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_60_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C1D828;
  OUTLINED_FUNCTION_258();
  return v3();
}

uint64_t dispatch thunk of ModelXPCSending.setAssetsHaveUpdated()()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_60();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_244();
  return v4(v3);
}

uint64_t dispatch thunk of ModelXPCSending.startMonitoringInferences(endpoint:)()
{
  OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_25();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_256();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_256C5D2D8()
{
  return type metadata accessor for ModelXPCSender();
}

uint64_t type metadata accessor for ModelXPCSender()
{
  uint64_t result = qword_26B2C89E8;
  if (!qword_26B2C89E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256C5D328()
{
  uint64_t result = sub_256CEDC88();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ModelXPCSender(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ModelXPCSender);
}

uint64_t dispatch thunk of ModelXPCSender.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_256C5D3F0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C546E0(v3, v4, v5, v6);
}

void sub_256C5D480()
{
  sub_256C5BF48(*(os_unfair_lock_s **)(v0 + 16));
}

unsigned char *sub_256C5D48C(unsigned char *a1)
{
  return sub_256C5D64C(a1, &qword_26B2C8AF0, &qword_26B2C8B98, (void (*)(void))type metadata accessor for ModelXPCRequest, &qword_26B2C8AE8);
}

void sub_256C5D4D0(uint64_t a1)
{
  sub_256C55A1C(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5D4DC(unsigned char *a1)
{
  return sub_256C57D7C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5D4FC()
{
  return objectdestroyTm(&qword_26B2C5330);
}

uint64_t sub_256C5D508(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_26B2C5330, &qword_26B2C52D0, qword_26B2C53A8);
}

unint64_t sub_256C5D524()
{
  unint64_t result = qword_26B2C79C8;
  if (!qword_26B2C79C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79C8);
  }
  return result;
}

unint64_t sub_256C5D570()
{
  unint64_t result = qword_26B2C79C0;
  if (!qword_26B2C79C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C79C0);
  }
  return result;
}

uint64_t sub_256C5D5BC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C5559C(v3, v4, v5, v6);
}

unsigned char *sub_256C5D64C(unsigned char *result, uint64_t *a2, uint64_t *a3, void (*a4)(void), unint64_t *a5)
{
  if (*result == 1) {
    return (unsigned char *)sub_256C5BC74(*(void *)(v5 + 24), a2, a3, a4, a5);
  }
  return result;
}

void sub_256C5D684(uint64_t a1)
{
  sub_256C561D8(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5D690(unsigned char *a1)
{
  return sub_256C5B6F4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5D6B0()
{
  return objectdestroyTm(&qword_269FC3BF0);
}

uint64_t sub_256C5D6BC(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3BF0, &qword_269FC3BC8, &qword_269FC3C10);
}

uint64_t sub_256C5D6D8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    sub_256C5F458(&qword_26B2C9150, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C9148, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256C5D7D0()
{
  unint64_t result = qword_269FC3C00;
  if (!qword_269FC3C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3C00);
  }
  return result;
}

unint64_t sub_256C5D81C()
{
  unint64_t result = qword_269FC3C08;
  if (!qword_269FC3C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3C08);
  }
  return result;
}

uint64_t sub_256C5D868()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C55358(v3, v4, v5, v6);
}

void sub_256C5D8F8(uint64_t a1)
{
  sub_256C56154(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5D904(unsigned char *a1)
{
  return sub_256C5B314(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5D924()
{
  return objectdestroyTm(&qword_269FC3C48);
}

uint64_t sub_256C5D930(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3C48, &qword_269FC3C20, &qword_269FC3C68);
}

unint64_t sub_256C5D94C()
{
  unint64_t result = qword_269FC3C58;
  if (!qword_269FC3C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3C58);
  }
  return result;
}

unint64_t sub_256C5D998()
{
  unint64_t result = qword_269FC3C60;
  if (!qword_269FC3C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3C60);
  }
  return result;
}

uint64_t sub_256C5D9E4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C547C4(v3, v4, v5, v6);
}

void sub_256C5DA74(uint64_t a1)
{
  sub_256C55AA0(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5DA80(unsigned char *a1)
{
  return sub_256C5815C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5DAA0()
{
  return objectdestroyTm(&qword_269FC3CA0);
}

uint64_t sub_256C5DAAC(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3CA0, &qword_269FC3C78, &qword_269FC3CB0);
}

unint64_t sub_256C5DAC8()
{
  unint64_t result = qword_26B2C49B0;
  if (!qword_26B2C49B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C49B0);
  }
  return result;
}

unint64_t sub_256C5DB14()
{
  unint64_t result = qword_26B2C49A8;
  if (!qword_26B2C49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C49A8);
  }
  return result;
}

uint64_t sub_256C5DB60()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C55274(v3, v4, v5, v6);
}

void sub_256C5DBF0(uint64_t a1)
{
  sub_256C560D0(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5DBFC(unsigned char *a1)
{
  return sub_256C5AF34(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5DC1C()
{
  return objectdestroyTm(&qword_269FC3CE8);
}

uint64_t sub_256C5DC28(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3CE8, &qword_269FC3CC0, &qword_269FC3D08);
}

unint64_t sub_256C5DC44()
{
  unint64_t result = qword_269FC3CF8;
  if (!qword_269FC3CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3CF8);
  }
  return result;
}

unint64_t sub_256C5DC90()
{
  unint64_t result = qword_269FC3D00;
  if (!qword_269FC3D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3D00);
  }
  return result;
}

uint64_t sub_256C5DCDC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C55190(v3, v4, v5, v6);
}

void sub_256C5DD6C(uint64_t a1)
{
  sub_256C5604C(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5DD78(unsigned char *a1)
{
  return sub_256C5AB54(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5DD98()
{
  return objectdestroyTm(&qword_269FC3D40);
}

uint64_t sub_256C5DDA4(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3D40, &qword_269FC3D18, &qword_269FC3D60);
}

unint64_t sub_256C5DDC0()
{
  unint64_t result = qword_269FC3D50;
  if (!qword_269FC3D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3D50);
  }
  return result;
}

unint64_t sub_256C5DE0C()
{
  unint64_t result = qword_269FC3D58;
  if (!qword_269FC3D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3D58);
  }
  return result;
}

uint64_t sub_256C5DE58()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C550AC(v3, v4, v5, v6);
}

void sub_256C5DEE8(uint64_t a1)
{
  sub_256C55FC8(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5DEF4(unsigned char *a1)
{
  return sub_256C5A774(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5DF14()
{
  return objectdestroyTm(&qword_26B2C7B68);
}

uint64_t sub_256C5DF20(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_26B2C7B68, &qword_26B2C7BA8, &qword_26B2C7DE0);
}

unint64_t sub_256C5DF3C()
{
  unint64_t result = qword_26B2C82E8;
  if (!qword_26B2C82E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C82E8);
  }
  return result;
}

unint64_t sub_256C5DF88()
{
  unint64_t result = qword_26B2C82E0;
  if (!qword_26B2C82E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C82E0);
  }
  return result;
}

uint64_t sub_256C5DFD4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54350(v3, v4, v5, v6);
}

void sub_256C5E064(uint64_t a1)
{
  sub_256C5580C(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5E070(unsigned char *a1)
{
  return sub_256C56DFC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5E090()
{
  return objectdestroyTm(&qword_269FC3DC0);
}

uint64_t sub_256C5E09C(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3DC0, &qword_269FC3D98, &qword_269FC3DE0);
}

unint64_t sub_256C5E0B8()
{
  unint64_t result = qword_269FC3DD0;
  if (!qword_269FC3DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3DD0);
  }
  return result;
}

unint64_t sub_256C5E104()
{
  unint64_t result = qword_269FC3DD8;
  if (!qword_269FC3DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3DD8);
  }
  return result;
}

uint64_t sub_256C5E150()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C5426C(v3, v4, v5, v6);
}

void sub_256C5E1E0(uint64_t a1)
{
  sub_256C55788(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5E1EC(unsigned char *a1)
{
  return sub_256C56A1C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5E20C()
{
  return objectdestroyTm(&qword_269FC3E18);
}

uint64_t sub_256C5E218(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3E18, &qword_269FC3DF0, &qword_269FC3E38);
}

unint64_t sub_256C5E234()
{
  unint64_t result = qword_269FC3E28;
  if (!qword_269FC3E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3E28);
  }
  return result;
}

unint64_t sub_256C5E280()
{
  unint64_t result = qword_269FC3E30;
  if (!qword_269FC3E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3E30);
  }
  return result;
}

uint64_t sub_256C5E2CC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54188(v3, v4, v5, v6);
}

void sub_256C5E35C(uint64_t a1)
{
  sub_256C55704(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5E368(unsigned char *a1)
{
  return sub_256C5663C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5E388()
{
  return objectdestroyTm(&qword_26B2C7DF8);
}

uint64_t sub_256C5E394(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_26B2C7DF8, &qword_26B2C7DF0, &qword_26B2C7E08);
}

unint64_t sub_256C5E3B0()
{
  unint64_t result = qword_26B2C8328;
  if (!qword_26B2C8328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8328);
  }
  return result;
}

unint64_t sub_256C5E3FC()
{
  unint64_t result = qword_26B2C8320;
  if (!qword_26B2C8320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C8320);
  }
  return result;
}

uint64_t sub_256C5E448()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C53FA0(v3, v4, v5, v6);
}

void sub_256C5E4D8(uint64_t a1)
{
  sub_256C55680(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5E4E4(unsigned char *a1)
{
  return sub_256C5625C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5E504()
{
  return objectdestroyTm(&qword_26B2C8348);
}

uint64_t sub_256C5E510(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_26B2C8348, &qword_26B2C8340, &qword_26B2C8358);
}

unint64_t sub_256C5E52C()
{
  unint64_t result = qword_26B2C86B0;
  if (!qword_26B2C86B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C86B0);
  }
  return result;
}

unint64_t sub_256C5E578()
{
  unint64_t result = qword_26B2C86A8;
  if (!qword_26B2C86A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C86A8);
  }
  return result;
}

uint64_t sub_256C5E5C4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54FC8(v3, v4, v5, v6);
}

void sub_256C5E654(uint64_t a1)
{
  sub_256C55F44(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5E660(unsigned char *a1)
{
  return sub_256C5A394(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5E680()
{
  return objectdestroyTm(&qword_26B2C5060);
}

uint64_t sub_256C5E68C(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_26B2C5060, &qword_26B2C5020, &qword_26B2C50B8);
}

unint64_t sub_256C5E6A8()
{
  unint64_t result = qword_26B2C7738;
  if (!qword_26B2C7738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7738);
  }
  return result;
}

unint64_t sub_256C5E6F4()
{
  unint64_t result = qword_26B2C78D8;
  if (!qword_26B2C78D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C78D8);
  }
  return result;
}

uint64_t sub_256C5E740()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54EE4(v3, v4, v5, v6);
}

void sub_256C5E7D0(uint64_t a1)
{
  sub_256C55EC0(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5E7DC(unsigned char *a1)
{
  return sub_256C59FB4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5E7FC()
{
  return objectdestroyTm(&qword_26B2C5068);
}

uint64_t sub_256C5E808(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_26B2C5068, &qword_26B2C5030, &qword_26B2C50C0);
}

unint64_t sub_256C5E824()
{
  unint64_t result = qword_26B2C7740;
  if (!qword_26B2C7740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7740);
  }
  return result;
}

unint64_t sub_256C5E870()
{
  unint64_t result = qword_26B2C7900;
  if (!qword_26B2C7900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7900);
  }
  return result;
}

uint64_t sub_256C5E8BC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54E00(v3, v4, v5, v6);
}

void sub_256C5E94C(uint64_t a1)
{
  sub_256C55E3C(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5E958(unsigned char *a1)
{
  return sub_256C59BD4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5E978()
{
  return objectdestroyTm(&qword_269FC3F08);
}

uint64_t sub_256C5E984(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3F08, &qword_269FC3EE0, &qword_269FC3F28);
}

unint64_t sub_256C5E9A0()
{
  unint64_t result = qword_269FC3F18;
  if (!qword_269FC3F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3F18);
  }
  return result;
}

unint64_t sub_256C5E9EC()
{
  unint64_t result = qword_269FC3F20;
  if (!qword_269FC3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3F20);
  }
  return result;
}

uint64_t sub_256C5EA38()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54D1C(v3, v4, v5, v6);
}

void sub_256C5EAC8(uint64_t a1)
{
  sub_256C55DB8(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5EAD4(unsigned char *a1)
{
  return sub_256C5982C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5EAF4()
{
  return objectdestroyTm(&qword_26B2C5070);
}

uint64_t sub_256C5EB00(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_26B2C5070, qword_26B2C4D80, &qword_26B2C50C8);
}

unint64_t sub_256C5EB1C()
{
  unint64_t result = qword_26B2C5038;
  if (!qword_26B2C5038)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B2C4D80);
    sub_256C5F458(&qword_26B2C7948, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response);
    sub_256C5F458(&qword_26B2C7940, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response);
    sub_256C5F458(&qword_26B2C9150, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C9148, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C5038);
  }
  return result;
}

uint64_t sub_256C5EC64()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54C38(v3, v4, v5, v6);
}

void sub_256C5ECF4(uint64_t a1)
{
  sub_256C55D34(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5ED00(unsigned char *a1)
{
  return sub_256C5944C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5ED20()
{
  return objectdestroyTm(&qword_269FC3F88);
}

uint64_t sub_256C5ED2C(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3F88, &qword_269FC3F60, &qword_269FC3FA8);
}

unint64_t sub_256C5ED48()
{
  unint64_t result = qword_269FC3F98;
  if (!qword_269FC3F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3F98);
  }
  return result;
}

unint64_t sub_256C5ED94()
{
  unint64_t result = qword_269FC3FA0;
  if (!qword_269FC3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3FA0);
  }
  return result;
}

uint64_t sub_256C5EDE0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_297();
  v5(v4);
  return a2;
}

uint64_t sub_256C5EE34()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54B54(v3, v4, v5, v6);
}

void sub_256C5EEC4(uint64_t a1)
{
  sub_256C55CB0(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5EED0(unsigned char *a1)
{
  return sub_256C590A4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5EEF0()
{
  return objectdestroyTm(&qword_269FC3FE0);
}

uint64_t sub_256C5EEFC(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC3FE0, &qword_269FC3FB8, &qword_269FC4000);
}

unint64_t sub_256C5EF18()
{
  unint64_t result = qword_269FC3FE8;
  if (!qword_269FC3FE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC3FB8);
    sub_256C5F458(&qword_269FC3FF0, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest.Response);
    sub_256C5F458(&qword_269FC3FF8, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest.Response);
    sub_256C5F458(&qword_26B2C9150, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C9148, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC3FE8);
  }
  return result;
}

uint64_t sub_256C5F060()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C548A8(v3, v4, v5, v6);
}

void sub_256C5F0F0()
{
  sub_256C5BFA0(*(os_unfair_lock_s **)(v0 + 16));
}

unsigned char *sub_256C5F0FC(unsigned char *a1)
{
  return sub_256C5D64C(a1, &qword_26B2C77A0, &qword_26B2C78B8, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest, &qword_26B2C54C0);
}

void sub_256C5F140(uint64_t a1)
{
  sub_256C55B24(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5F14C(unsigned char *a1)
{
  return sub_256C5853C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5F16C()
{
  return objectdestroyTm(&qword_26B2C5590);
}

uint64_t sub_256C5F178(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_26B2C5590, &qword_26B2C7778, &qword_26B2C5650);
}

unint64_t sub_256C5F194()
{
  unint64_t result = qword_26B2C77C0;
  if (!qword_26B2C77C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C77C0);
  }
  return result;
}

unint64_t sub_256C5F1E0()
{
  unint64_t result = qword_26B2C77B8;
  if (!qword_26B2C77B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C77B8);
  }
  return result;
}

uint64_t sub_256C5F22C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54A70(v3, v4, v5, v6);
}

void sub_256C5F2BC(uint64_t a1)
{
  sub_256C55C2C(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5F2C8(unsigned char *a1)
{
  return sub_256C58CFC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5F2E8()
{
  return objectdestroyTm(&qword_269FC4038);
}

uint64_t sub_256C5F2F4(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC4038, &qword_269FC38C8, &qword_269FC4058);
}

unint64_t sub_256C5F310()
{
  unint64_t result = qword_269FC4040;
  if (!qword_269FC4040)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC38C8);
    sub_256C5F458(&qword_269FC4048, (void (*)(uint64_t))type metadata accessor for InferenceProviderRequestResult);
    sub_256C5F458(&qword_269FC4050, (void (*)(uint64_t))type metadata accessor for InferenceProviderRequestResult);
    sub_256C5F458(&qword_26B2C9150, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    sub_256C5F458(&qword_26B2C9148, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4040);
  }
  return result;
}

uint64_t sub_256C5F458(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C5F4A0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C5498C(v3, v4, v5, v6);
}

void sub_256C5F530(uint64_t a1)
{
  sub_256C55BA8(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5F53C(unsigned char *a1)
{
  return sub_256C5891C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5F55C()
{
  return objectdestroyTm(&qword_269FC4078);
}

uint64_t sub_256C5F568(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC4078, &qword_269FC38D0, &qword_269FC4098);
}

unint64_t sub_256C5F584()
{
  unint64_t result = qword_269FC4088;
  if (!qword_269FC4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4088);
  }
  return result;
}

unint64_t sub_256C5F5D0()
{
  unint64_t result = qword_269FC4090;
  if (!qword_269FC4090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4090);
  }
  return result;
}

uint64_t sub_256C5F61C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C5F66C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  uint64_t v3 = OUTLINED_FUNCTION_8_3();
  v4(v3);
  return a1;
}

uint64_t sub_256C5F6BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v4();
  return a2;
}

uint64_t sub_256C5F718()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C545FC(v3, v4, v5, v6);
}

void sub_256C5F7A8(uint64_t a1)
{
  sub_256C55998(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5F7B4(unsigned char *a1)
{
  return sub_256C5799C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5F7D4()
{
  return objectdestroyTm(&qword_269FC40D0);
}

uint64_t sub_256C5F7E0(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC40D0, &qword_269FC40A8, &qword_269FC40F0);
}

unint64_t sub_256C5F7FC()
{
  unint64_t result = qword_269FC40E0;
  if (!qword_269FC40E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC40E0);
  }
  return result;
}

unint64_t sub_256C5F848()
{
  unint64_t result = qword_269FC40E8;
  if (!qword_269FC40E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC40E8);
  }
  return result;
}

uint64_t sub_256C5F894()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54518(v3, v4, v5, v6);
}

void sub_256C5F924(uint64_t a1)
{
  sub_256C55914(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5F930(unsigned char *a1)
{
  return sub_256C575BC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5F950()
{
  return objectdestroyTm(&qword_269FC4128);
}

uint64_t sub_256C5F95C(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC4128, &qword_269FC4100, &qword_269FC4148);
}

unint64_t sub_256C5F978()
{
  unint64_t result = qword_269FC4138;
  if (!qword_269FC4138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4138);
  }
  return result;
}

unint64_t sub_256C5F9C4()
{
  unint64_t result = qword_269FC4140;
  if (!qword_269FC4140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4140);
  }
  return result;
}

uint64_t sub_256C5FA10()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_119_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256C26524;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C54434(v3, v4, v5, v6);
}

void sub_256C5FAA0(uint64_t a1)
{
  sub_256C55890(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t sub_256C5FAAC(unsigned char *a1)
{
  return sub_256C571DC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_256C5FACC()
{
  return objectdestroyTm(&qword_269FC4180);
}

uint64_t sub_256C5FAD8(uint64_t a1)
{
  return sub_256C5FAF4(a1, &qword_269FC4180, &qword_269FC4158, &qword_269FC41A0);
}

uint64_t sub_256C5FAF4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_256C5BAD4(a1, v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a3, a4, a2);
}

unint64_t sub_256C5FB80()
{
  unint64_t result = qword_269FC4190;
  if (!qword_269FC4190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4190);
  }
  return result;
}

unint64_t sub_256C5FBCC()
{
  unint64_t result = qword_269FC4198;
  if (!qword_269FC4198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4198);
  }
  return result;
}

uint64_t sub_256C5FC18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v4();
  return a2;
}

uint64_t sub_256C5FC70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_297();
  v5(v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_31_2(uint64_t a1, void *a2)
{
  *a2 = v3;
  a2[1] = v2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_56_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_59_4()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_60_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_61_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  *a13 = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_65_2(void *a1)
{
  *(void *)(v3 + 80) = a1;
  a1[2] = v2;
  a1[3] = v1;
  a1[4] = v4;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_82_1(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_83_1(uint64_t a1)
{
  *uint64_t v1 = a1;
  return sub_256CEE308();
}

uint64_t OUTLINED_FUNCTION_84_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_87_1()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_88_1()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_90_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  sub_256C7FC00(v4);
}

void *OUTLINED_FUNCTION_91_1(void *result)
{
  *(void *)(v3 + 88) = result;
  result[2] = v2;
  result[3] = v4;
  result[4] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_92()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_94_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_95_1()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_96_1()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 296);
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_102_1()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_106(float a1)
{
  *uint64_t v1 = a1;
  JUMPOUT(0x25A2AE9C0);
}

void OUTLINED_FUNCTION_108_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void OUTLINED_FUNCTION_125()
{
}

uint64_t OUTLINED_FUNCTION_127()
{
  return *(void *)(v0 + 200);
}

void OUTLINED_FUNCTION_129()
{
}

void OUTLINED_FUNCTION_132()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_133()
{
  return *(void *)(v0 + 200);
}

void OUTLINED_FUNCTION_134()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_135_0()
{
  return *(void *)(v0 + 216);
}

void OUTLINED_FUNCTION_136()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

void OUTLINED_FUNCTION_138(float a1)
{
  *uint64_t v1 = a1;
}

void OUTLINED_FUNCTION_139_0()
{
  *uint64_t v2 = v1;
}

void OUTLINED_FUNCTION_140()
{
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_141()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_142()
{
  *(void *)(v0 + 24) = v1;
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_143(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_256C5F6BC(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_144()
{
  return sub_256CEDF88();
}

uint64_t OUTLINED_FUNCTION_146(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  return sub_256BE14CC(a1, a2, (uint64_t *)va);
}

BOOL OUTLINED_FUNCTION_148(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_150()
{
  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t OUTLINED_FUNCTION_151(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_256BE14CC(v8, v7, (uint64_t *)va);
}

BOOL OUTLINED_FUNCTION_152(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_153(uint64_t a1, uint64_t a2)
{
  return sub_256C5EDE0(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_154()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_155()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_156()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v3);
  *(void *)(v2 + 272) = *v4;
  return v0;
}

uint64_t OUTLINED_FUNCTION_158()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_159()
{
  return *(void *)(v0 + 272);
}

void OUTLINED_FUNCTION_160()
{
}

void OUTLINED_FUNCTION_161()
{
  uint64_t v2 = *(void **)(v0 + 24);
}

void OUTLINED_FUNCTION_162()
{
  *(void *)(v0 + 16) = v1;
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_163()
{
  return v0;
}

void OUTLINED_FUNCTION_164()
{
  *(void *)(v1 + 16) = v0;
  JUMPOUT(0x25A2AE9C0);
}

void OUTLINED_FUNCTION_165()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 288);
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_167()
{
  *(_WORD *)(v0 + 12) = 2080;
  return 0;
}

uint64_t OUTLINED_FUNCTION_169()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_170()
{
}

void OUTLINED_FUNCTION_171(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t OUTLINED_FUNCTION_172()
{
  return *(void *)(v0 + 208);
}

uint64_t OUTLINED_FUNCTION_177()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_186()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_187()
{
  return *(void *)(v0 + 192);
}

void OUTLINED_FUNCTION_188()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_190()
{
  return *(void *)(v0 + 208);
}

void OUTLINED_FUNCTION_199()
{
}

uint64_t OUTLINED_FUNCTION_201()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_202(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  return sub_256BE14CC(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_203()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_204()
{
  *uint64_t v0 = v2;
}

void OUTLINED_FUNCTION_205()
{
  *(void *)(v0 + 24) = v1;
  JUMPOUT(0x25A2AE9C0);
}

void OUTLINED_FUNCTION_206()
{
  *(void *)(v0 + 16) = v1;
  JUMPOUT(0x25A2AE9C0);
}

void OUTLINED_FUNCTION_208()
{
  JUMPOUT(0x25A2AE9C0);
}

uint64_t OUTLINED_FUNCTION_212()
{
  return sub_256CEDF88();
}

_WORD *OUTLINED_FUNCTION_213(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

void OUTLINED_FUNCTION_214()
{
  *(_WORD *)(v0 + 12) = 2080;
}

void OUTLINED_FUNCTION_218()
{
  uint64_t v2 = *(void **)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_219()
{
  return *(void *)(v0 + 264);
}

void OUTLINED_FUNCTION_220()
{
}

void OUTLINED_FUNCTION_224()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 304);
  JUMPOUT(0x25A2AE9C0);
}

void OUTLINED_FUNCTION_225()
{
  *(void *)(v1 + 16) = v0;
  JUMPOUT(0x25A2AE9C0);
}

void OUTLINED_FUNCTION_227()
{
}

void OUTLINED_FUNCTION_228(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t OUTLINED_FUNCTION_229()
{
  return *(void *)(v0 + 224);
}

uint64_t OUTLINED_FUNCTION_230()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_231(uint64_t result)
{
  *(void *)(v1 + 280) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_232(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_234()
{
  return *(void *)(v0 + 208);
}

uint64_t OUTLINED_FUNCTION_242(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_256C5F6BC(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_243()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void OUTLINED_FUNCTION_245()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_246()
{
  return *(void *)(v0 + 208);
}

void OUTLINED_FUNCTION_247()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_248()
{
  return *(void *)(v0 + 224);
}

void OUTLINED_FUNCTION_249()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

void OUTLINED_FUNCTION_252()
{
  uint64_t v2 = *(void **)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_253()
{
  return *(void *)(v0 + 280);
}

void OUTLINED_FUNCTION_254()
{
}

uint64_t OUTLINED_FUNCTION_261()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_268()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_269()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_274(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_275(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_276(uint64_t result)
{
  *(void *)(v1 + 296) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_280()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.ReleaseRequest(0);
}

uint64_t OUTLINED_FUNCTION_281()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.CreateSessionRequest(0);
}

uint64_t OUTLINED_FUNCTION_282()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.StartMonitoringInferences(0);
}

uint64_t OUTLINED_FUNCTION_283()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.AcquireRequest(0);
}

uint64_t OUTLINED_FUNCTION_284()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.PrewarmSession(0);
}

uint64_t OUTLINED_FUNCTION_285()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.CancelSessionRequest(0);
}

uint64_t OUTLINED_FUNCTION_286()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.FetchModelInstance(0);
}

uint64_t OUTLINED_FUNCTION_287()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.DeleteSessionRequest(0);
}

uint64_t OUTLINED_FUNCTION_288()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.ExecuteRequest(0);
}

uint64_t OUTLINED_FUNCTION_289()
{
  *(_WORD *)(v0 + 12) = 2080;
  return type metadata accessor for ModelXPCRequest.CancelRequest(0);
}

uint64_t OUTLINED_FUNCTION_290()
{
  return *(void *)(v0 + 16);
}

void OUTLINED_FUNCTION_291(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_294()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_295(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

ModelManagerServices::InferenceProviderXPCRequest::ConfigureBuiltInProviderRequest __swiftcall InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.init(provider:)(ModelManagerServices::BuiltInInferenceProvider provider)
{
  OUTLINED_FUNCTION_62_3(v1);
  return result;
}

uint64_t InferenceProviderXPCRequest.PrewarmBundle.init(information:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256C60EC8(a1, a2);
}

uint64_t InferenceProviderXPCRequest.TransitionAsset.init(inferenceAssetDescriptor:newState:oldState:requestIdentifier:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *a2;
  char v9 = *a3;
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v7;
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  *(unsigned char *)(a5 + 32) = v8;
  *(unsigned char *)(a5 + 33) = v9;
  uint64_t v10 = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
  return sub_256C5FC70(a4, a5 + *(int *)(v10 + 28), &qword_26B2C7798);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C7808);
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.init(asStream:clientData:configuration:requestIdentifier:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  *a5 = a1;
  char v9 = (int *)type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
  sub_256C60EC8(a2, (uint64_t)&a5[v9[5]]);
  sub_256C60EC8(a3, (uint64_t)&a5[v9[6]]);
  return sub_256C5FC70(a4, (uint64_t)&a5[v9[7]], &qword_26B2C7798);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C77A8);
}

uint64_t sub_256C60EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_43_2();
  v4(v3);
  OUTLINED_FUNCTION_10();
  uint64_t v5 = OUTLINED_FUNCTION_297();
  v6(v5);
  return a2;
}

uint64_t InferenceProviderXPCRequest.WillCancelNotification.init(requestID:reason:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  sub_256C5FC70(a1, a3, &qword_26B2C7798);
  uint64_t result = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
  *(void *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C4F50);
}

uint64_t InferenceProviderXPCRequest.AwaitEndStreamRequest.init(requestID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256C5FC70(a1, a2, &qword_26B2C7798);
}

uint64_t InferenceProviderRequestResult.directInferenceProviderEndpoint.getter()
{
  return sub_256C64CD4();
}

uint64_t type metadata accessor for InferenceProviderRequestResult(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C4F70);
}

uint64_t InferenceProviderRequestResult.firstResponse.getter()
{
  return sub_256C64D4C();
}

uint64_t InferenceProviderRequestResult.init(requestID:directInferenceProviderEndpoint:firstResponse:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_256C5FC70(a1, a4, &qword_26B2C7798);
  uint64_t v7 = type metadata accessor for InferenceProviderRequestResult(0);
  sub_256C5FC70(a2, a4 + *(int *)(v7 + 20), &qword_26B2C5328);
  return sub_256C5FC70(a3, a4 + *(int *)(v7 + 24), &qword_269FC3228);
}

uint64_t sub_256C610A4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4974736575716572 && a2 == 0xE900000000000044;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000256D00F50 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365527473726966 && a2 == 0xED000065736E6F70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_256C61208(char a1)
{
  if (!a1) {
    return 0x4974736575716572;
  }
  if (a1 == 1) {
    return 0xD00000000000001FLL;
  }
  return 0x7365527473726966;
}

uint64_t sub_256C61274()
{
  return sub_256C61208(*v0);
}

uint64_t sub_256C6127C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C610A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C612A4(uint64_t a1)
{
  unint64_t v2 = sub_256C61508();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C612E0(uint64_t a1)
{
  unint64_t v2 = sub_256C61508();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceProviderRequestResult.encode(to:)()
{
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC41A8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C61508();
  OUTLINED_FUNCTION_30_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  sub_256C61978((uint64_t)&unk_26B2C54B8);
  OUTLINED_FUNCTION_19_0();
  if (!v0)
  {
    type metadata accessor for InferenceProviderRequestResult(0);
    sub_256CEDD58();
    sub_256C61554((uint64_t)&unk_26B2C5320);
    OUTLINED_FUNCTION_61_5();
    sub_256CEE558();
    type metadata accessor for ClientData(0);
    sub_256C61554((uint64_t)&unk_269FC41B8);
    OUTLINED_FUNCTION_82_2();
    sub_256CEE558();
  }
  uint64_t v2 = OUTLINED_FUNCTION_27_5();
  return v3(v2);
}

unint64_t sub_256C61508()
{
  unint64_t result = qword_269FC41B0;
  if (!qword_269FC41B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC41B0);
  }
  return result;
}

unint64_t sub_256C61554(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void InferenceProviderRequestResult.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v4 = v3;
  uint64_t v19 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  uint64_t v7 = OUTLINED_FUNCTION_21(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  uint64_t v20 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
  uint64_t v10 = OUTLINED_FUNCTION_21(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_16_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_0();
  uint64_t v21 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC41C0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = OUTLINED_FUNCTION_54_0();
  uint64_t v15 = type metadata accessor for InferenceProviderRequestResult(v14);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_79_1(v4);
  sub_256C61508();
  sub_256CEE848();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    sub_256C61978((uint64_t)&unk_26B2C4EF8);
    sub_256CEE4D8();
    sub_256C5FC70(v21, v0, &qword_26B2C7798);
    sub_256CEDD58();
    sub_256C61554((uint64_t)&unk_26B2C4EB8);
    sub_256CEE488();
    sub_256C5FC70(v2, v0 + *(int *)(v15 + 20), &qword_26B2C5328);
    type metadata accessor for ClientData(0);
    sub_256C61554((uint64_t)&unk_269FC41C8);
    sub_256CEE488();
    uint64_t v17 = OUTLINED_FUNCTION_67_2();
    v18(v17);
    sub_256C5FC70(v20, v0 + *(int *)(v15 + 24), &qword_269FC3228);
    sub_256C61EB0(v0, v19);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    sub_256C61F4C(v0, (void (*)(void))type metadata accessor for InferenceProviderRequestResult);
  }
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

unint64_t sub_256C61978(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C7798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_256C619BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000256D00F70)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_256C61A44()
{
  return 0xD000000000000012;
}

void sub_256C61A60()
{
}

uint64_t sub_256C61A78()
{
  return InferenceProviderRequestResult.encode(to:)();
}

uint64_t sub_256C61A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C619BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256C61AC0(uint64_t a1)
{
  unint64_t v2 = sub_256C61E64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C61AFC(uint64_t a1)
{
  unint64_t v2 = sub_256C61E64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C61B38(uint64_t a1)
{
  unint64_t v2 = sub_256C61F00();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C61B74(uint64_t a1)
{
  unint64_t v2 = sub_256C61F00();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderXPCRequest.Notification.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  v18[0] = v0;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC41D0);
  OUTLINED_FUNCTION_0_0();
  v18[2] = v5;
  uint64_t v18[3] = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = OUTLINED_FUNCTION_32_4();
  v18[1] = type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(v7);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_54();
  uint64_t v9 = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  uint64_t v10 = OUTLINED_FUNCTION_21(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_44_0();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC41D8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_256C61E64();
  sub_256CEE878();
  sub_256C61EB0(v18[0], v1);
  sub_256C60EC8(v1, v2);
  sub_256C61F00();
  sub_256CEE538();
  sub_256C61554((uint64_t)&unk_269FC41F0);
  sub_256CEE5A8();
  OUTLINED_FUNCTION_50();
  v17();
  sub_256C61F4C(v2, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
  OUTLINED_FUNCTION_33();
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_269FC43B8);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.Notification(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C4F18);
}

unint64_t sub_256C61E64()
{
  unint64_t result = qword_269FC41E0;
  if (!qword_269FC41E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC41E0);
  }
  return result;
}

uint64_t sub_256C61EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_43_2();
  v4(v3);
  OUTLINED_FUNCTION_10();
  uint64_t v5 = OUTLINED_FUNCTION_97();
  v6(v5);
  return a2;
}

unint64_t sub_256C61F00()
{
  unint64_t result = qword_269FC41E8;
  if (!qword_269FC41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC41E8);
  }
  return result;
}

uint64_t sub_256C61F4C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v3();
  return a1;
}

void InferenceProviderXPCRequest.Notification.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v4 = v3;
  uint64_t v24 = v5;
  uint64_t v25 = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC41F8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_54();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4200);
  OUTLINED_FUNCTION_0_0();
  uint64_t v26 = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_53_0();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_256C61E64();
  uint64_t v11 = (uint64_t)v4;
  sub_256CEE848();
  if (!v0)
  {
    uint64_t v12 = v1;
    uint64_t v13 = sub_256CEE528();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14
      && (sub_256BEBCEC(1, v14, v13, v13 + 32, 0, (2 * v14) | 1),
          uint64_t v16 = v15,
          unint64_t v18 = v17,
          swift_bridgeObjectRelease(),
          v16 == v18 >> 1))
    {
      sub_256C61F00();
      sub_256CEE458();
      type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
      sub_256C61554((uint64_t)&unk_269FC4208);
      sub_256CEE4D8();
      uint64_t v11 = (uint64_t)v4;
      OUTLINED_FUNCTION_50();
      v22();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v23();
      sub_256C60EC8(v2, v24);
    }
    else
    {
      uint64_t v19 = sub_256CEE398();
      swift_allocError();
      uint64_t v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2BA0);
      uint64_t *v21 = v25;
      sub_256CEE468();
      sub_256CEE388();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x263F8DCB0], v19);
      swift_willThrow();
      uint64_t v11 = (uint64_t)v4;
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v12, v8);
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v11);
  OUTLINED_FUNCTION_33();
}

void sub_256C62354()
{
}

void sub_256C6236C()
{
}

uint64_t sub_256C62388(uint64_t a1)
{
  unint64_t v2 = sub_256C687C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C623C4(uint64_t a1)
{
  unint64_t v2 = sub_256C687C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceProviderXPCRequest.EmptyResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FF8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_79_1(a1);
  sub_256C687C4();
  sub_256CEE878();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t InferenceProviderXPCRequest.EmptyResponse.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_256C624F8(uint64_t a1)
{
  return InferenceProviderXPCRequest.EmptyResponse.init(from:)(a1);
}

uint64_t sub_256C62510(void *a1)
{
  return InferenceProviderXPCRequest.EmptyResponse.encode(to:)(a1);
}

ModelManagerServices::InferenceProviderXPCRequest::WireCode_optional __swiftcall InferenceProviderXPCRequest.WireCode.init(rawValue:)(Swift::UInt8 rawValue)
{
  OUTLINED_FUNCTION_62_3(v1);
  return result;
}

uint64_t InferenceProviderXPCRequest.WireCode.rawValue.getter()
{
  return *v0;
}

uint64_t sub_256C62544()
{
  return sub_256CD2590();
}

uint64_t sub_256C6254C()
{
  return sub_256BF1198();
}

uint64_t sub_256C62554()
{
  return sub_256CD2918();
}

ModelManagerServices::InferenceProviderXPCRequest::WireCode_optional sub_256C6255C(Swift::UInt8 *a1)
{
  return InferenceProviderXPCRequest.WireCode.init(rawValue:)(*a1);
}

uint64_t sub_256C62564@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = InferenceProviderXPCRequest.WireCode.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_256C6258C()
{
  return sub_256CEE058();
}

uint64_t sub_256C625EC()
{
  return sub_256CEE038();
}

void InferenceProviderXPCRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v61 = v0;
  unint64_t v2 = v1;
  uint64_t v57 = v3;
  uint64_t v59 = type metadata accessor for InferenceProviderXPCRequest(0);
  OUTLINED_FUNCTION_10();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v58 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)&v49 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)&v49 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v49 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v49 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v49 - v26;
  uint64_t v28 = v2[3];
  uint64_t v60 = v2;
  __swift_project_boxed_opaque_existential_1(v2, v28);
  uint64_t v29 = v61;
  sub_256CEE828();
  if (v29)
  {
    uint64_t v30 = v60;
  }
  else
  {
    uint64_t v61 = v25;
    uint64_t v50 = v22;
    uint64_t v51 = v19;
    uint64_t v52 = v16;
    uint64_t v53 = v13;
    uint64_t v31 = v58;
    uint64_t v54 = v27;
    __swift_project_boxed_opaque_existential_1(v64, v65);
    uint64_t v32 = sub_256CEE648();
    if ((v33 & 1) != 0 || v32 != 2)
    {
      uint64_t v34 = sub_256CEE398();
      swift_allocError();
      uint64_t v36 = v35;
      uint64_t v30 = v60;
      __swift_project_boxed_opaque_existential_1(v60, v60[3]);
      OUTLINED_FUNCTION_73_2();
      sub_256CEE818();
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      sub_256CEE368();
      sub_256CEDFB8();
      OUTLINED_FUNCTION_79_1(v64);
      sub_256CEE648();
      sub_256CEE5F8();
      sub_256CEDFB8();
      swift_bridgeObjectRelease();
      sub_256CEE388();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x263F8DCB8], v34);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v64);
    }
    else
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v64, v65);
      sub_256C68830();
      sub_256CEE668();
      uint64_t v30 = v60;
      BOOL v37 = v61;
      switch((char)v62)
      {
        case 1:
          OUTLINED_FUNCTION_4_4();
          uint64_t v39 = OUTLINED_FUNCTION_43_2();
          type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(v39);
          sub_256C61554((uint64_t)&unk_26B2C4F40);
          uint64_t v31 = v56;
          OUTLINED_FUNCTION_9_4();
          OUTLINED_FUNCTION_60_5();
          goto LABEL_17;
        case 2:
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v64, v65);
          uint64_t v40 = OUTLINED_FUNCTION_43_2();
          type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(v40);
          sub_256C61554((uint64_t)&unk_26B2C4F48);
          uint64_t v41 = (uint64_t)v50;
          sub_256CEE668();
          swift_storeEnumTagMultiPayload();
          uint64_t v38 = v41;
          break;
        case 3:
          OUTLINED_FUNCTION_4_4();
          uint64_t v42 = OUTLINED_FUNCTION_43_2();
          type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(v42);
          sub_256C61554((uint64_t)&unk_269FC4230);
          uint64_t v31 = v51;
          OUTLINED_FUNCTION_9_4();
          OUTLINED_FUNCTION_60_5();
          goto LABEL_17;
        case 4:
          OUTLINED_FUNCTION_4_4();
          uint64_t v43 = OUTLINED_FUNCTION_43_2();
          type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(v43);
          sub_256C61554((uint64_t)&unk_269FC4228);
          uint64_t v31 = v52;
          OUTLINED_FUNCTION_9_4();
          OUTLINED_FUNCTION_60_5();
          goto LABEL_17;
        case 5:
          OUTLINED_FUNCTION_4_4();
          uint64_t v44 = OUTLINED_FUNCTION_43_2();
          type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(v44);
          sub_256C61554((uint64_t)&unk_269FC4220);
          uint64_t v45 = (uint64_t)v53;
          OUTLINED_FUNCTION_9_4();
          OUTLINED_FUNCTION_60_5();
          swift_storeEnumTagMultiPayload();
          sub_256C60EC8(v45, (uint64_t)v54);
          goto LABEL_19;
        case 6:
          OUTLINED_FUNCTION_4_4();
          uint64_t v46 = OUTLINED_FUNCTION_43_2();
          type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(v46);
          sub_256C61554((uint64_t)&unk_269FC4218);
          uint64_t v31 = v55;
          OUTLINED_FUNCTION_9_4();
          OUTLINED_FUNCTION_60_5();
          goto LABEL_17;
        case 7:
          OUTLINED_FUNCTION_4_4();
          type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
          sub_256C61554((uint64_t)&unk_269FC4210);
          OUTLINED_FUNCTION_9_4();
          OUTLINED_FUNCTION_60_5();
LABEL_17:
          swift_storeEnumTagMultiPayload();
          uint64_t v38 = (uint64_t)v31;
          break;
        default:
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v64, v65);
          sub_256C688FC();
          sub_256CEE668();
          *BOOL v37 = v62;
          swift_storeEnumTagMultiPayload();
          uint64_t v38 = (uint64_t)v37;
          break;
      }
      sub_256C60EC8(v38, (uint64_t)v54);
LABEL_19:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v64);
      uint64_t v47 = OUTLINED_FUNCTION_51();
      sub_256C60EC8(v47, v48);
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void InferenceProviderXPCRequest.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v35 = v0;
  uint64_t v6 = v5;
  type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  uint64_t v34 = v8;
  uint64_t v9 = OUTLINED_FUNCTION_71_2();
  type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(v9);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_0();
  uint64_t v33 = v11;
  uint64_t v12 = OUTLINED_FUNCTION_71_2();
  type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(v12);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_0();
  uint64_t v32 = v14;
  uint64_t v15 = OUTLINED_FUNCTION_71_2();
  type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(v15);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_3_0();
  uint64_t v31 = v17;
  uint64_t v18 = OUTLINED_FUNCTION_71_2();
  type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(v18);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_3_0();
  uint64_t v30 = v20;
  uint64_t v21 = OUTLINED_FUNCTION_71_2();
  type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(v21);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_53_5();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v23);
  uint64_t v24 = OUTLINED_FUNCTION_12_0();
  type metadata accessor for InferenceProviderXPCRequest(v24);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_256CEE858();
  sub_256C61EB0(v35, v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v26 = v33;
      sub_256C60EC8(v2, v33);
      OUTLINED_FUNCTION_4_4();
      sub_256C68948();
      OUTLINED_FUNCTION_11_6();
      if (!v1)
      {
        OUTLINED_FUNCTION_4_4();
        sub_256C61554((uint64_t)&unk_26B2C54D8);
        OUTLINED_FUNCTION_72_1();
        OUTLINED_FUNCTION_17_5();
      }
      uint64_t v27 = type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle;
      goto LABEL_25;
    case 2u:
      sub_256C60EC8(v2, v3);
      OUTLINED_FUNCTION_4_4();
      sub_256C68948();
      OUTLINED_FUNCTION_11_6();
      if (!v1)
      {
        OUTLINED_FUNCTION_4_4();
        sub_256C61554((uint64_t)&unk_26B2C54E0);
        OUTLINED_FUNCTION_17_5();
      }
      uint64_t v28 = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset;
      uint64_t v29 = v3;
      goto LABEL_26;
    case 3u:
      sub_256C60EC8(v2, v4);
      OUTLINED_FUNCTION_4_4();
      sub_256C68948();
      OUTLINED_FUNCTION_11_6();
      if (!v1)
      {
        OUTLINED_FUNCTION_4_4();
        sub_256C61554((uint64_t)&unk_269FC4260);
        OUTLINED_FUNCTION_17_5();
      }
      uint64_t v28 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest;
      uint64_t v29 = v4;
      goto LABEL_26;
    case 4u:
      uint64_t v26 = v30;
      sub_256C60EC8(v2, v30);
      OUTLINED_FUNCTION_4_4();
      sub_256C68948();
      OUTLINED_FUNCTION_11_6();
      if (!v1)
      {
        OUTLINED_FUNCTION_4_4();
        sub_256C61554((uint64_t)&unk_269FC4258);
        OUTLINED_FUNCTION_72_1();
        OUTLINED_FUNCTION_17_5();
      }
      uint64_t v27 = type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake;
      goto LABEL_25;
    case 5u:
      uint64_t v26 = v31;
      sub_256C60EC8(v2, v31);
      OUTLINED_FUNCTION_4_4();
      sub_256C68948();
      OUTLINED_FUNCTION_11_6();
      if (!v1)
      {
        OUTLINED_FUNCTION_4_4();
        sub_256C61554((uint64_t)&unk_269FC4250);
        OUTLINED_FUNCTION_72_1();
        OUTLINED_FUNCTION_17_5();
      }
      uint64_t v27 = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest;
      goto LABEL_25;
    case 6u:
      uint64_t v26 = v32;
      sub_256C60EC8(v2, v32);
      OUTLINED_FUNCTION_4_4();
      sub_256C68948();
      OUTLINED_FUNCTION_11_6();
      if (!v1)
      {
        OUTLINED_FUNCTION_4_4();
        sub_256C61554((uint64_t)&unk_269FC4248);
        OUTLINED_FUNCTION_72_1();
        OUTLINED_FUNCTION_17_5();
      }
      uint64_t v27 = type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest;
      goto LABEL_25;
    case 7u:
      uint64_t v26 = v34;
      sub_256C60EC8(v2, v34);
      OUTLINED_FUNCTION_4_4();
      sub_256C68948();
      OUTLINED_FUNCTION_11_6();
      if (!v1)
      {
        OUTLINED_FUNCTION_4_4();
        sub_256C61554((uint64_t)&unk_269FC4240);
        OUTLINED_FUNCTION_72_1();
        OUTLINED_FUNCTION_17_5();
      }
      uint64_t v27 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification;
LABEL_25:
      uint64_t v28 = v27;
      uint64_t v29 = v26;
LABEL_26:
      sub_256C61F4C(v29, (void (*)(void))v28);
      break;
    default:
      OUTLINED_FUNCTION_4_4();
      sub_256C68948();
      OUTLINED_FUNCTION_11_6();
      if (!v1)
      {
        OUTLINED_FUNCTION_4_4();
        sub_256C68994();
        OUTLINED_FUNCTION_17_5();
      }
      break;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v36);
  OUTLINED_FUNCTION_33();
}

void sub_256C635F4()
{
}

void sub_256C6360C()
{
}

void InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.provider.getter(unsigned char *a1@<X8>)
{
}

uint64_t InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.request.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = *v1;
  type metadata accessor for InferenceProviderXPCRequest(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256C63678(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256C63700()
{
  return 0x72656469766F7270;
}

uint64_t sub_256C6371C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C63678(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256C63748(uint64_t a1)
{
  unint64_t v2 = sub_256C689E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C63784(uint64_t a1)
{
  unint64_t v2 = sub_256C689E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4270);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_54();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_256C689E0();
  OUTLINED_FUNCTION_30_4();
  sub_256C68A2C();
  sub_256CEE5A8();
  OUTLINED_FUNCTION_45();
  v3();
  OUTLINED_FUNCTION_33();
}

void InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4288);
  OUTLINED_FUNCTION_0_0();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_54();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_256C689E0();
  sub_256CEE848();
  if (!v13)
  {
    sub_256C68A78();
    sub_256CEE4D8();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v14, v19);
    *uint64_t v18 = a13;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  OUTLINED_FUNCTION_33();
}

void sub_256C639D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_256C639EC()
{
}

uint64_t InferenceProviderXPCRequest.PrewarmBundle.information.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C61EB0(v1, a1);
}

uint64_t InferenceProviderXPCRequest.PrewarmBundle.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C65F74(a1);
}

uint64_t sub_256C63A54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74616D726F666E69 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256C63AEC()
{
  return 0x74616D726F666E69;
}

uint64_t sub_256C63B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C63A54(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256C63B3C(uint64_t a1)
{
  unint64_t v2 = sub_256C68AC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C63B78(uint64_t a1)
{
  unint64_t v2 = sub_256C68AC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceProviderXPCRequest.PrewarmBundle.encode(to:)()
{
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5618);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_13_3();
  sub_256C68AC4();
  OUTLINED_FUNCTION_30_4();
  type metadata accessor for InferenceProviderPrewarmInformation(0);
  sub_256C61554((uint64_t)&unk_26B2C54F8);
  OUTLINED_FUNCTION_83_2();
  sub_256CEE5A8();
  OUTLINED_FUNCTION_45();
  return v1();
}

void InferenceProviderXPCRequest.PrewarmBundle.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v13);
  type metadata accessor for InferenceProviderPrewarmInformation(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_16_0(v15, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FD8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(0);
  uint64_t v18 = OUTLINED_FUNCTION_21(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_34_5();
  sub_256C68AC4();
  OUTLINED_FUNCTION_33_7();
  if (!v11)
  {
    sub_256C61554((uint64_t)&unk_26B2C4FA0);
    sub_256CEE4D8();
    OUTLINED_FUNCTION_50();
    v19();
    sub_256C60EC8(a10, v12);
    sub_256C60EC8(v12, v21);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v10);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256C63E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  InferenceProviderXPCRequest.PrewarmBundle.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_256C63EAC()
{
  return InferenceProviderXPCRequest.PrewarmBundle.encode(to:)();
}

uint64_t InferenceProviderXPCRequest.TransitionAsset.inferenceAssetDescriptor.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

void InferenceProviderXPCRequest.TransitionAsset.newState.getter(unsigned char *a1@<X8>)
{
}

void InferenceProviderXPCRequest.TransitionAsset.oldState.getter(unsigned char *a1@<X8>)
{
}

uint64_t InferenceProviderXPCRequest.TransitionAsset.requestIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C64D9C(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset, a1);
}

uint64_t InferenceProviderXPCRequest.TransitionAsset.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C65F74(a1);
}

uint64_t sub_256C63F4C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000256D00F90 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x657461745377656ELL && a2 == 0xE800000000000000;
    if (v5 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x6574617453646C6FLL && a2 == 0xE800000000000000;
      if (v6 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00FB0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v7 = sub_256CEE6C8();
        swift_bridgeObjectRelease();
        if (v7) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_256C640EC(char a1)
{
  uint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1400333678;
      goto LABEL_4;
    case 2:
      unsigned int v3 = 1399090287;
LABEL_4:
      uint64_t result = v3 | 0x6574617400000000;
      break;
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_256C64184()
{
  return sub_256C640EC(*v0);
}

uint64_t sub_256C6418C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C63F4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C641B4(uint64_t a1)
{
  unint64_t v2 = sub_256C68B10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C641F0(uint64_t a1)
{
  unint64_t v2 = sub_256C68B10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceProviderXPCRequest.TransitionAsset.encode(to:)()
{
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5620);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C68B10();
  OUTLINED_FUNCTION_30_4();
  sub_256C15810();
  OUTLINED_FUNCTION_19_0();
  if (!v0)
  {
    sub_256C158F4();
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_19_0();
    type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
    sub_256C61978((uint64_t)&unk_26B2C54B8);
    OUTLINED_FUNCTION_19_0();
  }
  uint64_t v2 = OUTLINED_FUNCTION_27_5();
  return v3(v2);
}

void InferenceProviderXPCRequest.TransitionAsset.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v4 = v3;
  uint64_t v12 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4FE0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_53_5();
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_79_1(v4);
  sub_256C68B10();
  sub_256CEE848();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    sub_256C15AB4();
    OUTLINED_FUNCTION_46_3();
    *(void *)uint64_t v0 = v13;
    *(void *)(v0 + 8) = v14;
    *(void *)(v0 + 16) = v15;
    *(void *)(v0 + 24) = v16;
    sub_256C15B98();
    sub_256CEE4D8();
    *(unsigned char *)(v0 + 32) = v13;
    OUTLINED_FUNCTION_46_3();
    *(unsigned char *)(v0 + 33) = v13;
    sub_256C61978((uint64_t)&unk_26B2C4EF8);
    OUTLINED_FUNCTION_46_3();
    uint64_t v10 = OUTLINED_FUNCTION_68_1();
    v11(v10);
    sub_256C5FC70(v2, v0 + *(int *)(v8 + 28), &qword_26B2C7798);
    sub_256C61EB0(v0, v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    sub_256C61F4C(v0, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  }
  OUTLINED_FUNCTION_33();
}

void sub_256C646FC()
{
}

uint64_t sub_256C64714()
{
  return InferenceProviderXPCRequest.TransitionAsset.encode(to:)();
}

void InferenceProviderXPCRequest.FetchNextStreamResultsRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_32_4();
  uint64_t NextStreamResultsRequest = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(v8);
  uint64_t v10 = OUTLINED_FUNCTION_21(NextStreamResultsRequest);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_29();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_256CEE838();
  if (!v0)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    sub_256C61978((uint64_t)&unk_26B2C4EF8);
    sub_256CEE6E8();
    sub_256C5FC70(v1, v2, &qword_26B2C7798);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_256C60EC8(v2, v6);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  OUTLINED_FUNCTION_33();
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_73_2();
  uint64_t v1 = sub_256CEE868();
  OUTLINED_FUNCTION_76_1(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11[0], v12, v13, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  sub_256C61978((uint64_t)&unk_26B2C54B8);
  sub_256CEE708();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.elements.getter()
{
  return sub_256CEDEC8();
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.isTerminal.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

ModelManagerServices::InferenceProviderXPCRequest::FetchNextStreamResultsRequest::Response __swiftcall InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.init(elements:isTerminal:)(Swift::OpaquePointer elements, Swift::Bool isTerminal)
{
  *(Swift::OpaquePointer *)uint64_t v2 = elements;
  *(unsigned char *)(v2 + 8) = isTerminal;
  result.elements = elements;
  result.isTerminal = isTerminal;
  return result;
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CEE828();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4298);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_256C68B5C((uint64_t)&unk_269FC42A0);
  sub_256CEE668();
  uint64_t v5 = v10;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_256CEDEC8();
  char v6 = sub_256CEE658() & 1;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v6;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.encode(to:)(void *a1)
{
  uint64_t v3 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_73_2();
  uint64_t v4 = sub_256CEE858();
  OUTLINED_FUNCTION_76_1(v4, v5, v6, v7, v8, v9, v10, v11, v3, v22[0], v23, v24, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4298);
  sub_256C68B5C((uint64_t)&unk_269FC42A8);
  uint64_t v12 = sub_256CEE698();
  if (!v2)
  {
    OUTLINED_FUNCTION_76_1(v12, v13, v14, v15, v16, v17, v18, v19, v21, v22[0], v23, v24, v25);
    sub_256CEE688();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
}

uint64_t sub_256C64C0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_256C64C24(void *a1)
{
  return InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.encode(to:)(a1);
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C65F74(a1);
}

void sub_256C64C5C()
{
}

uint64_t sub_256C64C74(void *a1)
{
  return InferenceProviderXPCRequest.FetchNextStreamResultsRequest.encode(to:)(a1);
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.isStream.getter()
{
  return *v0;
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.clientData.getter()
{
  return sub_256C64CD4();
}

uint64_t sub_256C64CD4()
{
  uint64_t v1 = OUTLINED_FUNCTION_59_5();
  uint64_t v3 = v2(v1);
  uint64_t v4 = OUTLINED_FUNCTION_78_2(*(int *)(v3 + 20));
  return v0(v4);
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.configuration.getter()
{
  return sub_256C64D4C();
}

uint64_t sub_256C64D4C()
{
  uint64_t v1 = OUTLINED_FUNCTION_59_5();
  uint64_t v3 = v2(v1);
  uint64_t v4 = OUTLINED_FUNCTION_78_2(*(int *)(v3 + 24));
  return v0(v4);
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.requestIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C64D9C(type metadata accessor for InferenceProviderXPCRequest.InferenceRequest, a1);
}

uint64_t sub_256C64D9C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  return sub_256BFD41C(v2 + *(int *)(v4 + 28), a2, &qword_26B2C7798);
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C65F74(a1);
}

uint64_t sub_256C64E00(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6D61657274537369 && a2 == 0xE800000000000000;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6144746E65696C63 && a2 == 0xEA00000000006174;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
      if (v7 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00FB0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_256CEE6C8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_256C64FB8(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6144746E65696C63;
      break;
    case 2:
      unint64_t result = 0x72756769666E6F63;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0x6D61657274537369;
      break;
  }
  return result;
}

unint64_t sub_256C65060()
{
  return sub_256C64FB8(*v0);
}

uint64_t sub_256C65068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C64E00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C65090(uint64_t a1)
{
  unint64_t v2 = sub_256C68BEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C650CC(uint64_t a1)
{
  unint64_t v2 = sub_256C68BEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC42B0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C68BEC();
  OUTLINED_FUNCTION_30_4();
  sub_256CEE578();
  if (!v0)
  {
    type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
    type metadata accessor for ClientData(0);
    sub_256C61554((uint64_t)&unk_269FC41B8);
    OUTLINED_FUNCTION_61_5();
    sub_256CEE5A8();
    type metadata accessor for InferenceProviderRequestConfiguration(0);
    sub_256C61554((uint64_t)&unk_269FC42C0);
    OUTLINED_FUNCTION_82_2();
    sub_256CEE5A8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
    sub_256C61978((uint64_t)&unk_26B2C54B8);
    sub_256CEE5A8();
  }
  uint64_t v2 = OUTLINED_FUNCTION_27_5();
  return v3(v2);
}

void InferenceProviderXPCRequest.InferenceRequest.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v5 = v4;
  uint64_t v16 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_54_0();
  type metadata accessor for InferenceProviderRequestConfiguration(v8);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_44_0();
  type metadata accessor for ClientData(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_53_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC42C8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_32_4();
  uint64_t v17 = (int *)type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(v12);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_0();
  uint64_t v18 = v14;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_256C68BEC();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  }
  else
  {
    *uint64_t v18 = sub_256CEE4A8() & 1;
    sub_256C61554((uint64_t)&unk_269FC41C8);
    OUTLINED_FUNCTION_44_4();
    sub_256C60EC8(v2, (uint64_t)&v18[v17[5]]);
    sub_256C61554((uint64_t)&unk_269FC42D0);
    OUTLINED_FUNCTION_44_4();
    sub_256C60EC8(v1, (uint64_t)&v18[v17[6]]);
    sub_256C61978((uint64_t)&unk_26B2C4EF8);
    OUTLINED_FUNCTION_44_4();
    OUTLINED_FUNCTION_45();
    v15();
    sub_256C5FC70(v3, (uint64_t)&v18[v17[7]], &qword_26B2C7798);
    sub_256C61EB0((uint64_t)v18, v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    sub_256C61F4C((uint64_t)v18, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  }
  OUTLINED_FUNCTION_33();
}

void sub_256C6577C()
{
}

uint64_t sub_256C65794()
{
  return InferenceProviderXPCRequest.InferenceRequest.encode(to:)();
}

uint64_t InferenceProviderXPCRequest.DirectStreamHandshake.requestIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256BFD41C(v1, a1, &qword_26B2C7798);
}

uint64_t InferenceProviderXPCRequest.DirectStreamHandshake.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C65F74(a1);
}

uint64_t sub_256C657F0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00FB0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_256C65878()
{
  return 0xD000000000000011;
}

uint64_t sub_256C65898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C657F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256C658C4(uint64_t a1)
{
  unint64_t v2 = sub_256C68C38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C65900(uint64_t a1)
{
  unint64_t v2 = sub_256C68C38();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderXPCRequest.DirectStreamHandshake.encode(to:)()
{
}

void InferenceProviderXPCRequest.DirectStreamHandshake.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_16_0(v14, v24[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC42E8);
  OUTLINED_FUNCTION_0_0();
  v24[1] = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = OUTLINED_FUNCTION_12_0();
  uint64_t v18 = type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(v17);
  uint64_t v19 = OUTLINED_FUNCTION_21(v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_34_5();
  sub_256C68C38();
  OUTLINED_FUNCTION_33_7();
  if (!v11)
  {
    sub_256C61978((uint64_t)&unk_26B2C4EF8);
    OUTLINED_FUNCTION_28_1();
    uint64_t v22 = OUTLINED_FUNCTION_24_5();
    v23(v22);
    sub_256C5FC70(a10, (uint64_t)v21, &qword_26B2C7798);
    sub_256C60EC8((uint64_t)v21, v24[0]);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v10);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256C65AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  InferenceProviderXPCRequest.DirectStreamHandshake.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_256C65B14()
{
}

uint64_t InferenceProviderXPCRequest.AwaitEndStreamRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C65F74(a1);
}

uint64_t sub_256C65B48()
{
  return 0x4974736575716572;
}

uint64_t sub_256C65B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C684CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_256C65B94(uint64_t a1)
{
  unint64_t v2 = sub_256C68C84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C65BD0(uint64_t a1)
{
  unint64_t v2 = sub_256C68C84();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderXPCRequest.AwaitEndStreamRequest.encode(to:)()
{
}

void sub_256C65C48()
{
  OUTLINED_FUNCTION_32_0();
  char v3 = v2;
  OUTLINED_FUNCTION_66_1();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_29();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v3();
  sub_256CEE878();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  sub_256C61978((uint64_t)&unk_26B2C54B8);
  OUTLINED_FUNCTION_83_2();
  sub_256CEE5A8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  OUTLINED_FUNCTION_33();
}

void InferenceProviderXPCRequest.AwaitEndStreamRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_16_0(v14, v24[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4300);
  OUTLINED_FUNCTION_0_0();
  v24[1] = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = OUTLINED_FUNCTION_12_0();
  uint64_t v18 = type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(v17);
  uint64_t v19 = OUTLINED_FUNCTION_21(v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_34_5();
  sub_256C68C84();
  OUTLINED_FUNCTION_33_7();
  if (!v11)
  {
    sub_256C61978((uint64_t)&unk_26B2C4EF8);
    OUTLINED_FUNCTION_28_1();
    uint64_t v22 = OUTLINED_FUNCTION_24_5();
    v23(v22);
    sub_256C5FC70(a10, (uint64_t)v21, &qword_26B2C7798);
    sub_256C60EC8((uint64_t)v21, v24[0]);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v10);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256C65EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  InferenceProviderXPCRequest.AwaitEndStreamRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_256C65EFC()
{
}

unint64_t InferenceProviderXPCRequest.WillCancelNotification.reason.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0) + 20));
  *a1 = v3;
  return sub_256C255D4(v3);
}

uint64_t InferenceProviderXPCRequest.WillCancelNotification.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C65F74(a1);
}

uint64_t sub_256C65F74@<X0>(uint64_t a1@<X8>)
{
  sub_256C61EB0(v1, a1);
  type metadata accessor for InferenceProviderXPCRequest(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_256C65FCC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4974736575716572 && a2 == 0xE900000000000044;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256C660B4(char a1)
{
  if (a1) {
    return 0x6E6F73616572;
  }
  else {
    return 0x4974736575716572;
  }
}

uint64_t sub_256C660EC()
{
  return sub_256C660B4(*v0);
}

uint64_t sub_256C660F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C65FCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C6611C(uint64_t a1)
{
  unint64_t v2 = sub_256C68CD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C66158(uint64_t a1)
{
  unint64_t v2 = sub_256C68CD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceProviderXPCRequest.WillCancelNotification.encode(to:)()
{
  OUTLINED_FUNCTION_66_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4308);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_3();
  sub_256C68CD0();
  OUTLINED_FUNCTION_30_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  sub_256C61978((uint64_t)&unk_26B2C54B8);
  OUTLINED_FUNCTION_19_0();
  if (!v0)
  {
    type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
    sub_256C68D1C();
    OUTLINED_FUNCTION_19_0();
  }
  uint64_t v2 = OUTLINED_FUNCTION_27_5();
  return v3(v2);
}

void InferenceProviderXPCRequest.WillCancelNotification.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v3 = v2;
  uint64_t v12 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_3_0();
  uint64_t v13 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4320);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_12_0();
  uint64_t v9 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(v8);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_16_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256C68CD0();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  }
  else
  {
    sub_256C61978((uint64_t)&unk_26B2C4EF8);
    sub_256CEE4D8();
    sub_256C5FC70(v13, v1, &qword_26B2C7798);
    sub_256C68D68();
    sub_256CEE4D8();
    OUTLINED_FUNCTION_45();
    v11();
    *(void *)(v1 + *(int *)(v9 + 20)) = v14;
    sub_256C61EB0(v1, v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    sub_256C61F4C(v1, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
  }
  OUTLINED_FUNCTION_33();
}

void sub_256C66570()
{
}

uint64_t sub_256C66588()
{
  return InferenceProviderXPCRequest.WillCancelNotification.encode(to:)();
}

uint64_t sub_256C665A0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v4;
  uint64_t v5 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
  v1[6] = v5;
  OUTLINED_FUNCTION_21(v5);
  v1[7] = OUTLINED_FUNCTION_51_0();
  uint64_t v6 = type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(0);
  OUTLINED_FUNCTION_21(v6);
  v1[8] = OUTLINED_FUNCTION_51_0();
  uint64_t v7 = type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(0);
  OUTLINED_FUNCTION_21(v7);
  v1[9] = OUTLINED_FUNCTION_51_0();
  uint64_t NextStreamResultsRequest = type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  OUTLINED_FUNCTION_21(NextStreamResultsRequest);
  v1[10] = OUTLINED_FUNCTION_51_0();
  uint64_t v9 = type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(0);
  OUTLINED_FUNCTION_21(v9);
  v1[11] = OUTLINED_FUNCTION_51_0();
  uint64_t v10 = type metadata accessor for InferenceProviderRequestResult(0);
  OUTLINED_FUNCTION_21(v10);
  v1[12] = OUTLINED_FUNCTION_51_0();
  uint64_t v11 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
  v1[13] = v11;
  OUTLINED_FUNCTION_21(v11);
  v1[14] = OUTLINED_FUNCTION_51_0();
  uint64_t v12 = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
  OUTLINED_FUNCTION_21(v12);
  v1[15] = OUTLINED_FUNCTION_51_0();
  uint64_t v13 = type metadata accessor for InferenceProviderXPCRequest(0);
  v1[16] = v13;
  OUTLINED_FUNCTION_21(v13);
  v1[17] = OUTLINED_FUNCTION_51_0();
  return MEMORY[0x270FA2498](sub_256C66734, v3, 0);
}

uint64_t sub_256C66734()
{
  OUTLINED_FUNCTION_12();
  sub_256C61EB0(*(void *)(v0 + 40), *(void *)(v0 + 136));
  OUTLINED_FUNCTION_51();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = *(void *)(v0 + 24);
      sub_256C60EC8(*(void *)(v0 + 136), *(void *)(v0 + 64));
      *(void *)(v7 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
      *(void *)(v7 + 32) = sub_256C714EC((uint64_t)&unk_26B2C7770);
      unint64_t v8 = sub_256C714EC((uint64_t)&unk_26B2C4ED8);
      OUTLINED_FUNCTION_63_3(v8);
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      *(void *)(v0 + 264) = v9;
      *uint64_t v9 = v10;
      v9[1] = sub_256C67A7C;
      uint64_t v11 = OUTLINED_FUNCTION_39_6();
      uint64_t result = sub_256CD3A54(v11, v12);
      break;
    case 2u:
      uint64_t v13 = *(void *)(v0 + 24);
      sub_256C60EC8(*(void *)(v0 + 136), *(void *)(v0 + 120));
      *(void *)(v13 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
      *(void *)(v13 + 32) = sub_256C714EC((uint64_t)&unk_26B2C7770);
      unint64_t v14 = sub_256C714EC((uint64_t)&unk_26B2C4ED8);
      OUTLINED_FUNCTION_63_3(v14);
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      *(void *)(v0 + 160) = v15;
      *uint64_t v15 = v16;
      v15[1] = sub_256C67114;
      uint64_t v17 = OUTLINED_FUNCTION_39_6();
      uint64_t result = sub_256CD3DFC(v17, v18);
      break;
    case 3u:
      uint64_t v19 = *(uint64_t **)(v0 + 24);
      sub_256C60EC8(*(void *)(v0 + 136), *(void *)(v0 + 112));
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38C8);
      *(void *)(v0 + 176) = v20;
      v19[3] = v20;
      v19[4] = sub_256C716F8((uint64_t)&qword_269FC4040);
      v19[5] = sub_256C716F8((uint64_t)&unk_269FC44C8);
      *(void *)(v0 + 184) = __swift_allocate_boxed_opaque_existential_1(v19);
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      *(void *)(v0 + 192) = v21;
      void *v21 = v22;
      v21[1] = sub_256C672C4;
      uint64_t result = sub_256CDAAA4();
      break;
    case 4u:
      uint64_t v23 = *(void *)(v0 + 24);
      sub_256C60EC8(*(void *)(v0 + 136), *(void *)(v0 + 88));
      *(void *)(v23 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
      *(void *)(v23 + 32) = sub_256C714EC((uint64_t)&unk_26B2C7770);
      unint64_t v24 = sub_256C714EC((uint64_t)&unk_26B2C4ED8);
      OUTLINED_FUNCTION_63_3(v24);
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      *(void *)(v0 + 208) = v25;
      *uint64_t v25 = v26;
      v25[1] = sub_256C67570;
      OUTLINED_FUNCTION_39_6();
      uint64_t result = sub_256CD4D30();
      break;
    case 5u:
      uint64_t v27 = *(void *)(v0 + 24);
      sub_256C60EC8(*(void *)(v0 + 136), *(void *)(v0 + 80));
      *(void *)(v27 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC38D0);
      *(void *)(v27 + 32) = sub_256C71624((uint64_t)&unk_269FC4080);
      unint64_t v28 = sub_256C71624((uint64_t)&unk_269FC44C0);
      OUTLINED_FUNCTION_63_3(v28);
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      *(void *)(v0 + 224) = v29;
      *uint64_t v29 = v30;
      v29[1] = sub_256C67720;
      OUTLINED_FUNCTION_39_6();
      uint64_t result = sub_256CD44F0();
      break;
    case 6u:
      uint64_t v31 = *(void *)(v0 + 24);
      sub_256C60EC8(*(void *)(v0 + 136), *(void *)(v0 + 72));
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
      *(void *)(v0 + 240) = v32;
      *(void *)(v31 + 24) = v32;
      *(void *)(v31 + 32) = sub_256C714EC((uint64_t)&unk_26B2C7770);
      unint64_t v33 = sub_256C714EC((uint64_t)&unk_26B2C4ED8);
      *(void *)(v0 + 248) = OUTLINED_FUNCTION_63_3(v33);
      uint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v34;
      *uint64_t v34 = v0;
      v34[1] = sub_256C678D0;
      uint64_t result = sub_256CDD9FC();
      break;
    case 7u:
      uint64_t v36 = *(void *)(v0 + 48);
      uint64_t v35 = *(void *)(v0 + 56);
      BOOL v37 = *(uint64_t **)(v0 + 24);
      sub_256C60EC8(*(void *)(v0 + 136), v35);
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
      *(void *)(v0 + 280) = v38;
      v37[3] = v38;
      v37[4] = sub_256C714EC((uint64_t)&unk_26B2C7770);
      v37[5] = sub_256C714EC((uint64_t)&unk_26B2C4ED8);
      *(void *)(v0 + 288) = __swift_allocate_boxed_opaque_existential_1(v37);
      unint64_t v39 = *(void *)(v35 + *(int *)(v36 + 20));
      *(void *)(v0 + 296) = v39;
      *(void *)(v0 + 16) = v39;
      sub_256C255D4(v39);
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_256C67C2C;
      uint64_t result = sub_256CDED14();
      break;
    default:
      uint64_t v1 = *(uint64_t **)(v0 + 24);
      *(unsigned char *)(v0 + 312) = **(unsigned char **)(v0 + 136);
      v1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7778);
      v1[4] = sub_256C714EC((uint64_t)&unk_26B2C7770);
      v1[5] = sub_256C714EC((uint64_t)&unk_26B2C4ED8);
      __swift_allocate_boxed_opaque_existential_1(v1);
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      *(void *)(v0 + 144) = v2;
      *uint64_t v2 = v3;
      v2[1] = sub_256C66F90;
      uint64_t v4 = OUTLINED_FUNCTION_39_6();
      uint64_t result = sub_256CD3848(v4, v5);
      break;
  }
  return result;
}

uint64_t sub_256C66F90()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3();
  void *v6 = v5;
  *(void *)(v3 + 152) = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 32);
  if (v0) {
    unint64_t v8 = sub_256C67DF4;
  }
  else {
    unint64_t v8 = sub_256C67078;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_256C67078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_6_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_5();
  return v11(v10, v11, v12, v13, v14, v15, v16, v17, a9, a10);
}

uint64_t sub_256C67114()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C6720C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_59();
  sub_256C61F4C(*(void *)(v10 + 120), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  OUTLINED_FUNCTION_6_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_5();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t sub_256C672C4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C673BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_59();
  uint64_t v11 = v10[14];
  sub_256C60EC8(v10[12], v10[23]);
  OUTLINED_FUNCTION_51();
  swift_storeEnumTagMultiPayload();
  sub_256C61F4C(v11, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  OUTLINED_FUNCTION_6_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_5();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_256C674A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_44_1();
  uint64_t v13 = *(void *)(v12 + 24);
  sub_256C61F4C(*(void *)(v12 + 112), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  __swift_deallocate_boxed_opaque_existential_2(v13);
  OUTLINED_FUNCTION_13_5();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_20_1();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_256C67570()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 216) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C67668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_59();
  sub_256C61F4C(*(void *)(v10 + 88), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  OUTLINED_FUNCTION_6_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_5();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t sub_256C67720()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C67818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_59();
  sub_256C61F4C(*(void *)(v10 + 80), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_6_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_5();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t sub_256C678D0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256C679B4, v2, 0);
}

uint64_t sub_256C679B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_59();
  uint64_t v11 = *(void *)(v10 + 72);
  swift_storeEnumTagMultiPayload();
  sub_256C61F4C(v11, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest);
  OUTLINED_FUNCTION_6_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_5();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_256C67A7C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 272) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_84();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256C67B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_59();
  sub_256C61F4C(*(void *)(v10 + 64), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  OUTLINED_FUNCTION_6_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_5();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t sub_256C67C2C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  unint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_3();
  void *v5 = v4;
  swift_task_dealloc();
  sub_256C715C0(v2);
  return MEMORY[0x270FA2498](sub_256C67D2C, v3, 0);
}

uint64_t sub_256C67D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_26_6();
  OUTLINED_FUNCTION_59();
  uint64_t v11 = *(void *)(v10 + 56);
  swift_storeEnumTagMultiPayload();
  sub_256C61F4C(v11, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
  OUTLINED_FUNCTION_6_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_5();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_256C67DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_44_1();
  __swift_deallocate_boxed_opaque_existential_2(*(void *)(v12 + 24));
  OUTLINED_FUNCTION_13_5();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_20_1();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

uint64_t sub_256C67E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_44_1();
  uint64_t v13 = *(void *)(v12 + 24);
  sub_256C61F4C(*(void *)(v12 + 120), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  __swift_deallocate_boxed_opaque_existential_2(v13);
  OUTLINED_FUNCTION_13_5();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_20_1();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_256C67F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_44_1();
  uint64_t v13 = *(void *)(v12 + 24);
  sub_256C61F4C(*(void *)(v12 + 88), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  __swift_deallocate_boxed_opaque_existential_2(v13);
  OUTLINED_FUNCTION_13_5();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_20_1();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_256C6802C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_44_1();
  uint64_t v13 = *(void *)(v12 + 24);
  sub_256C61F4C(*(void *)(v12 + 80), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  __swift_deallocate_boxed_opaque_existential_2(v13);
  OUTLINED_FUNCTION_13_5();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_20_1();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_256C680F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_44_1();
  uint64_t v13 = *(void *)(v12 + 24);
  sub_256C61F4C(*(void *)(v12 + 64), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  __swift_deallocate_boxed_opaque_existential_2(v13);
  OUTLINED_FUNCTION_13_5();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_20_1();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_256C681BC()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v4 = type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
  OUTLINED_FUNCTION_21(v4);
  v1[4] = OUTLINED_FUNCTION_51_0();
  uint64_t v5 = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  OUTLINED_FUNCTION_21(v5);
  v1[5] = OUTLINED_FUNCTION_51_0();
  return MEMORY[0x270FA2498](sub_256C68260, v3, 0);
}

uint64_t sub_256C68260()
{
  OUTLINED_FUNCTION_2();
  sub_256C61EB0(v0[3], v0[5]);
  uint64_t v1 = OUTLINED_FUNCTION_51();
  sub_256C60EC8(v1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_256C68334;
  return sub_256CDF1E8();
}

uint64_t sub_256C68334()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256C68418, v2, 0);
}

uint64_t sub_256C68418()
{
  OUTLINED_FUNCTION_2();
  sub_256C61F4C(*(void *)(v0 + 32), (void (*)(void))type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t InferenceProviderXPCRequest.EndOfStreamNotification.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C61EB0(v1, a1);
}

uint64_t sub_256C684CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x4974736575716572 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_256C6855C(uint64_t a1)
{
  unint64_t v2 = sub_256C68DB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C68598(uint64_t a1)
{
  unint64_t v2 = sub_256C68DB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InferenceProviderXPCRequest.EndOfStreamNotification.encode(to:)()
{
}

void InferenceProviderXPCRequest.EndOfStreamNotification.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_45_2(v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_16_0(v14, v24[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4340);
  OUTLINED_FUNCTION_0_0();
  v24[1] = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = OUTLINED_FUNCTION_12_0();
  uint64_t v18 = type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(v17);
  uint64_t v19 = OUTLINED_FUNCTION_21(v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_34_5();
  sub_256C68DB4();
  OUTLINED_FUNCTION_33_7();
  if (!v11)
  {
    sub_256C61978((uint64_t)&unk_26B2C4EF8);
    OUTLINED_FUNCTION_28_1();
    uint64_t v22 = OUTLINED_FUNCTION_24_5();
    v23(v22);
    sub_256C5FC70(a10, (uint64_t)v21, &qword_26B2C7798);
    sub_256C60EC8((uint64_t)v21, v24[0]);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v10);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33();
}

void sub_256C68794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  InferenceProviderXPCRequest.EndOfStreamNotification.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_256C687AC()
{
}

unint64_t sub_256C687C4()
{
  unint64_t result = qword_26B2C4F28;
  if (!qword_26B2C4F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4F28);
  }
  return result;
}

uint64_t type metadata accessor for InferenceProviderXPCRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C7850);
}

unint64_t sub_256C68830()
{
  unint64_t result = qword_26B2C4F60;
  if (!qword_26B2C4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4F60);
  }
  return result;
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C77E0);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C7818);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C7838);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C7828);
}

unint64_t sub_256C688FC()
{
  unint64_t result = qword_269FC4238;
  if (!qword_269FC4238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4238);
  }
  return result;
}

unint64_t sub_256C68948()
{
  unint64_t result = qword_26B2C54E8;
  if (!qword_26B2C54E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C54E8);
  }
  return result;
}

unint64_t sub_256C68994()
{
  unint64_t result = qword_269FC4268;
  if (!qword_269FC4268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4268);
  }
  return result;
}

unint64_t sub_256C689E0()
{
  unint64_t result = qword_269FC4278;
  if (!qword_269FC4278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4278);
  }
  return result;
}

unint64_t sub_256C68A2C()
{
  unint64_t result = qword_269FC4280;
  if (!qword_269FC4280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4280);
  }
  return result;
}

unint64_t sub_256C68A78()
{
  unint64_t result = qword_269FC4290;
  if (!qword_269FC4290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4290);
  }
  return result;
}

unint64_t sub_256C68AC4()
{
  unint64_t result = qword_26B2C77C8;
  if (!qword_26B2C77C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C77C8);
  }
  return result;
}

unint64_t sub_256C68B10()
{
  unint64_t result = qword_26B2C77F0;
  if (!qword_26B2C77F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C77F0);
  }
  return result;
}

unint64_t sub_256C68B5C(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC4298);
    sub_256C61554(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_256C68BEC()
{
  unint64_t result = qword_269FC42B8;
  if (!qword_269FC42B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC42B8);
  }
  return result;
}

unint64_t sub_256C68C38()
{
  unint64_t result = qword_269FC42E0;
  if (!qword_269FC42E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC42E0);
  }
  return result;
}

unint64_t sub_256C68C84()
{
  unint64_t result = qword_269FC42F8;
  if (!qword_269FC42F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC42F8);
  }
  return result;
}

unint64_t sub_256C68CD0()
{
  unint64_t result = qword_269FC4310;
  if (!qword_269FC4310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4310);
  }
  return result;
}

unint64_t sub_256C68D1C()
{
  unint64_t result = qword_269FC4318;
  if (!qword_269FC4318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4318);
  }
  return result;
}

unint64_t sub_256C68D68()
{
  unint64_t result = qword_269FC4328;
  if (!qword_269FC4328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4328);
  }
  return result;
}

unint64_t sub_256C68DB4()
{
  unint64_t result = qword_269FC4338;
  if (!qword_269FC4338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4338);
  }
  return result;
}

unint64_t sub_256C68E00()
{
  return sub_256C61554((uint64_t)&unk_269FC4348);
}

unint64_t sub_256C68E48()
{
  return sub_256C61554((uint64_t)&unk_269FC4350);
}

unint64_t sub_256C68E90(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_269FC4358);
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4360);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C68F18()
{
  unint64_t result = qword_269FC4368;
  if (!qword_269FC4368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4368);
  }
  return result;
}

unint64_t sub_256C68F64(uint64_t a1)
{
  unint64_t result = sub_256C68F8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256C68F8C()
{
  unint64_t result = qword_269FC4370;
  if (!qword_269FC4370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4370);
  }
  return result;
}

unint64_t sub_256C68FD8()
{
  return sub_256C61554((uint64_t)&unk_269FC4358);
}

unint64_t sub_256C69020()
{
  return sub_256C61554((uint64_t)&unk_269FC4360);
}

unint64_t sub_256C69070(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C688FC();
  unint64_t result = sub_256C68994();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C690A0(uint64_t a1)
{
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4378);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256C690F8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_26B2C4F40);
  unint64_t result = sub_256C61554((uint64_t)&unk_26B2C54D8);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C6917C(uint64_t a1)
{
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4380);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256C691D4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_26B2C4F48);
  unint64_t result = sub_256C61554((uint64_t)&unk_26B2C54E0);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C69258(uint64_t a1)
{
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4388);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256C692B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_269FC4220);
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4250);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C6933C(uint64_t a1)
{
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4390);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256C69394()
{
  return sub_256C61554((uint64_t)&qword_269FC4048);
}

unint64_t sub_256C693DC()
{
  return sub_256C61554((uint64_t)&qword_269FC4050);
}

unint64_t sub_256C69424(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_269FC4230);
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4260);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C694A8(uint64_t a1)
{
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4398);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256C69500(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_269FC4228);
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4258);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C69584(uint64_t a1)
{
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC43A0);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256C695DC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_269FC4218);
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4248);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C69660(uint64_t a1)
{
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC43A8);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256C696B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_269FC4210);
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC4240);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256C6973C(uint64_t a1)
{
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC43B0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_256C69794()
{
  return MEMORY[0x263F8E650];
}

uint64_t sub_256C697A0()
{
  return MEMORY[0x263F8E630];
}

unint64_t sub_256C697AC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_256C61554((uint64_t)&unk_269FC4208);
  unint64_t result = sub_256C61554((uint64_t)&unk_269FC41F0);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for InferenceProviderRequestResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_256CEDD58();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for ClientData(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v19))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v16, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v19);
      }
      uint64_t v21 = *(int *)(v17 + 20);
      uint64_t v22 = &v15[v21];
      uint64_t v23 = &v16[v21];
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v19))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v22, v23, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v19);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t destroy for InferenceProviderRequestResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_256CEDD58();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for ClientData(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = sub_256CEDE28();
    if (!__swift_getEnumTagSinglePayload(v7, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
    }
    uint64_t v11 = v7 + *(int *)(v8 + 20);
    uint64_t result = __swift_getEnumTagSinglePayload(v11, 1, v10);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      return v12(v11, v10);
    }
  }
  return result;
}

uint64_t initializeWithCopy for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_256CEDD58();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_256CEDE28();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v17))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v17);
    }
    uint64_t v19 = *(int *)(v15 + 20);
    uint64_t v20 = &v13[v19];
    uint64_t v21 = &v14[v19];
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v17))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v20, v21, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v17);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_256CEDD58();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  uint64_t v18 = type metadata accessor for ClientData(0);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      uint64_t v21 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v21))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v21);
      }
      uint64_t v29 = *(int *)(v18 + 20);
      uint64_t v30 = &v16[v29];
      uint64_t v31 = &v17[v29];
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v21))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v30, v31, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v21);
      }
      uint64_t v33 = (uint64_t)v16;
      uint64_t v34 = v18;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  if (v20)
  {
    sub_256C61F4C((uint64_t)v16, (void (*)(void))type metadata accessor for ClientData);
LABEL_13:
    size_t v23 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228) - 8) + 64);
    uint64_t v24 = v16;
    uint64_t v25 = v17;
    goto LABEL_14;
  }
  uint64_t v26 = sub_256CEDE28();
  int v27 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v26);
  int v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v26);
  if (!v27)
  {
    uint64_t v36 = *(void *)(v26 - 8);
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 24))(v16, v17, v26);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v26);
    goto LABEL_28;
  }
  if (v28)
  {
LABEL_28:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v16, v17, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v16, v17, v26);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v26);
LABEL_29:
  uint64_t v38 = *(int *)(v18 + 20);
  uint64_t v39 = (uint64_t)&v16[v38];
  uint64_t v40 = (uint64_t)&v17[v38];
  int v41 = __swift_getEnumTagSinglePayload(v39, 1, v26);
  int v42 = __swift_getEnumTagSinglePayload(v40, 1, v26);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v39, v40, v26);
      uint64_t v33 = v39;
      uint64_t v34 = v26;
LABEL_24:
      __swift_storeEnumTagSinglePayload(v33, 0, 1, v34);
      return a1;
    }
  }
  else
  {
    uint64_t v43 = *(void *)(v26 - 8);
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 24))(v39, v40, v26);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v39, v26);
  }
  size_t v23 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000) - 8) + 64);
  uint64_t v24 = (void *)v39;
  uint64_t v25 = (const void *)v40;
LABEL_14:
  memcpy(v24, v25, v23);
  return a1;
}

uint64_t initializeWithTake for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_256CEDD58();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_256CEDE28();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v17))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v17);
    }
    uint64_t v19 = *(int *)(v15 + 20);
    int v20 = &v13[v19];
    uint64_t v21 = &v14[v19];
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v17))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v20, v21, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v17);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithTake for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_256CEDD58();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  uint64_t v18 = type metadata accessor for ClientData(0);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      uint64_t v21 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v21))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v21);
      }
      uint64_t v29 = *(int *)(v18 + 20);
      uint64_t v30 = &v16[v29];
      uint64_t v31 = &v17[v29];
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v21))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v30, v31, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v21);
      }
      uint64_t v33 = (uint64_t)v16;
      uint64_t v34 = v18;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  if (v20)
  {
    sub_256C61F4C((uint64_t)v16, (void (*)(void))type metadata accessor for ClientData);
LABEL_13:
    size_t v23 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228) - 8) + 64);
    uint64_t v24 = v16;
    uint64_t v25 = v17;
    goto LABEL_14;
  }
  uint64_t v26 = sub_256CEDE28();
  int v27 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v26);
  int v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v26);
  if (!v27)
  {
    uint64_t v36 = *(void *)(v26 - 8);
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v16, v17, v26);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v26);
    goto LABEL_28;
  }
  if (v28)
  {
LABEL_28:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v16, v17, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v16, v17, v26);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v26);
LABEL_29:
  uint64_t v38 = *(int *)(v18 + 20);
  uint64_t v39 = (uint64_t)&v16[v38];
  uint64_t v40 = (uint64_t)&v17[v38];
  int v41 = __swift_getEnumTagSinglePayload(v39, 1, v26);
  int v42 = __swift_getEnumTagSinglePayload(v40, 1, v26);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v39, v40, v26);
      uint64_t v33 = v39;
      uint64_t v34 = v26;
LABEL_24:
      __swift_storeEnumTagSinglePayload(v33, 0, 1, v34);
      return a1;
    }
  }
  else
  {
    uint64_t v43 = *(void *)(v26 - 8);
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 40))(v39, v40, v26);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v39, v26);
  }
  size_t v23 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000) - 8) + 64);
  uint64_t v24 = (void *)v39;
  uint64_t v25 = (const void *)v40;
LABEL_14:
  memcpy(v24, v25, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C6ADB4);
}

uint64_t sub_256C6ADB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v11 + 84) == v3)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = v4 + v12;
  }
  return __swift_getEnumTagSinglePayload(v9, v3, v8);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C6AE70);
}

uint64_t sub_256C6AE70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5328);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
      uint64_t v14 = *(int *)(a4 + 24);
    }
    uint64_t v11 = v5 + v14;
  }
  return __swift_storeEnumTagSinglePayload(v11, v4, v4, v10);
}

void sub_256C6AF20()
{
  sub_256CEDB08();
  if (v0 <= 0x3F)
  {
    sub_256C6B05C(319, (unint64_t *)&qword_26B2C7730, MEMORY[0x263F8F3E0]);
    if (v1 <= 0x3F)
    {
      sub_256C6B05C(319, (unint64_t *)&qword_26B2C4EE8, (void (*)(uint64_t))type metadata accessor for ClientData);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_256C6B05C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256CEE2E8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        long long v8 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v8;
        uint64_t v9 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
        uint64_t v10 = v9[6];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_256CEDB08();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        sub_256CEDEC8();
        v14(v11, v12, v13);
        uint64_t v15 = v9[7];
        uint64_t v16 = (void *)((char *)a1 + v15);
        uint64_t v17 = (void *)((char *)a2 + v15);
        uint64_t v18 = v17[1];
        *uint64_t v16 = *v17;
        v16[1] = v18;
        *(_DWORD *)((char *)a1 + v9[8]) = *(_DWORD *)((char *)a2 + v9[8]);
        sub_256CEDEC8();
        goto LABEL_18;
      case 2u:
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        uint64_t v21 = a2[3];
        a1[2] = a2[2];
        a1[3] = v21;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        uint64_t v22 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
        size_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_256CEDB08();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        sub_256CEDEC8();
        sub_256CEDEC8();
        v26(v23, v24, v25);
        goto LABEL_18;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v27 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
        uint64_t v28 = *(int *)(v27 + 20);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_256CEDE28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
        }
        uint64_t v37 = *(int *)(type metadata accessor for ClientData(0) + 20);
        uint64_t v38 = &v29[v37];
        uint64_t v39 = &v30[v37];
        if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v31))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v38, v39, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v31);
        }
        uint64_t v68 = v27;
        uint64_t v41 = *(int *)(v27 + 24);
        int v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        uint64_t v44 = *(void *)((char *)a2 + v41 + 8);
        *(void *)int v42 = *(void *)((char *)a2 + v41);
        *((void *)v42 + 1) = v44;
        uint64_t v45 = *(void *)((char *)a2 + v41 + 24);
        *((void *)v42 + 2) = *(void *)((char *)a2 + v41 + 16);
        *((void *)v42 + 3) = v45;
        *((void *)v42 + 4) = *(void *)((char *)a2 + v41 + 32);
        uint64_t v46 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
        uint64_t v47 = v46[7];
        uint64_t v66 = &v43[v47];
        uint64_t v67 = &v42[v47];
        uint64_t v48 = sub_256CEDB08();
        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
        sub_256CEDEC8();
        sub_256CEDEC8();
        sub_256CEDEC8();
        v65(v67, v66, v48);
        v65(&v42[v46[8]], &v43[v46[8]], v48);
        *(void *)&v42[v46[9]] = *(void *)&v43[v46[9]];
        *(void *)&v42[v46[10]] = *(void *)&v43[v46[10]];
        v65(&v42[v46[11]], &v43[v46[11]], v48);
        uint64_t v49 = v46[12];
        uint64_t v50 = &v42[v49];
        uint64_t v51 = &v43[v49];
        long long v52 = *((_OWORD *)v51 + 1);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        *((_OWORD *)v50 + 1) = v52;
        v50[32] = v51[32];
        *(_DWORD *)&v42[v46[13]] = *(_DWORD *)&v43[v46[13]];
        uint64_t v53 = v46[14];
        uint64_t v54 = &v42[v53];
        uint64_t v55 = &v43[v53];
        uint64_t v56 = *((void *)v55 + 1);
        *(void *)uint64_t v54 = *(void *)v55;
        *((void *)v54 + 1) = v56;
        uint64_t v57 = v46[15];
        uint64_t v58 = &v42[v57];
        uint64_t v59 = &v43[v57];
        uint64_t v60 = *((void *)v59 + 1);
        *(void *)uint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = v60;
        v42[v46[16]] = v43[v46[16]];
        uint64_t v61 = *(int *)(v68 + 28);
        uint64_t v62 = (char *)a1 + v61;
        unint64_t v63 = (char *)a2 + v61;
        sub_256CEDEC8();
        sub_256CEDEC8();
        v65(v62, v63, v48);
        goto LABEL_18;
      case 4u:
      case 5u:
      case 6u:
        uint64_t v33 = sub_256CEDB08();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        goto LABEL_18;
      case 7u:
        uint64_t v34 = sub_256CEDB08();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
        uint64_t v35 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0) + 20);
        unint64_t v36 = *(void *)((char *)a2 + v35);
        if (v36 >= 4) {
          unint64_t v36 = sub_256CEDEC8();
        }
        *(void *)((char *)a1 + v35) = v36;
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

unint64_t destroy for InferenceProviderXPCRequest(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(type metadata accessor for InferenceProviderPrewarmInformation(0) + 24);
      uint64_t v4 = sub_256CEDB08();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      goto LABEL_14;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
      goto LABEL_4;
    case 3:
      uint64_t v9 = (int *)type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
      uint64_t v10 = a1 + v9[5];
      uint64_t v11 = sub_256CEDE28();
      if (!__swift_getEnumTagSinglePayload(v10, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = v10 + *(int *)(type metadata accessor for ClientData(0) + 20);
      if (!__swift_getEnumTagSinglePayload(v12, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v12, v11);
      }
      uint64_t v13 = a1 + v9[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
      uint64_t v15 = v13 + v14[7];
      uint64_t v16 = sub_256CEDB08();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v18)((void *)(v16 - 8), v15, v16);
      v18(v13 + v14[8], v16);
      v18(v13 + v14[11], v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + v9[7];
      uint64_t v7 = v16;
      uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))v18;
      goto LABEL_5;
    case 4:
    case 5:
    case 6:
LABEL_4:
      uint64_t v5 = sub_256CEDB08();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t v7 = v5;
      uint64_t v8 = a1;
LABEL_5:
      unint64_t result = v6(v8, v7);
      break;
    case 7:
      uint64_t v17 = sub_256CEDB08();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
      unint64_t result = *(void *)(a1
                         + *(int *)(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0)
                                  + 20));
      if (result >= 4)
      {
LABEL_14:
        unint64_t result = swift_bridgeObjectRelease();
      }
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for InferenceProviderXPCRequest(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      long long v7 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v7;
      uint64_t v8 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
      uint64_t v9 = v8[6];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_256CEDB08();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      sub_256CEDEC8();
      v13(v10, v11, v12);
      uint64_t v14 = v8[7];
      uint64_t v15 = (void *)((char *)a1 + v14);
      uint64_t v16 = (void *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      *(_DWORD *)((char *)a1 + v8[8]) = *(_DWORD *)((char *)a2 + v8[8]);
      sub_256CEDEC8();
      goto LABEL_16;
    case 2u:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      uint64_t v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      uint64_t v20 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_256CEDB08();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      sub_256CEDEC8();
      sub_256CEDEC8();
      v24(v21, v22, v23);
      goto LABEL_16;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v25 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
      uint64_t v26 = *(int *)(v25 + 20);
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
      }
      uint64_t v35 = *(int *)(type metadata accessor for ClientData(0) + 20);
      unint64_t v36 = &v27[v35];
      uint64_t v37 = &v28[v35];
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v29))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v36, v37, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v29);
      }
      uint64_t v66 = v25;
      uint64_t v39 = *(int *)(v25 + 24);
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      uint64_t v42 = *(void *)((char *)a2 + v39 + 8);
      *(void *)uint64_t v40 = *(void *)((char *)a2 + v39);
      *((void *)v40 + 1) = v42;
      uint64_t v43 = *(void *)((char *)a2 + v39 + 24);
      *((void *)v40 + 2) = *(void *)((char *)a2 + v39 + 16);
      *((void *)v40 + 3) = v43;
      *((void *)v40 + 4) = *(void *)((char *)a2 + v39 + 32);
      uint64_t v44 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
      uint64_t v45 = v44[7];
      char v64 = &v41[v45];
      uint64_t v65 = &v40[v45];
      uint64_t v46 = sub_256CEDB08();
      unint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
      sub_256CEDEC8();
      sub_256CEDEC8();
      sub_256CEDEC8();
      v63(v65, v64, v46);
      v63(&v40[v44[8]], &v41[v44[8]], v46);
      *(void *)&v40[v44[9]] = *(void *)&v41[v44[9]];
      *(void *)&v40[v44[10]] = *(void *)&v41[v44[10]];
      v63(&v40[v44[11]], &v41[v44[11]], v46);
      uint64_t v47 = v44[12];
      uint64_t v48 = &v40[v47];
      uint64_t v49 = &v41[v47];
      long long v50 = *((_OWORD *)v49 + 1);
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v50;
      v48[32] = v49[32];
      *(_DWORD *)&v40[v44[13]] = *(_DWORD *)&v41[v44[13]];
      uint64_t v51 = v44[14];
      long long v52 = &v40[v51];
      uint64_t v53 = &v41[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *(void *)long long v52 = *(void *)v53;
      *((void *)v52 + 1) = v54;
      uint64_t v55 = v44[15];
      uint64_t v56 = &v40[v55];
      uint64_t v57 = &v41[v55];
      uint64_t v58 = *((void *)v57 + 1);
      *(void *)uint64_t v56 = *(void *)v57;
      *((void *)v56 + 1) = v58;
      v40[v44[16]] = v41[v44[16]];
      uint64_t v59 = *(int *)(v66 + 28);
      uint64_t v60 = (char *)a1 + v59;
      uint64_t v61 = (char *)a2 + v59;
      sub_256CEDEC8();
      sub_256CEDEC8();
      v63(v60, v61, v46);
      goto LABEL_16;
    case 4u:
    case 5u:
    case 6u:
      uint64_t v31 = sub_256CEDB08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
      goto LABEL_16;
    case 7u:
      uint64_t v32 = sub_256CEDB08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
      uint64_t v33 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0) + 20);
      unint64_t v34 = *(void *)((char *)a2 + v33);
      if (v34 >= 4) {
        unint64_t v34 = sub_256CEDEC8();
      }
      *(void *)((char *)a1 + v33) = v34;
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for InferenceProviderXPCRequest(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_256C61F4C((uint64_t)a1, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        long long v6 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v6;
        long long v7 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
        uint64_t v8 = v7[6];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_256CEDB08();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        sub_256CEDEC8();
        v12(v9, v10, v11);
        uint64_t v13 = v7[7];
        uint64_t v14 = (void *)((char *)a1 + v13);
        uint64_t v15 = (void *)((char *)a2 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        *(_DWORD *)((char *)a1 + v7[8]) = *(_DWORD *)((char *)a2 + v7[8]);
        sub_256CEDEC8();
        goto LABEL_17;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((unsigned char *)a1 + 33) = *((unsigned char *)a2 + 33);
        uint64_t v16 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_256CEDB08();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        sub_256CEDEC8();
        sub_256CEDEC8();
        v20(v17, v18, v19);
        goto LABEL_17;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v21 = (int *)type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
        uint64_t v22 = v21[5];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_256CEDE28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
        }
        uint64_t v31 = *(int *)(type metadata accessor for ClientData(0) + 20);
        uint64_t v32 = &v23[v31];
        uint64_t v33 = &v24[v31];
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v25))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v32, v33, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v25);
        }
        uint64_t v35 = v21[6];
        unint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        *(void *)unint64_t v36 = *(void *)((char *)a2 + v35);
        *((void *)v36 + 1) = *(void *)((char *)a2 + v35 + 8);
        *((void *)v36 + 2) = *(void *)((char *)a2 + v35 + 16);
        *((void *)v36 + 3) = *(void *)((char *)a2 + v35 + 24);
        *((void *)v36 + 4) = *(void *)((char *)a2 + v35 + 32);
        uint64_t v38 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
        uint64_t v39 = v38[7];
        uint64_t v57 = &v37[v39];
        uint64_t v58 = &v36[v39];
        uint64_t v40 = sub_256CEDB08();
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
        sub_256CEDEC8();
        sub_256CEDEC8();
        sub_256CEDEC8();
        v56(v58, v57, v40);
        v56(&v36[v38[8]], &v37[v38[8]], v40);
        *(void *)&v36[v38[9]] = *(void *)&v37[v38[9]];
        *(void *)&v36[v38[10]] = *(void *)&v37[v38[10]];
        v56(&v36[v38[11]], &v37[v38[11]], v40);
        uint64_t v41 = v38[12];
        uint64_t v42 = &v36[v41];
        uint64_t v43 = &v37[v41];
        long long v44 = *(_OWORD *)v43;
        long long v45 = *((_OWORD *)v43 + 1);
        v42[32] = v43[32];
        *(_OWORD *)uint64_t v42 = v44;
        *((_OWORD *)v42 + 1) = v45;
        *(_DWORD *)&v36[v38[13]] = *(_DWORD *)&v37[v38[13]];
        uint64_t v46 = v38[14];
        uint64_t v47 = &v36[v46];
        uint64_t v48 = &v37[v46];
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = *((void *)v48 + 1);
        uint64_t v49 = v38[15];
        long long v50 = &v36[v49];
        uint64_t v51 = &v37[v49];
        *(void *)long long v50 = *(void *)v51;
        *((void *)v50 + 1) = *((void *)v51 + 1);
        v36[v38[16]] = v37[v38[16]];
        uint64_t v52 = v21[7];
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        sub_256CEDEC8();
        sub_256CEDEC8();
        v56(v53, v54, v40);
        goto LABEL_17;
      case 4u:
      case 5u:
      case 6u:
        uint64_t v27 = sub_256CEDB08();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        goto LABEL_17;
      case 7u:
        uint64_t v28 = sub_256CEDB08();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        uint64_t v29 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0) + 20);
        unint64_t v30 = *(void *)((char *)a2 + v29);
        if (v30 >= 4) {
          unint64_t v30 = sub_256CEDEC8();
        }
        *(void *)((char *)a1 + v29) = v30;
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for InferenceProviderXPCRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      long long v7 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_256CEDB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      *(_DWORD *)((char *)a1 + v7[8]) = *(_DWORD *)((char *)a2 + v7[8]);
      goto LABEL_14;
    case 2u:
      long long v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      uint64_t v13 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_256CEDB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_14;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v17 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
      uint64_t v18 = *(int *)(v17 + 20);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_256CEDE28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      uint64_t v26 = *(int *)(type metadata accessor for ClientData(0) + 20);
      uint64_t v27 = &v19[v26];
      uint64_t v28 = &v20[v26];
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v21))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v27, v28, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v21);
      }
      uint64_t v30 = *(int *)(v17 + 24);
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      long long v33 = *(_OWORD *)((char *)a2 + v30 + 16);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)((char *)a2 + v30);
      *((_OWORD *)v31 + 1) = v33;
      *((void *)v31 + 4) = *(void *)((char *)a2 + v30 + 32);
      uint64_t v34 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
      uint64_t v35 = v34[7];
      long long v44 = &v31[v35];
      unint64_t v36 = &v32[v35];
      uint64_t v37 = sub_256CEDB08();
      uint64_t v45 = v17;
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32);
      v38(v44, v36, v37);
      v38(&v31[v34[8]], &v32[v34[8]], v37);
      *(void *)&v31[v34[9]] = *(void *)&v32[v34[9]];
      *(void *)&v31[v34[10]] = *(void *)&v32[v34[10]];
      v38(&v31[v34[11]], &v32[v34[11]], v37);
      uint64_t v39 = v34[12];
      uint64_t v40 = &v31[v39];
      uint64_t v41 = &v32[v39];
      long long v42 = *((_OWORD *)v41 + 1);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v42;
      v40[32] = v41[32];
      *(_DWORD *)&v31[v34[13]] = *(_DWORD *)&v32[v34[13]];
      *(_OWORD *)&v31[v34[14]] = *(_OWORD *)&v32[v34[14]];
      *(_OWORD *)&v31[v34[15]] = *(_OWORD *)&v32[v34[15]];
      v31[v34[16]] = v32[v34[16]];
      v38((char *)a1 + *(int *)(v45 + 28), (char *)a2 + *(int *)(v45 + 28), v37);
      goto LABEL_14;
    case 4u:
    case 5u:
    case 6u:
      uint64_t v23 = sub_256CEDB08();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      goto LABEL_14;
    case 7u:
      uint64_t v24 = sub_256CEDB08();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
      uint64_t v25 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
      *(void *)((char *)a1 + *(int *)(v25 + 20)) = *(void *)((char *)a2 + *(int *)(v25 + 20));
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for InferenceProviderXPCRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_256C61F4C((uint64_t)a1, (void (*)(void))type metadata accessor for InferenceProviderXPCRequest);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        long long v7 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
        uint64_t v8 = v7[6];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_256CEDB08();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
        *(_DWORD *)((char *)a1 + v7[8]) = *(_DWORD *)((char *)a2 + v7[8]);
        goto LABEL_15;
      case 2u:
        long long v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        uint64_t v13 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_256CEDB08();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        goto LABEL_15;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v17 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
        uint64_t v18 = *(int *)(v17 + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_256CEDE28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
        {
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
        }
        uint64_t v26 = *(int *)(type metadata accessor for ClientData(0) + 20);
        uint64_t v27 = &v19[v26];
        uint64_t v28 = &v20[v26];
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v21))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v27, v28, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v21);
        }
        uint64_t v30 = *(int *)(v17 + 24);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        long long v33 = *(_OWORD *)((char *)a2 + v30 + 16);
        *(_OWORD *)uint64_t v31 = *(_OWORD *)((char *)a2 + v30);
        *((_OWORD *)v31 + 1) = v33;
        *((void *)v31 + 4) = *(void *)((char *)a2 + v30 + 32);
        uint64_t v34 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
        uint64_t v35 = v34[7];
        long long v44 = &v31[v35];
        unint64_t v36 = &v32[v35];
        uint64_t v37 = sub_256CEDB08();
        uint64_t v45 = v17;
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32);
        v38(v44, v36, v37);
        v38(&v31[v34[8]], &v32[v34[8]], v37);
        *(void *)&v31[v34[9]] = *(void *)&v32[v34[9]];
        *(void *)&v31[v34[10]] = *(void *)&v32[v34[10]];
        v38(&v31[v34[11]], &v32[v34[11]], v37);
        uint64_t v39 = v34[12];
        uint64_t v40 = &v31[v39];
        uint64_t v41 = &v32[v39];
        long long v42 = *((_OWORD *)v41 + 1);
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        *((_OWORD *)v40 + 1) = v42;
        v40[32] = v41[32];
        *(_DWORD *)&v31[v34[13]] = *(_DWORD *)&v32[v34[13]];
        *(_OWORD *)&v31[v34[14]] = *(_OWORD *)&v32[v34[14]];
        *(_OWORD *)&v31[v34[15]] = *(_OWORD *)&v32[v34[15]];
        v31[v34[16]] = v32[v34[16]];
        v38((char *)a1 + *(int *)(v45 + 28), (char *)a2 + *(int *)(v45 + 28), v37);
        goto LABEL_15;
      case 4u:
      case 5u:
      case 6u:
        uint64_t v23 = sub_256CEDB08();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        goto LABEL_15;
      case 7u:
        uint64_t v24 = sub_256CEDB08();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        uint64_t v25 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
        *(void *)((char *)a1 + *(int *)(v25 + 20)) = *(void *)((char *)a2 + *(int *)(v25 + 20));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_256C6D2E4()
{
  uint64_t result = type metadata accessor for InferenceProviderPrewarmInformation(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_256CEDB08();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.Notification(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_256CEDB08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.Notification(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
  return MEMORY[0x270FA0340](a1, a2, v4, sub_256C6D588);
}

uint64_t sub_256C6D588()
{
  OUTLINED_FUNCTION_50_5();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.Notification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_256C6D638);
}

uint64_t sub_256C6D638()
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  uint64_t v0 = OUTLINED_FUNCTION_30_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_256C6D678(uint64_t a1)
{
  uint64_t result = sub_256CEDB08();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void type metadata accessor for InferenceProviderXPCRequest.EmptyResponse()
{
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.WireCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for InferenceProviderXPCRequest.WireCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C6D87CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for InferenceProviderXPCRequest.WireCode()
{
}

void type metadata accessor for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest()
{
}

uint64_t initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for InferenceProviderPrewarmInformation(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    uint64_t v9 = *(int *)(v4 + 24);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_256CEDB08();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_256CEDEC8();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v6 + 28);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *(_DWORD *)(a1 + *(int *)(v6 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(v6 + 32));
    sub_256CEDEC8();
  }
  return a1;
}

uint64_t destroy for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for InferenceProviderPrewarmInformation(0) + 24);
  uint64_t v3 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_256CEDEC8();
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(_DWORD *)(a1 + v6[8]) = *(_DWORD *)(a2 + v6[8]);
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  uint64_t v4 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  uint64_t v9 = v4[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + v4[8]) = *(_DWORD *)(a2 + v4[8]);
  return a1;
}

_OWORD *initializeWithTake for InferenceProviderXPCRequest.PrewarmBundle(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + v5[7]) = *(_OWORD *)((char *)a2 + v5[7]);
  *(_DWORD *)((char *)a1 + v5[8]) = *(_DWORD *)((char *)a2 + v5[8]);
  return a1;
}

uint64_t assignWithTake for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + v6[8]) = *(_DWORD *)(a2 + v6[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C6DE18);
}

uint64_t sub_256C6DE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InferenceProviderPrewarmInformation(0);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C6DE74);
}

uint64_t sub_256C6DE74()
{
  type metadata accessor for InferenceProviderPrewarmInformation(0);
  uint64_t v0 = OUTLINED_FUNCTION_30_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_256C6DEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256C704B4(a1, a2, a3, type metadata accessor for InferenceProviderPrewarmInformation);
}

void *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v10 = sub_256CEDB08();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    sub_256CEDEC8();
    sub_256CEDEC8();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t initializeWithCopy for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C6E284);
}

uint64_t sub_256C6E284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C6E324);
}

void sub_256C6E324()
{
  OUTLINED_FUNCTION_50_5();
  if (v3 == 0x7FFFFFFF)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
    uint64_t v6 = v1 + *(int *)(v4 + 28);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

uint64_t sub_256C6E3A4()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C71820);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C71830);
}

uint64_t sub_256C6E474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256C704B4(a1, a2, a3, MEMORY[0x263F07508]);
}

uint64_t initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  sub_256CEDEC8();
  return a1;
}

uint64_t destroy for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response()
{
}

void *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.InferenceRequest(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v13 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_256CEDE28();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v14 = *(int *)(type metadata accessor for ClientData(0) + 20);
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v15, v16, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v10);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v45 = a2;
    uint64_t v46 = a3;
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *((void *)v20 + 3);
    uint64_t v47 = a1;
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((void *)v19 + 3) = v22;
    *((void *)v19 + 4) = *((void *)v20 + 4);
    uint64_t v23 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
    uint64_t v24 = v23[7];
    long long v44 = &v19[v24];
    uint64_t v25 = &v20[v24];
    uint64_t v26 = sub_256CEDB08();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    sub_256CEDEC8();
    uint64_t v13 = v47;
    sub_256CEDEC8();
    sub_256CEDEC8();
    v27(v44, v25, v26);
    v27(&v19[v23[8]], &v20[v23[8]], v26);
    *(void *)&v19[v23[9]] = *(void *)&v20[v23[9]];
    *(void *)&v19[v23[10]] = *(void *)&v20[v23[10]];
    v27(&v19[v23[11]], &v20[v23[11]], v26);
    uint64_t v28 = v23[12];
    uint64_t v29 = &v19[v28];
    uint64_t v30 = &v20[v28];
    long long v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    v29[32] = v30[32];
    *(_DWORD *)&v19[v23[13]] = *(_DWORD *)&v20[v23[13]];
    uint64_t v32 = v23[14];
    long long v33 = &v19[v32];
    uint64_t v34 = &v20[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)long long v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = v23[15];
    uint64_t v37 = &v19[v36];
    uint64_t v38 = &v20[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    v19[v23[16]] = v20[v23[16]];
    uint64_t v40 = *(int *)(v46 + 28);
    uint64_t v41 = (char *)v47 + v40;
    long long v42 = (char *)v45 + v40;
    sub_256CEDEC8();
    sub_256CEDEC8();
    v27(v41, v42, v26);
  }
  return v13;
}

uint64_t destroy for InferenceProviderXPCRequest.InferenceRequest(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_256CEDE28();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = v4 + *(int *)(type metadata accessor for ClientData(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6, v5);
  }
  uint64_t v7 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  uint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_256CEDB08();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v13)((void *)(v10 - 8), v9, v10);
  v13(v7 + v8[8], v10);
  v13(v7 + v8[11], v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[7];
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v10);
}

unsigned char *initializeWithCopy for InferenceProviderXPCRequest.InferenceRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_256CEDE28();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  uint64_t v19 = *((void *)v17 + 3);
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *((void *)v16 + 3) = v19;
  *((void *)v16 + 4) = *((void *)v17 + 4);
  uint64_t v20 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  uint64_t v21 = v20[7];
  uint64_t v41 = &v16[v21];
  uint64_t v22 = &v17[v21];
  uint64_t v23 = sub_256CEDB08();
  long long v42 = a1;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  v24(v41, v22, v23);
  v24(&v16[v20[8]], &v17[v20[8]], v23);
  *(void *)&v16[v20[9]] = *(void *)&v17[v20[9]];
  *(void *)&v16[v20[10]] = *(void *)&v17[v20[10]];
  v24(&v16[v20[11]], &v17[v20[11]], v23);
  uint64_t v25 = v20[12];
  uint64_t v26 = &v16[v25];
  uint64_t v27 = &v17[v25];
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v26[32] = v27[32];
  *(_DWORD *)&v16[v20[13]] = *(_DWORD *)&v17[v20[13]];
  uint64_t v29 = v20[14];
  uint64_t v30 = &v16[v29];
  long long v31 = &v17[v29];
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  uint64_t v33 = v20[15];
  uint64_t v34 = &v16[v33];
  uint64_t v35 = &v17[v33];
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = v36;
  v16[v20[16]] = v17[v20[16]];
  uint64_t v37 = *(int *)(v44 + 28);
  uint64_t v38 = &v42[v37];
  uint64_t v39 = &v43[v37];
  sub_256CEDEC8();
  sub_256CEDEC8();
  v24(v38, v39, v23);
  return v42;
}

unsigned char *assignWithCopy for InferenceProviderXPCRequest.InferenceRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_256CEDE28();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)&a2[v21];
  *((void *)v22 + 1) = *(void *)&a2[v21 + 8];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *((void *)v22 + 2) = *((void *)v23 + 2);
  *((void *)v22 + 3) = *((void *)v23 + 3);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *((void *)v22 + 4) = *((void *)v23 + 4);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v24 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  uint64_t v25 = v24[7];
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  uint64_t v28 = sub_256CEDB08();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24);
  v29(v26, v27, v28);
  v29(&v22[v24[8]], &v23[v24[8]], v28);
  *(void *)&v22[v24[9]] = *(void *)&v23[v24[9]];
  *(void *)&v22[v24[10]] = *(void *)&v23[v24[10]];
  v29(&v22[v24[11]], &v23[v24[11]], v28);
  uint64_t v30 = v24[12];
  long long v31 = &v22[v30];
  uint64_t v32 = &v23[v30];
  long long v33 = *(_OWORD *)v32;
  long long v34 = *((_OWORD *)v32 + 1);
  v31[32] = v32[32];
  *(_OWORD *)long long v31 = v33;
  *((_OWORD *)v31 + 1) = v34;
  *(_DWORD *)&v22[v24[13]] = *(_DWORD *)&v23[v24[13]];
  uint64_t v35 = v24[14];
  uint64_t v36 = &v22[v35];
  uint64_t v37 = &v23[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v38 = v24[15];
  uint64_t v39 = &v22[v38];
  uint64_t v40 = &v23[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  v22[v24[16]] = v23[v24[16]];
  v29(&a1[a3[7]], &a2[a3[7]], v28);
  return a1;
}

unsigned char *initializeWithTake for InferenceProviderXPCRequest.InferenceRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_256CEDE28();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  int v17 = &a2[v15];
  long long v18 = *(_OWORD *)&a2[v15 + 16];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)&a2[v15];
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v16 + 4) = *(void *)&a2[v15 + 32];
  uint64_t v19 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  uint64_t v20 = v19[7];
  uint64_t v21 = &v16[v20];
  uint64_t v22 = &v17[v20];
  uint64_t v23 = sub_256CEDB08();
  uint64_t v24 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v24(&v16[v19[8]], &v17[v19[8]], v23);
  *(void *)&v16[v19[9]] = *(void *)&v17[v19[9]];
  *(void *)&v16[v19[10]] = *(void *)&v17[v19[10]];
  v24(&v16[v19[11]], &v17[v19[11]], v23);
  uint64_t v25 = v19[12];
  uint64_t v26 = &v16[v25];
  uint64_t v27 = &v17[v25];
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v26[32] = v27[32];
  *(_DWORD *)&v16[v19[13]] = *(_DWORD *)&v17[v19[13]];
  *(_OWORD *)&v16[v19[14]] = *(_OWORD *)&v17[v19[14]];
  *(_OWORD *)&v16[v19[15]] = *(_OWORD *)&v17[v19[15]];
  v16[v19[16]] = v17[v19[16]];
  v24(&a1[a3[7]], &a2[a3[7]], v23);
  return a1;
}

unsigned char *assignWithTake for InferenceProviderXPCRequest.InferenceRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_256CEDE28();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v15, v16, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(void *)&a2[v21 + 8];
  *(void *)uint64_t v22 = *(void *)&a2[v21];
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v23 + 3);
  *((void *)v22 + 2) = *((void *)v23 + 2);
  *((void *)v22 + 3) = v25;
  swift_bridgeObjectRelease();
  *((void *)v22 + 4) = *((void *)v23 + 4);
  swift_bridgeObjectRelease();
  uint64_t v26 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  uint64_t v27 = v26[7];
  long long v28 = &v22[v27];
  uint64_t v29 = &v23[v27];
  uint64_t v30 = sub_256CEDB08();
  long long v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40);
  v31(v28, v29, v30);
  v31(&v22[v26[8]], &v23[v26[8]], v30);
  *(void *)&v22[v26[9]] = *(void *)&v23[v26[9]];
  *(void *)&v22[v26[10]] = *(void *)&v23[v26[10]];
  v31(&v22[v26[11]], &v23[v26[11]], v30);
  uint64_t v32 = v26[12];
  long long v33 = &v22[v32];
  long long v34 = &v23[v32];
  long long v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)long long v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  v33[32] = v34[32];
  *(_DWORD *)&v22[v26[13]] = *(_DWORD *)&v23[v26[13]];
  uint64_t v36 = v26[14];
  uint64_t v37 = &v22[v36];
  uint64_t v38 = (uint64_t *)&v23[v36];
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *(void *)uint64_t v37 = v40;
  *((void *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = v26[15];
  long long v42 = &v22[v41];
  uint64_t v43 = (uint64_t *)&v23[v41];
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *(void *)long long v42 = v45;
  *((void *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  v22[v26[16]] = v23[v26[16]];
  v31(&a1[a3[7]], &a2[a3[7]], v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.InferenceRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C6F9D8);
}

uint64_t sub_256C6F9D8(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    type metadata accessor for ClientData(0);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a3[5];
    }
    else
    {
      type metadata accessor for InferenceProviderRequestConfiguration(0);
      OUTLINED_FUNCTION_26();
      if (*(_DWORD *)(v15 + 84) == a2)
      {
        uint64_t v12 = v14;
        uint64_t v13 = a3[6];
      }
      else
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
        uint64_t v13 = a3[7];
      }
    }
    return __swift_getEnumTagSinglePayload((uint64_t)&a1[v13], a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.InferenceRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C6FAC0);
}

void sub_256C6FAC0()
{
  OUTLINED_FUNCTION_50_5();
  if (v2 == 254)
  {
    *unint64_t v1 = v0 + 1;
  }
  else
  {
    unsigned int v4 = v3;
    int v5 = v2;
    type metadata accessor for ClientData(0);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v7 + 84) == v5)
    {
      uint64_t v8 = v6;
      uint64_t v9 = v4[5];
    }
    else
    {
      type metadata accessor for InferenceProviderRequestConfiguration(0);
      OUTLINED_FUNCTION_26();
      if (*(_DWORD *)(v11 + 84) == v5)
      {
        uint64_t v8 = v10;
        uint64_t v9 = v4[6];
      }
      else
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
        uint64_t v9 = v4[7];
      }
    }
    __swift_storeEnumTagSinglePayload((uint64_t)&v1[v9], v0, v0, v8);
  }
}

uint64_t sub_256C6FB88()
{
  uint64_t result = type metadata accessor for ClientData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for InferenceProviderRequestConfiguration(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_256CEDB08();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.DirectStreamHandshake(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C71824);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.DirectStreamHandshake(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C71834);
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.AwaitEndStreamRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C71828);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.AwaitEndStreamRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C71838);
}

uint64_t *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.WillCancelNotification(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
    if (v9 >= 4) {
      sub_256CEDEC8();
    }
  }
  return a1;
}

unint64_t destroy for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  unint64_t result = *(void *)(a1 + *(int *)(a2 + 20));
  if (result >= 4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = *(void *)(a2 + v7);
  if (v8 >= 4) {
    unint64_t v8 = sub_256CEDEC8();
  }
  *(void *)(a1 + v7) = v8;
  return a1;
}

uint64_t assignWithCopy for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (unint64_t *)(a1 + v7);
  unint64_t v9 = *(void *)(a2 + v7);
  if (*(void *)(a1 + v7) >= 4uLL)
  {
    if (v9 >= 4)
    {
      *unint64_t v8 = v9;
      sub_256CEDEC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_256BE33C8(a1 + v7, &qword_26B2C4B80);
      *unint64_t v8 = *(void *)(a2 + v7);
    }
  }
  else
  {
    *unint64_t v8 = v9;
    if (v9 >= 4) {
      sub_256CEDEC8();
    }
  }
  return a1;
}

uint64_t initializeWithTake for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (unint64_t *)(a1 + v7);
  unint64_t v9 = *(void *)(a2 + v7);
  if (*(void *)(a1 + v7) >= 4uLL)
  {
    if (v9 >= 4)
    {
      *unint64_t v8 = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_256BE33C8(a1 + v7, &qword_26B2C4B80);
    unint64_t v9 = *(void *)(a2 + v7);
  }
  *unint64_t v8 = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C700FC);
}

uint64_t sub_256C700FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 4;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C701AC);
}

void sub_256C701AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_50_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_30_1();
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 20)) = (v4 + 3);
  }
}

uint64_t sub_256C70228()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwCP_0()
{
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_51();
  return v1(v0);
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwxx_0(uint64_t a1)
{
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  return v4(a1, v2);
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwcp_0()
{
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_10();
  uint64_t v1 = OUTLINED_FUNCTION_48_5();
  v2(v1);
  return v0;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwca_0()
{
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_10();
  uint64_t v1 = OUTLINED_FUNCTION_48_5();
  v2(v1);
  return v0;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwtk_0()
{
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_10();
  uint64_t v1 = OUTLINED_FUNCTION_48_5();
  v2(v1);
  return v0;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwta_0()
{
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_10();
  uint64_t v1 = OUTLINED_FUNCTION_48_5();
  v2(v1);
  return v0;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.EndOfStreamNotification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C7182C);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.EndOfStreamNotification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C7183C);
}

uint64_t sub_256C704B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.EndOfStreamNotification.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C70624);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.AwaitEndStreamRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.DirectStreamHandshake.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.InferenceRequest.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.InferenceRequest.CodingKeys;
}

unsigned char *_s20ModelManagerServices27InferenceProviderXPCRequestO16InferenceRequestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C70760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.TransitionAsset.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.TransitionAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.PrewarmBundle.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.EmptyResponse.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.EmptyResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.Notification.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.Notification.CodingKeys;
}

unsigned char *_s20ModelManagerServices27InferenceProviderXPCRequestO23EndOfStreamNotificationV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256C70874);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.Notification.TriggerEndOfStreamCodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.Notification.TriggerEndOfStreamCodingKeys;
}

unsigned char *_s20ModelManagerServices27InferenceProviderXPCRequestO31ConfigureBuiltInProviderRequestVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C70978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderRequestResult.CodingKeys()
{
  return &type metadata for InferenceProviderRequestResult.CodingKeys;
}

unint64_t sub_256C709B4()
{
  unint64_t result = qword_269FC43C8;
  if (!qword_269FC43C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC43C8);
  }
  return result;
}

unint64_t sub_256C70A04()
{
  unint64_t result = qword_269FC43D0;
  if (!qword_269FC43D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC43D0);
  }
  return result;
}

unint64_t sub_256C70A54()
{
  unint64_t result = qword_269FC43D8;
  if (!qword_269FC43D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC43D8);
  }
  return result;
}

unint64_t sub_256C70AA4()
{
  unint64_t result = qword_269FC43E0;
  if (!qword_269FC43E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC43E0);
  }
  return result;
}

unint64_t sub_256C70AF4()
{
  unint64_t result = qword_269FC43E8;
  if (!qword_269FC43E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC43E8);
  }
  return result;
}

unint64_t sub_256C70B44()
{
  unint64_t result = qword_269FC43F0;
  if (!qword_269FC43F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC43F0);
  }
  return result;
}

unint64_t sub_256C70B94()
{
  unint64_t result = qword_269FC43F8;
  if (!qword_269FC43F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC43F8);
  }
  return result;
}

unint64_t sub_256C70BE4()
{
  unint64_t result = qword_269FC4400;
  if (!qword_269FC4400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4400);
  }
  return result;
}

unint64_t sub_256C70C34()
{
  unint64_t result = qword_269FC4408;
  if (!qword_269FC4408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4408);
  }
  return result;
}

unint64_t sub_256C70C84()
{
  unint64_t result = qword_269FC4410;
  if (!qword_269FC4410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4410);
  }
  return result;
}

unint64_t sub_256C70CD4()
{
  unint64_t result = qword_269FC4418;
  if (!qword_269FC4418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4418);
  }
  return result;
}

unint64_t sub_256C70D24()
{
  unint64_t result = qword_269FC4420;
  if (!qword_269FC4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4420);
  }
  return result;
}

unint64_t sub_256C70D74()
{
  unint64_t result = qword_269FC4428;
  if (!qword_269FC4428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4428);
  }
  return result;
}

unint64_t sub_256C70DC4()
{
  unint64_t result = qword_269FC4430;
  if (!qword_269FC4430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4430);
  }
  return result;
}

unint64_t sub_256C70E14()
{
  unint64_t result = qword_269FC4438;
  if (!qword_269FC4438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4438);
  }
  return result;
}

unint64_t sub_256C70E64()
{
  unint64_t result = qword_269FC4440;
  if (!qword_269FC4440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4440);
  }
  return result;
}

unint64_t sub_256C70EB4()
{
  unint64_t result = qword_269FC4448;
  if (!qword_269FC4448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4448);
  }
  return result;
}

unint64_t sub_256C70F04()
{
  unint64_t result = qword_269FC4450;
  if (!qword_269FC4450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4450);
  }
  return result;
}

unint64_t sub_256C70F54()
{
  unint64_t result = qword_269FC4458;
  if (!qword_269FC4458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4458);
  }
  return result;
}

unint64_t sub_256C70FA4()
{
  unint64_t result = qword_269FC4460;
  if (!qword_269FC4460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4460);
  }
  return result;
}

unint64_t sub_256C70FF4()
{
  unint64_t result = qword_269FC4468;
  if (!qword_269FC4468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4468);
  }
  return result;
}

unint64_t sub_256C71044()
{
  unint64_t result = qword_26B2C7800;
  if (!qword_26B2C7800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7800);
  }
  return result;
}

unint64_t sub_256C71094()
{
  unint64_t result = qword_26B2C77F8;
  if (!qword_26B2C77F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C77F8);
  }
  return result;
}

unint64_t sub_256C710E4()
{
  unint64_t result = qword_26B2C77D8;
  if (!qword_26B2C77D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C77D8);
  }
  return result;
}

unint64_t sub_256C71134()
{
  unint64_t result = qword_26B2C77D0;
  if (!qword_26B2C77D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C77D0);
  }
  return result;
}

unint64_t sub_256C71184()
{
  unint64_t result = qword_269FC4470;
  if (!qword_269FC4470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4470);
  }
  return result;
}

unint64_t sub_256C711D4()
{
  unint64_t result = qword_269FC4478;
  if (!qword_269FC4478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4478);
  }
  return result;
}

unint64_t sub_256C71224()
{
  unint64_t result = qword_26B2C4F38;
  if (!qword_26B2C4F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4F38);
  }
  return result;
}

unint64_t sub_256C71274()
{
  unint64_t result = qword_26B2C4F30;
  if (!qword_26B2C4F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C4F30);
  }
  return result;
}

unint64_t sub_256C712C4()
{
  unint64_t result = qword_269FC4480;
  if (!qword_269FC4480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4480);
  }
  return result;
}

unint64_t sub_256C71314()
{
  unint64_t result = qword_269FC4488;
  if (!qword_269FC4488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4488);
  }
  return result;
}

unint64_t sub_256C71364()
{
  unint64_t result = qword_269FC4490;
  if (!qword_269FC4490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4490);
  }
  return result;
}

unint64_t sub_256C713B4()
{
  unint64_t result = qword_269FC4498;
  if (!qword_269FC4498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4498);
  }
  return result;
}

unint64_t sub_256C71404()
{
  unint64_t result = qword_269FC44A0;
  if (!qword_269FC44A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC44A0);
  }
  return result;
}

unint64_t sub_256C71454()
{
  unint64_t result = qword_269FC44A8;
  if (!qword_269FC44A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269FC44A8);
  }
  return result;
}

unint64_t sub_256C714A0()
{
  unint64_t result = qword_26B2C7848;
  if (!qword_26B2C7848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7848);
  }
  return result;
}

unint64_t sub_256C714EC(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C7778);
    sub_256C5F194();
    sub_256C5F1E0();
    sub_256C61554((uint64_t)&qword_26B2C9150);
    sub_256C61554((uint64_t)&qword_26B2C9148);
    unint64_t result = OUTLINED_FUNCTION_49_4();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_256C715C0(unint64_t result)
{
  if (result >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_2(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x25A2AEBD0);
  }
  return result;
}

unint64_t sub_256C71624(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC38D0);
    sub_256C5F584();
    sub_256C5F5D0();
    sub_256C61554((uint64_t)&qword_26B2C9150);
    sub_256C61554((uint64_t)&qword_26B2C9148);
    unint64_t result = OUTLINED_FUNCTION_49_4();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_256C716F8(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_47_2(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC38C8);
    sub_256C61554((uint64_t)&unk_269FC4048);
    sub_256C61554((uint64_t)&unk_269FC4050);
    sub_256C61554((uint64_t)&qword_26B2C9150);
    sub_256C61554((uint64_t)&qword_26B2C9148);
    unint64_t result = OUTLINED_FUNCTION_49_4();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_48_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49_4()
{
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_59_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_60_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_61_5()
{
  return v0;
}

void OUTLINED_FUNCTION_62_3(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_76_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14 = a13;
  return __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&a10, v14);
}

void *OUTLINED_FUNCTION_79_1(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_82_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_83_2()
{
  return v0;
}

uint64_t _OSActivity.__allocating_init(_:)(const char *a1, uint64_t a2, char a3)
{
  OUTLINED_FUNCTION_1_2();
  uint64_t v6 = swift_allocObject();
  _OSActivity.init(_:)(a1, a2, a3);
  return v6;
}

uint64_t _OSActivity.init(_:)(const char *a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = sub_256C71A44(a1, a2, a3, &dword_256BD4000);
  swift_beginAccess();
  unsigned int v4 = swift_unknownObjectRetain();
  os_activity_scope_enter(v4, (os_activity_scope_state_t)(v3 + 24));
  swift_endAccess();
  swift_unknownObjectRelease();
  return v3;
}

os_activity_t sub_256C71A44(const char *a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    if ((unint64_t)a1 >> 32)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    if (a1 >> 11 == 27) {
      goto LABEL_28;
    }
    if (a1 >> 16 > 0x10)
    {
      __break(1u);
    }
    else if ((a1 & 0xFFFFFF80) == 0)
    {
      if (a1 <= 0xFF)
      {
        unsigned int v9 = ((_BYTE)a1 + 1);
LABEL_13:
        uint64_t v19 = (v9 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v9) >> 3)) & 7)));
        sub_256C7216C((const char *)&v19, a4, &v18);
        return v18;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    int v13 = (a1 & 0x3F) << 8;
    unsigned int v14 = (v13 | (a1 >> 6)) + 33217;
    unsigned int v15 = (v13 | (a1 >> 6) & 0x3F) << 8;
    unsigned int v16 = (((v15 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
    unsigned int v17 = (v15 | (a1 >> 12)) + 8487393;
    if (a1 >> 16) {
      unsigned int v9 = v16;
    }
    else {
      unsigned int v9 = v17;
    }
    if (a1 < 0x800) {
      unsigned int v9 = v14;
    }
    goto LABEL_13;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a4)
  {
    if (qword_26B2C8808 == -1)
    {
LABEL_5:
      uint64_t v6 = off_26B2C8870;
      uint64_t v7 = (os_unfair_lock_s *)((char *)off_26B2C8870 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)off_26B2C8870 + 6);
      if (*((void *)v6 + 2))
      {
        uint64_t v8 = *((void *)v6 + 2);
LABEL_16:
        swift_unknownObjectRetain();
        os_unfair_lock_unlock(v7);
        os_activity_t v12 = _os_activity_create(a4, a1, v8, OS_ACTIVITY_FLAG_DEFAULT);
        swift_unknownObjectRelease();
        return v12;
      }
      uint64_t v11 = dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
      *((void *)v6 + 2) = v11;
      if (v11)
      {
        uint64_t v8 = v11;
        swift_unknownObjectRetain_n();
        goto LABEL_16;
      }
      goto LABEL_29;
    }
LABEL_19:
    swift_once();
    goto LABEL_5;
  }
LABEL_30:
  os_activity_t result = (os_activity_t)sub_256CEE408();
  __break(1u);
  return result;
}

uint64_t _OSActivity.__allocating_init(_:closure:)(const char *a1, uint64_t a2, char a3, void (*a4)(uint64_t))
{
  OUTLINED_FUNCTION_1_2();
  uint64_t v9 = swift_allocObject();
  _OSActivity.init(_:)(a1, a2, a3);
  uint64_t v10 = swift_retain();
  a4(v10);
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v9 + 24));
  swift_endAccess();
  if (v4) {
    swift_release();
  }
  swift_release();
  return v9;
}

uint64_t _OSActivity.__allocating_init(_:closure:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 88) = a5;
  *(void *)(v6 + 96) = v5;
  *(void *)(v6 + 72) = a2;
  *(void *)(v6 + 80) = a4;
  *(unsigned char *)(v6 + 128) = a3;
  *(void *)(v6 + 64) = a1;
  return MEMORY[0x270FA2498](sub_256C71DA0, 0, 0);
}

uint64_t sub_256C71DA0()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(int **)(v0 + 80);
  uint64_t v3 = *(const char **)(v0 + 64);
  char v4 = *(unsigned char *)(v0 + 128);
  *(void *)(v0 + 104) = swift_allocObject();
  _OSActivity.init(_:)(v3, v2, v4);
  uint64_t v7 = (uint64_t (*)(void))((char *)v1 + *v1);
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  void *v5 = v0;
  v5[1] = sub_256C71EC0;
  return v7();
}

uint64_t sub_256C71EC0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_256C7205C;
  }
  else {
    uint64_t v2 = sub_256C71FD4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_256C71FD4()
{
  OUTLINED_FUNCTION_0_2();
  os_activity_scope_leave(v0);
  swift_endAccess();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 104);
  return v2(v3);
}

uint64_t sub_256C7205C()
{
  OUTLINED_FUNCTION_0_2();
  os_activity_scope_leave(v0);
  swift_endAccess();
  swift_release_n();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

Swift::Void __swiftcall _OSActivity.close()()
{
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 24));
  swift_endAccess();
}

uint64_t sub_256C72130()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C88A8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  off_26B2C8870 = (_UNKNOWN *)result;
  return result;
}

uint64_t sub_256C7216C@<X0>(const char *a1@<X0>, void *a2@<X2>, os_activity_t *a3@<X8>)
{
  if (a2 && a1)
  {
    if (qword_26B2C8808 != -1) {
      swift_once();
    }
    uint64_t v6 = off_26B2C8870;
    uint64_t v7 = (os_unfair_lock_s *)((char *)off_26B2C8870 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)off_26B2C8870 + 6);
    if (*((void *)v6 + 2))
    {
      uint64_t v8 = *((void *)v6 + 2);
LABEL_9:
      swift_unknownObjectRetain();
      os_unfair_lock_unlock(v7);
      os_activity_t v10 = _os_activity_create(a2, a1, v8, OS_ACTIVITY_FLAG_DEFAULT);
      uint64_t result = swift_unknownObjectRelease();
      *a3 = v10;
      return result;
    }
    uint64_t v9 = dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
    *((void *)v6 + 2) = v9;
    if (v9)
    {
      uint64_t v8 = v9;
      swift_unknownObjectRetain_n();
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t result = sub_256CEE408();
  __break(1u);
  return result;
}

uint64_t _OSActivity.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t _OSActivity.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_1_2();
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t type metadata accessor for _OSActivity()
{
  return self;
}

uint64_t method lookup function for _OSActivity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _OSActivity);
}

uint64_t dispatch thunk of _OSActivity.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t UUIDIdentifier.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_256CEDB08();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v13, v8);
}

uint64_t UUIDIdentifier.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_256CEDB08();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t UUIDIdentifier.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_256CEDB08();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t UUIDIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_256CEDB08();
  OUTLINED_FUNCTION_0_0();
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v23 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUIDIdentifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)&v17 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CEE838();
  if (!v2)
  {
    unsigned int v17 = v13;
    uint64_t v18 = v8;
    uint64_t v19 = v10;
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    sub_256C7287C(&qword_26B2C7B60);
    unsigned int v14 = v23;
    sub_256CEE6E8();
    uint64_t v15 = v17;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v14, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v21, v15, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for UUIDIdentifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t UUIDIdentifier.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256CEE868();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_256CEDB08();
  sub_256C7287C(&qword_26B2C8838);
  sub_256CEE708();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t UUIDIdentifier.hash(into:)()
{
  sub_256CEDB08();
  sub_256C7287C(&qword_26B2C8840);
  return sub_256CEDF18();
}

uint64_t sub_256C7287C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256CEDB08();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t UUIDIdentifier.hashValue.getter()
{
  return sub_256CEE7F8();
}

uint64_t sub_256C72900@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UUIDIdentifier.init(from:)(a1, a2);
}

uint64_t sub_256C72920(void *a1)
{
  return UUIDIdentifier.encode(to:)(a1);
}

uint64_t sub_256C72940()
{
  return sub_256CEE7F8();
}

uint64_t sub_256C7297C()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of UUIDIdentifiable.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_256C729B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_256C729BC()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_256C72A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_256C72AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_256C72B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_256C72B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_256C72BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_256C72C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C72C58);
}

uint64_t sub_256C72C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_256C72CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C72CB4);
}

uint64_t sub_256C72CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDB08();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t ResponseSequence.init(throwing:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = result;
  a2[3] = nullsub_1;
  a2[4] = 0;
  return result;
}

__n128 ResponseStream.init(wrappedSequence:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a2 + 24) = result;
  return result;
}

const void *ClientData.data.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  uint64_t v3 = OUTLINED_FUNCTION_21(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_53_6();
  uint64_t v4 = sub_256CEDE28();
  OUTLINED_FUNCTION_5();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_57_5();
  sub_256C5FC18(v0, v1, &qword_269FC3000);
  if (__swift_getEnumTagSinglePayload(v1, 1, v4) == 1)
  {
    sub_256BE33C8(v1, &qword_269FC3000);
    return 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v0, v1, v4);
    uint64_t v9 = (void *)sub_256CEDE08();
    bytes_ptr = xpc_data_get_bytes_ptr(v9);
    if (bytes_ptr)
    {
      size_t length = xpc_data_get_length(v9);
      bytes_ptr = (const void *)MEMORY[0x25A2AD710](bytes_ptr, length);
      swift_unknownObjectRelease();
      uint64_t v11 = OUTLINED_FUNCTION_67_2();
      v12(v11);
    }
    else
    {
      uint64_t v13 = OUTLINED_FUNCTION_67_2();
      v14(v13);
      swift_unknownObjectRelease();
    }
  }
  return bytes_ptr;
}

uint64_t sub_256C72EB8(const void *a1, uint64_t a2)
{
  if (a1) {
    size_t v2 = a2 - (void)a1;
  }
  else {
    size_t v2 = 0;
  }
  xpc_data_create(a1, v2);
  return sub_256CEDE18();
}

uint64_t ClientData.init(data:xpcData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a2 >> 60 == 15)
  {
    uint64_t v6 = 1;
  }
  else
  {
    switch(a2 >> 62)
    {
      case 1uLL:
        if (a1 >> 32 < (int)a1)
        {
          __break(1u);
          JUMPOUT(0x256C730ACLL);
        }
        uint64_t v11 = OUTLINED_FUNCTION_44_5();
        sub_256C7A2E0(v11, v12);
        swift_retain();
        sub_256C7A238((int)a1, a1 >> 32);
        sub_256C7A338(a1, a2);
        sub_256C7A338(a1, a2);
        uint64_t v13 = OUTLINED_FUNCTION_44_5();
        sub_256BF9568(v13, v14);
        goto LABEL_11;
      case 2uLL:
        uint64_t v15 = *(void *)(a1 + 16);
        uint64_t v16 = *(void *)(a1 + 24);
        uint64_t v17 = OUTLINED_FUNCTION_44_5();
        sub_256C7A2CC(v17, v18);
        swift_retain();
        swift_retain();
        sub_256C7A238(v15, v16);
        swift_release();
        swift_release();
        goto LABEL_10;
      case 3uLL:
        OUTLINED_FUNCTION_20();
        goto LABEL_9;
      default:
        size_t v9 = BYTE6(a2);
        uint64_t v10 = a2 & 0xFFFFFFFFFFFFLL;
LABEL_9:
        sub_256C7A34C(a1, v10, v9);
LABEL_10:
        sub_256C7A338(a1, a2);
        sub_256C7A338(a1, a2);
LABEL_11:
        uint64_t v6 = 0;
        break;
    }
  }
  uint64_t v19 = sub_256CEDE28();
  __swift_storeEnumTagSinglePayload(a4, v6, 1, v19);
  uint64_t v20 = type metadata accessor for ClientData(0);
  return sub_256C5FC70(a3, a4 + *(int *)(v20 + 20), &qword_269FC3000);
}

uint64_t _s20ModelManagerServices10ClientDataVyAC10Foundation0E0VSgcfC_0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  uint64_t v7 = OUTLINED_FUNCTION_21(v6);
  MEMORY[0x270FA5388](v7);
  size_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256CEDE28();
  OUTLINED_FUNCTION_72_2((uint64_t)v9, v11, v12, v10);
  return ClientData.init(data:xpcData:)(a1, a2, (uint64_t)v9, a3);
}

uint64_t ClientData.xpcData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C75418(type metadata accessor for ClientData, (uint64_t)&qword_269FC3000, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_256C5FC18, a1);
}

void static ClientData.== infix(_:_:)()
{
  OUTLINED_FUNCTION_57();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_256CEDE28();
  OUTLINED_FUNCTION_5();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  uint64_t v55 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC44E0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_31_1();
  uint64_t v60 = v11;
  OUTLINED_FUNCTION_71_3();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  uint64_t v16 = OUTLINED_FUNCTION_21(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_31_1();
  uint64_t v54 = v17;
  OUTLINED_FUNCTION_71_3();
  MEMORY[0x270FA5388](v18);
  uint64_t v56 = (uint64_t)&v53 - v19;
  OUTLINED_FUNCTION_71_3();
  MEMORY[0x270FA5388](v20);
  uint64_t v59 = (uint64_t)&v53 - v21;
  OUTLINED_FUNCTION_71_3();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v53 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  long long v28 = (char *)&v53 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v53 - v29;
  uint64_t v57 = v3;
  sub_256C5FC18(v3, (uint64_t)&v53 - v29, &qword_269FC3000);
  uint64_t v58 = v1;
  sub_256C5FC18(v1, (uint64_t)v28, &qword_269FC3000);
  uint64_t v31 = (uint64_t)&v14[*(int *)(v9 + 48)];
  sub_256C5FC18((uint64_t)v30, (uint64_t)v14, &qword_269FC3000);
  sub_256C5FC18((uint64_t)v28, v31, &qword_269FC3000);
  OUTLINED_FUNCTION_12_7((uint64_t)v14);
  if (!v32)
  {
    sub_256C5FC18((uint64_t)v14, (uint64_t)v25, &qword_269FC3000);
    OUTLINED_FUNCTION_12_7(v31);
    if (!v32)
    {
      uint64_t v34 = OUTLINED_FUNCTION_28_7();
      v35(v34);
      sub_256C7A470(&qword_269FC44E8, MEMORY[0x263F8F420]);
      char v36 = sub_256CEDF28();
      uint64_t v53 = v6;
      uint64_t v37 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
      v37(&qword_269FC3000, v4);
      sub_256BE33C8((uint64_t)v28, &qword_269FC3000);
      sub_256BE33C8((uint64_t)v30, &qword_269FC3000);
      v37((uint64_t *)v25, v4);
      sub_256BE33C8((uint64_t)v14, &qword_269FC3000);
      if ((v36 & 1) == 0) {
        goto LABEL_21;
      }
      goto LABEL_11;
    }
    sub_256BE33C8((uint64_t)v28, &qword_269FC3000);
    sub_256BE33C8((uint64_t)v30, &qword_269FC3000);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v25, v4);
LABEL_9:
    uint64_t v33 = (uint64_t)v14;
LABEL_20:
    sub_256BE33C8(v33, &qword_269FC44E0);
    goto LABEL_21;
  }
  sub_256BE33C8((uint64_t)v28, &qword_269FC3000);
  sub_256BE33C8((uint64_t)v30, &qword_269FC3000);
  OUTLINED_FUNCTION_12_7(v31);
  if (!v32) {
    goto LABEL_9;
  }
  uint64_t v53 = v6;
  sub_256BE33C8((uint64_t)v14, &qword_269FC3000);
LABEL_11:
  uint64_t v38 = type metadata accessor for ClientData(0);
  uint64_t v39 = v59;
  sub_256C5FC18(v57 + *(int *)(v38 + 20), v59, &qword_269FC3000);
  uint64_t v40 = v56;
  sub_256C5FC18(v58 + *(int *)(v38 + 20), v56, &qword_269FC3000);
  uint64_t v41 = v60;
  uint64_t v42 = v60 + *(int *)(v9 + 48);
  sub_256C5FC18(v39, v60, &qword_269FC3000);
  uint64_t v43 = OUTLINED_FUNCTION_63_4();
  sub_256C5FC18(v43, v44, &qword_269FC3000);
  OUTLINED_FUNCTION_12_7(v41);
  if (!v32)
  {
    uint64_t v45 = v54;
    sub_256C5FC18(v41, v54, &qword_269FC3000);
    OUTLINED_FUNCTION_12_7(v42);
    if (!v46)
    {
      uint64_t v49 = v53;
      uint64_t v50 = OUTLINED_FUNCTION_28_7();
      v51(v50);
      sub_256C7A470(&qword_269FC44E8, MEMORY[0x263F8F420]);
      sub_256CEDF28();
      uint64_t v52 = *(void (**)(uint64_t *, uint64_t))(v49 + 8);
      v52(&qword_269FC3000, v4);
      sub_256BE33C8(v40, &qword_269FC3000);
      sub_256BE33C8(v39, &qword_269FC3000);
      v52((uint64_t *)v45, v4);
      sub_256BE33C8(v41, &qword_269FC3000);
      goto LABEL_21;
    }
    uint64_t v47 = OUTLINED_FUNCTION_63_4();
    sub_256BE33C8(v47, v48);
    sub_256BE33C8(v39, &qword_269FC3000);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v45, v4);
    goto LABEL_19;
  }
  sub_256BE33C8(v40, &qword_269FC3000);
  sub_256BE33C8(v39, &qword_269FC3000);
  OUTLINED_FUNCTION_12_7(v42);
  if (!v32)
  {
LABEL_19:
    uint64_t v33 = v41;
    goto LABEL_20;
  }
  sub_256BE33C8(v41, &qword_269FC3000);
LABEL_21:
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256C736E8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C616E7265746E69 && a2 == 0xEC00000061746144;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E7265746E69 && a2 == 0xEF61746144435058)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256C737F0()
{
  return 0x6C616E7265746E69;
}

uint64_t sub_256C73828()
{
  return sub_256C737F0();
}

uint64_t sub_256C73830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C736E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C73858(uint64_t a1)
{
  unint64_t v2 = sub_256C7A424();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C73894(uint64_t a1)
{
  unint64_t v2 = sub_256C7A424();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClientData.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC44F0);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_69_2();
  sub_256C7A424();
  OUTLINED_FUNCTION_11_3();
  sub_256CEDE28();
  sub_256C7A470(&qword_269FC4500, MEMORY[0x263F8F420]);
  OUTLINED_FUNCTION_50_6();
  if (!v0)
  {
    type metadata accessor for ClientData(0);
    OUTLINED_FUNCTION_50_6();
  }
  uint64_t v2 = OUTLINED_FUNCTION_27_5();
  return v3(v2);
}

void ClientData.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v3 = v2;
  uint64_t v21 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  uint64_t v6 = OUTLINED_FUNCTION_21(v5);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v22 = (char *)&v19 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4508);
  OUTLINED_FUNCTION_5();
  uint64_t v23 = v12;
  uint64_t v24 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = OUTLINED_FUNCTION_18_4();
  uint64_t v14 = type metadata accessor for ClientData(v13);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_53_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_256C7A424();
  sub_256CEE848();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  }
  else
  {
    uint64_t v19 = v14;
    uint64_t v20 = v1;
    sub_256CEDE28();
    sub_256C7A470(&qword_269FC4510, MEMORY[0x263F8F420]);
    uint64_t v16 = (uint64_t)v22;
    OUTLINED_FUNCTION_46_4();
    sub_256C5FC70(v16, v20, &qword_269FC3000);
    OUTLINED_FUNCTION_46_4();
    OUTLINED_FUNCTION_50();
    v17();
    uint64_t v18 = v20;
    sub_256C5FC70((uint64_t)v9, v20 + *(int *)(v19 + 20), &qword_269FC3000);
    sub_256C7A6C0(v18, v21, (void (*)(void))type metadata accessor for ClientData);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    sub_256C7A71C(v18, (void (*)(void))type metadata accessor for ClientData);
  }
  OUTLINED_FUNCTION_33();
}

void sub_256C73CD8()
{
}

uint64_t sub_256C73CF0()
{
  return ClientData.encode(to:)();
}

uint64_t ResponseAsyncIterator.next()()
{
  OUTLINED_FUNCTION_2();
  v1[5] = v2;
  v1[6] = v0;
  v1[4] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  OUTLINED_FUNCTION_21(v4);
  v1[7] = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_256C73D90()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v0[8] = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_256C73E44;
  uint64_t v6 = v0[7];
  return MEMORY[0x270FA1E80](v6, v2, v3);
}

uint64_t sub_256C73E44()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C73F20()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    sub_256BE33C8(v1, &qword_269FC3228);
    uint64_t v3 = 0;
    unint64_t v4 = 0xF000000000000000;
  }
  else
  {
    uint64_t v3 = ClientData.data.getter();
    unint64_t v4 = v5;
    sub_256C7A71C(v1, (void (*)(void))type metadata accessor for ClientData);
  }
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  v0[2] = v3;
  v0[3] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4520);
  uint64_t v8 = *(void *)(v7 + 16);
  int v9 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload(v6, v9 ^ 1u, 1, v8);
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v10();
}

uint64_t sub_256C74044()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C740A0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256BE3BF0;
  return ResponseAsyncIterator.next()();
}

uint64_t sub_256C74148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_256C74228;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_256C74228()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *unint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v3 + 24) = *(void *)(v3 + 16);
  }
  OUTLINED_FUNCTION_16();
  return v7();
}

uint64_t ResponseStream.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v10 = &type metadata for ResponseIterator;
  unint64_t v11 = sub_256C7A4B8();
  uint64_t result = swift_allocObject();
  *(void *)&long long v9 = result;
  if (v5)
  {
    *(void *)(result + 16) = v5;
    *(unsigned char *)(result + 56) = 2;
    *(void *)(result + 64) = nullsub_1;
    *(void *)(result + 72) = 0;
LABEL_5:
    sub_256BE3924(&v9, a1);
    return MEMORY[0x25A2AE9C0](v5);
  }
  if (v3)
  {
    *(void *)(result + 16) = v3;
    *(void *)(result + 24) = v4;
    *(unsigned char *)(result + 56) = 0;
    *(void *)(result + 64) = v6;
    *(void *)(result + 72) = v7;
    sub_256BEFD8C(v3);
    swift_retain();
    uint64_t v5 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void ResponseSequence.makeAsyncIterator()(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[2];
  if (v2)
  {
    *(void *)a1 = v2;
    *(unsigned char *)(a1 + 40) = 2;
    *(void *)(a1 + 48) = nullsub_1;
    *(void *)(a1 + 56) = 0;
  }
  else
  {
    uint64_t v3 = *v1;
    if (!*v1)
    {
      __break(1u);
      goto LABEL_9;
    }
    uint64_t v4 = v1[1];
    uint64_t v5 = v1[3];
    uint64_t v6 = v1[4];
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v6;
    sub_256BEFD8C(v3);
    swift_retain();
  }
LABEL_9:
  JUMPOUT(0x25A2AE9C0);
}

uint64_t sub_256C74464@<X0>(uint64_t a1@<X8>)
{
  ResponseStream.makeAsyncIterator()(a1);
  uint64_t v2 = (void *)v1[2];
  sub_256BEE8D8(*v1);

  return swift_release();
}

uint64_t ResponseIterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C744C8);
}

uint64_t sub_256C744C8()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = v0[3];
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v2 = *(void *)(v1 + 56);
  v0[4] = v2;
  uint64_t v4 = swift_task_alloc();
  v0[5] = v4;
  *(void *)(v4 + 16) = v1;
  uint64_t v5 = swift_task_alloc();
  v0[6] = v5;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  void *v6 = v0;
  v6[1] = sub_256C745EC;
  uint64_t v8 = v0[2];
  return MEMORY[0x270FA2338](v8, &unk_269FC4540, v4, sub_256C7A604, v5, 0, 0, v7);
}

uint64_t sub_256C745EC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C746D8()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  OUTLINED_FUNCTION_72();
  return v0();
}

uint64_t sub_256C74730()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C747A0(uint64_t a1, uint64_t a2)
{
  unsigned char v2[24] = a1;
  v2[25] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3228);
  v2[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C74834, 0, 0);
}

uint64_t sub_256C74834()
{
  sub_256C7F2A0(*(uint64_t **)(v0 + 200), v0 + 16);
  if (*(unsigned char *)(v0 + 56))
  {
    if (*(unsigned char *)(v0 + 56) == 1)
    {
      sub_256BE3924((long long *)(v0 + 16), v0 + 112);
      uint64_t v1 = *(void *)(v0 + 136);
      uint64_t v2 = *(void *)(v0 + 144);
      __swift_mutable_project_boxed_opaque_existential_1(v0 + 112, v1);
      swift_task_alloc();
      OUTLINED_FUNCTION_77();
      *(void *)(v0 + 256) = v3;
      *uint64_t v3 = v4;
      v3[1] = sub_256C74DC4;
      uint64_t v5 = *(void *)(v0 + 208);
      return MEMORY[0x270FA1E80](v5, v1, v2);
    }
    else
    {
      swift_willThrow();
      swift_task_dealloc();
      OUTLINED_FUNCTION_16();
      return v10();
    }
  }
  else
  {
    uint64_t v6 = *(int **)(v0 + 16);
    *(void *)(v0 + 216) = *(void *)(v0 + 24);
    uint64_t v12 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    *(void *)(v0 + 224) = v7;
    *uint64_t v7 = v8;
    v7[1] = sub_256C74A1C;
    uint64_t v9 = OUTLINED_FUNCTION_16_4();
    return v12(v9);
  }
}

uint64_t sub_256C74A1C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C74AF8()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 152), v2);
  OUTLINED_FUNCTION_5();
  uint64_t v5 = v4;
  uint64_t v6 = OUTLINED_FUNCTION_51_0();
  (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(v6, v3, v2);
  *(void *)(v0 + 88) = swift_getAssociatedTypeWitness();
  *(void *)(v0 + 96) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 64));
  sub_256CEE208();
  swift_task_dealloc();
  *(unsigned char *)(v0 + 104) = 1;
  sub_256C7F2D8(v0 + 64, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 152);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_256C74C88;
  uint64_t v8 = *(void *)(v0 + 192);
  return ResponseIterator.next()(v8);
}

uint64_t sub_256C74C88()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C74D64()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v0();
}

uint64_t sub_256C74DC4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 264) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C74EA0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  sub_256C7C1C0(v2);
  sub_256BF973C((uint64_t)(v0 + 14), v2);
  *(unsigned char *)(v2 + 40) = 1;
  sub_256C5FC70(v1, v3, &qword_269FC3228);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 14));
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  return v4();
}

uint64_t sub_256C74F44()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[25];
  sub_256C7C1C0(v2);
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 40) = 2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_256C74C88;
  uint64_t v4 = v0[24];
  return ResponseIterator.next()(v4);
}

uint64_t sub_256C74FF0()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C75054()
{
  OUTLINED_FUNCTION_2();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 112);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256C750B8()
{
  OUTLINED_FUNCTION_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_16_4();
  return ResponseIterator.next()(v3);
}

uint64_t sub_256C75140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269FC3248 + dword_269FC3248);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_256C7520C;
  return v10(a1, a2, a3);
}

uint64_t sub_256C7520C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v3 + 16) = v0;
  }
  uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
  return v7();
}

void default argument 1 of ResponseSequence.init(setup:onCancel:)()
{
}

uint64_t ResponseSequence.init(setup:onCancel:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = 0;
  a5[3] = a3;
  a5[4] = a4;
  return result;
}

uint64_t type metadata accessor for RequestMetadata(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C91D0);
}

uint64_t type metadata accessor for ClientData(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C9510);
}

uint64_t sub_256C75360@<X0>(uint64_t a1@<X8>)
{
  ResponseSequence.makeAsyncIterator()(a1);
  uint64_t v2 = (void *)v1[2];
  sub_256BEE8D8(*v1);

  return swift_release();
}

uint64_t RequestMetadata.loggingIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t RequestMetadata.clientData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C75418(type metadata accessor for RequestMetadata, (uint64_t)type metadata accessor for ClientData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_256C7A6C0, a1);
}

uint64_t sub_256C75418@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t _s20ModelManagerServices15RequestMetadataV2idAA14UUIDIdentifierVyACGvg_0()
{
  OUTLINED_FUNCTION_33_8();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t RequestMetadata.sessionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RequestMetadata(0);
  return sub_256C5FC18(v1 + *(int *)(v3 + 28), a1, qword_26B2C5B70);
}

uint64_t RequestMetadata.requiredAssetIDs.getter()
{
  type metadata accessor for RequestMetadata(0);
  return sub_256CEDEC8();
}

uint64_t RequestMetadata.isInference.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RequestMetadata(0) + 36));
}

uint64_t RequestMetadata.isStream.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RequestMetadata(0) + 40));
}

uint64_t RequestMetadata.init(loggingIdentifier:clientData:UUID:sessionID:requiredAssetIDs:isInference:isStream:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  uint64_t v16 = (int *)type metadata accessor for RequestMetadata(0);
  sub_256C7B090(a3, (uint64_t)a9 + v16[5], (void (*)(void))type metadata accessor for ClientData);
  uint64_t v17 = (char *)a9 + v16[6];
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  (*(void (**)(char *, uint64_t))(v18 + 32))(v17, a4);
  uint64_t result = sub_256C5FC70(a5, (uint64_t)a9 + v16[7], qword_26B2C5B70);
  *(void *)((char *)a9 + v16[8]) = a6;
  *((unsigned char *)a9 + v16[9]) = a7;
  *((unsigned char *)a9 + v16[10]) = a8;
  return result;
}

uint64_t static RequestMetadata.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_256CEE6C8(), char v6 = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = (int *)type metadata accessor for RequestMetadata(0);
    static ClientData.== infix(_:_:)();
    if ((v8 & 1) == 0
      || (_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0
      || (_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0)
    {
      goto LABEL_15;
    }
    uint64_t v9 = v7[8];
    uint64_t v10 = *(void *)((char *)a2 + v9);
    if (*(void *)((char *)a1 + v9))
    {
      if (!v10) {
        goto LABEL_15;
      }
      sub_256CEDEC8();
      uint64_t v11 = sub_256CEDEC8();
      sub_256BF1CB0(v11, v10);
      char v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else if (v10)
    {
LABEL_15:
      char v6 = 0;
      return v6 & 1;
    }
    if (*((unsigned __int8 *)a1 + v7[9]) == *((unsigned __int8 *)a2 + v7[9]))
    {
      char v6 = *((unsigned char *)a1 + v7[10]) ^ *((unsigned char *)a2 + v7[10]) ^ 1;
      return v6 & 1;
    }
    goto LABEL_15;
  }
  return v6 & 1;
}

uint64_t sub_256C757A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000256D01180 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x6144746E65696C63 && a2 == 0xEA00000000006174;
    if (v5 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 1684632949 && a2 == 0xE400000000000000;
      if (v6 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v7 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044;
        if (v7 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x8000000256D00B30 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v8 = a1 == 0x657265666E497369 && a2 == 0xEB0000000065636ELL;
          if (v8 || (sub_256CEE6C8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x6D61657274537369 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v10 = sub_256CEE6C8();
            swift_bridgeObjectRelease();
            if (v10) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_256C75A5C(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6144746E65696C63;
      break;
    case 2:
      unint64_t result = 1684632949;
      break;
    case 3:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x657265666E497369;
      break;
    case 6:
      unint64_t result = 0x6D61657274537369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_256C75B58()
{
  return sub_256C75A5C(*v0);
}

uint64_t sub_256C75B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C757A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C75B88(uint64_t a1)
{
  unint64_t v2 = sub_256C7A62C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C75BC4(uint64_t a1)
{
  unint64_t v2 = sub_256C7A62C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RequestMetadata.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4548);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_69_2();
  sub_256C7A62C();
  OUTLINED_FUNCTION_11_3();
  sub_256CEE568();
  if (!v0)
  {
    type metadata accessor for RequestMetadata(0);
    type metadata accessor for ClientData(0);
    sub_256C7A470(&qword_269FC41B8, (void (*)(uint64_t))type metadata accessor for ClientData);
    OUTLINED_FUNCTION_21_6();
    sub_256CEDB08();
    sub_256C7A470(&qword_26B2C8838, MEMORY[0x263F07508]);
    OUTLINED_FUNCTION_21_6();
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    sub_256C7A678(&qword_26B2C7980);
    OUTLINED_FUNCTION_21_6();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256BF93C8(&qword_26B2C4B88);
    sub_256CEE558();
    sub_256CEE578();
    sub_256CEE578();
  }
  uint64_t v2 = OUTLINED_FUNCTION_27_5();
  return v3(v2);
}

void RequestMetadata.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  BOOL v4 = v3;
  uint64_t v21 = v5;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_42_3(v7, v20);
  sub_256CEDB08();
  OUTLINED_FUNCTION_5();
  uint64_t v23 = v9;
  uint64_t v24 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = OUTLINED_FUNCTION_41_4();
  type metadata accessor for ClientData(v10);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_54();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4558);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_29();
  uint64_t v25 = (int *)type metadata accessor for RequestMetadata(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_0();
  uint64_t v15 = v14;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_256C7A62C();
  sub_256CEE848();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    *uint64_t v15 = sub_256CEE498();
    v15[1] = v16;
    sub_256C7A470(&qword_269FC41C8, (void (*)(uint64_t))type metadata accessor for ClientData);
    sub_256CEE4D8();
    sub_256C7B090(v2, (uint64_t)v15 + v25[5], (void (*)(void))type metadata accessor for ClientData);
    sub_256C7A470(&qword_26B2C7B60, MEMORY[0x263F07508]);
    sub_256CEE4D8();
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))((char *)v15 + v25[6], v0, v24);
    sub_256C7A678(&qword_26B2C7768);
    sub_256CEE4D8();
    sub_256C5FC70(v22, (uint64_t)v15 + v25[7], qword_26B2C5B70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
    sub_256BF93C8(&qword_269FC2FC0);
    sub_256CEE488();
    *(uint64_t *)((char *)v15 + v25[8]) = v26;
    *((unsigned char *)v15 + v25[9]) = sub_256CEE4A8() & 1;
    char v17 = sub_256CEE4A8();
    uint64_t v18 = OUTLINED_FUNCTION_25_6();
    v19(v18);
    *((unsigned char *)v15 + v25[10]) = v17 & 1;
    sub_256C7A6C0((uint64_t)v15, v21, (void (*)(void))type metadata accessor for RequestMetadata);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
    sub_256C7A71C((uint64_t)v15, (void (*)(void))type metadata accessor for RequestMetadata);
  }
  OUTLINED_FUNCTION_33();
}

void sub_256C764C0()
{
}

uint64_t sub_256C764D8()
{
  return RequestMetadata.encode(to:)();
}

void OneShotRequest.__allocating_init(session:loggingIdentifier:clientData:isInference:requiredAssetIDs:)()
{
}

void OneShotRequest.__allocating_init(session:loggingIdentifier:clientData:requiredAssetIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256C76F94(a1, a2, a3, a4, a5, (uint64_t)type metadata accessor for OneShotRequest, (uint64_t)sub_256C7A790, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void OneShotRequest.__allocating_init(session:loggingIdentifier:clientData:requiredAssetIDs:)()
{
}

void OneShotRequest.__allocating_init(session:loggingIdentifier:isInference:clientData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256C772F0(a1, a2, a3, a4, a5, (uint64_t)type metadata accessor for OneShotRequest, (uint64_t)sub_256C7A790, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void OneShotRequest.__allocating_init(session:loggingIdentifier:clientData:)()
{
}

{
  sub_256C77604();
}

uint64_t sub_256C76600(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C76618);
}

uint64_t sub_256C76618()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[4] = v2;
  if (*(void *)(*(void *)(v2 + OBJC_IVAR____TtC20ModelManagerServices7Session_supportedAssetBundleIdentifiers)
                 + 16) == 1)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient + 24);
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient), v3);
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 48)
                                                                              + **(int **)(v4 + 48));
    uint64_t v5 = v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_metadata;
    swift_retain();
    swift_task_alloc();
    OUTLINED_FUNCTION_77();
    v0[5] = v6;
    void *v6 = v7;
    v6[1] = sub_256C7681C;
    uint64_t v8 = v0[2];
    return v11(v8, v2, v5, v3, v4);
  }
  else
  {
    type metadata accessor for ModelManagerError();
    sub_256C7A470(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_68_2();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256C7681C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_1();
  void *v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_16();
    return v10();
  }
}

uint64_t sub_256C7691C()
{
  OUTLINED_FUNCTION_2();
  swift_release();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C76978()
{
  return sub_256C778D0();
}

uint64_t OneShotRequest.internalSession.getter()
{
  return swift_retain();
}

uint64_t OneShotRequest.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C7A6C0(v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_metadata, a1, (void (*)(void))type metadata accessor for RequestMetadata);
}

uint64_t sub_256C769C8()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t sub_256C76A00@<X0>(uint64_t a1@<X8>)
{
  return sub_256C779B0(&OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_metadata, a1);
}

uint64_t sub_256C76A0C()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v2);
  *(void *)(v1 + 24) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C76A8C()
{
  OUTLINED_FUNCTION_59();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient + 24));
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v1();
  OUTLINED_FUNCTION_48_6();
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_256C76BD0;
  uint64_t v3 = OUTLINED_FUNCTION_30_5();
  return v4(v3);
}

uint64_t sub_256C76BD0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v8 = v7;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_256BE33C8(v6, &qword_26B2C7798);
  swift_release();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v12();
  }
}

uint64_t sub_256C76D1C()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t OneShotRequest.deinit()
{
  return sub_256C77D28(&OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_metadata, &OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient);
}

uint64_t OneShotRequest.__deallocating_deinit()
{
  return sub_256C77DA4((void (*)(void))OneShotRequest.deinit);
}

uint64_t sub_256C76DA4()
{
  return sub_256C76978();
}

void StreamingRequest.__allocating_init(session:loggingIdentifier:clientData:isInference:requiredAssetIDs:)()
{
}

void sub_256C76DF4()
{
  OUTLINED_FUNCTION_57();
  uint64_t v24 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v17 = sub_256CEDB08();
  uint64_t v18 = OUTLINED_FUNCTION_21(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_53_0();
  uint64_t v19 = type metadata accessor for ClientData(0);
  uint64_t v20 = OUTLINED_FUNCTION_21(v19);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_44_2();
  sub_256C7A6C0(v10, v1, (void (*)(void))type metadata accessor for ClientData);
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_26B2C85F0;
  swift_retain();
  sub_256C7A71C(v10, (void (*)(void))type metadata accessor for ClientData);
  uint64_t v22 = OUTLINED_FUNCTION_37_5();
  v4(v22);
  uint64_t v23 = OUTLINED_FUNCTION_27_6();
  v24(v21, v16, v14, v12, v1, v8 & 1, v6, v0, v23);
  OUTLINED_FUNCTION_35_6();
  OUTLINED_FUNCTION_71();
}

void StreamingRequest.__allocating_init(session:loggingIdentifier:clientData:requiredAssetIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256C76F94(a1, a2, a3, a4, a5, (uint64_t)type metadata accessor for StreamingRequest, (uint64_t)sub_256C7AB84, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_256C76F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_57();
  a19 = v24;
  a20 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = OUTLINED_FUNCTION_65_3();
  uint64_t v35 = OUTLINED_FUNCTION_21(v34);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ClientData(0);
  uint64_t v39 = OUTLINED_FUNCTION_21(v38);
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_28_2();
  sub_256C7A6C0(v33, v23, (void (*)(void))type metadata accessor for ClientData);
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v40 = qword_26B2C85F0;
  swift_retain();
  sub_256C7A71C(v33, (void (*)(void))type metadata accessor for ClientData);
  uint64_t v41 = OUTLINED_FUNCTION_37_5();
  v29(v41);
  uint64_t v42 = OUTLINED_FUNCTION_27_6();
  v27(v40, v22, v21, v20, v23, 1, v31, v37, v42);
  OUTLINED_FUNCTION_35_6();
  OUTLINED_FUNCTION_71();
}

void StreamingRequest.__allocating_init(session:loggingIdentifier:clientData:requiredAssetIDs:)()
{
}

void sub_256C77128()
{
  OUTLINED_FUNCTION_57();
  uint64_t v26 = v6;
  char v8 = v7;
  uint64_t v10 = v9;
  unint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = OUTLINED_FUNCTION_65_3();
  uint64_t v16 = OUTLINED_FUNCTION_21(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_54();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  uint64_t v18 = OUTLINED_FUNCTION_21(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = OUTLINED_FUNCTION_41_4();
  uint64_t v20 = type metadata accessor for ClientData(v19);
  uint64_t v21 = OUTLINED_FUNCTION_21(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_54_0();
  uint64_t v22 = sub_256CEDE28();
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v22);
  sub_256C7A2E0(v14, v12);
  ClientData.init(data:xpcData:)(v14, v12, v0, v5);
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_26B2C85F0;
  swift_retain();
  sub_256BF9568(v14, v12);
  uint64_t v24 = OUTLINED_FUNCTION_37_5();
  v8(v24);
  uint64_t v25 = OUTLINED_FUNCTION_27_6();
  v26(v23, v3, v2, v1, v5, 1, v10, v4, v25);
  OUTLINED_FUNCTION_35_6();
  OUTLINED_FUNCTION_71();
}

void StreamingRequest.__allocating_init(session:loggingIdentifier:isInference:clientData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256C772F0(a1, a2, a3, a4, a5, (uint64_t)type metadata accessor for StreamingRequest, (uint64_t)sub_256C7AB84, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_256C772F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_57();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  char v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = sub_256CEDB08();
  uint64_t v38 = OUTLINED_FUNCTION_21(v37);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&a9 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for ClientData(0);
  uint64_t v42 = OUTLINED_FUNCTION_21(v41);
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_28_2();
  sub_256C7A6C0(v28, v20, (void (*)(void))type metadata accessor for ClientData);
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v43 = qword_26B2C85F0;
  swift_retain();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  sub_256C7A71C(v28, (void (*)(void))type metadata accessor for ClientData);
  uint64_t v44 = OUTLINED_FUNCTION_37_5();
  v26(v44);
  uint64_t v45 = OUTLINED_FUNCTION_27_6();
  v24(v43, v36, v34, v32, v20, v30 & 1, 0, v40, v45);
  OUTLINED_FUNCTION_35_6();
  OUTLINED_FUNCTION_71();
}

void StreamingRequest.__allocating_init(session:loggingIdentifier:clientData:)()
{
}

{
  sub_256C77604();
}

void sub_256C77494()
{
  OUTLINED_FUNCTION_57();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = OUTLINED_FUNCTION_78_3();
  uint64_t v8 = OUTLINED_FUNCTION_21(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_32_4();
  uint64_t v10 = type metadata accessor for ClientData(v9);
  uint64_t v11 = OUTLINED_FUNCTION_21(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_29();
  sub_256C7A6C0(v6, v0, (void (*)(void))type metadata accessor for ClientData);
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  swift_retain();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  sub_256C7A71C(v6, (void (*)(void))type metadata accessor for ClientData);
  uint64_t v12 = OUTLINED_FUNCTION_37_5();
  v4(v12);
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_61_6();
  v2(v13);
  OUTLINED_FUNCTION_35_6();
  OUTLINED_FUNCTION_71();
}

void sub_256C77604()
{
  OUTLINED_FUNCTION_57();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = OUTLINED_FUNCTION_78_3();
  uint64_t v6 = OUTLINED_FUNCTION_21(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_16_1();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  uint64_t v8 = OUTLINED_FUNCTION_21(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_54_0();
  uint64_t v10 = type metadata accessor for ClientData(v9);
  uint64_t v11 = OUTLINED_FUNCTION_21(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_18_4();
  uint64_t v12 = sub_256CEDE28();
  OUTLINED_FUNCTION_72_2(v0, v13, v14, v12);
  uint64_t v15 = OUTLINED_FUNCTION_67_3();
  sub_256C7A2E0(v15, v16);
  uint64_t v17 = OUTLINED_FUNCTION_67_3();
  ClientData.init(data:xpcData:)(v17, v18, v0, v19);
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  swift_retain();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  uint64_t v20 = OUTLINED_FUNCTION_67_3();
  sub_256BF9568(v20, v21);
  uint64_t v22 = OUTLINED_FUNCTION_37_5();
  v4(v22);
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_61_6();
  v2(v23);
  OUTLINED_FUNCTION_35_6();
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256C77774@<X0>(void *a1@<X8>)
{
  if (*(void *)(*(void *)(*(void *)(v1 + 16)
                             + OBJC_IVAR____TtC20ModelManagerServices7Session_supportedAssetBundleIdentifiers)
                 + 16) == 1)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient + 24);
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient), v3);
    uint64_t v5 = v1 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_metadata;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 64);
    uint64_t v7 = swift_retain();
    v6(v7, v5, v3, v4);
    return swift_release();
  }
  else
  {
    type metadata accessor for ModelManagerError();
    sub_256C7A470(&qword_26B2C7B78, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    uint64_t v9 = OUTLINED_FUNCTION_68_2();
    uint64_t result = swift_storeEnumTagMultiPayload();
    *a1 = 0;
    a1[1] = 0;
    a1[2] = v9;
    a1[3] = nullsub_1;
    a1[4] = 0;
  }
  return result;
}

uint64_t sub_256C778C4()
{
  return sub_256C778D0();
}

uint64_t sub_256C778D0()
{
  OUTLINED_FUNCTION_33_8();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t StreamingRequest.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C7A6C0(v1 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_metadata, a1, (void (*)(void))type metadata accessor for RequestMetadata);
}

uint64_t sub_256C7796C()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t sub_256C779A4@<X0>(uint64_t a1@<X8>)
{
  return sub_256C779B0(&OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_metadata, a1);
}

uint64_t sub_256C779B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = type metadata accessor for RequestMetadata(0);
  return sub_256C7A6C0(v4 + *(int *)(v5 + 20), a2, (void (*)(void))type metadata accessor for ClientData);
}

uint64_t sub_256C77A04()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v2);
  *(void *)(v1 + 24) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C77A84()
{
  OUTLINED_FUNCTION_59();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient), *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient + 24));
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v1();
  OUTLINED_FUNCTION_48_6();
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_256C77BC8;
  uint64_t v3 = OUTLINED_FUNCTION_30_5();
  return v4(v3);
}

uint64_t sub_256C77BC8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v8 = v7;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_256BE33C8(v6, &qword_26B2C7798);
  swift_release();
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v12();
  }
}

uint64_t StreamingRequest.deinit()
{
  return sub_256C77D28(&OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_metadata, &OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient);
}

uint64_t sub_256C77D28(void *a1, void *a2)
{
  swift_release();
  sub_256C7A71C(v2 + *a1, (void (*)(void))type metadata accessor for RequestMetadata);
  __swift_destroy_boxed_opaque_existential_1Tm(v2 + *a2);
  return v2;
}

uint64_t StreamingRequest.__deallocating_deinit()
{
  return sub_256C77DA4((void (*)(void))StreamingRequest.deinit);
}

uint64_t sub_256C77DA4(void (*a1)(void))
{
  a1();
  uint64_t v2 = *(unsigned int *)(*(void *)v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v1 + 52);
  return MEMORY[0x270FA0228](v1, v2, v3);
}

uint64_t sub_256C77E00()
{
  return sub_256C778C4();
}

uint64_t Request.init(session:loggingIdentifier:clientData:requiredAssetIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  OUTLINED_FUNCTION_38_5();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_26B2C85F0;
  a7[3] = type metadata accessor for ModelServiceClient();
  a7[4] = (uint64_t)&protocol witness table for ModelServiceClient;
  *a7 = v14;
  a7[5] = a1;
  a7[6] = a2;
  a7[7] = a3;
  a7[8] = a4;
  a7[9] = a5;
  a7[10] = a6;
  return swift_retain();
}

uint64_t Request.init(session:loggingIdentifier:clientData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  OUTLINED_FUNCTION_38_5();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_26B2C85F0;
  a6[3] = type metadata accessor for ModelServiceClient();
  a6[4] = (uint64_t)&protocol witness table for ModelServiceClient;
  *a6 = v12;
  a6[5] = a1;
  a6[6] = a2;
  a6[7] = a3;
  a6[8] = a4;
  a6[9] = a5;
  a6[10] = 0;
  return swift_retain();
}

uint64_t Request.init(session:loggingIdentifier:clientData:requiredAssetTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_44_5();
  return Request.init(session:loggingIdentifier:clientData:)(v8, v9, a3, a4, a5, v10);
}

uint64_t Request.session.getter()
{
  return swift_retain();
}

uint64_t Request.loggingIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t Request.clientData.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28();
  sub_256C7A2E0(v0, v1);
  return OUTLINED_FUNCTION_28();
}

uint64_t Request.uuid.getter()
{
  OUTLINED_FUNCTION_38_5();
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

__n128 Request.executeStream()()
{
  OUTLINED_FUNCTION_57();
  uint64_t v31 = v3;
  uint64_t v4 = sub_256CEDB08();
  OUTLINED_FUNCTION_5();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_57_5();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  uint64_t v9 = OUTLINED_FUNCTION_21(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_18_4();
  uint64_t v11 = type metadata accessor for ClientData(v10);
  uint64_t v12 = OUTLINED_FUNCTION_21(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_53_6();
  sub_256BF973C((uint64_t)v0, (uint64_t)v35);
  uint64_t v13 = *((void *)v0 + 5);
  uint64_t v30 = *((void *)v0 + 6);
  uint64_t v14 = *((void *)v0 + 7);
  uint64_t v15 = *((void *)v0 + 8);
  unint64_t v16 = *((void *)v0 + 9);
  uint64_t v17 = sub_256CEDE28();
  OUTLINED_FUNCTION_72_2(v2, v18, v19, v17);
  swift_retain();
  sub_256CEDEC8();
  sub_256C7A2E0(v15, v16);
  ClientData.init(data:xpcData:)(v15, v16, v2, v1);
  uint64_t v20 = *((void *)v0 + 10);
  OUTLINED_FUNCTION_38_5();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v0, &v0[v21], v4);
  type metadata accessor for StreamingRequest(0);
  uint64_t v22 = OUTLINED_FUNCTION_27_6();
  uint64_t v24 = v36;
  uint64_t v23 = v37;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_53_0();
  (*(void (**)(unint64_t))(v26 + 16))(v16);
  sub_256C7AD80(v16, v13, v30, v14, v1, 1, v20, (uint64_t)v0, v22, v24, v23);
  sub_256CEDEC8();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
  sub_256C77774(&v32);
  swift_release();
  uint64_t v27 = v33;
  long long v28 = v34;
  *(_OWORD *)uint64_t v31 = v32;
  *(void *)(v31 + 16) = v27;
  *(_OWORD *)(v31 + 24) = v28;
  OUTLINED_FUNCTION_71();
  return result;
}

uint64_t Request.execute()()
{
  OUTLINED_FUNCTION_2();
  v1[7] = v0;
  uint64_t v2 = sub_256CEDB08();
  v1[8] = v2;
  OUTLINED_FUNCTION_6(v2);
  v1[9] = v3;
  v1[10] = OUTLINED_FUNCTION_51_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  OUTLINED_FUNCTION_21(v4);
  v1[11] = OUTLINED_FUNCTION_51_0();
  uint64_t v5 = type metadata accessor for ClientData(0);
  OUTLINED_FUNCTION_21(v5);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_256C78420()
{
  uint64_t v25 = v0[13];
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v24 = v0[8];
  uint64_t v4 = (char *)v0[7];
  sub_256BF973C((uint64_t)v4, (uint64_t)(v0 + 2));
  uint64_t v27 = *((void *)v4 + 5);
  uint64_t v28 = *((void *)v4 + 6);
  uint64_t v26 = *((void *)v4 + 7);
  uint64_t v5 = sub_256CEDE28();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v5);
  swift_retain();
  sub_256CEDEC8();
  uint64_t v6 = OUTLINED_FUNCTION_63_4();
  sub_256C7A2E0(v6, v7);
  uint64_t v8 = OUTLINED_FUNCTION_63_4();
  ClientData.init(data:xpcData:)(v8, v9, v2, v10);
  uint64_t v11 = *((void *)v4 + 10);
  OUTLINED_FUNCTION_38_5();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v1, &v4[v12], v24);
  type metadata accessor for OneShotRequest(0);
  uint64_t v13 = OUTLINED_FUNCTION_27_6();
  uint64_t v15 = v0[5];
  uint64_t v14 = v0[6];
  uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v15);
  OUTLINED_FUNCTION_5();
  uint64_t v18 = v17;
  uint64_t v19 = OUTLINED_FUNCTION_51_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v16, v15);
  v0[14] = sub_256C7A988(v19, v27, v28, v26, v25, 1, v11, v1, v13, v15, v14);
  sub_256CEDEC8();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v0[15] = v20;
  *uint64_t v20 = v21;
  v20[1] = sub_256C78620;
  uint64_t v22 = v0[12];
  return sub_256C76600(v22);
}

uint64_t sub_256C78620()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_256C786FC()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = ClientData.data.getter();
  unint64_t v4 = v3;
  sub_256C7A71C(v1, (void (*)(void))type metadata accessor for ClientData);
  swift_release();
  if (v4 >> 60 == 15) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v2;
  }
  if (v4 >> 60 == 15) {
    unint64_t v6 = 0xC000000000000000;
  }
  else {
    unint64_t v6 = v4;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(const void *, unint64_t))(v0 + 8);
  return v7(v5, v6);
}

uint64_t sub_256C787E4()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

Swift::Void __swiftcall Request.cancel()()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Request(0);
  uint64_t v4 = OUTLINED_FUNCTION_6(v3);
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v11 = OUTLINED_FUNCTION_21(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_32_4();
  uint64_t v12 = sub_256CEE178();
  OUTLINED_FUNCTION_72_2(v1, v13, v14, v12);
  sub_256C7A6C0(v2, (uint64_t)v9, (void (*)(void))type metadata accessor for Request);
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  sub_256C7B090((uint64_t)v9, v16 + v15, (void (*)(void))type metadata accessor for Request);
  sub_256C1C324(v1, (uint64_t)&unk_269FC4590, v16);
  swift_release();
}

uint64_t sub_256C789C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  *(void *)(v4 + 24) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256C78A54, 0, 0);
}

uint64_t sub_256C78A54()
{
  OUTLINED_FUNCTION_12();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  type metadata accessor for Request(0);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v1();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_256C78B68;
  OUTLINED_FUNCTION_66_2();
  return ModelServiceClient.cancelRequest(id:session:)();
}

uint64_t sub_256C78B68()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v8 = v7;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  sub_256BE33C8(v6, &qword_26B2C7798);
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v12();
  }
}

uint64_t Request.cancel_async()()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C7798);
  OUTLINED_FUNCTION_21(v2);
  *(void *)(v1 + 24) = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C78D18()
{
  OUTLINED_FUNCTION_12();
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  type metadata accessor for Request(0);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v1();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_256C78E2C;
  OUTLINED_FUNCTION_66_2();
  return ModelServiceClient.cancelRequest(id:session:)();
}

uint64_t sub_256C78E2C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v8 = v7;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  sub_256BE33C8(v6, &qword_26B2C7798);
  if (v0)
  {
    OUTLINED_FUNCTION_20();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return v12();
  }
}

uint64_t sub_256C78F5C()
{
  OUTLINED_FUNCTION_2();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v0();
}

unint64_t RequestCancellationReason.description.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x43207963696C6F50;
      break;
  }
  return result;
}

uint64_t static RequestCancellationReason.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1)
  {
    case 0uLL:
      if (v3) {
        goto LABEL_13;
      }
      unint64_t v2 = 0;
      goto LABEL_8;
    case 1uLL:
      if (v3 != 1) {
        goto LABEL_13;
      }
      unint64_t v2 = 1;
LABEL_8:
      char v7 = 1;
      break;
    case 2uLL:
      if (v3 != 2) {
        goto LABEL_13;
      }
      char v7 = 1;
      unint64_t v2 = 2;
      break;
    case 3uLL:
      if (v3 != 3) {
        goto LABEL_13;
      }
      char v7 = 1;
      unint64_t v2 = 3;
      break;
    default:
      if (v3 < 4)
      {
LABEL_13:
        sub_256C255D4(*a2);
        sub_256C255D4(v2);
        char v7 = 0;
      }
      else
      {
        sub_256C255D4(*a2);
        sub_256C255D4(v2);
        uint64_t v4 = OUTLINED_FUNCTION_28();
        sub_256BF1CB0(v4, v5);
        char v7 = v6;
      }
      break;
  }
  sub_256C715C0(v2);
  sub_256C715C0(v3);
  return v7 & 1;
}

uint64_t sub_256C79160(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x68437963696C6F70 && a2 == 0xEC00000065676E61;
  if (v3 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000256D011A0 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6944746E65696C63 && a2 == 0xEF6C61776F766173;
    if (v6 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D011C0 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D011E0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      char v7 = sub_256CEE6C8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 4;
      }
      else {
        return 5;
      }
    }
  }
}

unint64_t sub_256C7937C(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6944746E65696C63;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 0x68437963696C6F70;
      break;
  }
  return result;
}

uint64_t sub_256C79440(uint64_t a1)
{
  unint64_t v2 = sub_256C7B284();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C7947C(uint64_t a1)
{
  unint64_t v2 = sub_256C7B284();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C794B8(uint64_t a1)
{
  unint64_t v2 = sub_256C7B238();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C794F4(uint64_t a1)
{
  unint64_t v2 = sub_256C7B238();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_256C79530()
{
  return sub_256C7937C(*v0);
}

uint64_t sub_256C79538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C79160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C79560(uint64_t a1)
{
  unint64_t v2 = sub_256C7B1A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C7959C(uint64_t a1)
{
  unint64_t v2 = sub_256C7B1A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C795D8(uint64_t a1)
{
  unint64_t v2 = sub_256C7B31C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C79614(uint64_t a1)
{
  unint64_t v2 = sub_256C7B31C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C79650(uint64_t a1)
{
  unint64_t v2 = sub_256C7B1EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C7968C(uint64_t a1)
{
  unint64_t v2 = sub_256C7B1EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256C796C8(uint64_t a1)
{
  unint64_t v2 = sub_256C7B2D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C79704(uint64_t a1)
{
  unint64_t v2 = sub_256C7B2D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void RequestCancellationReason.encode(to:)()
{
  OUTLINED_FUNCTION_32_0();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC45A0);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_43_3(v4, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC45A8);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_42_3(v6, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC45B0);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC45B8);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC45C0);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC45C8);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_16_1();
  uint64_t v11 = *v0;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_256C7B1A0();
  sub_256CEE878();
  switch(v11)
  {
    case 0:
      sub_256C7B31C();
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_50();
      v13(v12);
      OUTLINED_FUNCTION_44_5();
      goto LABEL_8;
    case 1:
      sub_256C7B284();
      OUTLINED_FUNCTION_26_7();
      goto LABEL_7;
    case 2:
      sub_256C7B238();
      OUTLINED_FUNCTION_26_7();
      goto LABEL_7;
    case 3:
      sub_256C7B1EC();
      OUTLINED_FUNCTION_26_7();
LABEL_7:
      OUTLINED_FUNCTION_50();
      v19(v18);
LABEL_8:
      OUTLINED_FUNCTION_50();
      v21(v20);
      break;
    default:
      sub_256C7B2D0();
      OUTLINED_FUNCTION_70_2();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
      sub_256BF93C8(&qword_26B2C4B88);
      sub_256CEE5A8();
      OUTLINED_FUNCTION_50();
      v15(v14);
      OUTLINED_FUNCTION_44_5();
      OUTLINED_FUNCTION_50();
      v17(v16);
      break;
  }
  OUTLINED_FUNCTION_33();
}

void RequestCancellationReason.init(from:)()
{
  OUTLINED_FUNCTION_32_0();
  uint64_t v3 = v2;
  uint64_t v41 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4600);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_43_3(v6, v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4608);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4610);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4618);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4620);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_44_2();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_269FC4628);
  OUTLINED_FUNCTION_5();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_28_2();
  uint64_t v42 = v3;
  OUTLINED_FUNCTION_69_2();
  sub_256C7B1A0();
  sub_256CEE848();
  if (v0) {
    goto LABEL_12;
  }
  uint64_t v40 = v13;
  uint64_t v15 = sub_256CEE528();
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = v11;
  if (!v16)
  {
LABEL_7:
    uint64_t v26 = sub_256CEE398();
    swift_allocError();
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269FC2BA0);
    *uint64_t v28 = &type metadata for RequestCancellationReason;
    sub_256CEE468();
    sub_256CEE388();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v1, v17);
LABEL_12:
    uint64_t v33 = v42;
    goto LABEL_13;
  }
  uint64_t v18 = *(unsigned __int8 *)(v15 + 32);
  sub_256BEBCEC(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
  uint64_t v20 = v19;
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    uint64_t v17 = v11;
    goto LABEL_7;
  }
  switch(v18)
  {
    case 1:
      sub_256C7B2D0();
      OUTLINED_FUNCTION_14_6();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4B80);
      sub_256BF93C8(&qword_269FC2FC0);
      sub_256CEE4D8();
      OUTLINED_FUNCTION_50();
      v36();
      swift_unknownObjectRelease();
      uint64_t v37 = OUTLINED_FUNCTION_47_5();
      v38(v37);
      uint64_t v25 = v43;
      break;
    case 2:
      sub_256C7B284();
      OUTLINED_FUNCTION_14_6();
      OUTLINED_FUNCTION_50();
      v29();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v30();
      uint64_t v25 = 1;
      break;
    case 3:
      sub_256C7B238();
      OUTLINED_FUNCTION_14_6();
      OUTLINED_FUNCTION_50();
      v31();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v32();
      uint64_t v25 = 2;
      break;
    case 4:
      sub_256C7B1EC();
      OUTLINED_FUNCTION_14_6();
      OUTLINED_FUNCTION_67_3();
      OUTLINED_FUNCTION_50();
      v34();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v35();
      uint64_t v25 = 3;
      break;
    default:
      sub_256C7B31C();
      OUTLINED_FUNCTION_14_6();
      OUTLINED_FUNCTION_50();
      v23();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_50();
      v24();
      uint64_t v25 = 0;
      break;
  }
  uint64_t v33 = v42;
  *uint64_t v41 = v25;
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1Tm(v33);
  OUTLINED_FUNCTION_33();
}

void sub_256C7A200()
{
}

void sub_256C7A218()
{
}

uint64_t sub_256C7A238(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_256CED968();
  uint64_t v5 = (char *)result;
  if (result)
  {
    uint64_t result = sub_256CED988();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_256CED978();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = &v5[v9];
  if (v5) {
    uint64_t v11 = (uint64_t)v10;
  }
  else {
    uint64_t v11 = 0;
  }
  return sub_256C72EB8(v5, v11);
}

uint64_t sub_256C7A2CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_256C7A2E0(a1, a2);
  }
  return a1;
}

uint64_t sub_256C7A2E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_256C7A338(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_256BF9568(a1, a2);
  }
  return a1;
}

uint64_t sub_256C7A34C(uint64_t a1, uint64_t a2, size_t length)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t bytes = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  xpc_data_create(&bytes, length);
  return sub_256CEDE18();
}

unint64_t sub_256C7A424()
{
  unint64_t result = qword_269FC44F8;
  if (!qword_269FC44F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC44F8);
  }
  return result;
}

uint64_t sub_256C7A470(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256C7A4B8()
{
  unint64_t result = qword_269FC4528;
  if (!qword_269FC4528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4528);
  }
  return result;
}

uint64_t sub_256C7A504()
{
  uint64_t v1 = (id *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 56);
  if (v2 == 2)
  {
  }
  else if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
  }
  else if (!*(unsigned char *)(v0 + 56))
  {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_256C7A574()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_112(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_256BE3BF0;
  uint64_t v5 = OUTLINED_FUNCTION_16_4();
  return sub_256C747A0(v5, v1);
}

uint64_t sub_256C7A604()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_256C7A62C()
{
  unint64_t result = qword_269FC4550;
  if (!qword_269FC4550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4550);
  }
  return result;
}

uint64_t sub_256C7A678(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B2C5B70);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C7A6C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_271();
  v4();
  return a2;
}

uint64_t sub_256C7A71C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v3();
  return a1;
}

uint64_t type metadata accessor for OneShotRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C4A60);
}

uint64_t sub_256C7A790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v25 = a8;
  uint64_t v26 = a7;
  int v27 = a6;
  uint64_t v14 = type metadata accessor for RequestMetadata(0);
  uint64_t v15 = (int *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)(a9 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient);
  uint64_t v18[3] = type metadata accessor for ModelServiceClient();
  uint64_t v18[4] = &protocol witness table for ModelServiceClient;
  *uint64_t v18 = a1;
  *(void *)(a9 + 16) = a2;
  uint64_t v19 = &v17[v15[9]];
  uint64_t v20 = a2 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  uint64_t v21 = sub_256CEDB08();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v19, v20, v21);
  *(void *)uint64_t v17 = a3;
  *((void *)v17 + 1) = a4;
  sub_256C7B090(a5, (uint64_t)&v17[v15[7]], (void (*)(void))type metadata accessor for ClientData);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(&v17[v15[8]], v25, v21);
  *(void *)&v17[v15[10]] = v26;
  v17[v15[11]] = v27;
  v17[v15[12]] = 0;
  sub_256C7B090((uint64_t)v17, a9 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_metadata, (void (*)(void))type metadata accessor for RequestMetadata);
  return a9;
}

uint64_t type metadata accessor for StreamingRequest(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_269FC4760);
}

uint64_t sub_256C7A988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v28 = a8;
  uint64_t v29 = a7;
  int v30 = a6;
  uint64_t v16 = type metadata accessor for RequestMetadata(0);
  uint64_t v17 = (int *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t *)(a9 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient);
  v20[3] = a10;
  v20[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(boxed_opaque_existential_1, a1, a10);
  *(void *)(a9 + 16) = a2;
  uint64_t v22 = &v19[v17[9]];
  uint64_t v23 = a2 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  uint64_t v24 = sub_256CEDB08();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v22, v23, v24);
  *(void *)uint64_t v19 = a3;
  *((void *)v19 + 1) = a4;
  sub_256C7B090(a5, (uint64_t)&v19[v17[7]], (void (*)(void))type metadata accessor for ClientData);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v19[v17[8]], v28, v24);
  *(void *)&v19[v17[10]] = v29;
  v19[v17[11]] = v30;
  v19[v17[12]] = 0;
  sub_256C7B090((uint64_t)v19, a9 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_metadata, (void (*)(void))type metadata accessor for RequestMetadata);
  return a9;
}

uint64_t sub_256C7AB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v25 = a8;
  uint64_t v26 = a7;
  int v27 = a6;
  uint64_t v14 = type metadata accessor for RequestMetadata(0);
  uint64_t v15 = (int *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)(a9 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient);
  uint64_t v18[3] = type metadata accessor for ModelServiceClient();
  uint64_t v18[4] = &protocol witness table for ModelServiceClient;
  *uint64_t v18 = a1;
  *(void *)(a9 + 16) = a2;
  uint64_t v19 = &v17[v15[9]];
  uint64_t v20 = a2 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  uint64_t v21 = sub_256CEDB08();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v19, v20, v21);
  *(void *)uint64_t v17 = a3;
  *((void *)v17 + 1) = a4;
  sub_256C7B090(a5, (uint64_t)&v17[v15[7]], (void (*)(void))type metadata accessor for ClientData);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(&v17[v15[8]], v25, v21);
  *(void *)&v17[v15[10]] = v26;
  v17[v15[11]] = v27;
  v17[v15[12]] = 1;
  sub_256C7B090((uint64_t)v17, a9 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_metadata, (void (*)(void))type metadata accessor for RequestMetadata);
  return a9;
}

uint64_t type metadata accessor for Request(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C48F0);
}

uint64_t sub_256C7AD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v28 = a8;
  uint64_t v29 = a7;
  int v30 = a6;
  uint64_t v16 = type metadata accessor for RequestMetadata(0);
  uint64_t v17 = (int *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t *)(a9 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient);
  v20[3] = a10;
  v20[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(boxed_opaque_existential_1, a1, a10);
  *(void *)(a9 + 16) = a2;
  uint64_t v22 = &v19[v17[9]];
  uint64_t v23 = a2 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  uint64_t v24 = sub_256CEDB08();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v22, v23, v24);
  *(void *)uint64_t v19 = a3;
  *((void *)v19 + 1) = a4;
  sub_256C7B090(a5, (uint64_t)&v19[v17[7]], (void (*)(void))type metadata accessor for ClientData);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v19[v17[8]], v28, v24);
  *(void *)&v19[v17[10]] = v29;
  v19[v17[11]] = v30;
  v19[v17[12]] = 1;
  sub_256C7B090((uint64_t)v19, a9 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_metadata, (void (*)(void))type metadata accessor for RequestMetadata);
  return a9;
}

uint64_t sub_256C7AF80()
{
  uint64_t v1 = *(void *)(type metadata accessor for Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_1Tm(v6);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256BF9568(*(void *)(v6 + 64), *(void *)(v6 + 72));
  swift_bridgeObjectRelease();
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v7();
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_256C7B090(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_297();
  v5(v4);
  return a2;
}

uint64_t sub_256C7B0E4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = type metadata accessor for Request(0);
  OUTLINED_FUNCTION_24(v1);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_112(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_256BE3BF0;
  uint64_t v9 = OUTLINED_FUNCTION_16_4();
  return sub_256C789C0(v9, v3, v4, v5);
}

unint64_t sub_256C7B1A0()
{
  unint64_t result = qword_269FC45D0;
  if (!qword_269FC45D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC45D0);
  }
  return result;
}

unint64_t sub_256C7B1EC()
{
  unint64_t result = qword_269FC45D8;
  if (!qword_269FC45D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC45D8);
  }
  return result;
}

unint64_t sub_256C7B238()
{
  unint64_t result = qword_269FC45E0;
  if (!qword_269FC45E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC45E0);
  }
  return result;
}

unint64_t sub_256C7B284()
{
  unint64_t result = qword_269FC45E8;
  if (!qword_269FC45E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC45E8);
  }
  return result;
}

unint64_t sub_256C7B2D0()
{
  unint64_t result = qword_269FC45F0;
  if (!qword_269FC45F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC45F0);
  }
  return result;
}

unint64_t sub_256C7B31C()
{
  unint64_t result = qword_269FC45F8;
  if (!qword_269FC45F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC45F8);
  }
  return result;
}

uint64_t sub_256C7B368()
{
  return swift_getWitnessTable();
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256CEDE28();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ClientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256CEDE28();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v7(v5, v4);
  }
  return result;
}

char *initializeWithCopy for ClientData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDE28();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for ClientData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDE28();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
  return a1;
}

char *initializeWithTake for ClientData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDE28();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for ClientData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEDE28();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C7BDD4);
}

uint64_t sub_256C7BDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ClientData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C7BE34);
}

uint64_t sub_256C7BE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

void sub_256C7BE84()
{
  sub_256C7BF10();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_256C7BF10()
{
  if (!qword_26B2C9010[0])
  {
    sub_256CEDE28();
    unint64_t v0 = sub_256CEE2E8();
    if (!v1) {
      atomic_store(v0, qword_26B2C9010);
    }
  }
}

uint64_t type metadata accessor for ResponseAsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ResponseStream()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for ResponseIterator(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 == 2)
  {
  }
  else if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else if (!*(unsigned char *)(a1 + 40))
  {
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for ResponseIterator(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 40);
  if (v4 == 2)
  {
    uint64_t v7 = *a2;
    MEMORY[0x25A2AE9C0](*a2);
    *(void *)a1 = v7;
    char v6 = 2;
  }
  else
  {
    if (v4 != 1)
    {
      uint64_t v8 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v8;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
      goto LABEL_7;
    }
    long long v5 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
    char v6 = 1;
  }
  *(unsigned char *)(a1 + 40) = v6;
LABEL_7:
  uint64_t v9 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ResponseIterator(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_256C7C1C0(a1);
    int v4 = *((unsigned __int8 *)a2 + 40);
    if (v4 == 2)
    {
      uint64_t v7 = *a2;
      MEMORY[0x25A2AE9C0](*a2);
      *(void *)a1 = v7;
      char v6 = 2;
    }
    else
    {
      if (v4 != 1)
      {
        uint64_t v8 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v8;
        *(unsigned char *)(a1 + 40) = 0;
        swift_retain();
        goto LABEL_8;
      }
      uint64_t v5 = a2[3];
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = a2[4];
      (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
      char v6 = 1;
    }
    *(unsigned char *)(a1 + 40) = v6;
  }
LABEL_8:
  uint64_t v9 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_256C7C1C0(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *assignWithTake for ResponseIterator(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_256C7C1C0((uint64_t)a1);
    long long v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseIterator(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseIterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseIterator()
{
}

uint64_t _s20ModelManagerServices16ResponseSequenceVwxx_0(uint64_t a1)
{
  if (*(void *)a1) {
    swift_release();
  }

  return swift_release();
}

void *_s20ModelManagerServices16ResponseSequenceVwcp_0(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  MEMORY[0x25A2AE9C0](v5);
  uint64_t v7 = a2[3];
  uint64_t v6 = a2[4];
  a1[2] = v5;
  a1[3] = v7;
  a1[4] = v6;
  swift_retain();
  return a1;
}

void *_s20ModelManagerServices16ResponseSequenceVwca_0()
{
  OUTLINED_FUNCTION_62_4();
  if (!v3)
  {
    if (v2)
    {
      uint64_t v5 = *(void *)(v1 + 8);
      *unint64_t v0 = v2;
      v0[1] = v5;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)unint64_t v0 = *(_OWORD *)v1;
    goto LABEL_8;
  }
  if (!v2)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  *unint64_t v0 = v2;
  v0[1] = v4;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v6 = (void *)v0[2];
  uint64_t v7 = *(void *)(v1 + 16);
  MEMORY[0x25A2AE9C0](v7);
  v0[2] = v7;

  uint64_t v8 = *(void *)(v1 + 32);
  v0[3] = *(void *)(v1 + 24);
  v0[4] = v8;
  swift_retain();
  swift_release();
  return v0;
}

uint64_t _s20ModelManagerServices16ResponseSequenceVwta_0()
{
  OUTLINED_FUNCTION_62_4();
  if (!v3)
  {
    if (v2)
    {
      uint64_t v5 = *(void *)(v1 + 8);
      *(void *)uint64_t v0 = v2;
      *(void *)(v0 + 8) = v5;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
    goto LABEL_8;
  }
  if (!v2)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  *(void *)uint64_t v0 = v2;
  *(void *)(v0 + 8) = v4;
  swift_release();
LABEL_8:

  uint64_t v6 = *(void *)(v1 + 32);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
  *(void *)(v0 + 32) = v6;
  swift_release();
  return v0;
}

void type metadata accessor for ResponseSequence()
{
}

char *initializeBufferWithCopyOfBuffer for RequestMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_256CEDE28();
    sub_256CEDEC8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for ClientData(0) + 20);
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v11))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v15, v16, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v11);
    }
    uint64_t v18 = a3[6];
    uint64_t v19 = &v4[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_256CEDB08();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    v22(&v4[a3[7]], &a2[a3[7]], v21);
    uint64_t v23 = a3[9];
    *(void *)&v4[a3[8]] = *(void *)&a2[a3[8]];
    v4[v23] = a2[v23];
    v4[a3[10]] = a2[a3[10]];
    sub_256CEDEC8();
  }
  return v4;
}

uint64_t destroy for RequestMetadata(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_256CEDE28();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = v4 + *(int *)(type metadata accessor for ClientData(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6, v5);
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_256CEDB08();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[7], v8);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for RequestMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_256CEDE28();
  sub_256CEDEC8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v10))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v10);
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_256CEDB08();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v20(&a1[a3[7]], &a2[a3[7]], v19);
  uint64_t v21 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  a1[v21] = a2[v21];
  a1[a3[10]] = a2[a3[10]];
  sub_256CEDEC8();
  return a1;
}

char *assignWithCopy for RequestMetadata(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_256CEDE28();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_256CEDB08();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24);
  v25(v22, v23, v24);
  v25(&a1[a3[7]], &a2[a3[7]], v24);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *initializeWithTake for RequestMetadata(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_256CEDE28();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  int v17 = &a2[v15];
  uint64_t v18 = sub_256CEDB08();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(&a1[a3[7]], &a2[a3[7]], v18);
  uint64_t v20 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  a1[v20] = a2[v20];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *assignWithTake for RequestMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_256CEDE28();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(type metadata accessor for ClientData(0) + 20);
  uint64_t v16 = &v8[v15];
  int v17 = &v9[v15];
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v10);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v10 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v16, v17, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v10);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC3000);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v16, v17, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[6];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_256CEDB08();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40);
  v26(v23, v24, v25);
  v26(&a1[a3[7]], &a2[a3[7]], v25);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v27] = a2[v27];
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C7D370);
}

uint64_t sub_256C7D370(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_18_2(*(void *)(a1 + 8));
  }
  type metadata accessor for ClientData(0);
  OUTLINED_FUNCTION_26();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = a3[5];
  }
  else
  {
    sub_256CEDB08();
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v9 = v11;
      uint64_t v10 = a3[6];
    }
    else
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
      uint64_t v10 = a3[7];
    }
  }
  return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
}

uint64_t storeEnumTagSinglePayload for RequestMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C7D44C);
}

void sub_256C7D44C()
{
  OUTLINED_FUNCTION_101();
  if (v4)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v5 = v3;
    int v6 = v2;
    type metadata accessor for ClientData(0);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v8 + 84) == v6)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v5[5];
    }
    else
    {
      sub_256CEDB08();
      OUTLINED_FUNCTION_26();
      if (*(_DWORD *)(v12 + 84) == v6)
      {
        uint64_t v9 = v11;
        uint64_t v10 = v5[6];
      }
      else
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
        uint64_t v10 = v5[7];
      }
    }
    __swift_storeEnumTagSinglePayload(v1 + v10, v0, v0, v9);
  }
}

uint64_t sub_256C7D510()
{
  uint64_t result = type metadata accessor for ClientData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_256CEDB08();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_256C7D5FC()
{
  return type metadata accessor for OneShotRequest(0);
}

uint64_t method lookup function for OneShotRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OneShotRequest);
}

uint64_t dispatch thunk of OneShotRequest.execute()()
{
  OUTLINED_FUNCTION_12();
  int v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 104) + **(int **)(*(void *)v0 + 104));
  uint64_t v1 = swift_task_alloc();
  unint64_t v2 = (void *)OUTLINED_FUNCTION_112(v1);
  *unint64_t v2 = v3;
  v2[1] = sub_256BE3BF0;
  uint64_t v4 = OUTLINED_FUNCTION_16_4();
  return v6(v4);
}

uint64_t dispatch thunk of OneShotRequest.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of OneShotRequest.id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of OneShotRequest.session.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of OneShotRequest.loggingIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of OneShotRequest.clientData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of OneShotRequest.cancel_async()()
{
  OUTLINED_FUNCTION_12();
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 160) + **(int **)(*(void *)v0 + 160));
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_256BDD6B8;
  return v4();
}

uint64_t sub_256C7D8BC()
{
  return type metadata accessor for StreamingRequest(0);
}

uint64_t sub_256C7D8C4()
{
  uint64_t result = type metadata accessor for RequestMetadata(319);
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_24(result);
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for StreamingRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StreamingRequest);
}

uint64_t dispatch thunk of StreamingRequest.execute()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of StreamingRequest.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of StreamingRequest.id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of StreamingRequest.session.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of StreamingRequest.loggingIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of StreamingRequest.clientData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of StreamingRequest.cancel_async()()
{
  OUTLINED_FUNCTION_12();
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 160) + **(int **)(*(void *)v0 + 160));
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_256BE3BF0;
  return v4();
}

void *initializeBufferWithCopyOfBuffer for Request(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    uint64_t v9 = a2[8];
    v4[7] = a2[7];
    unint64_t v10 = a2[9];
    swift_retain();
    sub_256CEDEC8();
    sub_256C7A2E0(v9, v10);
    v4[8] = v9;
    v4[9] = v10;
    v4[10] = a2[10];
    uint64_t v11 = *(int *)(a3 + 36);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_256CEDB08();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    sub_256CEDEC8();
    v15(v12, v13, v14);
  }
  return v4;
}

uint64_t destroy for Request(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256BF9568(*(void *)(a1 + 64), *(void *)(a1 + 72));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_256CEDB08();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  unint64_t v9 = *(void *)(a2 + 72);
  swift_retain();
  sub_256CEDEC8();
  sub_256C7A2E0(v8, v9);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_256CEDB08();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  sub_256CEDEC8();
  v14(v11, v12, v13);
  return a1;
}

uint64_t *assignWithCopy for Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[8];
  unint64_t v7 = a2[9];
  sub_256C7A2E0(v6, v7);
  uint64_t v8 = a1[8];
  unint64_t v9 = a1[9];
  a1[8] = v6;
  a1[9] = v7;
  sub_256BF9568(v8, v9);
  a1[10] = a2[10];
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v10 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_release();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a1 + 64);
  unint64_t v10 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_256BF9568(v9, v10);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_256CEDB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C7E084);
}

uint64_t sub_256C7E084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_18_2(*(void *)(a1 + 24));
  }
  uint64_t v7 = sub_256CEDB08();
  uint64_t v8 = a1 + *(int *)(a3 + 36);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for Request(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C7E114);
}

void sub_256C7E114()
{
  OUTLINED_FUNCTION_101();
  if (v3)
  {
    *(void *)(v1 + 24) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_256CEDB08();
    uint64_t v6 = v1 + *(int *)(v4 + 36);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

uint64_t sub_256C7E188()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RequestCancellationReason(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = sub_256CEDEC8();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for RequestCancellationReason(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for RequestCancellationReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      sub_256CEDEC8();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    sub_256CEDEC8();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for RequestCancellationReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestCancellationReason(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RequestCancellationReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_256C7E448(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_256C7E460(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

void type metadata accessor for RequestCancellationReason()
{
}

void sub_256C7E48C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)a1 + 3;
  }
  if (v1 == 2)
  {
  }
  else if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_256C7E4C4(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 40);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2)
  {
    uint64_t v6 = *a2;
    MEMORY[0x25A2AE9C0](*a2);
    *(void *)a1 = v6;
    char v5 = 2;
  }
  else
  {
    if (v3 != 1)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
      return a1;
    }
    long long v4 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    char v5 = 1;
  }
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t sub_256C7E578(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
    }
    else if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    else
    {
      swift_release();
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      uint64_t v8 = *a2;
      MEMORY[0x25A2AE9C0](v8);
      *(void *)a1 = v8;
      char v7 = 2;
    }
    else
    {
      if (v5 != 1)
      {
        uint64_t v9 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v9;
        *(unsigned char *)(a1 + 40) = 0;
        swift_retain();
        return a1;
      }
      uint64_t v6 = a2[3];
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = a2[4];
      (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
      char v7 = 1;
    }
    *(unsigned char *)(a1 + 40) = v7;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_256C7E698(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
    }
    else if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    else
    {
      swift_release();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v7 = 2;
    }
    else if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(unsigned char *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t sub_256C7E768(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_256C7E7A4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_256C7E7F0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_256C7E80C(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

void type metadata accessor for ResponseIterator.SetupState()
{
}

unsigned char *storeEnumTagSinglePayload for RequestCancellationReason.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C7E90CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.CodingKeys()
{
  return &type metadata for RequestCancellationReason.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.PolicyChangeCodingKeys()
{
  return &type metadata for RequestCancellationReason.PolicyChangeCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RequestCancellationReason.SpecificPolicyChangeCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256C7E9F0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.SpecificPolicyChangeCodingKeys()
{
  return &type metadata for RequestCancellationReason.SpecificPolicyChangeCodingKeys;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.ClientDisavowalCodingKeys()
{
  return &type metadata for RequestCancellationReason.ClientDisavowalCodingKeys;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.ClientTerminationCodingKeys()
{
  return &type metadata for RequestCancellationReason.ClientTerminationCodingKeys;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.RequestPreemptionCodingKeys()
{
  return &type metadata for RequestCancellationReason.RequestPreemptionCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RequestMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C7EB24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestMetadata.CodingKeys()
{
  return &type metadata for RequestMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClientData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C7EC28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientData.CodingKeys()
{
  return &type metadata for ClientData.CodingKeys;
}

unint64_t sub_256C7EC64()
{
  unint64_t result = qword_269FC4778;
  if (!qword_269FC4778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4778);
  }
  return result;
}

unint64_t sub_256C7ECB4()
{
  unint64_t result = qword_269FC4780;
  if (!qword_269FC4780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4780);
  }
  return result;
}

unint64_t sub_256C7ED04()
{
  unint64_t result = qword_269FC4788;
  if (!qword_269FC4788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4788);
  }
  return result;
}

unint64_t sub_256C7ED54()
{
  unint64_t result = qword_269FC4790;
  if (!qword_269FC4790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4790);
  }
  return result;
}

unint64_t sub_256C7EDA4()
{
  unint64_t result = qword_269FC4798;
  if (!qword_269FC4798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4798);
  }
  return result;
}

unint64_t sub_256C7EDF4()
{
  unint64_t result = qword_269FC47A0;
  if (!qword_269FC47A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47A0);
  }
  return result;
}

unint64_t sub_256C7EE44()
{
  unint64_t result = qword_269FC47A8;
  if (!qword_269FC47A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47A8);
  }
  return result;
}

unint64_t sub_256C7EE94()
{
  unint64_t result = qword_269FC47B0;
  if (!qword_269FC47B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47B0);
  }
  return result;
}

unint64_t sub_256C7EEE4()
{
  unint64_t result = qword_269FC47B8;
  if (!qword_269FC47B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47B8);
  }
  return result;
}

unint64_t sub_256C7EF34()
{
  unint64_t result = qword_269FC47C0;
  if (!qword_269FC47C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47C0);
  }
  return result;
}

unint64_t sub_256C7EF84()
{
  unint64_t result = qword_269FC47C8;
  if (!qword_269FC47C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47C8);
  }
  return result;
}

unint64_t sub_256C7EFD4()
{
  unint64_t result = qword_269FC47D0;
  if (!qword_269FC47D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47D0);
  }
  return result;
}

unint64_t sub_256C7F024()
{
  unint64_t result = qword_269FC47D8;
  if (!qword_269FC47D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47D8);
  }
  return result;
}

unint64_t sub_256C7F074()
{
  unint64_t result = qword_269FC47E0;
  if (!qword_269FC47E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47E0);
  }
  return result;
}

unint64_t sub_256C7F0C4()
{
  unint64_t result = qword_269FC47E8;
  if (!qword_269FC47E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47E8);
  }
  return result;
}

unint64_t sub_256C7F114()
{
  unint64_t result = qword_269FC47F0;
  if (!qword_269FC47F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47F0);
  }
  return result;
}

unint64_t sub_256C7F164()
{
  unint64_t result = qword_269FC47F8;
  if (!qword_269FC47F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC47F8);
  }
  return result;
}

unint64_t sub_256C7F1B4()
{
  unint64_t result = qword_269FC4800;
  if (!qword_269FC4800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4800);
  }
  return result;
}

unint64_t sub_256C7F204()
{
  unint64_t result = qword_269FC4808;
  if (!qword_269FC4808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4808);
  }
  return result;
}

unint64_t sub_256C7F254()
{
  unint64_t result = qword_269FC4810;
  if (!qword_269FC4810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4810);
  }
  return result;
}

uint64_t sub_256C7F2A0(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_256C7F2D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_42_3(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  *(void *)(v1 + 32) = *(void *)(v2 + 16);
  return v0 + 56;
}

uint64_t OUTLINED_FUNCTION_64_2()
{
  type metadata accessor for RequestMetadata(0);
  return sub_256CEDB08();
}

uint64_t OUTLINED_FUNCTION_65_3()
{
  return sub_256CEDB08();
}

uint64_t sub_256C7F3D8()
{
  return sub_256CEE7B8();
}

uint64_t sub_256C7F404()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t sub_256C7F414()
{
  return sub_256CEE7F8();
}

uint64_t sub_256C7F45C()
{
  return sub_256C7F414();
}

uint64_t sub_256C7F480()
{
  return sub_256C7F3D8();
}

uint64_t sub_256C7F4A4()
{
  return sub_256CEE7F8();
}

BOOL sub_256C7F4E8(uint64_t *a1, uint64_t *a2)
{
  return sub_256BF0FA8(*a1, *a2);
}

uint64_t sub_256C7F50C()
{
  swift_defaultActor_initialize();
  uint64_t v1 = OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_logHandle;
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_256CEDC88();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B2C8CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  uint64_t v4 = OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cancellationHandlers;
  type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8AC0);
  sub_256C811C4(&qword_26B2C8AA8, v5, (void (*)(uint64_t))type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle);
  *(void *)(v0 + v4) = sub_256CEDEB8();
  uint64_t v6 = v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4820);
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);
  *(void *)(v0 + 112) = 0xD000000000000016;
  *(void *)(v0 + 120) = 0x8000000256D002C0;
  return v0;
}

uint64_t sub_256C7F67C()
{
  type metadata accessor for ModelXPCCachedSession(0);
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_256C7F50C();
  qword_26B2C9660 = v0;
  return result;
}

uint64_t sub_256C7F6BC()
{
  uint64_t v1 = v0;
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4838);
  uint64_t v3 = OUTLINED_FUNCTION_21(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_19();
  uint64_t v6 = v5 - v4;
  type metadata accessor for _OSActivity();
  swift_initStackObject();
  uint64_t v7 = _OSActivity.init(_:)("modelmanagerd connection cancellation", 37, 2);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4820);
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
  OUTLINED_FUNCTION_5_5();
  sub_256C80E44(v6, v9);
  swift_endAccess();
  BOOL v10 = sub_256C7F978();
  uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cancellationHandlers);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = v12 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v12 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  sub_256CEDEC8();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    uint64_t v24 = *(void (**)(BOOL *))(*(void *)(v12 + 56) + 16 * i);
    v26[0] = v10;
    swift_retain();
    v24(v26);
    swift_release();
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v17) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v13 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v13 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v17) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v13 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v16 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 < v17)
  {
    unint64_t v22 = *(void *)(v13 + 8 * v23);
    if (!v22)
    {
      while (1)
      {
        int64_t v18 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          break;
        }
        if (v18 >= v17) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v13 + 8 * v18);
        ++v23;
        if (v22) {
          goto LABEL_20;
        }
      }
LABEL_25:
      __break(1u);
    }
    int64_t v18 = v23;
    goto LABEL_20;
  }
LABEL_23:
  swift_release();
  OUTLINED_FUNCTION_5_5();
  os_activity_scope_leave((os_activity_scope_state_t)(v7 + 24));
  swift_endAccess();
  return swift_release();
}

BOOL sub_256C7F978()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4838);
  uint64_t v2 = OUTLINED_FUNCTION_21(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_6();
  uint64_t v5 = v3 - v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - v7;
  OUTLINED_FUNCTION_4_5();
  sub_256C810F8(v0, (uint64_t)v8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4820);
  BOOL v10 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
  {
    sub_256C810F8((uint64_t)v8, v5);
    BOOL v10 = swift_getEnumCaseMultiPayload() != 1;
    sub_256C15FEC(v5, &qword_269FC4820);
  }
  sub_256C15FEC((uint64_t)v8, &qword_269FC4838);
  return v10;
}

uint64_t sub_256C7FA90()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4838);
  uint64_t v3 = OUTLINED_FUNCTION_21(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = OUTLINED_FUNCTION_2_6();
  type metadata accessor for XPCSessionWrapper(v4);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_19();
  uint64_t v8 = v7 - v6;
  OUTLINED_FUNCTION_4_5();
  sub_256C810F8(v0, v1);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4820);
  if (__swift_getEnumTagSinglePayload(v1, 1, v9) == 1)
  {
    BOOL v10 = &qword_269FC4838;
    return sub_256C15FEC(v1, v10);
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    BOOL v10 = &qword_269FC4820;
    return sub_256C15FEC(v1, v10);
  }
  sub_256C81160(v1, v8);
  if (_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0())
  {
    swift_retain();
    sub_256CEDD18();
    swift_release();
  }
  return sub_256C80D80(v8);
}

void sub_256C7FC00(uint64_t *a1@<X8>)
{
  uint64_t v4 = &qword_269FC4838;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4838);
  uint64_t v6 = OUTLINED_FUNCTION_21(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = OUTLINED_FUNCTION_2_6();
  uint64_t v8 = type metadata accessor for XPCSessionWrapper(v7);
  uint64_t v9 = OUTLINED_FUNCTION_21(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_19();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = v1 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
  swift_beginAccess();
  sub_256C810F8(v13, v2);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4820);
  if (__swift_getEnumTagSinglePayload(v2, 1, v14) == 1) {
    goto LABEL_4;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = &qword_269FC4820;
LABEL_4:
    sub_256C15FEC(v2, v4);
    sub_256C7FD54(a1);
    return;
  }
  sub_256C81160(v2, v12);
  sub_256C81160(v12, (uint64_t)a1);
}

void sub_256C7FD54(uint64_t *a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = sub_256CEDDE8();
  v26[2] = *(void *)(v2 - 8);
  v26[3] = v2;
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_6();
  uint64_t v5 = v3 - v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4838);
  uint64_t v8 = OUTLINED_FUNCTION_21(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_6();
  uint64_t v11 = v9 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v26 - v13;
  uint64_t v15 = sub_256CEDCD8();
  uint64_t v16 = OUTLINED_FUNCTION_21(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_19();
  sub_256CEDD48();
  uint64_t v28 = v1;
  sub_256CEDEC8();
  sub_256CEDCC8();
  uint64_t v17 = v29;
  uint64_t v18 = sub_256CEDC98();
  if (!v17)
  {
    uint64_t v19 = v18;
    uint64_t v20 = (uint64_t)v14;
    uint64_t v29 = v11;
    v26[1] = v5;
    swift_allocObject();
    uint64_t v21 = v28;
    swift_weakInit();
    swift_retain();
    sub_256CEDCE8();
    swift_release_n();
    uint64_t v22 = (uint64_t)v27;
    *uint64_t v27 = v19;
    type metadata accessor for XPCSessionWrapper(0);
    swift_retain();
    _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
    sub_256CEDD28();
    swift_release();
    sub_256C80EAC(v22, v20);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4820);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload(v20, 0, 1, v23);
    uint64_t v24 = v29;
    sub_256C80DDC(v20, v29);
    uint64_t v25 = v21 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
    OUTLINED_FUNCTION_7_7();
    sub_256C80E44(v24, v25);
    swift_endAccess();
  }
}

uint64_t sub_256C801E4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v4;
  sub_256BDB8B0();
  return swift_release();
}

uint64_t sub_256C8030C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return MEMORY[0x270FA2498](sub_256C8032C, 0, 0);
}

uint64_t sub_256C8032C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_256C803F4, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_256C803F4()
{
  sub_256C7F6BC();
  swift_release();
  return MEMORY[0x270FA2498](sub_256C80464, 0, 0);
}

uint64_t sub_256C80464()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_256C8048C()
{
  OUTLINED_FUNCTION_5_5();
  uint64_t v0 = swift_retain();
  sub_256C9C23C(v0, v1, v2, v3, v4, v5, v6, v7, v11, v12);
  uint64_t v9 = v8;
  swift_endAccess();
  swift_release();
  return sub_256BEE8D8(v9);
}

uint64_t sub_256C80500()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_logHandle;
  sub_256CEDC88();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_bridgeObjectRelease();
  sub_256C15FEC(v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult, &qword_269FC4838);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_256C80594()
{
  sub_256C80500();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_256C805C0()
{
  return type metadata accessor for ModelXPCCachedSession(0);
}

uint64_t type metadata accessor for ModelXPCCachedSession(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C89C0);
}

void sub_256C805E8()
{
  sub_256CEDC88();
  if (v0 <= 0x3F)
  {
    sub_256C806D4();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_256C806D4()
{
  if (!qword_269FC4818)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269FC4820);
    unint64_t v0 = sub_256CEE2E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269FC4818);
    }
  }
}

uint64_t type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle()
{
  return self;
}

uint64_t *sub_256C80754(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_256CEDB08();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_256C80838(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_256CEDB08();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_256C808B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_256CEDB08();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_256C80948(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_256C809DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_256C80A58(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_256C80AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C80AF8);
}

uint64_t sub_256C80AF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_256CEDB08();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_256C80B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C80B94);
}

void *sub_256C80B94(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_256CEDB08();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for XPCSessionWrapper(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_269FC4828);
}

uint64_t sub_256C80C34()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_256C80CD0(uint64_t a1, uint64_t a2)
{
  return sub_256C811C4(&qword_26B2C8AB0, a2, (void (*)(uint64_t))type metadata accessor for ModelXPCCachedSession.CancellationHandlerHandle);
}

uint64_t sub_256C80D18()
{
  return v0;
}

uint64_t sub_256C80D24()
{
  return sub_256C80D18();
}

uint64_t sub_256C80D40()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_256C80D78()
{
  return sub_256C801E4();
}

uint64_t sub_256C80D80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for XPCSessionWrapper(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256C80DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C80E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C80EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCSessionWrapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C80F10()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_256C80F50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_256C81004;
  return sub_256C8030C(a1, v4, v5, v6);
}

uint64_t sub_256C81004()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_256C810F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C81160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCSessionWrapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C811C4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Session.id.getter()
{
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t sub_256C8126C()
{
  uint64_t v0 = sub_256CEDC88();
  __swift_allocate_value_buffer(v0, qword_269FC4850);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269FC4850);
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B2C8CA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t ModelInstance.assetBundleIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t ModelInstance.inferenceProviderID.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t ModelInstance.inferenceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  char v5 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  sub_256CEDEC8();
  return sub_256CEDEC8();
}

uint64_t ModelInstance.init(assetBundleIdentifier:inferenceProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a3;
  uint64_t v4 = a3[1];
  char v6 = *((unsigned char *)a3 + 32);
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = v5;
  *(void *)(a4 + 24) = v4;
  *(void *)(a4 + 32) = v5;
  *(void *)(a4 + 40) = v4;
  *(_OWORD *)(a4 + 48) = *((_OWORD *)a3 + 1);
  *(unsigned char *)(a4 + 64) = v6;
  return sub_256CEDEC8();
}

uint64_t ModelInstance.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEDEC8();
  swift_bridgeObjectRetain_n();
  sub_256CEDFA8();
  swift_bridgeObjectRelease();
  sub_256CEE7B8();
  if (v1)
  {
    sub_256CEDEC8();
    sub_256CEDFA8();
    swift_bridgeObjectRelease();
  }
  sub_256CEE7C8();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static ModelInstance.== infix(_:_:)(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 64);
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  long long v15 = *(_OWORD *)(a1 + 48);
  BOOL v9 = *(void *)a1 == *a2 && *(void *)(a1 + 8) == a2[1];
  if (v9 || (char v10 = sub_256CEE6C8(), v11 = 0, (v10 & 1) != 0))
  {
    BOOL v12 = v2 == v7 && v3 == v8;
    if (v12 || (OUTLINED_FUNCTION_28(), v13 = sub_256CEE6C8(), char v11 = 0, (v13 & 1) != 0))
    {
      v16[0] = v4;
      v16[1] = v5;
      long long v17 = v15;
      char v18 = v6;
      char v11 = static InferenceProviderDescriptor.== infix(_:_:)((uint64_t)v16);
    }
  }
  return v11 & 1;
}

uint64_t sub_256C8162C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000256D001D0 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000256D013C0 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D00BB0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_256CEE6C8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_256C81770(char a1)
{
  if (!a1) {
    return 0xD000000000000015;
  }
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return 0xD000000000000011;
}

unint64_t sub_256C817CC()
{
  return sub_256C81770(*v0);
}

uint64_t sub_256C817D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C8162C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C817FC(uint64_t a1)
{
  unint64_t v2 = sub_256C8462C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C81838(uint64_t a1)
{
  unint64_t v2 = sub_256C8462C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ModelInstance.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4868);
  OUTLINED_FUNCTION_5();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256C8462C();
  sub_256CEE878();
  sub_256CEE568();
  if (!v8)
  {
    sub_256CEE568();
    sub_256C158A8();
    OUTLINED_FUNCTION_9();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t ModelInstance.hashValue.getter()
{
  return sub_256CEE7F8();
}

uint64_t ModelInstance.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4878);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256C8462C();
  sub_256CEE848();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v6 = OUTLINED_FUNCTION_31_3();
  uint64_t v8 = v7;
  uint64_t v16 = v6;
  LOBYTE(v17) = 1;
  sub_256CEDEC8();
  uint64_t v9 = OUTLINED_FUNCTION_31_3();
  uint64_t v11 = v10;
  uint64_t v15 = v9;
  sub_256C15B4C();
  sub_256CEDEC8();
  sub_256CEE4D8();
  uint64_t v12 = OUTLINED_FUNCTION_16_8();
  v13(v12);
  sub_256CEDEC8();
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = v20;
  *(unsigned char *)(a2 + 64) = v21;
  sub_256CEDEC8();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_256C81CE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ModelInstance.init(from:)(a1, a2);
}

uint64_t sub_256C81CF8(void *a1)
{
  return ModelInstance.encode(to:)(a1);
}

uint64_t sub_256C81D18()
{
  return sub_256CEE7F8();
}

uint64_t Session.Metadata.supportedAssetBundleIdentifiers.getter()
{
  return sub_256CEDEC8();
}

uint64_t Session.Metadata.useCaseID.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t Session.Metadata.onBehalfOfPID.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t Session.Metadata.parentOfOnBehalfOfPID.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t Session.Metadata.loggingIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t Session.Metadata.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Session.Metadata(0);
  return sub_256C86944(v1 + *(int *)(v3 + 36), a1, qword_26B2C5B70);
}

uint64_t Session.Metadata.sessionSetID.getter()
{
  type metadata accessor for Session.Metadata(0);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t Session.Metadata.init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPID:loggingIdentifier:id:sessionSetID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  uint64_t v12 = type metadata accessor for Session.Metadata(0);
  sub_256C84698(a8, (uint64_t)a9 + *(int *)(v12 + 36));
  char v13 = (char *)a9 + *(int *)(v12 + 40);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 32);
  return v16(v13, a10, v14);
}

uint64_t sub_256C81F38(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001FLL && a2 == 0x8000000256D01370 || (sub_256CEE6C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x4965736143657375 && a2 == 0xE900000000000044;
    if (v5 || (sub_256CEE6C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x666C616865426E6FLL && a2 == 0xED0000444950664FLL;
      if (v6 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x8000000256D00170 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000256D01180 || (sub_256CEE6C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v7 = a1 == 25705 && a2 == 0xE200000000000000;
        if (v7 || (sub_256CEE6C8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0x536E6F6973736573 && a2 == 0xEC00000044497465)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          char v9 = sub_256CEE6C8();
          swift_bridgeObjectRelease();
          if (v9) {
            return 6;
          }
          else {
            return 7;
          }
        }
      }
    }
  }
}

unint64_t sub_256C821F8(char a1)
{
  unint64_t result = 0xD00000000000001FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4965736143657375;
      break;
    case 2:
      unint64_t result = 0x666C616865426E6FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 25705;
      break;
    case 6:
      unint64_t result = 0x536E6F6973736573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_256C822F8()
{
  return sub_256C821F8(*v0);
}

uint64_t sub_256C82300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256C81F38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256C82328(uint64_t a1)
{
  unint64_t v2 = sub_256C84700();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256C82364(uint64_t a1)
{
  unint64_t v2 = sub_256C84700();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Session.Metadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C50A8);
  OUTLINED_FUNCTION_5();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_44_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256C84700();
  sub_256CEE878();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C79A0);
  sub_256C8474C(&qword_26B2C5058);
  OUTLINED_FUNCTION_9();
  if (!v1)
  {
    sub_256CEE568();
    sub_256CEE598();
    sub_256CEE598();
    sub_256CEE568();
    type metadata accessor for Session.Metadata(0);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    sub_256C7A678(&qword_26B2C7980);
    OUTLINED_FUNCTION_9();
    sub_256CEDB08();
    sub_256C847B0(&qword_26B2C8838, MEMORY[0x263F07508]);
    OUTLINED_FUNCTION_9();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t Session.Metadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_256CEDB08();
  OUTLINED_FUNCTION_5();
  uint64_t v21 = v5;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_19();
  uint64_t v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_28_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C55C8);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_19();
  uint64_t v22 = type metadata accessor for Session.Metadata(0);
  OUTLINED_FUNCTION_10();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_19();
  uint64_t v23 = (char *)(v14 - v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256C84700();
  sub_256CEE848();
  if (v24) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C79A0);
  sub_256C8474C(&qword_26B2C5588);
  sub_256CEE4D8();
  *(void *)uint64_t v23 = v25;
  *((void *)v23 + 1) = sub_256CEE498();
  *((void *)v23 + 2) = v15;
  *((void *)v23 + 3) = sub_256CEE4C8();
  *((void *)v23 + 4) = sub_256CEE4C8();
  *((void *)v23 + 5) = sub_256CEE498();
  *((void *)v23 + 6) = v16;
  sub_256C7A678(&qword_26B2C7768);
  sub_256CEE4D8();
  sub_256C84698(v2, (uint64_t)&v23[*(int *)(v22 + 36)]);
  sub_256C847B0(&qword_26B2C7B60, MEMORY[0x263F07508]);
  sub_256CEE4D8();
  uint64_t v17 = OUTLINED_FUNCTION_27_7();
  v18(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(&v23[*(int *)(v22 + 40)], v9, v4);
  sub_256C847F8((uint64_t)v23, a2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_256C8485C((uint64_t)v23);
}

uint64_t sub_256C82B3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Session.Metadata.init(from:)(a1, a2);
}

uint64_t sub_256C82B54(void *a1)
{
  return Session.Metadata.encode(to:)(a1);
}

uint64_t Session.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_256C847F8(v1 + OBJC_IVAR____TtC20ModelManagerServices7Session_metadata, a1);
}

#error "256C82BA8: call analysis failed (funcsize=13)"

#error "256C82BE0: call analysis failed (funcsize=13)"

void sub_256C82BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_57();
  uint64_t v44 = v23;
  uint64_t v45 = v24;
  uint64_t v42 = v25;
  uint64_t v43 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v35 = *(void *)(a21 + 24);
  uint64_t v36 = *(void *)(a21 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a21, v35);
  OUTLINED_FUNCTION_5();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_19();
  uint64_t v40 = v39 - v38;
  (*(void (**)(uint64_t))(v41 + 16))(v39 - v38);
  a22(v34, v32, v30, v28, v42, v43, v44, v45, v40, v22, v35, v36);
  __swift_destroy_boxed_opaque_existential_1Tm(a21);
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256C82CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return MEMORY[0x270FA2498](sub_256C82D0C, 0, 0);
}

uint64_t sub_256C82D0C()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_33_9(*(void **)(v0 + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C82DF4;
  uint64_t v2 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 32));
  return v3(v2);
}

uint64_t sub_256C82DF4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v3 = v2;
  *(void *)(v4 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_256C82EF4, 0, 0);
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v5();
  }
}

uint64_t sub_256C82EF4()
{
  if (qword_269FC2738 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = sub_256CEDC88();
  __swift_project_value_buffer(v2, (uint64_t)qword_269FC4850);
  MEMORY[0x25A2AE9C0](v1);
  MEMORY[0x25A2AE9C0](v1);
  uint64_t v3 = sub_256CEDC68();
  os_log_type_t v4 = sub_256CEE2B8();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void **)(v0 + 48);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    MEMORY[0x25A2AE9C0](v6);
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v9;
    sub_256CEE308();
    *uint64_t v8 = v9;

    _os_log_impl(&dword_256BD4000, v3, v4, "establishment of session failed with %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5A00);
    swift_arrayDestroy();
    MEMORY[0x25A2AEBD0](v8, -1, -1);
    MEMORY[0x25A2AEBD0](v7, -1, -1);
  }
  else
  {
  }
  OUTLINED_FUNCTION_16();
  return v10();
}

void Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:sessionSetID:)()
{
  OUTLINED_FUNCTION_57();
  uint64_t v1 = v0;
  uint64_t v25 = v2;
  uint64_t v26 = v3;
  uint64_t v24 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  uint64_t v14 = OUTLINED_FUNCTION_21(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_19();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_256CEDB08();
  OUTLINED_FUNCTION_26();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v1, v18);
  __swift_storeEnumTagSinglePayload(v17, 0, 1, v18);
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_26B2C85F0;
  uint64_t v21 = swift_allocObject();
  swift_retain();
  sub_256C84BF8(v12, v10, v8, v6, v24, v25, v26, v17, v20, v21);
  uint64_t v22 = OUTLINED_FUNCTION_28();
  v23(v22);
  OUTLINED_FUNCTION_71();
}

void Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:)()
{
  OUTLINED_FUNCTION_57();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  uint64_t v16 = OUTLINED_FUNCTION_21(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_28_2();
  uint64_t v17 = sub_256CEDB08();
  OUTLINED_FUNCTION_72_2(v0, v18, v19, v17);
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_26B2C85F0;
  uint64_t v21 = swift_allocObject();
  swift_retain();
  sub_256C84BF8(v14, v12, v10, v8, v6, v4, v2, v0, v20, v21);
  OUTLINED_FUNCTION_71();
}

void Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:loggingIdentifier:)()
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_34_6();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  uint64_t v2 = OUTLINED_FUNCTION_21(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = OUTLINED_FUNCTION_25_7();
  OUTLINED_FUNCTION_72_2(v0, v4, v5, v3);
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  swift_allocObject();
  uint64_t v6 = swift_retain();
  OUTLINED_FUNCTION_14_7(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_71();
}

void Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:containsSensitiveData:loggingIdentifier:)()
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_34_6();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  uint64_t v2 = OUTLINED_FUNCTION_21(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = OUTLINED_FUNCTION_25_7();
  OUTLINED_FUNCTION_72_2(v0, v4, v5, v3);
  if (qword_26B2C85F8 != -1) {
    swift_once();
  }
  swift_allocObject();
  uint64_t v6 = swift_retain();
  OUTLINED_FUNCTION_14_7(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_71();
}

uint64_t sub_256C83534()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v2 = OUTLINED_FUNCTION_21(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_19();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  uint64_t v7 = OUTLINED_FUNCTION_6(v6);
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = v0 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  (*(void (**)(char *, uint64_t))(v17 + 16))(v15, v16);
  uint64_t v18 = sub_256CEE178();
  OUTLINED_FUNCTION_72_2(v5, v19, v20, v18);
  sub_256BF973C(v0 + 16, (uint64_t)v25);
  sub_256C86944((uint64_t)v15, (uint64_t)v13, qword_26B2C5B70);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  sub_256BE3924(v25, v22 + 32);
  sub_256C84698((uint64_t)v13, v22 + v21);
  sub_256BDB760();
  swift_release();
  return sub_256BE33C8((uint64_t)v15, qword_26B2C5B70);
}

uint64_t sub_256C83704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_256C83724, 0, 0);
}

uint64_t sub_256C83724()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_33_9(*(void **)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C8380C;
  uint64_t v2 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 24));
  return v3(v2);
}

uint64_t sub_256C8380C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t Session.deinit()
{
  sub_256C83534();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  sub_256C8485C(v0 + OBJC_IVAR____TtC20ModelManagerServices7Session_metadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v1();
  return v0;
}

uint64_t Session.__deallocating_deinit()
{
  Session.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t Session.supportedAssetBundleIdentifiers.getter()
{
  return sub_256CEDEC8();
}

uint64_t Session.useCaseID.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t Session.onBehalfOfPID.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC20ModelManagerServices7Session_onBehalfOfPID);
}

uint64_t Session.parentOfOnBehalfOfPID.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC20ModelManagerServices7Session_parentOfOnBehalfOfPID);
}

uint64_t Session.loggingIdentifier.getter()
{
  return OUTLINED_FUNCTION_28();
}

uint64_t Session.uuid.getter()
{
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

uint64_t Session.sessionSetID.getter()
{
  type metadata accessor for Session.Metadata(0);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  uint64_t v0 = OUTLINED_FUNCTION_28();
  return v1(v0);
}

void Session.fetchModelInfo()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
}

uint64_t Session.fetchModelInstance()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C83B74);
}

uint64_t sub_256C83B74()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v9 = (void *)(OUTLINED_FUNCTION_33_9(v1 + 2) + 40);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*v9 + *(int *)*v9);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_256C8380C;
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  return v8(v5, v6, v2, v3);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Session.requestPrewarm()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v2 = OUTLINED_FUNCTION_21(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_24_6();
  uint64_t v3 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v3);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v0;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v3);
  swift_retain();
  if (EnumTagSinglePayload == 1)
  {
    sub_256BE33C8(v0, &qword_26B2C8A00);
  }
  else
  {
    sub_256CEE168();
    OUTLINED_FUNCTION_50();
    v6();
    if (v4[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_256CEE0D8();
      swift_unknownObjectRelease();
    }
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_256C83E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_256C83E64, 0, 0);
}

uint64_t sub_256C83E64()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_21_7();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_35_7(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF4;
  uint64_t v4 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 16));
  return v5(v4);
}

Swift::Void __swiftcall Session.cancel()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  uint64_t v2 = OUTLINED_FUNCTION_21(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_24_6();
  uint64_t v3 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v3);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v0;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v3);
  swift_retain();
  if (EnumTagSinglePayload == 1)
  {
    sub_256BE33C8(v0, &qword_26B2C8A00);
  }
  else
  {
    sub_256CEE168();
    OUTLINED_FUNCTION_50();
    v6();
    if (v4[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_256CEE0D8();
      swift_unknownObjectRelease();
    }
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_256C840FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_256C8411C, 0, 0);
}

uint64_t sub_256C8411C()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_22_6();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_35_7(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BE3BF4;
  uint64_t v4 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 16));
  return v5(v4);
}

void static Session.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_57();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  uint64_t v27 = OUTLINED_FUNCTION_21(v26);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&a9 - v31;
  uint64_t v33 = v25 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  uint64_t v34 = sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v36(v32, v33, v34);
  v36(v30, v23 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid, v34);
  _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
  sub_256BE33C8((uint64_t)v30, qword_26B2C5B70);
  sub_256BE33C8((uint64_t)v32, qword_26B2C5B70);
  OUTLINED_FUNCTION_71();
}

uint64_t Session.hash(into:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  uint64_t v3 = OUTLINED_FUNCTION_21(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_44_0();
  uint64_t v4 = OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v0, v4);
  sub_256C847B0(&qword_26B2C8840, MEMORY[0x263F07508]);
  sub_256CEDF18();
  return sub_256BE33C8(v1, qword_26B2C5B70);
}

uint64_t Session.requestPrewarm_async()()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C83E64);
}

uint64_t Session.cancel_async()()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C84448);
}

uint64_t sub_256C84448()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_22_6();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_35_7(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_256BDCDB4;
  uint64_t v4 = OUTLINED_FUNCTION_3_7(*(void *)(v0 + 16));
  return v5(v4);
}

uint64_t Session.hashValue.getter()
{
  return sub_256CEE7F8();
}

#error "256C84570: call analysis failed (funcsize=9)"

uint64_t sub_256C84580()
{
  return Session.hashValue.getter();
}

uint64_t sub_256C845A4()
{
  return Session.hash(into:)();
}

uint64_t sub_256C845C8()
{
  return sub_256CEE7F8();
}

uint64_t sub_256C84608()
{
  return Session.uuid.getter();
}

unint64_t sub_256C8462C()
{
  unint64_t result = qword_269FC4870;
  if (!qword_269FC4870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC4870);
  }
  return result;
}

uint64_t type metadata accessor for Session.Metadata(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C88F0);
}

uint64_t sub_256C84698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_256C84700()
{
  unint64_t result = qword_26B2C7988;
  if (!qword_26B2C7988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7988);
  }
  return result;
}

uint64_t sub_256C8474C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2C79A0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C847B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256C847F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Session.Metadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256C8485C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Session.Metadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ModelManagerServices::DaemonSessionState_optional __swiftcall DaemonSessionState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_256CEE438();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t DaemonSessionState.rawValue.getter()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 3:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      unint64_t result = 1701736302;
      break;
  }
  return result;
}

uint64_t sub_256C849A4(unsigned __int8 *a1, char *a2)
{
  return sub_256BF0BE8(*a1, *a2);
}

ModelManagerServices::DaemonSessionState_optional sub_256C849B0(Swift::String *a1)
{
  return DaemonSessionState.init(rawValue:)(*a1);
}

unint64_t sub_256C849BC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DaemonSessionState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_256C849E4()
{
  return sub_256CD25D8(*v0);
}

uint64_t sub_256C849EC()
{
  return sub_256BF0FB4();
}

uint64_t sub_256C849F4(uint64_t a1)
{
  return sub_256CD27D0(a1, *v1);
}

uint64_t sub_256C849FC()
{
  return sub_256CEE048();
}

uint64_t sub_256C84A5C()
{
  return sub_256CEE028();
}

uint64_t sub_256C84AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v16 = *(void *)(a11 - 8);
  MEMORY[0x270FA5388](a10);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a9, a11);
  uint64_t v20 = sub_256C85018(a1, a2, a3, a4, v22, v23, v24, v25, (uint64_t)v18, v19, a11, a12);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a9, a11);
  return v20;
}

uint64_t sub_256C84BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v48 = a6;
  uint64_t v49 = a8;
  uint64_t v47 = a5;
  uint64_t v45 = a9;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_256CEDB08();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v43 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v41 - v24;
  uint64_t v26 = type metadata accessor for ModelServiceClient();
  *(void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_supportedAssetBundleIdentifiers) = a1;
  uint64_t v27 = (void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_useCaseID);
  uint64_t v42 = a2;
  *uint64_t v27 = a2;
  v27[1] = a3;
  uint64_t v44 = a4;
  *(void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_onBehalfOfPID) = a4;
  v51[3] = v26;
  v51[4] = &protocol witness table for ModelServiceClient;
  *(void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_parentOfOnBehalfOfPID) = v47;
  v51[0] = v45;
  uint64_t v28 = (void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_loggingIdentifier);
  *uint64_t v28 = v48;
  v28[1] = a7;
  uint64_t v41 = a1;
  sub_256CEDEC8();
  sub_256CEDEC8();
  uint64_t v45 = a7;
  sub_256CEDEC8();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  uint64_t v29 = a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v30(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid, v25, v20);
  sub_256C86944(v49, (uint64_t)v19, &qword_26B2C5000);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20) == 1)
  {
    sub_256BE33C8((uint64_t)v19, &qword_26B2C5000);
    uint64_t v31 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v43, v29, v20);
  }
  else
  {
    uint64_t v31 = v43;
    v30((uint64_t)v43, v19, v20);
  }
  uint64_t v32 = (char *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_metadata);
  uint64_t v33 = type metadata accessor for Session.Metadata(0);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v34(&v32[*(int *)(v33 + 36)], v29, v20);
  v34(&v32[*(int *)(v33 + 40)], (uint64_t)v31, v20);
  uint64_t v35 = v42;
  *(void *)uint64_t v32 = v41;
  *((void *)v32 + 1) = v35;
  uint64_t v36 = v44;
  *((void *)v32 + 2) = a3;
  *((void *)v32 + 3) = v36;
  uint64_t v37 = v48;
  *((void *)v32 + 4) = v47;
  *((void *)v32 + 5) = v37;
  *((void *)v32 + 6) = v45;
  sub_256BF973C((uint64_t)v51, a10 + 16);
  uint64_t v38 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload(v46, 1, 1, v38);
  sub_256BF973C((uint64_t)v51, (uint64_t)v50);
  uint64_t v39 = (void *)swift_allocObject();
  uint64_t v39[2] = 0;
  v39[3] = 0;
  sub_256BE3924(v50, (uint64_t)(v39 + 4));
  v39[9] = a10;
  swift_retain();
  sub_256BDB760();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
  sub_256BE33C8(v49, &qword_26B2C5000);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v31, v20);
  return a10;
}

uint64_t sub_256C85018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v51 = a6;
  uint64_t v52 = a8;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v47 = a9;
  uint64_t v45 = a12;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v48 = (uint64_t)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C5000);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_256CEDB08();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v46 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v42 - v25;
  v54[3] = a11;
  v54[4] = v45;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v54);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(boxed_opaque_existential_1, v47, a11);
  *(void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_supportedAssetBundleIdentifiers) = a1;
  uint64_t v28 = (void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_useCaseID);
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  *uint64_t v28 = a2;
  v28[1] = a3;
  *(void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_onBehalfOfPID) = v49;
  *(void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_parentOfOnBehalfOfPID) = v50;
  uint64_t v29 = (void *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_loggingIdentifier);
  *uint64_t v29 = v51;
  v29[1] = a7;
  sub_256CEDEC8();
  uint64_t v45 = a3;
  sub_256CEDEC8();
  uint64_t v47 = a7;
  sub_256CEDEC8();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  uint64_t v30 = a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
  v31(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid, v26, v21);
  sub_256C86944(v52, (uint64_t)v20, &qword_26B2C5000);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21) == 1)
  {
    sub_256BE33C8((uint64_t)v20, &qword_26B2C5000);
    uint64_t v32 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v46, v30, v21);
  }
  else
  {
    uint64_t v32 = v46;
    v31((uint64_t)v46, v20, v21);
  }
  uint64_t v33 = (char *)(a10 + OBJC_IVAR____TtC20ModelManagerServices7Session_metadata);
  uint64_t v34 = type metadata accessor for Session.Metadata(0);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v35(&v33[*(int *)(v34 + 36)], v30, v21);
  v35(&v33[*(int *)(v34 + 40)], (uint64_t)v32, v21);
  uint64_t v36 = v44;
  *(void *)uint64_t v33 = v43;
  *((void *)v33 + 1) = v36;
  uint64_t v37 = v49;
  *((void *)v33 + 2) = v45;
  *((void *)v33 + 3) = v37;
  uint64_t v38 = v51;
  *((void *)v33 + 4) = v50;
  *((void *)v33 + 5) = v38;
  *((void *)v33 + 6) = v47;
  sub_256BF973C((uint64_t)v54, a10 + 16);
  uint64_t v39 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload(v48, 1, 1, v39);
  sub_256BF973C((uint64_t)v54, (uint64_t)v53);
  uint64_t v40 = (void *)swift_allocObject();
  v40[2] = 0;
  v40[3] = 0;
  sub_256BE3924(v53, (uint64_t)(v40 + 4));
  v40[9] = a10;
  swift_retain();
  sub_256BDB760();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v54);
  sub_256BE33C8(v52, &qword_26B2C5000);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v32, v21);
  return a10;
}

uint64_t sub_256C85468()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C83E44(v3, v4, v5, v6);
}

uint64_t sub_256C85508()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_45_0();
  return sub_256C840FC(v3, v4, v5, v6);
}

unint64_t sub_256C855A8()
{
  unint64_t result = qword_269FC48B8;
  if (!qword_269FC48B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC48B8);
  }
  return result;
}

uint64_t sub_256C855F4()
{
  return sub_256C847B0(&qword_269FC48C0, (void (*)(uint64_t))type metadata accessor for Session);
}

uint64_t type metadata accessor for Session(uint64_t a1)
{
  return sub_256BE21F4(a1, (uint64_t *)&unk_26B2C5A08);
}

unint64_t sub_256C85660()
{
  unint64_t result = qword_269FC48C8;
  if (!qword_269FC48C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC48C8);
  }
  return result;
}

uint64_t destroy for ModelInstance()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModelInstance(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  return a1;
}

uint64_t assignWithCopy for ModelInstance(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

void *__swift_memcpy65_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t assignWithTake for ModelInstance(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelInstance(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelInstance(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelInstance()
{
  return &type metadata for ModelInstance;
}

uint64_t sub_256C8593C()
{
  return type metadata accessor for Session(0);
}

uint64_t sub_256C85944()
{
  uint64_t result = type metadata accessor for Session.Metadata(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_256CEDB08();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for Session(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Session);
}

uint64_t dispatch thunk of Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:sessionSetID:client:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t initializeBufferWithCopyOfBuffer for Session.Metadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v9 = a2[6];
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v15 = a1 + v10;
    uint64_t v11 = (uint64_t)a2 + v10;
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v12 = sub_256CEDB08();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_256CEDEC8();
    sub_256CEDEC8();
    sub_256CEDEC8();
    v13(v15, v11, v12);
    v13(v7 + *(int *)(a3 + 40), (uint64_t)a2 + *(int *)(a3 + 40), v12);
  }
  return v7;
}

uint64_t destroy for Session.Metadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_256CEDB08();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  return v8(v6, v5);
}

uint64_t initializeWithCopy for Session.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v8;
  uint64_t v9 = a2 + v8;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v10 = sub_256CEDB08();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_256CEDEC8();
  sub_256CEDEC8();
  sub_256CEDEC8();
  v11(v13, v9, v10);
  v11(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v10);
  return a1;
}

char *assignWithCopy for Session.Metadata(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  *((void *)a1 + 3) = *((void *)a2 + 3);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  *((void *)a1 + 6) = *((void *)a2 + 6);
  sub_256CEDEC8();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_256CEDB08();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 40)], &a2[*(int *)(a3 + 40)], v9);
  return a1;
}

uint64_t initializeWithTake for Session.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256CEDB08();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v9);
  return a1;
}

uint64_t assignWithTake for Session.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_256CEDB08();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Session.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256C86048);
}

uint64_t sub_256C86048(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 36);
    }
    else
    {
      uint64_t v10 = sub_256CEDB08();
      uint64_t v11 = *(int *)(a3 + 40);
    }
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Session.Metadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256C8610C);
}

void *sub_256C8610C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
    OUTLINED_FUNCTION_26();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 36);
    }
    else
    {
      uint64_t v10 = sub_256CEDB08();
      uint64_t v11 = *(int *)(a4 + 40);
    }
    return (void *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_256C861B8()
{
  uint64_t result = sub_256CEDB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DaemonSessionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C8633CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DaemonSessionState()
{
  return &type metadata for DaemonSessionState;
}

unsigned char *storeEnumTagSinglePayload for Session.Metadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C86440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Session.Metadata.CodingKeys()
{
  return &type metadata for Session.Metadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ModelInstance.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256C86544);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelInstance.CodingKeys()
{
  return &type metadata for ModelInstance.CodingKeys;
}

unint64_t sub_256C86580()
{
  unint64_t result = qword_269FC48D0;
  if (!qword_269FC48D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC48D0);
  }
  return result;
}

unint64_t sub_256C865D0()
{
  unint64_t result = qword_269FC48D8;
  if (!qword_269FC48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC48D8);
  }
  return result;
}

unint64_t sub_256C86620()
{
  unint64_t result = qword_26B2C7998;
  if (!qword_26B2C7998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7998);
  }
  return result;
}

unint64_t sub_256C86670()
{
  unint64_t result = qword_26B2C7990;
  if (!qword_26B2C7990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C7990);
  }
  return result;
}

unint64_t sub_256C866C0()
{
  unint64_t result = qword_269FC48E0;
  if (!qword_269FC48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC48E0);
  }
  return result;
}

unint64_t sub_256C86710()
{
  unint64_t result = qword_269FC48E8;
  if (!qword_269FC48E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269FC48E8);
  }
  return result;
}

unint64_t sub_256C8675C()
{
  unint64_t result = qword_269FC48F0;
  if (!qword_269FC48F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269FC48F0);
  }
  return result;
}

uint64_t sub_256C867A8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  OUTLINED_FUNCTION_6(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = ((v6 + 72) & ~v6) + *(void *)(v5 + 64);
  uint64_t v8 = v6 | 7;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  sub_256CEDB08();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_50();
  v9();
  return MEMORY[0x270FA0238](v0, v7, v8);
}

uint64_t sub_256C86864()
{
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B2C5B70);
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BDD6B8;
  uint64_t v3 = OUTLINED_FUNCTION_4_0();
  return sub_256C83704(v3, v4, v5, v6, v7);
}

uint64_t sub_256C86944(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = OUTLINED_FUNCTION_28();
  v5(v4);
  return a2;
}

uint64_t sub_256C869A0()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_37_6();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_112(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_4_0();
  return sub_256C82CEC(v3, v4, v5, v6, v7);
}

uint64_t objectdestroy_41Tm()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v1[5]);
  return v2 + 24;
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  return sub_256CEE498();
}

uint64_t static RunningBoardSelfAssertionType.== infix(_:_:)()
{
  return 1;
}

uint64_t RunningBoardSelfAssertionType.hash(into:)()
{
  return sub_256CEE7B8();
}

uint64_t RunningBoardSelfAssertionType.hashValue.getter()
{
  return sub_256CEE7F8();
}

uint64_t sub_256C86B4C()
{
  return RunningBoardSelfAssertionType.hashValue.getter();
}

uint64_t sub_256C86B64()
{
  return RunningBoardSelfAssertionType.hash(into:)();
}

uint64_t sub_256C86B7C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_256C86B9C, 0, 0);
}

uint64_t sub_256C86B9C()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(os_unfair_lock_s **)(v0[2] + 56);
  uint64_t v2 = (char *)&v1[4];
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_256C86DFC(v2, v12);
  os_unfair_lock_unlock(v3);
  if (v12[0])
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)v0[2];
    uint64_t v7 = v6[5];
    uint64_t v8 = v6[6];
    __swift_project_boxed_opaque_existential_1(v6 + 2, v7);
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 16) + **(int **)(v8 + 16));
    uint64_t v9 = (void *)swift_task_alloc();
    v0[3] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_256C86D34;
    uint64_t v10 = v0[2];
    return v11(v10, v7, v8);
  }
}

uint64_t sub_256C86D34()
{
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

char *sub_256C86DFC@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  char v2 = *result;
  *unint64_t result = 1;
  *a2 = v2;
  return result;
}

uint64_t RunningBoardSelfAssertionToken.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return v0;
}

uint64_t RunningBoardSelfAssertionToken.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return MEMORY[0x270FA0228](v0, 64, 7);
}

unint64_t sub_256C86E7C()
{
  unint64_t result = qword_26B2C86E8;
  if (!qword_26B2C86E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C86E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RunningBoardSelfAssertionType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256C86F64);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningBoardSelfAssertionType()
{
  return &type metadata for RunningBoardSelfAssertionType;
}

uint64_t type metadata accessor for RunningBoardSelfAssertionToken()
{
  return self;
}

uint64_t method lookup function for RunningBoardSelfAssertionToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RunningBoardSelfAssertionToken);
}

uint64_t dispatch thunk of RunningBoardSelfAsserting.acquire(type:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C870C0;
  uint64_t v2 = OUTLINED_FUNCTION_17();
  return v3(v2);
}

uint64_t sub_256C870C0(uint64_t a1)
{
  OUTLINED_FUNCTION_0();
  uint64_t v3 = *v1;
  OUTLINED_FUNCTION_1();
  *unsigned int v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(a1);
}

uint64_t dispatch thunk of RunningBoardSelfAsserting.relinquish(_:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C87278;
  uint64_t v2 = OUTLINED_FUNCTION_17();
  return v3(v2);
}

uint64_t sub_256C87278()
{
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

id sub_256C873A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = OBJC_IVAR___MMAssertion_assertion;
  *(void *)&v4[OBJC_IVAR___MMAssertion_assertion] = 0;
  uint64_t v6 = &v4[OBJC_IVAR___MMAssertion_policy];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  uint64_t v7 = &v4[OBJC_IVAR___MMAssertion_desc];
  *(void *)uint64_t v7 = a3;
  *((void *)v7 + 1) = a4;
  *(void *)&v4[v5] = 0;
  swift_release();
  v9.receiver = v4;
  v9.super_class = (Class)MMAssertion;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_256C8746C()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C87484);
}

uint64_t sub_256C87484()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = *(char **)(v0 + 16);
  type metadata accessor for Assertion(0);
  uint64_t v2 = *(void *)&v1[OBJC_IVAR___MMAssertion_policy];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR___MMAssertion_policy + 8];
  sub_256CEDEC8();
  id v4 = objc_msgSend(v1, sel_description);
  uint64_t v5 = sub_256CEDF48();
  uint64_t v7 = v6;

  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_256C87584;
  return Assertion.__allocating_init(policy:description:)(v2, v3, v5, v7);
}

uint64_t sub_256C87584()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_1();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    return MEMORY[0x270FA2498](sub_256C876A0, 0, 0);
  }
}

uint64_t sub_256C876A0()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0[2] + OBJC_IVAR___MMAssertion_assertion) = v0[4];
  swift_release();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_256C87734(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_256C877DC;
  return sub_256C8746C();
}

uint64_t sub_256C877DC()
{
  OUTLINED_FUNCTION_15();
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_1();
  uint64_t *v5 = v4;
  uint64_t v6 = *(void **)(v3 + 16);
  uint64_t v7 = *v1;
  uint64_t *v5 = *v1;
  swift_task_dealloc();

  uint64_t v8 = *(void *)(v3 + 24);
  if (v2)
  {
    objc_super v9 = (void *)sub_256CED9C8();

    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_256C87954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256CEE178();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  objc_super v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = &unk_269FC4970;
  v9[5] = v8;
  sub_256C882C8((uint64_t)v6, (uint64_t)&unk_269FC4980, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_256C87A58()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_7((uint64_t)sub_256C87A70);
}

uint64_t sub_256C87A70()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR___MMAssertion_assertion);
  v0[3] = v1;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[4] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_256C87B4C;
    return Assertion.invalidate()();
  }
  else
  {
    OUTLINED_FUNCTION_16();
    return v4();
  }
}

uint64_t sub_256C87B4C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C87C48(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = _Block_copy(aBlock);
  OUTLINED_FUNCTION_7_8();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a1;
  id v9 = a1;
  return sub_256C87954(a5, v8);
}

uint64_t sub_256C87CB0(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_256C87D58;
  return sub_256C87A58();
}

uint64_t sub_256C87D58()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void (***)(void))(v1 + 24);
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_1();
  void *v5 = v4;
  swift_task_dealloc();

  v2[2](v2);
  _Block_release(v2);
  OUTLINED_FUNCTION_16();
  return v6();
}

void __swiftcall MMAssertion.init()(MMAssertion *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void MMAssertion.init()()
{
}

unint64_t type metadata accessor for MMAssertion()
{
  unint64_t result = qword_269FC4950;
  if (!qword_269FC4950)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269FC4950);
  }
  return result;
}

uint64_t sub_256C87F18()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *id v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_5_7();
  return v4(v3);
}

uint64_t sub_256C87FAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_256BE3BF0;
  return v6();
}

uint64_t sub_256C8807C()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (int *)v0[4];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_14(v4);
  void *v5 = v6;
  v5[1] = sub_256BE3BF0;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269FC4968 + dword_269FC4968);
  return v7(v1, v2, v3);
}

uint64_t sub_256C88134(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_256BE3BF0;
  return v7();
}

uint64_t sub_256C88204()
{
  OUTLINED_FUNCTION_15();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = (int *)v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_14(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_256BDD6B8;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_269FC4978 + dword_269FC4978);
  return v9(v2, v3, v4, v5);
}

uint64_t sub_256C882C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256CEE178();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_256C88430(a1);
  }
  else
  {
    sub_256CEE168();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_256CEE0D8();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_256C88430(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256C88490(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_256BDD80C;
  return v6(a1);
}

uint64_t sub_256C8856C()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_7_8();
  return MEMORY[0x270FA0238](v0, v1, v2);
}

uint64_t sub_256C8859C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_14(v4);
  void *v5 = v6;
  v5[1] = sub_256BDD6B8;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269FC4988 + dword_269FC4988);
  return v7(v2, v3);
}

uint64_t sub_256C88650()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_14(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_256BE3BF0;
  uint64_t v3 = OUTLINED_FUNCTION_5_7();
  return v4(v3);
}

uint64_t OSEligibilityDomain.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t OSEligibilityDomain.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_256C886F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = OSEligibilityDomain.init(rawValue:)(*a1, (void *)a2);
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_256C88720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OSEligibilityDomain.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_256C88748()
{
  return sub_256CD2640();
}

uint64_t sub_256C88750()
{
  return sub_256BF124C();
}

uint64_t sub_256C88758()
{
  return sub_256CD2834();
}

BOOL sub_256C88760(uint64_t *a1, uint64_t *a2)
{
  return sub_256BF0FA8(*a1, *a2);
}

unint64_t sub_256C88774()
{
  unint64_t result = qword_26B2C86C8;
  if (!qword_26B2C86C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2C86C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for OSEligibilityDomain()
{
  return &type metadata for OSEligibilityDomain;
}

uint64_t dispatch thunk of OSEligibilityChecking.isEligible(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_256C888D4;
  return v9(a1, a2, a3);
}

uint64_t sub_256C888D4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of OSEligibilityChecking.prewarm(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_256C889E4()
{
  return 0;
}

uint64_t sub_256C889F0(void *a1)
{
  if (!a1) {
    return 0x6C616E696D6F4ELL;
  }
  unint64_t v2 = 0xD000000000000011;
  if (a1 == (void *)1) {
    return 0xD000000000000017;
  }
  if (a1 != (void *)2)
  {
    MEMORY[0x25A2AE9C0](a1);
    sub_256CEE368();
    sub_256CEDFB8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8CD8);
    sub_256CEE3B8();
    sub_256C8DC38(a1);
    return 0;
  }
  return v2;
}

uint64_t sub_256C88AF8()
{
  return sub_256C889F0(*v0);
}

uint64_t sub_256C88B00(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  unint64_t v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return sub_256C88C50((uint64_t)v2);
}

uint64_t sub_256C88BC0@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_36_5();
  uint64_t v4 = v1 + *(void *)(v3 + 120);
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_33_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t sub_256C88C50(uint64_t a1)
{
  OUTLINED_FUNCTION_36_5();
  uint64_t v4 = v1 + *(void *)(v3 + 120);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_36_5();
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*sub_256C88CE8())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_256C88D38()
{
  OUTLINED_FUNCTION_7_0();
  unint64_t v2 = *(void *)(v0 + *(void *)(v1 + 128));
  sub_256C8FFD0(v2);
  return v2;
}

void sub_256C88D74()
{
  OUTLINED_FUNCTION_7_0();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void **)(v0 + v2);
  *(void *)(v0 + v2) = v4;
  OUTLINED_FUNCTION_17_6(v3);
}

void sub_256C88D98(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 168);
  *(void *)(v1 + 168) = a1;
  OUTLINED_FUNCTION_17_6(v2);
}

uint64_t sub_256C88DA4()
{
  return swift_retain();
}

uint64_t sub_256C88DF0()
{
  OUTLINED_FUNCTION_7_0();
  return *(void *)(v0 + *(void *)(v1 + 152));
}

uint64_t sub_256C88E10()
{
  return swift_retain();
}

uint64_t sub_256C88E30()
{
  OUTLINED_FUNCTION_7_0();
  *(void *)(v0 + *(void *)(v1 + 160)) = v2;
  return swift_release();
}

uint64_t sub_256C88E58@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_256C890F0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = &unk_269FC4C40;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

uint64_t sub_256C88EC8(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_256BE3BF0;
  return v5();
}

uint64_t sub_256C88F94(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = &unk_269FC4C30;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_256BEFD8C(v1);
  return sub_256C8914C((uint64_t)v4, v3);
}

uint64_t sub_256C89024(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_256BE3BF0;
  return v4();
}

uint64_t sub_256C890F0()
{
  OUTLINED_FUNCTION_7_0();
  uint64_t v2 = (uint64_t *)(v0 + *(void *)(v1 + 168));
  OUTLINED_FUNCTION_22_1();
  uint64_t v3 = *v2;
  sub_256BEFD8C(*v2);
  return v3;
}

uint64_t sub_256C8914C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_7_0();
  uint64_t v6 = (uint64_t *)(v2 + *(void *)(v5 + 168));
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t *v6 = a1;
  v6[1] = a2;
  return sub_256BEE8D8(v7);
}

uint64_t (*sub_256C891B4())()
{
  return j__swift_endAccess;
}

uint64_t GreedyBufferingAsyncSequence.invalidator.getter()
{
  OUTLINED_FUNCTION_7_0();
  uint64_t v2 = *(void *)(v0 + *(void *)(v1 + 176));
  sub_256BEFD8C(v2);
  return v2;
}

uint64_t GreedyBufferingAsyncSequence.__allocating_init(backing:fillBuffer:onTermination:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  GreedyBufferingAsyncSequence.init(backing:fillBuffer:onTermination:)(a1, a2, a3, a4, a5);
  return v10;
}

char *GreedyBufferingAsyncSequence.init(backing:fillBuffer:onTermination:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *(void *)v6;
  swift_defaultActor_initialize();
  OUTLINED_FUNCTION_15_7();
  *(void *)&v6[*(void *)(v12 + 128)] = 0;
  OUTLINED_FUNCTION_15_7();
  uint64_t v14 = *(void *)(v13 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8F30);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 20) = 0;
  *(void *)&v6[v14] = v15;
  *(unsigned char *)(v15 + 16) = 0;
  OUTLINED_FUNCTION_15_7();
  uint64_t v17 = *(void *)(v16 + 144);
  sub_256CEE0A8();
  sub_256CEE0B8();
  swift_getWitnessTable();
  *(void *)&v6[v17] = sub_256CEDBA8();
  OUTLINED_FUNCTION_15_7();
  *(void *)&v6[*(void *)(v18 + 152)] = 0;
  OUTLINED_FUNCTION_15_7();
  *(void *)&v6[*(void *)(v19 + 160)] = 0;
  OUTLINED_FUNCTION_15_7();
  uint64_t v21 = (uint64_t *)&v6[*(void *)(v20 + 168)];
  uint64_t *v21 = 0;
  v21[1] = 0;
  OUTLINED_FUNCTION_15_7();
  uint64_t v23 = *(void *)(v11 + 88);
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(&v6[*(void *)(v22 + 120)], a1, v23);
  *((void *)v6 + 14) = a2;
  *((void *)v6 + 15) = a3;
  swift_beginAccess();
  uint64_t v25 = *v21;
  uint64_t *v21 = a4;
  v21[1] = a5;
  swift_retain();
  uint64_t v26 = a4;
  sub_256BEFD8C(a4);
  sub_256BEE8D8(v25);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)(v11 + 96) + 8))(v23);
  uint64_t v29 = v28;
  sub_256BEE8D8(v26);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  uint64_t v30 = (uint64_t *)&v6[*(void *)(*(void *)v6 + 176)];
  *uint64_t v30 = v27;
  v30[1] = v29;
  return v6;
}

uint64_t GreedyBufferingAsyncSequence.deinit()
{
  uint64_t v1 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 176));
  if (*v1) {
    ((void (*)(void))*v1)();
  }
  swift_release();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_33_0();
  (*(void (**)(void))(v2 + 8))();
  sub_256C8DC38(*(id *)(v0 + *(void *)(*(void *)v0 + 128)));
  OUTLINED_FUNCTION_15_7();
  swift_release();
  OUTLINED_FUNCTION_15_7();
  swift_release();
  OUTLINED_FUNCTION_15_7();
  swift_release();
  OUTLINED_FUNCTION_15_7();
  sub_256BEE8D8(*(void *)(v0 + *(void *)(v3 + 168)));
  sub_256BEE8D8(*v1);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t GreedyBufferingAsyncSequence.__deallocating_deinit()
{
  GreedyBufferingAsyncSequence.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_256C896EC(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  OUTLINED_FUNCTION_4_6();
  v2[7] = v3;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C89718, v4);
}

void sub_256C89718()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (void *)v0[5];
  if (v1)
  {
    OUTLINED_FUNCTION_13();
    MEMORY[0x25A2AE9C0](v1);
    sub_256CEDB98();
    sub_256CEDB88();
    swift_endAccess();
    MEMORY[0x25A2AE9C0](v1);
    sub_256C88D74();
  }
  else
  {
    sub_256C88D74();
  }
  uint64_t v2 = v0[6];
  OUTLINED_FUNCTION_7_0();
  uint64_t v4 = *(void (**)(void))(v2 + *(void *)(v3 + 176));
  if (v4) {
    v4();
  }
  uint64_t v5 = sub_256C890F0();
  v0[8] = v5;
  if (v5)
  {
    v0[9] = v6;
    sub_256C8914C(0, 0);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_256C89900;
    OUTLINED_FUNCTION_198();
    __asm { BRAA            X0, X16 }
  }
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_198();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_256C89900()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C899DC()
{
  OUTLINED_FUNCTION_2();
  sub_256BEE8D8(*(void *)(v0 + 64));
  OUTLINED_FUNCTION_16();
  return v1();
}

uint64_t sub_256C89A34()
{
  OUTLINED_FUNCTION_2();
  v1[5] = v2;
  v1[6] = v0;
  OUTLINED_FUNCTION_7_0();
  uint64_t v4 = *(void *)(v3 + 80);
  v1[7] = v4;
  uint64_t v5 = sub_256CEE2E8();
  v1[8] = v5;
  OUTLINED_FUNCTION_6(v5);
  v1[9] = v6;
  v1[10] = swift_task_alloc();
  v1[11] = *(void *)(v4 - 8);
  v1[12] = swift_task_alloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

void sub_256C89B30()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = (void *)sub_256C88D38();
  sub_256C8DC38(v1);
  if ((unint64_t)v1 >= 2)
  {
    if (qword_26B2C8CC0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_256CEDC88();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_43_4(v2, (uint64_t)qword_26B2C8CA8);
    os_log_type_t v4 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_25_0(v4))
    {
      uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v5);
      OUTLINED_FUNCTION_61(&dword_256BD4000, v6, v7, "Appending element to a GreedyBufferingAsyncSequence after it's been terminated");
      OUTLINED_FUNCTION_10_5();
    }

LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_198();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_41_5();
  uint64_t v10 = *(void *)(v9 + 152);
  uint64_t v11 = *(void *)(v8 + v10);
  BOOL v12 = __CFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[8];
    uint64_t v17 = v0[5];
    *(void *)(v8 + v10) = v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v17, v16);
    OUTLINED_FUNCTION_31_4();
    if (!v18)
    {
      uint64_t v23 = v0[11];
      uint64_t v22 = v0[12];
      uint64_t v24 = v0[7];
      (*(void (**)(uint64_t, void, uint64_t))(v23 + 32))(v22, v0[10], v24);
      OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_8_6();
      sub_256CEDB98();
      sub_256CEDB68();
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      goto LABEL_13;
    }
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[13] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_256C89D84;
    OUTLINED_FUNCTION_198();
    sub_256C896EC(v20);
  }
}

uint64_t sub_256C89D84()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_256C89EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  OUTLINED_FUNCTION_4_6();
  v4[9] = v5;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C89ED4, v3);
}

void sub_256C89ED4()
{
  OUTLINED_FUNCTION_15();
  uint64_t v0 = (void *)sub_256C88D38();
  sub_256C8DC38(v0);
  if ((unint64_t)v0 < 2)
  {
    OUTLINED_FUNCTION_41_5();
    uint64_t v9 = *(void *)(v8 + 152);
    uint64_t v10 = *(void *)(v7 + v9);
    BOOL v11 = __CFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
      return;
    }
    *(void *)(v7 + v9) = v12;
    OUTLINED_FUNCTION_41_5();
    OUTLINED_FUNCTION_13();
    sub_256CEDB98();
    sub_256CEDB58();
    swift_endAccess();
  }
  else
  {
    if (qword_26B2C8CC0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_256CEDC88();
    uint64_t v2 = (void *)OUTLINED_FUNCTION_43_4(v1, (uint64_t)qword_26B2C8CA8);
    os_log_type_t v3 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_25_0(v3))
    {
      os_log_type_t v4 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v4);
      OUTLINED_FUNCTION_61(&dword_256BD4000, v5, v6, "Appending elements to a GreedyBufferingAsyncSequence after it's been terminated");
      OUTLINED_FUNCTION_10_5();
    }
  }
  OUTLINED_FUNCTION_16();
  v13();
}

uint64_t sub_256C8A04C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C8A068, v1);
}

void sub_256C8A068()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = (void *)sub_256C88D38();
  sub_256C8DC38(v1);
  if ((unint64_t)v1 < 2)
  {
    OUTLINED_FUNCTION_41_5();
    uint64_t v11 = *(void *)(v10 + 152);
    uint64_t v12 = *(void *)(v9 + v11);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 16);
      *(void *)(v9 + v11) = v14;
      uint64_t v16 = swift_task_alloc();
      uint64_t v17 = (void *)OUTLINED_FUNCTION_40_7(v16);
      *uint64_t v17 = v18;
      v17[1] = sub_256C8380C;
      sub_256C896EC(v15);
    }
  }
  else
  {
    if (qword_26B2C8CC0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_256CEDC88();
    os_log_type_t v3 = (void *)OUTLINED_FUNCTION_43_4(v2, (uint64_t)qword_26B2C8CA8);
    os_log_type_t v4 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_25_0(v4))
    {
      uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v5);
      OUTLINED_FUNCTION_61(&dword_256BD4000, v6, v7, "Failing a GreedyBufferingAsyncSequence after it's been terminated");
      OUTLINED_FUNCTION_10_5();
    }

    OUTLINED_FUNCTION_16();
    v8();
  }
}

uint64_t sub_256C8A1E8()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C8A204, v0);
}

void sub_256C8A204()
{
  OUTLINED_FUNCTION_15();
  uint64_t v10 = v1;
  OUTLINED_FUNCTION_48_7();
  uint64_t v3 = *(void *)(v2 + 152);
  v1[3] = v3;
  v1[4] = *(void *)(v4 + v3);
  OUTLINED_FUNCTION_39_7(*(os_unfair_lock_s **)(v4 + *(void *)(v5 + 136)));
  OUTLINED_FUNCTION_27_8(v9);
  if (!v0)
  {
    if (v9[0])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4868);
      sub_256CEE448();
    }
    OUTLINED_FUNCTION_7_9();
    uint64_t v6 = (void *)swift_task_alloc();
    v1[5] = v6;
    void *v6 = v1;
    v6[1] = sub_256C8A344;
    uint64_t v7 = OUTLINED_FUNCTION_29_4();
    v8(v7);
  }
}

uint64_t sub_256C8A344()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C8A420()
{
  OUTLINED_FUNCTION_12();
  if (v0[4] == *(void *)(v0[2] + v0[3]))
  {
    if (qword_26B2C8CC0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_256CEDC88();
    uint64_t v2 = (void *)OUTLINED_FUNCTION_43_4(v1, (uint64_t)qword_26B2C8CA8);
    os_log_type_t v3 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_25_0(v3))
    {
      uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v4);
      OUTLINED_FUNCTION_61(&dword_256BD4000, v5, v6, "GreedyBufferingAsyncSequence fillBuffer block didn't append any items");
      OUTLINED_FUNCTION_10_5();
    }
  }
  OUTLINED_FUNCTION_16();
  return v7();
}

uint64_t sub_256C8A504()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C8A520, v0);
}

void sub_256C8A520()
{
  OUTLINED_FUNCTION_15();
  uint64_t v9 = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v1 + 24) = *(void *)(v2 + 192);
  OUTLINED_FUNCTION_39_7(*(os_unfair_lock_s **)(v2 + 176));
  OUTLINED_FUNCTION_27_8(v8);
  if (!v0)
  {
    if (v8[0])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4868);
      sub_256CEE448();
    }
    OUTLINED_FUNCTION_7_9();
    uint64_t v3 = swift_task_alloc();
    uint64_t v4 = (void *)OUTLINED_FUNCTION_40_7(v3);
    *uint64_t v4 = v5;
    v4[1] = sub_256C8A638;
    uint64_t v6 = OUTLINED_FUNCTION_29_4();
    v7(v6);
  }
}

uint64_t sub_256C8A638()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C8A714()
{
  OUTLINED_FUNCTION_12();
  if (*(void *)(v0 + 24) == *(void *)(*(void *)(v0 + 16) + 192))
  {
    if (qword_26B2C8CC0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_256CEDC88();
    uint64_t v2 = (void *)OUTLINED_FUNCTION_43_4(v1, (uint64_t)qword_26B2C8CA8);
    os_log_type_t v3 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_25_0(v3))
    {
      uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v4);
      OUTLINED_FUNCTION_61(&dword_256BD4000, v5, v6, "GreedyBufferingAsyncSequence fillBuffer block didn't append any items");
      OUTLINED_FUNCTION_10_5();
    }
  }
  OUTLINED_FUNCTION_16();
  return v7();
}

uint64_t sub_256C8A7F4()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C8A810, v0);
}

void sub_256C8A810()
{
  OUTLINED_FUNCTION_15();
  uint64_t v11 = v1;
  OUTLINED_FUNCTION_48_7();
  *(void *)(v1 + 24) = *(void *)(v3 + *(void *)(v2 + 152));
  OUTLINED_FUNCTION_39_7(*(os_unfair_lock_s **)(v3 + *(void *)(v4 + 136)));
  OUTLINED_FUNCTION_27_8(v10);
  if (!v0)
  {
    if (v10[0])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C4868);
      sub_256CEE448();
    }
    OUTLINED_FUNCTION_7_9();
    uint64_t v5 = swift_task_alloc();
    uint64_t v6 = (void *)OUTLINED_FUNCTION_40_7(v5);
    void *v6 = v7;
    v6[1] = sub_256C8A948;
    uint64_t v8 = OUTLINED_FUNCTION_29_4();
    v9(v8);
  }
}

uint64_t sub_256C8A948()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C8AA24()
{
  OUTLINED_FUNCTION_12();
  if (*(void *)(v0 + 24) == *(void *)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 152)))
  {
    if (qword_26B2C8CC0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_256CEDC88();
    uint64_t v2 = (void *)OUTLINED_FUNCTION_43_4(v1, (uint64_t)qword_26B2C8CA8);
    os_log_type_t v3 = sub_256CEE2C8();
    if (OUTLINED_FUNCTION_25_0(v3))
    {
      uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_99();
      OUTLINED_FUNCTION_147(v4);
      OUTLINED_FUNCTION_61(&dword_256BD4000, v5, v6, "GreedyBufferingAsyncSequence fillBuffer block didn't append any items");
      OUTLINED_FUNCTION_10_5();
    }
  }
  OUTLINED_FUNCTION_16();
  return v7();
}

unsigned char *sub_256C8AB18@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_256C8AB24@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269FC4C20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256C900C4(a1, (uint64_t)v6);
  uint64_t v7 = sub_256CEE258();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t result = sub_256C9012C((uint64_t)v6);
  }
  else
  {
    sub_256CEE248();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  *a2 = EnumTagSinglePayload == 1;
  return result;
}

void sub_256C8AC2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2C8A00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = sub_256C88D38();
  long long v13 = *(_OWORD *)(v1 + 80);
  OUTLINED_FUNCTION_36_5();
  uint64_t v7 = *(void *)(v6 + 96);
  sub_256C8DC38(v8);
  if (v5 <= 1)
  {
    uint64_t v9 = sub_256C88E10();
    swift_release();
    if (!v9)
    {
      sub_256C88D74();
      uint64_t v10 = sub_256CEE178();
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v10);
      uint64_t v11 = swift_allocObject();
      swift_weakInit();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = 0;
      *(_OWORD *)(v12 + 32) = v13;
      *(void *)(v12 + 48) = v7;
      *(void *)(v12 + 56) = v11;
      sub_256BDB760();
      sub_256C88E30();
    }
  }
}

uint64_t sub_256C8ADA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  return MEMORY[0x270FA2498](sub_256C8ADC0, 0, 0);
}

uint64_t sub_256C8ADC0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_22_1();
  uint64_t Strong = swift_weakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_256C8AEF8;
    return sub_256C8A7F4();
  }
  else
  {
    OUTLINED_FUNCTION_22_1();
    uint64_t v4 = swift_weakLoadStrong();
    v0[12] = v4;
    if (v4)
    {
      return MEMORY[0x270FA2498](sub_256C8B17C, v4, 0);
    }
    else
    {
      OUTLINED_FUNCTION_16();
      return v5();
    }
  }
}

uint64_t sub_256C8AEF8()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C8AFD4()
{
  OUTLINED_FUNCTION_2();
  *(void *)(v0 + 88) = sub_256C88D38();
  return MEMORY[0x270FA2498](sub_256C8B03C, 0, 0);
}

uint64_t sub_256C8B03C()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)v0[11];
  swift_release();
  sub_256C8DC38(v1);
  if (v1 || (uint64_t v3 = swift_weakLoadStrong(), (v0[9] = v3) == 0))
  {
    OUTLINED_FUNCTION_22_1();
    uint64_t Strong = swift_weakLoadStrong();
    v0[12] = Strong;
    if (Strong)
    {
      return MEMORY[0x270FA2498](sub_256C8B17C, Strong, 0);
    }
    else
    {
      OUTLINED_FUNCTION_16();
      return v5();
    }
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[10] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_256C8AEF8;
    return sub_256C8A7F4();
  }
}

uint64_t sub_256C8B17C()
{
  OUTLINED_FUNCTION_2();
  sub_256C8B1DC();
  swift_release();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C8B1DC()
{
  return sub_256C88E30();
}

uint64_t sub_256C8B1E4()
{
  *(void *)(v1 + 32) = v0;
  OUTLINED_FUNCTION_4_6();
  *(void *)(v1 + 40) = v2;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C8B210, v3);
}

uint64_t sub_256C8B210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v53 = v18;
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_256CEDC88();
  *(void *)(v18 + 48) = __swift_project_value_buffer(v19, (uint64_t)qword_26B2C8CA8);
  uint64_t v20 = (void *)sub_256CEDC68();
  os_log_type_t v21 = sub_256CEE2D8();
  if (OUTLINED_FUNCTION_25_0(v21))
  {
    uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_147(v22);
    OUTLINED_FUNCTION_61(&dword_256BD4000, v23, v24, "Cancelling sequence buffering and waiting for upstream sequence termination");
    OUTLINED_FUNCTION_10_5();
  }
  uint64_t v25 = *(void *)(v18 + 32);

  uint64_t v26 = *(os_unfair_lock_s **)(v25 + *(void *)(*(void *)v25 + 136));
  uint64_t v27 = v26 + 4;
  uint64_t v28 = v26 + 5;
  os_unfair_lock_lock(v26 + 5);
  sub_256C8BB1C(v27);
  os_unfair_lock_unlock(v28);
  if (sub_256C88E10())
  {
    sub_256CEE1B8();
    swift_release();
  }
  uint64_t v29 = *(void *)(v18 + 40);
  uint64_t v30 = (void *)sub_256C88D38();
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v29 + 80);
  *(void *)(v18 + 72) = *(void *)(v29 + 96);
  sub_256C8DC38(v30);
  if ((unint64_t)v30 > 1)
  {
    swift_retain_n();
    uint64_t v31 = sub_256CEDC68();
    os_log_type_t v32 = sub_256CEE2D8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_49_5();
      uint64_t v52 = swift_slowAlloc();
      OUTLINED_FUNCTION_47_6(4.8149e-34);
      unint64_t v34 = sub_256C88D38();
      OUTLINED_FUNCTION_45_3(v34);
      type metadata accessor for GreedyBufferingAsyncSequence.State();
      swift_getWitnessTable();
      uint64_t v35 = sub_256CEDF98();
      *(void *)(v18 + 24) = sub_256BE14CC(v35, v36, &v52);
      sub_256CEE308();
      OUTLINED_FUNCTION_42_4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256BD4000, v31, v32, "Sequence buffering terminated post-cancellation in state: %s", v33, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {

      OUTLINED_FUNCTION_42_4();
    }
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_9_0();
    __asm { BRAA            X1, X16 }
  }
  sub_256C8AC2C();
  uint64_t v37 = sub_256C88E10();
  *(void *)(v18 + 80) = v37;
  if (v37)
  {
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v18 + 88) = v38;
    void *v38 = v18;
    v38[1] = sub_256C8B5F4;
    OUTLINED_FUNCTION_9_0();
    return MEMORY[0x270FA1FD0](v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  }
  else
  {
    uint64_t v49 = (void *)swift_task_alloc();
    *(void *)(v18 + 96) = v49;
    *uint64_t v49 = v18;
    v49[1] = sub_256C8B77C;
    OUTLINED_FUNCTION_9_0();
    return MEMORY[0x270FA2000]();
  }
}

uint64_t sub_256C8B5F4()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_256C8B6F0, v2, 0);
}

uint64_t sub_256C8B6F0()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256C8B77C;
  return MEMORY[0x270FA2000]();
}

uint64_t sub_256C8B77C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C8B858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v42 = v18;
  uint64_t v19 = (void *)sub_256C88D38();
  sub_256C8DC38(v19);
  if ((unint64_t)v19 > 1)
  {
    swift_retain_n();
    uint64_t v20 = sub_256CEDC68();
    os_log_type_t v21 = sub_256CEE2D8();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_49_5();
      uint64_t v41 = swift_slowAlloc();
      OUTLINED_FUNCTION_47_6(4.8149e-34);
      unint64_t v23 = sub_256C88D38();
      OUTLINED_FUNCTION_45_3(v23);
      type metadata accessor for GreedyBufferingAsyncSequence.State();
      swift_getWitnessTable();
      uint64_t v24 = sub_256CEDF98();
      uint64_t v18[3] = sub_256BE14CC(v24, v25, &v41);
      sub_256CEE308();
      OUTLINED_FUNCTION_42_4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256BD4000, v20, v21, "Sequence buffering terminated post-cancellation in state: %s", v22, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_4();
    }
    else
    {

      OUTLINED_FUNCTION_42_4();
    }
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_22();
    __asm { BRAA            X1, X16 }
  }
  sub_256C8AC2C();
  uint64_t v26 = sub_256C88E10();
  v18[10] = v26;
  if (v26)
  {
    uint64_t v27 = (void *)swift_task_alloc();
    v18[11] = v27;
    *uint64_t v27 = v18;
    v27[1] = sub_256C8B5F4;
    OUTLINED_FUNCTION_22();
    return MEMORY[0x270FA1FD0](v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  }
  else
  {
    uint64_t v38 = (void *)swift_task_alloc();
    v18[12] = v38;
    void *v38 = v18;
    v38[1] = sub_256C8B77C;
    OUTLINED_FUNCTION_22();
    return MEMORY[0x270FA2000]();
  }
}

unsigned char *sub_256C8BB1C(unsigned char *result)
{
  *uint64_t result = 1;
  return result;
}

uint64_t sub_256C8BB28@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_4_6();
  uint64_t v3 = v2;
  unint64_t v4 = sub_256C88D38();
  if (v4 >= 2)
  {
    if (v4 != 2) {
      return swift_willThrow();
    }
    sub_256C88DA4();
    OUTLINED_FUNCTION_37_7();
    swift_getWitnessTable();
    char v9 = sub_256CEE288();
    swift_release();
    if (v9)
    {
      uint64_t v10 = a1;
      uint64_t v11 = 1;
LABEL_9:
      __swift_storeEnumTagSinglePayload(v10, v11, 1, v3);
      uint64_t v6 = sub_256CEE2E8();
      uint64_t v7 = a1;
      uint64_t v8 = 0;
      return __swift_storeEnumTagSinglePayload(v7, v8, 1, v6);
    }
LABEL_8:
    swift_beginAccess();
    sub_256CEDB48();
    swift_endAccess();
    uint64_t v10 = a1;
    uint64_t v11 = 0;
    goto LABEL_9;
  }
  sub_256C88DA4();
  OUTLINED_FUNCTION_37_7();
  swift_getWitnessTable();
  char v5 = sub_256CEE288();
  swift_release();
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v6 = sub_256CEE2E8();
  uint64_t v7 = a1;
  uint64_t v8 = 1;
  return __swift_storeEnumTagSinglePayload(v7, v8, 1, v6);
}

uint64_t sub_256C8BCD4()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C8BCF0, v0);
}

uint64_t sub_256C8BCF0()
{
  OUTLINED_FUNCTION_59();
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 200);
  v0[3] = v2;
  if (v2)
  {
    uint64_t v3 = swift_task_alloc();
    v0[4] = v3;
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = swift_task_alloc();
    v0[5] = v4;
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v2;
    sub_256C90080(&qword_269FC4C10, &qword_269FC4C18);
    swift_retain();
    char v5 = (void *)swift_task_alloc();
    v0[6] = v5;
    void *v5 = v0;
    v5[1] = sub_256C8BEC4;
    OUTLINED_FUNCTION_50_0();
    return MEMORY[0x270FA2338](v6, v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    uint64_t v16 = (uint64_t (*)(void))((char *)&dword_269FC4BF8 + dword_269FC4BF8);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[7] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_256C8C044;
    return v16();
  }
}

uint64_t sub_256C8BEC4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256C8BFE4, v2, 0);
}

uint64_t sub_256C8BFE4()
{
  OUTLINED_FUNCTION_2();
  sub_256CD6764();
  swift_release();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C8C044()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C8C104()
{
  *(void *)(v1 + 16) = v0;
  OUTLINED_FUNCTION_4_6();
  *(void *)(v1 + 24) = v2;
  return OUTLINED_FUNCTION_81((uint64_t)sub_256C8C130, v3);
}

uint64_t sub_256C8C130()
{
  OUTLINED_FUNCTION_15();
  uint64_t v1 = sub_256C88E10();
  v0[4] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = v0[2];
    uint64_t v4 = swift_task_alloc();
    v0[5] = v4;
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
    uint64_t v5 = swift_task_alloc();
    v0[6] = v5;
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v2;
    type metadata accessor for GreedyBufferingAsyncSequence();
    swift_getWitnessTable();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[7] = v6;
    void *v6 = v0;
    v6[1] = sub_256C8C2E8;
    OUTLINED_FUNCTION_198();
    return MEMORY[0x270FA2338](v7, v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    uint64_t v15 = (void *)swift_task_alloc();
    v0[8] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_256C8C46C;
    OUTLINED_FUNCTION_198();
    return sub_256C8A7F4();
  }
}

uint64_t sub_256C8C2E8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_0();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256C8C408, v2, 0);
}

uint64_t sub_256C8C408()
{
  OUTLINED_FUNCTION_2();
  sub_256C8AC2C();
  swift_release();
  OUTLINED_FUNCTION_16();
  return v0();
}

uint64_t sub_256C8C46C()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return v3();
}

uint64_t sub_256C8C52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x270FA2498](sub_256C8C548, a2, 0);
}

uint64_t sub_256C8C548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_2();
  sub_256C88D98(1);
  uint64_t v19 = swift_task_alloc();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_40_7(v19);
  *uint64_t v20 = v26;
  v20[1] = sub_256C8C5EC;
  uint64_t v27 = *(void *)(v18 + 24);
  uint64_t v28 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA1FD0](v20, v27, v28, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_256C8C5EC()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C8C6C8()
{
  OUTLINED_FUNCTION_72();
  return v0();
}

uint64_t sub_256C8C6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x270FA2498](sub_256C8C6FC, a2, 0);
}

uint64_t sub_256C8C6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_2();
  sub_256C88D74();
  uint64_t v19 = swift_task_alloc();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_40_7(v19);
  *uint64_t v20 = v26;
  v20[1] = sub_256C8C7A0;
  uint64_t v27 = *(void *)(v18 + 24);
  uint64_t v28 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA1FD0](v20, v27, v28, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_256C8C7A0()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256C8C87C(uint64_t a1)
{
  if (qword_26B2C8CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_256CEDC88();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2C8CA8);
  uint64_t v3 = sub_256CEDC68();
  os_log_type_t v4 = sub_256CEE2D8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_256BD4000, v3, v4, "Cancelling buffering task", v5, 2u);
    MEMORY[0x25A2AEBD0](v5, -1, -1);
  }

  uint64_t v6 = *(os_unfair_lock_s **)(a1 + 176);
  uint64_t v7 = v6 + 4;
  uint64_t v8 = v6 + 5;
  os_unfair_lock_lock(v6 + 5);
  sub_256C903B4(v7);
  os_unfair_lock_unlock(v8);
  return sub_256CEE1B8();
}