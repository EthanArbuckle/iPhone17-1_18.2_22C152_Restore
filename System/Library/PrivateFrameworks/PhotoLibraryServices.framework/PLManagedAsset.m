@interface PLManagedAsset
+ (BOOL)_checkComputeSyncUploadPolicyWithCPLConfiguration:(id)a3 library:(id)a4 debugMode:(BOOL)a5 debugLog:(id)a6;
+ (BOOL)_isLibraryScopeExiting:(id)a3;
+ (BOOL)_isLoopingVideoPlaybackVariation:(unsigned __int16)a3;
+ (BOOL)_isPlayableVideoUTI:(__CFString *)a3;
+ (BOOL)_shouldPushComputeSyncWithLocalMajorVersion:(signed __int16)a3 localAnalaysisStage:(signed __int16)a4 cloudComputeStateVersionStr:(id)a5 localAdjustmentFingerprint:(id)a6 cloudAdjustmentFingerprint:(id)a7 scopedIdentifier:(id)a8;
+ (BOOL)attemptToRecreateMasterAndAssetResourcesForPlaceholderAssetRepush:(id)a3 sourceAsset:(id)a4 library:(id)a5;
+ (BOOL)canPlayPhotoIrisWithPhotoIris:(BOOL)a3 photoIrisPlaceholder:(BOOL)a4 hasAdjustments:(BOOL)a5 videoCpVisibilityState:(unsigned __int16)a6;
+ (BOOL)cloneResourceFileFromURL:(id)a3 toURL:(id)a4 forDestinationResource:(id)a5 forDestinationAsset:(id)a6 fileManager:(id)a7 error:(id *)a8;
+ (BOOL)createAssetResourcesForPlaceholderAsset:(id)a3 withSourceAsset:(id)a4 shouldBakeInAdjustments:(BOOL)a5 shouldFlattenLivePhoto:(BOOL)a6 placeholderResourceURLToSourceResourceURLMap:(id)a7 photoLibrary:(id)a8;
+ (BOOL)createMasterForPlaceholderAsset:(id)a3 withSourceAsset:(id)a4 shouldBakeInAdjustments:(BOOL)a5 shouldFlattenLivePhoto:(BOOL)a6 placeholderResourceURLToSourceResourceURLMap:(id)a7 photoLibrary:(id)a8;
+ (BOOL)createMomentShareAssetsForMomentShare:(id)a3 batchedSourceAssetsToCopy:(id)a4 creationRequestSourceAssetsCMMAssetsMap:(id)a5 curatedSourceAssets:(id)a6 adjustmentBakeInOptionsDictionary:(id)a7 metadataCopyOptionsDictionary:(id)a8 keySourceAssetIdentifier:(id)a9 clientConnection:(id)a10 library:(id)a11 error:(id *)a12;
+ (BOOL)guaranteedFlashOffForAssetAtURL:(id)a3;
+ (BOOL)hasRequiredExtendedAttributesForMainFileURL:(id)a3;
+ (BOOL)hasRequiredExtendedAttributesForPersistanceAttributes:(id)a3;
+ (BOOL)installResourcesForAssetAndRemoveDeferredProcessingPreviewFile:(id)a3 error:(id *)a4;
+ (BOOL)invalidateBehavioralScoreOnAllAssetsInManagedObjectContext:(id)a3 error:(id *)a4;
+ (BOOL)invalidateReverseLocationDataOnAllAssetsInManagedObjectContext:(id)a3 error:(id *)a4;
+ (BOOL)isComputeSyncEnabledForDirection:(int64_t)a3 library:(id)a4;
+ (BOOL)isComputeSyncEnabledForDirection:(int64_t)a3 library:(id)a4 debugMode:(BOOL)a5 debugLog:(id *)a6;
+ (BOOL)isHFRVideoAVAsset:(id)a3;
+ (BOOL)isKnownFileExtension:(id)a3;
+ (BOOL)isOrphanedMediaGroupUUID:(id)a3;
+ (BOOL)isPhotoIrisPlaceholderWithPhotoIris:(BOOL)a3 videoCpDuration:(int64_t)a4 isCloudShared:(BOOL)a5 videoCpFilePath:(id)a6;
+ (BOOL)isPrimaryImageFormatForUTI:(id)a3;
+ (BOOL)isScreenRecordingFileName:(id)a3;
+ (BOOL)isValidFileExtensionForImport:(id)a3;
+ (BOOL)isValidFileURLForImport:(id)a3;
+ (BOOL)isVideoComplementVisibilityStatePlayable:(unsigned __int16)a3 hasAdjustments:(BOOL)a4;
+ (BOOL)shouldBakeInAdjustmentsAndFlattenLivePhoto:(BOOL *)a3 forSourceAsset:(id)a4 adjustmentBakeInOptions:(id)a5;
+ (BOOL)shouldPerformServerCopyOnPlaceholderAsset:(id)a3 photoLibrary:(id)a4;
+ (BOOL)shouldPerformServerCopyWithSourceAsset:(id)a3 copyingFromMomentShare:(BOOL)a4 photoLibrary:(id)a5;
+ (BOOL)shouldSyncAssetToSPLWithSavedAssetType:(signed __int16)a3 syndicationState:(unsigned __int16)a4;
+ (BOOL)validMomentShareForPlaceholderAsset:(id)a3;
+ (CGSize)dimensionsForAVAsset:(id)a3;
+ (CGSize)dimensionsForVideoAtURL:(id)a3;
+ (CGSize)sizeOfImageAtURL:(id)a3 outOrientation:(signed __int16 *)a4;
+ (NSPredicate)predicateToIncludeSharedLibrarySharingSuggestionsAssets;
+ (NSString)cloudUUIDKeyForDeletion;
+ (PLManagedAsset)assetWithObjectID:(id)a3 inLibrary:(id)a4;
+ (PLManagedAsset)assetWithObjectID:(id)a3 inManagedObjectContext:(id)a4;
+ (PLManagedAsset)assetWithScopedIdentifier:(id)a3 inLibrary:(id)a4 prefetchResources:(BOOL)a5;
+ (PLManagedAsset)assetWithSyndicationIdentifier:(id)a3 inLibrary:(id)a4;
+ (PLManagedAsset)assetWithUUID:(id)a3 inLibrary:(id)a4;
+ (PLManagedAsset)assetWithUUID:(id)a3 inManagedObjectContext:(id)a4;
+ (id)_cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 largeAdjustmentBlobFingerpint:(id)a4 formatIdentifier:(id)a5 formatVersion:(id)a6 editorBundleID:(id)a7 baseVersion:(int64_t)a8 baseImageData:(id)a9 baseImageFingerprint:(id)a10;
+ (id)_countOfAssetsByKindWithResourcePredicate:(id)a3 inContext:(id)a4;
+ (id)_createAssetModelToInsert:(id)a3 uuid:(id)a4 replacementUUID:(id)a5;
+ (id)_dataFromCPLPlaceAnnotation:(id)a3;
+ (id)_importAlbumIsolationQueue;
+ (id)_insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 mainFileMetadata:(id)a5 savedAssetType:(signed __int16)a6 bundleScope:(unsigned __int16)a7 uuid:(id)a8 replacementUUID:(id)a9 imageSource:(CGImageSource *)a10 imageData:(id *)a11 isPlaceholder:(BOOL)a12 deleteFileOnFailure:(BOOL)a13;
+ (id)_insertSyndicationAssetIntoPhotoLibrary:(id)a3 uuid:(id)a4 syndicationIdentifier:(id)a5 bundleID:(id)a6 addedDate:(id)a7;
+ (id)_newPathAndDateDictionariesByAssetUUIDFromFetchResults:(id)a3 photoLibrary:(id)a4;
+ (id)_notPushedAssetsToUploadInitiallyInManagedObjectContext:(id)a3 withSavedAssetTypePredicate:(id)a4 shouldSort:(BOOL)a5 limit:(unint64_t)a6;
+ (id)_placeAnnotationFromAnnotationData:(id)a3;
+ (id)_predicateForAssetsWithNotCompleteResourcesOnResource;
+ (id)_predicateForAvalancheKindAssetsWithUUID:(id)a3 kind:(unsigned __int16)a4;
+ (id)_predicateForCloudLocalStates:(id)a3;
+ (id)_predicateForDepthType:(signed __int16)a3;
+ (id)_predicateForTrashedAssetsToExcludeInInitialUpload;
+ (id)_ptpCalendar;
+ (id)_ptpEventInfoIsolationQueue;
+ (id)_syncablePredicate;
+ (id)_syndicationAssetForSearchableItem:(id)a3 inLibrary:(id)a4 createIfNeeded:(BOOL)a5 didCreate:(BOOL *)a6 error:(id *)a7;
+ (id)allCloudSharedAssetsInLibrary:(id)a3;
+ (id)allHDRValues;
+ (id)assetUUIDsByObjectIDs:(id)a3 withFilterPredicate:(id)a4 context:(id)a5 error:(id *)a6;
+ (id)assetsByCloudAssetUUID:(id)a3 inLibrary:(id)a4;
+ (id)assetsByScopedIdentifiers:(id)a3 relationshipKeyPathsForPrefetching:(id)a4 inLibrary:(id)a5;
+ (id)assetsLibraryURLWithUUID:(id)a3 extension:(id)a4;
+ (id)assetsToConsiderForTypePromotionInContext:(id)a3 withExtensions:(id)a4 error:(id *)a5;
+ (id)assetsToRetryInLibrary:(id)a3 limit:(unint64_t)a4;
+ (id)assetsToUploadInitiallyInManagedObjectContext:(id)a3 limit:(unint64_t)a4;
+ (id)assetsWithGroupingUUID:(id)a3 inManagedObjectContext:(id)a4;
+ (id)assetsWithObjectIDs:(id)a3 inLibrary:(id)a4;
+ (id)assetsWithScopedIdentifiers:(id)a3 prefetchResources:(BOOL)a4 relationshipKeyPathsForPrefetching:(id)a5 inLibrary:(id)a6;
+ (id)assetsWithUUIDs:(id)a3 options:(unint64_t)a4 inLibrary:(id)a5;
+ (id)assetsWithUUIDs:(id)a3 options:(unint64_t)a4 inManagedObjectContext:(id)a5;
+ (id)assetsWithValidatedSavedAssetTypeMask:(unsigned int)a3 inManagedObjectContext:(id)a4;
+ (id)attributeValidationRules;
+ (id)calculateImageRequestHintsFromSortedResources:(id)a3 asset:(id)a4;
+ (id)cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 editorBundleID:(id)a6 baseVersion:(int64_t)a7 baseFingerprint:(id)a8;
+ (id)cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 editorBundleID:(id)a6 baseVersion:(int64_t)a7 baseImageData:(id)a8;
+ (id)cloudMasterMediaMetadataForAssetObjectID:(id)a3 managedObjectContext:(id)a4 error:(id *)a5;
+ (id)cloudSharedAssetsWithGUIDs:(id)a3 inLibrary:(id)a4;
+ (id)createCloudPhotoLibraryAssetWithAssetRecord:(id)a3 withCloudMaster:(id)a4 inLibrary:(id)a5;
+ (id)createOrUpdateObjectFromSearchableItem:(id)a3 library:(id)a4 fullIndexSyncStartDate:(id)a5 createIfNeeded:(BOOL)a6 didCreate:(BOOL *)a7 isSyndicatable:(BOOL *)a8 error:(id *)a9;
+ (id)createSparseComputeStateRecordsForAssets:(id)a3 inPhotoLibrary:(id)a4;
+ (id)debugDescriptionForHintData:(id)a3 assetWidth:(int64_t)a4 assetHeight:(int64_t)a5 assetID:(id)a6;
+ (id)diagnosticFilePathForLibrary:(id)a3 mainFilename:(id)a4 createIfNeeded:(BOOL)a5;
+ (id)entityName;
+ (id)eventInfoForPTP;
+ (id)extensionForFullsizeThumbnailFile;
+ (id)extensionForLargeThumbnailFile;
+ (id)extensionForMediumThumbnailFile;
+ (id)failedToPushAssetInLibrary:(id)a3;
+ (id)fetchAssetsWithUUIDs:(id)a3 managedObjectContext:(id)a4;
+ (id)fetchPredicateForLegacyRequiredResourcesLocallyAvailable:(BOOL)a3 photoLibrary:(id)a4;
+ (id)fetchRequestForResourcesWithObjectID:(id)a3 versions:(id)a4 allowDerivatives:(BOOL)a5 excludeDynamicCPLResources:(BOOL)a6 additionalPredicate:(id)a7 relationshipKeyPathsForPrefetching:(id)a8;
+ (id)fetchRequestForSortedCloudSharedAssetsWithPlaceholderKinds:(id)a3 additionalPredicate:(id)a4 ascending:(BOOL)a5;
+ (id)fetchResourcesForAssetWithObjectID:(id)a3 inContext:(id)a4 versions:(id)a5 includeVirtualResources:(BOOL)a6 allowDerivatives:(BOOL)a7 excludeDynamicCPLResources:(BOOL)a8 additionalPredicate:(id)a9 relationshipKeyPathsForPrefetching:(id)a10 error:(id *)a11;
+ (id)fileURLFromAssetURL:(id)a3 photoLibrary:(id)a4;
+ (id)filterPredicateToExcludeNoSyndicationAssets;
+ (id)filterPredicateToIncludeOnlyReceivedSyndicatedAssets;
+ (id)generateFullComputeStateRecordForRecord:(id)a3 payloadHelper:(id)a4 destinationDirectoryURL:(id)a5 inPhotoLibrary:(id)a6;
+ (id)imageAssetsForMediaGroupUUID:(id)a3 moc:(id)a4;
+ (id)insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 mainFileMetadata:(id)a5 savedAssetType:(signed __int16)a6 bundleScope:(unsigned __int16)a7 uuid:(id)a8 replacementUUID:(id)a9 imageSource:(CGImageSource *)a10 imageData:(id *)a11 isPlaceholder:(BOOL)a12 deleteFileOnFailure:(BOOL)a13;
+ (id)insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 savedAssetType:(signed __int16)a5 bundleScope:(unsigned __int16)a6 uuid:(id)a7 replacementUUID:(id)a8 imageSource:(CGImageSource *)a9 imageData:(id *)a10;
+ (id)isEligibleForSearchIndexingPredicateForLibraryIdentifier:(int64_t)a3;
+ (id)keyPathsForValuesAffectingGpsCoordinate;
+ (id)keyPathsForValuesAffectingImageSize;
+ (id)keyPathsForValuesAffectingIsJPEG;
+ (id)keyPathsForValuesAffectingIsPhotoStreamPhoto;
+ (id)lightweightReimportFileNameWithGUID:(id)a3 type:(id)a4;
+ (id)listOfSharingAttributesRelevantForUpload;
+ (id)listOfSharingRelationshipsRelevantForUpload;
+ (id)listOfStatesWithOutstandingDeferredPhotoProcessingWork;
+ (id)listOfSyncedProperties;
+ (id)newImagePropertiesFromImageSource:(CGImageSource *)a3;
+ (id)newLocationDataFromLocation:(id)a3;
+ (id)newLocationFromLocationData:(id)a3 timestampIfMissing:(id)a4;
+ (id)objectsWithScopedIdentifiers:(id)a3 forEntityName:(id)a4 prefetchResources:(BOOL)a5 relationshipKeyPathsForPrefetching:(id)a6 inLibrary:(id)a7;
+ (id)pathAndDateDictionariesForAllIncompleteAssetsInManagedObjectContext:(id)a3;
+ (id)pathForAdjustmentDataFileWithPathManager:(id)a3 uuid:(id)a4 directory:(id)a5 filename:(id)a6;
+ (id)pathForAdjustmentDirectoryWithMutationsDirectory:(id)a3;
+ (id)pathForAdjustmentFileWithPathManager:(id)a3 uuid:(id)a4 directory:(id)a5 filename:(id)a6;
+ (id)pathForAlchemistImageWithUUID:(id)a3 bundleScope:(unsigned __int16)a4 directory:(id)a5 filename:(id)a6 pathManager:(id)a7;
+ (id)pathForMutationsDirectoryWithDirectory:(id)a3 filename:(id)a4;
+ (id)persistedRecentlyUsedGUIDSWithPathManager:(id)a3;
+ (id)photoFromAssetURL:(id)a3 photoLibrary:(id)a4;
+ (id)photoFromAssetURL:(id)a3 photoLibrary:(id)a4 sidecar:(id *)a5;
+ (id)predicateExcludingLocallyUnavailableDynamicCPLResources;
+ (id)predicateFilteringForNonDerivativeRecipeIDs;
+ (id)predicateForAdjustedAssetsWithKeyPathToAsset:(id)a3;
+ (id)predicateForAssetSharingFilter:(signed __int16)a3;
+ (id)predicateForAssetSharingFilter:(signed __int16)a3 noindex:(BOOL)a4;
+ (id)predicateForAssetSubtype:(signed __int16)a3;
+ (id)predicateForAssetsToCheckForDeletionOnCPLDisable;
+ (id)predicateForAssetsWithCompleteResourcesOnAsset;
+ (id)predicateForAvalancheKindAssetsWithKind:(unsigned __int16)a3;
+ (id)predicateForBurstAssetsWithBurstUUID:(id)a3;
+ (id)predicateForBurstStackAssets;
+ (id)predicateForCinematicVideos;
+ (id)predicateForDepthEffectPhotos;
+ (id)predicateForLocallyAvailablePrimaryStoreResourcesWithCPLResourceTypes:(id)a3 version:(unsigned int)a4;
+ (id)predicateForProResAssets;
+ (id)predicateForRAWAndRPlusJAssets;
+ (id)predicateForReframedAssets;
+ (id)predicateForShouldSyncToSPL;
+ (id)predicateForSpatialMedia;
+ (id)predicateForSpatialOverCaptureAssets;
+ (id)predicateForStyleableAssets;
+ (id)predicateForSupportedAssetTypesForUpload;
+ (id)predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders;
+ (id)predicateForSyndicatedAssetIdentifiers:(id)a3 includeRejected:(BOOL)a4;
+ (id)predicateForSyndicatedAssetIdentifiersSuffix:(id)a3;
+ (id)predicateForUnadjustedAssetsWithKeyPathToAsset:(id)a3;
+ (id)predicateForUnpushedDeferredAssets;
+ (id)predicateForUploadableAssetsWithCloudLocalState:(signed __int16)a3;
+ (id)predicateForUploadableAssetsWithCloudLocalStates:(id)a3;
+ (id)predicateForUploadableAssetsWithMasterCloudLocalStateNotEqualTo:(signed __int16)a3;
+ (id)predicateForUploadableAssetsWithoutCloudLocalState:(signed __int16)a3;
+ (id)predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath:(id)a3;
+ (id)predicateToExcludeCameraAutoAdjustments;
+ (id)predicateToExcludeDuplicateAssetVisibilityStateHidden;
+ (id)predicateToExcludeHiddenAssets;
+ (id)predicateToExcludeHiddenAssetsWithHiddenKeyPath:(id)a3;
+ (id)predicateToExcludeNonVisibleStackedAssets;
+ (id)predicateToExcludeNonvisibleBurstAssets;
+ (id)predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath:(id)a3;
+ (id)predicateToExcludeRestrictedLockedAssets;
+ (id)predicateToExcludeTrashedAssets;
+ (id)predicateToExcludeTrashedAssetsWithTrashedStateKeyPath:(id)a3;
+ (id)predicateToExcludeVideosWithVideoKeyFrameSetWithKeyPathToAsset:(id)a3;
+ (id)predicateToFetchResourcesAwaitingLocalAvailabilityChange;
+ (id)predicateToIncludeBothPrivateAssetsAndSharedContentContributedByCurrentUser;
+ (id)predicateToIncludeDuplicateAssetVisibilityStateMostRelevant;
+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToFaceVersion:(id)a3;
+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToLatestFaceVersion;
+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToLatestSceneVersion;
+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToSceneVersion:(id)a3;
+ (id)predicateToIncludeOnlyAllowedForAnalysisAssets;
+ (id)predicateToIncludeOnlyContentContributedByCurrentUser;
+ (id)predicateToIncludePrivateLibraryAssetsAllowingIndexingOnParticipationState:(BOOL)a3;
+ (id)predicateToIncludeSharedLibraryAssetsAllowingIndexingOnParticipationState:(BOOL)a3;
+ (id)predicateToLimitToCaptureSessionIdentifier:(id)a3;
+ (id)preferredFileExtensionForType:(id)a3;
+ (id)propertiesToFetch;
+ (id)ptpAssetIDForEventAndFilenameKey:(id)a3;
+ (id)quarantinedAssetsInLibrary:(id)a3;
+ (id)recentlyUsedGUIDsPathWithPathManager:(id)a3;
+ (id)relationshipKeyPathsToPrefetch;
+ (id)toUploadAssetsInLibrary:(id)a3;
+ (id)uniformTypeFromPathExtension:(id)a3 assetType:(signed __int16)a4;
+ (id)uniformTypeIdentifierFromPathExtension:(id)a3 assetType:(signed __int16)a4;
+ (id)uuidFromAssetURL:(id)a3;
+ (id)uuidFromAssetURL:(id)a3 fileExtension:(id *)a4 sidecarIndex:(id *)a5;
+ (id)videoAssetsForMediaGroupUUID:(id)a3 moc:(id)a4;
+ (id)videoComplementVisibilityStatePlayablePredicate;
+ (int64_t)_locationDataFormat:(id)a3;
+ (int64_t)adjustmentBaseVersionFromPFAdjustmentsBaseVersion:(int64_t)a3;
+ (int64_t)cloudDeletionTypeForTombstone:(id)a3;
+ (int64_t)pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:(int64_t)a3;
+ (int64_t)totalPurgeableSizeOnDiskInLibrary:(id)a3 urgency:(int64_t)a4;
+ (int64_t)totalPurgeableSizeOnDiskInLibrary:(id)a3 urgency:(int64_t)a4 sizeOption:(unint64_t)a5;
+ (signed)assetTypeFromUniformTypeIdentifier:(id)a3;
+ (signed)correctedOrientation:(signed __int16)a3;
+ (signed)imageDepthTypeFromCustomRenderedValue:(signed __int16)a3;
+ (signed)imageHDRTypeFromCustomRenderedValue:(signed __int16)a3;
+ (unint64_t)CPLAssetHDRTypeFromPLAssetHDRType:(signed __int16)a3;
+ (unint64_t)_sumOfCountsInCountedSet:(id)a3;
+ (unint64_t)countForAssetsWithCloudAssetGUIDs:(id)a3 includePendingChanges:(BOOL)a4 inManagedObjectContext:(id)a5 error:(id *)a6;
+ (unint64_t)countForAssetsWithUUIDs:(id)a3 includePendingChanges:(BOOL)a4 inManagedObjectContext:(id)a5 error:(id *)a6;
+ (unint64_t)countForAssetsWithUUIDs:(id)a3 uuidKeyPath:(id)a4 includePendingChanges:(BOOL)a5 inManagedObjectContext:(id)a6 error:(id *)a7;
+ (unint64_t)countOfDeferredAssetsToSyncInPhotoLibrary:(id)a3 outAssetList:(id)a4;
+ (unint64_t)countOfNotUploadedAssetsInPhotoLibrary:(id)a3 forAssetType:(signed __int16)a4 error:(id *)a5;
+ (unint64_t)countUsedAssetsWithKind:(signed __int16)a3 excludeTrashed:(BOOL)a4 excludeInvisible:(BOOL)a5 excludeCloudShared:(BOOL)a6 excludePhotoStream:(BOOL)a7 inManagedObjectContext:(id)a8;
+ (unint64_t)iCPLAssetCountInPhotoLibrary:(id)a3;
+ (unint64_t)resourceTypeForUnadjustedFlattenedLivePhotoAssetResourceType:(unint64_t)a3;
+ (unint64_t)totalSizeOfUnpushedOriginalsInPhotoLibrary:(id)a3 outMasterList:(id)a4 isInitialUpload:(BOOL)a5;
+ (unsigned)defaultPlaybackStyleFromAssetType:(signed __int16)a3 subtype:(signed __int16)a4 playbackVariation:(unsigned __int16)a5;
+ (unsigned)landscapeScrubberThumbnailFormat;
+ (unsigned)masterThumbnailFormat;
+ (unsigned)portraitScrubberThumbnailFormat;
+ (void)_cloneResourcesForMomentSharePlaceholderAsset:(id)a3 withPlaceholderResourceURLToSourceResourceURLMap:(id)a4 fileManager:(id)a5 photoLibrary:(id)a6;
+ (void)_rm_copyResourceFileFrom:(id)a3 to:(id)a4 forCloudMaster:(id)a5 andAsset:(id)a6;
+ (void)_runComputeSyncBackfillTaskOnProcessedAssets:(id)a3;
+ (void)batchFetchAssetsByFaceUUIDWithFaceUUIDs:(id)a3 library:(id)a4 completion:(id)a5;
+ (void)clearImportSessionObjectIDCacheOnManagedObjectContext:(id)a3;
+ (void)computePreCropThumbnailSize:(CGSize *)a3 andPostCropSize:(CGSize *)a4 forOrientedOriginalSize:(CGSize)a5 andCroppedSize:(CGSize)a6 isLargeThumbnail:(BOOL)a7;
+ (void)countOfAssetsWithRequiredResourcesNotLocallyAvailableInLibrary:(id)a3 outCount:(unint64_t *)a4 photoCount:(unint64_t *)a5 videoCount:(unint64_t *)a6;
+ (void)createMastersInLibrary:(id)a3;
+ (void)createTHMFileWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fileURLForThumbnailFile:(id)a5;
+ (void)createThumbnailImage:(id *)a3 previewImage:(id *)a4 withToBeReleasedImageSource:(CGImageSource *)a5;
+ (void)deDupCMMAssets:(id)a3;
+ (void)deleteOldPlaceholderAssetsInManagedObjectContext:(id)a3;
+ (void)enumerateImageRequestHintData:(id)a3 assetWidth:(int64_t)a4 assetHeight:(int64_t)a5 libraryID:(id)a6 startingOffset:(int64_t)a7 assetID:(id)a8 block:(id)a9;
+ (void)fixMissingOriginalDateCreatedIfNeededForAsset:(id)a3 withCloudMaster:(id)a4;
+ (void)fixMissingOriginalTimezoneIfNeededForAsset:(id)a3;
+ (void)fixupCloudPhotoLibraryAsset:(id)a3 withCloudMaster:(id)a4 inLibrary:(id)a5;
+ (void)markAssetAsRecentlyUsed:(id)a3;
+ (void)performTransactionOnSyndicationLibraryWithSyndicationIdentifier:(id)a3 block:(id)a4;
+ (void)processAdjustedMediaMetadataForAsset:(id)a3;
+ (void)processMediaMetadataForAsset:(id)a3 withCloudMaster:(id)a4;
+ (void)ptpResetEventAndFilenameMapping;
+ (void)ptpSetAssetIDForEventAndFilenameKey:(id)a3 value:(id)a4;
+ (void)resetAssetsCloudStateInLibrary:(id)a3;
+ (void)rm_cplResourceWasUploaded:(id)a3 photoLibrary:(id)a4;
+ (void)runComputeSyncBackfillTaskOnProcessedAssets:(id)a3;
- ($3CC8671D27C23BF42ADDB32F2B5E48AE)photoIrisStillDisplayTime;
- ($3CC8671D27C23BF42ADDB32F2B5E48AE)photoIrisVideoDuration;
- ($3CC8671D27C23BF42ADDB32F2B5E48AE)videoKeyFrameTime;
- (BOOL)_analysisStateWasChangedForWorkerType:(signed __int16)a3;
- (BOOL)_checkForAndAddFrameDropRecoveryForPhotoKitIngest;
- (BOOL)_hasBecomeNonVisibleToMemoriesAndPersonsAndSuggestions:(id)a3;
- (BOOL)_hasPanoramaDimensions;
- (BOOL)_hasScreenshotDimensions;
- (BOOL)_hasScreenshotMetadataWithMetadata:(id)a3;
- (BOOL)_hasVideoComplementData;
- (BOOL)_ingestAndApplyMetadataChangesFromAdjustments:(id)a3 updateAdjustmentDictionary:(id)a4 options:(id)a5 fullSizeRenderURL:(id)a6 videoPosterRenderURL:(id)a7 isRevertToOriginal:(BOOL)a8 error:(id *)a9;
- (BOOL)_installExistingPurgeableResourceAtPath:(id)a3 dstPath:(id)a4 error:(id *)a5 installResourceHandler:(id)a6;
- (BOOL)_isAdjustedResourceAvailableForResourceType:(unint64_t)a3;
- (BOOL)_isAdjustedResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4;
- (BOOL)_isCameraAutoAdjustmentChecksNeededAndUpdateAsset;
- (BOOL)_isMasterResourceAvailableForResourceType:(unint64_t)a3;
- (BOOL)_isMasterResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4;
- (BOOL)_isPartOfAvalancheWithKind:(unsigned __int16)a3;
- (BOOL)_isResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4;
- (BOOL)_isResourceType:(unint64_t)a3 inResources:(id)a4;
- (BOOL)_isValidUTI:(id)a3 forService:(id)a4;
- (BOOL)_isVisibleAvalanchePickType:(int)a3;
- (BOOL)_linkVideoFileFromSourcePath:(id)a3 toDestinationPath:(id)a4;
- (BOOL)_location:(id)a3 isEqualToLocationForUpdating:(id)a4;
- (BOOL)_migrateKeyedArchiverAdjustmentsToPropertyListSerializationFormat;
- (BOOL)_migrateLegacySLMAdjustments;
- (BOOL)_setDefaultSlowMotionAdjustmentsWithMainFileMetadata:(id)a3;
- (BOOL)_setHDRTypeFromMetadata:(id)a3;
- (BOOL)_setupPlaceholderAdjustmentPropertiesFromSourceAsset:(id)a3 bakeInAdjustmentsFromSourceAsset:(BOOL)a4 library:(id)a5;
- (BOOL)_shouldIngestComputeSyncFromCloudWithCloudVersion:(id)a3 cloudAdjustmentFingerprint:(id)a4 cloudLastUpdatedDate:(id)a5;
- (BOOL)_shouldInstallComputeSyncResourceFromCloudWithCPLAssetChange:(id)a3;
- (BOOL)_shouldSetupVideoComplementForAsyncEditWithBaseVersion:(int64_t)a3;
- (BOOL)_updateAndStoreFinalPhotoResourceForResourceType:(unsigned int)a3 version:(unsigned int)a4 error:(id *)a5;
- (BOOL)_updateAndStoreFinalVideoComplementResourceWithOutError:(id *)a3;
- (BOOL)_updateKindSubtypeIfScreenshotWithCheckTask:(id)a3;
- (BOOL)addSidecarFileAtIndex:(unint64_t)a3 sidecarURL:(id)a4 withFilename:(id)a5 compressedSize:(id)a6 captureDate:(id)a7 modificationDate:(id)a8 uniformTypeIdentifier:(id)a9 imageOrientation:(unsigned int)a10 pathManager:(id)a11;
- (BOOL)addSidecarFileInfo:(id)a3 pathManager:(id)a4 atIndex:(unint64_t)a5 mainFileMetadata:(id)a6;
- (BOOL)anyInternalResourceIsLocal;
- (BOOL)applyComputeSyncPayloadWithComputeStateRecord:(id)a3 originatedFromPrefetch:(BOOL)a4 error:(id *)a5;
- (BOOL)attemptPromoteFromUnknownKindUsingCloudMaster;
- (BOOL)avalanchePickTypeIsVisible;
- (BOOL)becomePhotoIrisWithMediaGroupUUID:(id)a3 mainFileMetadata:(id)a4 videoURL:(id)a5 spatialOverCaptureURL:(id)a6 videoDuration:(id *)a7 stillDisplayTime:(id *)a8 options:(unint64_t)a9;
- (BOOL)becomePhotoIrisWithMediaGroupUUID:(id)a3 mainFileMetadata:(id)a4 videoURL:(id)a5 videoDuration:(id *)a6 stillDisplayTime:(id *)a7 options:(unint64_t)a8;
- (BOOL)becomeSyndicationLivePhotoWithVideoComplementContentType:(id)a3;
- (BOOL)calculateAllowedForAnalysis;
- (BOOL)canPerformDeleteOperation;
- (BOOL)canPerformEditOperation:(unint64_t)a3;
- (BOOL)canPlayPhotoIris;
- (BOOL)checkAllResourcesRequiredForCPLDisableWithReachableBlock:(id)a3;
- (BOOL)cleanUpMetadataPath;
- (BOOL)cloudHasSameOwnerAsAsset:(id)a3;
- (BOOL)cloudPhotoLibraryEnabled;
- (BOOL)copyComputeSyncResourceFromCPLFilePath:(id)a3 error:(id *)a4;
- (BOOL)couldBeStoredInDCIM;
- (BOOL)disableFileSystemPersistency;
- (BOOL)eligibleForGuestAssetPromotion;
- (BOOL)faceDetectionComplete;
- (BOOL)fullAnalysisComplete;
- (BOOL)hasAdjustedCPLThumbResource;
- (BOOL)hasAdjustedVideoComplement;
- (BOOL)hasAdjustments;
- (BOOL)hasAllThumbs;
- (BOOL)hasDeferredProcessingPreviewFile;
- (BOOL)hasGPS;
- (BOOL)hasJustBeenHidden;
- (BOOL)hasJustBeenShown;
- (BOOL)hasLegacyRequiredResourcesLocallyAvailable;
- (BOOL)hasLibraryScope;
- (BOOL)hasMasterThumb;
- (BOOL)hasNonSlomoAdjustments;
- (BOOL)hasOriginalFile;
- (BOOL)hasOutstandingDeferredCaptureProcessing;
- (BOOL)hasScreenshotMetadata;
- (BOOL)hasUnrenderedAsyncAdjustments;
- (BOOL)imageRequestHintsContainsResource:(id)a3;
- (BOOL)installComputeSyncResourceAfterAttachtoCPLWithError:(id *)a3;
- (BOOL)installExistingAlchemistImageAtPath:(id)a3 error:(id *)a4;
- (BOOL)installExistingGenerativePlaygroundFaceResourcesFileAtPath:(id)a3 error:(id *)a4;
- (BOOL)installExistingWallpaperComputeResourcesFileAtPath:(id)a3 error:(id *)a4;
- (BOOL)installFinalImageAndRemoveDeferredFilesWithFinalImageURL:(id)a3 outError:(id *)a4;
- (BOOL)installFinalVideoComplementAndRemoveDeferredFilesWithOutError:(id *)a3;
- (BOOL)installSparseFullStageComputeSyncResourceIfNeeded;
- (BOOL)isAnimation;
- (BOOL)isAudio;
- (BOOL)isAutoloop;
- (BOOL)isAvalanchePhoto;
- (BOOL)isAvalancheStackPhoto;
- (BOOL)isBundleScopeSyndication;
- (BOOL)isCameraConnectionKitAsset;
- (BOOL)isCloudPhotoLibraryAsset;
- (BOOL)isCloudPlaceholder;
- (BOOL)isCloudSharedAsset;
- (BOOL)isColorAware;
- (BOOL)isDefaultAdjustedSlomo;
- (BOOL)isDeletableFromAssetsLibrary;
- (BOOL)isEditableFromAssetsLibrary;
- (BOOL)isEligibleForSearchIndexing;
- (BOOL)isFinderSyncedAsset;
- (BOOL)isHDVideo;
- (BOOL)isHEIF;
- (BOOL)isInFlight;
- (BOOL)isInTrash;
- (BOOL)isIncludedInCloudFeeds;
- (BOOL)isIncludedInMoments;
- (BOOL)isInterestingForAvalanche;
- (BOOL)isJPEG;
- (BOOL)isLocalOnlyDelete;
- (BOOL)isLocalVideoKeyFrameValid;
- (BOOL)isLocatedAtCoordinates:(CLLocationCoordinate2D)a3;
- (BOOL)isLocatedAtHome;
- (BOOL)isLongExposure;
- (BOOL)isLoopingVideo;
- (BOOL)isMirror;
- (BOOL)isMogul;
- (BOOL)isMomentSharedAsset;
- (BOOL)isOriginalRAW;
- (BOOL)isOriginalSRGB;
- (BOOL)isPanorama;
- (BOOL)isPartOfBurst;
- (BOOL)isPhoto;
- (BOOL)isPhotoIris;
- (BOOL)isPhotoIrisPlaceholder;
- (BOOL)isPhotoStreamPhoto;
- (BOOL)isPlaceholderAsset;
- (BOOL)isPlayableVideo:(id *)a3;
- (BOOL)isPrimaryImageFormat;
- (BOOL)isRAW;
- (BOOL)isRAWOnly;
- (BOOL)isRAWPlusJPEG;
- (BOOL)isRAWPlusJPEGWithRAWOnTop;
- (BOOL)isReadyForPurgeSyndicationResources;
- (BOOL)isReferencedAsset;
- (BOOL)isResourceAvailableForResourceType:(unint64_t)a3;
- (BOOL)isSavedPhotosAsset;
- (BOOL)isScreenRecording;
- (BOOL)isSemanticEnhanceProcessingCandidate;
- (BOOL)isStreamedVideo;
- (BOOL)isSuggestedForSharingByPhotos;
- (BOOL)isSyncableChange;
- (BOOL)isTimelapsePlaceholder;
- (BOOL)isTrashed;
- (BOOL)isUnknown;
- (BOOL)isValidForJournalPersistence;
- (BOOL)isValidForPerceptualProcessing;
- (BOOL)isValidTypeForPersistence;
- (BOOL)isVideo;
- (BOOL)isVideoKeyFrameSet;
- (BOOL)isVisibleForSocialGroupKeyAssetFetch;
- (BOOL)isWalrusEnabled;
- (BOOL)migrateLegacyVideoAdjustments;
- (BOOL)migrateLocationDataIfNeededAfterOTARestore:(BOOL)a3;
- (BOOL)needsMomentUpdate;
- (BOOL)ocrDetectionComplete;
- (BOOL)placeholder_shouldAllowServerCopy;
- (BOOL)placeholder_shouldBakeInAdjustments;
- (BOOL)placeholder_shouldFlattenLivePhoto;
- (BOOL)promoteDeferredPreviewToFinalImageWithOutError:(id *)a3;
- (BOOL)promoteFromUnknownKind;
- (BOOL)promoteProxyToFinalVideoComplementWithOutError:(id *)a3;
- (BOOL)promoteSemanticEnhancePreviewToFinalImage:(id *)a3;
- (BOOL)promoteToGuestAsset:(id *)a3;
- (BOOL)pruneLocalVideoKeyFrameImage;
- (BOOL)renderableAdjustmentDictionary:(id *)a3 error:(id *)a4;
- (BOOL)repairAssetScopeValidationErrors:(id)a3;
- (BOOL)resetGuestAssetPromotion:(id *)a3;
- (BOOL)resetVideoKeyFrameTime;
- (BOOL)resetVideoKeyFrameTimeAndDeleteKeyFrameResource;
- (BOOL)reverseLocationDataIsValid;
- (BOOL)rm_createNewResourcesIn:(id)a3 inManagedObjectContext:(id)a4;
- (BOOL)savedAssetTypeIsSupportedForUpload;
- (BOOL)sceneAnalysisWasPerformedOnLatestAdjustment;
- (BOOL)setAttributesFromMainFileURL:(id)a3 mainFileMetadata:(id)a4 savedAssetType:(signed __int16)a5 bundleScope:(unsigned __int16)a6 isPlaceholder:(BOOL)a7 placeholderFileURL:(id)a8 imageSource:(CGImageSource *)a9 imageData:(id *)a10;
- (BOOL)setCameraCaptureDeviceFromMetadata:(id)a3;
- (BOOL)setCurrentAdjustmentAsOriginalAdjustment;
- (BOOL)setDefaultAdjustmentsIfNecessaryWithMainFileMetadata:(id)a3;
- (BOOL)setImageInfoFromImageMetadata:(id)a3 overwriteOriginalProperties:(BOOL)a4;
- (BOOL)setTimeExifTimestampStringFromMetadata:(id)a3;
- (BOOL)setTrashedState:(signed __int16)a3 forResourceType:(unint64_t)a4;
- (BOOL)setTrashedStateOnSpatialOverCaptureResources:(signed __int16)a3;
- (BOOL)setVideoInfoFromFileAtURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 overwriteOriginalProperties:(BOOL)a6;
- (BOOL)setupPlaceholderAssetWithRequiredPropertiesFromSourceAsset:(id)a3 placeholderAssetUUID:(id)a4 bundleScope:(unsigned __int16)a5 momentShare:(id)a6 importSessionID:(id)a7 bakeInAdjustmentsFromSourceAsset:(BOOL)a8 flattenLivePhoto:(BOOL)a9 copyTitleDescriptionAndKeywords:(BOOL)a10 copyCameraProcessingAdjustmentResources:(BOOL)a11 library:(id)a12;
- (BOOL)shiftedLocationIsValid;
- (BOOL)shouldIncludeInCPLCounts;
- (BOOL)shouldPurgeSyndicationResourcesWithChangedValues:(id)a3;
- (BOOL)shouldPushComputeSync;
- (BOOL)shouldSimulateQuarantineOriginalImageResourceOnPush;
- (BOOL)shouldSyncToSPL;
- (BOOL)shouldUseNonAdjustedVideo;
- (BOOL)supportsCloudUpload;
- (BOOL)syndicationOriginalResourcesAreLocal;
- (BOOL)transitionToDeferredProcessingNeededAdjustmentWithOriginalWidth:(unint64_t)a3 originalHeight:(unint64_t)a4 shouldSignalBackgroundProcessingNeeded:(BOOL)a5 reason:(id)a6;
- (BOOL)unQuarantineIfPossible;
- (BOOL)updateAttributesFromMainFileURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 error:(id *)a6;
- (BOOL)updateDeferredAdjustmentWithFullSizeRenderImageURL:(id)a3 videoURL:(id)a4 videoPosterURL:(id)a5 error:(id *)a6;
- (BOOL)updateExtendedAttributesWithError:(id *)a3;
- (BOOL)updateExtendedAttributesWithMetadata:(id)a3 error:(id *)a4;
- (BOOL)updateKindSubtypeIfScreenshot;
- (BOOL)updateKindSubtypeIfScreenshotWithMetadata:(id)a3;
- (BOOL)updatePlaybackVariationAndLoopingStyleFromAVAsset:(id)a3;
- (BOOL)updatePlaybackVariationAndLoopingStyleFromVariation:(unsigned __int16)a3;
- (BOOL)updatePlaybackVariationAndStyleFromOriginalMetadata:(id)a3;
- (BOOL)userCloudSharedLiked;
- (BOOL)validForPersistenceChangedForChangedKeys:(id)a3;
- (BOOL)validateForInsert:(id *)a3;
- (BOOL)validateForUpdate:(id *)a3;
- (BOOL)visibilityStateIsEqualToState:(signed __int16)a3;
- (CGSize)_targetSizeForInputSize:(CGSize)a3 maxPixelSize:(unint64_t)a4;
- (CGSize)imageSize;
- (CGSize)originalImageSize;
- (CGSize)spatialOverCaptureSize;
- (CGSize)unorientedSize;
- (CGSize)videoComplementSpatialOverCaptureSize;
- (CLLocation)cachedLocation;
- (CLLocation)location;
- (CLLocation)shiftedLocation;
- (CLLocationCoordinate2D)gpsCoordinate;
- (CLLocationCoordinate2D)pl_coordinate;
- (NSArray)allUniformTypeIdentifiers;
- (NSArray)sortedSidecarFiles;
- (NSData)embeddedThumbnailData;
- (NSData)faceRegions;
- (NSData)originalHash;
- (NSData)placeAnnotationData;
- (NSData)reverseLocationData;
- (NSDate)cachedNonPersistedVideoPlaybackURLExpiration;
- (NSDate)confirmedSpotlightSyncDate;
- (NSDate)dateForComparingAdjustmentVersions;
- (NSDate)localDateCreated;
- (NSDate)pl_date;
- (NSDictionary)inflightMetadata;
- (NSError)cachedNonPersistedVideoPlaybackURLError;
- (NSNumber)rawTimeZoneOffsetValue;
- (NSObject)inflightImage;
- (NSObject)inflightImageInMemory;
- (NSObject)inflightIndexSheetImage;
- (NSOrderedSet)orderedCloudComments;
- (NSOrderedSet)orderedLikeComments;
- (NSSet)allDetectedFaces;
- (NSSet)allFileURLs;
- (NSSet)filePathsWithoutThumbs;
- (NSSet)generatedAssetDescriptionNodes;
- (NSSet)libraryScopeContributors;
- (NSString)accessibilityDescription;
- (NSString)cloudOwnerDisplayName;
- (NSString)cloudOwnerEmail;
- (NSString)cloudOwnerFirstName;
- (NSString)cloudOwnerFullName;
- (NSString)cloudOwnerLastName;
- (NSString)editorBundleID;
- (NSString)fileExtension;
- (NSString)importedByBundleIdentifier;
- (NSString)importedByDisplayName;
- (NSString)inflightImagePath;
- (NSString)longDescription;
- (NSString)originalAssetsUUID;
- (NSString)originalFilename;
- (NSString)originalUniformTypeIdentifier;
- (NSString)pathForAdjustmentDirectory;
- (NSString)pathForAdjustmentFile;
- (NSString)pathForAdjustmentSecondaryDataFile;
- (NSString)pathForComputeDirectory;
- (NSString)pathForComputeSyncMediaAnalysisPayloadFile;
- (NSString)pathForComputeSyncWrapperFile;
- (NSString)pathForDiagnosticFile;
- (NSString)pathForFullsizeRenderImageFile;
- (NSString)pathForFullsizeRenderVideoFile;
- (NSString)pathForLargeDisplayableImageFile;
- (NSString)pathForLargeThumbnailFile;
- (NSString)pathForLegacySlalomRegionsArchive;
- (NSString)pathForMediumThumbnailFile;
- (NSString)pathForMetadataDirectory;
- (NSString)pathForOriginalAdjustmentFile;
- (NSString)pathForOriginalFile;
- (NSString)pathForPenultimateFullsizeRenderImageFile;
- (NSString)pathForPenultimateFullsizeRenderVideoFile;
- (NSString)pathForPrebakedLandscapeScrubberThumbnails;
- (NSString)pathForPrebakedPortraitScrubberThumbnails;
- (NSString)pathForSpatialOverCaptureContentFile;
- (NSString)pathForTrimmedVideoFile;
- (NSString)pathForVideoComplementSpatialOverCaptureContentFile;
- (NSString)pathForVideoFile;
- (NSString)pathForVideoPreviewFile;
- (NSString)pathForXMPFile;
- (NSString)publicGlobalUUID;
- (NSString)rawTimeZoneName;
- (NSString)syncedAdjustmentFingerprint;
- (NSString)textBadgeString;
- (NSString)title;
- (NSString)uuidDescription;
- (NSURL)assetURL;
- (NSURL)cachedNonPersistedVideoPlaybackURL;
- (NSURL)fileURLForLargeThumbnailFile;
- (NSURL)fileURLForThumbnailFile;
- (NSURL)mainFileURL;
- (NSURL)persistedFileSystemAttributesFileURL;
- (PLCloudSharedAlbumProtocol)cloudShareAlbum;
- (PLManagedAsset)originalAsset;
- (PLManagedAssetID)assetID;
- (PLPTPTransferableSidecarFile)ptpPhotoIrisSidecar;
- (PLRevGeoLocationInfo)locationInfo;
- (PLRevGeoPlaceAnnotation)placeAnnotation;
- (double)gpsHorizontalAccuracy;
- (double)pl_gpsHorizontalAccuracy;
- (id)_anyOriginalNonDerivativeAlternateImageResource;
- (id)_avAssetProxyForFullSize:(BOOL)a3 allowReadFromFile:(BOOL)a4;
- (id)_availableCloudResourcesForPhotosRequireUnadjusted:(BOOL)a3 allowPenultimate:(BOOL)a4;
- (id)_calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources;
- (id)_cloudSharedPathWithExtension:(id)a3;
- (id)_compactDebugDescription;
- (id)_cplRelationsForAssetInLibrary:(id)a3 orderKeyManager:(id)a4;
- (id)_createCPLResourceFromResourcePath:(id)a3 withResourceType:(unint64_t)a4 uniformTypeIdentifier:(id)a5 scopedIdentifier:(id)a6 fingerprintScheme:(id)a7;
- (id)_createImageResourceForResourceType:(unint64_t)a3 withPreviewImagePath:(id)a4 scopedIdentifier:(id)a5 forMaster:(BOOL)a6 fingerprintScheme:(id)a7;
- (id)_createJPEGResourcesFromFullSizePath:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 fingerprintScheme:(id)a6;
- (id)_createJPEGResourcesFromFullSizePath:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 forResourceTypes:(id)a6 fingerprintScheme:(id)a7;
- (id)_createVideoResourceFromVideoURL:(id)a3 withResourceType:(unint64_t)a4 scopedIdentifier:(id)a5 applyVideoAdjustments:(BOOL)a6 forMaster:(BOOL)a7 forPhotoIris:(BOOL)a8 fingerprintScheme:(id)a9;
- (id)_currentComputeStateVersion;
- (id)_effectiveMetadataForMainFileURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 shouldCache:(BOOL)a6 error:(id *)a7;
- (id)_generateDeferredAdjustmentWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 retryNumber:(unint64_t)a6 canUseMegaMoc:(BOOL)a7 allowCancellationByService:(BOOL)a8 completion:(id)a9;
- (id)_generatePosterFrameForVideoAtURL:(id)a3 withResourceType:(unint64_t)a4 scopedIdentifier:(id)a5 forMaster:(BOOL)a6 fingerprintScheme:(id)a7;
- (id)_generatePosterFrameResourcesFromVideoURL:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 fingerprintScheme:(id)a6;
- (id)_generateVideoResourcesFromURL:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5;
- (id)_hdrTypeDescription;
- (id)_imagePropertiesFromMetadata:(id)a3;
- (id)_installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityShouldRemoveLocalFile:(BOOL)a3 error:(id *)a4;
- (id)_kindDescription;
- (id)_mediaGroupUUIDForPersistence;
- (id)_mediaGroupUUIDFromPersistence:(id)a3;
- (id)_metadataFromMediaProperties:(id)a3 uniformTypeIdentifier:(id)a4 block:(id)a5;
- (id)_pathForSidecarResource:(id)a3;
- (id)_persistedResourceForResourceIdentity:(id)a3 error:(id *)a4;
- (id)_prettyDescription;
- (id)_rm_localResourceURLForResource:(id)a3;
- (id)_savedAssetTypeDescription;
- (id)_sizeOfVideoPreviewForAVAsset:(id)a3;
- (id)_sourceURLForAsyncEditWithBaseVersion:(int64_t)a3;
- (id)_videoComplementDerivativeResourcesForMaster:(id)a3;
- (id)activityViewController:(id)a3 itemForActivityType:(id)a4;
- (id)addLegacyFaceWithRelativeRect:(CGRect)a3 identifier:(signed __int16)a4 albumUUID:(id)a5;
- (id)addedDateData;
- (id)adjustedFileURLs;
- (id)adjustedPathForCPLResourceType:(unint64_t)a3;
- (id)adjustmentDataResource;
- (id)allAssetCPLResources;
- (id)allCPLResourcesForPruning;
- (id)allFileBackedResources;
- (id)allFileExtensions;
- (id)allMasterCPLResources;
- (id)allRequiredResourcesForCPLDisable;
- (id)analysisStateForWorkerType:(signed __int16)a3;
- (id)assetComparisonSortDescriptors;
- (id)assetResourceForCPLType:(unint64_t)a3;
- (id)assetURLForSidecarFile:(id)a3;
- (id)assetURLWithExtension:(id)a3;
- (id)avAssetProxyForFullSizeAllowReadFromFile:(BOOL)a3;
- (id)avAssetProxyForOriginalAllowReadFromFile:(BOOL)a3;
- (id)availableAdjustedCloudResourcesForPhotos:(BOOL)a3;
- (id)availableUnadjustedCloudResourcesForPhotos;
- (id)avalanchePickDescription;
- (id)bestAvaliableAdjustedResource;
- (id)cameraMake;
- (id)cameraModel;
- (id)cloudSharedAssetPathForPlaceholderKind:(signed __int16)a3;
- (id)cplAssetChangeWithMasterScopedIdentifier:(id)a3 withChangeType:(unint64_t)a4 shouldGenerateDerivatives:(BOOL)a5 orderKeyManager:(id)a6 computeSyncUploadEnabled:(BOOL)a7 inLibrary:(id)a8;
- (id)cplFullRecord;
- (id)cplMasterChangeInLibrary:(id)a3 shouldGenerateDerivatives:(BOOL)a4;
- (id)createResourcesForAssetInPhotoLibrary:(id)a3 shouldGenerateDerivatives:(BOOL)a4;
- (id)createResourcesForMaster:(id)a3 shouldGenerateDerivatives:(BOOL)a4 inPhotoLibrary:(id)a5;
- (id)dateCreatedData;
- (id)decodedFaceRegions;
- (id)descriptionForAnalysisStates;
- (id)descriptionForModernResources;
- (id)descriptionForNonCloudResources;
- (id)descriptionForResources;
- (id)descriptionForSceneAnalysis;
- (id)descriptionForSidecarFiles;
- (id)documentObservation;
- (id)duplicateAlbum;
- (id)duplicateSortPropertyNames;
- (id)duplicateSortPropertyNamesSkip;
- (id)edgesIn;
- (id)edgesOut;
- (id)evaluateWhiteBalanceValueWithOriginalExifProperties:(id)a3;
- (id)existingCloudMasterNeedsRepush:(BOOL *)a3;
- (id)extendedAttributesCreateIfNeeded:(BOOL)a3;
- (id)faceDescription;
- (id)fetchOrCreateResourceWithIdentity:(id)a3;
- (id)fetchResourceWithIdentity:(id)a3 error:(id *)a4;
- (id)fetchResourcesForAssetVersions:(id)a3 allowDerivatives:(BOOL)a4 additionalPredicate:(id)a5 relationshipKeyPathsForPrefetching:(id)a6 error:(id *)a7;
- (id)fetchSourceAssetForDuplicationIfExists;
- (id)fileTypeForFullsizeRenderImage;
- (id)fileURLForAdjustedLargeThumbnailFile;
- (id)fileURLForAdjustedMediumThumbnailFile;
- (id)fileURLForAsyncAdjustedRenderPreviewImage;
- (id)fileURLForCurrentDeferredProcessingPreviewFile;
- (id)fileURLForDeferredVideoComplement;
- (id)fileURLForFullsizeRenderImage;
- (id)fileURLForFullsizeRenderVideo;
- (id)fileURLForHypotheticalSidecarFileWithFilename:(id)a3;
- (id)fileURLForMediumThumbnailFile;
- (id)fileURLForMetadataWithExtension:(id)a3;
- (id)fileURLForNonAdjustedLargeThumbnailFile;
- (id)fileURLForNonAdjustedMediumThumbnailFile;
- (id)fileURLForOriginalVideoComplement;
- (id)filterCameraProcessingAdjustmentResourcesFromPlaceholderCloudResources:(id)a3;
- (id)fingerprintContext;
- (id)fingerprintScheme;
- (id)firstPersistedResourceMatching:(id)a3;
- (id)formattedCameraModel;
- (id)fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:(id)a3;
- (id)generateDeferredAdjustmentForCMMPlaceholderWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 completion:(id)a6;
- (id)generateDeferredAdjustmentWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 allowCancellationByService:(BOOL)a6 completion:(id)a7;
- (id)generatePortraitAdjustment:(id *)a3;
- (id)imageDataForThumbGenerationAndIfNeededRAWUTI:(id *)a3 isPreviewSource:(BOOL *)a4;
- (id)imageMediaMetadataForURL:(id)a3;
- (id)imageProperties;
- (id)imageWithFormat:(unsigned __int16)a3;
- (id)largestAvailableDataRepresentationAndType:(id *)a3;
- (id)lastUploadAttemptDate;
- (id)legacyFaceWithIdentifier:(signed __int16)a3;
- (id)lensModel;
- (id)libraryID;
- (id)localDateAndCreateIfNeededWithLocalDateCreator:(id)a3;
- (id)localResourcePathForMasterResource:(id)a3;
- (id)localResourcePathForMasterResourceWithCPLType:(unint64_t)a3 andUTI:(id)a4;
- (id)localVideoKeyFrameResource;
- (id)managedAssetForPhotoLibrary:(id)a3;
- (id)masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:(id *)a3 error:(id *)a4;
- (id)masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:(id *)a3 fullsizeRenderImageIfNecessary:(BOOL)a4 error:(id *)a5;
- (id)masterResourceForCPLType:(unint64_t)a3;
- (id)masterThumbnailFileURLIfLocal;
- (id)masterThumbnailResource;
- (id)mediaAnalysisAttributesInsertingIfNecessary;
- (id)mediaMetadataForResourceVersion:(unsigned int)a3 mediaMetadataType:(id *)a4;
- (id)mediaMetadataVirtualResources;
- (id)metadataFromMediaPropertiesOrOriginalResource;
- (id)mutableDetectedFaces;
- (id)mutableTemporalDetectedFaces;
- (id)nonAdjustedPathForCPLResourceType:(unint64_t)a3;
- (id)nonDynamicOriginalUTI;
- (id)nonPersistedResources;
- (id)originalVideoComplementUniformTypeIdentifier;
- (id)overflowAdjustmentDataResource;
- (id)pasteBoardRepresentation;
- (id)pathForAdjustedLargeSizeImageFile;
- (id)pathForAdjustedLargeThumbnailFile;
- (id)pathForAdjustedLargeVideoFile;
- (id)pathForAdjustedMediaMetadataFile;
- (id)pathForAdjustedMediumHDRVideoFile;
- (id)pathForAdjustedMediumThumbnailFile;
- (id)pathForAdjustedMediumVideoFile;
- (id)pathForAdjustedSmallVideoFile;
- (id)pathForAdjustmentDataFile;
- (id)pathForAlchemistImage;
- (id)pathForAsyncAdjustedRenderPreviewImageFile;
- (id)pathForBestAvailableFullsizeRenderImageFileOutIsSubstandard:(BOOL *)a3;
- (id)pathForCPLResourceType:(unint64_t)a3 adjusted:(BOOL)a4;
- (id)pathForCameraMetadataDiagnosticFile;
- (id)pathForCameraMetadataFile;
- (id)pathForCameraSpatialOverCaptureMetadataDiagnosticFile;
- (id)pathForDeferredProcessingPreviewFile;
- (id)pathForDeferredVideoComplementFile;
- (id)pathForFullsizeImageFile;
- (id)pathForFullsizeRenderImageFileWithUTI:(id)a3;
- (id)pathForGenerativePlaygroundFaceResourcesFile;
- (id)pathForLargeSizeImageFile;
- (id)pathForLocalVideoKeyFrame;
- (id)pathForMediaMetadataFile;
- (id)pathForMediumVideoFile;
- (id)pathForMetadataWithExtension:(id)a3;
- (id)pathForMutationsDirectory;
- (id)pathForNonAdjustedFullsizeImageFile;
- (id)pathForNonAdjustedLargeSizeImageFile;
- (id)pathForNonAdjustedLargeThumbnailFile;
- (id)pathForNonAdjustedLargeVideoFile;
- (id)pathForNonAdjustedMediumHDRVideoFile;
- (id)pathForNonAdjustedMediumThumbnailFile;
- (id)pathForNonAdjustedMediumVideoFile;
- (id)pathForNonAdjustedSmallVideoFile;
- (id)pathForOriginalVideoComplementDiagnosticFile;
- (id)pathForPenultimateFullsizeRenderImageFileWithUTI:(id)a3;
- (id)pathForReframeDiagnosticDirectory;
- (id)pathForReframeDiagnosticFile;
- (id)pathForSpatialOverCaptureDiagnosticFile;
- (id)pathForSubstandardFullsizeRenderImageFile;
- (id)pathForTransientVideoPosterFramePreview;
- (id)pathForVideoComplementFile;
- (id)pathForVideoMetadataFile;
- (id)pathForWallpaperComputeResourcesFile;
- (id)pathToOriginalVideoFile;
- (id)payloadForChangedKeys:(id)a3;
- (id)payloadID;
- (id)payloadIDForTombstone:(id)a3;
- (id)penultimateImageResource;
- (id)persistedAdjustedResources;
- (id)persistedOriginalImageResource;
- (id)persistedOriginalVideoComplementResource;
- (id)persistedOriginalVideoResource;
- (id)persistedResourcesMatching:(id)a3;
- (id)persistedResourcesWithRecipeID:(unsigned int)a3 andVersion:(unsigned int)a4;
- (id)photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:(id)a3;
- (id)photoIrisSidecarIgnoringSubtype:(BOOL)a3;
- (id)pictureTransferProtocolAssetsWithConversionSupport:(id)a3;
- (id)primaryStoreOriginalResource;
- (id)resourceForCPLType:(unint64_t)a3 version:(unsigned int)a4;
- (id)resourcesSortedByQuality;
- (id)resourcesWithVersion:(unsigned int)a3;
- (id)reverseGeoDescription;
- (id)rm_applyResourcesFromAssetChange:(id)a3 inLibrary:(id)a4;
- (id)rm_cplExpungeableMasterResourceStates;
- (id)rm_cplMasterResourceForResourceType:(unint64_t)a3;
- (id)rm_cplMasterResourcesFromCloudMaster:(id)a3 addOriginalResourceMode:(BOOL)a4;
- (id)rm_cplResourceForResourceType:(unint64_t)a3;
- (id)scopeIdentifier;
- (id)scopedIdentifier;
- (id)shortenedFilePath;
- (id)sidecarFileMatchingContentType:(id)a3 requireExactMatch:(BOOL)a4 requireSort:(BOOL)a5;
- (id)sidecarWithResourceObjectID:(id)a3;
- (id)sidecars;
- (id)sortPlaceholderCloudResourcesByOrderOfCloudReReference:(id)a3;
- (id)storedResourceForCPLResource:(id)a3 asset:(id)a4 adjusted:(BOOL)a5;
- (id)storedResourceForExternalResource:(id)a3 asset:(id)a4;
- (id)syncDescription;
- (id)syndicationDescription;
- (id)syndicationFileIdentifierForResourceType:(unsigned int)a3 version:(unsigned int)a4 recipeID:(unsigned int)a5 utiString:(id)a6;
- (id)syndicationOriginalResource;
- (id)syndicationOriginalVideoComplementResource;
- (id)syndicationResourceURLForResourceType:(unsigned int)a3 version:(unsigned int)a4 recipeID:(unsigned int)a5 utiString:(id)a6 error:(id *)a7;
- (id)syndicationResourcesDescription;
- (id)thumbnailIdentifier;
- (id)unadjustedDerivativeImageURLs;
- (id)urlForSideCarImageFile;
- (id)userAddCloudSharedCommentWithText:(id)a3;
- (id)validateForAssetID:(id)a3 resourceIdentity:(id)a4;
- (id)videoComplementData;
- (id)virtualResourcesThatReplaceMissingPersistedResources:(id)a3;
- (int)_avalancheTypeFromCplBurstFlags:(unint64_t)a3;
- (int)cloudCommentsStatusForOwnedAsset:(BOOL)a3;
- (int)embeddedThumbnailLength;
- (int)embeddedThumbnailOffset;
- (int)inferredTimeZoneOffset;
- (int)locationHash;
- (int64_t)_plAdjustmentBaseVersionFromCPLAdjustmentSourceType:(unint64_t)a3;
- (int64_t)_prepareFileSystemResourcesForAdjustmentsWithCurrentAdjustmentBaseVersion:(int64_t)a3 penultimateRenderedJPEGData:(id)a4 penultimateRenderedVideoContentURL:(id)a5 penultimateRenderedVideoComplementContentURL:(id)a6 fileIngestionType:(int64_t)a7;
- (int64_t)cameraProcessingAdjustmentTrashedState;
- (int64_t)cloudDeletionType;
- (int64_t)cloudSharedAssetPlaceholderKind;
- (int64_t)compareToAsset:(id)a3;
- (int64_t)height;
- (int64_t)originalHeight;
- (int64_t)originalImageOrientation;
- (int64_t)originalWidth;
- (int64_t)width;
- (signed)embeddedThumbnailHeight;
- (signed)embeddedThumbnailWidth;
- (signed)importedBy;
- (signed)originalOrientation;
- (signed)uploadAttempts;
- (unint64_t)_countForCommentRelationshipNamed:(id)a3 inverseRelationshipName:(id)a4;
- (unint64_t)bestResourceTypeForAdjustedFingerPrint;
- (unint64_t)cloudCommentsCount;
- (unint64_t)cplAssetSubtypeFromPLAssetSubtype:(signed __int16)a3;
- (unint64_t)cplBurstFlagsFromPLAvalancheType:(int)a3;
- (unint64_t)deferredProcessingHash;
- (unint64_t)effectiveThumbnailIndex;
- (unint64_t)likeCommentsCount;
- (unint64_t)masterResourceTypeForAdjustedAssetResourceType:(unint64_t)a3 flattenLivePhoto:(BOOL)a4;
- (unint64_t)originalFilesize;
- (unint64_t)originalResourceChoice;
- (unint64_t)ptpCloudMasterOriginalFileSize;
- (unint64_t)syndicationProcessingVersion;
- (unint64_t)totalCommentsCount;
- (unsigned)RAWBadgeAttribute;
- (unsigned)_calculateRenderTypeAdditionalFlagCheckAndUpdateIfNeededUnmanagedAdjustment:(id)a3 options:(id)a4 hasAdjustments:(BOOL)a5;
- (unsigned)_playbackVariationWithAdjustmentRenderTypes:(unsigned int)a3;
- (unsigned)editableDepthBadgeAttribute;
- (unsigned)expectedBundleScopeBasedOnAssetLockingProperties;
- (unsigned)expectedDeferredProcessingNeededOnAssetCreation;
- (unsigned)keywordBadgeAttribute;
- (unsigned)playbackControlBadgeAttribute;
- (unsigned)playbackVariationFromAVAsset:(id)a3 isLivePhotoVideoComplement:(BOOL)a4;
- (unsigned)proResBadgeAttribute;
- (unsigned)shareState;
- (unsigned)spatialAudioControlBadgeAttribute;
- (unsigned)syndicationHistory;
- (unsigned)syndicationProcessingValue;
- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 forSpatialTypeOfAVAsset:(id)a4;
- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withAdjustmentData:(id)a4 formatIdentifier:(id)a5 formatVersion:(id)a6;
- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withAdjustmentState:(unsigned __int16)a4;
- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withDepthType:(signed __int16)a4;
- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withMetadata:(id)a4;
- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withPlaybackVariation:(unsigned __int16)a4;
- (void)_applyFaceChangeToCPLAssetChange:(id)a3 inLibrary:(id)a4;
- (void)_applyPropertiesChangeToCPLAssetChange:(id)a3 withMasterScopedIdentifier:(id)a4 computeSyncUploadEnabled:(BOOL)a5 inLibrary:(id)a6;
- (void)_applyPropertiesFromCloudMaster:(id)a3;
- (void)_applyResourceChangeToCPLAsset:(id)a3 forChangeType:(unint64_t)a4 shouldGenerateDerivatives:(BOOL)a5 inLibrary:(id)a6;
- (void)_applySharingChangeToCPLAssetChange:(id)a3 inLibrary:(id)a4;
- (void)_asyncGenerateRenderImageFileWithSize:(CGSize)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 adjustmentDataBlob:(id)a6 originalImageFilePath:(id)a7 originalImageEXIFOrientation:(int64_t)a8 renderedImageFilePath:(id)a9 completionHandler:(id)a10;
- (void)_cleanupPenultimateResources;
- (void)_clearAcceptableCropRect;
- (void)_clearOverallAestheticScore;
- (void)_clearPreferredCropRect;
- (void)_clearStickerConfidenceAttributes;
- (void)_coordinatesFromDoubles:(double)a3 faceMaxX:(double)a4 faceMinY:(double)a5 faceMaxY:(double)a6 minX:(double *)a7 maxX:(double *)a8 minY:(double *)a9 maxY:(double *)a10;
- (void)_createPhotoResourcesForMaster:(id)a3 withOriginalResource:(id)a4 intoMasterResources:(id)a5 shouldGenerateDerivatives:(BOOL)a6 inPhotoLibrary:(id)a7;
- (void)_createVideoResourcesForMaster:(id)a3 intoMasterResources:(id)a4 shouldGenerateDerivatives:(BOOL)a5;
- (void)_dateCreatedDidChange:(id)a3;
- (void)_debugPrintAdjustmentState;
- (void)_deleteComputedAttributes;
- (void)_deleteDeferredIntermediatesForDeferredPhotoIdentifier:(id)a3 withFinalizer:(id)a4;
- (void)_duplicateProcessingChanges:(id)a3;
- (void)_fixDistantPastContentCreationDateWithItem:(id)a3;
- (void)_getLargestAvailableDataRepresentation:(id *)a3 type:(id *)a4;
- (void)_handleHighlightRelationshipChangeForKey:(id)a3 forAssetCountKey:(id)a4 newValue:(id)a5;
- (void)_loadReverseGeoIfNeeded;
- (void)_populateSyndicationAssetWithAssetType:(signed __int16)a3 subtype:(signed __int16)a4 contentType:(id)a5 videoComplementContentType:(id)a6 originalFilename:(id)a7;
- (void)_preserveRelationshipsOfDeletedGuestAsset:(id)a3;
- (void)_processRenderTypeUpdateForCameraAutoWithUnmanagedAdjustment:(id)a3 options:(id)a4 hasAdjustments:(BOOL)a5 updateRenderFlagsResult:(BOOL)a6;
- (void)_processRenderTypeUpdateForGenerativeEditsWithUnmanagedAdjustment:(id)a3 fullSizeRenderURL:(id)a4 hasAdjustments:(BOOL)a5;
- (void)_processRenderTypeUpdateForSleetCastWithUnmanagedAdjustment:(id)a3 fullSizeRenderURL:(id)a4 settingPayload:(id)a5 hasAdjustments:(BOOL)a6;
- (void)_promptForNilScopeIdentifierRadar;
- (void)_recordAssetPersonEdgeAndSocialGroupContainmentUpdateIfNeededWithChangedValues:(id)a3 inContext:(id)a4;
- (void)_reloadWidgetTimelineIfNeeded;
- (void)_removeAdjustmentDataResources;
- (void)_removeComputeResourceWithRecipeID:(unsigned int)a3 atPath:(id)a4;
- (void)_removeKeyAssetFromSuggestions:(id)a3;
- (void)_resetAllMediaProcessingVersionsIncludingVideo:(BOOL)a3;
- (void)_resetMediaAnalysisStateOnEditIncludingVideo:(BOOL)a3;
- (void)_rm_insertResource:(id)a3 forOtherDuplicatedAssetInMaster:(id)a4 inPhotoLibrary:(id)a5;
- (void)_setAllowedForAnalysisDependentValue:(id)a3 forKey:(id)a4;
- (void)_setBurstUuidFromMetadata:(id)a3;
- (void)_setColorSpaceNameFromMetadata:(id)a3;
- (void)_setHDRGainFromMetadata:(id)a3;
- (void)_setOriginalSizeAndOrientationFromMetadata:(id)a3;
- (void)_setPhotoIrisPropertiesFromMetadata:(id)a3;
- (void)_setSOCGroupIdentifierFromMetadata:(id)a3;
- (void)_setSavedAssetTypeFromMetadata:(id)a3;
- (void)_setSizeAndOrientationFromMetadata:(id)a3;
- (void)_setSyndicationStateFromContentsOfSearchableItem:(id)a3;
- (void)_setVideoComplementData:(id)a3;
- (void)_setupMediaConversionSourceURLCollection:(id)a3 destinationURLCollection:(id)a4 baseVersion:(int64_t)a5;
- (void)_updateAdjustmentFromAssetAdjustment:(id)a3 unmanagedAdjustment:(id)a4 fullSizeRenderURL:(id)a5 options:(id)a6;
- (void)_updateAssetSubtypeForCPLAssetChange:(id)a3;
- (void)_updateAssetSubtypeFromCPLAssetSubtype:(unint64_t)a3;
- (void)_updateAvalanchePropertiesFromAssetChange:(id)a3;
- (void)_updateBurstFlagsForCPLAssetChange:(id)a3 photoLibrary:(id)a4;
- (void)_updateConfirmedSpotlightSyncDateIfNeededForFullIndexSyncStartDate:(id)a3;
- (void)_updateCoreDateExtendedAttributes:(id)a3 fromMetadata:(id)a4;
- (void)_updateCoreExtendedAttributes:(id)a3 fromMetadata:(id)a4;
- (void)_updateDerivativesAndThumbnails:(BOOL)a3 withPreviewImage:(id)a4 thumbnailImage:(id)a5 metadata:(id)a6 didRevertToOriginal:(BOOL)a7 updateInternalResources:(BOOL)a8 isSubstandardRender:(BOOL)a9 isDeferred:(BOOL)a10;
- (void)_updateDestinationAssetCopyStateOnCMMAsset;
- (void)_updateIMCoreSyndicationForIdentifier:(id)a3 hide:(BOOL)a4;
- (void)_updateModificationDateForSyndication;
- (void)_updateOriginalResourceChoice;
- (void)_updatePackedBadgeAttributesIfNeeded:(int)a3;
- (void)_updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:(id)a3;
- (void)_updateSyndicationState:(unsigned __int16)a3 enabled:(BOOL)a4 logPrefix:(id)a5;
- (void)_writeOutAdjustmentsToFile:(id)a3;
- (void)addComment:(id)a3;
- (void)applyComputeSyncPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4 didInstallComputeSyncResource:(BOOL *)a5 computeSyncDownloadEnabled:(BOOL)a6;
- (void)applyFacesFromAssetChange:(id)a3 inSyncContext:(id)a4;
- (void)applyPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4;
- (void)applySharingPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4;
- (void)applyTrashedState:(signed __int16)a3 withTrashedReason:(unsigned __int16)a4 expungeReasonFromClient:(id)a5;
- (void)awakeFromFetch;
- (void)awakeFromInsert;
- (void)awakeFromSnapshotEvents:(unint64_t)a3;
- (void)copyAuxiliaryImagesFromImageSource:(CGImageSource *)a3 toDestination:(CGImageDestination *)a4 fromImageAtIndex:(unint64_t)a5 imageProperties:(id)a6 applyingOrientation:(signed __int16)a7 scalingToLongSideLength:(int64_t)a8;
- (void)createMasterIfNecessaryInLibrary:(id)a3;
- (void)dealloc;
- (void)delete;
- (void)deleteAdjustedResources;
- (void)deleteAssetComment:(id)a3;
- (void)deleteComment:(id)a3;
- (void)deleteComputeSyncResourceIfExists;
- (void)deleteFromDatabaseOnly;
- (void)deleteFromDatabaseOnlyWithReason:(id)a3;
- (void)deleteResourceForSidecarRepresentation:(id)a3;
- (void)deleteResourcesWithRecipeID:(unsigned int)a3 andVersion:(unsigned int)a4;
- (void)deleteWithReason:(id)a3;
- (void)didSave;
- (void)didSetCustomDateCreated;
- (void)didSetCustomLocation;
- (void)didTurnIntoFault;
- (void)ensurePlaybackStyleConsistencyWithKindSubtype:(id)a3;
- (void)expunge;
- (void)expungeTrashedSpatialOverCaptureResources;
- (void)fixupMemoriesWithMissingKeyAsset;
- (void)fixupPlaceholderAssetWithSavedAssetType:(signed __int16)a3;
- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 forceSRGBConversion:(BOOL)a7;
- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 metadata:(id)a7 forceSRGBConversion:(BOOL)a8 forFinalCameraImage:(BOOL)a9 saveCameraPreviewWellImage:(BOOL)a10;
- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 metadata:(id)a7 forceSRGBConversion:(BOOL)a8 saveCameraPreviewWellImage:(BOOL)a9;
- (void)generateLargeThumbnailFileIfNecessary;
- (void)generateThumbnailsWithImageSource:(CGImageSource *)a3 imageData:(id)a4 metadata:(id)a5 allowMediumPreview:(BOOL)a6 forceSRGBConversion:(BOOL)a7 forFinalCameraImage:(BOOL)a8 outSmallThumbnailData:(id *)a9 isPreviewSource:(BOOL)a10;
- (void)generateThumbnailsWithImageSource:(CGImageSource *)a3 imageData:(id)a4 metadata:(id)a5 allowMediumPreview:(BOOL)a6 forceSRGBConversion:(BOOL)a7 outSmallThumbnailData:(id *)a8 isPreviewSource:(BOOL)a9;
- (void)getFileURL:(id *)a3 originalFilename:(id *)a4 uti:(id *)a5 fileSize:(unint64_t *)a6 forSidecarMatchingUTI:(id)a7 requireExactMatch:(BOOL)a8;
- (void)implementsPLGraphEdgeReferenceObjectRecipient;
- (void)incrementUploadAttempts;
- (void)insertTableThumbImageRequestHints;
- (void)invalidateThumbnailIfNeededAfterMasterResourceChangeInLibrary:(id)a3;
- (void)markAsUnavailableCloudResourceOfType:(unint64_t)a3;
- (void)markForNeedingFaceDetection;
- (void)persistMetadataToFileURL:(id)a3;
- (void)persistMetadataToFilesystem;
- (void)postProcessResourceDependentPropertyChangesFromAssetChange:(id)a3 inLibrary:(id)a4;
- (void)prepareForDeletion;
- (void)purgeSyndicationResourcesAfterMediaAnalysisProcessing;
- (void)purgeSyndicationResourcesOriginalsOnly:(BOOL)a3;
- (void)recalculateImageRequestHints;
- (void)recalculateImageRequestHintsForResource:(id)a3 afterLocalAvailabilityChangeFrom:(signed __int16)a4 previousDataStoreKey:(id)a5;
- (void)recalculateIsDetectedScreenshot;
- (void)recalculateIsRecentlySaved;
- (void)recalculateRAWBadgeAttribute;
- (void)reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker;
- (void)reevaluateCameraProcessingAdjustmentState;
- (void)registerForChanges;
- (void)rejectSyndicatedAsset;
- (void)removeAllStillFrameSceneClassifications;
- (void)removeAllTemporalSceneClassifications;
- (void)removeAssetFromRelatedSuggestionsAndFixupSuggestions;
- (void)removeAssetFromUserAlbumSuggestionIfNeededWithChangedValues:(id)a3;
- (void)removeFromDuplicateAlbum;
- (void)removeLibraryScopeAndContributors;
- (void)removeLocalFileForResource:(id)a3;
- (void)removeLocalFileForResource:(id)a3 allowDCIMPath:(BOOL)a4;
- (void)removeSceneClassificationsOfType:(int64_t)a3;
- (void)removeSidecar:(id)a3;
- (void)removeTemporalSceneClassificationsOfType:(int64_t)a3;
- (void)reportSharedAssetIncrementalChange:(id)a3;
- (void)requestDeletionOfDeferredPhotoProcessingIntermediates;
- (void)resetKeyFaceOnVideoKeyFrameChange;
- (void)restoreSyndicatedAsset;
- (void)revalidateFaceAreaPoints;
- (void)revertToOriginal;
- (void)rm_createAssetResourcesForCPLResources:(id)a3 inLibrary:(id)a4;
- (void)rm_createMasterResourcesForCPLResources:(id)a3 master:(id)a4 inLibrary:(id)a5;
- (void)rm_createMasterResourcesIn:(id)a3 inManagedObjectContext:(id)a4;
- (void)setAccessibilityDescription:(id)a3;
- (void)setAdjustments:(id)a3 options:(id)a4;
- (void)setAssetAdjustmentsStateFromAdjustmentRenderType:(unsigned int)a3;
- (void)setAssetID:(id)a3;
- (void)setAvalanchePickType:(int)a3;
- (void)setCachedLocation:(id)a3;
- (void)setCachedNonPersistedVideoPlaybackURL:(id)a3;
- (void)setCachedNonPersistedVideoPlaybackURLError:(id)a3;
- (void)setCachedNonPersistedVideoPlaybackURLExpiration:(id)a3;
- (void)setCameraProcessingAdjustmentStateFromAdjustmentRenderTypes:(unsigned int)a3;
- (void)setConfirmedSpotlightSyncDate:(id)a3;
- (void)setConversationAlbumWithConversationID:(id)a3;
- (void)setCurrentSleetCastFromMetadata:(id)a3;
- (void)setDateCreated:(id)a3;
- (void)setDayGroupHighlightBeingAssets:(id)a3;
- (void)setDayGroupHighlightBeingExtendedAssets:(id)a3;
- (void)setDayGroupHighlightBeingSummaryAssets:(id)a3;
- (void)setDepthTypeFromAdjustmentRenderTypes:(unsigned int)a3;
- (void)setDepthTypeFromMetadata:(id)a3;
- (void)setDestinationAssetCopyStateOnSourceAsset:(signed __int16)a3;
- (void)setDisableFileSystemPersistency:(BOOL)a3;
- (void)setEditableDepthBadgeAttribute:(unsigned __int8)a3;
- (void)setEditableDepthBadgeAttributeFromMetadata:(id)a3;
- (void)setEditorBundleID:(id)a3;
- (void)setEffectiveThumbnailIndex:(unint64_t)a3;
- (void)setEmbeddedThumbnailHeight:(signed __int16)a3;
- (void)setEmbeddedThumbnailLength:(int)a3;
- (void)setEmbeddedThumbnailOffset:(int)a3;
- (void)setEmbeddedThumbnailWidth:(signed __int16)a3;
- (void)setFaceAdjustmentVersion:(id)a3;
- (void)setFaceCrop:(id)a3;
- (void)setFaceRegions:(id)a3;
- (void)setFaceRegionsFromCGImageProperties:(id)a3;
- (void)setFaceRegionsFromImageMetadata:(CGImageMetadata *)a3;
- (void)setHeight:(int64_t)a3;
- (void)setHidden:(BOOL)a3;
- (void)setHighlightBeingAssets:(id)a3;
- (void)setHighlightBeingExtendedAssets:(id)a3;
- (void)setHighlightBeingSummaryAssets:(id)a3;
- (void)setImageInfoFromOriginalImageMetadata:(id)a3;
- (void)setImageSize:(CGSize)a3;
- (void)setImportSessionAlbumWithImportSessionID:(id)a3;
- (void)setImportedBy:(signed __int16)a3;
- (void)setImportedByBundleIdentifier:(id)a3;
- (void)setImportedByDisplayName:(id)a3;
- (void)setInflightImageInMemory:(id)a3;
- (void)setInflightImagePath:(id)a3;
- (void)setInflightIndexSheetImage:(id)a3;
- (void)setInflightMetadata:(id)a3;
- (void)setIsInFlight:(BOOL)a3;
- (void)setIsSmartStyleableWithMetadata:(id)a3;
- (void)setKeywordBadgeAttribute:(unsigned __int8)a3;
- (void)setKeywordsFromImageProperties:(id)a3;
- (void)setLastUploadAttemptDate:(id)a3;
- (void)setLibraryScope:(id)a3;
- (void)setLibraryScope:(id)a3 withContributors:(id)a4;
- (void)setLibraryScopeContributors:(id)a3;
- (void)setLibraryScopeWithCurrentUserAsContributor:(id)a3;
- (void)setLocalOnlyDelete:(BOOL)a3;
- (void)setLocation:(id)a3;
- (void)setLocationFromPersistedAttributes:(id)a3;
- (void)setLocationHash:(int)a3;
- (void)setLongDescription:(id)a3;
- (void)setMetadataFromCustomRenderedValue:(int64_t)a3;
- (void)setMoment:(id)a3;
- (void)setNeedsMomentUpdate:(BOOL)a3;
- (void)setOriginalAsset:(id)a3;
- (void)setOriginalAssetsUUID:(id)a3;
- (void)setOriginalFilename:(id)a3;
- (void)setOriginalFilesize:(unint64_t)a3;
- (void)setOriginalHash:(id)a3;
- (void)setOriginalHeight:(int64_t)a3;
- (void)setOriginalOrientation:(signed __int16)a3;
- (void)setOriginalResourceChoice:(unint64_t)a3;
- (void)setOriginalSizeAndOrientationFromImageProperties:(id)a3;
- (void)setOriginalWidth:(int64_t)a3;
- (void)setPhotoIrisStillDisplayTime:(id *)a3;
- (void)setPhotoIrisVideoDuration:(id *)a3;
- (void)setPlaceAnnotationData:(id)a3;
- (void)setPlaybackControlBadgeAttribute:(unsigned __int8)a3;
- (void)setPlaybackControlBadgeAttributeFromMetadata:(id)a3;
- (void)setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:(unsigned __int16)a3;
- (void)setPlaybackVariationAndLoopingStyleFromAdjustmentRenderTypes:(unsigned int)a3;
- (void)setProResBadgeAttribute:(unsigned __int8)a3;
- (void)setPublicGlobalUUID:(id)a3;
- (void)setRAWBadgeAttribute:(unsigned __int8)a3;
- (void)setReverseLocationData:(id)a3;
- (void)setReverseLocationDataIsValid:(BOOL)a3;
- (void)setSavedAssetType:(signed __int16)a3;
- (void)setShiftedLocation:(id)a3;
- (void)setShiftedLocationIsValid:(BOOL)a3;
- (void)setSizeAndOrientationFromImageProperties:(id)a3;
- (void)setSpatialAudioControlBadgeAttribute:(unsigned __int8)a3;
- (void)setSpatialAudioControlBadgeAttributeFromMetadata:(id)a3;
- (void)setSpatialTypeFromMetadata:(id)a3;
- (void)setSyndicationAttributesFromMainFileURL:(id)a3 metadata:(id)a4;
- (void)setSyndicationFilenameAndDirectoryWithOriginalFilename:(id)a3;
- (void)setSyndicationLivePhotoAttributesFromMainFileURL:(id)a3 metadata:(id)a4 videoComplementFileURL:(id)a5;
- (void)setThumbnailDataFromImageProperties:(id)a3;
- (void)setTitle:(id)a3;
- (void)setTrashedState:(signed __int16)a3;
- (void)setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:(id)a3 originalFilename:(id)a4;
- (void)setUniformTypeIdentifierFromOriginalFile;
- (void)setUniformTypeIdentifierFromPathExtension:(id)a3;
- (void)setUploadAttempts:(signed __int16)a3;
- (void)setUserCloudSharedLiked:(BOOL)a3;
- (void)setUuid:(id)a3;
- (void)setVideoInfoOnMasterFromAVAsset:(id)a3;
- (void)setVideoKeyFrameTime:(id *)a3;
- (void)setWasGuestAsset:(BOOL)a3;
- (void)setWidth:(int64_t)a3;
- (void)setupPropertiesOnExistingMaster:(id)a3;
- (void)setupPropertiesOnNewCloudMaster:(id)a3 withPlaceholderSourceAsset:(id)a4 uniformTypeIdentifier:(id)a5;
- (void)simulateQuarantineOriginalImageResourceOnPush:(id)a3;
- (void)synchronizeWithPersistedFileSystemAttributes;
- (void)synchronouslyFetchAdjustmentBlobWithCompletionHandler:(id)a3;
- (void)synchronouslyFetchAdjustmentDataWithCompletionHandler:(id)a3;
- (void)synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:(id)a3 withCompletionHandler:(id)a4;
- (void)syndicatedAssetDidSaveToUserLibrary;
- (void)trashWithReason:(unsigned __int16)a3;
- (void)unTrash;
- (void)unregisterForChanges;
- (void)unsaveSyndicatedAsset;
- (void)updateAdjustmentFileWithAdjustmentRenderTypes:(unsigned int)a3;
- (void)updateAssetAdjustmentsStateIfNeededFromAdjustmentFile;
- (void)updateAssetKindAndPlaybackStyleIfNeededWithKind:(signed __int16)a3;
- (void)updateAssetKindFromUniformTypeIdentifier;
- (void)updateAssetPropertiesFromAdjustmentFile;
- (void)updateAudioExtendedAttributesFromMetadata:(id)a3;
- (void)updateComputeSyncResourceAfterDownloadWithResource:(id)a3 onDemandDownload:(BOOL)a4;
- (void)updateImageExtendedAttributesFromMetadata:(id)a3;
- (void)updateImageExtendedGenerativeAttributesFromMetadata:(id)a3;
- (void)updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary:(BOOL)a3;
- (void)updatePanoramosityWithMetadata:(id)a3;
- (void)updatePhotoIrisMetadataWithMediaGroupUUID:(id)a3 videoDuration:(id *)a4 stillDisplayTime:(id *)a5;
- (void)updatePhotoIrisVisibilityStateWithVitalityScore:(id)a3;
- (void)updatePlaybackStyleWithLivePhotoPlayability:(BOOL)a3;
- (void)updateSmartStyleVideoCastFromMetadata:(id)a3;
- (void)updateSpatialTypeFromAdjustmentRenderTypes:(unsigned int)a3 hasAdjustment:(BOOL)a4 adjustedMediaMetadata:(id)a5;
- (void)updateSyndicationStateWithSavedToLibrary:(BOOL)a3;
- (void)updateSyndicationStateWithSyndicationProcessingValue:(unsigned __int16)a3;
- (void)updateVideoAttributesFromMetadata:(id)a3 overwriteOriginalProperties:(BOOL)a4;
- (void)updateVideoExtendedAttributesFromMetadata:(id)a3;
- (void)updateWithCustomAssetProperties:(id)a3;
- (void)userDeleteCloudSharedComment:(id)a3;
- (void)userReadAllCloudSharedComments;
- (void)willSave;
- (void)willTurnIntoFault;
@end

@implementation PLManagedAsset

+ (id)predicateToExcludeHiddenAssets
{
  return (id)[a1 predicateToExcludeHiddenAssetsWithHiddenKeyPath:@"hidden"];
}

+ (void)enumerateImageRequestHintData:(id)a3 assetWidth:(int64_t)a4 assetHeight:(int64_t)a5 libraryID:(id)a6 startingOffset:(int64_t)a7 assetID:(id)a8 block:(id)a9
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  id v16 = a3;
  id v48 = a6;
  id v47 = a8;
  id v46 = a9;
  char v54 = 0;
  id v17 = v16;
  uint64_t v18 = [v17 bytes];
  v45 = v17;
  unint64_t v19 = [v17 length];
  uint64_t v50 = 0;
  v51 = &v50;
  uint64_t v52 = 0x2020000000;
  int64_t v53 = a7;
  if (v19 - 1 < a7)
  {
    v44 = [MEMORY[0x1E4F28B00] currentHandler];
    [v44 handleFailureInMethod:a2 object:a1 file:@"PLManagedAsset+RM.m" lineNumber:630 description:@"enumerateImageRequestHintData: startingOffset must be less than hint length when data is available."];
  }
  v49[0] = MEMORY[0x1E4F143A8];
  v49[1] = 3221225472;
  v49[2] = __114__PLManagedAsset_RM__enumerateImageRequestHintData_assetWidth_assetHeight_libraryID_startingOffset_assetID_block___block_invoke;
  v49[3] = &unk_1E5875498;
  v49[4] = &v50;
  v49[5] = v19;
  v20 = (void (**)(void, void))MEMORY[0x19F38D650](v49);
  v21 = v51 + 3;
  unint64_t v22 = v51[3];
  if (v22 < v19 && !v54)
  {
    double v23 = (double)a4;
    double v24 = (double)a5;
    double v25 = (double)(a5 * a4);
    while (1)
    {
      unint64_t v26 = v18 + v22;
      void *v21 = v22 + 3;
      uint64_t v27 = *(unsigned char *)(v18 + v22 + 2) & 3;
      v28 = PLDataStoreForClassIDAndLibraryID(v27, v48);
      if (!v28) {
        break;
      }
      uint64_t v29 = [(id)objc_opt_class() keyLengthWithDataPreview:*(unsigned __int8 *)(v18 + v51[3])];
      if (!v29)
      {
        v42 = PLBackendGetLog();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
        {
          v43 = [v47 uuid];
          *(_DWORD *)buf = 138543362;
          v56 = v43;
          _os_log_impl(&dword_19B3C7000, v42, OS_LOG_TYPE_ERROR, "Invalid keyLen. Exiting hint enumeration for assetID: %{public}@", buf, 0xCu);
        }
        goto LABEL_29;
      }
      v30 = (unsigned __int8 *)(v18 + v51[3]);
      _ZF = v27 == 3 || v27 == 0;
      if (_ZF && *v30 >= 0x10u)
      {
        v32 = PLBackendGetLog();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        {
          v33 = [v47 uuid];
          *(_DWORD *)buf = 138543362;
          v56 = v33;
          _os_log_impl(&dword_19B3C7000, v32, OS_LOG_TYPE_ERROR, "Invalid FilePath strategy hint data. Skipping hint assetID: %{public}@", buf, 0xCu);
        }
        v20[2](v20, v29);
      }
      else
      {
        if (v27 > 1) {
          [v28 keyFromKeyStruct:v30];
        }
        else {
        id v34 = +[PLTaggedPointerDataStoreKey keyWithKeyStruct:v30 keyLength:v29 forStoreClassID:v27 inLibraryWithID:v48];
        }
        int v35 = [v34 recipeIDForAssetID:v47];
        v20[2](v20, v29);
        _H0 = *(_WORD *)v26;
        __asm { FCVT            D0, H0 }
        double v41 = sqrt(_D0);
        *(float *)&double v41 = round(v23 / v41) * round(v24 / v41) / v25;
        (*((void (**)(id, uint64_t, void, void, void *, id, unint64_t, uint64_t, float, int, char *))v46
         + 2))(v46, v51[3], (*(unsigned __int8 *)(v26 + 2) >> 2) & 1, (*(unsigned __int8 *)(v26 + 2) >> 3) & 1, v28, v34, v26, v29 + 3, *(float *)&v41, v35, &v54);
      }
      v21 = v51 + 3;
      unint64_t v22 = v51[3];
      if (v22 >= v19 || v54) {
        goto LABEL_30;
      }
    }
    v42 = PLImageManagerGetLog();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      LODWORD(v56) = v27;
      _os_log_impl(&dword_19B3C7000, v42, OS_LOG_TYPE_ERROR, "[RM]: unable to parse image request hints (can't find data store class for classID: %d", buf, 8u);
    }
    v28 = 0;
LABEL_29:
  }
LABEL_30:

  _Block_object_dispose(&v50, 8);
}

uint64_t __114__PLManagedAsset_RM__enumerateImageRequestHintData_assetWidth_assetHeight_libraryID_startingOffset_assetID_block___block_invoke(uint64_t result, unsigned int a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) += a2;
  uint64_t v2 = *(void *)(*(void *)(result + 32) + 8);
  if (!a2 || *(void *)(v2 + 24) >= *(void *)(result + 40)) {
    *(void *)(v2 + 24) = 0x7FFFFFFFFFFFFFFFLL;
  }
  return result;
}

+ (BOOL)canPlayPhotoIrisWithPhotoIris:(BOOL)a3 photoIrisPlaceholder:(BOOL)a4 hasAdjustments:(BOOL)a5 videoCpVisibilityState:(unsigned __int16)a6
{
  if (!a3 || a4) {
    return 0;
  }
  else {
    return [a1 isVideoComplementVisibilityStatePlayable:a6 hasAdjustments:a5];
  }
}

+ (BOOL)isVideoComplementVisibilityStatePlayable:(unsigned __int16)a3 hasAdjustments:(BOOL)a4
{
  if ((a3 | ((a3 & 8) >> 3))) {
    int v4 = (a3 >> 3) & 1;
  }
  else {
    int v4 = !a4 | ((a3 & 2) >> 1);
  }
  if ((a3 & 4) != 0) {
    return (a3 & 1) == 0;
  }
  else {
    return v4;
  }
}

+ (id)predicateToExcludeTrashedAssets
{
  pl_dispatch_once();
  uint64_t v2 = (void *)predicateToExcludeTrashedAssets_pl_once_object_9;
  return v2;
}

+ (id)predicateToExcludeNonvisibleBurstAssets
{
  pl_dispatch_once();
  uint64_t v2 = (void *)predicateToExcludeNonvisibleBurstAssets_pl_once_object_13;
  return v2;
}

+ (id)entityName
{
  return @"Asset";
}

+ (BOOL)isPhotoIrisPlaceholderWithPhotoIris:(BOOL)a3 videoCpDuration:(int64_t)a4 isCloudShared:(BOOL)a5 videoCpFilePath:(id)a6
{
  BOOL v8 = a3;
  id v9 = a6;
  v10 = v9;
  LOBYTE(v11) = 0;
  if (!a4 && !a5 && v8)
  {
    if (v9)
    {
      v12 = [MEMORY[0x1E4F28CB8] defaultManager];
      int v11 = [v12 fileExistsAtPath:v10] ^ 1;
    }
    else
    {
      LOBYTE(v11) = 1;
    }
  }

  return v11;
}

+ (id)predicateForAssetSubtype:(signed __int16)a3
{
  int v3 = a3;
  if (!a3)
  {
    v7 = [MEMORY[0x1E4F28B00] currentHandler];
    [v7 handleFailureInMethod:a2, a1, @"PLManagedAsset.m", 994, @"Invalid parameter not satisfying: %@", @"subtype != PLAssetSubtypeNone" object file lineNumber description];
  }
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(%K != %d) AND (%K == %d)", @"kindSubtype", 0, @"kindSubtype", v3);
}

+ (id)predicateForCinematicVideos
{
  return (id)[a1 _predicateForDepthType:2];
}

+ (id)_predicateForDepthType:(signed __int16)a3
{
  int v3 = a3;
  v13[2] = *MEMORY[0x1E4F143B8];
  if (!a3)
  {
    v12 = [MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInMethod:a2, a1, @"PLManagedAsset.m", 738, @"Invalid parameter not satisfying: %@", @"depthType != PLDepthTypeNone" object file lineNumber description];
  }
  int v4 = (void *)MEMORY[0x1E4F28BA0];
  v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(%K != %d)", @"depthType", 0);
  v13[0] = v5;
  v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(%K == %d)", @"depthType", v3);
  v13[1] = v6;
  v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:2];
  BOOL v8 = [v4 andPredicateWithSubpredicates:v7];

  return v8;
}

void __86__PLManagedAsset_predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath___block_invoke()
{
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(noindex:($avalanchePickType) = %d) OR (noindex:($avalanchePickType) >= %d AND (((noindex:($avalanchePickType) & %i) == %i) OR ((noindex:($avalanchePickType) & %i) == %i)))", 0, 8, 8, 8, 16, 16);
  uint64_t v0 = [v2 copy];
  v1 = (void *)predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath__pl_once_object_14;
  predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath__pl_once_object_14 = v0;
}

void __66__PLManagedAsset_predicateToExcludeHiddenAssetsWithHiddenKeyPath___block_invoke()
{
  [MEMORY[0x1E4F28F60] predicateWithFormat:@"noindex:($hidden) == NO"];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 copy];
  v1 = (void *)predicateToExcludeHiddenAssetsWithHiddenKeyPath__pl_once_object_11;
  predicateToExcludeHiddenAssetsWithHiddenKeyPath__pl_once_object_11 = v0;
}

void __73__PLManagedAsset_predicateToExcludeTrashedAssetsWithTrashedStateKeyPath___block_invoke()
{
  objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:($trashedState) == %d", 0);
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = [v2 copy];
  v1 = (void *)predicateToExcludeTrashedAssetsWithTrashedStateKeyPath__pl_once_object_10;
  predicateToExcludeTrashedAssetsWithTrashedStateKeyPath__pl_once_object_10 = v0;
}

+ (id)predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath:(id)a3
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  pl_dispatch_once();
  v10 = @"avalanchePickType";
  int v4 = (void *)MEMORY[0x1E4F28C68];
  id v5 = (id)predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath__pl_once_object_14;
  v6 = [v4 expressionForKeyPath:v3];

  v11[0] = v6;
  v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:&v10 count:1];
  BOOL v8 = [v5 predicateWithSubstitutionVariables:v7];

  return v8;
}

+ (id)predicateToExcludeTrashedAssetsWithTrashedStateKeyPath:(id)a3
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  pl_dispatch_once();
  v10 = @"trashedState";
  int v4 = (void *)MEMORY[0x1E4F28C68];
  id v5 = (id)predicateToExcludeTrashedAssetsWithTrashedStateKeyPath__pl_once_object_10;
  v6 = [v4 expressionForKeyPath:v3];

  v11[0] = v6;
  v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:&v10 count:1];
  BOOL v8 = [v5 predicateWithSubstitutionVariables:v7];

  return v8;
}

+ (id)predicateToExcludeHiddenAssetsWithHiddenKeyPath:(id)a3
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  pl_dispatch_once();
  v10 = @"hidden";
  int v4 = (void *)MEMORY[0x1E4F28C68];
  id v5 = (id)predicateToExcludeHiddenAssetsWithHiddenKeyPath__pl_once_object_11;
  v6 = [v4 expressionForKeyPath:v3];

  v11[0] = v6;
  v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:&v10 count:1];
  BOOL v8 = [v5 predicateWithSubstitutionVariables:v7];

  return v8;
}

void __57__PLManagedAsset_predicateToExcludeNonvisibleBurstAssets__block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) predicateToExcludeNonvisibleBurstAssetsWithAvalanchePickTypeKeyPath:@"avalanchePickType"];
  uint64_t v1 = [v3 copy];
  id v2 = (void *)predicateToExcludeNonvisibleBurstAssets_pl_once_object_13;
  predicateToExcludeNonvisibleBurstAssets_pl_once_object_13 = v1;
}

void __49__PLManagedAsset_predicateToExcludeTrashedAssets__block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) predicateToExcludeTrashedAssetsWithTrashedStateKeyPath:@"trashedState"];
  uint64_t v1 = [v3 copy];
  id v2 = (void *)predicateToExcludeTrashedAssets_pl_once_object_9;
  predicateToExcludeTrashedAssets_pl_once_object_9 = v1;
}

+ (id)predicateToExcludeVideosWithVideoKeyFrameSetWithKeyPathToAsset:(id)a3
{
  id v5 = a3;
  if (!v5)
  {
    BOOL v8 = [MEMORY[0x1E4F28B00] currentHandler];
    [v8 handleFailureInMethod:a2, a1, @"PLManagedAsset.m", 1980, @"Invalid parameter not satisfying: %@", @"keyPathToAsset" object file lineNumber description];
  }
  v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K.%K != %d || (%K.%K == %d && %K.%K == %d)", v5, @"kind", 1, v5, @"videoKeyFrameValue", 0, v5, @"videoKeyFrameTimeScale", 0);

  return v6;
}

+ (id)predicateForRAWAndRPlusJAssets
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(%K > 1) AND (noindex:(%K) & %u) != %u", @"packedBadgeAttributes", @"packedBadgeAttributes", 6, 0);
}

- (BOOL)migrateLocationDataIfNeededAfterOTARestore:(BOOL)a3
{
  BOOL v3 = a3;
  id v5 = [(PLManagedAsset *)self locationData];
  int64_t v6 = +[PLManagedAsset _locationDataFormat:v5];
  if (v6 == 2)
  {
    char v7 = 0;
    goto LABEL_15;
  }
  BOOL v8 = [(PLManagedAsset *)self dateCreated];
  id v9 = +[PLManagedAsset newLocationFromLocationData:v5 timestampIfMissing:v8];
  if (!v6)
  {
    v10 = [(PLManagedAsset *)self mainFileURL];
    if ([(PLManagedAsset *)self complete]
      && ([MEMORY[0x1E4F28CB8] defaultManager],
          int v11 = objc_claimAutoreleasedReturnValue(),
          [v10 path],
          v12 = objc_claimAutoreleasedReturnValue(),
          int v13 = [v11 fileExistsAtPath:v12 isDirectory:0],
          v12,
          v11,
          v13))
    {
      id v14 = objc_alloc(MEMORY[0x1E4F8CC48]);
      v15 = [(PLManagedObject *)self photoLibrary];
      id v16 = [v15 libraryBundle];
      id v17 = [v16 timeZoneLookup];
      uint64_t v18 = (void *)[v14 initWithMediaURL:v10 timeZoneLookup:v17];

      unint64_t v19 = [v18 gpsLocation];
      if (v19)
      {
        id v20 = objc_alloc(MEMORY[0x1E4F1E5F0]);
        [v9 coordinate];
        double v22 = v21;
        double v24 = v23;
        [v19 altitude];
        double v26 = v25;
        [v19 horizontalAccuracy];
        double v28 = v27;
        [v19 verticalAccuracy];
        double v30 = v29;
        [v19 course];
        double v32 = v31;
        [v19 speed];
        double v34 = v33;
        int v35 = [v19 timestamp];
        uint64_t v36 = objc_msgSend(v20, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:", v35, v22, v24, v26, v28, v30, v32, v34);

        id v9 = (id)v36;
      }
    }
    else if (!v3)
    {
      char v7 = 0;
      goto LABEL_13;
    }
    [(PLManagedAsset *)self setLocation:v9];
    char v7 = 1;
LABEL_13:

    goto LABEL_14;
  }
  [(PLManagedAsset *)self setLocation:v9];
  char v7 = 1;
LABEL_14:

LABEL_15:
  if (v6 == 2) {
    BOOL v37 = 1;
  }
  else {
    BOOL v37 = v7;
  }

  return v37;
}

+ (id)newLocationFromLocationData:(id)a3 timestampIfMissing:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (!v6 || ![v6 length]) {
    goto LABEL_8;
  }
  uint64_t v8 = [a1 _locationDataFormat:v6];
  if (!v8)
  {
    long long v18 = 0uLL;
    [v6 getBytes:&v18 length:16];
    CLLocationCoordinate2D v16 = CLLocationCoordinate2DMake(*(CLLocationDegrees *)&v18, *((CLLocationDegrees *)&v18 + 1));
    id v14 = 0;
    if (!+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:")) {
      goto LABEL_9;
    }
    uint64_t v17 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1E5F0]), "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", v7, v16.latitude, v16.longitude, 0.0, 0.0, 0.0);
LABEL_13:
    id v14 = (void *)v17;
    goto LABEL_9;
  }
  if (v8 == 1)
  {
    uint64_t v17 = objc_msgSend(MEMORY[0x1E4F28DC0], "pl_safeUnarchiveObjectFromData:class:", v6, objc_opt_class());
    goto LABEL_13;
  }
  if (v8 != 2)
  {
LABEL_8:
    id v14 = 0;
    goto LABEL_9;
  }
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  [v6 getBytes:&v18 length:64];
  long long v9 = v19;
  long long v10 = v20;
  long long v11 = v21;
  CLLocationCoordinate2D v12 = CLLocationCoordinate2DMake(*(CLLocationDegrees *)&v18, *((CLLocationDegrees *)&v18 + 1));
  int v13 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSinceReferenceDate:*((double *)&v11 + 1)];
  if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:", v12.latitude, v12.longitude))
  {
    id v14 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1E5F0]), "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:", v13, v12.latitude, v12.longitude, v9, v10, *(double *)&v11);
  }
  else
  {
    id v14 = 0;
  }

LABEL_9:
  return v14;
}

+ (int64_t)_locationDataFormat:(id)a3
{
  uint64_t v3 = [a3 length];
  if ((v3 & 0xFFFFFFFFFFFFFFBFLL) != 0) {
    return v3 != 16;
  }
  else {
    return 2;
  }
}

+ (id)newLocationDataFromLocation:(id)a3
{
  if (!a3) {
    return 0;
  }
  id v3 = a3;
  [v3 coordinate];
  objc_msgSend(v3, "coordinate", v4);
  v14[1] = v5;
  [v3 altitude];
  v14[2] = v6;
  [v3 horizontalAccuracy];
  v14[3] = v7;
  [v3 verticalAccuracy];
  v14[4] = v8;
  [v3 course];
  v14[5] = v9;
  [v3 speed];
  v14[6] = v10;
  long long v11 = [v3 timestamp];

  [v11 timeIntervalSinceReferenceDate];
  v14[7] = v12;

  return (id)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBytes:v14 length:64];
}

- (id)documentObservation
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (documentObservation_onceToken != -1) {
    dispatch_once(&documentObservation_onceToken, &__block_literal_global_8217);
  }
  if (documentObservation_observationClass)
  {
    id v3 = [(PLManagedAsset *)self mediaAnalysisAttributes];
    uint64_t v4 = [v3 characterRecognitionAttributes];
    uint64_t v5 = [v4 characterRecognitionData];

    if (v5)
    {
      id v11 = 0;
      uint64_t v6 = [MEMORY[0x1E4F28DC0] unarchivedObjectOfClass:documentObservation_observationClass fromData:v5 error:&v11];
      id v7 = v11;
      if (!v6 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR))
      {
        uint64_t v10 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)buf = 138543618;
        int v13 = v10;
        __int16 v14 = 2112;
        id v15 = v7;
        _os_log_error_impl(&dword_19B3C7000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to unarchive OCR VNDocumentObservation for asset: %{public}@, error: %@", buf, 0x16u);
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
    id v8 = v6;
  }
  else
  {
    id v8 = 0;
  }
  return v8;
}

void __42__PLManagedAsset_OCR__documentObservation__block_invoke()
{
  documentObservation_observationClass = (uint64_t)NSClassFromString(&cfstr_Vndocumentobse_0.isa);
  if (!documentObservation_observationClass && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t v0 = 0;
    _os_log_error_impl(&dword_19B3C7000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "VNDocumentObservation not available in current process.", v0, 2u);
  }
}

- (BOOL)promoteFromUnknownKind
{
  if ([(PLManagedAsset *)self kind] == 3)
  {
    id v3 = [(PLManagedAsset *)self originalUniformTypeIdentifier];
    uint64_t v4 = [MEMORY[0x1E4F8CDF8] typeWithIdentifier:v3];
    if ([v4 conformsToType:*MEMORY[0x1E4F44400]])
    {
      uint64_t v5 = 0;
    }
    else
    {
      if (([v4 conformsToType:*MEMORY[0x1E4F44448]] & 1) == 0)
      {
        if (![(PLManagedAsset *)self attemptPromoteFromUnknownKindUsingCloudMaster])
        {
          BOOL v6 = 0;
LABEL_11:

          return v6;
        }
LABEL_8:
        id v7 = [(PLManagedObject *)self photoLibrary];
        id v8 = [v7 thumbnailManager];

        uint64_t v9 = [(PLManagedAsset *)self thumbnailIdentifier];
        uint64_t v10 = (int)[(PLManagedAsset *)self thumbnailIndex];
        id v11 = [(PLManagedAsset *)self uuid];
        [v8 deleteThumbnailsWithIdentifier:v9 orIndex:v10 uuid:v11];

        [(PLManagedAsset *)self setEffectiveThumbnailIndex:0x7FFFFFFFFFFFFFFFLL];
        uint64_t v12 = [(PLManagedAsset *)self uniformTypeIdentifier];

        if (!v12) {
          [(PLManagedAsset *)self setUniformTypeIdentifier:v3];
        }

        BOOL v6 = 1;
        goto LABEL_11;
      }
      uint64_t v5 = 1;
    }
    [(PLManagedAsset *)self updateAssetKindAndPlaybackStyleIfNeededWithKind:v5];
    goto LABEL_8;
  }
  return 0;
}

- (BOOL)attemptPromoteFromUnknownKindUsingCloudMaster
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v3 = [(PLManagedAsset *)self master];
  uint64_t v4 = [v3 uniformTypeIdentifier];
  uint64_t v5 = [v3 allMasterResources];
  BOOL v6 = (void *)MEMORY[0x1E4F28F60];
  id v7 = [MEMORY[0x1E4F59940] imageDerivativeTypes];
  id v8 = [v6 predicateWithFormat:@"cplType IN %@", v7];
  uint64_t v9 = [v5 filteredSetUsingPredicate:v8];
  uint64_t v10 = [v9 count];

  if (v10)
  {
    if (*MEMORY[0x1E4F59AC0])
    {
      uint64_t v13 = 0;
      goto LABEL_12;
    }
    id v11 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = [(PLManagedAsset *)self uuid];
      *(_DWORD *)buf = 138412802;
      double v23 = v4;
      __int16 v24 = 2112;
      double v25 = v12;
      __int16 v26 = 2112;
      double v27 = v3;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEFAULT, "Guessing PLAssetTypeImage for UTI: %@ on asset: %@ from master %@", buf, 0x20u);
    }
    uint64_t v13 = 0;
  }
  else
  {
    __int16 v14 = (void *)MEMORY[0x1E4F28F60];
    id v15 = [MEMORY[0x1E4F59940] videoDerivativeTypes];
    uint64_t v16 = [v14 predicateWithFormat:@"cplType IN %@", v15];
    uint64_t v17 = [v5 filteredSetUsingPredicate:v16];
    uint64_t v18 = [v17 count];

    if (!v18)
    {
      BOOL v20 = 0;
      goto LABEL_13;
    }
    if (*MEMORY[0x1E4F59AC0])
    {
      uint64_t v13 = 1;
      goto LABEL_12;
    }
    id v11 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      long long v19 = [(PLManagedAsset *)self uuid];
      *(_DWORD *)buf = 138412802;
      double v23 = v4;
      __int16 v24 = 2112;
      double v25 = v19;
      __int16 v26 = 2112;
      double v27 = v3;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEFAULT, "Guessing PLAssetTypeVideo for UTI: %@ on asset: %@ from master %@", buf, 0x20u);
    }
    uint64_t v13 = 1;
  }

LABEL_12:
  [(PLManagedAsset *)self updateAssetKindAndPlaybackStyleIfNeededWithKind:v13];
  BOOL v20 = 1;
LABEL_13:

  return v20;
}

+ (id)assetsToConsiderForTypePromotionInContext:(id)a3 withExtensions:(id)a4 error:(id *)a5
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  if (!v9)
  {
    double v30 = [MEMORY[0x1E4F28B00] currentHandler];
    [v30 handleFailureInMethod:a2, a1, @"PLManagedAsset+NewFormats.m", 60, @"Invalid parameter not satisfying: %@", @"context" object file lineNumber description];
  }
  double v33 = v9;
  if (!v10)
  {
    double v31 = [MEMORY[0x1E4F28B00] currentHandler];
    [v31 handleFailureInMethod:a2, a1, @"PLManagedAsset+NewFormats.m", 61, @"Invalid parameter not satisfying: %@", @"extensions" object file lineNumber description];
  }
  double v32 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"kind = %d", 3);
  id v11 = [MEMORY[0x1E4F1CA48] array];
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id obj = v10;
  uint64_t v12 = [obj countByEnumeratingWithState:&v36 objects:v41 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v37;
    do
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v37 != v14) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = (void *)MEMORY[0x1E4F28F60];
        uint64_t v17 = [NSString stringWithFormat:@".%@", *(void *)(*((void *)&v36 + 1) + 8 * i)];
        uint64_t v18 = [v16 predicateWithFormat:@"filename ENDSWITH[c] %@", v17];
        [v11 addObject:v18];
      }
      uint64_t v13 = [obj countByEnumeratingWithState:&v36 objects:v41 count:16];
    }
    while (v13);
  }

  long long v19 = (void *)MEMORY[0x1E4F28BA0];
  v40[0] = v32;
  BOOL v20 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v11];
  v40[1] = v20;
  long long v21 = [MEMORY[0x1E4F1C978] arrayWithObjects:v40 count:2];
  double v22 = [v19 andPredicateWithSubpredicates:v21];

  double v23 = (void *)MEMORY[0x1E4F1C0D0];
  __int16 v24 = +[PLManagedAsset entityName];
  double v25 = [v23 fetchRequestWithEntityName:v24];

  [v25 setFetchBatchSize:100];
  [v25 setPredicate:v22];
  id v35 = 0;
  __int16 v26 = [v33 executeFetchRequest:v25 error:&v35];
  id v27 = v35;
  uint64_t v28 = v27;
  if (a5 && v27) {
    *a5 = v27;
  }

  return v26;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->inflightMetadata, 0);
  objc_storeStrong((id *)&self->inflightIndexSheetImage, 0);
  objc_storeStrong((id *)&self->inflightImagePath, 0);
  objc_storeStrong((id *)&self->inflightImageInMemory, 0);
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURLError, 0);
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURLExpiration, 0);
  objc_storeStrong((id *)&self->cachedNonPersistedVideoPlaybackURL, 0);
  objc_storeStrong((id *)&self->_assetID, 0);
  objc_storeStrong((id *)&self->_cachedLocation, 0);
  objc_storeStrong((id *)&self->_cachedLocalDateCreated, 0);
  objc_storeStrong((id *)&self->_cachedDateCreated, 0);
  objc_storeStrong((id *)&self->_reverseGeoDescription, 0);
}

- (void)setDisableFileSystemPersistency:(BOOL)a3
{
  self->_disableFileSystemPersistency = a3;
}

- (BOOL)disableFileSystemPersistency
{
  return self->_disableFileSystemPersistency;
}

- (void)setNeedsMomentUpdate:(BOOL)a3
{
  self->_needsMomentUpdate = a3;
}

- (BOOL)needsMomentUpdate
{
  return self->_needsMomentUpdate;
}

- (void)setInflightMetadata:(id)a3
{
}

- (NSDictionary)inflightMetadata
{
  return self->inflightMetadata;
}

- (void)setInflightIndexSheetImage:(id)a3
{
}

- (NSObject)inflightIndexSheetImage
{
  return self->inflightIndexSheetImage;
}

- (void)setInflightImagePath:(id)a3
{
}

- (NSString)inflightImagePath
{
  return self->inflightImagePath;
}

- (void)setInflightImageInMemory:(id)a3
{
}

- (NSObject)inflightImageInMemory
{
  return self->inflightImageInMemory;
}

- (void)setCachedNonPersistedVideoPlaybackURLError:(id)a3
{
}

- (NSError)cachedNonPersistedVideoPlaybackURLError
{
  return self->cachedNonPersistedVideoPlaybackURLError;
}

- (void)setCachedNonPersistedVideoPlaybackURLExpiration:(id)a3
{
}

- (NSDate)cachedNonPersistedVideoPlaybackURLExpiration
{
  return self->cachedNonPersistedVideoPlaybackURLExpiration;
}

- (void)setCachedNonPersistedVideoPlaybackURL:(id)a3
{
}

- (void)setAssetID:(id)a3
{
}

- (void)setLocalOnlyDelete:(BOOL)a3
{
  self->localOnlyDelete = a3;
}

- (BOOL)isLocalOnlyDelete
{
  return self->localOnlyDelete;
}

- (void)setCachedLocation:(id)a3
{
}

- (CLLocation)cachedLocation
{
  return self->_cachedLocation;
}

- (double)pl_gpsHorizontalAccuracy
{
  id v2 = [(PLManagedAsset *)self additionalAttributes];
  [v2 gpsHorizontalAccuracy];
  double v4 = v3;

  return v4;
}

- (NSDate)pl_date
{
  cachedDateCreated = self->_cachedDateCreated;
  if (!cachedDateCreated)
  {
    double v4 = [(PLManagedAsset *)self dateCreated];
    uint64_t v5 = self->_cachedDateCreated;
    self->_cachedDateCreated = v4;

    cachedDateCreated = self->_cachedDateCreated;
  }
  return cachedDateCreated;
}

- (CLLocationCoordinate2D)pl_coordinate
{
  if (!self->_isCoordinateCached)
  {
    [(PLManagedAsset *)self latitude];
    CLLocationDegrees v4 = v3;
    [(PLManagedAsset *)self longitude];
    CLLocationCoordinate2D v6 = CLLocationCoordinate2DMake(v4, v5);
    BOOL v7 = +[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:");
    p_cachedCoordinate = &self->_cachedCoordinate;
    if (v7)
    {
      p_cachedCoordinate->double latitude = v6.latitude;
      self->_cachedCoordinate.double longitude = v6.longitude;
    }
    else
    {
      CLLocationCoordinate2D *p_cachedCoordinate = *(CLLocationCoordinate2D *)MEMORY[0x1E4F1E750];
    }
    self->_isCoordinateCached = 1;
  }
  double latitude = self->_cachedCoordinate.latitude;
  double longitude = self->_cachedCoordinate.longitude;
  result.double longitude = longitude;
  result.double latitude = latitude;
  return result;
}

- (id)activityViewController:(id)a3 itemForActivityType:(id)a4
{
  if ([a4 isEqualToString:@"com.apple.UIKit.activity.CopyToPasteboard"]) {
    [(PLManagedAsset *)self pasteBoardRepresentation];
  }
  else {
  CLLocationDegrees v5 = [(PLManagedAsset *)self assetURL];
  }
  return v5;
}

- (int)inferredTimeZoneOffset
{
  id v2 = [(PLManagedAsset *)self additionalAttributes];
  double v3 = [v2 inferredTimeZoneOffset];
  int v4 = [v3 integerValue];

  return v4;
}

- (NSNumber)rawTimeZoneOffsetValue
{
  id v2 = [(PLManagedAsset *)self additionalAttributes];
  double v3 = [v2 timeZoneOffset];

  return (NSNumber *)v3;
}

- (NSString)rawTimeZoneName
{
  id v2 = [(PLManagedAsset *)self additionalAttributes];
  double v3 = [v2 timeZoneName];

  return (NSString *)v3;
}

- (id)localDateAndCreateIfNeededWithLocalDateCreator:(id)a3
{
  id v4 = a3;
  CLLocationDegrees v5 = self->_cachedLocalDateCreated;
  CLLocationCoordinate2D v6 = v5;
  if (v5)
  {
    BOOL v7 = v5;
  }
  else
  {
    id v8 = [(PLManagedAsset *)self additionalAttributes];
    id v9 = [v8 inferredTimeZoneOffset];
    if (!v9)
    {
      id v10 = [v4 generateInferredTimeZoneOffsetForAsset:self];
      [v8 setInferredTimeZoneOffset:v10];
    }
    BOOL v7 = [(PLManagedAsset *)self localDateCreated];
  }
  return v7;
}

- (double)gpsHorizontalAccuracy
{
  id v2 = [(PLManagedAsset *)self additionalAttributes];
  [v2 gpsHorizontalAccuracy];
  double v4 = v3;

  return v4;
}

- (NSDate)localDateCreated
{
  cachedLocalDateCreated = self->_cachedLocalDateCreated;
  if (!cachedLocalDateCreated)
  {
    double v4 = [(PLManagedAsset *)self pl_date];
    objc_msgSend(v4, "dateByAddingTimeInterval:", (double)-[PLManagedAsset inferredTimeZoneOffset](self, "inferredTimeZoneOffset"));
    CLLocationDegrees v5 = (NSDate *)objc_claimAutoreleasedReturnValue();
    CLLocationCoordinate2D v6 = self->_cachedLocalDateCreated;
    self->_cachedLocalDateCreated = v5;

    cachedLocalDateCreated = self->_cachedLocalDateCreated;
  }
  return cachedLocalDateCreated;
}

- (int64_t)compareToAsset:(id)a3
{
  id v4 = a3;
  CLLocationDegrees v5 = [(PLManagedAsset *)self dateCreated];
  CLLocationCoordinate2D v6 = [v4 dateCreated];
  int64_t v7 = [v5 compare:v6];

  if (!v7)
  {
    id v8 = [(PLManagedAsset *)self addedDate];
    id v9 = [v4 addedDate];
    int64_t v7 = [v8 compare:v9];

    if (!v7)
    {
      id v10 = [(PLManagedAsset *)self filename];
      id v11 = [v4 filename];
      int64_t v7 = [v10 compare:v11];
    }
  }

  return v7;
}

- (id)assetComparisonSortDescriptors
{
  v7[3] = *MEMORY[0x1E4F143B8];
  id v2 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"dateCreated" ascending:1];
  double v3 = objc_msgSend(MEMORY[0x1E4F29008], "sortDescriptorWithKey:ascending:", @"addedDate", 1, v2);
  v7[1] = v3;
  id v4 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"filename" ascending:1];
  v7[2] = v4;
  CLLocationDegrees v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v7 count:3];

  return v5;
}

- (BOOL)isInterestingForAvalanche
{
  return ([(PLManagedAsset *)self avalanchePickType] >> 3) & 1;
}

- (BOOL)visibilityStateIsEqualToState:(signed __int16)a3
{
  if (!a3)
  {
    if ([(PLManagedAsset *)self visibilityState]) {
      return 0;
    }
    goto LABEL_10;
  }
  if (a3 == 1)
  {
    if ([(PLManagedAsset *)self visibilityState] != 1) {
      return 0;
    }
LABEL_10:
    if (([(PLManagedAsset *)self hidden] & 1) == 0) {
      return ![(PLManagedAsset *)self isInTrash];
    }
    return 0;
  }
  if (a3 != 2) {
    return 0;
  }
  if ([(PLManagedAsset *)self visibilityState] == 2
    || ([(PLManagedAsset *)self hidden] & 1) != 0)
  {
    return 1;
  }
  return [(PLManagedAsset *)self isInTrash];
}

- (id)descriptionForModernResources
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  double v3 = [MEMORY[0x1E4F28E78] string];
  id v4 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"qualitySortValue" ascending:1];
  CLLocationDegrees v5 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"version" ascending:0];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  CLLocationCoordinate2D v6 = [(PLManagedAsset *)self resourcesSortedByQuality];
  v19[0] = v4;
  v19[1] = v5;
  int64_t v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v19 count:2];
  id v8 = [v6 sortedArrayUsingDescriptors:v7];

  uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v16 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = [*(id *)(*((void *)&v15 + 1) + 8 * i) debugDescription];
        [v3 appendFormat:@"resource: %@\n", v13];
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v20 count:16];
    }
    while (v10);
  }

  return v3;
}

- (id)faceDescription
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  double v3 = +[PLDescriptionBuilder plainMultiLineDescriptionBuilder];
  id v4 = [(PLManagedAsset *)self faceAdjustmentVersion];
  [v3 appendName:@"adjustmentVersion" object:v4];

  CLLocationDegrees v5 = [(PLManagedAsset *)self additionalAttributes];
  objc_msgSend(v3, "appendName:integerValue:", @"analysisVersion", (int)objc_msgSend(v5, "faceAnalysisVersion"));

  CLLocationCoordinate2D v6 = [(PLManagedAsset *)self detectedFaces];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = [*(id *)(*((void *)&v14 + 1) + 8 * i) debugLogDescription];
        [v3 appendName:@"face" object:v11];
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }
  uint64_t v12 = [v3 build];

  return v12;
}

- (id)descriptionForNonCloudResources
{
  double v3 = [MEMORY[0x1E4F28E78] string];
  [v3 appendString:@"CPL not enabled, resource list may not be complete\n"];
  id v4 = [(PLManagedAsset *)self pathForOriginalFile];
  CLLocationDegrees v5 = __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(@"Original", v4);
  [v3 appendString:v5];

  CLLocationCoordinate2D v6 = [(PLManagedAsset *)self pathForFullsizeImageFile];
  uint64_t v7 = __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(@"FullSize", v6);
  [v3 appendString:v7];

  uint64_t v8 = [(PLManagedAsset *)self pathForLargeThumbnailFile];
  uint64_t v9 = __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(@"Medium (3MP)", v8);
  [v3 appendString:v9];

  uint64_t v10 = [(PLManagedAsset *)self pathForMediumThumbnailFile];
  uint64_t v11 = __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(@"Thumb", v10);
  [v3 appendString:v11];

  uint64_t v12 = [(PLManagedAsset *)self pathForSubstandardFullsizeRenderImageFile];
  uint64_t v13 = __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(@"Substandard", v12);
  [v3 appendString:v13];

  return v3;
}

id __49__PLManagedAsset_descriptionForNonCloudResources__block_invoke(void *a1, void *a2)
{
  double v3 = (void *)MEMORY[0x1E4F28CB8];
  id v4 = a2;
  id v5 = a1;
  CLLocationCoordinate2D v6 = [v3 defaultManager];
  int v7 = [v6 fileExistsAtPath:v4];

  uint64_t v8 = @"N";
  if (v7) {
    uint64_t v8 = @"Y";
  }
  uint64_t v9 = [NSString stringWithFormat:@"%@ : %@ : %@\n", v5, v4, v8];

  return v9;
}

- (id)descriptionForSceneAnalysis
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  double v3 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [v3 sceneClassifications];

  id v5 = (void *)MEMORY[0x1E4F28E78];
  CLLocationCoordinate2D v6 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v7 = (int)[v6 sceneAnalysisVersion];
  uint64_t v8 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v9 = [v8 sceneAnalysisTimestamp];
  uint64_t v10 = [v5 stringWithFormat:@"version: %ld\ntimestamp: %@\n%lu total", v7, v9, objc_msgSend(v4, "count")];

  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v11 = v4;
  uint64_t v12 = [v11 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v29 != v14) {
          objc_enumerationMutation(v11);
        }
        long long v16 = [*(id *)(*((void *)&v28 + 1) + 8 * i) debugLogDescription];
        [v10 appendFormat:@"\n%@", v16];
      }
      uint64_t v13 = [v11 countByEnumeratingWithState:&v28 objects:v32 count:16];
    }
    while (v13);
  }

  [(PLManagedAsset *)self packedPreferredCropRect];
  [(PLManagedAsset *)self packedAcceptableCropRect];
  PLSplitToCGRectFromInt64();
  PLSplitToCGRectFromInt64();
  v27.double width = 0.0 * (double)self->_width;
  v27.double height = 0.0 * (double)self->_height;
  v35.origin.x = v27.width;
  v35.origin.y = v27.height;
  v35.size.double width = v27.width;
  v35.size.double height = v27.height;
  long long v17 = NSStringFromRect(v35);
  v36.origin = (CGPoint)v27;
  v36.size = v27;
  long long v18 = NSStringFromRect(v36);
  [v10 appendFormat:@"\nPreferred Crop Rect: %@\nAcceptable Crop Rect: %@", v17, v18];

  if ([(PLManagedAsset *)self faceAreaPoints] < 0)
  {
    double v23 = *MEMORY[0x1E4F1DB28];
    double v24 = *(double *)(MEMORY[0x1E4F1DB28] + 8);
    double v20 = *(double *)(MEMORY[0x1E4F1DB28] + 16);
    double v22 = *(double *)(MEMORY[0x1E4F1DB28] + 24);
  }
  else
  {
    PLSplitToDoubleFromInt64();
    double width = (double)self->_width;
    double v20 = (0.0 - 0.0) * width;
    double height = (double)self->_height;
    double v22 = (0.0 - 0.0) * height;
    double v23 = 0.0 * width;
    double v24 = 0.0 * height;
  }
  double v25 = NSStringFromRect(*(NSRect *)&v23);
  [v10 appendFormat:@"\nFace Area Rect: %@", v25];

  return v10;
}

- (id)descriptionForAnalysisStates
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v2 = [(PLManagedAsset *)self analysisStates];
  double v3 = [MEMORY[0x1E4F28E78] string];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = v2;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v3 length]) {
          [v3 appendFormat:@"\n"];
        }
        uint64_t v10 = [v9 debugLogDescription];
        [v3 appendFormat:@"%@", v10];
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }

  return v3;
}

- (id)descriptionForSidecarFiles
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = [(PLManagedAsset *)self sidecars];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = 0;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(void *)(*((void *)&v10 + 1) + 8 * i);
        if (!v5)
        {
          uint64_t v5 = [MEMORY[0x1E4F28E78] string];
        }
        [v5 appendFormat:@"SIDECAR: %@", v8];
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

- (id)shortenedFilePath
{
  id v2 = [(PLManagedAsset *)self pathForOriginalFile];
  uint64_t v3 = [v2 rangeOfString:@"/Media/"];
  if (v4)
  {
    objc_msgSend(v2, "substringWithRange:", v3, objc_msgSend(v2, "length") - v3);
    id v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v5 = v2;
  }
  uint64_t v6 = v5;

  return v6;
}

- (BOOL)isPlayableVideo:(id *)a3
{
  BOOL v5 = [(PLManagedAsset *)self isPhotoIris];
  if (![(PLManagedAsset *)self isVideo] && !v5)
  {
    id v6 = 0;
    if (!a3)
    {
      BOOL v7 = 0;
      goto LABEL_40;
    }
LABEL_39:
    BOOL v7 = 0;
    *a3 = v6;
    goto LABEL_40;
  }
  uint64_t v8 = (void *)MEMORY[0x19F38D3B0]();
  uint64_t v9 = [(PLManagedObject *)self photoLibrary];
  int v10 = [v9 isCloudPhotoLibraryEnabled];

  if (!v10)
  {
    if (v5) {
      [(PLManagedAsset *)self pathForVideoComplementFile];
    }
    else {
    uint64_t v19 = [(PLManagedAsset *)self pathForOriginalFile];
    }
    id v6 = 0;
    BOOL v7 = 1;
    if (!v19) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  if (v5) {
    uint64_t v11 = 18;
  }
  else {
    uint64_t v11 = 1;
  }
  id v34 = 0;
  BOOL v12 = [(PLManagedAsset *)self _isResourceAvailableForResourceType:v11 outResource:&v34];
  id v13 = v34;
  long long v14 = v13;
  if (v12)
  {
    uint64_t v15 = [v13 uniformTypeIdentifier];
    long long v16 = [v15 identifier];

    uint64_t v17 = [v14 cplFileURL];
    id v18 = [v17 path];

    if ([(id)objc_opt_class() _isPlayableVideoUTI:v16])
    {
      if (v5)
      {
        id v18 = v18;
        id v6 = 0;
        BOOL v7 = 1;
        uint64_t v19 = v18;
      }
      else
      {
        double v20 = [(PLManagedAsset *)self master];
        uint64_t v21 = [v20 mediaMetadata];
        double v22 = [v21 valueForKey:@"data"];

        if (v22)
        {
          double v23 = (void *)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithAVProxyData:v22 timeZoneLookup:0];
          double v24 = v23;
          if (v23)
          {
            char v25 = [v23 isPlayable];
            BOOL v7 = v25;
            id v6 = 0;
            if (a3 && (v25 & 1) == 0)
            {
              id v6 = [v24 videoCodecName];
              BOOL v7 = 0;
            }
          }
          else
          {
            id v6 = 0;
            BOOL v7 = 1;
          }
        }
        else
        {
          id v6 = 0;
          BOOL v7 = 1;
        }

        uint64_t v19 = 0;
      }
    }
    else
    {
      uint64_t v19 = 0;
      id v6 = 0;
      BOOL v7 = 0;
    }
  }
  else
  {
    id v18 = 0;
    long long v16 = 0;
    uint64_t v19 = 0;
    id v6 = 0;
    BOOL v7 = 1;
  }

  if (v19)
  {
LABEL_30:
    __int16 v26 = [MEMORY[0x1E4F28CB8] defaultManager];
    int v27 = [v26 fileExistsAtPath:v19];

    if (v27)
    {
      long long v28 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v19 isDirectory:0];
      long long v29 = (void *)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithAVURL:v28 timeZoneLookup:0];
      long long v30 = v29;
      if (v29)
      {
        char v31 = [v29 isPlayable];
        BOOL v7 = v31;
        if (a3)
        {
          if ((v31 & 1) == 0)
          {
            uint64_t v32 = [v30 videoCodecName];

            BOOL v7 = 0;
            id v6 = (id)v32;
          }
        }
      }
    }
  }
LABEL_36:

  if (a3 && !v7)
  {
    id v6 = v6;
    goto LABEL_39;
  }
LABEL_40:

  return v7;
}

- (NSURL)assetURL
{
  uint64_t v3 = [(PLManagedAsset *)self fileExtension];
  uint64_t v4 = [(PLManagedAsset *)self assetURLWithExtension:v3];

  return (NSURL *)v4;
}

- (id)assetURLForSidecarFile:(id)a3
{
  id v4 = a3;
  BOOL v5 = v4;
  if (v4)
  {
    id v6 = (void *)MEMORY[0x1E4F442D8];
    BOOL v7 = [v4 uniformTypeIdentifier];
    uint64_t v8 = [v6 typeWithIdentifier:v7];
    uint64_t v9 = [v8 preferredFilenameExtension];

    int v10 = (void *)MEMORY[0x1E4F1CB10];
    uint64_t v11 = NSString;
    BOOL v12 = [(PLManagedAsset *)self uuid];
    id v13 = [v5 index];
    long long v14 = [v11 stringWithFormat:@"%@://%@/%@.%@?%@=%@&%@=%@", @"assets-library", @"asset", @"asset", v9, @"id", v12, @"sci", v13];
    uint64_t v15 = [v10 URLWithString:v14];
  }
  else
  {
    long long v16 = (void *)MEMORY[0x1E4F1CB10];
    uint64_t v17 = NSString;
    uint64_t v9 = [(PLManagedAsset *)self fileExtension];
    BOOL v12 = [(PLManagedAsset *)self uuid];
    id v13 = [v17 stringWithFormat:@"%@://%@/%@.%@?%@=%@", @"assets-library", @"asset", @"asset", v9, @"id", v12];
    uint64_t v15 = [v16 URLWithString:v13];
  }

  return v15;
}

- (id)assetURLWithExtension:(id)a3
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  BOOL v5 = [(PLManagedAsset *)self sidecars];
  uint64_t v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v18;
    while (2)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        int v10 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        uint64_t v11 = [v10 originalFilename];
        BOOL v12 = [v11 pathExtension];
        uint64_t v13 = [v12 compare:v4 options:1];

        if (!v13)
        {
          uint64_t v14 = [(PLManagedAsset *)self assetURLForSidecarFile:v10];
          goto LABEL_11;
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }

  BOOL v5 = [(PLManagedAsset *)self uuid];
  uint64_t v14 = +[PLManagedAsset assetsLibraryURLWithUUID:v5 extension:v4];
LABEL_11:
  uint64_t v15 = (void *)v14;

  return v15;
}

- (NSString)textBadgeString
{
  uint64_t v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  id v4 = [(PLManagedAsset *)self allFileExtensions];
  if ([v4 count] == 1
    && ([(PLManagedAsset *)self isPhoto]
     || [(PLManagedAsset *)self isVideo]
     || [(PLManagedAsset *)self isAudio]
     || [(PLManagedAsset *)self kind] == 3))
  {

    BOOL v5 = 0;
  }
  else
  {
    uint64_t v6 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v4, "count"));
    uint64_t v28 = 0;
    long long v29 = &v28;
    uint64_t v30 = 0x2020000000;
    char v31 = 0;
    uint64_t v24 = 0;
    char v25 = &v24;
    uint64_t v26 = 0x2020000000;
    char v27 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = &v20;
    uint64_t v22 = 0x2020000000;
    char v23 = 0;
    uint64_t v16 = 0;
    long long v17 = &v16;
    uint64_t v18 = 0x2020000000;
    char v19 = 0;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    v10[2] = __33__PLManagedAsset_textBadgeString__block_invoke;
    v10[3] = &unk_1E58657D8;
    BOOL v12 = &v28;
    id v7 = v6;
    id v11 = v7;
    uint64_t v13 = &v24;
    uint64_t v14 = &v20;
    uint64_t v15 = &v16;
    [v4 enumerateObjectsUsingBlock:v10];
    if ([v7 count] == 2 && *((unsigned char *)v29 + 24) && *((unsigned char *)v25 + 24))
    {
      BOOL v5 = @"RAW+JPG";
    }
    else if ([v7 count] == 2 && *((unsigned char *)v21 + 24) && *((unsigned char *)v17 + 24))
    {
      BOOL v5 = 0;
    }
    else
    {
      uint64_t v8 = [v7 componentsJoinedByString:@"+"];
      BOOL v5 = [v8 uppercaseString];
    }
    _Block_object_dispose(&v16, 8);
    _Block_object_dispose(&v20, 8);
    _Block_object_dispose(&v24, 8);
    _Block_object_dispose(&v28, 8);
  }
  return (NSString *)v5;
}

void __33__PLManagedAsset_textBadgeString__block_invoke(void *a1, void *a2)
{
  uint64_t v3 = (void *)MEMORY[0x1E4F442D8];
  id v4 = a2;
  id v8 = [v3 typeWithFilenameExtension:v4];
  if ([v8 conformsToType:*MEMORY[0x1E4F44498]])
  {
    *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
    BOOL v5 = (void *)a1[4];
    uint64_t v6 = @"RAW";
  }
  else if ([v8 conformsToType:*MEMORY[0x1E4F44410]])
  {
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    BOOL v5 = (void *)a1[4];
    uint64_t v6 = @"JPG";
  }
  else if ([v8 conformsToType:*MEMORY[0x1E4F44460]])
  {
    *(unsigned char *)(*(void *)(a1[7] + 8) + 24) = 1;
    BOOL v5 = (void *)a1[4];
    uint64_t v6 = @"PNG";
  }
  else
  {
    BOOL v5 = (void *)a1[4];
    uint64_t v6 = v4;
  }
  [v5 addObject:v6];
  uint64_t v7 = [(__CFString *)v4 caseInsensitiveCompare:*MEMORY[0x1E4F8D2F0]];

  if (!v7) {
    *(unsigned char *)(*(void *)(a1[8] + 8) + 24) = 1;
  }
}

- (id)pasteBoardRepresentation
{
  uint64_t v3 = [MEMORY[0x1E4F1CA60] dictionary];
  id v4 = [(PLManagedAsset *)self objectID];
  BOOL v5 = v4;
  if (v4)
  {
    uint64_t v6 = [v4 URIRepresentation];
    uint64_t v7 = [v6 absoluteString];

    id v8 = [v7 dataUsingEncoding:4];
    [v3 setObject:v8 forKey:@"com.apple.mobileslideshow.asset-object-id-uri"];
  }
  id v13 = 0;
  uint64_t v9 = [(PLManagedAsset *)self largestAvailableDataRepresentationAndType:&v13];
  id v10 = v13;
  if (v10) {
    BOOL v11 = v9 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    [v3 setObject:v9 forKey:v10];
  }

  return v3;
}

- (id)largestAvailableDataRepresentationAndType:(id *)a3
{
  id v5 = 0;
  [(PLManagedAsset *)self _getLargestAvailableDataRepresentation:&v5 type:a3];
  id v3 = v5;
  return v3;
}

- (void)_getLargestAvailableDataRepresentation:(id *)a3 type:(id *)a4
{
  if ([(PLManagedAsset *)self isPhoto])
  {
    uint64_t v7 = [0 pathExtension];
    BOOL v8 = +[PLPhotoLibrary isRawImageFileExtension:v7];

    id v9 = 0;
    if (v8)
    {
      id v18 = 0;
      id v10 = +[PLResourceChooser fileReservationForLargeDisplayableImageFileForAsset:self format:0 allowMetadataSnapshot:0 forceLarge:1 outFilePath:&v18 outImageType:0];
      id v9 = v18;
    }
  }
  else
  {
    id v9 = 0;
  }
  if ([(PLManagedAsset *)self isVideo])
  {
    uint64_t v11 = [(PLManagedAsset *)self pathForVideoFile];

    id v9 = (id)v11;
  }
  if (!v9)
  {
    id v9 = [(PLManagedAsset *)self pathForOriginalFile];
    if (!v9)
    {
      id v17 = 0;
      id v12 = +[PLResourceChooser fileReservationForLargeDisplayableImageFileForAsset:self format:0 allowMetadataSnapshot:0 forceLarge:1 outFilePath:&v17 outImageType:0];
      id v9 = v17;
      if (!v9)
      {
        id v13 = 0;
        goto LABEL_15;
      }
    }
  }
  if (a3)
  {
    id v13 = (id) [objc_alloc(MEMORY[0x1E4F1C9B8]) initWithContentsOfFile:v9 options:1 error:0];
    *a3 = v13;
    if (!a4) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  id v13 = 0;
  if (a4)
  {
LABEL_14:
    uint64_t v14 = (void *)MEMORY[0x1E4F442D8];
    uint64_t v15 = [v9 pathExtension];
    uint64_t v16 = [v14 typeWithFilenameExtension:v15];
    *a4 = [v16 identifier];
  }
LABEL_15:
}

- (id)imageWithFormat:(unsigned __int16)a3
{
  uint64_t v3 = a3;
  if ([(PLManagedAsset *)self isInFlight])
  {
    if ([(PLManagedAsset *)self isVideo])
    {
      id v5 = 0;
    }
    else
    {
      id v5 = [(PLManagedAsset *)self inflightImage];
    }
  }
  else
  {
    id v5 = +[PLImageLoadingUtilities newSynchronousImageForAsset:self withFormat:v3 allowPlaceholder:1 outImageProperties:0 outDeliveredPlaceholder:0];
  }
  return v5;
}

- (id)pathForOriginalVideoComplementDiagnosticFile
{
  uint64_t v3 = [(PLManagedAsset *)self pathForDiagnosticFile];
  id v4 = [v3 stringByDeletingPathExtension];
  id v5 = [(PLManagedAsset *)self pathForVideoComplementFile];
  uint64_t v6 = [v5 pathExtension];
  uint64_t v7 = [v4 stringByAppendingPathExtension:v6];

  return v7;
}

- (id)pathForCameraSpatialOverCaptureMetadataDiagnosticFile
{
  id v2 = [(PLManagedAsset *)self pathForDiagnosticFile];
  uint64_t v3 = [v2 stringByDeletingPathExtension];
  id v4 = [v3 stringByAppendingPathExtension:*MEMORY[0x1E4F8C650]];
  id v5 = [v4 stringByAppendingPathExtension:*MEMORY[0x1E4F8C620]];

  return v5;
}

- (id)pathForCameraMetadataDiagnosticFile
{
  id v2 = [(PLManagedAsset *)self pathForDiagnosticFile];
  uint64_t v3 = [v2 stringByDeletingPathExtension];
  id v4 = [v3 stringByAppendingPathExtension:*MEMORY[0x1E4F8C620]];

  return v4;
}

- (id)pathForReframeDiagnosticFile
{
  id v2 = [(PLManagedAsset *)self pathForReframeDiagnosticDirectory];
  uint64_t v3 = [v2 stringByAppendingPathComponent:*MEMORY[0x1E4F8C648]];
  id v4 = [v3 stringByAppendingPathExtension:*MEMORY[0x1E4F8C628]];

  return v4;
}

- (id)pathForReframeDiagnosticDirectory
{
  uint64_t v3 = [(PLManagedAsset *)self mainFileURL];
  id v4 = [v3 lastPathComponent];
  id v5 = [v4 stringByDeletingPathExtension];

  uint64_t v6 = [(PLManagedObject *)self photoLibrary];
  uint64_t v7 = [v6 pathManager];
  BOOL v8 = [v7 privateDirectoryWithSubType:8 createIfNeeded:0 error:0];

  id v9 = [v8 stringByAppendingPathComponent:v5];

  return v9;
}

- (id)pathForSpatialOverCaptureDiagnosticFile
{
  uint64_t v3 = [(PLManagedAsset *)self pathForSpatialOverCaptureContentFile];
  id v4 = [v3 lastPathComponent];

  id v5 = objc_opt_class();
  uint64_t v6 = [(PLManagedObject *)self photoLibrary];
  uint64_t v7 = [v5 diagnosticFilePathForLibrary:v6 mainFilename:v4 createIfNeeded:0];

  return v7;
}

- (NSString)pathForDiagnosticFile
{
  uint64_t v3 = [(PLManagedAsset *)self mainFileURL];
  id v4 = [v3 lastPathComponent];

  id v5 = objc_opt_class();
  uint64_t v6 = [(PLManagedObject *)self photoLibrary];
  uint64_t v7 = [v5 diagnosticFilePathForLibrary:v6 mainFilename:v4 createIfNeeded:0];

  return (NSString *)v7;
}

- (NSString)pathForLegacySlalomRegionsArchive
{
  if ([(PLManagedAsset *)self isDefaultAdjustedSlomo])
  {
    uint64_t v3 = [(PLManagedAsset *)self pathForOriginalFile];
    id v4 = [v3 stringByDeletingPathExtension];
    id v5 = [v4 stringByAppendingPathExtension:@"SLM"];
  }
  else
  {
    id v5 = 0;
  }
  return (NSString *)v5;
}

- (BOOL)isDefaultAdjustedSlomo
{
  uint64_t v3 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [v3 unmanagedAdjustment];

  id v5 = [v4 adjustmentFormatIdentifier];
  int v6 = [v5 isEqualToString:@"com.apple.video.slomo"];

  uint64_t v7 = [v4 adjustmentFormatVersion];
  BOOL v8 = v7;
  if (v6)
  {
    if ([v7 isEqualToString:@"1.1"]) {
      LOBYTE(v6) = 1;
    }
    else {
      LOBYTE(v6) = [v8 isEqualToString:@"1.0"];
    }
  }
  BOOL v9 = [(PLManagedAsset *)self isVideo] & v6;

  return v9;
}

- (BOOL)isMogul
{
  BOOL v3 = [(PLManagedAsset *)self isVideo];
  if (v3) {
    LOBYTE(v3) = [(PLManagedAsset *)self kindSubtype] == 101;
  }
  return v3;
}

- (NSString)pathForXMPFile
{
  BOOL v3 = [(PLManagedObject *)self pathManager];
  if ([v3 isUBF])
  {
    id v4 = objc_alloc(MEMORY[0x1E4F8B978]);
    id v5 = [(PLManagedAsset *)self uuid];
    uint64_t v6 = [(PLManagedAsset *)self bundleScope];
    uint64_t v7 = [MEMORY[0x1E4F8CDF8] supplementalResourceXMPType];
    BOOL v8 = [v7 identifier];
    id v9 = (id)[v4 initWithAssetUuid:v5 bundleScope:v6 uti:v8 resourceVersion:0 resourceType:5];

    id v10 = [v3 readOnlyUrlWithIdentifier:v9];
    uint64_t v11 = [v10 path];
  }
  else
  {
    id v9 = [(id)*MEMORY[0x1E4F8D2F0] uppercaseString];
    [v9 UTF8String];
    id v10 = [(PLManagedAsset *)self filename];
    id v12 = [(PLManagedAsset *)self directory];
    id v13 = PLDCIMURLForResourcePropertiesAndPathManager();
    uint64_t v11 = [v13 path];
  }
  return (NSString *)v11;
}

- (NSString)pathForPrebakedPortraitScrubberThumbnails
{
  if ([(PLManagedAsset *)self isVideo])
  {
    BOOL v3 = [(PLManagedAsset *)self pathForMetadataWithExtension:@"THP"];
  }
  else
  {
    BOOL v3 = 0;
  }
  return (NSString *)v3;
}

- (NSString)pathForPrebakedLandscapeScrubberThumbnails
{
  if ([(PLManagedAsset *)self isVideo])
  {
    BOOL v3 = [(PLManagedAsset *)self pathForMetadataWithExtension:@"THL"];
  }
  else
  {
    BOOL v3 = 0;
  }
  return (NSString *)v3;
}

- (unsigned)expectedBundleScopeBasedOnAssetLockingProperties
{
  unsigned __int16 v3 = [(PLManagedAsset *)self bundleScope];
  if (![(PLManagedAsset *)self bundleScope]
    || [(PLManagedAsset *)self bundleScope] == 4)
  {
    unsigned __int16 v3 = 4;
    if (![(PLManagedAsset *)self isHidden])
    {
      if ([(PLManagedAsset *)self isTrashed]) {
        return 4;
      }
      else {
        return 0;
      }
    }
  }
  return v3;
}

- (unsigned)expectedDeferredProcessingNeededOnAssetCreation
{
  int v3 = [(PLManagedAsset *)self deferredProcessingNeeded];
  if (!v3)
  {
    if ([(PLManagedAsset *)self kind])
    {
      LOWORD(v3) = 0;
    }
    else
    {
      id v4 = +[PLResourceGenerator expectedLocalResourceRecipesForAsset:self versions:&unk_1EEBF1700];
      id v5 = +[PLResourceRecipe recipeFromID:65737];
      if ([v4 containsObject:v5]) {
        LOWORD(v3) = 4;
      }
      else {
        LOWORD(v3) = 0;
      }
    }
  }
  return v3;
}

- (BOOL)renderableAdjustmentDictionary:(id *)a3 error:(id *)a4
{
  uint64_t v6 = (void *)MEMORY[0x1E4F1C9B8];
  uint64_t v7 = [(PLManagedAsset *)self pathForAdjustmentFile];
  id v23 = 0;
  BOOL v8 = [v6 dataWithContentsOfFile:v7 options:0 error:&v23];
  id v9 = v23;

  if (v8)
  {
    id v22 = 0;
    id v10 = [MEMORY[0x1E4F28F98] propertyListWithData:v8 options:0 format:0 error:&v22];
    id v11 = v22;

    id v9 = v11;
  }
  else
  {
    id v10 = 0;
  }
  id v12 = [v10 objectForKeyedSubscript:*MEMORY[0x1E4F8BA58]];
  id v13 = [v10 objectForKeyedSubscript:*MEMORY[0x1E4F8BA70]];
  uint64_t v14 = [v10 objectForKeyedSubscript:*MEMORY[0x1E4F8BA68]];
  uint64_t v15 = (void *)v14;
  if (v12) {
    BOOL v16 = v13 == 0;
  }
  else {
    BOOL v16 = 1;
  }
  BOOL v17 = v16 || v14 == 0;
  if (v17
    || ([MEMORY[0x1E4F8CE18] isRecognizedSlowMotionFormatWithIdentifier:v14 version:v13] & 1) != 0)
  {
    BOOL v18 = 0;
    if (!a4) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  id v21 = v9;
  BOOL v18 = +[PLPhotoEditPersistenceManager validateAdjustmentData:v12 formatIdentifier:v15 formatVersion:v13 error:&v21];
  id v20 = v21;

  id v9 = v20;
  if (a4) {
LABEL_13:
  }
    *a4 = v9;
LABEL_14:
  if (a3) {
    *a3 = v10;
  }

  return v18;
}

- (id)generateDeferredAdjustmentWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 allowCancellationByService:(BOOL)a6 completion:(id)a7
{
  return [(PLManagedAsset *)self _generateDeferredAdjustmentWithImageConversionClient:a3 videoConversionClient:a4 reason:a5 retryNumber:0 canUseMegaMoc:1 allowCancellationByService:a6 completion:a7];
}

- (id)generateDeferredAdjustmentForCMMPlaceholderWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 completion:(id)a6
{
  return [(PLManagedAsset *)self _generateDeferredAdjustmentWithImageConversionClient:a3 videoConversionClient:a4 reason:a5 retryNumber:0 canUseMegaMoc:0 allowCancellationByService:0 completion:a6];
}

- (id)_generateDeferredAdjustmentWithImageConversionClient:(id)a3 videoConversionClient:(id)a4 reason:(id)a5 retryNumber:(unint64_t)a6 canUseMegaMoc:(BOOL)a7 allowCancellationByService:(BOOL)a8 completion:(id)a9
{
  BOOL v9 = a8;
  v128[3] = *MEMORY[0x1E4F143B8];
  id v77 = a3;
  id v78 = a4;
  id v86 = a5;
  id v87 = a9;
  unint64_t v81 = [(PLManagedAsset *)self deferredProcessingHash];
  id v13 = NSString;
  uint64_t v14 = [(PLManagedAsset *)self uuid];
  v88 = [v13 stringWithFormat:@"uuid: %@, initial hash: %tu", v14, v81];

  uint64_t v15 = PLPhotoEditGetLog();
  os_signpost_id_t v16 = os_signpost_id_generate(v15);
  BOOL v17 = v15;
  BOOL v18 = v17;
  if (v16 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
  {
    char v19 = [(PLManagedAsset *)self uuid];
    *(_DWORD *)buf = 138543362;
    *(void *)&uint8_t buf[4] = v19;
    _os_signpost_emit_with_name_impl(&dword_19B3C7000, v18, OS_SIGNPOST_INTERVAL_BEGIN, v16, "generateDeferredAdjustment", "uuid: %{public}@", buf, 0xCu);
  }
  v79 = v18;

  id v20 = PLPhotoEditGetLog();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138543362;
    *(void *)&uint8_t buf[4] = v88;
    _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_INFO, "[%{public}@] Generating deferred adjustment", buf, 0xCu);
  }

  id v120 = 0;
  id v121 = 0;
  BOOL v21 = [(PLManagedAsset *)self renderableAdjustmentDictionary:&v121 error:&v120];
  id v22 = v121;
  id v85 = v120;
  v84 = [v22 objectForKeyedSubscript:*MEMORY[0x1E4F8BA58]];
  v83 = [v22 objectForKeyedSubscript:*MEMORY[0x1E4F8BA70]];
  v82 = [v22 objectForKeyedSubscript:*MEMORY[0x1E4F8BA68]];
  if (!v21)
  {
    id v25 = v85;
    if (v85)
    {
      uint64_t v125 = *MEMORY[0x1E4F28A50];
      id v126 = v85;
      uint64_t v26 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v126 forKeys:&v125 count:1];
      id v25 = v85;
      char v27 = (void *)v26;
    }
    else
    {
      char v27 = 0;
    }
    BOOL v28 = v25 == 0;
    v80 = v27;
    long long v29 = objc_msgSend(MEMORY[0x1E4F28C58], "errorWithDomain:code:userInfo:", *MEMORY[0x1E4F8C500], 47016);
    uint64_t v30 = PLPhotoEditGetLog();
    BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_ERROR);
    if (v28)
    {
      if (v31)
      {
        v68 = @"no";
        *(_DWORD *)buf = 138544386;
        *(void *)&uint8_t buf[4] = v88;
        if (!v84) {
          v68 = @"yes";
        }
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v68;
        *(_WORD *)&buf[22] = 2114;
        v123 = v82;
        *(_WORD *)v124 = 2114;
        *(void *)&v124[2] = v83;
        *(_WORD *)&v124[10] = 2112;
        *(void *)&v124[12] = v29;
        uint64_t v32 = "[%{public}@] Unknown error, missing adjustmentDataBlob: %{public}@, formatIdentifier: %{public}@, formatVe"
              "rsion: %{public}@, for async edit: %@";
        uint64_t v33 = v30;
        uint32_t v34 = 52;
        goto LABEL_31;
      }
    }
    else if (v31)
    {
      *(_DWORD *)buf = 138543618;
      *(void *)&uint8_t buf[4] = v88;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v29;
      uint64_t v32 = "[%{public}@] Unable to use adjustment data for async edit: %@";
      uint64_t v33 = v30;
      uint32_t v34 = 22;
LABEL_31:
      _os_log_impl(&dword_19B3C7000, v33, OS_LOG_TYPE_ERROR, v32, buf, v34);
    }

    v69 = [(PLManagedObject *)self photoLibrary];
    v92[0] = MEMORY[0x1E4F143A8];
    v92[1] = 3221225472;
    v92[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1203;
    v92[3] = &unk_1E5875CE0;
    v92[4] = self;
    v89[0] = MEMORY[0x1E4F143A8];
    v89[1] = 3221225472;
    v89[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_1204;
    v89[3] = &unk_1E58742F0;
    id v90 = v29;
    id v91 = v87;
    id v35 = v29;
    [v69 performTransaction:v92 completionHandler:v89];

    v66 = 0;
    goto LABEL_36;
  }
  id v23 = [v22 objectForKeyedSubscript:*MEMORY[0x1E4F8BA50]];
  v80 = v23;
  if (v23) {
    uint64_t v24 = [v23 integerValue];
  }
  else {
    uint64_t v24 = 0;
  }
  id v35 = [MEMORY[0x1E4F1CA60] dictionary];
  [v35 setObject:v86 forKeyedSubscript:*MEMORY[0x1E4F74A20]];
  if (v9) {
    uint64_t v36 = 3;
  }
  else {
    uint64_t v36 = 4;
  }
  long long v37 = [NSNumber numberWithInteger:v36];
  [v35 setObject:v37 forKeyedSubscript:*MEMORY[0x1E4F749D8]];

  uint64_t v38 = *MEMORY[0x1E4F74928];
  v127[0] = *MEMORY[0x1E4F74920];
  v127[1] = v38;
  v128[0] = v84;
  v128[1] = v82;
  v127[2] = *MEMORY[0x1E4F74930];
  v128[2] = v83;
  long long v39 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v128 forKeys:v127 count:3];
  [v35 setObject:v39 forKeyedSubscript:*MEMORY[0x1E4F74978]];

  v76 = objc_opt_new();
  v40 = objc_opt_new();
  [(PLManagedAsset *)self _setupMediaConversionSourceURLCollection:v76 destinationURLCollection:v40 baseVersion:v24];
  double v41 = PLPhotoEditGetLog();
  if (os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v42 = [v76 urlCount];
    uint64_t v43 = [v40 urlCount];
    *(_DWORD *)buf = 138543874;
    *(void *)&uint8_t buf[4] = v88;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v42;
    *(_WORD *)&buf[22] = 2048;
    v123 = (uint64_t (*)(uint64_t, uint64_t))v43;
    _os_log_impl(&dword_19B3C7000, v41, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment with number of source URLs: %ld destination URLs: %ld", buf, 0x20u);
  }

  v44 = PLPhotoEditGetLog();
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
  {
    v45 = [v76 resourceURLForRole:*MEMORY[0x1E4F74910]];
    *(_DWORD *)buf = 138543618;
    *(void *)&uint8_t buf[4] = v88;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v45;
    _os_log_impl(&dword_19B3C7000, v44, OS_LOG_TYPE_DEBUG, "[%{public}@] Main source URL: %@", buf, 0x16u);
  }
  v117[0] = MEMORY[0x1E4F143A8];
  v117[1] = 3221225472;
  v117[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke;
  v117[3] = &unk_1E5874950;
  id v46 = v87;
  id v119 = v46;
  id v75 = v40;
  id v118 = v75;
  id v47 = (void *)MEMORY[0x19F38D650](v117);
  id v48 = [(PLManagedAsset *)self objectID];
  v49 = [(PLManagedObject *)self photoLibrary];
  uint64_t v50 = [v49 pathManager];
  v51 = [v50 capabilities];

  *(void *)buf = 0;
  *(void *)&buf[8] = buf;
  *(void *)&buf[16] = 0x3032000000;
  v123 = __Block_byref_object_copy__15798;
  *(void *)v124 = __Block_byref_object_dispose__15799;
  *(void *)&v124[8] = [MEMORY[0x1E4F1C9C8] now];
  uint64_t v52 = [(PLManagedObject *)self photoLibrary];
  int64_t v53 = [v52 shortLivedLibraryCopyByAppendingName:"-[PLManagedAsset _generateDeferredAdjustmentWithImageConversionClient:videoConversionClient:reason:retryNumber:canUseMegaMoc:allowCancellationByService:completion:]"];

  v102[0] = MEMORY[0x1E4F143A8];
  v102[1] = 3221225472;
  v102[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2;
  v102[3] = &unk_1E5865760;
  v103 = v79;
  os_signpost_id_t v114 = v16;
  id v54 = v53;
  id v104 = v54;
  id v105 = v88;
  id v55 = v48;
  id v106 = v55;
  id v72 = v51;
  id v107 = v72;
  v113 = buf;
  BOOL v116 = a7;
  unint64_t v115 = a6;
  id v56 = v77;
  id v108 = v56;
  id v57 = v78;
  id v109 = v57;
  id v110 = v86;
  id v111 = v46;
  id v58 = v47;
  id v112 = v58;
  v59 = (void *)MEMORY[0x19F38D650](v102);
  BOOL v60 = [(PLManagedAsset *)self isPhoto];
  uint64_t v61 = *MEMORY[0x1E4F74910];
  if (v60)
  {
    v62 = [v75 resourceURLForRole:v61];
    if ([(PLManagedAsset *)self isPhotoIris])
    {
      v63 = [v75 resourceURLForRole:*MEMORY[0x1E4F74918]];
    }
    else
    {
      v63 = 0;
    }
    [v35 setObject:&unk_1EEBED7A0 forKeyedSubscript:*MEMORY[0x1E4F74A30]];
    v70 = [MEMORY[0x1E4F748B8] standardPolicy];
    [v35 setObject:v70 forKeyedSubscript:*MEMORY[0x1E4F749F0]];

    [v35 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F74988]];
    v97[0] = MEMORY[0x1E4F143A8];
    v97[1] = 3221225472;
    v97[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1194;
    v97[3] = &unk_1E5865788;
    id v100 = v59;
    id v65 = v62;
    id v98 = v65;
    id v67 = v63;
    id v99 = v67;
    unint64_t v101 = v81;
    [v56 convertImageAtSourceURLCollection:v76 toDestinationURLCollection:v75 options:v35 completionHandler:v97];

    v66 = 0;
  }
  else
  {
    v64 = [v75 resourceURLForRole:v61];
    v93[0] = MEMORY[0x1E4F143A8];
    v93[1] = 3221225472;
    v93[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_1196;
    v93[3] = &unk_1E58657B0;
    id v95 = v59;
    id v65 = v64;
    id v94 = v65;
    unint64_t v96 = v81;
    v66 = [v57 convertVideoAtSourceURLCollection:v76 toDestinationURLCollection:v75 options:v35 completionHandler:v93];

    id v67 = v95;
  }

  _Block_object_dispose(buf, 8);
LABEL_36:

  return v66;
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2(uint64_t a1, int a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  v167[1] = *MEMORY[0x1E4F143B8];
  id v85 = a3;
  id v14 = a4;
  id v84 = a7;
  id v15 = a8;
  os_signpost_id_t v16 = *(id *)(a1 + 32);
  BOOL v17 = v16;
  os_signpost_id_t v18 = *(void *)(a1 + 120);
  if (v18 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v16))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_19B3C7000, v17, OS_SIGNPOST_INTERVAL_END, v18, "generateDeferredAdjustment", "", buf, 2u);
  }

  uint64_t v143 = 0;
  v144 = &v143;
  uint64_t v145 = 0x2020000000;
  uint64_t v146 = 0;
  uint64_t v139 = 0;
  v140 = &v139;
  uint64_t v141 = 0x2020000000;
  char v142 = 0;
  *(void *)buf = 0;
  v134 = buf;
  uint64_t v135 = 0x3032000000;
  v136 = __Block_byref_object_copy__15798;
  v137 = __Block_byref_object_dispose__15799;
  id v138 = 0;
  if (a6 == 1) {
    goto LABEL_13;
  }
  if (PAMediaConversionIsCancellationError())
  {
    v144[3] = 1;
    char v19 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v166 = *MEMORY[0x1E4F28A50];
    v167[0] = v15;
    id v20 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v167 forKeys:&v166 count:1];
    uint64_t v21 = [v19 errorWithDomain:*MEMORY[0x1E4F8C500] code:47002 userInfo:v20];
LABEL_9:
    uint64_t v24 = (void *)*((void *)v134 + 5);
    *((void *)v134 + 5) = v21;
    goto LABEL_11;
  }
  int v22 = MEMORY[0x19F38BF40](v15);
  v144[3] = 2;
  if (v22)
  {
    id v23 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v164 = *MEMORY[0x1E4F28A50];
    id v165 = v15;
    id v20 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v165 forKeys:&v164 count:1];
    uint64_t v21 = [v23 errorWithDomain:*MEMORY[0x1E4F8C500] code:47021 userInfo:v20];
    goto LABEL_9;
  }
  id v20 = objc_msgSend(NSString, "stringWithFormat:", @"media conversion failed with status: %ld", a6);
  id v25 = (void *)MEMORY[0x1E4F28C58];
  uint64_t v26 = *MEMORY[0x1E4F28A50];
  v162[0] = *MEMORY[0x1E4F28228];
  v162[1] = v26;
  v163[0] = v20;
  v163[1] = v15;
  uint64_t v24 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v163 forKeys:v162 count:2];
  uint64_t v27 = [v25 errorWithDomain:*MEMORY[0x1E4F8C500] code:47007 userInfo:v24];
  BOOL v28 = (void *)*((void *)v134 + 5);
  *((void *)v134 + 5) = v27;

LABEL_11:
  if (v144[3])
  {
    long long v29 = 0;
    goto LABEL_26;
  }
LABEL_13:
  uint64_t v30 = v85;
  if (!a2) {
    uint64_t v30 = v14;
  }
  id v31 = v30;
  id v32 = objc_alloc(MEMORY[0x1E4F8CC48]);
  uint64_t v33 = [*(id *)(a1 + 40) libraryBundle];
  uint32_t v34 = [v33 timeZoneLookup];
  long long v29 = (void *)[v32 initWithMediaURL:v31 options:12 timeZoneLookup:v34 shouldCache:0];

  if (!v29)
  {
    v144[3] = 3;
    id v35 = NSString;
    uint64_t v36 = [v31 path];
    long long v37 = [v35 stringWithFormat:@"unable to load metadata from file at path: %@", v36];

    uint64_t v38 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v160 = *MEMORY[0x1E4F28228];
    v161 = v37;
    long long v39 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v161 forKeys:&v160 count:1];
    uint64_t v40 = [v38 errorWithDomain:*MEMORY[0x1E4F8C500] code:47007 userInfo:v39];
    double v41 = (void *)*((void *)v134 + 5);
    *((void *)v134 + 5) = v40;
  }
  if (!v144[3] && a2)
  {
    id v42 = [v29 contentType];
    if (v42)
    {
      uint64_t v43 = v42;
      if (([v42 conformsToType:*MEMORY[0x1E4F44410]] & 1) != 0
        || ([v43 conformsToType:*MEMORY[0x1E4F443E0]] & 1) != 0)
      {
        v44 = v43;
LABEL_25:

        goto LABEL_26;
      }
      char v45 = [v43 conformsToType:*MEMORY[0x1E4F443E8]];

      if (v45) {
        goto LABEL_26;
      }
    }
    v144[3] = 3;
    id v46 = NSString;
    id v47 = [v29 contentType];
    id v48 = [v47 identifier];
    v44 = [v46 stringWithFormat:@"rendered image type (%@) is not primary format", v48];

    v49 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v158 = *MEMORY[0x1E4F28228];
    v159 = v44;
    uint64_t v43 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v159 forKeys:&v158 count:1];
    uint64_t v50 = [v49 errorWithDomain:*MEMORY[0x1E4F8C500] code:47007 userInfo:v43];
    v51 = (void *)*((void *)v134 + 5);
    *((void *)v134 + 5) = v50;

    goto LABEL_25;
  }
LABEL_26:
  uint64_t v52 = [*(id *)(a1 + 40) managedObjectContext];
  uint64_t v129 = 0;
  v130 = &v129;
  uint64_t v131 = 0x2020000000;
  uint64_t v132 = 0;
  int64_t v53 = v144;
  if (!v144[3])
  {
    id v54 = PLPhotoEditGetLog();
    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v55 = *(void *)(a1 + 48);
      LODWORD(v155) = 138543362;
      *(void *)((char *)&v155 + 4) = v55;
      _os_log_impl(&dword_19B3C7000, v54, OS_LOG_TYPE_DEBUG, "[%{public}@] Media conversion success for deferred adjustment", (uint8_t *)&v155, 0xCu);
    }

    v116[0] = MEMORY[0x1E4F143A8];
    v116[1] = 3221225472;
    v116[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1163;
    v116[3] = &unk_1E5865710;
    id v56 = v52;
    id v117 = v56;
    id v118 = *(id *)(a1 + 56);
    v124 = &v143;
    id v119 = *(id *)(a1 + 48);
    uint64_t v125 = &v129;
    uint64_t v128 = a5;
    id v120 = *(id *)(a1 + 40);
    id v121 = *(id *)(a1 + 64);
    id v122 = v85;
    id v123 = v14;
    id v126 = buf;
    uint64_t v127 = *(void *)(a1 + 112);
    id v57 = (void *)MEMORY[0x19F38D650](v116);
    if (*(unsigned char *)(a1 + 136))
    {
      [*(id *)(a1 + 40) performBlockAndWait:v57];
    }
    else
    {
      v113[0] = MEMORY[0x1E4F143A8];
      v113[1] = 3221225472;
      v113[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1173;
      v113[3] = &unk_1E58742F0;
      id v114 = v56;
      id v115 = v57;
      +[PLManagedObjectContext _pl_megamoc_runWithPerformWarningsSuppressed:v113];
    }
    int64_t v53 = v144;
  }
  *(void *)&long long v155 = 0;
  *((void *)&v155 + 1) = &v155;
  uint64_t v156 = 0x2020000000;
  char v157 = 0;
  switch(v53[3])
  {
    case 0:
    case 9:
      id v65 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v65, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v66 = *(void *)(a1 + 48);
        *(_DWORD *)v149 = 138543362;
        uint64_t v150 = v66;
        _os_log_impl(&dword_19B3C7000, v65, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment succeeded", v149, 0xCu);
      }
      goto LABEL_51;
    case 1:
      id v67 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
      {
        uint64_t v68 = *(void *)(a1 + 48);
        *(_DWORD *)v149 = 138543874;
        uint64_t v150 = v68;
        __int16 v151 = 2048;
        uint64_t v152 = a6;
        __int16 v153 = 2112;
        id v154 = v15;
        _os_log_impl(&dword_19B3C7000, v67, OS_LOG_TYPE_INFO, "[%{public}@] Media conversion cancelled adjustment, status: %ld, error: %@", v149, 0x20u);
      }

      v108[0] = MEMORY[0x1E4F143A8];
      v108[1] = 3221225472;
      v108[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1174;
      v108[3] = &unk_1E5875368;
      id v109 = v52;
      id v110 = *(id *)(a1 + 56);
      id v69 = *(id *)(a1 + 48);
      uint64_t v70 = *(void *)(a1 + 112);
      id v111 = v69;
      uint64_t v112 = v70;
      [v109 performBlockAndWait:v108];

      break;
    case 2:
    case 3:
    case 7:
    case 8:
      id v58 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR))
      {
        uint64_t v59 = *(void *)(a1 + 48);
        uint64_t v60 = *((void *)v134 + 5);
        *(_DWORD *)v149 = 138543618;
        uint64_t v150 = v59;
        __int16 v151 = 2112;
        uint64_t v152 = v60;
        _os_log_impl(&dword_19B3C7000, v58, OS_LOG_TYPE_ERROR, "[%{public}@] Failed to generate deferred adjustment with error: %@", v149, 0x16u);
      }

      v89[0] = MEMORY[0x1E4F143A8];
      v89[1] = 3221225472;
      v89[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1179;
      v89[3] = &unk_1E58743C0;
      id v61 = v52;
      id v90 = v61;
      id v91 = *(id *)(a1 + 56);
      id v62 = *(id *)(a1 + 48);
      uint64_t v63 = *(void *)(a1 + 112);
      id v92 = v62;
      uint64_t v93 = v63;
      uint64_t v94 = a5;
      v64 = (void *)MEMORY[0x19F38D650](v89);
      if (*(unsigned char *)(a1 + 136))
      {
        [*(id *)(a1 + 40) performBlockAndWait:v64];
      }
      else
      {
        v86[0] = MEMORY[0x1E4F143A8];
        v86[1] = 3221225472;
        v86[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1189;
        v86[3] = &unk_1E58742F0;
        id v87 = v61;
        id v88 = v64;
        +[PLManagedObjectContext _pl_megamoc_runWithPerformWarningsSuppressed:v86];
      }
      break;
    case 4:
      id v65 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v65, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v71 = *(void *)(a1 + 48);
        *(_DWORD *)v149 = 138543362;
        uint64_t v150 = v71;
        _os_log_impl(&dword_19B3C7000, v65, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment finished but asset has been deleted, dropping renders", v149, 0xCu);
      }
      goto LABEL_51;
    case 5:
      if (*(void *)(a1 + 128) > 2uLL)
      {
        id v77 = PLPhotoEditGetLog();
        if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR))
        {
          uint64_t v78 = *(void *)(a1 + 48);
          *(_DWORD *)v149 = 138543362;
          uint64_t v150 = v78;
          _os_log_impl(&dword_19B3C7000, v77, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment reached max stale retry count, bailing out", v149, 0xCu);
        }

        v79 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v147 = *MEMORY[0x1E4F28568];
        v148 = @"Generate deferred adjustment reached max stale retry count, bailing out";
        v80 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v148 forKeys:&v147 count:1];
        uint64_t v81 = [v79 errorWithDomain:*MEMORY[0x1E4F8C500] code:46512 userInfo:v80];
        v82 = (void *)*((void *)v134 + 5);
        *((void *)v134 + 5) = v81;
      }
      else
      {
        v95[0] = MEMORY[0x1E4F143A8];
        v95[1] = 3221225472;
        v95[2] = __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1175;
        v95[3] = &unk_1E5865738;
        id v96 = v52;
        id v97 = *(id *)(a1 + 56);
        v103 = &v155;
        id v98 = *(id *)(a1 + 48);
        id v104 = &v129;
        id v99 = *(id *)(a1 + 72);
        id v100 = *(id *)(a1 + 80);
        id v75 = *(id *)(a1 + 88);
        uint64_t v76 = *(void *)(a1 + 128);
        id v101 = v75;
        uint64_t v106 = v76;
        char v107 = *(unsigned char *)(a1 + 136);
        id v102 = *(id *)(a1 + 96);
        id v105 = &v139;
        [v96 performBlockAndWait:v95];
      }
      break;
    case 6:
      id v65 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v65, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v72 = *(void *)(a1 + 48);
        uint64_t v73 = v130[3];
        *(_DWORD *)v149 = 138543618;
        uint64_t v150 = v72;
        __int16 v151 = 2048;
        uint64_t v152 = v73;
        _os_log_impl(&dword_19B3C7000, v65, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment finished with stale request (new hash = %tu) but deferred processing state no longer needs adjustment, dropping renders and not restarting", v149, 0x16u);
      }
LABEL_51:

      *((unsigned char *)v140 + 24) = 1;
      break;
    default:
      break;
  }
  if (!*(unsigned char *)(*((void *)&v155 + 1) + 24))
  {
    if (*((unsigned char *)v140 + 24)) {
      uint64_t v74 = 0;
    }
    else {
      uint64_t v74 = *((void *)v134 + 5);
    }
    (*(void (**)(void, BOOL, uint64_t))(*(void *)(a1 + 104) + 16))(*(void *)(a1 + 104), *((unsigned char *)v140 + 24) != 0, v74);
  }
  _Block_object_dispose(&v155, 8);
  _Block_object_dispose(&v129, 8);

  _Block_object_dispose(buf, 8);
  _Block_object_dispose(&v139, 8);
  _Block_object_dispose(&v143, 8);
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1194(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, uint64_t, void, void, void, uint64_t, uint64_t, uint64_t))(a1[6] + 16))(a1[6], 1, a1[4], a1[5], a1[7], a2, a3, a4);
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_1196(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void, void, void, void, uint64_t, uint64_t, uint64_t))(a1[5] + 16))(a1[5], 0, 0, a1[4], a1[6], a2, a3, a4);
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1203(uint64_t a1)
{
  if ([*(id *)(a1 + 32) deferredProcessingNeeded] == 2
    || (uint64_t result = [*(id *)(a1 + 32) deferredProcessingNeeded], result == 9))
  {
    int v3 = *(void **)(a1 + 32);
    return [v3 setDeferredProcessingNeeded:0];
  }
  return result;
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_1204(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1163(uint64_t a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v45 = 0;
  id v4 = [v2 existingObjectWithID:v3 error:&v45];
  id v5 = v45;
  if (!*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24))
  {
    if (v4)
    {
      if (![v4 isDeleted]) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v6 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        BOOL v8 = *(void **)(a1 + 40);
        uint64_t v7 = *(void *)(a1 + 48);
        *(_DWORD *)buf = 138543874;
        uint64_t v47 = v7;
        __int16 v48 = 2112;
        v49 = v8;
        __int16 v50 = 2112;
        id v51 = v5;
        _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_ERROR, "[%{public}@] Asset with object ID %@ not found: %@", buf, 0x20u);
      }
    }
    *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = 4;
  }
LABEL_9:
  if (!*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24))
  {
    BOOL v9 = [v4 additionalAttributes];
    [v9 setDeferredProcessingCandidateOptions:0];

    if (!*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24))
    {
      *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) = [v4 deferredProcessingHash];
      if (*(void *)(a1 + 120) != *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24))
      {
        int v10 = [v4 deferredProcessingNeeded];
        uint64_t v11 = 5;
        if (v10 != 2) {
          uint64_t v11 = 6;
        }
        *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = v11;
      }
    }
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) || ![v4 isVideo])
  {
    os_signpost_id_t v16 = 0;
  }
  else
  {
    id v12 = [v4 persistedResourcesMatching:&__block_literal_global_1166];
    id v13 = [v12 anyObject];

    if (v13)
    {
      id v14 = [*(id *)(a1 + 56) pathManager];
      id v15 = [MEMORY[0x1E4F8B850] defaultFileExtensionForAssetType:0];
      os_signpost_id_t v16 = [v14 temporaryRenderContentURLForInternalRendersWithExtension:v15];

      BOOL v17 = (void *)MEMORY[0x1E4F1CB10];
      os_signpost_id_t v18 = [v4 pathForTransientVideoPosterFramePreview];
      char v19 = [v17 fileURLWithPath:v18];

      uint64_t v20 = *(void *)(a1 + 64);
      id v44 = 0;
      char v21 = [MEMORY[0x1E4F8B908] ingestItemAtURL:v19 toURL:v16 type:3 options:6 capabilities:v20 error:&v44];
      id v22 = v44;
      if ((v21 & 1) == 0)
      {
        id v23 = PLPhotoEditGetLog();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          uint64_t v24 = *(void *)(a1 + 48);
          *(_DWORD *)buf = 138543874;
          uint64_t v47 = v24;
          __int16 v48 = 2112;
          v49 = v19;
          __int16 v50 = 2112;
          id v51 = v22;
          _os_log_impl(&dword_19B3C7000, v23, OS_LOG_TYPE_ERROR, "[%{public}@] Nonfatal - failed to ingest video poster to temporary URL from existing URL: %@, error: %@", buf, 0x20u);
        }

        os_signpost_id_t v16 = 0;
      }
    }
    else
    {
      os_signpost_id_t v16 = 0;
    }
  }
  uint64_t v25 = *(void *)(a1 + 88);
  if (!*(void *)(*(void *)(v25 + 8) + 24))
  {
    uint64_t v26 = *(void *)(a1 + 72);
    uint64_t v27 = *(void *)(a1 + 80);
    uint64_t v28 = *(void *)(*(void *)(a1 + 104) + 8);
    id obj = *(id *)(v28 + 40);
    char v29 = [v4 updateDeferredAdjustmentWithFullSizeRenderImageURL:v26 videoURL:v27 videoPosterURL:v16 error:&obj];
    objc_storeStrong((id *)(v28 + 40), obj);
    uint64_t v25 = *(void *)(a1 + 88);
    if ((v29 & 1) == 0)
    {
      *(void *)(*(void *)(v25 + 8) + 24) = 7;
      uint64_t v25 = *(void *)(a1 + 88);
    }
  }
  if (*(void *)(*(void *)(v25 + 8) + 24)) {
    goto LABEL_28;
  }
  if ([v4 isPhoto])
  {
    id v31 = &__block_literal_global_1169;
  }
  else
  {
    if (![v4 isVideo])
    {
LABEL_28:
      uint64_t v30 = 0;
      goto LABEL_34;
    }
    id v31 = &__block_literal_global_1172;
  }
  id v32 = [v4 persistedResourcesMatching:v31];
  uint64_t v30 = [v32 anyObject];

LABEL_34:
  if ([*(id *)(a1 + 32) hasChanges])
  {
    uint64_t v33 = *(void **)(a1 + 32);
    if (*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24))
    {
      [v33 rollback];
    }
    else
    {
      uint64_t v34 = *(void *)(*(void *)(a1 + 104) + 8);
      id v42 = *(id *)(v34 + 40);
      char v35 = [v33 save:&v42];
      objc_storeStrong((id *)(v34 + 40), v42);
      if ((v35 & 1) == 0)
      {
        uint64_t v36 = PLPhotoEditGetLog();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
        {
          uint64_t v37 = *(void *)(a1 + 48);
          uint64_t v38 = *(void **)(*(void *)(*(void *)(a1 + 104) + 8) + 40);
          *(_DWORD *)buf = 138543618;
          uint64_t v47 = v37;
          __int16 v48 = 2112;
          v49 = v38;
          _os_log_impl(&dword_19B3C7000, v36, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment save failed %@", buf, 0x16u);
        }

        *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = 8;
      }
    }
  }
  uint64_t v39 = *(void *)(*(void *)(a1 + 88) + 8);
  uint64_t v40 = *(void *)(v39 + 24);
  if (!v40)
  {
    *(void *)(v39 + 24) = 9;
    uint64_t v40 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
  }
  if (v40 == 9) {
    uint64_t v41 = 1;
  }
  else {
    uint64_t v41 = 3;
  }
  PLSendDeferredProcessingAnalytics(v4, v30, *(void **)(*(void *)(*(void *)(a1 + 112) + 8) + 40), v41);
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1173(uint64_t a1)
{
  return [*(id *)(a1 + 32) performBlockAndWait:*(void *)(a1 + 40)];
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1174(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  id v9 = 0;
  id v4 = [v2 existingObjectWithID:v3 error:&v9];
  id v5 = v9;
  if (v4)
  {
    PLSendDeferredProcessingAnalytics(v4, 0, *(void **)(*(void *)(a1[7] + 8) + 40), 2);
  }
  else
  {
    uint64_t v6 = PLPhotoEditGetLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = a1[5];
      uint64_t v7 = a1[6];
      *(_DWORD *)buf = 138543874;
      uint64_t v11 = v7;
      __int16 v12 = 2112;
      uint64_t v13 = v8;
      __int16 v14 = 2112;
      id v15 = v5;
      _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_ERROR, "[%{public}@] Asset with object ID %@ not found: %@", buf, 0x20u);
    }
  }
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1175(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v2 = [*(id *)(a1 + 32) existingObjectWithID:*(void *)(a1 + 40) error:0];
  uint64_t v3 = v2;
  if (v2 && ([v2 isDeleted] & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = 1;
    uint64_t v7 = PLPhotoEditGetLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
      *(_DWORD *)buf = 138543618;
      uint64_t v12 = v8;
      __int16 v13 = 2048;
      uint64_t v14 = v9;
      _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment finished but edit is stale with new hash: %tu, restarting", buf, 0x16u);
    }

    id v10 = (id)[v3 _generateDeferredAdjustmentWithImageConversionClient:*(void *)(a1 + 56) videoConversionClient:*(void *)(a1 + 64) reason:*(void *)(a1 + 72) retryNumber:*(void *)(a1 + 112) + 1 canUseMegaMoc:*(unsigned __int8 *)(a1 + 120) allowCancellationByService:0 completion:*(void *)(a1 + 80)];
  }
  else
  {
    id v4 = PLPhotoEditGetLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v5 = *(void *)(a1 + 48);
      uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
      *(_DWORD *)buf = 138543618;
      uint64_t v12 = v5;
      __int16 v13 = 2048;
      uint64_t v14 = v6;
      _os_log_impl(&dword_19B3C7000, v4, OS_LOG_TYPE_DEBUG, "[%{public}@] Deferred adjustment finished with stale request (new hash = %tu) but asset was deleted, dropping renders and not restarting", buf, 0x16u);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) = 1;
  }
}

void __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1179(uint64_t a1)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v29 = 0;
  id v4 = [v2 existingObjectWithID:v3 error:&v29];
  id v5 = v29;
  if (v4)
  {
    uint64_t v6 = [v4 isDeleted];
    uint64_t v7 = [v4 deferredProcessingHash];
    if ((v6 & 1) == 0)
    {
      char v8 = 1;
      if (*(void *)(a1 + 64) != v7)
      {
LABEL_15:
        uint64_t v16 = PLPhotoEditGetLog();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          uint64_t v17 = *(void *)(a1 + 48);
          if (v6)
          {
            int v18 = 0;
            char v19 = @"asset deleted";
          }
          else if (v8)
          {
            int v18 = 0;
            char v19 = @"stale";
          }
          else
          {
            uint64_t v20 = NSString;
            unsigned int v21 = [v4 deferredProcessingNeeded];
            id v22 = v21 > 0xB ? 0 : off_1E5865890[v21];
            uint64_t v6 = v22;
            char v19 = [v20 stringWithFormat:@"cannot overwrite deferred processing state: %@", v6];
            int v18 = 1;
          }
          *(_DWORD *)buf = 138543618;
          uint64_t v31 = v17;
          __int16 v32 = 2114;
          uint64_t v33 = v19;
          _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment failed, skipping repair for reason: %{public}@", buf, 0x16u);
          if (v18)
          {
          }
        }

LABEL_27:
        if ([*(id *)(a1 + 32) hasChanges])
        {
          id v23 = *(void **)(a1 + 32);
          id v28 = 0;
          char v24 = [v23 save:&v28];
          uint64_t v25 = (__CFString *)v28;
          if ((v24 & 1) == 0)
          {
            uint64_t v26 = PLPhotoEditGetLog();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              uint64_t v27 = *(void *)(a1 + 48);
              *(_DWORD *)buf = 138543618;
              uint64_t v31 = v27;
              __int16 v32 = 2112;
              uint64_t v33 = v25;
              _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment save failed %@", buf, 0x16u);
            }
          }
        }
        PLSendDeferredProcessingAnalytics(v4, 0, *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), 3);
        goto LABEL_34;
      }
      unsigned int v12 = [v4 deferredProcessingNeeded];
      if (v12 <= 0xB && ((1 << v12) & 0xB15) != 0)
      {
        uint64_t v14 = PLPhotoEditGetLog();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          uint64_t v15 = *(void *)(a1 + 48);
          *(_DWORD *)buf = 138543362;
          uint64_t v31 = v15;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment failed, marking asset for repair adjustment failure", buf, 0xCu);
        }

        [v4 setDeferredProcessingNeeded:9];
        goto LABEL_27;
      }
    }
    char v8 = 0;
    goto LABEL_15;
  }
  uint64_t v9 = PLPhotoEditGetLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    uint64_t v11 = *(__CFString **)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    uint64_t v31 = v10;
    __int16 v32 = 2112;
    uint64_t v33 = v11;
    __int16 v34 = 2112;
    id v35 = v5;
    _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_ERROR, "[%{public}@] Deferred adjustment failed, skipping repair, asset with object ID %@ not found: %@", buf, 0x20u);
  }

LABEL_34:
}

uint64_t __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1189(uint64_t a1)
{
  return [*(id *)(a1 + 32) performBlockAndWait:*(void *)(a1 + 40)];
}

BOOL __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_2_1170(uint64_t a1, void *a2)
{
  return [a2 recipeID] == 0x20000;
}

BOOL __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1167(uint64_t a1, void *a2)
{
  return [a2 recipeID] == 65938;
}

BOOL __164__PLManagedAsset__generateDeferredAdjustmentWithImageConversionClient_videoConversionClient_reason_retryNumber_canUseMegaMoc_allowCancellationByService_completion___block_invoke_1164(uint64_t a1, void *a2)
{
  return [a2 recipeID] == 65948;
}

- (void)_setupMediaConversionSourceURLCollection:(id)a3 destinationURLCollection:(id)a4 baseVersion:(int64_t)a5
{
  id v30 = a3;
  id v8 = a4;
  uint64_t v9 = [(PLManagedAsset *)self _sourceURLForAsyncEditWithBaseVersion:a5];
  uint64_t v10 = *MEMORY[0x1E4F74910];
  [v30 setResourceURL:v9 forRole:*MEMORY[0x1E4F74910]];
  if ([(PLManagedAsset *)self isPhoto])
  {
    uint64_t v11 = [(PLManagedAsset *)self fileTypeForFullsizeRenderImage];
    unsigned int v12 = (void *)MEMORY[0x1E4F8CDF8];
    __int16 v13 = [MEMORY[0x1E4F442D8] typeWithIdentifier:v11];
    uint64_t v14 = [v12 preferredOrFallbackFilenameExtensionForType:v13];

    uint64_t v15 = [(PLManagedObject *)self pathManager];
    uint64_t v16 = [v15 temporaryRenderContentURLForInternalRendersWithExtension:v14];

    [v8 setResourceURL:v16 forRole:v10 deleteOnDeallocation:1];
    if ([(PLManagedAsset *)self _shouldSetupVideoComplementForAsyncEditWithBaseVersion:a5])
    {
      id v29 = v8;
      if (a5) {
        [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
      }
      else {
      id v28 = [(PLManagedAsset *)self pathForVideoComplementFile];
      }
      char v19 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v28 isDirectory:0];
      uint64_t v20 = *MEMORY[0x1E4F74918];
      [v30 setResourceURL:v19 forRole:*MEMORY[0x1E4F74918]];
      unsigned int v21 = [(PLManagedObject *)self pathManager];
      id v22 = [MEMORY[0x1E4F8B850] defaultFileExtensionForAssetType:1];
      id v23 = [v21 temporaryRenderContentURLForInternalRendersWithExtension:v22];

      id v8 = v29;
      [v29 setResourceURL:v23 forRole:v20 deleteOnDeallocation:1];
    }
    goto LABEL_10;
  }
  if ([(PLManagedAsset *)self isVideo])
  {
    uint64_t v17 = [(PLManagedObject *)self pathManager];
    int v18 = [MEMORY[0x1E4F8B850] defaultFileExtensionForAssetType:1];
    uint64_t v11 = [v17 temporaryRenderContentURLForInternalRendersWithExtension:v18];

    [v8 setResourceURL:v11 forRole:v10 deleteOnDeallocation:1];
LABEL_10:
  }
  char v24 = [(PLManagedAsset *)self pathForAdjustmentSecondaryDataFile];
  if (v24)
  {
    uint64_t v25 = [MEMORY[0x1E4F28CB8] defaultManager];
    int v26 = [v25 fileExistsAtPath:v24];

    if (v26)
    {
      uint64_t v27 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v24];
      [v30 setResourceURL:v27 forRole:*MEMORY[0x1E4F74908]];
    }
  }
}

- (unint64_t)deferredProcessingHash
{
  uint64_t v3 = [(PLManagedAsset *)self adjustmentTimestamp];
  uint64_t v4 = [v3 hash];
  id v5 = objc_msgSend(NSNumber, "numberWithUnsignedShort:", -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded"));
  unint64_t v6 = [v5 hash] ^ v4;

  return v6;
}

- (BOOL)_shouldSetupVideoComplementForAsyncEditWithBaseVersion:(int64_t)a3
{
  BOOL v5 = [(PLManagedAsset *)self isPhotoIris];
  BOOL v6 = v5;
  if (a3 && v5) {
    BOOL v6 = [(PLManagedAsset *)self canPlayPhotoIris];
  }
  if (a3 == 1 && v6)
  {
    uint64_t v7 = [(PLManagedAsset *)self modernResources];
    id v8 = [v7 objectsPassingTest:&__block_literal_global_1147];
    LOBYTE(v6) = [v8 count] != 0;
  }
  return v6;
}

BOOL __73__PLManagedAsset__shouldSetupVideoComplementForAsyncEditWithBaseVersion___block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 version] == 1 && objc_msgSend(v2, "resourceType") == 3;

  return v3;
}

- (id)_sourceURLForAsyncEditWithBaseVersion:(int64_t)a3
{
  if (!a3)
  {
    if ([(PLManagedAsset *)self isRAWPlusJPEGWithRAWOnTop]) {
      [(PLManagedAsset *)self urlForSideCarImageFile];
    }
    else {
    uint64_t v7 = [(PLManagedAsset *)self mainFileURL];
    }
    goto LABEL_12;
  }
  if ([(PLManagedAsset *)self isPhoto])
  {
    uint64_t v4 = (void *)MEMORY[0x1E4F1CB10];
    uint64_t v5 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
LABEL_8:
    BOOL v6 = (void *)v5;
    uint64_t v7 = [v4 fileURLWithPath:v5 isDirectory:0];

    goto LABEL_12;
  }
  if ([(PLManagedAsset *)self isVideo])
  {
    uint64_t v4 = (void *)MEMORY[0x1E4F1CB10];
    uint64_t v5 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
    goto LABEL_8;
  }
  uint64_t v7 = 0;
LABEL_12:
  return v7;
}

- (void)synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:(id)a3 withCompletionHandler:(id)a4
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = (void *)MEMORY[0x19F38D3B0]();
  if ((PLIsAssetsd() & 1) == 0)
  {
    uint64_t v15 = [MEMORY[0x1E4F28B00] currentHandler];
    [v15 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:10698 description:@"synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath is only safe from inside of assetsd!"];
  }
  id v10 = objc_alloc_init(MEMORY[0x1E4F28CB8]);
  uint64_t v11 = [(PLManagedAsset *)self pathForOriginalFile];
  unsigned int v12 = [(PLManagedAsset *)self pathForSubstandardFullsizeRenderImageFile];
  if (([v10 fileExistsAtPath:v12] & 1) == 0)
  {
    __int16 v13 = PLBackendGetLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Synchronously generating full size render for a modern async render. This should never happen.", buf, 2u);
    }
  }
  if (!v7)
  {
    id v7 = [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
  }
  if (([v10 fileExistsAtPath:v7] & 1) == 0
    && [v10 fileExistsAtPath:v11]
    && [v10 fileExistsAtPath:v12])
  {
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    v16[2] = __98__PLManagedAsset_synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath_withCompletionHandler___block_invoke;
    v16[3] = &unk_1E58656E8;
    v16[4] = self;
    id v17 = v11;
    id v18 = v7;
    id v19 = v10;
    id v20 = v12;
    id v21 = v8;
    [(PLManagedAsset *)self synchronouslyFetchAdjustmentBlobWithCompletionHandler:v16];
  }
  else
  {
    id v14 = +[PLResourceInstaller onDemand_installAdjustedFullSizeRenderResourceAtFilePath:v7 forAsset:self];
    if (v8) {
      (*((void (**)(id, id))v8 + 2))(v8, v7);
    }
  }
}

void __98__PLManagedAsset_synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath_withCompletionHandler___block_invoke(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  id v13 = a2;
  id v14 = a4;
  id v15 = a5;
  id v16 = a8;
  id v17 = a9;
  int v18 = [v14 isEqualToString:@"com.apple.mobileiphoto"];
  if (v18) {
    LOBYTE(v18) = [v15 isEqualToString:@"2"];
  }
  if (!v13 || (v18 & 1) != 0)
  {
    [*(id *)(a1 + 56) copyItemAtPath:*(void *)(a1 + 64) toPath:*(void *)(a1 + 48) error:0];
    uint64_t v29 = *(void *)(a1 + 72);
    if (v29) {
      (*(void (**)(uint64_t, void))(v29 + 16))(v29, *(void *)(a1 + 48));
    }
  }
  else
  {
    id v30 = v17;
    id v31 = v16;
    dispatch_time_t timeout = dispatch_time(0, 60000000000);
    uint64_t v33 = (int)[*(id *)(a1 + 32) originalOrientation];
    uint64_t v47 = 0;
    __int16 v48 = &v47;
    uint64_t v49 = 0x2020000000;
    char v50 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = (double *)&v42;
    uint64_t v44 = 0x3010000000;
    id v45 = &unk_19BBAE189;
    id v34 = v15;
    id v19 = (double *)MEMORY[0x1E4F1DB30];
    long long v46 = *MEMORY[0x1E4F1DB30];
    id v20 = dispatch_group_create();
    dispatch_group_enter(v20);
    id v22 = *(void **)(a1 + 32);
    uint64_t v21 = *(void *)(a1 + 40);
    v35[0] = MEMORY[0x1E4F143A8];
    v35[1] = 3221225472;
    v35[2] = __98__PLManagedAsset_synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath_withCompletionHandler___block_invoke_2;
    v35[3] = &unk_1E58656C0;
    uint64_t v40 = &v47;
    uint64_t v41 = &v42;
    uint64_t v23 = *(void *)(a1 + 48);
    id v36 = *(id *)(a1 + 56);
    id v37 = *(id *)(a1 + 64);
    id v38 = *(id *)(a1 + 48);
    char v24 = v20;
    uint64_t v39 = v24;
    double v25 = *v19;
    double v26 = v19[1];
    id v15 = v34;
    objc_msgSend(v22, "_asyncGenerateRenderImageFileWithSize:formatIdentifier:formatVersion:adjustmentDataBlob:originalImageFilePath:originalImageEXIFOrientation:renderedImageFilePath:completionHandler:", v14, v34, v13, v21, v33, v23, v25, v26, v35);
    dispatch_group_wait(v24, timeout);
    if (*((unsigned char *)v48 + 24))
    {
      [*(id *)(a1 + 32) setWidth:(uint64_t)v43[4]];
      [*(id *)(a1 + 32) setHeight:(uint64_t)v43[5]];
      id v27 = +[PLResourceInstaller onDemand_installAdjustedFullSizeRenderResourceAtFilePath:*(void *)(a1 + 48) forAsset:*(void *)(a1 + 32)];
    }
    uint64_t v28 = *(void *)(a1 + 72);
    if (v28) {
      (*(void (**)(uint64_t, void))(v28 + 16))(v28, *(void *)(a1 + 48));
    }

    _Block_object_dispose(&v42, 8);
    _Block_object_dispose(&v47, 8);
    id v17 = v30;
    id v16 = v31;
  }
}

void __98__PLManagedAsset_synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath_withCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2, double a3, double a4)
{
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
    uint64_t v5 = *(void *)(*(void *)(a1 + 72) + 8);
    *(double *)(v5 + 32) = a3;
    *(double *)(v5 + 40) = a4;
  }
  else
  {
    [*(id *)(a1 + 32) copyItemAtPath:*(void *)(a1 + 40) toPath:*(void *)(a1 + 48) error:0];
  }
  BOOL v6 = *(NSObject **)(a1 + 56);
  dispatch_group_leave(v6);
}

- (void)_asyncGenerateRenderImageFileWithSize:(CGSize)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 adjustmentDataBlob:(id)a6 originalImageFilePath:(id)a7 originalImageEXIFOrientation:(int64_t)a8 renderedImageFilePath:(id)a9 completionHandler:(id)a10
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v42 = a7;
  id v41 = a9;
  id v40 = a10;
  id v17 = a6;
  id v18 = a5;
  id v19 = a4;
  if ((PLIsAssetsd() & 1) == 0)
  {
    id v38 = [MEMORY[0x1E4F28B00] currentHandler];
    [v38 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:10667 description:@"_asyncGenerateRenderImageFileWithSize is only safe from inside of assetsd!"];
  }
  id v20 = objc_alloc_init(PLPhotoEditPersistenceManager);
  [(PLManagedAsset *)self photoIrisVideoDuration];
  uint64_t v21 = +[PLPhotoEditImportProperties importPropertiesWithEXIFOrientation:a8 duration:CMTimeGetSeconds(&time)];
  id v22 = NSString;
  uint64_t v23 = objc_opt_class();
  char v24 = [(PLManagedAsset *)self uuid];
  double v25 = [(PLManagedAsset *)self pathForOriginalFile];
  double v26 = [v22 stringWithFormat:@"<%@:%p uuid=%@, path=%@>", v23, self, v24, v25];

  id v47 = 0;
  id v27 = [(PLPhotoEditPersistenceManager *)v20 loadPhotoEditData:v17 formatIdentifier:v19 formatVersion:v18 importProperties:v21 error:&v47];

  id v28 = v47;
  if (v27)
  {
    uint64_t v29 = v42;
    id v30 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v42 isDirectory:0];
    id v31 = [[PLPhotoEditSource alloc] initWithURL:v30 type:0 image:0 useEmbeddedPreview:0];
    id v39 = v28;
    __int16 v32 = v21;
    uint64_t v33 = v20;
    id v34 = [[PLPhotoEditRenderer alloc] initWithEditSource:v31];
    [(PLPhotoEditRenderer *)v34 setCompositionController:v27];
    v43[0] = MEMORY[0x1E4F143A8];
    v43[1] = 3221225472;
    v43[2] = __197__PLManagedAsset__asyncGenerateRenderImageFileWithSize_formatIdentifier_formatVersion_adjustmentDataBlob_originalImageFilePath_originalImageEXIFOrientation_renderedImageFilePath_completionHandler___block_invoke;
    v43[3] = &unk_1E5865698;
    id v35 = v41;
    id v44 = v41;
    id v45 = v26;
    id v36 = v40;
    id v46 = v40;
    [(PLPhotoEditRenderer *)v34 generateJPEGImageDataWithCompressionQuality:0 livePhotoPairingIdentifier:v43 completionHandler:0.899999976];

    id v20 = v33;
    uint64_t v21 = v32;
    id v28 = v39;
  }
  else
  {
    id v37 = PLBackendGetLog();
    id v35 = v41;
    uint64_t v29 = v42;
    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      char v50 = v26;
      __int16 v51 = 2112;
      id v52 = v28;
      _os_log_impl(&dword_19B3C7000, v37, OS_LOG_TYPE_ERROR, "Could not upgrade substandard render for %@ ([PLPhotoEditPersistenceManager loadPhotoEditData:] failed. Error: %@)", buf, 0x16u);
    }

    id v36 = v40;
    (*((void (**)(id, void, double, double))v40 + 2))(v40, 0, *MEMORY[0x1E4F1DB30], *(double *)(MEMORY[0x1E4F1DB30] + 8));
  }
}

uint64_t __197__PLManagedAsset__asyncGenerateRenderImageFileWithSize_formatIdentifier_formatVersion_adjustmentDataBlob_originalImageFilePath_originalImageEXIFOrientation_renderedImageFilePath_completionHandler___block_invoke(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  int v9 = [a2 writeToFile:a1[4] options:1073741825 error:0];
  id v10 = PLBackendGetLog();
  uint64_t v11 = v10;
  if (v9)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = a1[5];
      int v20 = 138412802;
      uint64_t v21 = v12;
      __int16 v22 = 1024;
      int v23 = (int)a5;
      __int16 v24 = 1024;
      int v25 = (int)a6;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEBUG, "Upgraded substandard render for %@ to %dx%d", (uint8_t *)&v20, 0x18u);
    }

    v13.n128_f64[0] = a5;
    v14.n128_f64[0] = a6;
    return (*(uint64_t (**)(__n128, __n128))(a1[6] + 16))(v13, v14);
  }
  else
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v17 = a1[4];
      uint64_t v16 = a1[5];
      int v20 = 138413058;
      uint64_t v21 = v16;
      __int16 v22 = 1024;
      int v23 = (int)a5;
      __int16 v24 = 1024;
      int v25 = (int)a6;
      __int16 v26 = 2112;
      uint64_t v27 = v17;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_ERROR, "Could not upgrade substandard render for %@ to %dx%d, failed saving to %@", (uint8_t *)&v20, 0x22u);
    }

    v18.n128_u64[0] = *MEMORY[0x1E4F1DB30];
    v19.n128_u64[0] = *(void *)(MEMORY[0x1E4F1DB30] + 8);
    return (*(uint64_t (**)(__n128, __n128))(a1[6] + 16))(v18, v19);
  }
}

- (void)generateLargeThumbnailFileIfNecessary
{
  v13[1] = *MEMORY[0x1E4F143B8];
  BOOL v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  id v4 = objc_alloc(MEMORY[0x1E4F1C9B8]);
  uint64_t v5 = [(PLManagedAsset *)self pathForOriginalFile];
  CFDataRef v6 = (const __CFData *)[v4 initWithContentsOfFile:v5 options:8 error:0];

  if ([(__CFData *)v6 length])
  {
    id v7 = [(PLManagedAsset *)self uniformTypeIdentifier];
    if (v7)
    {
      uint64_t v12 = *MEMORY[0x1E4F2FF78];
      id v8 = [(PLManagedAsset *)self uniformTypeIdentifier];
      v13[0] = v8;
      CFDictionaryRef v9 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v13 forKeys:&v12 count:1];
    }
    else
    {
      CFDictionaryRef v9 = 0;
    }

    CGImageSourceRef v10 = CGImageSourceCreateWithData(v6, v9);
    LOBYTE(v11) = 0;
    [(PLManagedAsset *)self generateThumbnailsWithImageSource:v10 imageData:v6 metadata:0 allowMediumPreview:0 forceSRGBConversion:0 forFinalCameraImage:0 outSmallThumbnailData:0 isPreviewSource:v11];
    if (v10) {
      CFRelease(v10);
    }
  }
}

- (NSString)pathForLargeDisplayableImageFile
{
  id v5 = 0;
  id v2 = +[PLResourceChooser fileReservationForLargeDisplayableImageFileForAsset:self format:0 allowMetadataSnapshot:0 forceLarge:0 outFilePath:&v5 outImageType:0];
  id v3 = v5;
  return (NSString *)v3;
}

- (NSString)pathForVideoFile
{
  if ([(PLManagedAsset *)self isVideo])
  {
    id v3 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
    id v4 = objc_opt_new();
    char v5 = [v4 fileExistsAtPath:v3 isDirectory:0];

    if ((v5 & 1) == 0)
    {
      if ([(PLManagedAsset *)self hasNonSlomoAdjustments])
      {
        uint64_t v6 = 0;
      }
      else
      {
        uint64_t v6 = [(PLManagedAsset *)self pathForOriginalFile];
      }

      id v3 = (void *)v6;
    }
  }
  else
  {
    id v3 = 0;
  }
  return (NSString *)v3;
}

- (NSString)pathForVideoPreviewFile
{
  if ([(PLManagedAsset *)self hasAdjustments]) {
    [(PLManagedAsset *)self pathForAdjustedLargeThumbnailFile];
  }
  else {
  id v3 = [(PLManagedAsset *)self pathForNonAdjustedLargeThumbnailFile];
  }
  return (NSString *)v3;
}

- (NSString)pathForTrimmedVideoFile
{
  id v2 = [(PLManagedAsset *)self pathForVideoFile];
  id v3 = v2;
  if (v2)
  {
    id v4 = [v2 stringByDeletingPathExtension];
    char v5 = [v4 stringByAppendingPathExtension:@"TRIM.MOV"];
  }
  else
  {
    char v5 = 0;
  }

  return (NSString *)v5;
}

- (id)fileURLForFullsizeRenderImage
{
  id v2 = (void *)MEMORY[0x1E4F1CB10];
  id v3 = [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
  id v4 = [v2 fileURLWithPath:v3 isDirectory:0];

  return v4;
}

- (NSURL)fileURLForThumbnailFile
{
  return (NSURL *)[(PLManagedAsset *)self fileURLForMetadataWithExtension:@"THM"];
}

- (id)fileURLForMetadataWithExtension:(id)a3
{
  id v4 = a3;
  char v5 = [(PLManagedAsset *)self directory];
  if (v5)
  {
    uint64_t v6 = [(PLManagedObject *)self pathManager];
    id v7 = [(PLManagedAsset *)self filename];
    id v8 = [v6 URLForMetadataWithExtension:v4 forMediaInMainDirectory:v5 withFilename:v7];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

- (id)pathForMetadataWithExtension:(id)a3
{
  id v3 = [(PLManagedAsset *)self fileURLForMetadataWithExtension:a3];
  id v4 = [v3 path];

  return v4;
}

- (NSString)pathForMetadataDirectory
{
  id v3 = [(PLManagedAsset *)self directory];
  if (v3)
  {
    id v4 = [(PLManagedObject *)self pathManager];
    int v5 = [v4 isUBF];

    uint64_t v6 = (void *)MEMORY[0x1E4F1CB10];
    id v7 = [(PLManagedObject *)self pathManager];
    id v8 = v7;
    if (v5)
    {
      CFDictionaryRef v9 = [v7 photoDirectoryWithType:10];
      CGImageSourceRef v10 = [v9 stringByAppendingPathComponent:v3];
      uint64_t v11 = [v6 fileURLWithPath:v10 isDirectory:1];
    }
    else
    {
      CFDictionaryRef v9 = [v7 photoMetadataDirectoryForMediaInMainDirectory:v3];
      uint64_t v11 = [v6 fileURLWithPath:v9 isDirectory:1];
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v12 = [v11 path];

  return (NSString *)v12;
}

- (NSString)fileExtension
{
  id v2 = [(PLManagedAsset *)self filename];
  id v3 = [v2 pathExtension];

  return (NSString *)v3;
}

- (NSArray)allUniformTypeIdentifiers
{
  id v3 = (void *)MEMORY[0x1E4F1CA48];
  id v4 = [(PLManagedAsset *)self sidecars];
  int v5 = objc_msgSend(v3, "arrayWithCapacity:", objc_msgSend(v4, "count") + 1);

  uint64_t v6 = [(PLManagedAsset *)self uniformTypeIdentifier];
  if (v6)
  {
    id v7 = [(PLManagedAsset *)self uniformTypeIdentifier];
    [v5 addObject:v7];
  }
  else
  {
    [v5 addObject:&stru_1EEB2EB80];
  }

  id v8 = [(PLManagedAsset *)self sidecars];
  uint64_t v9 = [v8 count];

  if (v9)
  {
    CGImageSourceRef v10 = [(PLManagedAsset *)self sortedSidecarFiles];
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    v12[2] = __43__PLManagedAsset_allUniformTypeIdentifiers__block_invoke;
    v12[3] = &unk_1E58758A8;
    id v13 = v5;
    [v10 enumerateObjectsUsingBlock:v12];
  }
  return (NSArray *)v5;
}

void __43__PLManagedAsset_allUniformTypeIdentifiers__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 uniformTypeIdentifier];
  id v5 = (id)v3;
  if (v3) {
    id v4 = (__CFString *)v3;
  }
  else {
    id v4 = &stru_1EEB2EB80;
  }
  [*(id *)(a1 + 32) addObject:v4];
}

- (id)allFileExtensions
{
  uint64_t v3 = (void *)MEMORY[0x1E4F1CA48];
  id v4 = [(PLManagedAsset *)self sidecars];
  id v5 = objc_msgSend(v3, "arrayWithCapacity:", objc_msgSend(v4, "count") + 1);

  uint64_t v6 = [(PLManagedAsset *)self pathForOriginalFile];
  id v7 = [v6 pathExtension];

  if ([v7 length]) {
    [v5 addObject:v7];
  }
  id v8 = [(PLManagedAsset *)self sidecars];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __35__PLManagedAsset_allFileExtensions__block_invoke;
  v11[3] = &unk_1E5865670;
  id v9 = v5;
  id v12 = v9;
  [v8 enumerateObjectsUsingBlock:v11];

  return v9;
}

void __35__PLManagedAsset_allFileExtensions__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 filename];
  id v4 = [v3 pathExtension];

  [*(id *)(a1 + 32) addObject:v4];
}

- (void)getFileURL:(id *)a3 originalFilename:(id *)a4 uti:(id *)a5 fileSize:(unint64_t *)a6 forSidecarMatchingUTI:(id)a7 requireExactMatch:(BOOL)a8
{
  id v16 = [MEMORY[0x1E4F8CDF8] typeWithIdentifier:a7];
  id v13 = -[PLManagedAsset sidecarFileMatchingContentType:requireExactMatch:requireSort:](self, "sidecarFileMatchingContentType:requireExactMatch:requireSort:");
  __n128 v14 = v13;
  if (a3)
  {
    *a3 = [v13 fileURL];
  }
  if (a6)
  {
    id v15 = [v14 compressedSize];
    *a6 = [v15 unsignedLongLongValue];
  }
  if (a4)
  {
    *a4 = [v14 originalFilename];
  }
  if (a5)
  {
    *a5 = [v14 uniformTypeIdentifier];
  }
}

- (NSString)pathForOriginalFile
{
  id v2 = [(PLManagedAsset *)self mainFileURL];
  uint64_t v3 = [v2 path];

  return (NSString *)v3;
}

- (NSURL)persistedFileSystemAttributesFileURL
{
  if ([(PLManagedAsset *)self hasDeferredProcessingPreviewFile]
    && ![(PLManagedAsset *)self hasOriginalFile])
  {
    uint64_t v3 = [(PLManagedAsset *)self fileURLForCurrentDeferredProcessingPreviewFile];
  }
  else
  {
    uint64_t v3 = [(PLManagedAsset *)self mainFileURL];
  }
  return (NSURL *)v3;
}

- (NSURL)mainFileURL
{
  if (![(PLManagedAsset *)self isReferencedAsset]) {
    goto LABEL_10;
  }
  uint64_t v3 = [(PLManagedAsset *)self masterResourceForCPLType:1];
  id v4 = [v3 fileSystemBookmark];
  id v5 = [v4 fileSystemURL];

  if (!v5)
  {
LABEL_10:
    id v5 = [(PLManagedAsset *)self directory];

    if (v5)
    {
      uint64_t v6 = (void *)MEMORY[0x1E4F1CB10];
      id v7 = [(PLManagedObject *)self pathManager];
      id v8 = [(PLManagedAsset *)self directory];
      id v9 = [(PLManagedAsset *)self filename];
      CGImageSourceRef v10 = objc_msgSend(v7, "assetMainFilePathWithDirectory:filename:bundleScope:", v8, v9, -[PLManagedAsset bundleScope](self, "bundleScope"));
      id v5 = [v6 fileURLWithPath:v10 isDirectory:0];
    }
  }
  return (NSURL *)v5;
}

- (NSString)pathForComputeSyncMediaAnalysisPayloadFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:3 resourceType:14 recipeID:327691 originalFilename:0];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForComputeDirectory];
    id v12 = [v9 stringByAppendingPathComponent:@"ComputeSyncMediaAnalysisPayload.dat"];
  }

  return (NSString *)v12;
}

- (NSString)pathForComputeSyncWrapperFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:3 resourceType:14 recipeID:327689 originalFilename:0];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForComputeDirectory];
    id v12 = [v9 stringByAppendingPathComponent:@"ComputeSyncWrapper.dat"];
  }

  return (NSString *)v12;
}

- (id)pathForAdjustedSmallVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  BOOL v5 = [(PLManagedAsset *)self isPhotoIris];
  if (v4)
  {
    uint64_t v6 = (id *)MEMORY[0x1E4F44490];
    if (!v5) {
      uint64_t v6 = (id *)MEMORY[0x1E4F44438];
    }
    uint64_t v7 = (objc_class *)MEMORY[0x1E4F8B978];
    id v8 = *v6;
    id v9 = [v7 alloc];
    CGImageSourceRef v10 = [(PLManagedAsset *)self uuid];
    uint64_t v11 = [(PLManagedAsset *)self bundleScope];
    id v12 = [v8 identifier];

    if ([(PLManagedAsset *)self isPhotoIris]) {
      uint64_t v13 = 131277;
    }
    else {
      uint64_t v13 = 131081;
    }
    __n128 v14 = (void *)[v9 initWithAssetUuid:v10 bundleScope:v11 uti:v12 resourceVersion:2 recipeID:v13];

    id v15 = [(PLManagedObject *)self pathManager];
    id v16 = [v15 readOnlyUrlWithIdentifier:v14];
    uint64_t v17 = [v16 path];
  }
  else
  {
    __n128 v18 = @"small.MP4";
    if (v5) {
      __n128 v18 = @"small.MOV";
    }
    __n128 v19 = v18;
    int v20 = [(PLManagedAsset *)self filename];
    uint64_t v21 = [v20 stringByDeletingPathExtension];
    __n128 v14 = [v21 stringByAppendingPathExtension:v19];

    id v15 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v17 = [v15 stringByAppendingPathComponent:v14];
  }

  return v17;
}

- (id)pathForNonAdjustedSmallVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  BOOL v5 = [(PLManagedAsset *)self isPhotoIris];
  if (v4)
  {
    uint64_t v6 = (id *)MEMORY[0x1E4F44490];
    if (!v5) {
      uint64_t v6 = (id *)MEMORY[0x1E4F44438];
    }
    uint64_t v7 = (objc_class *)MEMORY[0x1E4F8B978];
    id v8 = *v6;
    id v9 = [v7 alloc];
    CGImageSourceRef v10 = [(PLManagedAsset *)self uuid];
    uint64_t v11 = [(PLManagedAsset *)self bundleScope];
    id v12 = [v8 identifier];

    if ([(PLManagedAsset *)self isPhotoIris]) {
      uint64_t v13 = 131277;
    }
    else {
      uint64_t v13 = 131081;
    }
    __n128 v14 = (void *)[v9 initWithAssetUuid:v10 bundleScope:v11 uti:v12 resourceVersion:0 recipeID:v13];

    id v15 = [(PLManagedObject *)self pathManager];
    id v16 = [v15 readOnlyUrlWithIdentifier:v14];
    uint64_t v17 = [v16 path];
  }
  else
  {
    if (v5) {
      __n128 v18 = @"small.MOV";
    }
    else {
      __n128 v18 = @"small.MP4";
    }
    uint64_t v17 = [(PLManagedAsset *)self pathForMetadataWithExtension:v18];
  }
  return v17;
}

- (id)pathForAdjustedLargeVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44490] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:131077];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    uint64_t v13 = [(PLManagedAsset *)self filename];
    __n128 v14 = [v13 stringByDeletingPathExtension];
    id v9 = [v14 stringByAppendingPathExtension:@"large.MOV"];

    CGImageSourceRef v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    id v12 = [v10 stringByAppendingPathComponent:v9];
  }

  return v12;
}

- (id)pathForAdjustedMediumHDRVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44490] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:131475];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    uint64_t v13 = [(PLManagedAsset *)self filename];
    __n128 v14 = [v13 stringByDeletingPathExtension];
    id v9 = [v14 stringByAppendingPathExtension:@"medium-hdr.MOV"];

    CGImageSourceRef v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    id v12 = [v10 stringByAppendingPathComponent:v9];
  }

  return v12;
}

- (id)pathForAdjustedMediumVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  BOOL v5 = [(PLManagedAsset *)self isPhotoIris];
  if (v4)
  {
    uint64_t v6 = (id *)MEMORY[0x1E4F44490];
    if (!v5) {
      uint64_t v6 = (id *)MEMORY[0x1E4F44438];
    }
    uint64_t v7 = (objc_class *)MEMORY[0x1E4F8B978];
    id v8 = *v6;
    id v9 = [v7 alloc];
    CGImageSourceRef v10 = [(PLManagedAsset *)self uuid];
    uint64_t v11 = [(PLManagedAsset *)self bundleScope];
    id v12 = [v8 identifier];

    if ([(PLManagedAsset *)self isPhotoIris]) {
      uint64_t v13 = 131275;
    }
    else {
      uint64_t v13 = 131079;
    }
    __n128 v14 = (void *)[v9 initWithAssetUuid:v10 bundleScope:v11 uti:v12 resourceVersion:2 recipeID:v13];

    id v15 = [(PLManagedObject *)self pathManager];
    id v16 = [v15 readOnlyUrlWithIdentifier:v14];
    uint64_t v17 = [v16 path];
  }
  else
  {
    __n128 v18 = @"medium.MP4";
    if (v5) {
      __n128 v18 = @"medium.MOV";
    }
    __n128 v19 = v18;
    int v20 = [(PLManagedAsset *)self filename];
    uint64_t v21 = [v20 stringByDeletingPathExtension];
    __n128 v14 = [v21 stringByAppendingPathExtension:v19];

    id v15 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v17 = [v15 stringByAppendingPathComponent:v14];
  }

  return v17;
}

- (id)pathForNonAdjustedLargeVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44490] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:0 recipeID:131077];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v12 = [(PLManagedAsset *)self pathForMetadataWithExtension:@"large.MOV"];
  }
  return v12;
}

- (id)pathForNonAdjustedMediumHDRVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44490] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:0 recipeID:131475];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v12 = [(PLManagedAsset *)self pathForMetadataWithExtension:@"medium-hdr.MOV"];
  }
  return v12;
}

- (id)pathForNonAdjustedMediumVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  BOOL v5 = [(PLManagedAsset *)self isPhotoIris];
  if (v4)
  {
    uint64_t v6 = (id *)MEMORY[0x1E4F44490];
    if (!v5) {
      uint64_t v6 = (id *)MEMORY[0x1E4F44438];
    }
    uint64_t v7 = (objc_class *)MEMORY[0x1E4F8B978];
    id v8 = *v6;
    id v9 = [v7 alloc];
    CGImageSourceRef v10 = [(PLManagedAsset *)self uuid];
    uint64_t v11 = [(PLManagedAsset *)self bundleScope];
    id v12 = [v8 identifier];

    if ([(PLManagedAsset *)self isPhotoIris]) {
      uint64_t v13 = 131275;
    }
    else {
      uint64_t v13 = 131079;
    }
    __n128 v14 = (void *)[v9 initWithAssetUuid:v10 bundleScope:v11 uti:v12 resourceVersion:0 recipeID:v13];

    id v15 = [(PLManagedObject *)self pathManager];
    id v16 = [v15 readOnlyUrlWithIdentifier:v14];
    uint64_t v17 = [v16 path];
  }
  else
  {
    if (v5) {
      __n128 v18 = @"medium.MOV";
    }
    else {
      __n128 v18 = @"medium.MP4";
    }
    uint64_t v17 = [(PLManagedAsset *)self pathForMetadataWithExtension:v18];
  }
  return v17;
}

- (id)fileURLForAdjustedMediumThumbnailFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:65743];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
  }
  else
  {
    id v12 = [(PLManagedAsset *)self filename];
    uint64_t v13 = [v12 stringByDeletingPathExtension];
    __n128 v14 = [(id)objc_opt_class() extensionForMediumThumbnailFile];
    id v9 = [v13 stringByAppendingPathExtension:v14];

    id v15 = (void *)MEMORY[0x1E4F1CB10];
    CGImageSourceRef v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    id v16 = [v10 stringByAppendingPathComponent:v9];
    uint64_t v11 = [v15 fileURLWithPath:v16 isDirectory:0];
  }
  return v11;
}

- (id)fileURLForNonAdjustedMediumThumbnailFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:0 recipeID:65743];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
  }
  else
  {
    id v9 = [(id)objc_opt_class() extensionForMediumThumbnailFile];
    uint64_t v11 = [(PLManagedAsset *)self fileURLForMetadataWithExtension:v9];
  }

  return v11;
}

- (id)pathForMediumVideoFile
{
  if ([(PLManagedAsset *)self hasAdjustments]) {
    [(PLManagedAsset *)self pathForAdjustedMediumVideoFile];
  }
  else {
  uint64_t v3 = [(PLManagedAsset *)self pathForNonAdjustedMediumVideoFile];
  }
  return v3;
}

- (id)fileURLForMediumThumbnailFile
{
  if ([(PLManagedAsset *)self hasAdjustments]) {
    [(PLManagedAsset *)self fileURLForAdjustedMediumThumbnailFile];
  }
  else {
  uint64_t v3 = [(PLManagedAsset *)self fileURLForNonAdjustedMediumThumbnailFile];
  }
  return v3;
}

- (id)pathForAdjustedMediumThumbnailFile
{
  id v2 = [(PLManagedAsset *)self fileURLForAdjustedMediumThumbnailFile];
  uint64_t v3 = [v2 path];

  return v3;
}

- (id)pathForNonAdjustedMediumThumbnailFile
{
  id v2 = [(PLManagedAsset *)self fileURLForNonAdjustedMediumThumbnailFile];
  uint64_t v3 = [v2 path];

  return v3;
}

- (NSString)pathForMediumThumbnailFile
{
  id v2 = [(PLManagedAsset *)self fileURLForMediumThumbnailFile];
  uint64_t v3 = [v2 path];

  return (NSString *)v3;
}

- (id)fileURLForDeferredVideoComplement
{
  id v2 = [(PLManagedAsset *)self pathForDeferredVideoComplementFile];
  if (v2)
  {
    uint64_t v3 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v2 isDirectory:0];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

- (id)fileURLForCurrentDeferredProcessingPreviewFile
{
  id v2 = [(PLManagedAsset *)self pathForDeferredProcessingPreviewFile];
  if (v2)
  {
    uint64_t v3 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v2 isDirectory:0];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

- (id)fileURLForAsyncAdjustedRenderPreviewImage
{
  id v2 = [(PLManagedAsset *)self pathForAsyncAdjustedRenderPreviewImageFile];
  if (v2)
  {
    uint64_t v3 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v2 isDirectory:0];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

- (id)fileURLForFullsizeRenderVideo
{
  id v2 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
  if (v2)
  {
    uint64_t v3 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v2 isDirectory:0];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

- (id)fileURLForOriginalVideoComplement
{
  id v2 = [(PLManagedAsset *)self pathForVideoComplementFile];
  if (v2)
  {
    uint64_t v3 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v2 isDirectory:0];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

- (id)fileURLForAdjustedLargeThumbnailFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:65741];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
  }
  else
  {
    id v12 = [(PLManagedAsset *)self filename];
    uint64_t v13 = [v12 stringByDeletingPathExtension];
    __n128 v14 = [(id)objc_opt_class() extensionForLargeThumbnailFile];
    id v9 = [v13 stringByAppendingPathExtension:v14];

    id v15 = (void *)MEMORY[0x1E4F1CB10];
    CGImageSourceRef v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    id v16 = [v10 stringByAppendingPathComponent:v9];
    uint64_t v11 = [v15 fileURLWithPath:v16 isDirectory:0];
  }
  return v11;
}

- (id)fileURLForNonAdjustedLargeThumbnailFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  if (objc_msgSend(v3, "shouldUseFileIdentifierForBundleScope:", -[PLManagedAsset bundleScope](self, "bundleScope")))
  {
    id v4 = objc_alloc(MEMORY[0x1E4F8B978]);
    id v5 = [(PLManagedAsset *)self uuid];
    uint64_t v6 = [(PLManagedAsset *)self bundleScope];
    uint64_t v7 = [(id)*MEMORY[0x1E4F44410] identifier];
    id v8 = (void *)[v4 initWithAssetUuid:v5 bundleScope:v6 uti:v7 resourceVersion:0 recipeID:65741];

    [v3 readOnlyUrlWithIdentifier:v8];
  }
  else
  {
    id v8 = [(id)objc_opt_class() extensionForLargeThumbnailFile];
    [(PLManagedAsset *)self fileURLForMetadataWithExtension:v8];
  id v9 = };

  return v9;
}

- (NSURL)fileURLForLargeThumbnailFile
{
  if ([(PLManagedAsset *)self hasAdjustments]) {
    [(PLManagedAsset *)self fileURLForAdjustedLargeThumbnailFile];
  }
  else {
  uint64_t v3 = [(PLManagedAsset *)self fileURLForNonAdjustedLargeThumbnailFile];
  }
  return (NSURL *)v3;
}

- (id)pathForAlchemistImage
{
  uint64_t v3 = objc_opt_class();
  id v4 = [(PLManagedAsset *)self uuid];
  uint64_t v5 = [(PLManagedAsset *)self bundleScope];
  uint64_t v6 = [(PLManagedAsset *)self directory];
  uint64_t v7 = [(PLManagedAsset *)self filename];
  id v8 = [(PLManagedObject *)self pathManager];
  id v9 = [v3 pathForAlchemistImageWithUUID:v4 bundleScope:v5 directory:v6 filename:v7 pathManager:v8];

  return v9;
}

- (id)pathForGenerativePlaygroundFaceResourcesFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:3 resourceType:14 recipeID:327693 originalFilename:0];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForComputeDirectory];
    id v12 = [v9 stringByAppendingPathComponent:@"GenerativePlaygroundFaceResources.dat"];
  }

  return v12;
}

- (id)pathForWallpaperComputeResourcesFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:3 resourceType:14 recipeID:327687 originalFilename:0];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForComputeDirectory];
    id v12 = [v9 stringByAppendingPathComponent:@"WallpaperComputeResources.dat"];
  }

  return v12;
}

- (id)pathForAdjustedLargeThumbnailFile
{
  id v2 = [(PLManagedAsset *)self fileURLForAdjustedLargeThumbnailFile];
  uint64_t v3 = [v2 path];

  return v3;
}

- (id)pathForNonAdjustedLargeThumbnailFile
{
  id v2 = [(PLManagedAsset *)self fileURLForNonAdjustedLargeThumbnailFile];
  uint64_t v3 = [v2 path];

  return v3;
}

- (NSString)pathForLargeThumbnailFile
{
  id v2 = [(PLManagedAsset *)self fileURLForLargeThumbnailFile];
  uint64_t v3 = [v2 path];

  return (NSString *)v3;
}

- (id)pathForAdjustedLargeSizeImageFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:65739];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    uint64_t v13 = [(PLManagedAsset *)self filename];
    __n128 v14 = [v13 stringByDeletingPathExtension];
    id v9 = [v14 stringByAppendingPathExtension:@"large.JPG"];

    CGImageSourceRef v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    id v12 = [v10 stringByAppendingPathComponent:v9];
  }

  return v12;
}

- (id)pathForNonAdjustedLargeSizeImageFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:0 recipeID:65739];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v12 = [(PLManagedAsset *)self pathForMetadataWithExtension:@"large.JPG"];
  }
  return v12;
}

- (id)pathForLargeSizeImageFile
{
  if ([(PLManagedAsset *)self hasAdjustments]) {
    [(PLManagedAsset *)self pathForAdjustedLargeSizeImageFile];
  }
  else {
  uint64_t v3 = [(PLManagedAsset *)self pathForNonAdjustedLargeSizeImageFile];
  }
  return v3;
}

- (id)pathForAsyncAdjustedRenderPreviewImageFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:65941];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    id v12 = [v9 stringByAppendingPathComponent:@"AsyncRenderPreview.JPG"];
  }

  return v12;
}

- (id)pathForNonAdjustedFullsizeImageFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:0 recipeID:65737];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    id v12 = [(PLManagedAsset *)self pathForMetadataWithExtension:@"full.JPG"];
  }
  return v12;
}

- (id)pathForFullsizeImageFile
{
  if ([(PLManagedAsset *)self hasAdjustments]) {
    [(PLManagedAsset *)self pathForAdjustedFullsizeImageFile];
  }
  else {
  uint64_t v3 = [(PLManagedAsset *)self pathForNonAdjustedFullsizeImageFile];
  }
  return v3;
}

- (NSString)pathForVideoComplementSpatialOverCaptureContentFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    id v8 = [(id)*MEMORY[0x1E4F44490] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:0 resourceType:11];

    CGImageSourceRef v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    uint64_t v13 = [(PLManagedAsset *)self pathForVideoComplementFile];
    id v9 = [v13 pathExtension];
    CGImageSourceRef v10 = [v13 stringByDeletingPathExtension];
    uint64_t v11 = [v10 stringByAppendingString:*MEMORY[0x1E4F8C548]];
    id v12 = [v11 stringByAppendingPathExtension:v9];
  }
  return (NSString *)v12;
}

- (NSString)pathForSpatialOverCaptureContentFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = (void *)MEMORY[0x1E4F8B978];
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self originalUniformTypeIdentifier];
    LODWORD(v5) = [v5 isValidFileIdentifierParametersForUUID:v6 utiString:v7 originalFilename:0];

    id v8 = 0;
    if (!v5) {
      goto LABEL_6;
    }
    id v9 = objc_alloc(MEMORY[0x1E4F8B978]);
    CGImageSourceRef v10 = [(PLManagedAsset *)self uuid];
    uint64_t v11 = [(PLManagedAsset *)self bundleScope];
    id v12 = [(PLManagedAsset *)self originalUniformTypeIdentifier];
    uint64_t v13 = (void *)[v9 initWithAssetUuid:v10 bundleScope:v11 uti:v12 resourceVersion:0 resourceType:10];

    __n128 v14 = [(PLManagedObject *)self pathManager];
    id v15 = [v14 readOnlyUrlWithIdentifier:v13];
    id v8 = [v15 path];
  }
  else
  {
    id v16 = [(PLManagedAsset *)self pathForOriginalFile];
    uint64_t v13 = [v16 pathExtension];
    __n128 v14 = [v16 stringByDeletingPathExtension];
    id v15 = [v14 stringByAppendingString:*MEMORY[0x1E4F8C548]];
    id v8 = [v15 stringByAppendingPathExtension:v13];
  }
LABEL_6:
  return (NSString *)v8;
}

- (id)pathForDeferredProcessingPreviewFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  char v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = &stru_1EEB2EB80;
  }
  else
  {
    uint64_t v6 = [(PLManagedAsset *)self pathForOriginalFile];
    uint64_t v7 = [v6 pathExtension];
    int v8 = [(PLManagedAsset *)self deferredProcessingNeeded];
    id v9 = (id *)MEMORY[0x1E4F8C300];
    if (v8 == 10) {
      id v9 = (id *)MEMORY[0x1E4F8C540];
    }
    id v10 = *v9;
    uint64_t v11 = [v6 stringByDeletingPathExtension];
    id v12 = [v11 stringByAppendingString:v10];
    id v5 = [v12 stringByAppendingPathExtension:v7];
  }
  return v5;
}

- (id)pathForDeferredVideoComplementFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  char v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = 0;
  }
  else
  {
    uint64_t v6 = [(PLManagedAsset *)self pathForVideoComplementFile];
    uint64_t v7 = [v6 pathExtension];
    uint64_t v8 = *MEMORY[0x1E4F8C488];
    id v9 = [v6 stringByDeletingPathExtension];
    id v10 = [v9 stringByAppendingString:v8];
    id v5 = [v10 stringByAppendingPathExtension:v7];
  }
  return v5;
}

- (id)pathForVideoComplementFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  if (!objc_msgSend(v3, "shouldUseFileIdentifierForBundleScope:", -[PLManagedAsset bundleScope](self, "bundleScope"))|| -[PLManagedAsset isCloudSharedAsset](self, "isCloudSharedAsset"))
  {
    char v4 = [(PLManagedAsset *)self pathForOriginalFile];
    id v5 = [v4 stringByDeletingPathExtension];
    uint64_t v6 = [v5 stringByAppendingPathExtension:@"MOV"];
LABEL_4:
    uint64_t v7 = (void *)v6;

    goto LABEL_5;
  }
  if (![(PLManagedAsset *)self isReferencedAsset]) {
    goto LABEL_10;
  }
  id v9 = [(PLManagedAsset *)self masterResourceForCPLType:18];
  id v10 = [v9 fileSystemBookmark];
  uint64_t v11 = [v10 fileSystemURL];
  uint64_t v7 = [v11 path];

  if (!v7)
  {
LABEL_10:
    id v12 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v13 = [(PLManagedAsset *)self uuid];
    uint64_t v14 = [(PLManagedAsset *)self bundleScope];
    id v15 = [(id)*MEMORY[0x1E4F44490] identifier];
    id v5 = (void *)[v12 initWithAssetUuid:v13 bundleScope:v14 uti:v15 resourceVersion:0 resourceType:3];

    char v4 = [v3 readOnlyUrlWithIdentifier:v5];
    uint64_t v6 = [v4 path];
    goto LABEL_4;
  }
LABEL_5:

  return v7;
}

- (id)pathForAdjustedMediaMetadataFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:327683];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    id v12 = [v11 path];
  }
  else
  {
    uint64_t v13 = [(PLManagedAsset *)self filename];
    uint64_t v14 = [v13 stringByDeletingPathExtension];
    id v9 = [v14 stringByAppendingPathExtension:@"media.dat"];

    id v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    id v12 = [v10 stringByAppendingPathComponent:v9];
  }

  return v12;
}

- (id)pathForVideoMetadataFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44490] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:0 resourceType:13];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    [v11 path];
  }
  else
  {
    uint64_t v12 = *MEMORY[0x1E4F8C598];
    uint64_t v11 = [(PLManagedAsset *)self pathForMetadataWithExtension:*MEMORY[0x1E4F8C598]];
    id v9 = [v11 stringByDeletingPathExtension];
    id v10 = [v9 stringByAppendingString:*MEMORY[0x1E4F8C5A0]];
    [v10 stringByAppendingPathExtension:v12];
  uint64_t v13 = };

  return v13;
}

- (id)pathForMediaMetadataFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:0 recipeID:327683];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    uint64_t v12 = [v11 path];
  }
  else
  {
    uint64_t v12 = [(PLManagedAsset *)self pathForMetadataWithExtension:@"media.dat"];
  }
  return v12;
}

- (id)pathForCameraMetadataFile
{
  uint64_t v3 = [(PLManagedObject *)self photoLibrary];
  int v4 = [v3 pathManager];
  id v5 = [v4 privateDirectoryWithSubType:9 createIfNeeded:1 error:0];

  uint64_t v6 = [(PLManagedAsset *)self originalFilename];
  uint64_t v7 = [v6 stringByDeletingPathExtension];
  uint64_t v8 = [v7 stringByAppendingPathExtension:*MEMORY[0x1E4F8C620]];

  id v9 = [v5 stringByAppendingPathComponent:v8];

  return v9;
}

- (NSString)pathForAdjustmentSecondaryDataFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 resourceType:7];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    uint64_t v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v12 = [v9 stringByAppendingPathComponent:@"AdjustmentsSecondary.data"];
  }

  return (NSString *)v12;
}

- (id)pathForAdjustmentDataFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:0];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    uint64_t v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v12 = [v9 stringByAppendingPathComponent:@"Adjustments.data"];
  }

  return v12;
}

- (NSString)pathForOriginalAdjustmentFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  if ([v3 isUBF])
  {
    id v4 = objc_alloc(MEMORY[0x1E4F8B978]);
    id v5 = [(PLManagedAsset *)self uuid];
    uint64_t v6 = [(PLManagedAsset *)self bundleScope];
    uint64_t v7 = [MEMORY[0x1E4F8CDF8] supplementalResourceAAEType];
    uint64_t v8 = [v7 identifier];
    id v9 = (id)[v4 initWithAssetUuid:v5 bundleScope:v6 uti:v8 resourceVersion:0 resourceType:5];

    id v10 = [v3 readOnlyUrlWithIdentifier:v9];
    uint64_t v11 = [v10 path];
  }
  else
  {
    id v9 = [(id)*MEMORY[0x1E4F8D2E8] uppercaseString];
    [v9 UTF8String];
    id v10 = [(PLManagedAsset *)self filename];
    uint64_t v12 = [(PLManagedAsset *)self directory];
    uint64_t v13 = PLDCIMURLForResourcePropertiesAndPathManager();
    uint64_t v11 = [v13 path];
  }
  return (NSString *)v11;
}

- (NSString)pathForAdjustmentFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44488] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:0];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    uint64_t v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v12 = [v9 stringByAppendingPathComponent:@"Adjustments.plist"];
  }

  return (NSString *)v12;
}

- (NSString)pathForPenultimateFullsizeRenderVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44490] identifier];
    id v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:1 recipeID:0];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    uint64_t v12 = [v11 path];
  }
  else
  {
    id v9 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v12 = [v9 stringByAppendingPathComponent:@"PenultimateFullSizeRender.mov"];
  }

  return (NSString *)v12;
}

- (id)pathForPenultimateFullsizeRenderImageFileWithUTI:(id)a3
{
  id v4 = a3;
  if (!v4)
  {
    id v4 = [(id)*MEMORY[0x1E4F44410] identifier];
  }
  id v5 = [(PLManagedObject *)self pathManager];
  int v6 = [v5 isUBF];

  if (v6)
  {
    id v7 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v8 = [(PLManagedAsset *)self uuid];
    id v9 = objc_msgSend(v7, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v8, -[PLManagedAsset bundleScope](self, "bundleScope"), v4, 1, 0);

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    [v11 path];
  }
  else
  {
    uint64_t v12 = [(id)objc_opt_class() preferredFileExtensionForType:v4];
    id v9 = [v12 lowercaseString];

    id v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v11 = [v10 stringByAppendingPathComponent:@"PenultimateFullSizeRender"];
    [v11 stringByAppendingPathExtension:v9];
  uint64_t v13 = };

  return v13;
}

- (NSString)pathForPenultimateFullsizeRenderImageFile
{
  uint64_t v3 = [(PLManagedAsset *)self penultimateImageResource];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 uniformTypeIdentifier];
    int v6 = [v5 identifier];
  }
  else
  {
    int v6 = [(id)*MEMORY[0x1E4F44410] identifier];
  }
  id v7 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFileWithUTI:v6];

  return (NSString *)v7;
}

- (NSString)pathForFullsizeRenderVideoFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    int v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44490] identifier];
    if ([(PLManagedAsset *)self isPhotoIris]) {
      uint64_t v9 = 131272;
    }
    else {
      uint64_t v9 = 0x20000;
    }
    id v10 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:v9];

    uint64_t v11 = [(PLManagedObject *)self pathManager];
    uint64_t v12 = [v11 readOnlyUrlWithIdentifier:v10];
    uint64_t v13 = [v12 path];
  }
  else
  {
    id v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v13 = [v10 stringByAppendingPathComponent:@"FullSizeRender.mov"];
  }

  return (NSString *)v13;
}

- (id)pathForLocalVideoKeyFrame
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    int v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    uint64_t v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:3 recipeID:65749];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    uint64_t v12 = [v11 path];
  }
  else
  {
    uint64_t v9 = [(PLManagedAsset *)self thumbnailIdentifier];

    if (v9)
    {
      id v13 = objc_alloc(MEMORY[0x1E4F29088]);
      uint64_t v14 = [(PLManagedAsset *)self thumbnailIdentifier];
      id v15 = (void *)[v13 initWithString:v14];

      uint64_t v9 = [v15 path];
    }
    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 photoDirectoryWithType:30 createIfNeeded:1 error:0];
    id v16 = [v11 stringByAppendingPathComponent:v9];
    uint64_t v12 = [v16 stringByAppendingPathComponent:@"LocalVideoKeyFrame.jpg"];
  }
  return v12;
}

- (id)pathForTransientVideoPosterFramePreview
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    int v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    uint64_t v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:65948];

    id v10 = [(PLManagedObject *)self pathManager];
    uint64_t v11 = [v10 readOnlyUrlWithIdentifier:v9];
    uint64_t v12 = [v11 path];
  }
  else
  {
    uint64_t v9 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v12 = [v9 stringByAppendingPathComponent:@"VideoPosterFramePreview.jpg"];
  }

  return v12;
}

- (id)pathForBestAvailableFullsizeRenderImageFileOutIsSubstandard:(BOOL *)a3
{
  id v5 = [MEMORY[0x1E4F8B908] fileManager];
  int v6 = [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
  if (![v5 fileExistsAtPath:v6]) {
    goto LABEL_24;
  }
  id v7 = v6;
  uint64_t v8 = v7;
  if (a3) {
    *a3 = 0;
  }
  uint64_t v9 = v7;
  if (!v7)
  {
LABEL_24:
    id v10 = [(id)*MEMORY[0x1E4F443E0] identifier];
    uint64_t v8 = [(PLManagedAsset *)self pathForFullsizeRenderImageFileWithUTI:v10];

    if (![v5 fileExistsAtPath:v8]) {
      goto LABEL_9;
    }
    id v11 = v8;
    uint64_t v8 = v11;
    if (a3) {
      *a3 = 0;
    }
    uint64_t v9 = v11;
    if (!v11)
    {
LABEL_9:
      uint64_t v12 = [(PLManagedAsset *)self pathForSubstandardFullsizeRenderImageFile];

      if (![v5 fileExistsAtPath:v12]) {
        goto LABEL_14;
      }
      id v13 = v12;
      uint64_t v8 = v13;
      if (a3) {
        *a3 = 1;
      }
      uint64_t v9 = v13;
      if (!v13)
      {
        uint64_t v12 = 0;
LABEL_14:
        uint64_t v9 = [(PLManagedAsset *)self pathForAsyncAdjustedRenderPreviewImageFile];

        if ([v5 fileExistsAtPath:v9])
        {
          id v14 = v9;
          uint64_t v8 = v14;
          if (a3) {
            *a3 = 1;
          }
          uint64_t v9 = v14;
        }
        else
        {
          uint64_t v8 = 0;
        }
      }
    }
  }

  return v8;
}

- (id)pathForSubstandardFullsizeRenderImageFile
{
  uint64_t v3 = [(PLManagedObject *)self pathManager];
  int v4 = [v3 isUBF];

  if (v4)
  {
    id v5 = objc_alloc(MEMORY[0x1E4F8B978]);
    int v6 = [(PLManagedAsset *)self uuid];
    uint64_t v7 = [(PLManagedAsset *)self bundleScope];
    uint64_t v8 = [(id)*MEMORY[0x1E4F44410] identifier];
    uint64_t v9 = (void *)[v5 initWithAssetUuid:v6 bundleScope:v7 uti:v8 resourceVersion:2 recipeID:65937];

    id v10 = [(PLManagedObject *)self pathManager];
    id v11 = [v10 readOnlyUrlWithIdentifier:v9];
    uint64_t v12 = [v11 path];
  }
  else
  {
    uint64_t v9 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    uint64_t v12 = [v9 stringByAppendingPathComponent:@"SubstandardFullSizeRender.jpg"];
  }

  return v12;
}

- (id)pathForFullsizeRenderImageFileWithUTI:(id)a3
{
  id v4 = a3;
  if (!v4)
  {
    id v4 = [(id)*MEMORY[0x1E4F44410] identifier];
  }
  id v5 = [(PLManagedObject *)self pathManager];
  int v6 = [v5 isUBF];

  if (v6)
  {
    id v7 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v8 = [(PLManagedAsset *)self uuid];
    uint64_t v9 = objc_msgSend(v7, "initWithAssetUuid:bundleScope:uti:resourceVersion:recipeID:", v8, -[PLManagedAsset bundleScope](self, "bundleScope"), v4, 2, 65938);

    id v10 = [(PLManagedObject *)self pathManager];
    id v11 = [v10 readOnlyUrlWithIdentifier:v9];
    [v11 path];
  }
  else
  {
    uint64_t v12 = [(id)objc_opt_class() preferredFileExtensionForType:v4];
    uint64_t v9 = [v12 lowercaseString];

    id v10 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
    id v11 = [v10 stringByAppendingPathComponent:@"FullSizeRender"];
    [v11 stringByAppendingPathExtension:v9];
  id v13 = };

  return v13;
}

- (id)fileTypeForFullsizeRenderImage
{
  if ([(PLManagedAsset *)self isPhoto]
    && ([(PLManagedAsset *)self uniformTypeIdentifier],
        (uint64_t v3 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v4 = (void *)v3;
    id v5 = [(PLManagedAsset *)self uniformTypeIdentifier];
  }
  else
  {
    id v5 = [(id)*MEMORY[0x1E4F44410] identifier];
  }
  if ([(id)objc_opt_class() isPrimaryImageFormatForUTI:v5])
  {
    int v6 = [(id)*MEMORY[0x1E4F443E8] identifier];
    char v7 = [v5 isEqualToString:v6];

    if ((v7 & 1) == 0) {
      goto LABEL_12;
    }
    uint64_t v8 = (id *)MEMORY[0x1E4F443E0];
  }
  else
  {
    BOOL v9 = [(PLManagedAsset *)self isRAW];
    uint64_t v8 = (id *)MEMORY[0x1E4F44410];
    if (!v9 && [(PLManagedAsset *)self hdrType] == 11) {
      uint64_t v8 = (id *)MEMORY[0x1E4F443E0];
    }
  }
  uint64_t v10 = [*v8 identifier];

  id v5 = (void *)v10;
LABEL_12:
  return v5;
}

- (NSString)pathForFullsizeRenderImageFile
{
  uint64_t v3 = [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_1028];
  id v4 = [v3 fileURL];
  id v5 = v4;
  if (v4)
  {
    int v6 = [v4 path];
  }
  else
  {
    char v7 = [(PLManagedAsset *)self fileTypeForFullsizeRenderImage];
    int v6 = [(PLManagedAsset *)self pathForFullsizeRenderImageFileWithUTI:v7];
  }
  return (NSString *)v6;
}

BOOL __48__PLManagedAsset_pathForFullsizeRenderImageFile__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 recipeID] == 65938 && objc_msgSend(v2, "version") == 2;

  return v3;
}

- (BOOL)_migrateKeyedArchiverAdjustmentsToPropertyListSerializationFormat
{
  BOOL v3 = [(PLManagedAsset *)self pathForAdjustmentFile];
  id v4 = objc_alloc(MEMORY[0x1E4F8CE18]);
  id v5 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v3 isDirectory:0];
  int v6 = (void *)[v4 initWithURL:v5];

  BOOL v7 = 0;
  if ([v6 isRecognizedFormat])
  {
    id v8 = objc_alloc(MEMORY[0x1E4F8CE18]);
    if (v6) {
      [v6 slowMotionTimeRange];
    }
    else {
      memset(v21, 0, sizeof(v21));
    }
    [v6 slowMotionRate];
    BOOL v9 = objc_msgSend(v8, "initWithSlowMotionTimeRange:rate:", v21);
    uint64_t v10 = [v9 adjustmentFormatIdentifier];
    id v11 = [v6 adjustmentFormatIdentifier];
    if ([v10 isEqualToString:v11])
    {
      uint64_t v12 = [v9 adjustmentFormatVersion];
      id v13 = [v6 adjustmentFormatVersion];
      if ([v12 isEqualToString:v13])
      {
        id v14 = [v9 adjustmentData];
        id v15 = [v6 adjustmentData];
        char v20 = [v14 isEqualToData:v15];

        if (v20)
        {
          BOOL v7 = 0;
LABEL_14:

          goto LABEL_15;
        }
LABEL_11:
        id v16 = [v9 adjustmentTimestamp];

        if (!v16)
        {
          uint64_t v17 = [(PLManagedAsset *)self dateCreated];
          [v9 setAdjustmentTimestamp:v17];
        }
        __n128 v18 = +[PLAssetAdjustmentOptions assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:0];
        [(PLManagedAsset *)self setAdjustments:v9 options:v18];

        BOOL v7 = 1;
        goto LABEL_14;
      }
    }
    goto LABEL_11;
  }
LABEL_15:

  return v7;
}

- (BOOL)_migrateLegacySLMAdjustments
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [(PLManagedAsset *)self pathForLegacySlalomRegionsArchive];
  id v4 = [MEMORY[0x1E4F28CB8] defaultManager];
  int v5 = [v4 fileExistsAtPath:v3];

  if (v5)
  {
    id v6 = objc_alloc(MEMORY[0x1E4F8CE18]);
    BOOL v7 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v3 isDirectory:0];
    id v8 = (void *)[v6 initWithURL:v7];

    BOOL v9 = v8 != 0;
    if (v8)
    {
      uint64_t v10 = [v8 adjustmentTimestamp];

      if (!v10)
      {
        id v11 = [(PLManagedAsset *)self dateCreated];
        [v8 setAdjustmentTimestamp:v11];
      }
      uint64_t v12 = +[PLAssetAdjustmentOptions assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:0];
      [(PLManagedAsset *)self setAdjustments:v8 options:v12];
    }
    id v13 = [MEMORY[0x1E4F28CB8] defaultManager];
    id v18 = 0;
    int v14 = [v13 removeItemAtPath:v3 error:&v18];
    id v15 = v18;

    if (!v14 || v15)
    {
      id v16 = PLMigrationGetLog();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        char v20 = v3;
        __int16 v21 = 2112;
        id v22 = v15;
        _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "_migrateLegacySLMAdjustments failed to remove %@: %@", buf, 0x16u);
      }
    }
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

- (BOOL)migrateLegacyVideoAdjustments
{
  if ([(PLManagedAsset *)self kind] != 1) {
    return 0;
  }
  if ([(PLManagedAsset *)self kindSubtype] != 101) {
    return 0;
  }
  [MEMORY[0x1E4F8BA10] maskForMigrateLegacyVideoAdjustmentsExclusions];
  [(PLManagedAsset *)self savedAssetType];
  if (PLValidatedSavedAssetTypeApplies()) {
    return 0;
  }
  int v5 = [(PLManagedAsset *)self pathForAdjustmentFile];
  id v6 = [MEMORY[0x1E4F28CB8] defaultManager];
  char v7 = [v6 fileExistsAtPath:v5];

  if (v7) {
    BOOL v8 = [(PLManagedAsset *)self _migrateKeyedArchiverAdjustmentsToPropertyListSerializationFormat];
  }
  else {
    BOOL v8 = [(PLManagedAsset *)self _migrateLegacySLMAdjustments];
  }
  BOOL v3 = v8;

  return v3;
}

- (BOOL)_setDefaultSlowMotionAdjustmentsWithMainFileMetadata:(id)a3
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if ([v4 isSyndicationOriginated])
  {
    if (v4)
    {
      [v4 duration];
      unsigned int v5 = HIDWORD(v26);
      uint64_t v6 = v27;
    }
    else
    {
      uint64_t v6 = 0;
      unsigned int v5 = 0;
      long long v26 = 0uLL;
      *(void *)&long long v27 = 0;
    }
    uint64_t v29 = v26;
    unsigned int v30 = DWORD2(v26);
    char v7 = [v4 nominalFrameRate];
    [v7 floatValue];
    int v11 = v10;
  }
  else
  {
    char v7 = [(PLManagedAsset *)self mainFileURL];
    BOOL v8 = [MEMORY[0x1E4F166C8] assetWithURL:v7];
    BOOL v9 = v8;
    if (v8)
    {
      [v8 duration];
      unsigned int v5 = HIDWORD(v26);
      uint64_t v6 = v27;
    }
    else
    {
      uint64_t v6 = 0;
      unsigned int v5 = 0;
      long long v26 = 0uLL;
      *(void *)&long long v27 = 0;
    }
    uint64_t v29 = v26;
    unsigned int v30 = DWORD2(v26);
    uint64_t v12 = [MEMORY[0x1E4F8CC38] tracksWithMediaType:*MEMORY[0x1E4F15C18] forAsset:v9];
    id v13 = [v12 firstObject];
    [v13 nominalFrameRate];
    int v11 = v14;
  }
  if (v5)
  {
    long long v27 = 0u;
    long long v28 = 0u;
    long long v26 = 0u;
    *(void *)&long long v23 = v29;
    *((void *)&v23 + 1) = __PAIR64__(v5, v30);
    *(void *)&long long v24 = v6;
    [MEMORY[0x1E4F8CE18] defaultSlowMotionTimeRangeForDuration:&v23];
    LODWORD(v16) = v11;
    [MEMORY[0x1E4F8CE18] defaultSlowMotionRateForNominalFrameRate:v16];
    unsigned int v18 = v17;
    id v19 = objc_alloc(MEMORY[0x1E4F8CE18]);
    long long v23 = v26;
    long long v24 = v27;
    long long v25 = v28;
    char v20 = objc_msgSend(v19, "initWithSlowMotionTimeRange:rate:", &v23, COERCE_DOUBLE(__PAIR64__(DWORD1(v28), v18)));
    BOOL v15 = v20 != 0;
    if (v20)
    {
      __int16 v21 = +[PLAssetAdjustmentOptions assetAdjustmentOptionsForSLMAdjustmentsWithMainFileMetadata:v4];
      [(PLManagedAsset *)self setAdjustments:v20 options:v21];
    }
  }
  else
  {
    BOOL v15 = 0;
  }

  return v15;
}

- (BOOL)setDefaultAdjustmentsIfNecessaryWithMainFileMetadata:(id)a3
{
  id v4 = a3;
  unsigned int v5 = [(PLManagedAsset *)self pathForAdjustmentFile];
  uint64_t v6 = [MEMORY[0x1E4F28CB8] defaultManager];
  char v7 = [v6 fileExistsAtPath:v5];

  BOOL v8 = (v7 & 1) == 0
    && [(PLManagedAsset *)self kindSubtype] == 101
    && [(PLManagedAsset *)self _setDefaultSlowMotionAdjustmentsWithMainFileMetadata:v4];

  return v8;
}

- (BOOL)setCurrentAdjustmentAsOriginalAdjustment
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [(PLManagedAsset *)self pathForAdjustmentFile];
  id v4 = [MEMORY[0x1E4F8B908] fileManager];
  if ([v4 fileExistsAtPath:v3])
  {
    unsigned int v5 = [(PLManagedAsset *)self pathForOriginalAdjustmentFile];
    id v12 = 0;
    char v6 = [v4 copyItemAtPath:v3 toPath:v5 error:&v12];
    id v7 = v12;
    if (v6)
    {
      BOOL v8 = +[PLResourceInstaller onDemand_installOriginalAdjustmentResourceIfPresentForAsset:self];
      BOOL v9 = v8 != 0;
    }
    else
    {
      BOOL v8 = PLBackendGetLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v14 = v7;
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "Error copying adjustment to original adjustment with error: %@", buf, 0xCu);
      }
      BOOL v9 = 0;
    }
  }
  else
  {
    unsigned int v5 = PLBackendGetLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v10 = [(PLManagedAsset *)self uuid];
      *(_DWORD *)buf = 138543362;
      id v14 = v10;
      _os_log_impl(&dword_19B3C7000, v5, OS_LOG_TYPE_ERROR, "Tried to set original adjustment for an asset without an adjustment: %{public}@", buf, 0xCu);
    }
    BOOL v9 = 0;
  }

  return v9;
}

- (void)synchronouslyFetchAdjustmentDataWithCompletionHandler:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    unsigned int v5 = [(PLManagedAsset *)self additionalAttributes];
    char v6 = [v5 unmanagedAdjustment];

    if (v6 && [(PLManagedAsset *)self hasAdjustments])
    {
      uint64_t v7 = [v6 adjustmentFormatIdentifier];
      BOOL v8 = [v6 adjustmentFormatVersion];
      BOOL v9 = [(PLManagedAsset *)self additionalAttributes];
      long long v27 = [v9 editorBundleID];

      int v10 = [v6 adjustmentBaseImageFormat];
      uint64_t v11 = [v10 integerValue];

      id v12 = [(PLManagedAsset *)self pathForAdjustmentFile];
      long long v25 = [v6 adjustmentTimestamp];
      id v13 = [(PLManagedObject *)self pathManager];
      int v14 = [v13 isUBF];

      long long v26 = (void *)v7;
      if (v14)
      {
        uint64_t v15 = [v12 stringByDeletingPathExtension];
        [v15 stringByAppendingPathExtension:@"in_flight"];
      }
      else
      {
        uint64_t v15 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
        [v15 stringByAppendingPathComponent:@"in_flight"];
      double v16 = };
      unsigned int v17 = v12;

      unsigned int v24 = [v6 adjustmentRenderTypes];
    }
    else
    {
      double v16 = 0;
      unsigned int v24 = 0;
      long long v25 = 0;
      long long v26 = 0;
      unsigned int v17 = 0;
      uint64_t v11 = 0;
      long long v27 = 0;
      BOOL v8 = 0;
    }
    id v18 = objc_alloc_init(MEMORY[0x1E4F28CB8]);
    id v19 = objc_opt_class();
    objc_sync_enter(v19);
    int v20 = [v18 fileExistsAtPath:v16 isDirectory:0];
    objc_sync_exit(v19);

    if (v20)
    {
      __int16 v21 = PLBackendGetLog();
      id v22 = v17;
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_ERROR, "pathForMarkerFileExists. resetting adjustment", buf, 2u);
      }

      [v18 removeItemAtPath:v16 error:0];
      [(PLManagedAsset *)self revertToOriginal];
      uint64_t v11 = 0;
      BOOL v8 = 0;
      long long v23 = 0;
    }
    else
    {
      id v22 = v17;
      long long v23 = v26;
    }
    (*((void (**)(id, void *, void *, void *, uint64_t, void *, void, void *, void))v4 + 2))(v4, v23, v8, v27, v11, v22, v24, v25, 0);
  }
}

- (void)_cleanupPenultimateResources
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  BOOL v3 = PLBackendGetLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_19B3C7000, v3, OS_LOG_TYPE_INFO, "Cleaning up penultimate resources", buf, 2u);
  }

  id v4 = [MEMORY[0x1E4F28CB8] defaultManager];
  unsigned int v5 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
  if ([v4 fileExistsAtPath:v5])
  {
    id v24 = 0;
    int v6 = [v4 removeItemAtPath:v5 error:&v24];
    id v7 = v24;
    BOOL v8 = PLBackendGetLog();
    BOOL v9 = v8;
    if (v6)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        long long v26 = v5;
        int v10 = "Removed pathForPenultimateFullsizeRenderImageFile %@";
        uint64_t v11 = v9;
        os_log_type_t v12 = OS_LOG_TYPE_INFO;
        uint32_t v13 = 12;
LABEL_9:
        _os_log_impl(&dword_19B3C7000, v11, v12, v10, buf, v13);
      }
    }
    else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      long long v26 = v5;
      __int16 v27 = 2112;
      id v28 = v7;
      int v10 = "Failed to remove pathForPenultimateFullsizeRenderImageFile %@: %@";
      uint64_t v11 = v9;
      os_log_type_t v12 = OS_LOG_TYPE_ERROR;
      uint32_t v13 = 22;
      goto LABEL_9;
    }
  }
  [(PLManagedAsset *)self markAsUnavailableCloudResourceOfType:15];
  int v14 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
  if ([v4 fileExistsAtPath:v14])
  {
    id v23 = 0;
    int v15 = [v4 removeItemAtPath:v14 error:&v23];
    id v16 = v23;
    unsigned int v17 = PLBackendGetLog();
    id v18 = v17;
    if (v15)
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        long long v26 = v14;
        id v19 = "Removed pathForPenultimateFullsizeRenderVideoFile %@";
        int v20 = v18;
        os_log_type_t v21 = OS_LOG_TYPE_INFO;
        uint32_t v22 = 12;
LABEL_17:
        _os_log_impl(&dword_19B3C7000, v20, v21, v19, buf, v22);
      }
    }
    else if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      long long v26 = v14;
      __int16 v27 = 2112;
      id v28 = v16;
      id v19 = "Failed to remove pathForPenultimateFullsizeRenderVideoFile %@: %@";
      int v20 = v18;
      os_log_type_t v21 = OS_LOG_TYPE_ERROR;
      uint32_t v22 = 22;
      goto LABEL_17;
    }
  }
  [(PLManagedAsset *)self markAsUnavailableCloudResourceOfType:20];
  [(PLManagedAsset *)self markAsUnavailableCloudResourceOfType:25];
}

- (BOOL)updateDeferredAdjustmentWithFullSizeRenderImageURL:(id)a3 videoURL:(id)a4 videoPosterURL:(id)a5 error:(id *)a6
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (v9 && [(PLManagedAsset *)self isPhoto])
  {
    id v12 = v9;
    uint32_t v13 = [v12 pathExtension];
    int v14 = +[PLManagedAsset uniformTypeIdentifierFromPathExtension:v13 assetType:0];

    int v15 = [(PLManagedAsset *)self pathForFullsizeRenderImageFileWithUTI:v14];
    id v16 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v15 isDirectory:0];

    CFURLRef v17 = 0;
  }
  else if (v10 && [(PLManagedAsset *)self isVideo])
  {
    id v12 = v10;
    id v16 = [(PLManagedAsset *)self fileURLForFullsizeRenderVideo];
    CFURLRef v17 = [(PLManagedAsset *)self fileURLForFullsizeRenderImage];
  }
  else
  {
    CFURLRef v17 = 0;
    id v16 = 0;
    id v12 = 0;
  }
  id v41 = v10;
  if ([(PLManagedAsset *)self isPhotoIris]) {
    id v18 = v10;
  }
  else {
    id v18 = 0;
  }
  id v42 = v18;
  id v19 = (void *)MEMORY[0x1E4F1CA60];
  int v20 = [(PLManagedAsset *)self pathForAdjustmentFile];
  os_log_type_t v21 = [v19 dictionaryWithContentsOfFile:v20];

  uint32_t v22 = PLPhotoEditGetLog();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    id v48 = v12;
    __int16 v49 = 2112;
    id v50 = v16;
    _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_INFO, "Update deferred adjustment ingesting rendered media at source URL: %@ to destination URL: %@", buf, 0x16u);
  }

  if ([v16 isEqual:v12]) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = 3;
  }
  id v24 = objc_alloc_init(PLMutableAssetAdjustmentOptions);
  [(PLMutableAssetAdjustmentOptions *)v24 setRenderedContentURL:v12];
  [(PLMutableAssetAdjustmentOptions *)v24 setRenderedVideoComplementContentURL:v42];
  id v40 = v11;
  [(PLMutableAssetAdjustmentOptions *)v24 setRenderedVideoPosterContentURL:v11];
  [(PLMutableAssetAdjustmentOptions *)v24 setFileIngestionType:v23];
  [(PLMutableAssetAdjustmentOptions *)v24 setShouldUpdateAttributes:1];
  id v46 = 0;
  BOOL v25 = [(PLManagedAsset *)self _ingestAndApplyMetadataChangesFromAdjustments:0 updateAdjustmentDictionary:v21 options:v24 fullSizeRenderURL:v16 videoPosterRenderURL:v17 isRevertToOriginal:0 error:&v46];
  id v26 = v46;
  __int16 v27 = v26;
  if (v25)
  {
    [(PLManagedAsset *)self _writeOutAdjustmentsToFile:v21];
    id v39 = v9;
    if ([(PLManagedAsset *)self deferredProcessingNeeded] == 2
      || [(PLManagedAsset *)self deferredProcessingNeeded] == 9)
    {
      id v28 = [(PLManagedAsset *)self pathForAsyncAdjustedRenderPreviewImageFile];
      if (v28)
      {
        id v45 = 0;
        char v29 = [MEMORY[0x1E4F8B908] removeItemAtPath:v28 error:&v45];
        id v30 = v45;
        if ((v29 & 1) == 0)
        {
          id v37 = v30;
          uint64_t v31 = PLBackendGetLog();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412546;
            id v48 = v28;
            __int16 v49 = 2112;
            id v50 = v37;
            _os_log_impl(&dword_19B3C7000, v31, OS_LOG_TYPE_ERROR, "Couldn't remove async render preview image %@ with error: %@", buf, 0x16u);
          }

          id v30 = v37;
        }
      }
      [(PLManagedAsset *)self setDeferredProcessingNeeded:0];
    }
    if (v17 && (CGImageSourceRef v32 = CGImageSourceCreateWithURL(v17, 0)) != 0)
    {
      id v43 = 0;
      id v44 = 0;
      +[PLManagedAsset createThumbnailImage:&v44 previewImage:&v43 withToBeReleasedImageSource:v32];
      id v33 = v44;
      id v34 = v43;
    }
    else
    {
      id v34 = 0;
      id v33 = 0;
    }
    LOWORD(v36) = 0;
    -[PLManagedAsset _updateDerivativesAndThumbnails:withPreviewImage:thumbnailImage:metadata:didRevertToOriginal:updateInternalResources:isSubstandardRender:isDeferred:](self, "_updateDerivativesAndThumbnails:withPreviewImage:thumbnailImage:metadata:didRevertToOriginal:updateInternalResources:isSubstandardRender:isDeferred:", 1, v34, v33, 0, 0, 1, v36);

    id v9 = v39;
  }
  else if (a6)
  {
    *a6 = v26;
  }

  return v25;
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withMetadata:(id)a4
{
  if ([a4 isSpatialMedia]) {
    int v5 = 4096;
  }
  else {
    int v5 = 0;
  }
  return v5 | a3 & 0xFFFFEFFF;
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 forSpatialTypeOfAVAsset:(id)a4
{
  id v6 = a4;
  if ([(PLManagedAsset *)self spatialType])
  {
    id v7 = (void *)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithAVAsset:v6 timeZoneLookup:0];
    if ([v7 isSpatialMedia]) {
      int v8 = 4096;
    }
    else {
      int v8 = 0;
    }
    a3 = v8 | a3 & 0xFFFFEFFF;
  }
  return a3;
}

- (BOOL)_ingestAndApplyMetadataChangesFromAdjustments:(id)a3 updateAdjustmentDictionary:(id)a4 options:(id)a5 fullSizeRenderURL:(id)a6 videoPosterRenderURL:(id)a7 isRevertToOriginal:(BOOL)a8 error:(id *)a9
{
  BOOL v126 = a8;
  uint64_t v164 = *MEMORY[0x1E4F143B8];
  id v128 = a3;
  id v129 = a4;
  id v14 = a5;
  id v15 = a6;
  id v131 = a7;
  v130 = [MEMORY[0x1E4F8B908] fileManager];
  id v16 = objc_initWeak((id *)location, self);

  id v17 = objc_alloc(MEMORY[0x1E4F8B948]);
  v138[0] = MEMORY[0x1E4F143A8];
  v138[1] = 3221225472;
  v138[2] = __163__PLManagedAsset__ingestAndApplyMetadataChangesFromAdjustments_updateAdjustmentDictionary_options_fullSizeRenderURL_videoPosterRenderURL_isRevertToOriginal_error___block_invoke;
  v138[3] = &unk_1E5870860;
  objc_copyWeak(&v140, (id *)location);
  id v18 = v15;
  id v139 = v18;
  uint64_t v125 = (void *)[v17 initWithBlock:v138];

  objc_destroyWeak(&v140);
  objc_destroyWeak((id *)location);
  id v19 = PLPhotoEditGetLog();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    int v20 = [(PLManagedAsset *)self uuid];
    os_log_type_t v21 = [v14 renderedContentURL];
    uint32_t v22 = [v14 renderedVideoComplementContentURL];
    uint64_t v23 = [v14 renderedVideoPosterContentURL];
    uint64_t v24 = [v14 fileIngestionType];
    int v25 = [v14 isSubstandardRender];
    id v26 = @"NO";
    *(_DWORD *)location = 138545410;
    *(void *)&location[4] = v20;
    __int16 v148 = 2112;
    if (v25) {
      __int16 v27 = @"YES";
    }
    else {
      __int16 v27 = @"NO";
    }
    id v149 = v21;
    if (v126) {
      id v26 = @"YES";
    }
    __int16 v150 = 2112;
    id v151 = v18;
    __int16 v152 = 2112;
    __int16 v153 = v22;
    __int16 v154 = 2112;
    long long v155 = v23;
    __int16 v156 = 2112;
    id v157 = v131;
    __int16 v158 = 2048;
    uint64_t v159 = v24;
    __int16 v160 = 2112;
    v161 = v27;
    __int16 v162 = 2112;
    v163 = v26;
    _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_INFO, "Ingest and apply metadata changes for asset %{public}@ from renderedContentURL %@ fullSizeRenderURL %@ renderedVideoComplementContentURL %@ videoPosterContentURL %@ videoPosterRenderURL %@ ingestionType %ld isSubstandardRender %@ isRevertToOriginal %@", location, 0x5Cu);
  }
  id v28 = [(PLManagedAsset *)self additionalAttributes];
  [v28 setAdjustedStableHash:0];

  [(PLManagedAsset *)self revalidateFaceAreaPoints];
  char v29 = [v14 renderedContentURL];
  if (v18) {
    BOOL v30 = v29 == 0;
  }
  else {
    BOOL v30 = 1;
  }
  int v31 = !v30;

  if (v31)
  {
    CGImageSourceRef v32 = [(PLManagedObject *)self pathManager];
    id v33 = [v32 capabilities];

    id v34 = [v18 path];
    id v35 = [v34 stringByDeletingLastPathComponent];
    id v137 = 0;
    char v36 = [v130 createDirectoryAtPath:v35 withIntermediateDirectories:1 attributes:0 error:&v137];
    id v37 = v137;

    if ((v36 & 1) == 0)
    {
      id v50 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)location = 138412546;
        *(void *)&location[4] = v18;
        __int16 v148 = 2112;
        id v149 = v37;
        _os_log_impl(&dword_19B3C7000, v50, OS_LOG_TYPE_ERROR, "Failed to create directory for %@: %@", location, 0x16u);
      }

      uint64_t v51 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v52 = *MEMORY[0x1E4F28228];
      v145[0] = *MEMORY[0x1E4F28A50];
      v145[1] = v52;
      v146[0] = v37;
      v146[1] = @"Failed to create directory for full size render";
      id v41 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v146 forKeys:v145 count:2];
      id v53 = [v51 errorWithDomain:*MEMORY[0x1E4F8C500] code:47011 userInfo:v41];
      goto LABEL_32;
    }
    id v38 = (void *)MEMORY[0x1E4F8B908];
    id v39 = [v14 renderedContentURL];
    id v136 = 0;
    char v40 = objc_msgSend(v38, "ingestItemAtURL:toURL:type:options:capabilities:error:", v39, v18, objc_msgSend(v14, "fileIngestionType"), 6, v33, &v136);
    id v41 = v136;

    if ((v40 & 1) == 0 && ([v14 isSubstandardRender] & 1) == 0)
    {
      id v57 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
      {
        id v58 = [v14 renderedContentURL];
        *(_DWORD *)location = 138412546;
        *(void *)&location[4] = v58;
        __int16 v148 = 2112;
        id v149 = v41;
        _os_log_impl(&dword_19B3C7000, v57, OS_LOG_TYPE_ERROR, "Failed to ingest %@: %@", location, 0x16u);
      }
      uint64_t v59 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v60 = *MEMORY[0x1E4F28228];
      v143[0] = *MEMORY[0x1E4F28A50];
      v143[1] = v60;
      v144[0] = v41;
      v144[1] = @"Failed to ingest full size render";
      id v61 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v144 forKeys:v143 count:2];
      id v53 = [v59 errorWithDomain:*MEMORY[0x1E4F8C500] code:47011 userInfo:v61];

      goto LABEL_32;
    }

    if (![(PLManagedAsset *)self isVideo]
      || (([v14 renderedVideoPosterContentURL], id v42 = objc_claimAutoreleasedReturnValue(), v131)
        ? (BOOL v43 = v42 == 0)
        : (BOOL v43 = 1),
          v43 ? (int v44 = 0) : (int v44 = 1),
          v42,
          !v44))
    {
LABEL_44:
      uint64_t v63 = [v14 adjustmentSecondaryDataURL];
      BOOL v64 = v63 == 0;

      if (v64) {
        goto LABEL_47;
      }
      id v65 = (void *)MEMORY[0x1E4F1CB10];
      uint64_t v66 = [(PLManagedAsset *)self pathForAdjustmentSecondaryDataFile];
      id v67 = [v65 fileURLWithPath:v66 isDirectory:0];

      uint64_t v68 = (void *)MEMORY[0x1E4F8B908];
      id v69 = [v14 adjustmentSecondaryDataURL];
      id v134 = 0;
      char v70 = objc_msgSend(v68, "ingestItemAtURL:toURL:type:options:capabilities:error:", v69, v67, objc_msgSend(v14, "fileIngestionType"), 6, v33, &v134);
      id v41 = v134;

      if (v70)
      {

LABEL_47:
        if (![(PLManagedAsset *)self isPhotoIris])
        {
LABEL_80:

          goto LABEL_81;
        }
        int v123 = [(PLManagedAsset *)self videoCpVisibilityState];
        uint64_t v71 = (void *)MEMORY[0x1E4F1CB10];
        uint64_t v72 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
        v124 = [v71 fileURLWithPath:v72 isDirectory:0];

        uint64_t v73 = [v14 renderedVideoComplementContentURL];

        if (v73)
        {
          uint64_t v74 = (void *)MEMORY[0x1E4F8B908];
          id v75 = [v14 renderedVideoComplementContentURL];
          id v133 = 0;
          char v76 = objc_msgSend(v74, "ingestItemAtURL:toURL:type:options:capabilities:error:", v75, v124, objc_msgSend(v14, "fileIngestionType"), 6, v33, &v133);
          id v77 = v133;

          if (v76)
          {

            if ([v14 shouldUpdateAttributes])
            {
              if ([(PLManagedAsset *)self depthType] != 1
                || ([(PLManagedAsset *)self videoCpVisibilityState] & 1) == 0)
              {
                LOWORD(v123) = v123 | 8;
              }
              uint64_t v78 = [MEMORY[0x1E4F16330] assetWithURL:v124];
              [(PLManagedAsset *)self _updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:v78];
              v79 = [(PLManagedAsset *)self additionalAttributes];
              id v122 = [v79 unmanagedAdjustment];

              uint64_t v80 = [v122 adjustmentRenderTypes];
              uint64_t v81 = [(PLManagedAsset *)self playbackVariationFromAVAsset:v78 isLivePhotoVideoComplement:1];
              uint64_t v82 = [(PLManagedAsset *)self updateAdjustmentRenderTypes:v80 withPlaybackVariation:v81];
              if ([(PLManagedAsset *)self playbackVariation] != v81) {
                [(PLManagedAsset *)self setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:v81];
              }
              if (v80 != v82) {
                [v122 setAdjustmentRenderTypes:v82];
              }

              goto LABEL_77;
            }
            goto LABEL_79;
          }
          if ((PLIsErrorFileNotFound() & 1) == 0)
          {
            v89 = PLPhotoEditGetLog();
            if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR))
            {
              id v90 = [v14 renderedVideoComplementContentURL];
              *(_DWORD *)location = 138412546;
              *(void *)&location[4] = v90;
              __int16 v148 = 2112;
              id v149 = v77;
              _os_log_impl(&dword_19B3C7000, v89, OS_LOG_TYPE_ERROR, "Nonfatal - Error ingesting video complement %@: %@", location, 0x16u);
            }
          }

          char v88 = [v14 shouldUpdateAttributes];
        }
        else
        {
          char v88 = [v14 shouldUpdateAttributes];
        }
        if (v88)
        {
          if ([v14 fileIngestionType] || !v123)
          {
            if ((v123 & 2) == 0)
            {
              unsigned __int16 v92 = v123 & 0xFFF6 | 1;
LABEL_78:
              unsigned __int16 v93 = v92;
              [(PLManagedAsset *)self setVideoCpVisibilityState:v92];
              uint64_t v94 = objc_opt_class();
              uint64_t v95 = [(PLManagedAsset *)self videoCpDurationValue];
              BOOL v96 = [(PLManagedAsset *)self isCloudSharedAsset];
              id v97 = [v124 path];
              uint64_t v98 = [v94 isPhotoIrisPlaceholderWithPhotoIris:1 videoCpDuration:v95 isCloudShared:v96 videoCpFilePath:v97];

              -[PLManagedAsset updatePlaybackStyleWithLivePhotoPlayability:](self, "updatePlaybackStyleWithLivePhotoPlayability:", [(id)objc_opt_class() canPlayPhotoIrisWithPhotoIris:1 photoIrisPlaceholder:v98 hasAdjustments:1 videoCpVisibilityState:v93]);
              goto LABEL_79;
            }
            [(PLManagedAsset *)self setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:0];
          }
          else
          {
            id v91 = PLMigrationGetLog();
            if (os_log_type_enabled(v91, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)location = 67109120;
              *(_DWORD *)&location[4] = v123;
              _os_log_impl(&dword_19B3C7000, v91, OS_LOG_TYPE_INFO, "The video complement is missing, and we are perserving existing PLVideoComplementVisibilityState on rebuild: %hu", location, 8u);
            }
          }
LABEL_77:
          unsigned __int16 v92 = v123;
          goto LABEL_78;
        }
LABEL_79:

        goto LABEL_80;
      }
      v83 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR))
      {
        id v84 = [v14 adjustmentSecondaryDataURL];
        *(_DWORD *)location = 138412546;
        *(void *)&location[4] = v84;
        __int16 v148 = 2112;
        id v149 = v41;
        _os_log_impl(&dword_19B3C7000, v83, OS_LOG_TYPE_ERROR, "Failed to ingest adjustment secondary data %@: %@", location, 0x16u);
      }
      id v85 = (void *)MEMORY[0x1E4F28C58];
      uint64_t v86 = *MEMORY[0x1E4F28228];
      v141[0] = *MEMORY[0x1E4F28A50];
      v141[1] = v86;
      v142[0] = v41;
      v142[1] = @"Failed to ingest adjustment secondary data";
      id v87 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v142 forKeys:v141 count:2];
      id v53 = [v85 errorWithDomain:*MEMORY[0x1E4F8C500] code:47011 userInfo:v87];

LABEL_32:
      goto LABEL_33;
    }
    id v45 = (void *)MEMORY[0x1E4F8B908];
    id v46 = [v14 renderedVideoPosterContentURL];
    id v135 = 0;
    char v47 = objc_msgSend(v45, "ingestItemAtURL:toURL:type:options:capabilities:error:", v46, v131, objc_msgSend(v14, "fileIngestionType"), 6, v33, &v135);
    id v48 = v135;

    if (v47)
    {
      __int16 v49 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)location = 138412290;
        *(void *)&location[4] = v131;
        _os_log_impl(&dword_19B3C7000, v49, OS_LOG_TYPE_DEBUG, "Ingested video poster to %@", location, 0xCu);
      }
    }
    else
    {
      if (PLIsErrorFileNotFound())
      {
LABEL_43:

        goto LABEL_44;
      }
      __int16 v49 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        id v62 = [v14 renderedVideoPosterContentURL];
        *(_DWORD *)location = 138412546;
        *(void *)&location[4] = v62;
        __int16 v148 = 2112;
        id v149 = v48;
        _os_log_impl(&dword_19B3C7000, v49, OS_LOG_TYPE_ERROR, "Nonfatal - error ingesting video poster %@: %@", location, 0x16u);
      }
    }

    goto LABEL_43;
  }
LABEL_81:
  if ([v14 shouldUpdateAttributes])
  {
    id v99 = [(PLManagedAsset *)self mainFileURL];
    id v100 = [v14 mainFileMetadata];
    id v132 = 0;
    BOOL v101 = [(PLManagedAsset *)self updateAttributesFromMainFileURL:v99 mainFileMetadata:v100 fullSizeRenderURL:v18 error:&v132];
    id v53 = v132;

    if (!v101 || v126)
    {
      if (v101)
      {
        char v102 = 1;
        goto LABEL_105;
      }
LABEL_33:
      id v54 = v53;
      id v55 = v54;
      if (a9)
      {
        id v55 = v54;
        BOOL v56 = 0;
        *a9 = v55;
      }
      else
      {
        BOOL v56 = 0;
      }
      goto LABEL_114;
    }
  }
  else
  {
    id v53 = 0;
    char v102 = 1;
    if (v126) {
      goto LABEL_105;
    }
  }
  if ([v14 shouldUpdateAttributes])
  {
    v103 = [(PLManagedAsset *)self additionalAttributes];
    id v104 = [v103 unmanagedAdjustment];

    if (!v104)
    {
LABEL_103:

      goto LABEL_104;
    }
    unsigned int v127 = [v104 adjustmentRenderTypes];
    uint64_t v105 = [(PLManagedAsset *)self updateAdjustmentRenderTypes:[(PLManagedAsset *)self updateAdjustmentRenderTypes:v127 withDepthType:[(PLManagedAsset *)self depthType]] withAdjustmentState:[(PLManagedAsset *)self cameraProcessingAdjustmentState]];
    uint64_t v106 = [v129 objectForKeyedSubscript:*MEMORY[0x1E4F8BA58]];
    char v107 = [v129 objectForKeyedSubscript:*MEMORY[0x1E4F8BA68]];
    id v108 = [v129 objectForKeyedSubscript:*MEMORY[0x1E4F8BA70]];
    uint64_t v109 = [(PLManagedAsset *)self updateAdjustmentRenderTypes:v105 withAdjustmentData:v106 formatIdentifier:v107 formatVersion:v108];

    if (v18)
    {
      if ([(PLManagedAsset *)self isVideo])
      {
        id v110 = [MEMORY[0x1E4F16330] assetWithURL:v18];
        if (v110)
        {
          uint64_t v111 = [(PLManagedAsset *)self playbackVariationFromAVAsset:v110 isLivePhotoVideoComplement:0];
          uint64_t v112 = [(PLManagedAsset *)self updateAdjustmentRenderTypes:v109 withPlaybackVariation:v111];
          if ([(PLManagedAsset *)self playbackVariation] != v111) {
            [(PLManagedAsset *)self setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:v111];
          }
          uint64_t v109 = [(PLManagedAsset *)self updateAdjustmentRenderTypes:v112 forSpatialTypeOfAVAsset:v110];
        }
        else
        {
          id v114 = PLPhotoEditGetLog();
          if (os_log_type_enabled(v114, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)location = 138412290;
            *(void *)&location[4] = v18;
            _os_log_impl(&dword_19B3C7000, v114, OS_LOG_TYPE_ERROR, "Unable to create AVAssest from %@", location, 0xCu);
          }

          id v110 = 0;
        }
      }
      else
      {
        if (![(PLManagedAsset *)self isPhoto]) {
          goto LABEL_101;
        }
        v113 = [v125 objectValue];
        uint64_t v109 = [(PLManagedAsset *)self updateAdjustmentRenderTypes:v109 withMetadata:v113];

        id v110 = [v125 objectValue];
        [(PLManagedAsset *)self setSpatialTypeFromMetadata:v110];
      }
    }
LABEL_101:
    if (v127 != v109) {
      [v104 setAdjustmentRenderTypes:v109];
    }
    goto LABEL_103;
  }
LABEL_104:
  id v115 = [(PLManagedAsset *)self additionalAttributes];
  BOOL v116 = [v115 unmanagedAdjustment];

  [(PLManagedAsset *)self _updateAdjustmentFromAssetAdjustment:v128 unmanagedAdjustment:v116 fullSizeRenderURL:v18 options:v14];
  char v102 = 0;
LABEL_105:
  if (-[PLManagedAsset isPhoto](self, "isPhoto") && [v14 shouldUpdateAttributes])
  {
    id v117 = [v14 mainFileMetadata];
    [(PLManagedAsset *)self updatePanoramosityWithMetadata:v117];
  }
  if ((v102 & 1) != 0 || ![v14 fileIngestionType])
  {
    BOOL v56 = 1;
    id v55 = v53;
  }
  else
  {
    id v118 = [(PLManagedAsset *)self additionalAttributes];
    id v119 = [v118 unmanagedAdjustment];

    if ([v119 adjustmentRenderTypes])
    {
      id v120 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v119, "adjustmentRenderTypes"));
      [v129 setObject:v120 forKey:*MEMORY[0x1E4F8BA78]];
    }
    [(PLManagedAsset *)self _writeOutAdjustmentsToFile:v129];

    id v55 = v53;
    BOOL v56 = 1;
  }
LABEL_114:

  return v56;
}

id __163__PLManagedAsset__ingestAndApplyMetadataChangesFromAdjustments_updateAdjustmentDictionary_options_fullSizeRenderURL_videoPosterRenderURL_isRevertToOriginal_error___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    BOOL v3 = (void *)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithImageURL:*(void *)(a1 + 32) contentType:0 options:13 timeZoneLookup:0 cacheImageSource:1 cacheImageData:0];
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

- (void)_updateDerivativesAndThumbnails:(BOOL)a3 withPreviewImage:(id)a4 thumbnailImage:(id)a5 metadata:(id)a6 didRevertToOriginal:(BOOL)a7 updateInternalResources:(BOOL)a8 isSubstandardRender:(BOOL)a9 isDeferred:(BOOL)a10
{
  BOOL v82 = a8;
  BOOL v10 = a7;
  BOOL v13 = a3;
  BOOL v14 = a9;
  uint64_t v109 = *MEMORY[0x1E4F143B8];
  id v15 = a4;
  id v16 = a5;
  id v17 = a6;
  if (v13)
  {
    id v18 = [(PLManagedObject *)self photoLibrary];
    id v19 = [v18 libraryServicesManager];
    int v20 = [v19 modelMigrator];
    char v21 = [v20 isPostProcessingLightweightMigration];

    if ((v21 & 1) == 0)
    {
      id v74 = v17;
      id v76 = v16;
      id v80 = v15;
      BOOL v78 = v10;
      if (!v10)
      {
        uint32_t v22 = [MEMORY[0x1E4F8B908] fileManager];
        id v23 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
        uint64_t v24 = [(PLManagedAsset *)self pathForLargeThumbnailFile];
        objc_msgSend(v23, "pl_addObjectIfNotNil:", v24);

        int v25 = [(PLManagedAsset *)self pathForMediumThumbnailFile];
        objc_msgSend(v23, "pl_addObjectIfNotNil:", v25);

        id v26 = [(PLManagedAsset *)self pathForLargeSizeImageFile];
        objc_msgSend(v23, "pl_addObjectIfNotNil:", v26);

        __int16 v27 = [(PLManagedAsset *)self pathForSubstandardFullsizeRenderImageFile];
        objc_msgSend(v23, "pl_addObjectIfNotNil:", v27);

        long long v98 = 0u;
        long long v99 = 0u;
        long long v96 = 0u;
        long long v97 = 0u;
        id v28 = v23;
        uint64_t v29 = [v28 countByEnumeratingWithState:&v96 objects:v108 count:16];
        if (v29)
        {
          uint64_t v30 = v29;
          uint64_t v31 = *(void *)v97;
          do
          {
            for (uint64_t i = 0; i != v30; ++i)
            {
              if (*(void *)v97 != v31) {
                objc_enumerationMutation(v28);
              }
              id v33 = *(void **)(*((void *)&v96 + 1) + 8 * i);
              if ([v22 fileExistsAtPath:v33])
              {
                id v34 = PLBackendGetLog();
                if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
                {
                  id v35 = [(PLManagedAsset *)self uuid];
                  *(_DWORD *)buf = 138412546;
                  unint64_t v101 = (unint64_t)v33;
                  __int16 v102 = 2114;
                  id v103 = v35;
                  _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_INFO, "Removing %@ for asset %{public}@", buf, 0x16u);
                }
                id v95 = 0;
                char v36 = [v22 removeItemAtPath:v33 error:&v95];
                id v37 = v95;
                if ((v36 & 1) == 0)
                {
                  id v38 = PLBackendGetLog();
                  if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)buf = 138412546;
                    unint64_t v101 = (unint64_t)v33;
                    __int16 v102 = 2112;
                    id v103 = v37;
                    _os_log_impl(&dword_19B3C7000, v38, OS_LOG_TYPE_ERROR, "Failed to remove %@: %@", buf, 0x16u);
                  }
                }
              }
            }
            uint64_t v30 = [v28 countByEnumeratingWithState:&v96 objects:v108 count:16];
          }
          while (v30);
        }
      }
      [(PLManagedAsset *)self markAsUnavailableCloudResourceOfType:3];
      [(PLManagedAsset *)self markAsUnavailableCloudResourceOfType:4];
      id v39 = [(PLManagedAsset *)self modernResources];
      char v40 = [v39 objectsPassingTest:&__block_literal_global_1009];

      long long v93 = 0u;
      long long v94 = 0u;
      long long v91 = 0u;
      long long v92 = 0u;
      id v41 = v40;
      uint64_t v42 = [v41 countByEnumeratingWithState:&v91 objects:v107 count:16];
      if (v42)
      {
        uint64_t v43 = v42;
        uint64_t v44 = *(void *)v92;
        do
        {
          for (uint64_t j = 0; j != v43; ++j)
          {
            if (*(void *)v92 != v44) {
              objc_enumerationMutation(v41);
            }
            id v46 = *(void **)(*((void *)&v91 + 1) + 8 * j);
            if ([v46 isLocallyAvailable])
            {
              char v47 = PLBackendGetLog();
              if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
              {
                unint64_t v48 = [v46 recipeID];
                __int16 v49 = [(PLManagedAsset *)self uuid];
                *(_DWORD *)buf = 134349314;
                unint64_t v101 = v48;
                __int16 v102 = 2114;
                id v103 = v49;
                _os_log_impl(&dword_19B3C7000, v47, OS_LOG_TYPE_INFO, "Marking resource with recipe ID %{public}lu as locally unavailable for asset %{public}@", buf, 0x16u);
              }
            }
            [v46 markAsNotLocallyAvailable];
          }
          uint64_t v43 = [v41 countByEnumeratingWithState:&v91 objects:v107 count:16];
        }
        while (v43);
      }

      id v15 = v80;
      id v17 = v74;
      id v16 = v76;
      if (![(PLManagedAsset *)self isPlaceholderAsset])
      {
        LOWORD(v73) = 256;
        -[PLManagedAsset generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:](self, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:", v80, v76, 0, 0, v74, 0, v73);
      }

      BOOL v10 = v78;
      BOOL v14 = a9;
    }
  }
  if (v14 && a10 && !v10)
  {
    id v75 = v17;
    id v77 = v16;
    BOOL v79 = v10;
    id v81 = v15;
    long long v89 = 0u;
    long long v90 = 0u;
    long long v87 = 0u;
    long long v88 = 0u;
    id v50 = [(PLManagedAsset *)self modernResources];
    uint64_t v51 = [v50 countByEnumeratingWithState:&v87 objects:v106 count:16];
    if (v51)
    {
      uint64_t v52 = v51;
      uint64_t v53 = *(void *)v88;
      unint64_t v54 = 0x1E4F8B000uLL;
      do
      {
        uint64_t v55 = 0;
        uint64_t v83 = v52;
        do
        {
          if (*(void *)v88 != v53) {
            objc_enumerationMutation(v50);
          }
          BOOL v56 = *(void **)(*((void *)&v87 + 1) + 8 * v55);
          if ([v56 isLocallyAvailable]
            && [v56 isAdjustedFullSizeRenderResource])
          {
            id v57 = PLPhotoEditGetLog();
            if (os_log_type_enabled(v57, OS_LOG_TYPE_INFO))
            {
              id v58 = [v56 fileURL];
              uint64_t v59 = [v56 fileURL];
              uint64_t v60 = [v59 lastPathComponent];
              [(PLManagedAsset *)self uuid];
              uint64_t v61 = v53;
              id v62 = v50;
              v64 = unint64_t v63 = v54;
              *(_DWORD *)buf = 138412802;
              unint64_t v101 = (unint64_t)v58;
              __int16 v102 = 2114;
              id v103 = v60;
              __int16 v104 = 2114;
              uint64_t v105 = v64;
              _os_log_impl(&dword_19B3C7000, v57, OS_LOG_TYPE_INFO, "Removing stale render at path %@ (filename: %{public}@) for asset %{public}@ due to deferred rendering", buf, 0x20u);

              unint64_t v54 = v63;
              id v50 = v62;
              uint64_t v53 = v61;
              uint64_t v52 = v83;
            }
            id v65 = *(void **)(v54 + 2312);
            uint64_t v66 = [v56 fileURL];
            id v86 = 0;
            LOBYTE(v65) = [v65 removeItemAtURL:v66 error:&v86];
            id v67 = v86;

            if ((v65 & 1) == 0)
            {
              uint64_t v68 = PLPhotoEditGetLog();
              if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
              {
                id v69 = [v56 fileURL];
                *(_DWORD *)buf = 138543618;
                unint64_t v101 = (unint64_t)v69;
                __int16 v102 = 2112;
                id v103 = v67;
                _os_log_impl(&dword_19B3C7000, v68, OS_LOG_TYPE_ERROR, "Failed to remove %{public}@: %@", buf, 0x16u);
              }
            }
            [v56 markAsNotLocallyAvailable];
          }
          ++v55;
        }
        while (v52 != v55);
        uint64_t v52 = [v50 countByEnumeratingWithState:&v87 objects:v106 count:16];
      }
      while (v52);
    }

    id v15 = v81;
    BOOL v10 = v79;
    id v17 = v75;
    id v16 = v77;
  }
  if (v82)
  {
    [(PLManagedAsset *)self deleteAdjustedResources];
    id v85 = 0;
    BOOL v70 = +[PLResourceInstaller installInternalResourcesForExistingAsset:self assumeNoExistingResources:0 referencedResourceURLs:0 error:&v85];
    id v71 = v85;
    if (!v70)
    {
      uint64_t v72 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        unint64_t v101 = (unint64_t)v71;
        _os_log_impl(&dword_19B3C7000, v72, OS_LOG_TYPE_ERROR, "Unable to install resources after adjustment change: %@", buf, 0xCu);
      }
    }
    if (v10) {
      [(PLManagedAsset *)self reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker];
    }
  }
}

uint64_t __166__PLManagedAsset__updateDerivativesAndThumbnails_withPreviewImage_thumbnailImage_metadata_didRevertToOriginal_updateInternalResources_isSubstandardRender_isDeferred___block_invoke(uint64_t a1, void *a2)
{
  id v2 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(a2, "recipeID"));
  uint64_t v3 = [&unk_1EEBF16E8 containsObject:v2];

  return v3;
}

- (void)_removeComputeResourceWithRecipeID:(unsigned int)a3 atPath:(id)a4
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v6 = a4;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __60__PLManagedAsset__removeComputeResourceWithRecipeID_atPath___block_invoke;
  v14[3] = &__block_descriptor_36_e28_B16__0__PLInternalResource_8l;
  unsigned int v15 = a3;
  id v7 = [(PLManagedAsset *)self persistedResourcesMatching:v14];
  int v8 = [v7 anyObject];

  if (v8) {
    [v8 deleteResource];
  }
  id v9 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v13 = 0;
  char v10 = [v9 removeItemAtPath:v6 error:&v13];
  id v11 = v13;

  if ((v10 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
  {
    id v12 = PLPhotoEditGetLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v17 = v6;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "Error removing file at path: '%@'", buf, 0xCu);
    }
  }
}

BOOL __60__PLManagedAsset__removeComputeResourceWithRecipeID_atPath___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 recipeID] == *(_DWORD *)(a1 + 32)
    && [v3 resourceType] == 14;

  return v4;
}

- (void)setAdjustments:(id)a3 options:(id)a4
{
  uint64_t v204 = *MEMORY[0x1E4F143B8];
  id v173 = a3;
  id v174 = a4;
  v175 = self;
  if ([(PLManagedAsset *)self isVideo] || [(PLManagedAsset *)self isPhoto])
  {
    oslog = [v173 adjustmentFormatIdentifier];
    v171 = [v173 adjustmentFormatVersion];
    uint64_t v6 = [v174 fileIngestionType];
    if (![(PLManagedAsset *)self hasAdjustments] && !oslog)
    {
LABEL_193:

      goto LABEL_194;
    }
    BOOL v7 = v6 == 0;
    v170 = [v173 adjustmentTimestamp];
    if (!v170)
    {
      v170 = [MEMORY[0x1E4F1C9C8] date];
      [v173 setAdjustmentTimestamp:v170];
      BOOL v7 = 0;
    }
    objc_opt_class();
    id obj = (id)objc_claimAutoreleasedReturnValue();
    objc_sync_enter(obj);
    v167 = [MEMORY[0x1E4F8B908] fileManager];
    uint64_t v191 = 0;
    v192 = &v191;
    uint64_t v193 = 0x2020000000;
    char v194 = 0;
    v163 = [MEMORY[0x1E4F8BA08] UUIDString];
    PLImageManagerGetLog();
    int v8 = (id)objc_claimAutoreleasedReturnValue();
    os_signpost_id_t spid = os_signpost_id_generate(v8);
    id v9 = v8;

    char v10 = v9;
    id v11 = v10;
    if (spid - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
    {
      *(_DWORD *)buf = 138543362;
      *(void *)&uint8_t buf[4] = v163;
      _os_signpost_emit_with_name_impl(&dword_19B3C7000, v11, OS_SIGNPOST_INTERVAL_BEGIN, spid, "AssetSetAdjustments", "adjustmentUuid = %{public}@", buf, 0xCu);
    }

    __int16 v160 = v11;
    *(void *)buf = 0;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    v201 = __Block_byref_object_copy__15798;
    v202 = __Block_byref_object_dispose__15799;
    id v203 = 0;
    id v12 = [(PLManagedObject *)self pathManager];
    int v13 = [v12 isUBF];

    if (v13)
    {
      id v14 = objc_alloc(MEMORY[0x1E4F8B978]);
      unsigned int v15 = [(PLManagedAsset *)self uuid];
      uint64_t v16 = [(PLManagedAsset *)self bundleScope];
      id v17 = [(id)*MEMORY[0x1E4F44488] identifier];
      uint64_t v18 = (__CFString *)[v14 initWithAssetUuid:v15 bundleScope:v16 uti:v17 resourceVersion:2 resourceType:31];

      id v19 = [(PLManagedObject *)self pathManager];
      v187[0] = MEMORY[0x1E4F143A8];
      v187[1] = 3221225472;
      v187[2] = __41__PLManagedAsset_setAdjustments_options___block_invoke;
      v187[3] = &unk_1E5865648;
      v189 = buf;
      v190 = &v191;
      id v188 = v167;
      [v19 obtainAccessAndWaitWithFileWithIdentifier:v18 mode:2 toURLWithHandler:v187];

      v161 = 0;
      int v20 = v188;
    }
    else
    {
      uint32_t v22 = [(PLManagedAsset *)self pathForAdjustmentDirectory];
      uint64_t v23 = [(__CFString *)v22 stringByAppendingPathComponent:@"in_flight"];
      v161 = v22;
      uint64_t v24 = *(void **)(*(void *)&buf[8] + 40);
      *(void *)(*(void *)&buf[8] + 40) = v23;

      if (v7) {
        goto LABEL_21;
      }
      id v186 = 0;
      char v25 = [v167 createDirectoryAtPath:v22 withIntermediateDirectories:1 attributes:0 error:&v186];
      uint64_t v18 = (__CFString *)v186;
      if ((v25 & 1) == 0)
      {
        id v26 = PLBackendGetLog();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)v196 = 138412546;
          v197 = v161;
          __int16 v198 = 2112;
          v199 = v18;
          _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_ERROR, "Failed to create directory at %@: %@", v196, 0x16u);
        }
      }
      uint64_t v27 = *(void *)(*(void *)&buf[8] + 40);
      int v20 = [MEMORY[0x1E4F1C9B8] data];
      char v28 = [v167 createFileAtPath:v27 contents:v20 attributes:0];
      *((unsigned char *)v192 + 24) = v28;
    }

LABEL_21:
    v169 = [MEMORY[0x1E4F1CA60] dictionary];
    uint64_t v29 = objc_opt_class();
    uint64_t v30 = [v174 renderedContentURL];
    uint64_t v31 = [v30 pathExtension];
    id v165 = objc_msgSend(v29, "uniformTypeIdentifierFromPathExtension:assetType:", v31, -[PLManagedAsset kind](self, "kind"));

    v168 = [(PLManagedAsset *)self pathForFullsizeRenderImageFileWithUTI:v165];
    if (oslog) {
      BOOL v32 = v171 == 0;
    }
    else {
      BOOL v32 = 1;
    }
    int v33 = !v32;
    int v164 = v33;
    if (!v32)
    {
      if ([v174 isDeferred])
      {
        unsigned int v34 = [(PLManagedAsset *)self deferredProcessingNeeded];
        if (v34 <= 0xB
          && ((1 << v34) & 0xB15) != 0
          && ![(PLManagedAsset *)self isPhotoIrisPlaceholder])
        {
          [(PLManagedAsset *)self setDeferredProcessingNeeded:2];
          id v35 = [(PLManagedObject *)self photoLibrary];
          char v36 = [v35 libraryServicesManager];
          id v37 = [v36 backgroundJobService];
          id v38 = [(PLManagedObject *)self photoLibrary];
          [v37 signalBackgroundProcessingNeededOnLibrary:v38];
        }
      }
      else if ([(PLManagedAsset *)self deferredProcessingNeeded] == 2 {
             || [(PLManagedAsset *)self deferredProcessingNeeded] == 9)
      }
      {
        [(PLManagedAsset *)self setDeferredProcessingNeeded:0];
      }
      uint64_t v52 = [(PLManagedAsset *)self additionalAttributes];
      uint64_t v53 = [v52 unmanagedAdjustment];

      if (!v53)
      {
        unint64_t v54 = [(PLManagedAsset *)self managedObjectContext];
        uint64_t v53 = +[PLManagedObject insertInManagedObjectContext:v54];

        uint64_t v55 = [(PLManagedAsset *)self additionalAttributes];
        [v55 setUnmanagedAdjustment:v53];
      }
      [(__CFString *)v53 setUuid:v163];
      if ([v174 isSubstandardRender])
      {
        if ([v174 isDeferred]) {
          [(PLManagedAsset *)self pathForAsyncAdjustedRenderPreviewImageFile];
        }
        else {
        BOOL v56 = [(PLManagedAsset *)self pathForSubstandardFullsizeRenderImageFile];
        }

        id v77 = PLBackendGetLog();
        if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
        {
          int v78 = [v174 isDeferred];
          BOOL v79 = @"NO";
          if (v78) {
            BOOL v79 = @"YES";
          }
          *(_DWORD *)v196 = 138412546;
          v197 = v56;
          __int16 v198 = 2112;
          v199 = v79;
          _os_log_impl(&dword_19B3C7000, v77, OS_LOG_TYPE_INFO, "Updating destinationPathForRenderedImageContent to substandardRender path: %@ deferred: %@", v196, 0x16u);
        }
      }
      else
      {
        BOOL v56 = v168;
      }
      int64_t v80 = +[PLManagedAsset adjustmentBaseVersionFromPFAdjustmentsBaseVersion:](PLManagedAsset, "adjustmentBaseVersionFromPFAdjustmentsBaseVersion:", [v173 adjustmentBaseVersion]);
      id v81 = [v174 renderedContentURL];
      if (v81) {
        char v82 = v7;
      }
      else {
        char v82 = 1;
      }

      if ((v82 & 1) == 0)
      {
        uint64_t v83 = [v174 penultimateRenderedJPEGData];
        id v84 = [v174 penultimateRenderedVideoContentURL];
        id v85 = [v174 penultimateRenderedVideoComplementContentURL];
        int64_t v80 = -[PLManagedAsset _prepareFileSystemResourcesForAdjustmentsWithCurrentAdjustmentBaseVersion:penultimateRenderedJPEGData:penultimateRenderedVideoContentURL:penultimateRenderedVideoComplementContentURL:fileIngestionType:](self, "_prepareFileSystemResourcesForAdjustmentsWithCurrentAdjustmentBaseVersion:penultimateRenderedJPEGData:penultimateRenderedVideoContentURL:penultimateRenderedVideoComplementContentURL:fileIngestionType:", v80, v83, v84, v85, [v174 fileIngestionType]);
      }
      uint64_t v86 = [v173 editorBundleID];
      long long v87 = (void *)v86;
      long long v88 = &stru_1EEB2EB80;
      if (v86) {
        long long v88 = (__CFString *)v86;
      }
      long long v89 = v88;

      if (!v7)
      {
        [v169 setObject:oslog forKey:*MEMORY[0x1E4F8BA68]];
        [v169 setObject:v171 forKey:*MEMORY[0x1E4F8BA70]];
        long long v90 = [NSNumber numberWithInteger:v80];
        [v169 setObject:v90 forKey:*MEMORY[0x1E4F8BA50]];

        [v169 setObject:v89 forKey:*MEMORY[0x1E4F8BA60]];
        [v169 setObject:v170 forKey:*MEMORY[0x1E4F8BA80]];
        long long v91 = [v173 adjustmentData];
        if (v91) {
          [v169 setObject:v91 forKey:*MEMORY[0x1E4F8BA58]];
        }
      }
      [(PLManagedAsset *)self setEditorBundleID:v89];
      uint64_t v92 = [v173 adjustmentRenderTypes];
      [(PLManagedAsset *)self setAssetAdjustmentsStateFromAdjustmentRenderType:v92];
      [(__CFString *)v53 setAdjustmentRenderTypes:v92];
      [(__CFString *)v53 setAdjustmentFormatIdentifier:oslog];
      [(__CFString *)v53 setAdjustmentFormatVersion:v171];
      long long v93 = [NSNumber numberWithInteger:v80];
      [(__CFString *)v53 setAdjustmentBaseImageFormat:v93];

      [(__CFString *)v53 setAdjustmentTimestamp:v170];
      long long v94 = (void *)SBSCopyLocalizedApplicationNameForDisplayIdentifier();
      [(__CFString *)v53 setEditorLocalizedName:v94];
      id v95 = PLBackendGetLog();
      if (os_log_type_enabled(v95, OS_LOG_TYPE_INFO))
      {
        long long v96 = [(PLManagedAsset *)v175 uuid];
        *(_DWORD *)v196 = 138412546;
        v197 = v53;
        __int16 v198 = 2114;
        v199 = v96;
        _os_log_impl(&dword_19B3C7000, v95, OS_LOG_TYPE_INFO, "Setting unmanaged adjustment %@ to asset %{public}@", v196, 0x16u);
      }
      if ([(PLManagedAsset *)v175 isPhoto])
      {
        long long v97 = [v174 penultimateRenderedJPEGData];
        if (v97)
        {
          id v98 = [v174 penultimateRenderedJPEGData];
          id v99 = v98;
        }
        else
        {
          id v103 = (void *)MEMORY[0x1E4F1C9B8];
          id v98 = [(PLManagedAsset *)v175 pathForPenultimateFullsizeRenderImageFile];
          id v99 = [v103 dataWithContentsOfFile:v98];
        }
        __int16 v104 = objc_opt_class();
        __int16 v102 = [v173 adjustmentData];
        uint64_t v105 = [v104 cloudAdjustmentFingerprintWithAdjustmentDataBlob:v102 formatIdentifier:oslog formatVersion:v171 editorBundleID:v89 baseVersion:v80 baseImageData:v99];
      }
      else
      {
        id v100 = [v174 penultimateRenderedVideoContentURL];
        if (v100)
        {
          unint64_t v101 = [v174 penultimateRenderedVideoContentURL];
          __int16 v102 = v101;
        }
        else
        {
          uint64_t v106 = (void *)MEMORY[0x1E4F1CB10];
          unint64_t v101 = [(PLManagedAsset *)v175 pathForPenultimateFullsizeRenderVideoFile];
          __int16 v102 = [v106 fileURLWithPath:v101];
        }
        char v107 = [(__CFString *)v102 path];
        int v108 = [v167 fileExistsAtPath:v107];

        if (v108)
        {
          uint64_t v109 = [MEMORY[0x1E4F59898] nonPrivateFingerprintScheme];
          id v185 = 0;
          id v99 = [v109 fingerPrintForFileAtURL:v102 error:&v185];
          id v110 = (__CFString *)v185;

          if (!v99)
          {
            uint64_t v111 = PLBackendGetLog();
            if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)v196 = 138412546;
              v197 = v102;
              __int16 v198 = 2112;
              v199 = v110;
              _os_log_impl(&dword_19B3C7000, v111, OS_LOG_TYPE_ERROR, "Failed to calculate base fingerprint for penultimate video at url: %@, error: %@", v196, 0x16u);
            }
          }
        }
        else
        {
          id v99 = 0;
        }
        uint64_t v112 = objc_opt_class();
        v113 = [v173 adjustmentData];
        uint64_t v105 = [v112 cloudAdjustmentFingerprintWithAdjustmentDataBlob:v113 formatIdentifier:oslog formatVersion:v171 editorBundleID:v89 baseVersion:v80 baseFingerprint:v99];
      }
      id v114 = PLBackendGetLog();
      if (os_log_type_enabled(v114, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)v196 = 138412290;
        v197 = v105;
        _os_log_impl(&dword_19B3C7000, v114, OS_LOG_TYPE_INFO, "Calculating cloud adjustment fingerprint at set time: %@", v196, 0xCu);
      }

      [(__CFString *)v53 setOtherAdjustmentsFingerprint:v105];
      v168 = v56;
      goto LABEL_129;
    }
    if ([v174 isDeferred])
    {
      id v39 = PLBackendGetLog();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
      {
        char v40 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)v196 = 138543362;
        v197 = v40;
        _os_log_impl(&dword_19B3C7000, v39, OS_LOG_TYPE_ERROR, "Unsupported adjustment, revert and deferred are incompatible for asset %{public}@", v196, 0xCu);
      }
    }
    [(PLManagedAsset *)self setDeferredProcessingNeeded:0];
    [(PLManagedAsset *)self deleteAdjustedResources];
    if (v7)
    {
LABEL_69:
      [(PLManagedAsset *)v175 setEditorBundleID:0];
      [(PLManagedAsset *)v175 setAdjustmentsState:0];
      BOOL v64 = [(PLManagedAsset *)v175 additionalAttributes];
      uint64_t v53 = [v64 unmanagedAdjustment];

      id v65 = PLBackendGetLog();
      if (os_log_type_enabled(v65, OS_LOG_TYPE_INFO))
      {
        uint64_t v66 = [(PLManagedAsset *)v175 uuid];
        *(_DWORD *)v196 = 138412546;
        v197 = v53;
        __int16 v198 = 2114;
        v199 = v66;
        _os_log_impl(&dword_19B3C7000, v65, OS_LOG_TYPE_INFO, "Reverting unmanaged adjustment %@ for asset %{public}@", v196, 0x16u);
      }
      id v67 = PLPhotosStatusGetLog();
      if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v68 = [(PLManagedAsset *)v175 uuid];
        *(_DWORD *)v196 = 138412546;
        v197 = v53;
        __int16 v198 = 2114;
        v199 = v68;
        _os_log_impl(&dword_19B3C7000, v67, OS_LOG_TYPE_DEFAULT, "Reverting unmanaged adjustment %@ for asset %{public}@", v196, 0x16u);
      }
      id v69 = PLPhotosStatusGetLog();
      if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v70 = [MEMORY[0x1E4F29060] callStackSymbols];
        *(_DWORD *)v196 = 138412290;
        v197 = v70;
        _os_log_impl(&dword_19B3C7000, v69, OS_LOG_TYPE_DEFAULT, "%@", v196, 0xCu);
      }
      if (v53)
      {
        [(__CFString *)v53 setAdjustmentFormatIdentifier:0];
        [(__CFString *)v53 setAdjustmentFormatVersion:0];
        [(__CFString *)v53 setAdjustmentTimestamp:v170];
        [(__CFString *)v53 setAdjustmentRenderTypes:0];
        [(__CFString *)v53 setOtherAdjustmentsFingerprint:0];
        [(__CFString *)v53 setAdjustmentBaseImageFormat:&unk_1EEBED770];
      }
      if ([(PLManagedAsset *)v175 isPhotoIris]
        && [v174 shouldUpdateAttributes])
      {
        if ([(PLManagedAsset *)v175 playbackStyle] != 3) {
          [(PLManagedAsset *)v175 setPlaybackStyle:3];
        }
        id v71 = [(PLManagedAsset *)v175 pathForVideoComplementFile];
        uint64_t v72 = (void *)MEMORY[0x1E4F16330];
        uint64_t v73 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v71];
        id v74 = [v72 assetWithURL:v73];

        if (v74)
        {
          id v75 = PLBackendGetLog();
          if (os_log_type_enabled(v75, OS_LOG_TYPE_INFO))
          {
            id v76 = [(PLManagedAsset *)v175 uuid];
            *(_DWORD *)v196 = 138543618;
            v197 = v76;
            __int16 v198 = 2112;
            v199 = v71;
            _os_log_impl(&dword_19B3C7000, v75, OS_LOG_TYPE_INFO, "Updating Live Photo properties for asset %{public}@ from %@", v196, 0x16u);
          }
          [(PLManagedAsset *)v175 _updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:v74];
          [(PLManagedAsset *)v175 updatePlaybackVariationAndLoopingStyleFromAVAsset:v74];
        }
        else
        {
          id v115 = PLBackendGetLog();
          if (os_log_type_enabled(v115, OS_LOG_TYPE_ERROR))
          {
            BOOL v116 = [(PLManagedAsset *)v175 uuid];
            *(_DWORD *)v196 = 138412546;
            v197 = v71;
            __int16 v198 = 2114;
            v199 = v116;
            _os_log_impl(&dword_19B3C7000, v115, OS_LOG_TYPE_ERROR, "Failed to create avAsset from %@ to update Live Photo properties for asset %{public}@", v196, 0x16u);
          }
        }
      }
      if (![(PLManagedAsset *)v175 isPhoto])
      {
LABEL_130:

        if (-[PLManagedAsset isPhoto](v175, "isPhoto") || [v174 isDeferred])
        {
          id v117 = 0;
          if (v168 && oslog && v171)
          {
            id v117 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v168 isDirectory:0];
          }
          if ([(PLManagedAsset *)v175 isVideo])
          {
            id v118 = [v174 renderedVideoPosterContentURL];
            BOOL v119 = v118 == 0;

            if (!v119)
            {
              id v120 = (void *)MEMORY[0x1E4F1CB10];
              id v121 = [(PLManagedAsset *)v175 pathForTransientVideoPosterFramePreview];
              id v122 = [v120 fileURLWithPath:v121];

              goto LABEL_144;
            }
          }
        }
        else
        {
          int v123 = [v174 renderedContentURL];
          if (v123)
          {
            BOOL v124 = [(PLManagedAsset *)v175 isVideo];

            if (v124)
            {
              id v117 = [(PLManagedAsset *)v175 fileURLForFullsizeRenderVideo];
              id v122 = [(PLManagedAsset *)v175 fileURLForFullsizeRenderImage];
              goto LABEL_144;
            }
          }
          id v117 = 0;
        }
        id v122 = 0;
LABEL_144:
        [(PLManagedAsset *)v175 _ingestAndApplyMetadataChangesFromAdjustments:v173 updateAdjustmentDictionary:v169 options:v174 fullSizeRenderURL:v117 videoPosterRenderURL:v122 isRevertToOriginal:v164 ^ 1u error:0];
        uint64_t v125 = v160;
        BOOL v126 = v125;
        if (spid - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v125))
        {
          *(_WORD *)v196 = 0;
          _os_signpost_emit_with_name_impl(&dword_19B3C7000, v126, OS_SIGNPOST_INTERVAL_END, spid, "AssetSetAdjustments", "", v196, 2u);
        }

        unsigned int v127 = [MEMORY[0x1E4F1C9C8] date];
        [(PLManagedAsset *)v175 setModificationDate:v127];

        if ([v174 shouldOverwriteFullSizeRenderSize])
        {
          [v174 fullSizeRenderSize];
          [(PLManagedAsset *)v175 setWidth:(uint64_t)v128];
          [v174 fullSizeRenderSize];
          [(PLManagedAsset *)v175 setHeight:(uint64_t)v129];
          if ([(PLManagedAsset *)v175 isPhoto])
          {
            v130 = [v174 mainFileMetadata];
            [(PLManagedAsset *)v175 updatePanoramosityWithMetadata:v130];
          }
        }
        if ([(PLManagedAsset *)v175 isVideo]
          && (([v174 isSubstandardRender] & 1) != 0 || objc_msgSend(v174, "isDeferred")))
        {
          [v174 fullSizeRenderDuration];
          if (((v131 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 <= 0x3FE)
          {
            [v174 fullSizeRenderDuration];
            -[PLManagedAsset setDuration:](v175, "setDuration:");
          }
        }
        if ((v164 & 1) == 0 && [(PLManagedAsset *)v175 kindSubtype] == 101)
        {
          id v132 = [v174 mainFileMetadata];
          [(PLManagedAsset *)v175 setDefaultAdjustmentsIfNecessaryWithMainFileMetadata:v132];
        }
        if (*((unsigned char *)v192 + 24)) {
          [v167 removeItemAtPath:*(void *)(*(void *)&buf[8] + 40) error:0];
        }

        _Block_object_dispose(buf, 8);
        _Block_object_dispose(&v191, 8);

        objc_sync_exit(obj);
        if ([(PLManagedAsset *)v175 isVideo]
          && (([v174 isDeferred] & 1) != 0 || objc_msgSend(v174, "shouldUpdateAttributes")))
        {
          [(PLManagedAsset *)v175 pruneLocalVideoKeyFrameImage];
        }
        id v133 = [(PLManagedAsset *)v175 pathForWallpaperComputeResourcesFile];
        [(PLManagedAsset *)v175 _removeComputeResourceWithRecipeID:327687 atPath:v133];

        id v134 = [(PLManagedAsset *)v175 pathForGenerativePlaygroundFaceResourcesFile];
        [(PLManagedAsset *)v175 _removeComputeResourceWithRecipeID:327693 atPath:v134];

        if (![v174 isDeferred]
          || ([v174 isSubstandardRender] & 1) != 0
          || [v174 shouldGenerateThumbnails])
        {
          if ([(PLManagedAsset *)v175 isVideo])
          {
            if ([v174 isDeferred])
            {
              id v135 = (void *)MEMORY[0x1E4F1CB10];
              id v136 = [(PLManagedAsset *)v175 pathForTransientVideoPosterFramePreview];
              id v137 = [v135 fileURLWithPath:v136];
            }
            else
            {
              id v136 = [(PLManagedAsset *)v175 fileURLForFullsizeRenderImage];
              id v137 = v136;
            }

            CFURLRef v140 = (const __CFURL *)v137;
            CFURLRef v141 = v140;
            if (!v140)
            {
              char v142 = PLPhotoEditGetLog();
              if (os_log_type_enabled(v142, OS_LOG_TYPE_DEBUG))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_19B3C7000, v142, OS_LOG_TYPE_DEBUG, "No custom video poster provided, default to standard preview image", buf, 2u);
              }

              uint64_t v143 = (void *)MEMORY[0x1E4F1CB10];
              v144 = [(PLManagedAsset *)v175 pathForAsyncAdjustedRenderPreviewImageFile];
              CFURLRef v141 = [v143 fileURLWithPath:v144];
            }
            CGImageSourceRef v138 = CGImageSourceCreateWithURL(v141, 0);
            if (v138)
            {
              uint64_t v145 = PLPhotoEditGetLog();
              if (os_log_type_enabled(v145, OS_LOG_TYPE_INFO))
              {
                id v146 = [(PLManagedAsset *)v175 uuid];
                *(_DWORD *)buf = 138412546;
                *(void *)&uint8_t buf[4] = v141;
                *(_WORD *)&buf[12] = 2114;
                *(void *)&buf[14] = v146;
                _os_log_impl(&dword_19B3C7000, v145, OS_LOG_TYPE_INFO, "Creating thumbnail image from %@ for video asset %{public}@", buf, 0x16u);
              }
              id v176 = 0;
              id v177 = 0;
              +[PLManagedAsset createThumbnailImage:&v177 previewImage:&v176 withToBeReleasedImageSource:v138];
              id v139 = v177;
              CGImageSourceRef v138 = (CGImageSourceRef)v176;
            }
            else
            {
              id v139 = 0;
            }
          }
          else
          {
            CGImageSourceRef v138 = 0;
            id v139 = 0;
          }
          PLImageManagerGetLog();
          uint64_t v147 = (id)objc_claimAutoreleasedReturnValue();
          os_signpost_id_t v148 = os_signpost_id_generate(v147);
          id v149 = v147;

          __int16 v150 = v149;
          id v151 = v150;
          if (v148 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v150))
          {
            *(_WORD *)buf = 0;
            _os_signpost_emit_with_name_impl(&dword_19B3C7000, v151, OS_SIGNPOST_INTERVAL_BEGIN, v148, "UpdateDerivativeAndThumbnailAdjustments", "Begin potential updates on derivatives and thumbnails after setting adjustments.", buf, 2u);
          }

          __int16 v152 = v151;
          uint64_t v153 = [v174 shouldGenerateThumbnails];
          __int16 v154 = [v174 mainFileMetadata];
          if ([v174 shouldUpdateAttributes]) {
            uint64_t v155 = 1;
          }
          else {
            uint64_t v155 = [v174 isDeferred];
          }
          char v156 = [v174 isSubstandardRender];
          BYTE1(v159) = [v174 isDeferred];
          LOBYTE(v159) = v156;
          -[PLManagedAsset _updateDerivativesAndThumbnails:withPreviewImage:thumbnailImage:metadata:didRevertToOriginal:updateInternalResources:isSubstandardRender:isDeferred:](v175, "_updateDerivativesAndThumbnails:withPreviewImage:thumbnailImage:metadata:didRevertToOriginal:updateInternalResources:isSubstandardRender:isDeferred:", v153, v138, v139, v154, v164 ^ 1u, v155, v159);

          id v157 = v152;
          __int16 v158 = v157;
          if (v148 - 1 < 0xFFFFFFFFFFFFFFFELL && os_signpost_enabled(v157))
          {
            *(_WORD *)buf = 0;
            _os_signpost_emit_with_name_impl(&dword_19B3C7000, v158, OS_SIGNPOST_INTERVAL_END, v148, "UpdateDerivativeAndThumbnailAdjustments", "", buf, 2u);
          }
        }
        goto LABEL_193;
      }
      long long v89 = [(PLManagedAsset *)v175 metadataFromMediaPropertiesOrOriginalResource];
      [(PLManagedAsset *)v175 setDepthTypeFromMetadata:v89];
      [(PLManagedAsset *)v175 setSpatialTypeFromMetadata:v89];
      [(PLManagedAsset *)v175 updateImageExtendedGenerativeAttributesFromMetadata:v89];
      [(PLManagedAsset *)v175 setCurrentSleetCastFromMetadata:v89];
LABEL_129:

      goto LABEL_130;
    }
    id v41 = [(PLManagedObject *)self pathManager];
    int v42 = [v41 isUBF];

    if (v42)
    {
      long long v183 = 0u;
      long long v184 = 0u;
      long long v181 = 0u;
      long long v182 = 0u;
      uint64_t v43 = [(PLManagedAsset *)self adjustedFileURLs];
      uint64_t v44 = 0;
      uint64_t v45 = [v43 countByEnumeratingWithState:&v181 objects:v195 count:16];
      if (v45)
      {
        uint64_t v46 = *(void *)v182;
        do
        {
          for (uint64_t i = 0; i != v45; ++i)
          {
            if (*(void *)v182 != v46) {
              objc_enumerationMutation(v43);
            }
            unint64_t v48 = *(__CFString **)(*((void *)&v181 + 1) + 8 * i);
            v180 = v44;
            char v49 = [MEMORY[0x1E4F8B908] removeItemAtURL:v48 error:&v180];
            id v50 = v180;

            uint64_t v44 = v50;
            if ((v49 & 1) == 0)
            {
              uint64_t v51 = PLBackendGetLog();
              if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)v196 = 138412546;
                v197 = v48;
                __int16 v198 = 2112;
                v199 = v44;
                _os_log_impl(&dword_19B3C7000, v51, OS_LOG_TYPE_ERROR, "Failed to remove adjusted resource %@: %@", v196, 0x16u);
              }
            }
          }
          uint64_t v45 = [v43 countByEnumeratingWithState:&v181 objects:v195 count:16];
        }
        while (v45);
      }
    }
    else
    {
      id v179 = 0;
      char v57 = [MEMORY[0x1E4F8B908] removeItemAtPath:v161 error:&v179];
      uint64_t v44 = (__CFString *)v179;
      if (v57)
      {
LABEL_64:
        id v58 = [(PLManagedObject *)v175 pathManager];
        uint64_t v59 = [(PLManagedAsset *)v175 uuid];
        uint64_t v60 = [v58 URLForPartialVideoDirectoryWithAssetUUID:v59];

        v178 = v44;
        LOBYTE(v59) = [MEMORY[0x1E4F8B908] removeItemAtURL:v60 error:&v178];
        uint64_t v61 = v178;

        if ((v59 & 1) == 0)
        {
          id v62 = PLBackendGetLog();
          if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
          {
            unint64_t v63 = [(PLManagedAsset *)v175 uuid];
            *(_DWORD *)v196 = 138543618;
            v197 = v63;
            __int16 v198 = 2112;
            v199 = v61;
            _os_log_impl(&dword_19B3C7000, v62, OS_LOG_TYPE_ERROR, "Failed to remove partial video directory for assetUUID %{public}@: %@", v196, 0x16u);
          }
        }

        goto LABEL_69;
      }
      uint64_t v43 = PLBackendGetLog();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v196 = 138412546;
        v197 = v161;
        __int16 v198 = 2112;
        v199 = v44;
        _os_log_impl(&dword_19B3C7000, v43, OS_LOG_TYPE_ERROR, "Failed to remove adjustment directory %@: %@", v196, 0x16u);
      }
    }

    goto LABEL_64;
  }
  oslog = PLPhotoEditGetLog();
  if (os_log_type_enabled(oslog, OS_LOG_TYPE_ERROR))
  {
    char v21 = [(PLManagedAsset *)self uuid];
    *(_DWORD *)buf = 138543362;
    *(void *)&uint8_t buf[4] = v21;
    _os_log_impl(&dword_19B3C7000, oslog, OS_LOG_TYPE_ERROR, "setAdjustments for non-photo non-video asset %{public}@ is invalid", buf, 0xCu);
  }
LABEL_194:
}

void __41__PLManagedAsset_setAdjustments_options___block_invoke(void *a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (a2)
  {
    uint64_t v6 = [a2 path];
    BOOL v7 = [v6 stringByDeletingPathExtension];
    uint64_t v8 = [v7 stringByAppendingPathExtension:@"in_flight"];
    uint64_t v9 = *(void *)(a1[5] + 8);
    char v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    id v11 = (void *)a1[4];
    uint64_t v12 = *(void *)(*(void *)(a1[5] + 8) + 40);
    int v13 = [MEMORY[0x1E4F1C9B8] data];
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v11 createFileAtPath:v12 contents:v13 attributes:0];
  }
  else
  {
    id v14 = PLBackendGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      int v15 = 138412290;
      id v16 = v5;
      _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_ERROR, "Failed to obtain the adjustment marker path. Error: %@", (uint8_t *)&v15, 0xCu);
    }
  }
}

- (void)_writeOutAdjustmentsToFile:(id)a3
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v18 = 0;
  id v5 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v4 format:100 options:0 error:&v18];
  id v6 = v18;
  if (!v5) {
    goto LABEL_3;
  }
  BOOL v7 = [(PLManagedAsset *)self pathForAdjustmentFile];
  id v17 = v6;
  char v8 = [v5 writeToFile:v7 options:1073741825 error:&v17];
  id v9 = v17;

  id v6 = v9;
  if ((v8 & 1) == 0)
  {
LABEL_3:
    uint64_t v10 = *MEMORY[0x1E4F8BA58];
    id v11 = [v4 objectForKeyedSubscript:*MEMORY[0x1E4F8BA58]];
    uint64_t v12 = v11;
    if (v11)
    {
      int v13 = objc_msgSend(NSString, "stringWithFormat:", @"<%lu bytes>", objc_msgSend(v11, "length"));
      [v4 setObject:v13 forKeyedSubscript:v10];
    }
    id v14 = PLBackendGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      int v15 = [(PLManagedAsset *)self pathForAdjustmentFile];
      id v16 = @"write failed";
      *(_DWORD *)buf = 138413058;
      int v20 = v15;
      if (!v5) {
        id v16 = @"unable to encode dictionary as data";
      }
      __int16 v21 = 2112;
      id v22 = v4;
      __int16 v23 = 2112;
      uint64_t v24 = v16;
      __int16 v25 = 2112;
      id v26 = v6;
      _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_ERROR, "Failed to create adjustment file %@ from adjustment dictionary %@ (%@): %@", buf, 0x2Au);
    }
  }
}

- (void)updateAdjustmentFileWithAdjustmentRenderTypes:(unsigned int)a3
{
  uint64_t v3 = *(void *)&a3;
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v5 = objc_alloc(MEMORY[0x1E4F1C9B8]);
  id v6 = [(PLManagedAsset *)self pathForAdjustmentFile];
  BOOL v7 = (void *)[v5 initWithContentsOfFile:v6];

  if (v7)
  {
    id v13 = 0;
    char v8 = [MEMORY[0x1E4F28F98] propertyListWithData:v7 options:0 format:0 error:&v13];
    id v9 = v13;
    if (v8)
    {
      uint64_t v10 = [v8 mutableCopy];
      id v11 = [NSNumber numberWithUnsignedInt:v3];
      [v10 setObject:v11 forKey:*MEMORY[0x1E4F8BA78]];

      [(PLManagedAsset *)self _writeOutAdjustmentsToFile:v10];
    }
    else
    {
      uint64_t v10 = PLBackendGetLog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = [(PLManagedAsset *)self pathForAdjustmentFile];
        *(_DWORD *)buf = 138412546;
        int v15 = v12;
        __int16 v16 = 2112;
        id v17 = v9;
        _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_ERROR, "Failed to read adjustment file %@, %@", buf, 0x16u);
      }
    }
  }
}

- (unsigned)_calculateRenderTypeAdditionalFlagCheckAndUpdateIfNeededUnmanagedAdjustment:(id)a3 options:(id)a4 hasAdjustments:(BOOL)a5
{
  BOOL v5 = a5;
  id v8 = a3;
  id v9 = a4;
  if ([(PLManagedAsset *)self isPhoto])
  {
    if ([v9 skipCheckSleetCastAdjustment]) {
      unsigned __int16 v10 = 4;
    }
    else {
      unsigned __int16 v10 = 6;
    }
    if (!v5) {
      goto LABEL_14;
    }
  }
  else
  {
    unsigned __int16 v10 = 0;
    if (!v5) {
      goto LABEL_14;
    }
  }
  if ([v9 shouldCheckForLegacyCameraAutoAdjustment]
    && ([v9 skipCheckCameraAutoAdjustment] & 1) == 0)
  {
    if ([(PLManagedAsset *)self _isCameraAutoAdjustmentChecksNeededAndUpdateAsset])
    {
      v10 |= 1u;
    }
    else if (([v8 adjustmentRenderTypes] & 0x4000) == 0)
    {
      objc_msgSend(v8, "setAdjustmentRenderTypes:", objc_msgSend(v8, "adjustmentRenderTypes") | 0x4000);
    }
  }
LABEL_14:

  return v10;
}

- (void)_processRenderTypeUpdateForGenerativeEditsWithUnmanagedAdjustment:(id)a3 fullSizeRenderURL:(id)a4 hasAdjustments:(BOOL)a5
{
  if (a5)
  {
    id v6 = [(PLManagedAsset *)self fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:a4];
    [(PLManagedAsset *)self updateImageExtendedGenerativeAttributesFromMetadata:v6];
  }
}

- (void)_processRenderTypeUpdateForSleetCastWithUnmanagedAdjustment:(id)a3 fullSizeRenderURL:(id)a4 settingPayload:(id)a5 hasAdjustments:(BOOL)a6
{
  BOOL v6 = a6;
  id v14 = a3;
  id v10 = a4;
  id v11 = a5;
  if (v6 && ([v14 adjustmentRenderTypes] & 0x8000) != 0)
  {
    id v13 = [v11 objectForKeyedSubscript:*MEMORY[0x1E4F8CE70]];
    -[PLManagedAsset setCurrentSleetCast:](self, "setCurrentSleetCast:", [v13 shortValue]);
  }
  else
  {
    uint64_t v12 = [(PLManagedAsset *)self fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:v10];
    if (v12)
    {
      id v13 = (void *)v12;
      [(PLManagedAsset *)self setCurrentSleetCastFromMetadata:v12];
    }
    else
    {
      if ([(PLManagedAsset *)self currentSleetCast]) {
        [(PLManagedAsset *)self setCurrentSleetCast:0];
      }
      id v13 = 0;
    }
  }
}

- (void)_processRenderTypeUpdateForCameraAutoWithUnmanagedAdjustment:(id)a3 options:(id)a4 hasAdjustments:(BOOL)a5 updateRenderFlagsResult:(BOOL)a6
{
  BOOL v6 = a6;
  BOOL v7 = a5;
  id v12 = a3;
  id v10 = a4;
  id v11 = v10;
  if (v7 && ([v10 skipCheckCameraAutoAdjustment] & 1) == 0)
  {
    if (v6)
    {
      -[PLManagedAsset setAssetAdjustmentsStateFromAdjustmentRenderType:](self, "setAssetAdjustmentsStateFromAdjustmentRenderType:", [v12 adjustmentRenderTypes]);
    }
    else if (([v11 shouldCheckForLegacyCameraAutoAdjustment] & 1) == 0 {
           && ([v12 adjustmentRenderTypes] & 0x4000) == 0)
    }
    {
      objc_msgSend(v12, "setAdjustmentRenderTypes:", objc_msgSend(v12, "adjustmentRenderTypes") | 0x4000);
    }
  }
}

- (void)_updateAdjustmentFromAssetAdjustment:(id)a3 unmanagedAdjustment:(id)a4 fullSizeRenderURL:(id)a5 options:(id)a6
{
  id v16 = a4;
  id v10 = a5;
  id v11 = a6;
  id v12 = a3;
  uint64_t v13 = [(PLManagedAsset *)self _calculateRenderTypeAdditionalFlagCheckAndUpdateIfNeededUnmanagedAdjustment:v16 options:v11 hasAdjustments:a3 != 0];
  id v14 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v15 = [v16 updateRenderTypeFlagsForAssetAdjustments:v12 checkFlag:v13 settingPayload:v14];

  [(PLManagedAsset *)self _processRenderTypeUpdateForCameraAutoWithUnmanagedAdjustment:v16 options:v11 hasAdjustments:a3 != 0 updateRenderFlagsResult:v15];
  if ((v13 & 2) != 0) {
    [(PLManagedAsset *)self _processRenderTypeUpdateForSleetCastWithUnmanagedAdjustment:v16 fullSizeRenderURL:v10 settingPayload:v14 hasAdjustments:a3 != 0];
  }
  if ((v13 & 4) != 0) {
    [(PLManagedAsset *)self _processRenderTypeUpdateForGenerativeEditsWithUnmanagedAdjustment:v16 fullSizeRenderURL:v10 hasAdjustments:a3 != 0];
  }
}

- (BOOL)_isCameraAutoAdjustmentChecksNeededAndUpdateAsset
{
  if ([(PLManagedAsset *)self adjustmentsState] == 3) {
    return 0;
  }
  uint64_t v3 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [v3 unmanagedAdjustment];

  if (!v4)
  {
    if ([(PLManagedAsset *)self adjustmentsState]) {
      [(PLManagedAsset *)self setAdjustmentsState:0];
    }
    return 0;
  }
  BOOL v5 = [v4 adjustmentFormatVersion];
  BOOL v6 = [v5 compare:*MEMORY[0x1E4F8DC88] options:64] < 0
    || [(PLManagedAsset *)self adjustmentsState] == 1;

  return v6;
}

- (void)setAssetAdjustmentsStateFromAdjustmentRenderType:(unsigned int)a3
{
  __int16 v3 = a3;
  int v5 = [(PLManagedAsset *)self adjustmentsState];
  if ((v3 & 0x2000) != 0)
  {
    if (v5 == 3) {
      return;
    }
    uint64_t v6 = 3;
  }
  else
  {
    if (v5 == 2) {
      return;
    }
    uint64_t v6 = 2;
  }
  [(PLManagedAsset *)self setAdjustmentsState:v6];
}

- (void)updateAssetPropertiesFromAdjustmentFile
{
  id v8 = [(PLManagedAsset *)self pathForAdjustmentFile];
  __int16 v3 = objc_msgSend(MEMORY[0x1E4F1CB10], "fileURLWithPath:isDirectory:");
  id v4 = (void *)[objc_alloc(MEMORY[0x1E4F8CBB8]) initWithURL:v3];
  int v5 = objc_alloc_init(PLMutableAssetAdjustmentOptions);
  [(PLMutableAssetAdjustmentOptions *)v5 setSkipCheckCameraAutoAdjustment:1];
  if ([(PLManagedAsset *)self currentSleetCast]) {
    [(PLMutableAssetAdjustmentOptions *)v5 setSkipCheckSleetCastAdjustment:1];
  }
  uint64_t v6 = [(PLManagedAsset *)self additionalAttributes];
  BOOL v7 = [v6 unmanagedAdjustment];

  [(PLManagedAsset *)self _updateAdjustmentFromAssetAdjustment:v4 unmanagedAdjustment:v7 fullSizeRenderURL:0 options:v5];
}

- (void)updateAssetAdjustmentsStateIfNeededFromAdjustmentFile
{
  if ([(PLManagedAsset *)self _isCameraAutoAdjustmentChecksNeededAndUpdateAsset])
  {
    id v7 = [(PLManagedAsset *)self pathForAdjustmentFile];
    __int16 v3 = objc_msgSend(MEMORY[0x1E4F1CB10], "fileURLWithPath:isDirectory:");
    id v4 = (void *)[objc_alloc(MEMORY[0x1E4F8CBB8]) initWithURL:v3];
    int v5 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v6 = [v5 unmanagedAdjustment];

    if ([v6 updateRenderTypeFlagsForAssetAdjustments:v4 checkFlag:1 settingPayload:0])
    {
      -[PLManagedAsset setAssetAdjustmentsStateFromAdjustmentRenderType:](self, "setAssetAdjustmentsStateFromAdjustmentRenderType:", [v6 adjustmentRenderTypes]);
      -[PLManagedAsset updateAdjustmentFileWithAdjustmentRenderTypes:](self, "updateAdjustmentFileWithAdjustmentRenderTypes:", [v6 adjustmentRenderTypes]);
    }
    else if ([(PLManagedAsset *)self adjustmentsState] <= 1)
    {
      -[PLManagedAsset setAssetAdjustmentsStateFromAdjustmentRenderType:](self, "setAssetAdjustmentsStateFromAdjustmentRenderType:", [v6 adjustmentRenderTypes]);
    }
  }
}

- (int64_t)_prepareFileSystemResourcesForAdjustmentsWithCurrentAdjustmentBaseVersion:(int64_t)a3 penultimateRenderedJPEGData:(id)a4 penultimateRenderedVideoContentURL:(id)a5 penultimateRenderedVideoComplementContentURL:(id)a6 fileIngestionType:(int64_t)a7
{
  uint64_t v99 = *MEMORY[0x1E4F143B8];
  id v11 = (__CFString *)a4;
  id v12 = (__CFString *)a5;
  uint64_t v13 = (__CFString *)a6;
  context = (void *)MEMORY[0x19F38D3B0]();
  id v77 = [MEMORY[0x1E4F8B908] fileManager];
  if ([(PLManagedAsset *)self isPhoto]) {
    [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
  }
  else {
  int v78 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
  }
  if ([(PLManagedAsset *)self isPhoto]) {
    [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
  }
  else {
  id v76 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
  }
  BOOL v14 = [(PLManagedAsset *)self isVideo];
  if (a3 != 2)
  {
    if (a3 != 1) {
      goto LABEL_22;
    }
    uint64_t v15 = v14 ? v12 : v11;
    if (([v77 fileExistsAtPath:v76] & 1) != 0 || v15) {
      goto LABEL_22;
    }
    id v16 = PLPhotoEditGetLog();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      PLAdjustmentBaseVersionDescription();
      id v17 = (__CFString *)objc_claimAutoreleasedReturnValue();
      uint64_t v18 = PLAdjustmentBaseVersionDescription();
      *(_DWORD *)buf = 138412802;
      uint64_t v86 = v17;
      __int16 v87 = 2112;
      long long v88 = v76;
      __int16 v89 = 2112;
      uint64_t v90 = (uint64_t)v18;
      _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "[RM] Base version is %@ but no file exists at %@, defaulting to %@", buf, 0x20u);
    }
  }
  if ([v77 fileExistsAtPath:v78])
  {
    a3 = 2;
  }
  else
  {
    id v19 = PLPhotoEditGetLog();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      PLAdjustmentBaseVersionDescription();
      int v20 = (__CFString *)objc_claimAutoreleasedReturnValue();
      __int16 v21 = PLAdjustmentBaseVersionDescription();
      *(_DWORD *)buf = 138412802;
      uint64_t v86 = v20;
      __int16 v87 = 2112;
      long long v88 = v78;
      __int16 v89 = 2112;
      uint64_t v90 = (uint64_t)v21;
      _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_DEFAULT, "[RM] Base version is %@ but no file exists at %@, defaulting to %@", buf, 0x20u);
    }
    a3 = 0;
  }
LABEL_22:
  id v22 = [(PLManagedObject *)self pathManager];
  __int16 v23 = [v22 capabilities];

  uint64_t v24 = PLPhotoEditGetLog();
  __int16 v25 = v13;
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    id v26 = [(PLManagedAsset *)self uuid];
    if ([(PLManagedAsset *)self isPhoto])
    {
      if ([(PLManagedAsset *)self isPhotoIris]) {
        uint64_t v27 = @"live photo";
      }
      else {
        uint64_t v27 = @"photo";
      }
    }
    else
    {
      uint64_t v27 = @"video";
    }
    uint64_t v28 = PLAdjustmentBaseVersionDescription();
    uint64_t v29 = (void *)v28;
    *(_DWORD *)buf = 138544898;
    uint64_t v30 = @"YES";
    uint64_t v86 = v26;
    if (!v11) {
      uint64_t v30 = @"NO";
    }
    __int16 v87 = 2112;
    long long v88 = v27;
    __int16 v89 = 2112;
    uint64_t v90 = v28;
    __int16 v91 = 2112;
    uint64_t v92 = v78;
    __int16 v93 = 2112;
    long long v94 = v30;
    __int16 v95 = 2112;
    long long v96 = v12;
    __int16 v97 = 2112;
    __int16 v25 = v13;
    id v98 = v13;
    _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_DEFAULT, "[RM] Preparing resources for adjustment for asset %{public}@ (%@) with base version %@ fullSizeRenderFile: %@ penultimate data: %@ penultimateRenderedVideoContentURL: %@ penultimateRenderedVideoComplementContentURL: %@", buf, 0x48u);
  }
  if (![(PLManagedAsset *)self isPhoto])
  {
    id v41 = (void *)MEMORY[0x1E4F1CB10];
    int v42 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
    uint64_t v43 = [v41 fileURLWithPath:v42 isDirectory:0];

    if (v12)
    {
      id v80 = 0;
      char v44 = [MEMORY[0x1E4F8B908] ingestItemAtURL:v12 toURL:v43 type:a7 options:6 capabilities:v23 error:&v80];
      int v33 = (__CFString *)v80;
      if ((v44 & 1) == 0)
      {
        uint64_t v45 = PLPhotoEditGetLog();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412802;
          uint64_t v86 = v12;
          __int16 v87 = 2112;
          long long v88 = v43;
          __int16 v89 = 2112;
          uint64_t v90 = (uint64_t)v33;
          _os_log_impl(&dword_19B3C7000, v45, OS_LOG_TYPE_ERROR, "Failed to ingest penultimateRenderedVideoContentURL %@ to %@: %@", buf, 0x20u);
        }
LABEL_70:
      }
LABEL_72:

LABEL_73:
      goto LABEL_74;
    }
    if ((a3 | 2) != 2
      || ([(PLManagedAsset *)self _cleanupPenultimateResources], a3 != 2))
    {
      int v33 = 0;
      goto LABEL_72;
    }
    id v62 = (void *)MEMORY[0x1E4F8B908];
    unint64_t v63 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v78 isDirectory:0];
    id v79 = 0;
    LOBYTE(v62) = [v62 ingestItemAtURL:v63 toURL:v43 type:3 options:2 capabilities:v23 error:&v79];
    int v33 = (__CFString *)v79;

    if ((v62 & 1) == 0)
    {
      BOOL v64 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412802;
        uint64_t v86 = v78;
        __int16 v87 = 2112;
        long long v88 = v43;
        __int16 v89 = 2112;
        uint64_t v90 = (uint64_t)v33;
        _os_log_impl(&dword_19B3C7000, v64, OS_LOG_TYPE_ERROR, "Failed to ingest pathForFullsizeRenderFile %@ to %@: %@", buf, 0x20u);
      }
    }
    [(PLManagedAsset *)self markAsUnavailableCloudResourceOfType:16];
LABEL_60:
    a3 = 1;
    goto LABEL_72;
  }
  if (v11)
  {
    uint64_t v31 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
    id v84 = 0;
    char v32 = [(__CFString *)v11 writeToFile:v31 options:1073741825 error:&v84];
    int v33 = (__CFString *)v84;

    unsigned int v34 = PLPhotoEditGetLog();
    id v35 = v34;
    if (v32)
    {
      if (!os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_64;
      }
      char v36 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
      *(_DWORD *)buf = 138412290;
      uint64_t v86 = v36;
      id v37 = "Written penultimateFullsizeRenderImage to %@";
      id v38 = v35;
      os_log_type_t v39 = OS_LOG_TYPE_DEFAULT;
      uint32_t v40 = 12;
    }
    else
    {
      if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        goto LABEL_64;
      }
      char v36 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
      *(_DWORD *)buf = 138412546;
      uint64_t v86 = v36;
      __int16 v87 = 2112;
      long long v88 = v33;
      id v37 = "Failed to write penultimateFullsizeRenderImage %@: %@";
      id v38 = v35;
      os_log_type_t v39 = OS_LOG_TYPE_ERROR;
      uint32_t v40 = 22;
    }
    _os_log_impl(&dword_19B3C7000, v38, v39, v37, buf, v40);

LABEL_64:
    BOOL v65 = [(PLManagedAsset *)self isPhotoIris];
    if (!v25 || !v65) {
      goto LABEL_73;
    }
    uint64_t v66 = (void *)MEMORY[0x1E4F1CB10];
    uint64_t v67 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
    uint64_t v43 = [v66 fileURLWithPath:v67 isDirectory:0];

    id v83 = 0;
    LOBYTE(v67) = [MEMORY[0x1E4F8B908] ingestItemAtURL:v25 toURL:v43 type:a7 options:6 capabilities:v23 error:&v83];
    uint64_t v45 = v83;
    if ((v67 & 1) == 0)
    {
      uint64_t v68 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412802;
        uint64_t v86 = v25;
        __int16 v87 = 2112;
        long long v88 = v43;
        __int16 v89 = 2112;
        uint64_t v90 = (uint64_t)v45;
        _os_log_impl(&dword_19B3C7000, v68, OS_LOG_TYPE_ERROR, "Failed to ingest penultimateRenderedVideoComplementContentURL %@ to penultimateRenderedVideoComplementURL %@: %@", buf, 0x20u);
      }
    }
    goto LABEL_70;
  }
  if ((a3 | 2) == 2)
  {
    [(PLManagedAsset *)self _cleanupPenultimateResources];
    if (a3 == 2)
    {
      uint64_t v46 = [(__CFString *)v78 pathExtension];
      uint64_t v43 = +[PLManagedAsset uniformTypeIdentifierFromPathExtension:v46 assetType:0];

      char v47 = (void *)MEMORY[0x1E4F1CB10];
      unint64_t v48 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFileWithUTI:v43];
      uint64_t v49 = [v47 fileURLWithPath:v48 isDirectory:0];

      id v50 = (void *)MEMORY[0x1E4F8B908];
      uint64_t v51 = (void *)v49;
      uint64_t v52 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v78 isDirectory:0];
      id v82 = 0;
      id v74 = v51;
      LOBYTE(v50) = [v50 ingestItemAtURL:v52 toURL:v51 type:3 options:2 capabilities:v23 error:&v82];
      int v33 = (__CFString *)v82;

      if ((v50 & 1) == 0)
      {
        uint64_t v53 = PLPhotoEditGetLog();
        if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
        {
          unint64_t v54 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
          *(_DWORD *)buf = 138412802;
          uint64_t v86 = v78;
          __int16 v87 = 2112;
          long long v88 = v54;
          __int16 v89 = 2112;
          uint64_t v90 = (uint64_t)v33;
          _os_log_impl(&dword_19B3C7000, v53, OS_LOG_TYPE_DEFAULT, "Failed to ingest pathForFullsizeRenderFile %@ to pathForPenultimateFullsizeRenderImageFile %@: %@", buf, 0x20u);
        }
      }
      [(PLManagedAsset *)self markAsUnavailableCloudResourceOfType:2];
      uint64_t v55 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
      if ([v77 fileExistsAtPath:v55])
      {
        id v71 = (void *)MEMORY[0x1E4F8B908];
        uint64_t v72 = v55;
        BOOL v70 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v55 isDirectory:0];
        BOOL v56 = (void *)MEMORY[0x1E4F1CB10];
        char v57 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
        id v58 = [v56 fileURLWithPath:v57 isDirectory:0];
        id v81 = 0;
        LOBYTE(v71) = [v71 ingestItemAtURL:v70 toURL:v58 type:3 options:2 capabilities:v23 error:&v81];
        id v59 = v81;

        if ((v71 & 1) == 0)
        {
          uint64_t v60 = PLPhotoEditGetLog();
          if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v61 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
            *(_DWORD *)buf = 138412802;
            uint64_t v86 = v72;
            __int16 v87 = 2112;
            long long v88 = v61;
            __int16 v89 = 2112;
            uint64_t v90 = (uint64_t)v59;
            _os_log_impl(&dword_19B3C7000, v60, OS_LOG_TYPE_DEFAULT, "Failed to ingest pathForFullsizeRenderVideoFile %@ to pathForPenultimateFullsizeRenderVideoFile %@: %@", buf, 0x20u);
          }
        }
        [(PLManagedAsset *)self markAsUnavailableCloudResourceOfType:16];

        uint64_t v55 = v72;
      }

      goto LABEL_60;
    }
  }
LABEL_74:

  return a3;
}

- (BOOL)hasAdjustments
{
  return [(PLManagedAsset *)self adjustmentsState] != 0;
}

- (void)revertToOriginal
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  __int16 v3 = PLBackendGetLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = [(PLManagedAsset *)self uuid];
    int v6 = 138543362;
    id v7 = v4;
    _os_log_impl(&dword_19B3C7000, v3, OS_LOG_TYPE_INFO, "Reverting to original for asset %{public}@", (uint8_t *)&v6, 0xCu);
  }
  int v5 = +[PLAssetAdjustmentOptions assetAdjustmentOptionsForRevertingToOriginal];
  [(PLManagedAsset *)self setAdjustments:0 options:v5];
}

- (id)availableUnadjustedCloudResourcesForPhotos
{
  return [(PLManagedAsset *)self _availableCloudResourcesForPhotosRequireUnadjusted:1 allowPenultimate:0];
}

- (id)availableAdjustedCloudResourcesForPhotos:(BOOL)a3
{
  return [(PLManagedAsset *)self _availableCloudResourcesForPhotosRequireUnadjusted:0 allowPenultimate:a3];
}

- (id)_availableCloudResourcesForPhotosRequireUnadjusted:(BOOL)a3 allowPenultimate:(BOOL)a4
{
  BOOL v19 = a4;
  BOOL v4 = a3;
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if (_availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__onceToken != -1) {
    dispatch_once(&_availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__onceToken, &__block_literal_global_952);
  }
  id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v7 = (id)_availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__photoTypes;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        uint64_t v13 = [v12 integerValue];
        if (v4)
        {
          id v21 = 0;
          BOOL v14 = [(PLManagedAsset *)self _isMasterResourceAvailableForResourceType:v13 outResource:&v21];
          id v15 = v21;
          if (v14) {
            goto LABEL_16;
          }
        }
        else
        {
          id v20 = 0;
          BOOL v16 = [(PLManagedAsset *)self _isAdjustedResourceAvailableForResourceType:v13 outResource:&v20];
          id v15 = v20;
          if (v16 && ([v12 integerValue] != 15 || v19)) {
LABEL_16:
          }
            [v6 addObject:v15];
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v9);
  }

  return v6;
}

void __86__PLManagedAsset__availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate___block_invoke()
{
  uint64_t v0 = (void *)_availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__photoTypes;
  _availableCloudResourcesForPhotosRequireUnadjusted_allowPenultimate__photoTypes = (uint64_t)&unk_1EEBF16D0;
}

- (BOOL)isResourceAvailableForResourceType:(unint64_t)a3
{
  return [(PLManagedAsset *)self _isResourceAvailableForResourceType:a3 outResource:0];
}

- (BOOL)_isResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4
{
  if (-[PLManagedAsset _isAdjustedResourceAvailableForResourceType:outResource:](self, "_isAdjustedResourceAvailableForResourceType:outResource:"))
  {
    return 1;
  }
  return [(PLManagedAsset *)self _isMasterResourceAvailableForResourceType:a3 outResource:a4];
}

- (BOOL)_isAdjustedResourceAvailableForResourceType:(unint64_t)a3
{
  return [(PLManagedAsset *)self _isAdjustedResourceAvailableForResourceType:a3 outResource:0];
}

- (BOOL)_isAdjustedResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4
{
  int v5 = [(PLManagedAsset *)self assetResourceForCPLType:a3];
  id v6 = v5;
  if (a4) {
    *a4 = v5;
  }

  return v6 != 0;
}

- (BOOL)_isMasterResourceAvailableForResourceType:(unint64_t)a3
{
  return [(PLManagedAsset *)self _isMasterResourceAvailableForResourceType:a3 outResource:0];
}

- (BOOL)_isMasterResourceAvailableForResourceType:(unint64_t)a3 outResource:(id *)a4
{
  id v7 = [(PLManagedAsset *)self master];
  if (!v7)
  {
    uint64_t v8 = 0;
    if (!a4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v8 = [(PLManagedAsset *)self masterResourceForCPLType:a3];
  if (a4) {
LABEL_3:
  }
    *a4 = v8;
LABEL_4:

  return v8 != 0;
}

- (BOOL)shouldUseNonAdjustedVideo
{
  uint64_t v6 = 0;
  id v7 = &v6;
  uint64_t v8 = 0x2020000000;
  char v9 = 0;
  char v9 = ![(PLManagedAsset *)self hasAdjustments];
  if (!*((unsigned char *)v7 + 24) && [(PLManagedAsset *)self isDefaultAdjustedSlomo])
  {
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 3221225472;
    v5[2] = __43__PLManagedAsset_shouldUseNonAdjustedVideo__block_invoke;
    v5[3] = &unk_1E586EC70;
    v5[4] = &v6;
    [(PLManagedAsset *)self synchronouslyFetchAdjustmentDataWithCompletionHandler:v5];
  }
  if (!*((unsigned char *)v7 + 24)
    && [(PLManagedAsset *)self isPhotoIris]
    && [(PLManagedAsset *)self hasAdjustments]
    && [(PLManagedAsset *)self videoCpVisibilityState] == 2
    && ![(PLManagedAsset *)self deferredProcessingNeeded])
  {
    *((unsigned char *)v7 + 24) = 1;
  }
  char v3 = *((unsigned char *)v7 + 24);
  _Block_object_dispose(&v6, 8);
  return v3;
}

uint64_t __43__PLManagedAsset_shouldUseNonAdjustedVideo__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = [MEMORY[0x1E4F8CE18] isRecognizedSlowMotionFormatWithIdentifier:a2 version:a3];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

- (id)unadjustedDerivativeImageURLs
{
  char v3 = [MEMORY[0x1E4F1CA80] set];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __47__PLManagedAsset_unadjustedDerivativeImageURLs__block_invoke;
  void v13[3] = &unk_1E5865620;
  id v4 = v3;
  id v14 = v4;
  int v5 = (void (**)(void, void, void))MEMORY[0x19F38D650](v13);
  uint64_t v6 = [(PLManagedAsset *)self masterThumbnailFileURLIfLocal];
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v6);

  id v7 = [(PLManagedAsset *)self fileURLForNonAdjustedMediumThumbnailFile];
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v7);

  uint64_t v8 = [(PLManagedAsset *)self fileURLForNonAdjustedLargeThumbnailFile];
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v8);

  char v9 = [(PLManagedAsset *)self pathForNonAdjustedLargeSizeImageFile];
  ((void (**)(void, void *, void))v5)[2](v5, v9, 0);

  uint64_t v10 = [(PLManagedAsset *)self pathForNonAdjustedFullsizeImageFile];
  ((void (**)(void, void *, void))v5)[2](v5, v10, 0);

  id v11 = v4;
  return v11;
}

void __47__PLManagedAsset_unadjustedDerivativeImageURLs__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  if ([v7 length])
  {
    int v5 = *(void **)(a1 + 32);
    uint64_t v6 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v7 isDirectory:a3];
    objc_msgSend(v5, "pl_addObjectIfNotNil:", v6);
  }
}

- (id)adjustedFileURLs
{
  char v3 = [MEMORY[0x1E4F1CA80] set];
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  v24[2] = __34__PLManagedAsset_adjustedFileURLs__block_invoke;
  v24[3] = &unk_1E5865620;
  id v4 = v3;
  id v25 = v4;
  int v5 = (void (**)(void, void, void))MEMORY[0x19F38D650](v24);
  uint64_t v6 = [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
  ((void (**)(void, void *, void))v5)[2](v5, v6, 0);

  id v7 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
  ((void (**)(void, void *, void))v5)[2](v5, v7, 0);

  uint64_t v8 = [(PLManagedAsset *)self pathForSubstandardFullsizeRenderImageFile];
  ((void (**)(void, void *, void))v5)[2](v5, v8, 0);

  char v9 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
  ((void (**)(void, void *, void))v5)[2](v5, v9, 0);

  uint64_t v10 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
  ((void (**)(void, void *, void))v5)[2](v5, v10, 0);

  id v11 = [(PLManagedAsset *)self pathForAdjustmentFile];
  ((void (**)(void, void *, void))v5)[2](v5, v11, 0);

  id v12 = [(PLManagedAsset *)self pathForAdjustmentDataFile];
  ((void (**)(void, void *, void))v5)[2](v5, v12, 0);

  uint64_t v13 = [(PLManagedAsset *)self pathForAdjustedLargeSizeImageFile];
  ((void (**)(void, void *, void))v5)[2](v5, v13, 0);

  id v14 = [(PLManagedAsset *)self pathForAsyncAdjustedRenderPreviewImageFile];
  ((void (**)(void, void *, void))v5)[2](v5, v14, 0);

  id v15 = [(PLManagedAsset *)self fileURLForAdjustedLargeThumbnailFile];
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v15);

  BOOL v16 = [(PLManagedAsset *)self fileURLForAdjustedMediumThumbnailFile];
  objc_msgSend(v4, "pl_addObjectIfNotNil:", v16);

  id v17 = [(PLManagedAsset *)self pathForAdjustedLargeVideoFile];
  ((void (**)(void, void *, void))v5)[2](v5, v17, 0);

  uint64_t v18 = [(PLManagedAsset *)self pathForAdjustedMediumVideoFile];
  ((void (**)(void, void *, void))v5)[2](v5, v18, 0);

  BOOL v19 = [(PLManagedAsset *)self pathForAdjustedMediumHDRVideoFile];
  ((void (**)(void, void *, void))v5)[2](v5, v19, 0);

  id v20 = [(PLManagedAsset *)self pathForAdjustedSmallVideoFile];
  ((void (**)(void, void *, void))v5)[2](v5, v20, 0);

  id v21 = [(PLManagedAsset *)self pathForAdjustmentSecondaryDataFile];
  ((void (**)(void, void *, void))v5)[2](v5, v21, 0);

  id v22 = v4;
  return v22;
}

void __34__PLManagedAsset_adjustedFileURLs__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  if ([v7 length])
  {
    int v5 = *(void **)(a1 + 32);
    uint64_t v6 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v7 isDirectory:a3];
    objc_msgSend(v5, "pl_addObjectIfNotNil:", v6);
  }
}

- (NSSet)allFileURLs
{
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  char v3 = [(PLManagedAsset *)self sidecars];
  id v4 = objc_msgSend(MEMORY[0x1E4F1CA80], "setWithCapacity:", objc_msgSend(v3, "count") + 1);
  v76[0] = MEMORY[0x1E4F143A8];
  v76[1] = 3221225472;
  v76[2] = __29__PLManagedAsset_allFileURLs__block_invoke;
  v76[3] = &unk_1E5865620;
  id v5 = v4;
  id v77 = v5;
  uint64_t v6 = (void (**)(void, void, void))MEMORY[0x19F38D650](v76);
  if (![(PLManagedAsset *)self isReferencedAsset])
  {
    id v7 = [(PLManagedAsset *)self filename];
    uint64_t v8 = [v7 length];

    if (v8)
    {
      char v9 = [(PLManagedAsset *)self pathForOriginalFile];
      ((void (**)(void, void *, void))v6)[2](v6, v9, 0);
    }
    long long v74 = 0u;
    long long v75 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    id v10 = v3;
    uint64_t v11 = [v10 countByEnumeratingWithState:&v72 objects:v82 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)v73;
      do
      {
        uint64_t v14 = 0;
        do
        {
          if (*(void *)v73 != v13) {
            objc_enumerationMutation(v10);
          }
          id v15 = [*(id *)(*((void *)&v72 + 1) + 8 * v14) fileURL];
          if (v15) {
            [v5 addObject:v15];
          }

          ++v14;
        }
        while (v12 != v14);
        uint64_t v12 = [v10 countByEnumeratingWithState:&v72 objects:v82 count:16];
      }
      while (v12);
    }

    BOOL v16 = [(PLManagedAsset *)self pathForVideoComplementFile];
    ((void (**)(void, void *, void))v6)[2](v6, v16, 0);

    id v17 = [(PLManagedAsset *)self pathForSpatialOverCaptureContentFile];
    ((void (**)(void, void *, void))v6)[2](v6, v17, 0);

    uint64_t v18 = [(PLManagedAsset *)self pathForVideoComplementSpatialOverCaptureContentFile];
    ((void (**)(void, void *, void))v6)[2](v6, v18, 0);

    BOOL v19 = [(PLManagedAsset *)self pathForOriginalAdjustmentFile];
    ((void (**)(void, void *, void))v6)[2](v6, v19, 0);
  }
  id v20 = [(PLManagedAsset *)self fileURLForNonAdjustedMediumThumbnailFile];
  objc_msgSend(v5, "pl_addObjectIfNotNil:", v20);

  id v21 = [(PLManagedAsset *)self fileURLForNonAdjustedLargeThumbnailFile];
  objc_msgSend(v5, "pl_addObjectIfNotNil:", v21);

  id v22 = [(PLManagedAsset *)self pathForNonAdjustedLargeSizeImageFile];
  ((void (**)(void, void *, void))v6)[2](v6, v22, 0);

  long long v23 = [(PLManagedAsset *)self pathForNonAdjustedFullsizeImageFile];
  ((void (**)(void, void *, void))v6)[2](v6, v23, 0);

  if ([(PLManagedAsset *)self isCloudSharedAsset])
  {
    int v24 = 3;
    do
    {
      id v25 = [(PLManagedAsset *)self cloudSharedAssetPathForPlaceholderKind:(__int16)v24];
      unsigned int v26 = (unsigned __int16)v24;
      ((void (**)(void, void *, void))v6)[2](v6, v25, 0);

      ++v24;
    }
    while (v26 < 9);
  }
  uint64_t v27 = [(PLManagedAsset *)self pathForNonAdjustedMediumVideoFile];
  ((void (**)(void, void *, void))v6)[2](v6, v27, 0);

  uint64_t v28 = [(PLManagedAsset *)self pathForNonAdjustedMediumHDRVideoFile];
  ((void (**)(void, void *, void))v6)[2](v6, v28, 0);

  uint64_t v29 = [(PLManagedAsset *)self pathForNonAdjustedSmallVideoFile];
  ((void (**)(void, void *, void))v6)[2](v6, v29, 0);

  uint64_t v30 = [(PLManagedAsset *)self fileURLForThumbnailFile];
  objc_msgSend(v5, "pl_addObjectIfNotNil:", v30);

  uint64_t v31 = [(PLManagedAsset *)self pathForMutationsDirectory];
  if (v31)
  {
    char v32 = [(PLManagedObject *)self pathManager];
    int v33 = [v32 photoDirectoryWithType:9];
    int v34 = [v33 hasPrefix:v31];

    if (v34)
    {
      id v35 = PLBackendGetLog();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        char v36 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)buf = 138543618;
        id v79 = v36;
        __int16 v80 = 2112;
        id v81 = v31;
        _os_log_impl(&dword_19B3C7000, v35, OS_LOG_TYPE_ERROR, "Asset %{public}@ has incorrect mutation directory %@, skip removing the directory.", buf, 0x16u);
      }
    }
    else
    {
      id v35 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v31 isDirectory:1];
      objc_msgSend(v5, "pl_addObjectIfNotNil:", v35);
    }
  }
  id v37 = [(PLManagedObject *)self pathManager];
  int v38 = [v37 isUBF];

  if (v38 && [(PLManagedAsset *)self hasAdjustments])
  {
    os_log_type_t v39 = [(PLManagedAsset *)self adjustedFileURLs];
    [v5 unionSet:v39];
  }
  uint32_t v40 = [(PLManagedAsset *)self pathForLegacySlalomRegionsArchive];
  ((void (**)(void, void *, void))v6)[2](v6, v40, 0);

  id v41 = [(PLManagedAsset *)self pathForDiagnosticFile];
  ((void (**)(void, void *, void))v6)[2](v6, v41, 0);

  int v42 = [(PLManagedAsset *)self pathForDeferredProcessingPreviewFile];
  ((void (**)(void, void *, void))v6)[2](v6, v42, 0);

  uint64_t v43 = [(PLManagedAsset *)self pathForCameraMetadataFile];
  ((void (**)(void, void *, void))v6)[2](v6, v43, 0);

  char v44 = [(PLManagedAsset *)self pathForDeferredVideoComplementFile];
  ((void (**)(void, void *, void))v6)[2](v6, v44, 0);

  uint64_t v45 = [(PLManagedAsset *)self pathForSpatialOverCaptureDiagnosticFile];
  ((void (**)(void, void *, void))v6)[2](v6, v45, 0);

  uint64_t v46 = [(PLManagedAsset *)self pathForReframeDiagnosticDirectory];
  ((void (**)(void, void *, uint64_t))v6)[2](v6, v46, 1);

  char v47 = [(PLManagedAsset *)self pathForCameraMetadataDiagnosticFile];
  ((void (**)(void, void *, void))v6)[2](v6, v47, 0);

  unint64_t v48 = [(PLManagedAsset *)self pathForCameraSpatialOverCaptureMetadataDiagnosticFile];
  ((void (**)(void, void *, void))v6)[2](v6, v48, 0);

  uint64_t v49 = [(PLManagedAsset *)self pathForOriginalVideoComplementDiagnosticFile];
  ((void (**)(void, void *, void))v6)[2](v6, v49, 0);

  id v50 = [(PLManagedObject *)self pathManager];
  int v51 = [v50 isDCIM];

  if (v51 && [(PLManagedAsset *)self isFinderSyncedAsset])
  {
    uint64_t v52 = [(PLManagedObject *)self pathManager];
    uint64_t v53 = [v52 iTunesSyncedFaceDataDirectory];
    unint64_t v54 = [(PLManagedAsset *)self uuid];
    uint64_t v55 = [v53 stringByAppendingPathComponent:v54];
    [v55 stringByAppendingPathExtension:@"plist"];
    id v71 = v31;
    char v57 = v56 = v3;

    ((void (**)(void, void *, void))v6)[2](v6, v57, 0);
    char v3 = v56;
    uint64_t v31 = v71;
  }
  id v58 = [(PLManagedAsset *)self pathForLocalVideoKeyFrame];
  ((void (**)(void, void *, void))v6)[2](v6, v58, 0);

  id v59 = [(PLManagedObject *)self pathManager];
  uint64_t v60 = [(PLManagedAsset *)self uuid];
  uint64_t v61 = [v59 URLForPartialVideoDirectoryWithAssetUUID:v60];
  id v62 = [v61 path];
  ((void (**)(void, void *, uint64_t))v6)[2](v6, v62, 1);

  unint64_t v63 = [(PLManagedAsset *)self pathForWallpaperComputeResourcesFile];
  ((void (**)(void, void *, void))v6)[2](v6, v63, 0);

  BOOL v64 = [(PLManagedAsset *)self pathForComputeSyncWrapperFile];
  ((void (**)(void, void *, void))v6)[2](v6, v64, 0);

  BOOL v65 = [(PLManagedAsset *)self pathForComputeSyncMediaAnalysisPayloadFile];
  ((void (**)(void, void *, void))v6)[2](v6, v65, 0);

  uint64_t v66 = [(PLManagedAsset *)self pathForGenerativePlaygroundFaceResourcesFile];
  ((void (**)(void, void *, void))v6)[2](v6, v66, 0);

  uint64_t v67 = [(PLManagedObject *)self pathManager];
  LODWORD(v60) = [v67 isDCIM];

  if (v60)
  {
    uint64_t v68 = [(PLManagedAsset *)self pathForComputeDirectory];
    ((void (**)(void, void *, uint64_t))v6)[2](v6, v68, 1);
  }
  id v69 = (NSSet *)v5;

  return v69;
}

void __29__PLManagedAsset_allFileURLs__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  if ([v7 length])
  {
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v7 isDirectory:a3];
    objc_msgSend(v5, "pl_addObjectIfNotNil:", v6);
  }
}

- (NSSet)filePathsWithoutThumbs
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  char v3 = [(PLManagedAsset *)self sidecars];
  id v4 = objc_msgSend(MEMORY[0x1E4F1CA80], "setWithCapacity:", objc_msgSend(v3, "count") + 1);
  id v5 = [(PLManagedAsset *)self pathForOriginalFile];
  if (v5) {
    [v4 addObject:v5];
  }
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = v3;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v16 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * i), "fileURL", (void)v15);
        uint64_t v12 = v11;
        if (v11)
        {
          uint64_t v13 = [v11 path];
          [v4 addObject:v13];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v8);
  }

  return (NSSet *)v4;
}

- (NSString)pathForComputeDirectory
{
  char v3 = [(PLManagedAsset *)self directory];
  id v4 = [(PLManagedAsset *)self filename];
  id v5 = [(PLManagedObject *)self pathManager];
  id v6 = [v5 assetPathForComputeDirectoryWithDirectory:v3 filename:v4];

  return (NSString *)v6;
}

- (NSString)pathForAdjustmentDirectory
{
  id v2 = [(PLManagedAsset *)self pathForMutationsDirectory];
  char v3 = +[PLManagedAsset pathForAdjustmentDirectoryWithMutationsDirectory:v2];

  return (NSString *)v3;
}

- (id)pathForMutationsDirectory
{
  char v3 = [(PLManagedAsset *)self directory];
  id v4 = [(PLManagedAsset *)self filename];
  id v5 = [(PLManagedObject *)self pathManager];
  id v6 = [v5 assetPathForMutationsDirectoryWithDirectory:v3 filename:v4];

  return v6;
}

- (BOOL)isSavedPhotosAsset
{
  char v3 = [(PLManagedObject *)self pathManager];
  char v4 = [v3 isUBF];

  if (v4) {
    return 1;
  }
  pl_dispatch_once();
  id v6 = [(PLManagedAsset *)self mainFileURL];
  uint64_t v7 = [v6 path];

  if (v7) {
    BOOL v5 = objc_msgSend((id)isSavedPhotosAsset_savedPhotosDirectoryRegEx, "numberOfMatchesInString:options:range:", v7, 0, 0, objc_msgSend(v7, "length")) == 1;
  }
  else {
    BOOL v5 = 1;
  }

  return v5;
}

void __36__PLManagedAsset_isSavedPhotosAsset__block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F28FD8]) initWithPattern:@"[1-9][0-9][0-9]APPLE" options:0 error:0];
  uint64_t v1 = (void *)isSavedPhotosAsset_savedPhotosDirectoryRegEx;
  isSavedPhotosAsset_savedPhotosDirectoryRegEx = v0;
}

- (BOOL)couldBeStoredInDCIM
{
  [MEMORY[0x1E4F8BA10] maskForCouldBeStoredInDCIM];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (id)originalVideoComplementUniformTypeIdentifier
{
  if (![(PLManagedAsset *)self isPhotoIris])
  {
    long long v16 = [MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"PLManagedAsset.m", 8090, @"Requires a live photo asset but type/subtype are %d/%d", (int)-[PLManagedAsset kind](self, "kind"), (int)-[PLManagedAsset kindSubtype](self, "kindSubtype"));
  }
  char v4 = [(PLManagedObject *)self photoLibrary];
  int v5 = [v4 isCloudPhotoLibraryEnabled];

  if (v5)
  {
    id v17 = 0;
    BOOL v6 = [(PLManagedAsset *)self _isResourceAvailableForResourceType:18 outResource:&v17];
    id v7 = v17;
    uint64_t v8 = v7;
    uint64_t v9 = 0;
    if (v6)
    {
      id v10 = [v7 uniformTypeIdentifier];
      uint64_t v9 = [v10 identifier];
    }
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x1E4F8CDF8];
    uint64_t v12 = [(PLManagedAsset *)self pathForVideoComplementFile];
    uint64_t v13 = [v12 pathExtension];
    uint64_t v14 = [v11 typeWithFilenameExtension:v13];
    uint64_t v9 = [v14 identifier];
  }
  return v9;
}

- (NSString)originalUniformTypeIdentifier
{
  v16[1] = *MEMORY[0x1E4F143B8];
  char v3 = [(PLManagedAsset *)self master];

  if (v3)
  {
    char v4 = [(PLManagedAsset *)self master];
    int v5 = [v4 uniformTypeIdentifier];

    goto LABEL_9;
  }
  if (![(PLManagedAsset *)self hasAdjustments])
  {
    int v5 = [(PLManagedAsset *)self uniformTypeIdentifier];
LABEL_9:
    id v7 = 0;
    if (v5) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  if ([(PLManagedAsset *)self kind]) {
    goto LABEL_11;
  }
  uint64_t v6 = [(PLManagedAsset *)self pathForOriginalFile];
  if (!v6) {
    goto LABEL_11;
  }
  id v7 = (void *)v6;
  uint64_t v15 = *MEMORY[0x1E4F2FF08];
  v16[0] = MEMORY[0x1E4F1CC28];
  CFDictionaryRef v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v16 forKeys:&v15 count:1];
  CFURLRef v9 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v7 isDirectory:0];
  id v10 = CGImageSourceCreateWithURL(v9, v8);

  if (v10)
  {
    int v5 = CGImageSourceGetType(v10);
    CFRelease(v10);
  }
  else
  {
    int v5 = 0;
  }

  if (v5) {
    goto LABEL_13;
  }
LABEL_10:
  if (!v7)
  {
LABEL_11:
    id v7 = [(PLManagedAsset *)self pathForOriginalFile];
  }
  uint64_t v11 = (void *)MEMORY[0x1E4F8CDF8];
  uint64_t v12 = [v7 pathExtension];
  uint64_t v13 = [v11 typeWithFilenameExtension:v12];
  int v5 = [v13 identifier];

LABEL_13:
  return (NSString *)v5;
}

- (void)updateAssetKindFromUniformTypeIdentifier
{
  char v3 = [(PLManagedAsset *)self uniformTypeIdentifier];
  uint64_t v4 = +[PLManagedAsset assetTypeFromUniformTypeIdentifier:v3];

  [(PLManagedAsset *)self updateAssetKindAndPlaybackStyleIfNeededWithKind:v4];
}

- (void)updateAssetKindAndPlaybackStyleIfNeededWithKind:(signed __int16)a3
{
  uint64_t v3 = a3;
  if ([(PLManagedAsset *)self kind] != a3)
  {
    [(PLManagedAsset *)self setKind:v3];
    if (![(PLManagedAsset *)self playbackVariation])
    {
      uint64_t v5 = objc_msgSend((id)objc_opt_class(), "defaultPlaybackStyleFromAssetType:subtype:playbackVariation:", v3, 0, -[PLManagedAsset playbackVariation](self, "playbackVariation"));
      [(PLManagedAsset *)self setPlaybackStyle:v5];
    }
  }
}

- (id)nonDynamicOriginalUTI
{
  uint64_t v3 = [(PLManagedAsset *)self mainFileURL];
  uint64_t v4 = [v3 path];
  uint64_t v5 = [v4 pathExtension];

  if (+[PLManagedAsset isKnownFileExtension:v5])
  {
    uint64_t v6 = +[PLManagedAsset uniformTypeIdentifierFromPathExtension:v5 assetType:[(PLManagedAsset *)self kind]];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

- (void)setUniformTypeIdentifierFromOriginalFile
{
  id v3 = [(PLManagedAsset *)self nonDynamicOriginalUTI];
  [(PLManagedAsset *)self setUniformTypeIdentifier:v3];
}

- (void)setUniformTypeIdentifierFromPathExtension:(id)a3
{
  id v4 = a3;
  id v5 = +[PLManagedAsset uniformTypeIdentifierFromPathExtension:v4 assetType:[(PLManagedAsset *)self kind]];

  [(PLManagedAsset *)self setUniformTypeIdentifier:v5];
}

- (BOOL)isScreenRecording
{
  if ([(PLManagedAsset *)self kindSubtype] == 103) {
    return 1;
  }
  if ([(PLManagedAsset *)self kind] != 1) {
    return 0;
  }
  id v4 = [(PLManagedAsset *)self originalFilename];
  BOOL v5 = +[PLManagedAsset isScreenRecordingFileName:v4];

  return v5;
}

- (BOOL)_isPartOfAvalancheWithKind:(unsigned __int16)a3
{
  int v3 = a3;
  if ([(PLManagedAsset *)self avalancheKind] != a3) {
    return 0;
  }
  switch(v3)
  {
    case 2:
      BOOL v5 = [(PLManagedAsset *)self avalancheUUID];
      BOOL v7 = v5 == 0;
      goto LABEL_10;
    case 1:
      BOOL v5 = [(PLManagedAsset *)self avalancheUUID];
      if (!v5)
      {
        BOOL v6 = 0;
        goto LABEL_15;
      }
      BOOL v7 = [(PLManagedAsset *)self avalanchePickType] == 0;
LABEL_10:
      BOOL v6 = !v7;
      goto LABEL_15;
    case 0:
      BOOL v5 = [(PLManagedAsset *)self avalancheUUID];
      BOOL v6 = v5 == 0;
LABEL_15:

      return v6;
  }
  return 1;
}

- (BOOL)isPartOfBurst
{
  return [(PLManagedAsset *)self _isPartOfAvalancheWithKind:1];
}

- (BOOL)isOriginalRAW
{
  int v3 = [(PLManagedAsset *)self originalFilename];
  id v4 = [v3 pathExtension];

  BOOL v5 = +[PLManagedAsset uniformTypeIdentifierFromPathExtension:v4 assetType:[(PLManagedAsset *)self kind]];
  BOOL v6 = [MEMORY[0x1E4F8CDF8] typeWithIdentifier:v5];
  char v7 = [v6 conformsToType:*MEMORY[0x1E4F44498]];

  return v7;
}

- (BOOL)isRAW
{
  id v2 = (void *)MEMORY[0x1E4F8CDF8];
  int v3 = [(PLManagedAsset *)self uniformTypeIdentifier];
  id v4 = [v2 typeWithIdentifier:v3];
  char v5 = [v4 conformsToType:*MEMORY[0x1E4F44498]];

  return v5;
}

- (BOOL)isPrimaryImageFormat
{
  int v3 = objc_opt_class();
  id v4 = [(PLManagedAsset *)self uniformTypeIdentifier];
  LOBYTE(v3) = [v3 isPrimaryImageFormatForUTI:v4];

  return (char)v3;
}

- (BOOL)isHEIF
{
  id v2 = (void *)MEMORY[0x1E4F8CDF8];
  int v3 = [(PLManagedAsset *)self uniformTypeIdentifier];
  id v4 = [v2 typeWithIdentifier:v3];
  char v5 = [v4 conformsToType:*MEMORY[0x1E4F44568]];

  return v5;
}

- (BOOL)isJPEG
{
  id v2 = (void *)MEMORY[0x1E4F8CDF8];
  int v3 = [(PLManagedAsset *)self uniformTypeIdentifier];
  id v4 = [v2 typeWithIdentifier:v3];
  char v5 = [v4 isEqual:*MEMORY[0x1E4F44410]];

  return v5;
}

- (BOOL)hasDeferredProcessingPreviewFile
{
  int v2 = [(PLManagedAsset *)self deferredProcessingNeeded];
  return v2 == 10 || (v2 & 0xFFFFFFFB) == 1;
}

- (BOOL)hasOutstandingDeferredCaptureProcessing
{
  int v2 = [(PLManagedAsset *)self deferredProcessingNeeded];
  return v2 == 6 || (v2 & 0xFFFFFFFB) == 1;
}

- (void)reportSharedAssetIncrementalChange:(id)a3
{
  id v5 = a3;
  if ([v5 collectionChangeType])
  {
    id v17 = [MEMORY[0x1E4F28B00] currentHandler];
    [v17 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:7768 description:@"only supports private/shared transitions against the shared state or suggested-by-photos state for an asset being updated (not inserted or deleted)"];
  }
  BOOL v6 = [(PLManagedAsset *)self moment];
  [v6 reportSharedAssetContainerIncrementalChange:v5 forAllAssetsCountKey:@"assetsCount"];

  char v7 = (void *)[objc_alloc(MEMORY[0x1E4F1CA80]) initWithCapacity:6];
  uint64_t v18 = MEMORY[0x1E4F143A8];
  uint64_t v19 = 3221225472;
  uint64_t v20 = __53__PLManagedAsset_reportSharedAssetIncrementalChange___block_invoke;
  id v21 = &unk_1E58655F8;
  id v22 = v5;
  id v23 = v7;
  id v8 = v7;
  id v9 = v5;
  id v10 = (void (**)(void, void, void))MEMORY[0x19F38D650](&v18);
  uint64_t v11 = [(PLManagedAsset *)self highlightBeingAssets];
  ((void (**)(void, void *, __CFString *))v10)[2](v10, v11, @"assetsCount");

  uint64_t v12 = [(PLManagedAsset *)self highlightBeingSummaryAssets];
  ((void (**)(void, void *, __CFString *))v10)[2](v10, v12, @"summaryCount");

  uint64_t v13 = [(PLManagedAsset *)self highlightBeingExtendedAssets];
  ((void (**)(void, void *, __CFString *))v10)[2](v10, v13, @"extendedCount");

  uint64_t v14 = [(PLManagedAsset *)self dayGroupHighlightBeingAssets];
  ((void (**)(void, void *, __CFString *))v10)[2](v10, v14, @"dayGroupAssetsCount");

  uint64_t v15 = [(PLManagedAsset *)self dayGroupHighlightBeingSummaryAssets];
  ((void (**)(void, void *, __CFString *))v10)[2](v10, v15, @"dayGroupSummaryAssetsCount");

  long long v16 = [(PLManagedAsset *)self dayGroupHighlightBeingExtendedAssets];
  ((void (**)(void, void *, __CFString *))v10)[2](v10, v16, @"dayGroupExtendedAssetsCount");
}

void __53__PLManagedAsset_reportSharedAssetIncrementalChange___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id v6 = *(id *)(a1 + 32);
  if (v8)
  {
    if ([*(id *)(a1 + 32) hasSuggestionChanges])
    {
      if ([*(id *)(a1 + 40) containsObject:v8])
      {
        char v7 = (void *)[*(id *)(a1 + 32) copy];

        [v7 setSuggestionStateChange:0];
        id v6 = v7;
      }
      else
      {
        [*(id *)(a1 + 40) addObject:v8];
      }
    }
    [v8 reportSharedAssetContainerIncrementalChange:v6 forAllAssetsCountKey:v5];
  }
}

- (void)removeLibraryScopeAndContributors
{
  [(PLManagedAsset *)self setLibraryScope:0];
  [(PLManagedAsset *)self setLibraryScopeContributors:0];
}

- (void)setLibraryScope:(id)a3 withContributors:(id)a4
{
  id v6 = a4;
  [(PLManagedAsset *)self setLibraryScope:a3];
  [(PLManagedAsset *)self setLibraryScopeContributors:v6];
}

- (void)setLibraryScopeWithCurrentUserAsContributor:(id)a3
{
  id v6 = a3;
  id v4 = [v6 currentUserParticipant];
  if (v4)
  {
    id v5 = [MEMORY[0x1E4F1CAD0] setWithObject:v4];
    [(PLManagedAsset *)self setLibraryScope:v6 withContributors:v5];
  }
  else
  {
    [(PLManagedAsset *)self setLibraryScope:v6 withContributors:0];
  }
}

- (void)setLibraryScopeContributors:(id)a3
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self managedObjectContext];
  unsigned int v26 = v4;
  id v6 = (void *)[v4 mutableCopy];
  id v25 = self;
  char v7 = [(PLManagedAsset *)self libraryScopeAssetContributors];
  id v8 = (void *)[v7 mutableCopy];

  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v9 = (void *)[v8 copy];
  uint64_t v10 = [v9 countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v32 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        uint64_t v15 = [v14 participant];
        int v16 = [v6 containsObject:v15];

        if (v16)
        {
          id v17 = [v14 participant];
          [v6 removeObject:v17];
        }
        else
        {
          [v5 deleteObject:v14];
          [v8 removeObject:v14];
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v31 objects:v36 count:16];
    }
    while (v11);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v18 = v6;
  uint64_t v19 = [v18 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)v28;
    do
    {
      for (uint64_t j = 0; j != v20; ++j)
      {
        if (*(void *)v28 != v21) {
          objc_enumerationMutation(v18);
        }
        uint64_t v23 = *(void *)(*((void *)&v27 + 1) + 8 * j);
        int v24 = +[PLManagedObject insertInManagedObjectContext:v5];
        [v24 setParticipant:v23];
        [v8 addObject:v24];
      }
      uint64_t v20 = [v18 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }
    while (v20);
  }

  [(PLManagedAsset *)v25 setLibraryScopeAssetContributors:v8];
}

- (NSSet)libraryScopeContributors
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v2 = [(PLManagedAsset *)self libraryScopeAssetContributors];
  int v3 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA80]), "initWithCapacity:", objc_msgSend(v2, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = v2;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * i), "participant", (void)v11);
        [v3 addObject:v9];
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }

  return (NSSet *)v3;
}

- (BOOL)hasNonSlomoAdjustments
{
  if ([(PLManagedAsset *)self hasAdjustments])
  {
    int v3 = (void *)MEMORY[0x1E4F8CE18];
    id v4 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v5 = [v4 unmanagedAdjustment];
    uint64_t v6 = [v5 adjustmentFormatIdentifier];
    uint64_t v7 = [(PLManagedAsset *)self additionalAttributes];
    id v8 = [v7 unmanagedAdjustment];
    id v9 = [v8 adjustmentFormatVersion];
    int v10 = [v3 isRecognizedSlowMotionFormatWithIdentifier:v6 version:v9] ^ 1;
  }
  else
  {
    LOBYTE(v10) = 0;
  }
  return v10;
}

- (BOOL)hasUnrenderedAsyncAdjustments
{
  int v3 = [(PLManagedAsset *)self deferredProcessingNeeded] - 1;
  BOOL result = 1;
  switch(v3)
  {
    case 0:
      if (![(PLManagedAsset *)self hasAdjustments]) {
        goto LABEL_4;
      }
      BOOL result = 1;
      break;
    case 1:
    case 8:
      return result;
    case 9:
      BOOL result = [(PLManagedAsset *)self hasAdjustments];
      break;
    default:
LABEL_4:
      BOOL result = 0;
      break;
  }
  return result;
}

- (BOOL)hasJustBeenHidden
{
  int v2 = [(PLManagedAsset *)self changedValues];
  int v3 = [v2 objectForKeyedSubscript:@"visibilityState"];

  if (v3) {
    BOOL v4 = [v3 shortValue] != 0;
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

- (BOOL)hasJustBeenShown
{
  int v2 = [(PLManagedAsset *)self changedValues];
  int v3 = [v2 objectForKeyedSubscript:@"visibilityState"];

  if (v3) {
    BOOL v4 = [v3 shortValue] == 0;
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

- (void)_updatePackedBadgeAttributesIfNeeded:(int)a3
{
  uint64_t v3 = *(void *)&a3;
  if ([(PLManagedAsset *)self packedBadgeAttributes] != a3)
  {
    [(PLManagedAsset *)self setPackedBadgeAttributes:v3];
  }
}

- (void)setSpatialAudioControlBadgeAttribute:(unsigned __int8)a3
{
  uint64_t v4 = [(PLManagedAsset *)self packedBadgeAttributes] & 0xFFFFFFBF | ((a3 & 1) << 6);
  [(PLManagedAsset *)self _updatePackedBadgeAttributesIfNeeded:v4];
}

- (unsigned)spatialAudioControlBadgeAttribute
{
  return ([(PLManagedAsset *)self packedBadgeAttributes] >> 6) & 1;
}

- (void)setPlaybackControlBadgeAttribute:(unsigned __int8)a3
{
  uint64_t v4 = [(PLManagedAsset *)self packedBadgeAttributes] & 0xFFFFFFDF | (32 * (a3 & 1u));
  [(PLManagedAsset *)self _updatePackedBadgeAttributesIfNeeded:v4];
}

- (unsigned)playbackControlBadgeAttribute
{
  return ([(PLManagedAsset *)self packedBadgeAttributes] >> 5) & 1;
}

- (void)setEditableDepthBadgeAttribute:(unsigned __int8)a3
{
  uint64_t v4 = [(PLManagedAsset *)self packedBadgeAttributes] & 0xFFFFFFEF | (16 * (a3 & 1u));
  [(PLManagedAsset *)self _updatePackedBadgeAttributesIfNeeded:v4];
}

- (unsigned)editableDepthBadgeAttribute
{
  return ([(PLManagedAsset *)self packedBadgeAttributes] >> 4) & 1;
}

- (void)setProResBadgeAttribute:(unsigned __int8)a3
{
  uint64_t v4 = [(PLManagedAsset *)self packedBadgeAttributes] & 0xFFFFFFF7 | (8 * (a3 & 1u));
  [(PLManagedAsset *)self _updatePackedBadgeAttributesIfNeeded:v4];
}

- (unsigned)proResBadgeAttribute
{
  return ([(PLManagedAsset *)self packedBadgeAttributes] >> 3) & 1;
}

- (void)setKeywordBadgeAttribute:(unsigned __int8)a3
{
  uint64_t v4 = [(PLManagedAsset *)self packedBadgeAttributes] & 0xFFFFFFFE | a3 & 1;
  [(PLManagedAsset *)self _updatePackedBadgeAttributesIfNeeded:v4];
}

- (unsigned)keywordBadgeAttribute
{
  return [(PLManagedAsset *)self packedBadgeAttributes] & 1;
}

- (void)recalculateRAWBadgeAttribute
{
  if ([(PLManagedAsset *)self isRAWPlusJPEG])
  {
    uint64_t v3 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v4 = [v3 originalResourceChoice];
    unint64_t v5 = [v4 unsignedIntegerValue];

    unsigned int v6 = 0x2020102u >> (8 * v5);
    if (v5 >= 4) {
      LOBYTE(v6) = 0;
    }
  }
  else if ([(PLManagedAsset *)self isRAWOnly])
  {
    LOBYTE(v6) = 3;
  }
  else
  {
    LOBYTE(v6) = 0;
  }
  [(PLManagedAsset *)self setRAWBadgeAttribute:v6];
}

- (void)setRAWBadgeAttribute:(unsigned __int8)a3
{
  uint64_t v4 = [(PLManagedAsset *)self packedBadgeAttributes] & 0xFFFFFFF9 | (2 * (a3 & 3u));
  [(PLManagedAsset *)self _updatePackedBadgeAttributesIfNeeded:v4];
}

- (unsigned)RAWBadgeAttribute
{
  return ([(PLManagedAsset *)self packedBadgeAttributes] >> 1) & 3;
}

- (void)setIsSmartStyleableWithMetadata:(id)a3
{
  id v4 = a3;
  unint64_t v5 = [v4 smartStyleIsReversible];
  int v6 = [v5 BOOLValue];

  uint64_t v7 = [v4 smartStyleExpectingReversibility];
  int v8 = [v7 BOOLValue];

  id v9 = [(PLManagedAsset *)self importedByBundleIdentifier];
  int v10 = [v9 isEqualToString:@"com.apple.camera"];

  if (v6)
  {
    long long v11 = [(PLManagedAsset *)self extendedAttributes];
    long long v12 = [v11 sleetCast];
    char v13 = (int)[v12 intValue] < 1 ? 1 : v10;

    if ((v13 & 1) == 0)
    {
      if (![v4 containsCustomStylesMetadataBlob])
      {
        uint64_t v15 = PLPhotoKitIngestGetLog();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)id v17 = 0;
          _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_DEFAULT, "Missing smart style custom metadata.", v17, 2u);
        }
        goto LABEL_14;
      }
      goto LABEL_12;
    }
  }
  if ((v8 & v10) != 1
    || [(PLManagedAsset *)self deferredProcessingNeeded] != 1)
  {
    if ((v6 & v10) != 1) {
      goto LABEL_15;
    }
LABEL_12:
    long long v14 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v15 = v14;
    uint64_t v16 = 1;
    goto LABEL_13;
  }
  long long v14 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v15 = v14;
  uint64_t v16 = 2;
LABEL_13:
  [v14 setSleetIsReversible:v16];
LABEL_14:

LABEL_15:
}

- (BOOL)isTimelapsePlaceholder
{
  if ([(PLManagedAsset *)self kindSubtype] == 102
    && ([(PLManagedAsset *)self duration], v3 == 0.0))
  {
    id v4 = [(PLManagedAsset *)self pathForOriginalFile];
    unint64_t v5 = [MEMORY[0x1E4F28CB8] defaultManager];
    int v6 = [v5 fileExistsAtPath:v4] ^ 1;
  }
  else
  {
    LOBYTE(v6) = 0;
  }
  return v6;
}

- (BOOL)isIncludedInCloudFeeds
{
  [MEMORY[0x1E4F8BA10] maskForCloudSharedAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isIncludedInMoments
{
  [MEMORY[0x1E4F8BA10] maskForAssetsIncludedInMoments];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isCloudPlaceholder
{
  return ([(PLManagedAsset *)self cloudPlaceholderKind] & 0xFFFFFFFE) == 2;
}

- (BOOL)canPerformDeleteOperation
{
  return [(PLManagedAsset *)self canPerformEditOperation:4];
}

- (BOOL)canPerformEditOperation:(unint64_t)a3
{
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (a3 == 32)
  {
    [MEMORY[0x1E4F8BA10] maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders];
    [(PLManagedAsset *)self savedAssetType];
    int v7 = PLValidatedSavedAssetTypeApplies();
    *((unsigned char *)v23 + 24) = v7;
    if (v7)
    {
      if (![(PLManagedAsset *)self hasLibraryScope])
      {
        int v6 = [(id)objc_opt_class() _isLibraryScopeExiting:self] ^ 1;
        int v8 = v23;
        goto LABEL_13;
      }
LABEL_9:
      int v8 = v23;
      int v6 = 1;
LABEL_13:
      *((unsigned char *)v8 + 24) = v6;
      goto LABEL_14;
    }
LABEL_11:
    int v6 = 0;
    goto LABEL_14;
  }
  if (a3 != 64)
  {
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke;
    _OWORD v21[3] = &unk_1E5873ED8;
    v21[4] = self;
    v21[5] = &v22;
    v21[6] = a3;
    id v9 = (void *)MEMORY[0x19F38D650](v21, a2);
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    v20[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke_2;
    v20[3] = &unk_1E5875840;
    v20[4] = &v22;
    int v10 = (void *)MEMORY[0x19F38D650](v20);
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    void v19[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke_3;
    v19[3] = &unk_1E5867710;
    v19[4] = &v22;
    v19[5] = a3;
    long long v11 = (void *)MEMORY[0x19F38D650](v19);
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke_4;
    v18[3] = &unk_1E5873ED8;
    v18[5] = &v22;
    v18[6] = a3;
    v18[4] = self;
    long long v12 = (void *)MEMORY[0x19F38D650](v18);
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    v17[2] = __42__PLManagedAsset_canPerformEditOperation___block_invoke_5;
    v17[3] = &unk_1E5867710;
    v17[4] = &v22;
    v17[5] = a3;
    char v13 = (void *)MEMORY[0x19F38D650](v17);
    objc_msgSend(MEMORY[0x1E4F8BA10], "executeBlockForSavedAssetType:unknown:photoBooth:photoStream:camera:cloudShared:cameraConnectionKit:cloudPhotoLibrary:wallpaper_UNUSED:momentShared:placeholder:referenced:alternate:guest:companionSynced:recovered:legacyImport:unrecognized:", -[PLManagedAsset savedAssetType](self, "savedAssetType"), v9, v9, v11, v9, v12, v9, v9, v10, v9, v13, v9, v9, v11, v9, v11,
      v10,
      v10);
    int v6 = *((unsigned __int8 *)v23 + 24);

    goto LABEL_14;
  }
  [MEMORY[0x1E4F8BA10] maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders];
  [(PLManagedAsset *)self savedAssetType];
  int v5 = PLValidatedSavedAssetTypeApplies();
  *((unsigned char *)v23 + 24) = v5;
  if (!v5) {
    goto LABEL_11;
  }
  if (![(PLManagedAsset *)self hasLibraryScope]) {
    goto LABEL_9;
  }
  if ([(id)objc_opt_class() _isLibraryScopeExiting:self])
  {
    int v6 = 0;
    *((unsigned char *)v23 + 24) = 0;
  }
  else
  {
    uint64_t v15 = [(id)objc_opt_class() predicateToIncludeOnlyContentContributedByCurrentUser];
    char v16 = [v15 evaluateWithObject:self];
    *((unsigned char *)v23 + 24) = v16;

    int v6 = *((unsigned __int8 *)v23 + 24);
  }
LABEL_14:
  _Block_object_dispose(&v22, 8);
  return v6 != 0;
}

uint64_t __42__PLManagedAsset_canPerformEditOperation___block_invoke(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 48) == 8
    && (BOOL result = [*(id *)(result + 32) hasLibraryScope], result))
  {
    BOOL result = [(id)objc_opt_class() _isLibraryScopeExiting:*(void *)(v1 + 32)];
    if (result)
    {
      BOOL v2 = 0;
    }
    else
    {
      BOOL result = [*(id *)(v1 + 32) shareState];
      BOOL v2 = result == 1;
    }
    *(unsigned char *)(*(void *)(*(void *)(v1 + 40) + 8) + 24) = v2;
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(v1 + 40) + 8) + 24) = 1;
  }
  return result;
}

uint64_t __42__PLManagedAsset_canPerformEditOperation___block_invoke_2(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return result;
}

uint64_t __42__PLManagedAsset_canPerformEditOperation___block_invoke_3(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(result + 40) == 4;
  return result;
}

void __42__PLManagedAsset_canPerformEditOperation___block_invoke_4(uint64_t a1)
{
  if (*(void *)(a1 + 48) == 4)
  {
    if ([*(id *)(a1 + 32) cloudIsMyAsset])
    {
      char v2 = 1;
    }
    else
    {
      double v3 = [*(id *)(a1 + 32) cloudShareAlbum];
      char v2 = [v3 isOwnedCloudSharedAlbum];
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v2;
  }
}

uint64_t __42__PLManagedAsset_canPerformEditOperation___block_invoke_5(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 40);
  BOOL v3 = v1 == 4 || v1 == 16;
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  return result;
}

- (BOOL)isAudio
{
  return [(PLManagedAsset *)self kind] == 2;
}

- (BOOL)_hasScreenshotDimensions
{
  pl_dispatch_once();
  [(PLManagedAsset *)self originalWidth];
  [(PLManagedAsset *)self originalHeight];
  BOOL v3 = DCIM_NSValueFromCGSize();
  id v4 = DCIM_NSValueFromCGSize();
  if ([(id)_hasScreenshotDimensions_screenDimensions containsObject:v3]) {
    char v5 = 1;
  }
  else {
    char v5 = [(id)_hasScreenshotDimensions_screenDimensions containsObject:v4];
  }

  return v5;
}

void __42__PLManagedAsset__hasScreenshotDimensions__block_invoke()
{
  id v6 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:20];
  int v0 = 1;
  while (2)
  {
    switch(v0)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
        goto LABEL_4;
      case 10:
        uint64_t v1 = DCIM_NSValueFromCGSize();
        [v6 addObject:v1];

LABEL_4:
        char v2 = DCIM_NSValueFromCGSize();
        [v6 addObject:v2];

        goto LABEL_5;
      case 20:
        BOOL v3 = DCIM_NSValueFromCGSize();
        [v6 addObject:v3];

        goto LABEL_8;
      default:
LABEL_5:
        if (++v0 != 21) {
          continue;
        }
LABEL_8:
        uint64_t v4 = [objc_alloc(MEMORY[0x1E4F1CAD0]) initWithArray:v6];
        char v5 = (void *)_hasScreenshotDimensions_screenDimensions;
        _hasScreenshotDimensions_screenDimensions = v4;

        return;
    }
  }
}

- (BOOL)_hasScreenshotMetadataWithMetadata:(id)a3
{
  return [a3 isScreenshot];
}

- (BOOL)hasScreenshotMetadata
{
  char v2 = [(PLManagedAsset *)self imageProperties];
  if (v2)
  {
    objc_opt_class();
    BOOL v3 = [v2 objectForKey:*MEMORY[0x1E4F2F800]];
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;

    if (v5)
    {
      objc_opt_class();
      id v6 = [v5 objectForKey:*MEMORY[0x1E4F2F958]];
      if (objc_opt_isKindOfClass()) {
        int v7 = v6;
      }
      else {
        int v7 = 0;
      }
      id v8 = v7;

      char v9 = [v8 isEqualToString:@"Screenshot"];
    }
    else
    {
      char v9 = 0;
    }
  }
  else
  {
    char v9 = 0;
  }

  return v9;
}

- (BOOL)_hasPanoramaDimensions
{
  int64_t v3 = [(PLManagedAsset *)self height];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = [(PLManagedAsset *)self width];
    double v6 = (double)v5 / (double)v4;
    if (v6 > 2.0 || v6 < 0.5)
    {
      if (v5 <= v4) {
        int v8 = v4;
      }
      else {
        int v8 = v5;
      }
      if (v5 >= v4) {
        int v9 = v4;
      }
      else {
        int v9 = v5;
      }
      int v10 = v8 << 16;
      LOBYTE(v3) = v9 << 16 > 52428800 && v10 < 1966080000;
    }
    else
    {
      LOBYTE(v3) = 0;
    }
  }
  return v3;
}

- (BOOL)isUnknown
{
  return [(PLManagedAsset *)self kind] == 3;
}

- (BOOL)isPanorama
{
  BOOL v3 = [(PLManagedAsset *)self isPhoto];
  if (v3) {
    LOBYTE(v3) = [(PLManagedAsset *)self kindSubtype] == 1;
  }
  return v3;
}

- (BOOL)isColorAware
{
  if ([(PLManagedAsset *)self isPhoto]) {
    return 1;
  }
  return [(PLManagedAsset *)self isPhotoIris];
}

- (BOOL)isPhoto
{
  return [(PLManagedAsset *)self kind] == 0;
}

- (BOOL)isHDVideo
{
  BOOL v3 = [(PLManagedAsset *)self isVideo];
  if (v3)
  {
    uint64_t v4 = [(PLManagedAsset *)self width];
    uint64_t v5 = [(PLManagedAsset *)self height];
    LOBYTE(v3) = v4 >= 720 && v5 > 1279 || v4 > 1279 && v5 > 719;
  }
  return v3;
}

- (BOOL)isStreamedVideo
{
  BOOL v3 = [(PLManagedAsset *)self isVideo];
  if (v3) {
    LOBYTE(v3) = [(PLManagedAsset *)self kindSubtype] == 100;
  }
  return v3;
}

- (BOOL)isLoopingVideo
{
  return [(PLManagedAsset *)self playbackStyle] == 5;
}

- (BOOL)isVideo
{
  return [(PLManagedAsset *)self kind] == 1;
}

- (PLCloudSharedAlbumProtocol)cloudShareAlbum
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  char v2 = [(PLManagedAsset *)self albums];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = 0;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v2);
        }
        int v8 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if ([v8 isCloudSharedAlbum])
        {
          id v9 = v8;

          uint64_t v5 = v9;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v4);
  }
  else
  {
    uint64_t v5 = 0;
  }

  return (PLCloudSharedAlbumProtocol *)v5;
}

- (BOOL)isCloudPhotoLibraryAsset
{
  [MEMORY[0x1E4F8BA10] maskForCloudPhotoLibraryAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (int64_t)cloudSharedAssetPlaceholderKind
{
  if ([(PLManagedAsset *)self isCloudSharedAsset]) {
    return (int)[(PLManagedAsset *)self cloudPlaceholderKind];
  }
  else {
    return 0;
  }
}

- (BOOL)isVisibleForSocialGroupKeyAssetFetch
{
  if (([(PLManagedAsset *)self hidden] & 1) != 0
    || [(PLManagedAsset *)self trashedState]
    || ![(PLManagedAsset *)self avalanchePickTypeIsVisible])
  {
    int v3 = 0;
  }
  else
  {
    [MEMORY[0x1E4F8BA10] maskForSocialGroupKeyAssetFetch];
    [(PLManagedAsset *)self savedAssetType];
    int v3 = PLValidatedSavedAssetTypeApplies();
  }
  uint64_t v4 = [(PLManagedObject *)self photoLibrary];
  char v5 = [v4 isCloudPhotoLibraryEnabled];

  if (v5)
  {
    if (!v3) {
      return 0;
    }
    return ![(PLManagedAsset *)self isPhotoStreamPhoto];
  }
  if (v3)
  {
    [(PLManagedAsset *)self setVisibilityState:0];
    return ![(PLManagedAsset *)self isPhotoStreamPhoto];
  }
  return 0;
}

- (BOOL)isReferencedAsset
{
  [MEMORY[0x1E4F8BA10] maskForReferencedAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isCameraConnectionKitAsset
{
  [MEMORY[0x1E4F8BA10] maskForCameraConnectionKitAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isMomentSharedAsset
{
  [MEMORY[0x1E4F8BA10] maskForMomentSharedAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isCloudSharedAsset
{
  [MEMORY[0x1E4F8BA10] maskForCloudSharedAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isFinderSyncedAsset
{
  [MEMORY[0x1E4F8BA10] maskForFinderSyncedAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isPlaceholderAsset
{
  [MEMORY[0x1E4F8BA10] maskForPlaceholderAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (BOOL)isPhotoStreamPhoto
{
  [MEMORY[0x1E4F8BA10] maskForPhotoStreamAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (CLLocationCoordinate2D)gpsCoordinate
{
  char v2 = [(PLManagedAsset *)self location];
  int v3 = v2;
  double v5 = *MEMORY[0x1E4F1E750];
  double v4 = *(double *)(MEMORY[0x1E4F1E750] + 8);
  if (v2)
  {
    [v2 coordinate];
    double v7 = v6;
    double v9 = v8;
    if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:"))
    {
      double v4 = v9;
      double v5 = v7;
    }
  }

  double v10 = v5;
  double v11 = v4;
  result.double longitude = v11;
  result.double latitude = v10;
  return result;
}

- (id)managedAssetForPhotoLibrary:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedObject *)self photoLibrary];

  if (v5 == v4) {
    double v6 = self;
  }
  else {
    double v6 = 0;
  }
  return v6;
}

- (void)setImageSize:(CGSize)a3
{
  double height = a3.height;
  [(PLManagedAsset *)self setWidth:vcvtpd_s64_f64(a3.width)];
  unint64_t v5 = vcvtpd_s64_f64(height);
  [(PLManagedAsset *)self setHeight:v5];
}

- (CGSize)imageSize
{
  double v3 = (double)[(PLManagedAsset *)self width];
  double v4 = (double)[(PLManagedAsset *)self height];
  double v5 = v3;
  result.double height = v4;
  result.double width = v5;
  return result;
}

- (unsigned)shareState
{
  double v3 = [(PLManagedAsset *)self libraryScope];

  if (!v3) {
    return 0;
  }
  double v4 = [(id)objc_opt_class() predicateToIncludeOnlyContentContributedByCurrentUser];
  int v5 = [v4 evaluateWithObject:self];

  if (v5) {
    return 1;
  }
  else {
    return 2;
  }
}

- (id)imageDataForThumbGenerationAndIfNeededRAWUTI:(id *)a3 isPreviewSource:(BOOL *)a4
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  double v7 = [MEMORY[0x1E4F28CB8] defaultManager];
  if ([(PLManagedAsset *)self hasUnrenderedAsyncAdjustments])
  {
    double v8 = [(PLManagedAsset *)self pathForAsyncAdjustedRenderPreviewImageFile];
    int v9 = [v7 fileExistsAtPath:v8];
    BOOL v10 = v9;
    if (v9) {
      id v11 = v8;
    }
    else {
      id v11 = 0;
    }
  }
  else
  {
    BOOL v10 = 0;
    id v11 = 0;
  }
  BOOL v12 = [(PLManagedAsset *)self isPhoto];
  if (!v11 && v12)
  {
    if ([(PLManagedAsset *)self hasAdjustments])
    {
      id v11 = [(PLManagedAsset *)self pathForBestAvailableFullsizeRenderImageFileOutIsSubstandard:0];
      long long v13 = PLThumbnailsGetLog();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        long long v14 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)buf = 138412546;
        id v31 = v11;
        __int16 v32 = 2114;
        id v33 = v14;
        _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_DEBUG, "Best available file for thumbnail generation is %@ for uuid %{public}@", buf, 0x16u);
      }
    }
    else
    {
      long long v13 = [(PLManagedAsset *)self pathForLargeThumbnailFile];
      if ([v7 fileExistsAtPath:v13])
      {
        long long v13 = v13;
        id v11 = v13;
      }
      else
      {
        uint64_t v15 = [(PLManagedAsset *)self pathForFullsizeImageFile];
        if ([v7 fileExistsAtPath:v15])
        {
          id v11 = v15;
        }
        else
        {
          uint64_t v16 = [(PLManagedAsset *)self pathForOriginalFile];
          if ([v7 fileExistsAtPath:v16])
          {
            long long v29 = v16;
            id v11 = v16;
            id v17 = [v11 pathExtension];
            uint64_t v18 = +[PLManagedAsset uniformTypeIdentifierFromPathExtension:v17 assetType:[(PLManagedAsset *)self kind]];

            uint64_t v19 = (void *)v18;
            if (v18)
            {
              [MEMORY[0x1E4F442D8] typeWithIdentifier:v18];
              uint64_t v20 = v28 = (id)v18;
              int v21 = [v20 conformsToType:*MEMORY[0x1E4F44498]];

              uint64_t v19 = v28;
              if (v21)
              {
                if (a3) {
                  *a3 = v28;
                }
                uint64_t v22 = PLBackendGetLog();
                if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138412546;
                  id v31 = v11;
                  __int16 v32 = 2112;
                  id v33 = v15;
                  _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_DEFAULT, "Rebuilding thumbs from RAW file (%@) because fullsize image is missing (%@). This might cause assetsd to jetsam.", buf, 0x16u);
                }
              }
            }

            uint64_t v16 = v29;
          }
          else
          {
            id v11 = 0;
          }
        }
      }
    }
  }
  if (v11) {
    goto LABEL_55;
  }
  if (![(PLManagedAsset *)self isVideo])
  {
    id v11 = 0;
    uint64_t v23 = 0;
    if ([v7 fileExistsAtPath:0]) {
      goto LABEL_46;
    }
  }
  id v11 = [(PLManagedAsset *)self pathForLargeThumbnailFile];
  if (([v7 fileExistsAtPath:v11] & 1) == 0)
  {
    uint64_t v24 = [(PLManagedAsset *)self pathForMediumThumbnailFile];

    if (([v7 fileExistsAtPath:v24] & 1) != 0
      || (![(PLManagedAsset *)self isPhoto] || [(PLManagedAsset *)self hasAdjustments])
      && (![(PLManagedAsset *)self isVideo]
       || [(PLManagedAsset *)self hasAdjustments]
       && ![(PLManagedAsset *)self isDefaultAdjustedSlomo]))
    {
      id v11 = v24;
    }
    else
    {
      id v11 = [(PLManagedAsset *)self pathForOriginalFile];
    }
  }
  if (v11)
  {
LABEL_55:
    if ([v7 fileExistsAtPath:v11])
    {
      char v25 = PLThumbnailsGetLog();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      {
        unsigned int v26 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)buf = 138543618;
        id v31 = v26;
        __int16 v32 = 2112;
        id v33 = v11;
        _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_DEBUG, "Rebuilding thumbnail for %{public}@ with %@", buf, 0x16u);
      }
      uint64_t v23 = [MEMORY[0x1E4F1C9B8] dataWithContentsOfFile:v11 options:1 error:0];
LABEL_46:
      if (!a4) {
        goto LABEL_48;
      }
      goto LABEL_47;
    }
  }
  uint64_t v23 = 0;
  if (a4) {
LABEL_47:
  }
    *a4 = v10;
LABEL_48:

  return v23;
}

- (void)setFaceRegionsFromImageMetadata:(CGImageMetadata *)a3
{
  if (a3)
  {
    PLGetFaceRegionsFromImageMetadata(a3);
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    double v4 = PLManagedAssetEncodeFaceRegions(v5);
    [(PLManagedAsset *)self setFaceRegions:v4];
  }
}

- (void)setFaceRegionsFromCGImageProperties:(id)a3
{
  PLGetFaceRegionsFromCGImageProperties(a3);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  double v4 = PLManagedAssetEncodeFaceRegions(v5);
  [(PLManagedAsset *)self setFaceRegions:v4];
}

- (BOOL)setVideoInfoFromFileAtURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 overwriteOriginalProperties:(BOOL)a6
{
  BOOL v6 = a6;
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  unint64_t v11 = (unint64_t)a3;
  unint64_t v12 = (unint64_t)a4;
  id v13 = a5;
  if (v11 | v12)
  {
    id v34 = 0;
    long long v14 = [(PLManagedAsset *)self _effectiveMetadataForMainFileURL:v11 mainFileMetadata:v12 fullSizeRenderURL:v13 shouldCache:0 error:&v34];
    id v15 = v34;
    BOOL v16 = v14 != 0;
    if (v14)
    {
      id v17 = (void *)MEMORY[0x19F38D3B0]();
      [(PLManagedAsset *)self updateVideoAttributesFromMetadata:v14 overwriteOriginalProperties:v6];
      if (v6)
      {
        if (v13)
        {
          __int16 v32 = [MEMORY[0x1E4F28B00] currentHandler];
          [v32 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:6843 description:@"Overwriting original properties should only happen when fullSizeRenderURL is nil"];
        }
        objc_msgSend(v14, "orientedPixelSize", v17);
        double v19 = v18;
        [(PLManagedAsset *)self setOriginalWidth:(uint64_t)v20];
        [(PLManagedAsset *)self setOriginalHeight:(uint64_t)v19];
        uint64_t v21 = [v14 gpsLocation];
        if (v21
          && (uint64_t v22 = (void *)v21,
              [v14 gpsLocation],
              uint64_t v23 = objc_claimAutoreleasedReturnValue(),
              [v23 coordinate],
              BOOL v24 = +[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:"),
              v23,
              v22,
              v24))
        {
          char v25 = [v14 gpsLocation];
          [(PLManagedAsset *)self setLocation:v25];
        }
        else
        {
          [(PLManagedAsset *)self setLocation:0];
        }
        long long v27 = [v14 originatingAssetIdentifier];
        if (v27)
        {
          id v28 = [(PLManagedAsset *)self additionalAttributes];
          [v28 setOriginatingAssetIdentifier:v27];
        }
        if (PLPlatformExtendedAttributesSupported()
          && ![(PLManagedAsset *)self isCloudSharedAsset])
        {
          [(PLManagedAsset *)self updateVideoExtendedAttributesFromMetadata:v14];
        }
        long long v29 = [v14 author];
        int v30 = [v29 isEqual:@"ReplayKitRecording"];

        if (v30) {
          [(PLManagedAsset *)self setKindSubtype:103];
        }

        id v17 = v33;
      }
    }
    else
    {
      unsigned int v26 = PLBackendGetLog();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v36 = v15;
        _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_ERROR, "Unable to load metadata with error: %@", buf, 0xCu);
      }
    }
  }
  else
  {
    BOOL v16 = 0;
  }

  return v16;
}

- (id)_effectiveMetadataForMainFileURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 shouldCache:(BOOL)a6 error:(id *)a7
{
  BOOL v8 = a6;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  if ([v14 isSyndicationOriginated])
  {
    id v16 = v14;
    id v17 = 0;
  }
  else
  {
    if (v15) {
      double v18 = 0;
    }
    else {
      double v18 = v14;
    }
    id v19 = v18;
    id v16 = v19;
    if (v19)
    {
      double v20 = [v19 fileURL];

      if (v20)
      {
        id v21 = 0;
        id v16 = v14;
        goto LABEL_24;
      }
    }
    aSelector = a2;
    char v44 = a7;
    if (v15) {
      uint64_t v22 = v15;
    }
    else {
      uint64_t v22 = v13;
    }
    id v23 = v22;
    if (v23)
    {
      id v24 = v23;
      id v25 = objc_alloc(MEMORY[0x1E4F8CC48]);
      unsigned int v26 = [(PLManagedObject *)self photoLibrary];
      long long v27 = [v26 libraryBundle];
      id v28 = [v27 timeZoneLookup];
      long long v29 = v25;
      id v23 = v24;
      uint64_t v30 = [v29 initWithMediaURL:v24 options:12 timeZoneLookup:v28 shouldCache:v8];

      id v16 = (id)v30;
    }
    if (v16)
    {
      id v17 = 0;
    }
    else
    {
      id v31 = PLMigrationGetLog();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      {
        __int16 v32 = NSStringFromSelector(aSelector);
        id v33 = [v23 path];
        *(_DWORD *)buf = 138412546;
        unint64_t v48 = v32;
        __int16 v49 = 2112;
        id v50 = v33;
        _os_log_impl(&dword_19B3C7000, v31, OS_LOG_TYPE_ERROR, "%@ Unable to get file metadata for '%@', skip updating asset attributes", buf, 0x16u);
      }
      aSelectora = (char *)MEMORY[0x1E4F28C58];
      uint64_t v34 = *MEMORY[0x1E4F8C500];
      uint64_t v45 = *MEMORY[0x1E4F28228];
      id v35 = NSString;
      id v36 = [v23 path];
      uint64_t v37 = [v35 stringWithFormat:@"Unable to load file metadata from path %@", v36];
      uint64_t v46 = v37;
      [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v46 forKeys:&v45 count:1];
      v39 = id v38 = v23;
      id v17 = [aSelectora errorWithDomain:v34 code:47020 userInfo:v39];

      id v23 = v38;
    }

    a7 = v44;
  }
  id v40 = v17;
  id v21 = v40;
  if (!v16)
  {
    if (a7)
    {
      id v21 = v40;
      id v16 = 0;
      *a7 = v21;
    }
    else
    {
      id v16 = 0;
    }
  }
LABEL_24:

  return v16;
}

- (id)_metadataFromMediaProperties:(id)a3 uniformTypeIdentifier:(id)a4 block:(id)a5
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  BOOL v10 = (void (**)(void))a5;
  objc_opt_class();
  unint64_t v11 = [(PLManagedAsset *)self managedObjectContext];
  if (objc_opt_isKindOfClass()) {
    unint64_t v12 = v11;
  }
  else {
    unint64_t v12 = 0;
  }
  id v13 = v12;

  id v14 = objc_msgSend(v13, "pl_libraryBundle");

  id v15 = [v14 timeZoneLookup];

  if (!v8) {
    goto LABEL_16;
  }
  int v16 = [(PLManagedAsset *)self kind];
  if ((v16 - 1) < 2)
  {
    id v19 = (void *)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithAVProxyData:v8 timeZoneLookup:v15];
    if (!v19) {
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  if (v16 == 3)
  {
    uint64_t v22 = PLBackendGetLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      int v31 = 67109120;
      LODWORD(v32) = [(PLManagedAsset *)self kind];
      _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_ERROR, "Unexpected asset kind: %d", (uint8_t *)&v31, 8u);
    }

LABEL_16:
    if (!v10)
    {
LABEL_30:
      double v20 = PLBackendGetLog();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
      {
        long long v29 = [(PLManagedAsset *)self uuid];
        int v31 = 138543362;
        __int16 v32 = v29;
        _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_DEBUG, "Failed to obtain media metadata for asset: %{public}@", (uint8_t *)&v31, 0xCu);
      }
      id v19 = 0;
      goto LABEL_33;
    }
    double v20 = v10[2](v10);
    int v23 = [(PLManagedAsset *)self kind];
    if ((v23 - 1) >= 2)
    {
      if (v23 == 3)
      {
        long long v27 = PLBackendGetLog();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        {
          int v28 = [(PLManagedAsset *)self kind];
          int v31 = 67109120;
          LODWORD(v32) = v28;
          _os_log_impl(&dword_19B3C7000, v27, OS_LOG_TYPE_ERROR, "Unexpected asset kind: %d", (uint8_t *)&v31, 8u);
        }
      }
      else if (!v23)
      {
        uint64_t v24 = [objc_alloc(MEMORY[0x1E4F8CC48]) initWithImageURL:v20 contentType:0 options:12 timeZoneLookup:v15 cacheImageSource:1 cacheImageData:0];
        goto LABEL_22;
      }
LABEL_29:

      goto LABEL_30;
    }
    uint64_t v24 = [objc_alloc(MEMORY[0x1E4F8CC48]) initWithAVURL:v20 options:12 timeZoneLookup:v15];
LABEL_22:
    id v19 = (void *)v24;
    if (v24)
    {
      id v25 = PLBackendGetLog();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      {
        unsigned int v26 = [(PLManagedAsset *)self uuid];
        int v31 = 138543362;
        __int16 v32 = v26;
        _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_DEBUG, "Metadata obtained from file url for asset: %{public}@", (uint8_t *)&v31, 0xCu);
      }
      goto LABEL_33;
    }
    goto LABEL_29;
  }
  if (v16) {
    goto LABEL_16;
  }
  id v17 = objc_alloc(MEMORY[0x1E4F8CC48]);
  double v18 = [MEMORY[0x1E4F8CDF8] typeWithIdentifier:v9];
  id v19 = (void *)[v17 initWithImageSourceProxyOrEncodedImagePropertyData:v8 contentType:v18 timeZoneLookup:v15];

  if (!v19) {
    goto LABEL_16;
  }
LABEL_11:
  double v20 = PLBackendGetLog();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
  {
    id v21 = [(PLManagedAsset *)self uuid];
    int v31 = 138543362;
    __int16 v32 = v21;
    _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_DEBUG, "Metadata obtained from mediaMetadata data for asset: %{public}@", (uint8_t *)&v31, 0xCu);
  }
LABEL_33:

  return v19;
}

- (id)fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:(id)a3
{
  id v4 = a3;
  if ([(PLManagedAsset *)self hasAdjustments])
  {
    id v5 = [(PLManagedAsset *)self uniformTypeIdentifier];
    uint64_t v12 = MEMORY[0x1E4F143A8];
    uint64_t v13 = 3221225472;
    id v14 = __93__PLManagedAsset_fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL___block_invoke;
    id v15 = &unk_1E58655A8;
    id v16 = v4;
    id v17 = self;
    BOOL v6 = [(PLManagedAsset *)self _metadataFromMediaProperties:0 uniformTypeIdentifier:v5 block:&v12];

    if (!v6)
    {
      double v7 = [(PLManagedAsset *)self additionalAttributes];
      id v8 = [v7 mediaMetadata];
      id v9 = [v8 data];

      BOOL v10 = [(PLManagedAsset *)self uniformTypeIdentifier];
      BOOL v6 = [(PLManagedAsset *)self _metadataFromMediaProperties:v9 uniformTypeIdentifier:v10 block:0];
    }
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

id __93__PLManagedAsset_fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL___block_invoke(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  if (!v2)
  {
    double v3 = (void *)MEMORY[0x1E4F1CB10];
    id v4 = [*(id *)(a1 + 40) pathForAdjustedFullsizeImageFile];
    id v2 = [v3 fileURLWithPath:v4 isDirectory:0];
  }
  return v2;
}

- (id)metadataFromMediaPropertiesOrOriginalResource
{
  double v3 = [(PLManagedAsset *)self master];
  id v4 = [v3 mediaMetadata];
  id v5 = [v4 data];

  BOOL v6 = [(PLManagedAsset *)self master];
  double v7 = [v6 uniformTypeIdentifier];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __63__PLManagedAsset_metadataFromMediaPropertiesOrOriginalResource__block_invoke;
  v10[3] = &unk_1E5865580;
  void v10[4] = self;
  id v8 = [(PLManagedAsset *)self _metadataFromMediaProperties:v5 uniformTypeIdentifier:v7 block:v10];

  return v8;
}

uint64_t __63__PLManagedAsset_metadataFromMediaPropertiesOrOriginalResource__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) mainFileURL];
}

- (void)updateVideoAttributesFromMetadata:(id)a3 overwriteOriginalProperties:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  if (v6)
  {
    id v23 = v6;
    double v7 = [v6 durationTimeInterval];
    [v7 doubleValue];
    double v9 = v8;

    [(PLManagedAsset *)self duration];
    if (vabdd_f64(v10, v9) > 0.00000011920929) {
      [(PLManagedAsset *)self setDuration:v9];
    }
    [v23 orientedPixelSize];
    double v12 = v11;
    double v14 = v13;
    if (v11 != (double)[(PLManagedAsset *)self width]) {
      [(PLManagedAsset *)self setWidth:(uint64_t)v12];
    }
    if (v14 != (double)[(PLManagedAsset *)self height]) {
      [(PLManagedAsset *)self setHeight:(uint64_t)v14];
    }
    unsigned __int16 v15 = [(PLManagedAsset *)self highFrameRateState];
    if ([v23 isSloMo])
    {
      if (v4)
      {
        unsigned __int16 v16 = v15 | 3;
        [(PLManagedAsset *)self setKindSubtype:101];
      }
      else
      {
        unsigned __int16 v16 = v15 | 2;
      }
    }
    else if (v15)
    {
      unsigned __int16 v16 = v15 & 0xFFFD;
    }
    else
    {
      unsigned __int16 v16 = v15;
    }
    if ([(PLManagedAsset *)self highFrameRateState] != v16) {
      [(PLManagedAsset *)self setHighFrameRateState:v16];
    }
    [(PLManagedAsset *)self setPlaybackControlBadgeAttributeFromMetadata:v23];
    if ([(PLManagedAsset *)self kindSubtype] != 102
      && [v23 isTimelapse])
    {
      [(PLManagedAsset *)self setKindSubtype:102];
    }
    if ([(PLManagedAsset *)self kindSubtype] != 104
      && [v23 isActionCam])
    {
      [(PLManagedAsset *)self setKindSubtype:104];
    }
    id v17 = [v23 playbackVariation];
    -[PLManagedAsset updatePlaybackVariationAndLoopingStyleFromVariation:](self, "updatePlaybackVariationAndLoopingStyleFromVariation:", (unsigned __int16)[v17 unsignedIntegerValue]);

    [(PLManagedAsset *)self updateSmartStyleVideoCastFromMetadata:v23];
    double v18 = [v23 montageString];
    if (v18)
    {
      id v19 = [(PLManagedAsset *)self additionalAttributes];
      [v19 setMontage:v18];
    }
    double v20 = [(PLManagedAsset *)self mediaGroupUUID];
    uint64_t v21 = [v20 length];

    if (!v21)
    {
      uint64_t v22 = [v23 livePhotoPairingIdentifier];
      if (v22) {
        [(PLManagedAsset *)self setMediaGroupUUID:v22];
      }
    }
    [(PLManagedAsset *)self setTimeExifTimestampStringFromMetadata:v23];
    [(PLManagedAsset *)self setSpatialTypeFromMetadata:v23];
    if ([v23 isHDR]) {
      [(PLManagedAsset *)self _setHDRTypeFromMetadata:v23];
    }
    if ([v23 isCinematicVideo]) {
      [(PLManagedAsset *)self setDepthTypeFromMetadata:v23];
    }
    [(PLManagedAsset *)self setSpatialAudioControlBadgeAttributeFromMetadata:v23];
    if ([v23 isProRes])
    {
      [(PLManagedAsset *)self setIsMagicCarpet:1];
      [(PLManagedAsset *)self setProResBadgeAttribute:1];
    }

    id v6 = v23;
  }
}

- (void)updateAudioExtendedAttributesFromMetadata:(id)a3
{
  id v31 = a3;
  BOOL v4 = [(PLManagedAsset *)self extendedAttributesCreateIfNeeded:1];
  if (v31)
  {
    id v5 = [v31 durationTimeInterval];
    [v5 doubleValue];
    double v7 = v6;

    double v8 = [v4 duration];
    [v8 doubleValue];
    double v10 = vabdd_f64(v9, v7);

    if (v10 > 2.22044605e-16)
    {
      double v11 = [NSNumber numberWithDouble:v7];
      [v4 setDuration:v11];
    }
    double v12 = [v31 audioSampleRate];
    [v12 doubleValue];
    double v14 = v13;

    unsigned __int16 v15 = [v4 sampleRate];
    [v15 doubleValue];
    double v17 = vabdd_f64(v16, v14);

    if (v17 > 2.22044605e-16)
    {
      double v18 = [NSNumber numberWithDouble:v14];
      [v4 setSampleRate:v18];
    }
    id v19 = [v31 audioTrackFormat];
    uint64_t v20 = [v19 unsignedIntegerValue];

    uint64_t v21 = [v4 trackFormat];
    uint64_t v22 = [v21 unsignedIntegerValue];

    if (v22 != v20)
    {
      id v23 = [NSNumber numberWithUnsignedInteger:v20];
      [v4 setTrackFormat:v23];
    }
    uint64_t v24 = [v31 audioDataRate];
    [v24 doubleValue];
    double v26 = v25;

    long long v27 = [v4 bitrate];
    [v27 doubleValue];
    double v29 = vabdd_f64(v28, v26);

    if (v29 > 2.22044605e-16)
    {
      uint64_t v30 = [NSNumber numberWithDouble:v14];
      [v4 setBitrate:v30];
    }
  }
}

- (void)updateVideoExtendedAttributesFromMetadata:(id)a3
{
  id v21 = a3;
  BOOL v4 = [(PLManagedAsset *)self extendedAttributesCreateIfNeeded:1];
  if (v21)
  {
    [(PLManagedAsset *)self _updateCoreExtendedAttributes:v4 fromMetadata:v21];
    id v5 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v21, "orientation"));
    [v4 setOrientation:v5];

    double v6 = [v21 durationTimeInterval];
    if (v6)
    {
      double v7 = [v4 duration];
      [v7 doubleValue];
      double v9 = v8;
      [v6 doubleValue];
      double v11 = vabdd_f64(v9, v10);

      if (v11 > 2.22044605e-16) {
        [v4 setDuration:v6];
      }
    }
    double v12 = [v21 nominalFrameRate];
    if (v12)
    {
      double v13 = [v4 fps];
      [v13 doubleValue];
      double v15 = v14;
      [v12 doubleValue];
      double v17 = vabdd_f64(v15, v16);

      if (v17 > 2.22044605e-16) {
        [v4 setFps:v12];
      }
    }
    double v18 = [v21 firstVideoTrackCodecString];
    id v19 = [v4 codec];
    char v20 = [v18 isEqualToString:v19];

    if ((v20 & 1) == 0) {
      [v4 setCodec:v18];
    }
  }
}

- (BOOL)setImageInfoFromImageMetadata:(id)a3 overwriteOriginalProperties:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  if (v6)
  {
    double v7 = (void *)MEMORY[0x19F38D3B0]();
    double v8 = [v6 cgImageProperties];
    [(PLManagedAsset *)self _setSizeAndOrientationFromMetadata:v6];
    uint64_t v9 = [v6 cgImageMetadata];
    if (v9)
    {
      [(PLManagedAsset *)self setFaceRegionsFromImageMetadata:v9];
      [(PLManagedAsset *)self revalidateFaceAreaPoints];
    }
    double v10 = [v6 contentType];
    double v11 = [v10 identifier];
    [(PLManagedAsset *)self setUniformTypeIdentifier:v11];

    if (v4)
    {
      [(PLManagedAsset *)self _setOriginalSizeAndOrientationFromMetadata:v6];
      if (v8) {
        [(PLManagedAsset *)self setThumbnailDataFromImageProperties:v8];
      }
      double v12 = [v6 gpsLocation];
      [(PLManagedAsset *)self setLocation:v12];

      [(PLManagedAsset *)self _setSavedAssetTypeFromMetadata:v6];
      [(PLManagedAsset *)self setKeywordsFromImageProperties:v8];
      [(PLManagedAsset *)self _setPhotoIrisPropertiesFromMetadata:v6];
      [(PLManagedAsset *)self updateKindSubtypeIfScreenshotWithMetadata:v6];
      [(PLManagedAsset *)self updatePanoramosityWithMetadata:v6];
      if (![(PLManagedAsset *)self isCloudSharedAsset]) {
        [(PLManagedAsset *)self setImageInfoFromOriginalImageMetadata:v6];
      }
      double v13 = (void *)MEMORY[0x1E4F8B980];
      double v14 = [(PLManagedAsset *)self pl_photoLibrary];
      double v15 = [v14 pathManager];
      double v16 = [v15 libraryURL];
      uint64_t v17 = [v13 wellKnownPhotoLibraryIdentifierForURL:v16];

      if (v17 != 3) {
        [(PLManagedAsset *)self _setBurstUuidFromMetadata:v6];
      }
      double v18 = [v6 originatingAssetIdentifier];
      if (v18)
      {
        id v19 = [(PLManagedAsset *)self additionalAttributes];
        [v19 setOriginatingAssetIdentifier:v18];
      }
    }
    else
    {
      [(PLManagedAsset *)self setDepthTypeFromMetadata:v6];
      [(PLManagedAsset *)self _setHDRGainFromMetadata:v6];
    }
  }

  return v6 != 0;
}

- (void)_setBurstUuidFromMetadata:(id)a3
{
  id v5 = a3;
  BOOL v4 = [(PLManagedAsset *)self avalancheUUID];
  if (v4)
  {
LABEL_2:

    goto LABEL_3;
  }
  [MEMORY[0x1E4F8BA10] maskForAvalancheSupportedAssets];
  [(PLManagedAsset *)self savedAssetType];
  if (PLValidatedSavedAssetTypeApplies())
  {
    BOOL v4 = [v5 burstUuid];
    if (v4)
    {
      [(PLManagedAsset *)self setAvalancheUUID:v4];
      [(PLManagedAsset *)self setAvalanchePickType:1];
      [(PLManagedAsset *)self setAvalancheKind:1];
      if (+[PLAvalanche shouldOnlyShowAvalanchePicks]) {
        [(PLManagedAsset *)self setVisibilityState:2];
      }
    }
    goto LABEL_2;
  }
LABEL_3:
}

- (void)setImageInfoFromOriginalImageMetadata:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    [(PLManagedAsset *)self setCameraCaptureDeviceFromMetadata:v4];
    [(PLManagedAsset *)self _setHDRTypeFromMetadata:v4];
    [(PLManagedAsset *)self _setColorSpaceNameFromMetadata:v4];
    [(PLManagedAsset *)self setDepthTypeFromMetadata:v4];
    [(PLManagedAsset *)self setEditableDepthBadgeAttributeFromMetadata:v4];
    [(PLManagedAsset *)self setSpatialTypeFromMetadata:v4];
    [(PLManagedAsset *)self updatePlaybackVariationAndStyleFromOriginalMetadata:v4];
    [(PLManagedAsset *)self _setHDRGainFromMetadata:v4];
    [(PLManagedAsset *)self _setSOCGroupIdentifierFromMetadata:v4];
    [(PLManagedAsset *)self setTimeExifTimestampStringFromMetadata:v4];
    [(PLManagedAsset *)self setCurrentSleetCastFromMetadata:v4];
    if (PLPlatformExtendedAttributesSupported()) {
      [(PLManagedAsset *)self updateImageExtendedAttributesFromMetadata:v4];
    }
  }
}

- (id)evaluateWhiteBalanceValueWithOriginalExifProperties:(id)a3
{
  id v3 = a3;
  id v4 = [v3 objectForKey:*MEMORY[0x1E4F2F970]];
  id v5 = v4;
  if (v4)
  {
    if (([v4 isEqualToNumber:&unk_1EEBED5D8] & 1) == 0)
    {
      uint64_t v6 = [v3 objectForKey:*MEMORY[0x1E4F2F8A8]];

      id v5 = (void *)v6;
      if (!v6)
      {
        double v7 = [v3 objectForKey:*MEMORY[0x1E4F2F570]];
        double v8 = v7;
        if (v7 && (unint64_t v9 = [v7 integerValue], v9 <= 0x15))
        {
          id v5 = [NSNumber numberWithUnsignedInteger:evaluateWhiteBalanceValueWithOriginalExifProperties__canonWhiteBalance[v9]];
        }
        else
        {
          id v5 = 0;
        }
      }
    }
  }

  return v5;
}

- (void)updateImageExtendedGenerativeAttributesFromMetadata:(id)a3
{
  id v7 = a3;
  id v4 = [(PLManagedAsset *)self extendedAttributesCreateIfNeeded:1];
  if (v7)
  {
    id v5 = [v7 generativeAIImageType];
    [v4 setGenerativeAIType:v5];

    uint64_t v6 = [v7 credit];
    [v4 setCredit:v6];
  }
  else
  {
    [v4 setGenerativeAIType:0];
    [v4 setCredit:0];
  }
}

- (void)updateImageExtendedAttributesFromMetadata:(id)a3
{
  id v26 = a3;
  id v4 = [(PLManagedAsset *)self extendedAttributesCreateIfNeeded:1];
  if (v26)
  {
    [(PLManagedAsset *)self _updateCoreExtendedAttributes:v4 fromMetadata:v26];
    id v5 = [v26 fNumber];
    [v4 setAperture:v5];

    uint64_t v6 = [v26 exposureBias];
    [v4 setExposureBias:v6];

    id v7 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v26, "flashFired"));
    [v4 setFlashFired:v7];

    double v8 = [v26 focalLength];
    [v4 setFocalLength:v8];

    unint64_t v9 = [v26 focalLengthIn35mm];
    [v4 setFocalLengthIn35mm:v9];

    double v10 = [v26 iso];
    [v4 setIso:v10];

    double v11 = [v26 lensModel];
    [v4 setLensModel:v11];

    double v12 = [v26 meteringMode];
    [v4 setMeteringMode:v12];

    double v13 = [v26 exposureTime];
    [v4 setShutterSpeed:v13];

    double v14 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v26, "orientation"));
    [v4 setOrientation:v14];

    double v15 = [v26 semanticStyleToneBias];
    [v4 setSlushSceneBias:v15];

    double v16 = [v26 semanticStyleWarmthBias];
    [v4 setSlushWarmthBias:v16];

    uint64_t v17 = [v26 semanticStyleRenderingVersion];
    [v4 setSlushVersion:v17];

    double v18 = [v26 semanticStylePreset];
    [v4 setSlushPreset:v18];

    id v19 = objc_msgSend(NSNumber, "numberWithShort:", objc_msgSend(v26, "smartStyleCast"));
    [v4 setSleetCast:v19];

    char v20 = [v26 smartStyleToneBias];
    [v4 setSleetToneBias:v20];

    id v21 = [v26 smartStyleColorBias];
    [v4 setSleetColorBias:v21];

    uint64_t v22 = [v26 smartStyleIntensity];
    [v4 setSleetIntensity:v22];

    id v23 = [v26 smartStyleRenderingVersion];
    [v4 setSleetRenderingVersion:v23];

    [(PLManagedAsset *)self setIsSmartStyleableWithMetadata:v26];
    uint64_t v24 = [v26 digitalZoomRatio];
    [v4 setDigitalZoomRatio:v24];

    [(PLManagedAsset *)self updateImageExtendedGenerativeAttributesFromMetadata:v26];
    double v25 = [v26 whiteBalance];
    if (v25) {
      [v4 setWhiteBalance:v25];
    }
  }
}

- (void)_updateCoreExtendedAttributes:(id)a3 fromMetadata:(id)a4
{
  id v30 = a3;
  id v6 = a4;
  if (!v30 || !v6) {
    goto LABEL_21;
  }
  __int16 v7 = [v6 creationDateSource];
  double v8 = [(PLManagedAsset *)self additionalAttributes];
  [v8 setDateCreatedSource:v7];

  uint64_t v9 = [v6 creationDateSource];
  if ((unint64_t)(v9 - 1) < 3)
  {
    double v10 = [v6 utcCreationDate];

    if (!v10)
    {
      [(PLManagedAsset *)self _updateCoreDateExtendedAttributes:v30 fromMetadata:0];
      double v14 = [(PLManagedAsset *)self additionalAttributes];
      [v14 setDateCreatedSource:0];

      goto LABEL_10;
    }
    double v11 = self;
    id v12 = v30;
    id v13 = v6;
    goto LABEL_8;
  }
  if (!v9)
  {
    double v11 = self;
    id v12 = v30;
    id v13 = 0;
LABEL_8:
    [(PLManagedAsset *)v11 _updateCoreDateExtendedAttributes:v12 fromMetadata:v13];
  }
LABEL_10:
  double v15 = [v6 cameraMake];
  double v16 = [v30 cameraMake];
  char v17 = [v15 isEqualToString:v16];

  if ((v17 & 1) == 0) {
    [v30 setCameraMake:v15];
  }
  double v18 = [v6 cameraModel];
  id v19 = [v30 cameraModel];
  char v20 = [v18 isEqualToString:v19];

  if ((v20 & 1) == 0) {
    [v30 setCameraModel:v18];
  }
  id v21 = [v6 lensModel];
  if (v21) {
    [v30 setLensModel:v21];
  }
  uint64_t v22 = [v6 focalLengthIn35mm];
  if (v22) {
    [v30 setFocalLengthIn35mm:v22];
  }
  id v23 = [v6 gpsLocation];
  uint64_t v24 = v23;
  if (v23)
  {
    double v25 = NSNumber;
    [v23 coordinate];
    id v26 = objc_msgSend(v25, "numberWithDouble:");
    [v30 setLatitude:v26];

    long long v27 = NSNumber;
    [v24 coordinate];
    double v29 = [v27 numberWithDouble:v28];
    [v30 setLongitude:v29];
  }
LABEL_21:
}

- (void)_updateCoreDateExtendedAttributes:(id)a3 fromMetadata:(id)a4
{
  id v5 = a4;
  id v6 = a3;
  __int16 v7 = [v5 utcCreationDate];
  [v6 setDateCreated:v7];

  double v8 = [v5 timeZoneName];
  [v6 setTimezoneName:v8];

  id v9 = [v5 timeZoneOffset];

  [v6 setTimezoneOffset:v9];
}

- (BOOL)updateExtendedAttributesWithMetadata:(id)a3 error:(id *)a4
{
  v34[1] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  if (!PLPlatformExtendedAttributesSupported())
  {
    BOOL v20 = 1;
    goto LABEL_20;
  }
  if ([(PLManagedAsset *)self kind] == 3)
  {
    __int16 v7 = NSString;
    double v8 = [(PLManagedAsset *)self uuid];
    id v9 = [v7 stringWithFormat:@"Unsupported asset kind for asset: %@", v8];

    double v10 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v11 = *MEMORY[0x1E4F8C500];
    uint64_t v27 = *MEMORY[0x1E4F28568];
    double v28 = v9;
    id v12 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v28 forKeys:&v27 count:1];
    id v13 = [v10 errorWithDomain:v11 code:46309 userInfo:v12];

    double v14 = PLBackendGetLog();
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      goto LABEL_17;
    }
    *(_DWORD *)buf = 138543362;
    __int16 v32 = v9;
    goto LABEL_16;
  }
  if (v6)
  {
    switch([(PLManagedAsset *)self kind])
    {
      case 0u:
        [(PLManagedAsset *)self updateImageExtendedAttributesFromMetadata:v6];
        break;
      case 1u:
        [(PLManagedAsset *)self updateVideoExtendedAttributesFromMetadata:v6];
        break;
      case 2u:
        [(PLManagedAsset *)self updateAudioExtendedAttributesFromMetadata:v6];
        break;
      case 3u:
        id v21 = NSString;
        uint64_t v22 = [(PLManagedAsset *)self uuid];
        id v9 = [v21 stringWithFormat:@"Unsupported asset kind for asset: %@", v22];

        id v23 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v24 = *MEMORY[0x1E4F8C500];
        uint64_t v33 = *MEMORY[0x1E4F28568];
        v34[0] = v9;
        double v25 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v34 forKeys:&v33 count:1];
        id v13 = [v23 errorWithDomain:v24 code:46309 userInfo:v25];

        double v14 = PLBackendGetLog();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_17;
        }
        *(_DWORD *)buf = 138543362;
        __int16 v32 = v9;
        goto LABEL_16;
      default:
        break;
    }
    id v13 = 0;
    BOOL v20 = 1;
    if (!a4) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  double v15 = NSString;
  double v16 = [(PLManagedAsset *)self uuid];
  id v9 = [v15 stringWithFormat:@"Missing metadata for asset %@. File not on disk", v16];

  char v17 = (void *)MEMORY[0x1E4F28C58];
  uint64_t v18 = *MEMORY[0x1E4F8C500];
  uint64_t v29 = *MEMORY[0x1E4F28568];
  id v30 = v9;
  id v19 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v30 forKeys:&v29 count:1];
  id v13 = [v17 errorWithDomain:v18 code:41004 userInfo:v19];

  double v14 = PLBackendGetLog();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138543362;
    __int16 v32 = v9;
LABEL_16:
    _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
  }
LABEL_17:

  BOOL v20 = 0;
  if (a4) {
LABEL_18:
  }
    *a4 = v13;
LABEL_19:

LABEL_20:
  return v20;
}

- (BOOL)updateExtendedAttributesWithError:(id *)a3
{
  id v5 = [(PLManagedAsset *)self metadataFromMediaPropertiesOrOriginalResource];
  LOBYTE(a3) = [(PLManagedAsset *)self updateExtendedAttributesWithMetadata:v5 error:a3];

  return (char)a3;
}

- (id)extendedAttributesCreateIfNeeded:(BOOL)a3
{
  BOOL v3 = a3;
  id v5 = [(PLManagedAsset *)self extendedAttributes];
  if (!v5 && v3)
  {
    if (PLPlatformExtendedAttributesSupported())
    {
      id v6 = [(PLManagedAsset *)self managedObjectContext];
      __int16 v7 = +[PLExtendedAttributes entityName];
      id v5 = PLSafeInsertNewObjectForEntityForNameInManagedObjectContext((uint64_t)v7, (uint64_t)v6, 0);

      if (v5) {
        [(PLManagedAsset *)self setExtendedAttributes:v5];
      }
    }
    else
    {
      id v5 = 0;
    }
  }
  return v5;
}

- (void)setCurrentSleetCastFromMetadata:(id)a3
{
  uint64_t v4 = [a3 smartStyleCast];
  [(PLManagedAsset *)self setCurrentSleetCast:v4];
}

- (void)updateSmartStyleVideoCastFromMetadata:(id)a3
{
  uint64_t v4 = [a3 smartStyleVideoCastValue];
  [(PLManagedAsset *)self setCurrentSleetCast:v4];
}

- (BOOL)updatePlaybackVariationAndLoopingStyleFromAVAsset:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(PLManagedAsset *)self playbackVariationFromAVAsset:v4 isLivePhotoVideoComplement:[(PLManagedAsset *)self isPhotoIris]];

  return [(PLManagedAsset *)self updatePlaybackVariationAndLoopingStyleFromVariation:v5];
}

- (BOOL)updatePlaybackVariationAndLoopingStyleFromVariation:(unsigned __int16)a3
{
  uint64_t v3 = a3;
  int v5 = [(PLManagedAsset *)self playbackVariation];
  int v6 = [(PLManagedAsset *)self playbackStyle];
  [(PLManagedAsset *)self setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:v3];
  return v5 != [(PLManagedAsset *)self playbackVariation]
      || v6 != [(PLManagedAsset *)self playbackStyle];
}

- (unsigned)playbackVariationFromAVAsset:(id)a3 isLivePhotoVideoComplement:(BOOL)a4
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int v5 = (void *)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithAVAsset:v4 timeZoneLookup:0];
  int v6 = [v5 playbackVariation];
  unint64_t v7 = [v6 unsignedIntegerValue];

  if (v7 >= 4)
  {
    double v8 = PLBackendGetLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = [v5 playbackVariation];
      int v13 = 138412546;
      double v14 = v9;
      __int16 v15 = 2112;
      id v16 = v4;
      _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_DEFAULT, "Unrecognized variation identifier %@ in %@", (uint8_t *)&v13, 0x16u);
    }
  }
  double v10 = [v5 playbackVariation];
  unsigned __int16 v11 = [v10 unsignedIntegerValue];

  return v11;
}

- (BOOL)updatePlaybackVariationAndStyleFromOriginalMetadata:(id)a3
{
  id v4 = a3;
  int v5 = v4;
  if (v4)
  {
    if ([v4 isAnimatedImage])
    {
      if ([(PLManagedAsset *)self playbackStyle] != 2)
      {
        [(PLManagedAsset *)self setPlaybackStyle:2];
LABEL_14:
        BOOL v7 = 1;
        goto LABEL_12;
      }
    }
    else if ([(PLManagedAsset *)self isPhotoIris] {
           && [v5 isLongExposure]
    }
           && [(PLManagedAsset *)self playbackVariation] != 3)
    {
      [(PLManagedAsset *)self setPlaybackVariation:3];
      goto LABEL_14;
    }
  }
  else
  {
    int v6 = PLBackendGetLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v9 = 0;
      _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_ERROR, "nil metadata", v9, 2u);
    }
  }
  BOOL v7 = 0;
LABEL_12:

  return v7;
}

- (void)updatePlaybackStyleWithLivePhotoPlayability:(BOOL)a3
{
  if (a3)
  {
    if (objc_msgSend((id)objc_opt_class(), "_isLoopingVideoPlaybackVariation:", -[PLManagedAsset playbackVariation](self, "playbackVariation")))uint64_t v4 = 5; {
    else
    }
      uint64_t v4 = 3;
  }
  else
  {
    uint64_t v4 = 1;
  }
  if (v4 != [(PLManagedAsset *)self playbackStyle])
  {
    [(PLManagedAsset *)self setPlaybackStyle:v4];
  }
}

- (void)_setColorSpaceNameFromMetadata:(id)a3
{
  id v4 = [a3 defaultProfileName];
  [(PLManagedAsset *)self setOriginalColorSpace:v4];
}

- (void)_setSOCGroupIdentifierFromMetadata:(id)a3
{
  id v4 = a3;
  id v6 = [(PLManagedAsset *)self additionalAttributes];
  int v5 = [v4 spatialOverCaptureIdentifier];

  [v6 setSpatialOverCaptureGroupIdentifier:v5];
}

- (void)_setPhotoIrisPropertiesFromMetadata:(id)a3
{
  id v7 = a3;
  id v4 = [v7 livePhotoPairingIdentifier];
  uint64_t v5 = [v4 length];

  if (v5)
  {
    id v6 = [v7 livePhotoPairingIdentifier];
    [(PLManagedAsset *)self setMediaGroupUUID:v6];
  }
}

- (void)setKeywordsFromImageProperties:(id)a3
{
  id v4 = [a3 objectForKey:*MEMORY[0x1E4F2FB80]];
  if (v4)
  {
    id v9 = v4;
    uint64_t v5 = [v4 objectForKey:*MEMORY[0x1E4F2FBC0]];
    id v6 = [MEMORY[0x1E4F1CA80] setWithArray:v5];
    id v7 = [(PLManagedObject *)self photoLibrary];
    double v8 = [v7 keywordManager];
    [v8 setKeywords:v6 forAsset:self];

    id v4 = v9;
  }
}

- (void)_setSavedAssetTypeFromMetadata:(id)a3
{
  id v4 = a3;
  if (![(PLManagedAsset *)self savedAssetType]
    && [v4 isPhotoBooth])
  {
    -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", [MEMORY[0x1E4F8BA10] savedAssetTypeForPhotoBoothAsset]);
  }
}

- (void)_setOriginalSizeAndOrientationFromMetadata:(id)a3
{
  id v7 = a3;
  if ([v7 isSyndicationOriginated])
  {
    -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", (__int16)[v7 orientation]);
    [v7 exifPixelSize];
    [(PLManagedAsset *)self setOriginalWidth:(uint64_t)v4];
    [v7 exifPixelSize];
    [(PLManagedAsset *)self setOriginalHeight:(uint64_t)v5];
  }
  else
  {
    id v6 = [v7 cgImageProperties];
    [(PLManagedAsset *)self setOriginalSizeAndOrientationFromImageProperties:v6];
  }
}

- (void)setOriginalSizeAndOrientationFromImageProperties:(id)a3
{
  PFGetDimensionsFromImageProperties();
  id v4 = 0;
  id v5 = 0;
  id v6 = 0;
  if (![(PLManagedAsset *)self originalOrientation]) {
    -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", [v4 shortValue]);
  }
  -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", [v5 longLongValue]);
  -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", [v6 longLongValue]);
}

- (void)_setHDRGainFromMetadata:(id)a3
{
  id v6 = [a3 hdrGain];
  id v4 = [(PLManagedAsset *)self hdrGain];
  BOOL IsEqual = PLNumberIsEqual(v4, v6);

  if (!IsEqual) {
    [(PLManagedAsset *)self setHdrGain:v6];
  }
}

- (void)setSpatialAudioControlBadgeAttributeFromMetadata:(id)a3
{
  if ([a3 hasSpatialAudio])
  {
    [(PLManagedAsset *)self setSpatialAudioControlBadgeAttribute:1];
  }
}

- (void)setPlaybackControlBadgeAttributeFromMetadata:(id)a3
{
  id v4 = [a3 nominalFrameRate];
  [v4 doubleValue];
  double v6 = v5;

  if (v6 >= 45.0)
  {
    [(PLManagedAsset *)self setPlaybackControlBadgeAttribute:1];
  }
}

- (void)setEditableDepthBadgeAttributeFromMetadata:(id)a3
{
  if ([a3 hasDepthDataAndIsNotRenderedSDOF])
  {
    [(PLManagedAsset *)self setEditableDepthBadgeAttribute:1];
  }
}

- (void)setDepthTypeFromMetadata:(id)a3
{
  id v6 = a3;
  if ([v6 isPortrait])
  {
    int v4 = 1;
  }
  else if [v6 isMovie] && (objc_msgSend(v6, "isCinematicVideo"))
  {
    int v4 = 2;
  }
  else
  {
    unsigned __int16 v5 = [v6 customRendered];
    if ((unsigned __int16)(v5 >> 1) > 4u) {
      int v4 = 0;
    }
    else {
      int v4 = (unsigned __int16)word_19BA9A8BC[(__int16)v5];
    }
  }
  if (v4 != (unsigned __int16)[(PLManagedAsset *)self depthType]) {
    [(PLManagedAsset *)self setDepthType:(__int16)v4];
  }
}

- (void)_setSizeAndOrientationFromMetadata:(id)a3
{
  id v7 = a3;
  if ([v7 isSyndicationOriginated])
  {
    -[PLManagedAsset setOrientation:](self, "setOrientation:", (__int16)[v7 orientation]);
    [v7 orientedPixelSize];
    [(PLManagedAsset *)self setWidth:(uint64_t)v4];
    [v7 orientedPixelSize];
    [(PLManagedAsset *)self setHeight:(uint64_t)v5];
  }
  else
  {
    id v6 = [v7 cgImageProperties];
    [(PLManagedAsset *)self setSizeAndOrientationFromImageProperties:v6];
  }
}

- (void)setSizeAndOrientationFromImageProperties:(id)a3
{
  PFGetDimensionsFromImageProperties();
  id v4 = 0;
  id v5 = 0;
  id v6 = 0;
  -[PLManagedAsset setOrientation:](self, "setOrientation:", [v4 shortValue]);
  [(PLManagedAsset *)self orientation];
  int v7 = PLExifOrientationSwapsWidthAndHeight();
  BOOL v8 = v7 == 0;
  if (v7) {
    id v9 = v6;
  }
  else {
    id v9 = v5;
  }
  if (v8) {
    double v10 = v6;
  }
  else {
    double v10 = v5;
  }
  -[PLManagedAsset setWidth:](self, "setWidth:", [v9 longLongValue]);
  -[PLManagedAsset setHeight:](self, "setHeight:", [v10 longLongValue]);
}

- (BOOL)setTimeExifTimestampStringFromMetadata:(id)a3
{
  uint64_t v4 = [a3 creationDateString];
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v6 = [v5 exifTimestampString];

  if (v4 | v6 && ([(id)v6 isEqualToString:v4] & 1) == 0)
  {
    BOOL v8 = [(PLManagedAsset *)self additionalAttributes];
    [v8 setExifTimestampString:v4];

    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)setCameraCaptureDeviceFromMetadata:(id)a3
{
  uint64_t v4 = [a3 isFrontFacingCamera];
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  int v6 = [v5 cameraCaptureDevice];

  if (v6 != v4)
  {
    BOOL v7 = [(PLManagedAsset *)self additionalAttributes];
    [v7 setCameraCaptureDevice:v4];
  }
  return v6 != v4;
}

- (void)setSpatialTypeFromMetadata:(id)a3
{
  id v5 = a3;
  if ([v5 isSpatialMedia])
  {
    if ([v5 isAlchemist]) {
      __int16 v4 = 2;
    }
    else {
      __int16 v4 = 1;
    }
  }
  else
  {
    __int16 v4 = 0;
  }
  [(PLManagedAsset *)self setSpatialType:v4];
}

- (BOOL)_setHDRTypeFromMetadata:(id)a3
{
  id v4 = a3;
  if ([v4 hasHDRGainMap] & 1) != 0 || (objc_msgSend(v4, "hasISOGainMap"))
  {
    __int16 v5 = 10;
  }
  else if ([v4 customRendered] && (unsigned int v8 = (__int16)objc_msgSend(v4, "customRendered") - 2, v8 < 3))
  {
    __int16 v5 = v8 + 2;
  }
  else if [v4 isMovie] && (objc_msgSend(v4, "isHDR"))
  {
    __int16 v5 = 5;
  }
  else if (([v4 isMovie] & 1) == 0 {
         && ((objc_msgSend(v4, "isHDR_TS22028") & 1) != 0 || objc_msgSend(v4, "isHDR_ExtendedRange")))
  }
  {
    __int16 v5 = 11;
  }
  else
  {
    __int16 v5 = 0;
  }
  __int16 v6 = [(PLManagedAsset *)self hdrType];
  if (v5 != v6) {
    [(PLManagedAsset *)self setHdrType:v5];
  }

  return v5 != v6;
}

- (id)pictureTransferProtocolAssetsWithConversionSupport:(id)a3
{
  return +[PLPTPAssetBuilder pictureTransferProtocolAssetsForAsset:self withConversionSupport:a3];
}

- (id)formattedCameraModel
{
  id v2 = [(PLManagedAsset *)self extendedAttributes];
  uint64_t v3 = [v2 formattedCameraModel];

  return v3;
}

- (id)cameraModel
{
  id v2 = [(PLManagedAsset *)self extendedAttributes];
  uint64_t v3 = [v2 cameraModel];

  return v3;
}

- (id)lensModel
{
  uint64_t v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  if ([(PLManagedAsset *)self isPhoto])
  {
    id v4 = [(PLManagedAsset *)self imageProperties];
    __int16 v5 = v4;
    if (v4)
    {
      __int16 v6 = [v4 objectForKey:*MEMORY[0x1E4F2F800]];
      BOOL v7 = v6;
      if (v6)
      {
        unsigned int v8 = [v6 objectForKey:*MEMORY[0x1E4F2F890]];
      }
      else
      {
        unsigned int v8 = 0;
      }
    }
    else
    {
      unsigned int v8 = 0;
    }
  }
  else
  {
    unsigned int v8 = 0;
  }
  return v8;
}

- (id)cameraMake
{
  uint64_t v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  if (![(PLManagedAsset *)self isPhoto])
  {
    if (![(PLManagedAsset *)self isVideo])
    {
      unsigned int v8 = 0;
      goto LABEL_13;
    }
    __int16 v5 = [(PLManagedAsset *)self avAssetProxyForOriginalAllowReadFromFile:1];
    BOOL v7 = [v5 metadata];
    if (v7)
    {
      id v9 = [MEMORY[0x1E4F16558] metadataItemsFromArray:v7 withKey:*MEMORY[0x1E4F15EA8] keySpace:*MEMORY[0x1E4F15DF8]];
      double v10 = [v9 firstObject];
      unsigned int v8 = [v10 stringValue];

      goto LABEL_10;
    }
LABEL_9:
    unsigned int v8 = 0;
    goto LABEL_10;
  }
  id v4 = [(PLManagedAsset *)self imageProperties];
  __int16 v5 = v4;
  if (!v4)
  {
    unsigned int v8 = 0;
    goto LABEL_12;
  }
  __int16 v6 = [v4 objectForKey:*MEMORY[0x1E4F2FD40]];
  BOOL v7 = v6;
  if (!v6) {
    goto LABEL_9;
  }
  unsigned int v8 = [v6 objectForKey:*MEMORY[0x1E4F2FD60]];
LABEL_10:

LABEL_12:
LABEL_13:
  return v8;
}

- (id)_avAssetProxyForFullSize:(BOOL)a3 allowReadFromFile:(BOOL)a4
{
  BOOL v4 = a4;
  if (![(PLManagedAsset *)self isVideo])
  {
    BOOL v7 = 0;
    goto LABEL_22;
  }
  if (a3) {
    [(PLManagedAsset *)self additionalAttributes];
  }
  else {
  unsigned int v8 = [(PLManagedAsset *)self master];
  }
  id v9 = [v8 mediaMetadata];

  double v10 = [v9 data];
  if (!v10)
  {
    BOOL v7 = 0;
    goto LABEL_12;
  }
  unsigned __int16 v11 = [MEMORY[0x1E4F28F98] propertyListWithData:v10 options:0 format:0 error:0];
  if (v11)
  {
    BOOL v7 = [MEMORY[0x1E4F16330] assetProxyWithPropertyList:v11];
  }
  else
  {
    BOOL v7 = 0;
  }

  if (!v7)
  {
LABEL_12:
    if (v4)
    {
      if (a3) {
        [(PLManagedAsset *)self fileURLForFullsizeRenderVideo];
      }
      else {
      id v12 = [(PLManagedAsset *)self mainFileURL];
      }
      if (v12)
      {
        int v13 = [MEMORY[0x1E4F28CB8] defaultManager];
        double v14 = [v12 path];
        int v15 = [v13 fileExistsAtPath:v14 isDirectory:0];

        BOOL v7 = 0;
        if (v15)
        {
          BOOL v7 = [MEMORY[0x1E4F16330] assetWithURL:v12];
        }
      }
      else
      {
        BOOL v7 = 0;
      }
    }
  }

LABEL_22:
  return v7;
}

- (id)avAssetProxyForFullSizeAllowReadFromFile:(BOOL)a3
{
  return [(PLManagedAsset *)self _avAssetProxyForFullSize:1 allowReadFromFile:a3];
}

- (id)avAssetProxyForOriginalAllowReadFromFile:(BOOL)a3
{
  return [(PLManagedAsset *)self _avAssetProxyForFullSize:0 allowReadFromFile:a3];
}

- (id)imageProperties
{
  objc_opt_class();
  uint64_t v3 = [(PLManagedAsset *)self master];
  BOOL v4 = [v3 mediaMetadata];
  __int16 v5 = [v4 valueForKey:@"data"];
  if (objc_opt_isKindOfClass()) {
    __int16 v6 = v5;
  }
  else {
    __int16 v6 = 0;
  }
  id v7 = v6;

  if (v7)
  {
    objc_opt_class();
    id v8 = [MEMORY[0x1E4F28F98] propertyListWithData:v7 options:0 format:0 error:0];
    id v9 = (objc_opt_isKindOfClass() & 1) != 0 ? v8 : 0;
    id v10 = v9;

    if (v10) {
      goto LABEL_18;
    }
  }
  unsigned __int16 v11 = [(PLManagedAsset *)self mainFileURL];
  if (!v11)
  {
LABEL_16:
    id v8 = 0;
    goto LABEL_17;
  }
  id v12 = [MEMORY[0x1E4F28CB8] defaultManager];
  int v13 = [v11 path];
  int v14 = [v12 fileExistsAtPath:v13 isDirectory:0];

  id v8 = 0;
  if (v14)
  {
    CGImageSourceRef v15 = CGImageSourceCreateWithURL((CFURLRef)v11, 0);
    if (v15)
    {
      CGImageSourceRef v16 = v15;
      objc_opt_class();
      id v17 = (id)[(id)objc_opt_class() newImagePropertiesFromImageSource:v16];
      if (objc_opt_isKindOfClass()) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 0;
      }
      id v8 = v18;

      CFRelease(v16);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_17:

LABEL_18:
  return v8;
}

- (void)setMetadataFromCustomRenderedValue:(int64_t)a3
{
  uint64_t v4 = (__int16)a3;
  uint64_t v5 = +[PLManagedAsset imageHDRTypeFromCustomRenderedValue:v4];
  if (v5) {
    [(PLManagedAsset *)self setHdrType:v5];
  }
  uint64_t v6 = +[PLManagedAsset imageDepthTypeFromCustomRenderedValue:v4];
  if (v6)
  {
    [(PLManagedAsset *)self setDepthType:v6];
  }
}

- (void)updateWithCustomAssetProperties:(id)a3
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  double v25 = [v4 objectForKeyedSubscript:@"dateCreated"];
  if (v25)
  {
    -[PLManagedAsset setDateCreated:](self, "setDateCreated:");
    [(PLManagedAsset *)self didSetCustomDateCreated];
  }
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v5 = v4;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v27 objects:v32 count:16];
  if (v6)
  {
    uint64_t v8 = *(void *)v28;
    *(void *)&long long v7 = 138543618;
    long long v24 = v7;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v28 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v27 + 1) + 8 * v9);
        if ((objc_msgSend(v10, "isEqualToString:", @"dateCreated", v24) & 1) == 0
          && ([v10 isEqualToString:@"trashedReason"] & 1) == 0)
        {
          if ([v10 isEqualToString:@"trashedState"])
          {
            unsigned __int16 v11 = [v5 objectForKeyedSubscript:v10];
            int v12 = [v11 BOOLValue];

            if (([(PLManagedAsset *)self canMoveToTrash] & v12) == 1)
            {
              int v13 = [v5 objectForKeyedSubscript:@"trashedReason"];
              int v14 = v13;
              if (v13) {
                uint64_t v15 = [v13 unsignedShortValue];
              }
              else {
                uint64_t v15 = 0;
              }
              [(PLManagedAsset *)self trashWithReason:v15];
            }
          }
          else if ([v10 isEqualToString:@"photoIrisVideoDuration"])
          {
            memset(&v31, 0, sizeof(v31));
            CFDictionaryRef v16 = [v5 objectForKeyedSubscript:v10];
            CMTimeMakeFromDictionary(&v31, v16);

            CMTime v26 = v31;
            [(PLManagedAsset *)self setPhotoIrisVideoDuration:&v26];
          }
          else if ([v10 isEqualToString:@"photoIrisStillDisplayTime"])
          {
            memset(&v31, 0, sizeof(v31));
            CFDictionaryRef v17 = [v5 objectForKeyedSubscript:v10];
            CMTimeMakeFromDictionary(&v31, v17);

            CMTime v26 = v31;
            [(PLManagedAsset *)self setPhotoIrisStillDisplayTime:&v26];
          }
          else if ([v10 isEqualToString:@"location"])
          {
            uint64_t v18 = [v5 objectForKeyedSubscript:v10];
            id v19 = [(PLManagedAsset *)self dateCreated];
            id v20 = +[PLManagedAsset newLocationFromLocationData:v18 timestampIfMissing:v19];

            [v20 coordinate];
            if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:"))
            {
              [(PLManagedAsset *)self setLocation:v20];
              [(PLManagedAsset *)self didSetCustomLocation];
            }
          }
          else if ([v10 isEqualToString:@"hdrType"])
          {
            id v21 = [v5 objectForKeyedSubscript:v10];
            -[PLManagedAsset setHdrType:](self, "setHdrType:", (__int16)[v21 unsignedIntegerValue]);
          }
          else
          {
            uint64_t v22 = [v5 objectForKeyedSubscript:v10];
            [(PLManagedAsset *)self setValue:v22 forKeyPath:v10];
          }
        }
        ++v9;
      }
      while (v6 != v9);
      uint64_t v23 = [v5 countByEnumeratingWithState:&v27 objects:v32 count:16];
      uint64_t v6 = v23;
    }
    while (v23);
  }
}

- (void)setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:(id)a3 originalFilename:(id)a4
{
  id v28 = a3;
  id v7 = a4;
  uint64_t v8 = [(PLManagedObject *)self pathManager];
  char v9 = [v8 isUBF];

  if ((v9 & 1) == 0)
  {
    long long v27 = [MEMORY[0x1E4F28B00] currentHandler];
    [v27 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:5388 description:@"Path manager must be UBF"];
  }
  id v10 = [(PLManagedAsset *)self directory];
  if ([v10 length])
  {
    unsigned __int16 v11 = [(PLManagedAsset *)self filename];
    uint64_t v12 = [v11 length];

    if (v12) {
      goto LABEL_12;
    }
  }
  else
  {
  }
  id v13 = objc_alloc(MEMORY[0x1E4F8B978]);
  int v14 = [(PLManagedAsset *)self uuid];
  uint64_t v15 = objc_msgSend(v13, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v14, -[PLManagedAsset bundleScope](self, "bundleScope"), v28, 0, 31, 0, v7);

  CFDictionaryRef v16 = [(PLManagedObject *)self pathManager];
  CFDictionaryRef v17 = [v16 readOnlyUrlWithIdentifier:v15];

  uint64_t v18 = [(PLManagedAsset *)self directory];
  uint64_t v19 = [v18 length];

  if (!v19)
  {
    id v20 = [(PLManagedObject *)self pathManager];
    id v21 = [v17 path];
    uint64_t v22 = [v21 stringByDeletingLastPathComponent];
    uint64_t v23 = objc_msgSend(v20, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v22, 4, -[PLManagedAsset bundleScope](self, "bundleScope"));

    [(PLManagedAsset *)self setDirectory:v23];
  }
  long long v24 = [(PLManagedAsset *)self filename];
  uint64_t v25 = [v24 length];

  if (!v25)
  {
    CMTime v26 = [v17 lastPathComponent];
    [(PLManagedAsset *)self setFilename:v26];
  }
LABEL_12:
}

- (BOOL)setAttributesFromMainFileURL:(id)a3 mainFileMetadata:(id)a4 savedAssetType:(signed __int16)a5 bundleScope:(unsigned __int16)a6 isPlaceholder:(BOOL)a7 placeholderFileURL:(id)a8 imageSource:(CGImageSource *)a9 imageData:(id *)a10
{
  uint64_t v12 = a6;
  unsigned int v13 = a5;
  uint64_t v90 = *MEMORY[0x1E4F143B8];
  uint64_t v17 = (uint64_t)a3;
  unint64_t v18 = (unint64_t)a4;
  id v83 = a8;
  if (!(v17 | v18))
  {
    unint64_t v18 = 0;
    uint64_t v17 = 0;
    goto LABEL_43;
  }
  aSelector = a2;
  if (!a7 && ([(id)v18 isSyndicationOriginated] & 1) == 0)
  {
    id v85 = 0;
    uint64_t v19 = [(PLManagedAsset *)self _effectiveMetadataForMainFileURL:v17 mainFileMetadata:v18 fullSizeRenderURL:0 shouldCache:1 error:&v85];
    id v20 = v85;

    if (v19)
    {
      uint64_t v21 = [v19 fileURL];

      unint64_t v18 = (unint64_t)v19;
      uint64_t v17 = v21;
      goto LABEL_6;
    }
    id v62 = PLBackendGetLog();
    if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v87 = v20;
      _os_log_impl(&dword_19B3C7000, v62, OS_LOG_TYPE_ERROR, "Unable to load metadata with error: %@", buf, 0xCu);
    }

    unint64_t v18 = 0;
LABEL_43:
    BOOL v63 = 0;
    uint64_t v52 = v83;
    goto LABEL_58;
  }
LABEL_6:
  context = (void *)MEMORY[0x19F38D3B0]();
  uint64_t v22 = [(PLManagedObject *)self pathManager];
  int v23 = [v22 isUBF];

  uint64_t v24 = 31;
  if (v23)
  {
    [MEMORY[0x1E4F8BA10] maskForCloudSharedAsset];
    if (PLValidatedSavedAssetTypeApplies()) {
      uint64_t v24 = 22;
    }
    else {
      uint64_t v24 = 31;
    }
  }
  unsigned int v80 = v13;
  if (v17)
  {
    uint64_t v25 = [(PLManagedObject *)self pathManager];
    CMTime v26 = [(id)v17 path];
    long long v27 = [v26 stringByDeletingLastPathComponent];
    id v28 = [v25 assetAbbreviatedMetadataDirectoryForDirectory:v27 type:v24 bundleScope:v12];
  }
  else
  {
    id v28 = 0;
  }
  long long v29 = a9;
  long long v30 = [(id)v17 lastPathComponent];
  [(PLManagedAsset *)self setDirectory:v28];
  [(PLManagedAsset *)self setFilename:v30];
  [(PLManagedAsset *)self setOriginalFilename:v30];
  if (a7)
  {
    CMTime v31 = [(id)v17 pathExtension];
    [(PLManagedAsset *)self setUniformTypeIdentifierFromPathExtension:v31];

    __int16 v32 = [(PLManagedAsset *)self dateCreated];

    if (v32) {
      goto LABEL_29;
    }
    int v78 = v28;
    uint64_t v33 = [(PLManagedAsset *)self modificationDate];
    [(PLManagedAsset *)self setDateCreated:v33];
  }
  else
  {
    int v78 = v28;
    uint64_t v34 = [(id)v18 fileSystemProperties];
    id v35 = [v34 objectForKeyedSubscript:*MEMORY[0x1E4F28310]];
    if (v35)
    {
      [(PLManagedAsset *)self setModificationDate:v35];
    }
    else
    {
      id v36 = [MEMORY[0x1E4F1C9C8] date];
      [(PLManagedAsset *)self setModificationDate:v36];
    }
    uint64_t v37 = [(id)v18 contentType];
    id v38 = [v37 identifier];
    [(PLManagedAsset *)self setUniformTypeIdentifier:v38];

    os_log_type_t v39 = [(id)v18 captionAbstract];
    [(PLManagedAsset *)self setLongDescription:v39];

    id v40 = [(id)v18 artworkContentDescription];
    [(PLManagedAsset *)self setAccessibilityDescription:v40];

    uint64_t v33 = [(PLManagedAsset *)self additionalAttributes];
    id v41 = [(PLManagedAsset *)self dateCreated];

    if (!v41)
    {
      int v42 = [(id)v18 utcCreationDate];
      [(PLManagedAsset *)self setDateCreated:v42];

      objc_msgSend(v33, "setDateCreatedSource:", (__int16)objc_msgSend((id)v18, "creationDateSource"));
    }
    [(PLManagedAsset *)self setTimeExifTimestampStringFromMetadata:v18];
    uint64_t v43 = [v33 timeZoneName];

    if (!v43)
    {
      char v44 = [(id)v18 timeZoneName];
      [v33 setTimeZoneName:v44];
    }
    uint64_t v45 = [v33 timeZoneOffset];

    if (!v45)
    {
      uint64_t v46 = [(id)v18 timeZoneOffset];
      [v33 setTimeZoneOffset:v46];
    }
    uint64_t v47 = [(id)v18 fileSize];
    if (v47) {
      [(PLManagedAsset *)self setOriginalFilesize:v47];
    }
    unint64_t v48 = [(id)v18 spatialOverCaptureIdentifier];
    __int16 v49 = [(PLManagedAsset *)self additionalAttributes];
    [v49 setSpatialOverCaptureGroupIdentifier:v48];
  }
  id v28 = v78;
LABEL_29:
  [(PLManagedAsset *)self updateAssetKindFromUniformTypeIdentifier];
  id v50 = [(PLManagedAsset *)self dateCreated];
  [v50 timeIntervalSinceReferenceDate];
  -[PLManagedAsset setSortToken:](self, "setSortToken:");

  [(PLManagedAsset *)self setSavedAssetType:v80];
  [(PLManagedAsset *)self setBundleScope:v12];
  int v51 = [(PLManagedAsset *)self kind];
  if (v51)
  {
    uint64_t v52 = v83;
    if (v51 == 1 && !a7) {
      [(PLManagedAsset *)self setVideoInfoFromFileAtURL:v17 mainFileMetadata:v18 fullSizeRenderURL:0 overwriteOriginalProperties:1];
    }
    goto LABEL_52;
  }
  uint64_t v52 = v83;
  if (!a7)
  {
    [(PLManagedAsset *)self setImageInfoFromImageMetadata:v18 overwriteOriginalProperties:1];
    goto LABEL_52;
  }
  if (!v83) {
    goto LABEL_52;
  }
  id v84 = 0;
  uint64_t v53 = [MEMORY[0x1E4F8CDF8] typeForURL:v83 error:&v84];
  id v54 = v84;
  if (!v53)
  {
    id v79 = v28;
    id v81 = a9;
    uint64_t v60 = PLBackendGetLog();
    if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
    {
      NSStringFromSelector(aSelector);
      BOOL v65 = v64 = v54;
      uint64_t v66 = [v83 path];
      *(_DWORD *)buf = 138412546;
      id v87 = v65;
      __int16 v88 = 2112;
      __int16 v89 = v66;
      _os_log_impl(&dword_19B3C7000, v60, OS_LOG_TYPE_ERROR, "%@ Couldn't get uti for '%@'.", buf, 0x16u);

      id v54 = v64;
    }
    goto LABEL_50;
  }
  if ([v53 conformsToType:*MEMORY[0x1E4F44400]])
  {
    id v75 = v54;
    id v76 = v53;
    id v79 = v28;
    id v81 = a9;
    id v73 = objc_alloc(MEMORY[0x1E4F8CC48]);
    uint64_t v55 = (void *)MEMORY[0x1E4F1CB10];
    long long v74 = [v83 path];
    BOOL v56 = [v55 fileURLWithPath:v74];
    char v57 = [(PLManagedObject *)self photoLibrary];
    id v58 = [v57 libraryBundle];
    id v59 = [v58 timeZoneLookup];
    uint64_t v60 = [v73 initWithImageURL:v56 contentType:0 options:12 timeZoneLookup:v59 cacheImageSource:1 cacheImageData:0];

    if (v60)
    {
      uint64_t v61 = [v60 utcCreationDate];
      [(PLManagedAsset *)self setDateCreated:v61];

      [(PLManagedAsset *)self setImageInfoFromImageMetadata:v60 overwriteOriginalProperties:1];
      uint64_t v52 = v83;
    }
    else
    {
      uint64_t v67 = PLBackendGetLog();
      uint64_t v52 = v83;
      if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
      {
        uint64_t v68 = NSStringFromSelector(aSelector);
        id v69 = [v83 path];
        *(_DWORD *)buf = 138412546;
        id v87 = v68;
        __int16 v88 = 2112;
        __int16 v89 = v69;
        _os_log_impl(&dword_19B3C7000, v67, OS_LOG_TYPE_ERROR, "%@ Unable to read metadata from '%@'", buf, 0x16u);
      }
      uint64_t v60 = 0;
    }
    id v54 = v75;
    uint64_t v53 = v76;
LABEL_50:

    id v28 = v79;
    long long v29 = v81;
  }

LABEL_52:
  uint64_t v70 = [(id)v18 imageSource];
  if (v29 && v70)
  {
    CFTypeRef v71 = CFRetain((CFTypeRef)[(id)v18 imageSource]);
    *long long v29 = (CGImageSource *)CFAutorelease(v71);
  }
  if (a10)
  {
    *a10 = [(id)v18 imageData];
  }
  BOOL v63 = 1;
LABEL_58:

  return v63;
}

- (BOOL)updateAttributesFromMainFileURL:(id)a3 mainFileMetadata:(id)a4 fullSizeRenderURL:(id)a5 error:(id *)a6
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v25 = 0;
  unsigned int v13 = [(PLManagedAsset *)self _effectiveMetadataForMainFileURL:v10 mainFileMetadata:v11 fullSizeRenderURL:v12 shouldCache:0 error:&v25];
  id v14 = v25;
  if (v13)
  {
    uint64_t v15 = (void *)MEMORY[0x19F38D3B0]();
    CFDictionaryRef v16 = [(PLManagedObject *)self photoLibrary];
    int v17 = [v16 isCloudPhotoLibraryEnabled];

    if (v17 && ![(PLManagedAsset *)self hasAdjustments])
    {
      uint64_t v24 = [(PLManagedAsset *)self master];
      unint64_t v18 = v24;
      if (!v24)
      {
        [(PLManagedAsset *)self setUniformTypeIdentifierFromOriginalFile];
        goto LABEL_6;
      }
      uint64_t v19 = [v24 uniformTypeIdentifier];
    }
    else
    {
      unint64_t v18 = [v13 contentType];
      uint64_t v19 = [v18 identifier];
    }
    id v20 = (void *)v19;
    [(PLManagedAsset *)self setUniformTypeIdentifier:v19];

LABEL_6:
    [(PLManagedAsset *)self updateAssetKindFromUniformTypeIdentifier];
    int v21 = [(PLManagedAsset *)self kind];
    if (v21)
    {
      if (v21 == 1) {
        [(PLManagedAsset *)self setVideoInfoFromFileAtURL:v10 mainFileMetadata:v11 fullSizeRenderURL:v12 overwriteOriginalProperties:0];
      }
    }
    else
    {
      [(PLManagedAsset *)self setImageInfoFromImageMetadata:v13 overwriteOriginalProperties:0];
    }
    goto LABEL_15;
  }
  uint64_t v22 = PLBackendGetLog();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v27 = v14;
    _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_ERROR, "Unable to load metadata with error: %@", buf, 0xCu);
  }

  if (a6) {
    *a6 = v14;
  }
LABEL_15:

  return v13 != 0;
}

- (id)mutableTemporalDetectedFaces
{
  return (id)[(PLManagedAsset *)self mutableSetValueForKey:@"temporalDetectedFaces"];
}

- (id)mutableDetectedFaces
{
  return (id)[(PLManagedAsset *)self mutableSetValueForKey:@"detectedFaces"];
}

- (id)addLegacyFaceWithRelativeRect:(CGRect)a3 identifier:(signed __int16)a4 albumUUID:(id)a5
{
  uint64_t v5 = a4;
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  id v11 = a5;
  id v12 = [(PLManagedAsset *)self managedObjectContext];
  unsigned int v13 = +[PLManagedObject insertInManagedObjectContext:v12];

  objc_msgSend(v13, "setRelativeRect:", x, y, width, height);
  [v13 setIdentifier:v5];
  [v13 setAlbumUUID:v11];

  [v13 setAsset:self];
  return v13;
}

- (id)legacyFaceWithIdentifier:(signed __int16)a3
{
  int v3 = a3;
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = [(PLManagedAsset *)self legacyFaces];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        char v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v9 identifier] == v3)
        {
          id v10 = v9;
          goto LABEL_11;
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  id v10 = 0;
LABEL_11:

  return v10;
}

- (void)implementsPLGraphEdgeReferenceObjectRecipient
{
  id v4 = [MEMORY[0x1E4F28B00] currentHandler];
}

- (NSSet)generatedAssetDescriptionNodes
{
  return (NSSet *)+[PLGeneratedAssetDescription fetchGeneratedAssetDescriptionNodesForAsset:self];
}

- (id)edgesOut
{
  return +[PLGraphEdge edgesOutFromObject:self];
}

- (id)edgesIn
{
  return +[PLGraphEdge edgesInToObject:self];
}

- (void)setLocationFromPersistedAttributes:(id)a3
{
  id v4 = [a3 dataForKey:*MEMORY[0x1E4F8C350]];
  if (v4)
  {
    id v7 = v4;
    uint64_t v5 = [(PLManagedAsset *)self dateCreated];
    id v6 = +[PLManagedAsset newLocationFromLocationData:v7 timestampIfMissing:v5];

    if (v6)
    {
      [v6 coordinate];
      if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:")) {
        [(PLManagedAsset *)self setLocation:v6];
      }
    }

    id v4 = v7;
  }
}

- (void)synchronizeWithPersistedFileSystemAttributes
{
  uint64_t v166 = *MEMORY[0x1E4F143B8];
  if ([(PLManagedAsset *)self isValidTypeForPersistence])
  {
    int v3 = (void *)MEMORY[0x19F38D3B0]();
    id v4 = [(PLManagedAsset *)self persistedFileSystemAttributesFileURL];
    if (!v4)
    {
LABEL_206:

      return;
    }
    uint64_t v5 = [MEMORY[0x1E4F8B900] persistedAttributesForFileAtURL:v4];
    uint64_t v6 = *MEMORY[0x1E4F8C470];
    uint64_t v7 = [v5 UUIDStringForKey:*MEMORY[0x1E4F8C470]];
    uint64_t v147 = (void *)v7;
    if (v7)
    {
      [(PLManagedAsset *)self setUuid:v7];
      id v8 = 0;
    }
    else
    {
      id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      char v9 = [(PLManagedAsset *)self uuid];
      [v8 setUUIDString:v9 forKey:v6];
    }
    __int16 v164 = 0;
    uint64_t v10 = *MEMORY[0x1E4F8C420];
    if ([v5 getUInt16:&v164 forKey:*MEMORY[0x1E4F8C420]])
    {
      [MEMORY[0x1E4F8BA10] maskForIsValidForBackup];
      if (PLValidatedSavedAssetTypeApplies()) {
        [(PLManagedAsset *)self setSavedAssetType:v164];
      }
    }
    else
    {
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      objc_msgSend(v8, "setUInt16:forKey:", (unsigned __int16)-[PLManagedAsset savedAssetType](self, "savedAssetType"), v10);
    }
    uint64_t v11 = *MEMORY[0x1E4F8C398];
    uint64_t v12 = [v5 stringForKey:*MEMORY[0x1E4F8C398]];
    id v146 = (void *)v12;
    if (v12)
    {
      [(PLManagedAsset *)self setImportedByBundleIdentifier:v12];
    }
    else
    {
      long long v13 = [(PLManagedAsset *)self importedByBundleIdentifier];

      if (v13)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        long long v14 = [(PLManagedAsset *)self importedByBundleIdentifier];
        [v8 setString:v14 forKey:v11];
      }
    }
    uint64_t v15 = *MEMORY[0x1E4F8C3A0];
    uint64_t v16 = [v5 stringForKey:*MEMORY[0x1E4F8C3A0]];
    uint64_t v145 = (void *)v16;
    if (v16)
    {
      [(PLManagedAsset *)self setImportedByDisplayName:v16];
    }
    else
    {
      uint64_t v17 = [(PLManagedAsset *)self importedByDisplayName];

      if (v17)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        unint64_t v18 = [(PLManagedAsset *)self importedByDisplayName];
        [v8 setString:v18 forKey:v15];
      }
    }
    uint64_t v19 = *MEMORY[0x1E4F8C3F8];
    uint64_t v20 = [v5 UUIDStringForKey:*MEMORY[0x1E4F8C3F8]];
    v144 = (void *)v20;
    if (v20)
    {
      [(PLManagedAsset *)self setOriginalAssetsUUID:v20];
    }
    else
    {
      int v21 = [(PLManagedAsset *)self originalAssetsUUID];

      if (v21)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        uint64_t v22 = [(PLManagedAsset *)self originalAssetsUUID];
        [v8 setUUIDString:v22 forKey:v19];
      }
    }
    uint64_t v23 = *MEMORY[0x1E4F8C328];
    uint64_t v24 = [v5 UUIDStringForKey:*MEMORY[0x1E4F8C328]];
    uint64_t v143 = (void *)v24;
    if (v24)
    {
      [(PLManagedAsset *)self setAvalancheUUID:v24];
    }
    else
    {
      id v25 = [(PLManagedAsset *)self avalancheUUID];

      if (v25)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        CMTime v26 = [(PLManagedAsset *)self avalancheUUID];
        [v8 setUUIDString:v26 forKey:v23];
      }
    }
    unsigned __int16 v163 = 0;
    uint64_t v27 = *MEMORY[0x1E4F8C320];
    if ([v5 getUInt16:&v163 forKey:*MEMORY[0x1E4F8C320]])
    {
      uint64_t v28 = [(PLManagedAsset *)self avalancheUUID];

      if (v28)
      {
        [(PLManagedAsset *)self setAvalanchePickType:v163];
        long long v29 = self;
        uint64_t v30 = 1;
      }
      else
      {
        [(PLManagedAsset *)self setAvalanchePickType:0];
        long long v29 = self;
        uint64_t v30 = 0;
      }
      [(PLManagedAsset *)v29 setAvalancheKind:v30];
    }
    else
    {
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      unsigned int v31 = [(PLManagedAsset *)self avalancheKind];
      if (v31 >= 2)
      {
        if (v31 != 2) {
          goto LABEL_48;
        }
        uint64_t v33 = v8;
        uint64_t v32 = 0;
      }
      else
      {
        uint64_t v32 = (unsigned __int16)[(PLManagedAsset *)self avalanchePickType];
        uint64_t v33 = v8;
      }
      [v33 setUInt16:v32 forKey:v27];
    }
LABEL_48:
    __int16 v162 = 0;
    uint64_t v34 = *MEMORY[0x1E4F8C390];
    if ([v5 getUInt16:&v162 forKey:*MEMORY[0x1E4F8C390]])
    {
      [(PLManagedAsset *)self setHidden:v162 != 0];
    }
    else
    {
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset hidden](self, "hidden"), v34);
    }
    __int16 v161 = 0;
    uint64_t v35 = *MEMORY[0x1E4F8C388];
    if ([v5 getUInt16:&v161 forKey:*MEMORY[0x1E4F8C388]])
    {
      [(PLManagedAsset *)self setFavorite:v161 != 0];
    }
    else
    {
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset favorite](self, "favorite"), v35);
    }
    __int16 v160 = 0;
    uint64_t v36 = *MEMORY[0x1E4F8C428];
    if ([v5 getUInt16:&v160 forKey:*MEMORY[0x1E4F8C428]])
    {
      uint64_t v37 = [(PLManagedAsset *)self additionalAttributes];
      [v37 setSceneAnalysisIsFromPreview:v160 != 0];
    }
    else
    {
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      uint64_t v37 = [(PLManagedAsset *)self additionalAttributes];
      objc_msgSend(v8, "setUInt16:forKey:", objc_msgSend(v37, "sceneAnalysisIsFromPreview"), v36);
    }

    __int16 v159 = 0;
    uint64_t v38 = *MEMORY[0x1E4F8C480];
    if ([v5 getUInt16:&v159 forKey:*MEMORY[0x1E4F8C480]])
    {
      os_log_type_t v39 = [(PLManagedAsset *)self additionalAttributes];
      [v39 setViewPresentation:v159];
    }
    else
    {
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      id v8 = v8;

      os_log_type_t v39 = [(PLManagedAsset *)self additionalAttributes];
      objc_msgSend(v8, "setUInt16:forKey:", (unsigned __int16)objc_msgSend(v39, "viewPresentation"), v38);
    }

    __int16 v158 = 0;
    uint64_t v40 = *MEMORY[0x1E4F8C460];
    if ([v5 getUInt16:&v158 forKey:*MEMORY[0x1E4F8C460]])
    {
      if ([(PLManagedAsset *)self canMoveToTrash] && v158)
      {
        buf[0] = 0;
        [v5 getUInt16:buf forKey:*MEMORY[0x1E4F8C468]];
        [(PLManagedAsset *)self trashWithReason:buf[0]];
      }
    }
    else
    {
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset isInTrash](self, "isInTrash"), v40);
      uint64_t v41 = [(PLManagedAsset *)self trashedReason];
      [v8 setUInt16:v41 forKey:*MEMORY[0x1E4F8C468]];
    }
    __int16 v157 = 0;
    uint64_t v42 = *MEMORY[0x1E4F8C368];
    if ([v5 getUInt16:&v157 forKey:*MEMORY[0x1E4F8C368]])
    {
      if (v157)
      {
        -[PLManagedAsset setDeferredProcessingNeeded:](self, "setDeferredProcessingNeeded:");
        uint64_t v43 = [(PLManagedObject *)self photoLibrary];
        char v44 = v43;
        if (v43)
        {
          uint64_t v45 = [v43 libraryServicesManager];
          uint64_t v46 = [v45 backgroundJobService];
          [v46 signalBackgroundProcessingNeededOnLibrary:v44];
        }
      }
    }
    else if ([(PLManagedAsset *)self deferredProcessingNeeded])
    {
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset deferredProcessingNeeded](self, "deferredProcessingNeeded"), v42);
    }
    uint64_t v47 = *MEMORY[0x1E4F8C410];
    uint64_t v48 = [v5 stringForKey:*MEMORY[0x1E4F8C410]];
    if (v48)
    {
      [(PLManagedAsset *)self setDisableFileSystemPersistency:1];
      [(PLManagedAsset *)self setPublicGlobalUUID:v48];
      [(PLManagedAsset *)self setDisableFileSystemPersistency:0];
    }
    else
    {
      __int16 v49 = [(PLManagedAsset *)self publicGlobalUUID];

      if (v49)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        id v50 = [(PLManagedAsset *)self publicGlobalUUID];
        [v8 setString:v50 forKey:v47];
      }
    }
    uint64_t v51 = *MEMORY[0x1E4F8C458];
    uint64_t v52 = [v5 stringForKey:*MEMORY[0x1E4F8C458]];
    if (v52)
    {
      [(PLManagedAsset *)self setTitle:v52];
    }
    else
    {
      uint64_t v53 = [(PLManagedAsset *)self title];

      if (v53)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        id v54 = [(PLManagedAsset *)self title];
        [v8 setString:v54 forKey:v51];
      }
    }
    uint64_t v55 = *MEMORY[0x1E4F8C308];
    uint64_t v56 = [v5 stringForKey:*MEMORY[0x1E4F8C308]];
    CFURLRef v140 = (void *)v56;
    if (v52)
    {
      [(PLManagedAsset *)self setAccessibilityDescription:v56];
    }
    else
    {
      char v57 = [(PLManagedAsset *)self accessibilityDescription];

      if (v57)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        id v58 = [(PLManagedAsset *)self accessibilityDescription];
        [v8 setString:v58 forKey:v55];
      }
    }
    char v142 = (void *)v48;
    os_signpost_id_t v148 = [MEMORY[0x1E4F1CAF0] localTimeZone];
    uint64_t v59 = *MEMORY[0x1E4F8C448];
    uint64_t v60 = [v5 stringForKey:*MEMORY[0x1E4F8C448]];
    uint64_t v61 = [(PLManagedAsset *)self additionalAttributes];
    id v62 = v61;
    id v139 = (void *)v60;
    if (v60)
    {
      [v61 setTimeZoneName:v60];
    }
    else
    {
      BOOL v63 = [v61 timeZoneName];

      if (v63)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        id v62 = [(PLManagedAsset *)self additionalAttributes];
        id v64 = [v62 timeZoneName];
        [v8 setString:v64 forKey:v59];
      }
      else
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        id v62 = [v148 name];
        [v8 setString:v62 forKey:v59];
      }
    }

    int v156 = 0;
    uint64_t v65 = *MEMORY[0x1E4F8C450];
    int v66 = [v5 getInt32:&v156 forKey:*MEMORY[0x1E4F8C450]];
    uint64_t v67 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v68 = v67;
    if (v66)
    {
      id v69 = [NSNumber numberWithUnsignedLong:v156];
      [v68 setTimeZoneOffset:v69];
    }
    else
    {
      uint64_t v70 = [v67 timeZoneOffset];

      if (v70)
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        uint64_t v68 = [(PLManagedAsset *)self additionalAttributes];
        CFTypeRef v71 = [v68 timeZoneOffset];
        objc_msgSend(v8, "setInt32:forKey:", objc_msgSend(v71, "longValue"), v65);
      }
      else
      {
        if (!v8)
        {
          id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
        }
        uint64_t v68 = [(PLManagedAsset *)self dateCreated];
        objc_msgSend(v8, "setInt32:forKey:", objc_msgSend(v148, "secondsFromGMTForDate:", v68), v65);
      }
    }

    uint64_t v72 = *MEMORY[0x1E4F8C378];
    uint64_t v73 = [v5 stringForKey:*MEMORY[0x1E4F8C378]];
    long long v74 = [(PLManagedAsset *)self additionalAttributes];
    id v75 = v74;
    CGImageSourceRef v138 = (void *)v73;
    if (v73)
    {
      [v74 setLongDescription:v73];
    }
    else
    {
      id v76 = [v74 longDescription];

      if (!v76)
      {
LABEL_127:
        uint64_t v78 = *MEMORY[0x1E4F8C310];
        uint64_t v79 = [v5 dataForKey:*MEMORY[0x1E4F8C310]];
        if (v79
          && ([MEMORY[0x1E4F28F98] propertyListWithData:v79 options:0 format:0 error:0],
              id v80 = (id)objc_claimAutoreleasedReturnValue(),
              v80,
              v80))
        {
          [(PLManagedAsset *)self setAddedDate:v80];
        }
        else
        {
          id v81 = [(PLManagedAsset *)self addedDate];

          if (!v81) {
            goto LABEL_135;
          }
          if (!v8)
          {
            id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
          }
          id v80 = [(PLManagedAsset *)self addedDateData];
          [v8 setData:v80 forKey:v78];
        }

LABEL_135:
        uint64_t v82 = *MEMORY[0x1E4F8C400];
        uint64_t v83 = [v5 stringForKey:*MEMORY[0x1E4F8C400]];
        id v136 = (void *)v83;
        id v137 = (void *)v79;
        if (v83)
        {
          [(PLManagedAsset *)self setOriginalFilename:v83];
        }
        else
        {
          id v84 = [(PLManagedAsset *)self originalFilename];

          if (v84)
          {
            if (!v8)
            {
              id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
            }
            id v85 = [(PLManagedAsset *)self originalFilename];
            [v8 setString:v85 forKey:v82];
          }
        }
        uint64_t v86 = *MEMORY[0x1E4F8C3E8];
        uint64_t v87 = [v5 stringForKey:*MEMORY[0x1E4F8C3E8]];
        if (v87)
        {
          __int16 v88 = (void *)v87;
          __int16 v89 = [(PLManagedAsset *)self _mediaGroupUUIDFromPersistence:v87];

          [(PLManagedAsset *)self setMediaGroupUUID:v89];
        }
        else
        {
          uint64_t v90 = [(PLManagedAsset *)self _mediaGroupUUIDForPersistence];
          if (!v90)
          {
LABEL_148:
            uint64_t v91 = *MEMORY[0x1E4F8C380];
            uint64_t v92 = [v5 dataForKey:*MEMORY[0x1E4F8C380]];
            id v135 = (void *)v92;
            if (v92)
            {
              [(PLManagedAsset *)self _setVideoComplementData:v92];
            }
            else if ([(PLManagedAsset *)self _hasVideoComplementData])
            {
              if (!v8)
              {
                id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
              }
              id v8 = v8;

              __int16 v93 = [(PLManagedAsset *)self videoComplementData];
              [v8 setData:v93 forKey:v91];
            }
            unsigned __int16 v155 = 0;
            uint64_t v94 = *MEMORY[0x1E4F8C478];
            if ([v5 getUInt16:&v155 forKey:*MEMORY[0x1E4F8C478]])
            {
              [(PLManagedAsset *)self setVideoCpVisibilityState:v155];
            }
            else
            {
              if (!v8)
              {
                id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
              }
              id v8 = v8;

              objc_msgSend(v8, "setUInt16:forKey:", -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState"), v94);
            }
            uint64_t v95 = *MEMORY[0x1E4F8C408];
            uint64_t v96 = [v5 dataForKey:*MEMORY[0x1E4F8C408]];
            id v134 = (void *)v96;
            if (v96)
            {
              [(PLManagedAsset *)self setPlaceAnnotationData:v96];
            }
            else
            {
              if (!v8)
              {
                id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
              }
              id v8 = v8;

              __int16 v97 = [(PLManagedAsset *)self placeAnnotationData];
              [v8 setData:v97 forKey:v95];
            }
            __int16 v154 = 0;
            uint64_t v98 = *MEMORY[0x1E4F8C3A8];
            if ([v5 getUInt16:&v154 forKey:*MEMORY[0x1E4F8C3A8]])
            {
              if (v154)
              {
                [(PLManagedAsset *)self setImportedBy:v154];
              }
              else if ([(PLManagedAsset *)self importedBy])
              {
                if (!v8)
                {
                  id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
                }
                id v8 = v8;

                objc_msgSend(v8, "setUInt16:forKey:", (unsigned __int16)-[PLManagedAsset importedBy](self, "importedBy"), v98);
              }
            }
            __int16 v153 = 0;
            uint64_t v99 = *MEMORY[0x1E4F8C340];
            if ([v5 getUInt16:&v153 forKey:*MEMORY[0x1E4F8C340]])
            {
              [(PLManagedAsset *)self setCurrentSleetCast:v153];
            }
            else
            {
              if (!v8)
              {
                id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
              }
              id v8 = v8;

              objc_msgSend(v8, "setUInt16:forKey:", (unsigned __int16)-[PLManagedAsset currentSleetCast](self, "currentSleetCast"), v99);
            }
            uint64_t v100 = *MEMORY[0x1E4F8C430];
            uint64_t v101 = [v5 stringForKey:*MEMORY[0x1E4F8C430]];
            id v133 = (void *)v101;
            if (v101)
            {
              uint64_t v102 = v101;
              id v103 = [(PLManagedAsset *)self additionalAttributes];
              [v103 setSpatialOverCaptureGroupIdentifier:v102];
            }
            else
            {
              if (!v8)
              {
                id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
              }
              id v8 = v8;

              id v103 = [(PLManagedAsset *)self additionalAttributes];
              __int16 v104 = [v103 spatialOverCaptureGroupIdentifier];
              [v8 setString:v104 forKey:v100];
            }
            uint64_t v105 = *MEMORY[0x1E4F8C440];
            uint64_t v106 = [v5 stringForKey:*MEMORY[0x1E4F8C440]];
            id v149 = v4;
            uint64_t v131 = (void *)v106;
            if (v106)
            {
              uint64_t v107 = v106;
              int v108 = v3;
              uint64_t v109 = [(PLManagedAsset *)self additionalAttributes];
              [v109 setSyndicationIdentifier:v107];
            }
            else
            {
              if (!v8)
              {
                id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
              }
              int v108 = v3;
              id v8 = v8;

              uint64_t v109 = [(PLManagedAsset *)self additionalAttributes];
              id v110 = [v109 syndicationIdentifier];
              [v8 setString:v110 forKey:v105];
            }
            uint64_t v111 = *MEMORY[0x1E4F8C3D8];
            uint64_t v112 = [v5 dataForKey:*MEMORY[0x1E4F8C3D8]];
            v113 = (void *)MEMORY[0x1E4F28DC0];
            id v114 = (void *)MEMORY[0x1E4F1CAD0];
            uint64_t v115 = objc_opt_class();
            BOOL v116 = objc_msgSend(v114, "setWithObjects:", v115, objc_opt_class(), 0);
            id v152 = 0;
            id v132 = (void *)v112;
            id v117 = [v113 unarchivedObjectOfClasses:v116 fromData:v112 error:&v152];
            id v118 = v152;

            CFURLRef v141 = (void *)v52;
            if ([v117 count])
            {
              BOOL v119 = [(PLManagedAsset *)self additionalAttributes];
              [v119 setLibraryScopeAssetContributorsToUpdate:v117];
              int v3 = v108;
            }
            else
            {
              int v3 = v108;
              if (v118)
              {
                BOOL v119 = PLBackendGetLog();
                if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 138412290;
                  *(void *)&buf[2] = v118;
                  _os_log_impl(&dword_19B3C7000, v119, OS_LOG_TYPE_ERROR, "libraryScopeAssetContributorsToUpdate unarchiving failed: %@", (uint8_t *)buf, 0xCu);
                }
              }
              else
              {
                if (!v8)
                {
                  id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v149];
                }
                id v8 = v8;

                unsigned int v127 = (void *)MEMORY[0x1E4F28DB0];
                double v128 = [(PLManagedAsset *)self additionalAttributes];
                double v129 = [v128 libraryScopeAssetContributorsToUpdate];
                id v151 = 0;
                BOOL v119 = [v127 archivedDataWithRootObject:v129 requiringSecureCoding:1 error:&v151];
                id v118 = v151;

                if (v118)
                {
                  v130 = PLBackendGetLog();
                  int v3 = v108;
                  if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)buf = 138412290;
                    *(void *)&buf[2] = v118;
                    _os_log_impl(&dword_19B3C7000, v130, OS_LOG_TYPE_ERROR, "libraryScopeAssetContributorsToUpdate archiving failed: %@", (uint8_t *)buf, 0xCu);
                  }
                }
                else
                {
                  [v8 setData:v119 forKey:v111];
                  int v3 = v108;
                }
              }
            }

            unsigned __int16 v150 = 0;
            uint64_t v120 = *MEMORY[0x1E4F8C438];
            if ([v5 getUInt16:&v150 forKey:*MEMORY[0x1E4F8C438]])
            {
              id v121 = [(PLManagedAsset *)self additionalAttributes];
              [v121 setSyndicationHistory:v150];
              unint64_t v122 = 0x1E4F28000;
            }
            else
            {
              unint64_t v122 = 0x1E4F28000uLL;
              if (!v8)
              {
                id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v149];
              }
              id v8 = v8;

              id v121 = [(PLManagedAsset *)self additionalAttributes];
              objc_msgSend(v8, "setUInt16:forKey:", objc_msgSend(v121, "syndicationHistory"), v120);
            }

            int v123 = [v5 dataForKey:*MEMORY[0x1E4F8C348]];
            if (v123)
            {
              id v124 = [*(id *)(v122 + 3992) propertyListWithData:v123 options:0 format:0 error:0];

              if (v124)
              {
                [(PLManagedAsset *)self setDateCreated:v124];
              }
            }
            uint64_t v125 = [v5 stringForKey:*MEMORY[0x1E4F8C330]];
            if (v125) {
              [(PLManagedAsset *)self setCloudAssetGUID:v125];
            }
            *(void *)buf = 0;
            uint64_t v126 = *MEMORY[0x1E4F8C3E0];
            if ([v5 getUInt64:buf forKey:*MEMORY[0x1E4F8C3E0]])
            {
              [(PLManagedAsset *)self setLibraryScopeShareState:*(void *)buf];
            }
            else
            {
              if (!v8)
              {
                id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v149];
              }
              id v8 = v8;

              objc_msgSend(v8, "setUInt64:forKey:", -[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState"), v126);
            }
            [(PLManagedAsset *)self setLocationFromPersistedAttributes:v5];
            if (v8) {
              [v8 persist];
            }

            id v4 = v149;
            goto LABEL_206;
          }
          __int16 v89 = (void *)v90;
          if (!v8)
          {
            id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
          }
          id v8 = v8;

          [v8 setString:v89 forKey:v86];
        }

        goto LABEL_148;
      }
      if (!v8)
      {
        id v8 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v4];
      }
      id v75 = [(PLManagedAsset *)self additionalAttributes];
      id v77 = [v75 longDescription];
      [v8 setString:v77 forKey:v72];
    }
    goto LABEL_127;
  }
}

- (void)persistMetadataToFileURL:(id)a3
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (!v5)
  {
    uint64_t v53 = [MEMORY[0x1E4F28B00] currentHandler];
    [v53 handleFailureInMethod:a2, self, @"PLManagedAsset.m", 4638, @"Invalid parameter not satisfying: %@", @"url" object file lineNumber description];
  }
  uint64_t v6 = (void *)MEMORY[0x19F38D3B0]();
  uint64_t v7 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v5];
  id v8 = [(PLManagedAsset *)self uuid];
  [v7 setUUIDString:v8 forKey:*MEMORY[0x1E4F8C470]];

  unsigned __int16 v9 = [(PLManagedAsset *)self savedAssetType];
  [v7 setUInt16:v9 forKey:*MEMORY[0x1E4F8C420]];
  uint64_t v10 = [(PLManagedObject *)self photoLibrary];
  uint64_t v11 = [v10 managedObjectContextStoreUUID];
  [v7 setString:v11 forKey:*MEMORY[0x1E4F8C360]];

  unsigned int v12 = [(PLManagedAsset *)self avalancheKind];
  if (v12 >= 2)
  {
    if (v12 != 2) {
      goto LABEL_8;
    }
    unsigned __int16 v14 = 0;
  }
  else
  {
    long long v13 = [(PLManagedAsset *)self avalancheUUID];
    [v7 setUUIDString:v13 forKey:*MEMORY[0x1E4F8C328]];

    unsigned __int16 v14 = [(PLManagedAsset *)self avalanchePickType];
  }
  [v7 setUInt16:v14 forKey:*MEMORY[0x1E4F8C320]];
LABEL_8:
  uint64_t v15 = [(PLManagedAsset *)self hidden];
  [v7 setUInt16:v15 forKey:*MEMORY[0x1E4F8C390]];
  uint64_t v16 = [(PLManagedAsset *)self favorite];
  [v7 setUInt16:v16 forKey:*MEMORY[0x1E4F8C388]];
  BOOL v17 = [(PLManagedAsset *)self isInTrash];
  [v7 setUInt16:v17 forKey:*MEMORY[0x1E4F8C460]];
  uint64_t v18 = [(PLManagedAsset *)self trashedReason];
  [v7 setUInt16:v18 forKey:*MEMORY[0x1E4F8C468]];
  uint64_t v19 = [(PLManagedAsset *)self deferredProcessingNeeded];
  [v7 setUInt16:v19 forKey:*MEMORY[0x1E4F8C368]];
  uint64_t v20 = [(PLManagedAsset *)self dateCreatedData];
  [v7 setData:v20 forKey:*MEMORY[0x1E4F8C348]];

  int v21 = [(PLManagedAsset *)self locationData];
  [v7 setData:v21 forKey:*MEMORY[0x1E4F8C350]];

  uint64_t v22 = [(PLManagedAsset *)self addedDateData];
  [v7 setData:v22 forKey:*MEMORY[0x1E4F8C310]];

  [MEMORY[0x1E4F8BA10] maskForIsValidForFileSystemPersistence];
  [(PLManagedAsset *)self savedAssetType];
  if (PLValidatedSavedAssetTypeApplies())
  {
    uint64_t v23 = [(PLManagedAsset *)self cloudAssetGUID];
    [v7 setString:v23 forKey:*MEMORY[0x1E4F8C330]];
  }
  uint64_t v24 = [(PLManagedAsset *)self videoComplementData];
  [v7 setData:v24 forKey:*MEMORY[0x1E4F8C380]];

  uint64_t v25 = [(PLManagedAsset *)self videoCpVisibilityState];
  [v7 setUInt16:v25 forKey:*MEMORY[0x1E4F8C478]];
  uint64_t v26 = [(PLManagedAsset *)self libraryScopeShareState];
  [v7 setUInt64:v26 forKey:*MEMORY[0x1E4F8C3E0]];
  unsigned __int16 v27 = [(PLManagedAsset *)self currentSleetCast];
  [v7 setUInt16:v27 forKey:*MEMORY[0x1E4F8C340]];
  uint64_t v28 = [(PLManagedAsset *)self additionalAttributes];
  long long v29 = [v28 importedByBundleIdentifier];
  [v7 setString:v29 forKey:*MEMORY[0x1E4F8C398]];

  uint64_t v30 = [v28 importedByDisplayName];
  [v7 setString:v30 forKey:*MEMORY[0x1E4F8C3A0]];

  unsigned int v31 = [v28 originalAssetsUUID];
  [v7 setUUIDString:v31 forKey:*MEMORY[0x1E4F8C3F8]];

  uint64_t v32 = [v28 publicGlobalUUID];
  [v7 setString:v32 forKey:*MEMORY[0x1E4F8C410]];

  uint64_t v33 = [v28 title];
  [v7 setString:v33 forKey:*MEMORY[0x1E4F8C458]];

  uint64_t v34 = [v28 accessibilityDescription];
  [v7 setString:v34 forKey:*MEMORY[0x1E4F8C308]];

  uint64_t v35 = [v28 timeZoneName];
  [v7 setString:v35 forKey:*MEMORY[0x1E4F8C448]];

  uint64_t v36 = [v28 timeZoneOffset];
  uint64_t v37 = [v36 intValue];
  [v7 setInt32:v37 forKey:*MEMORY[0x1E4F8C450]];

  uint64_t v38 = [v28 longDescription];
  [v7 setString:v38 forKey:*MEMORY[0x1E4F8C378]];

  os_log_type_t v39 = [v28 originalFilename];
  [v7 setString:v39 forKey:*MEMORY[0x1E4F8C400]];

  uint64_t v40 = [v28 placeAnnotationData];
  [v7 setData:v40 forKey:*MEMORY[0x1E4F8C408]];

  if ([v28 importedBy])
  {
    unsigned __int16 v41 = [v28 importedBy];
    [v7 setUInt16:v41 forKey:*MEMORY[0x1E4F8C3A8]];
  }
  uint64_t v42 = [(PLManagedAsset *)self _mediaGroupUUIDForPersistence];
  [v7 setString:v42 forKey:*MEMORY[0x1E4F8C3E8]];
  uint64_t v43 = [v28 spatialOverCaptureGroupIdentifier];
  [v7 setString:v43 forKey:*MEMORY[0x1E4F8C430]];

  char v44 = [v28 syndicationIdentifier];
  [v7 setString:v44 forKey:*MEMORY[0x1E4F8C440]];

  uint64_t v45 = [v28 syndicationHistory];
  [v7 setUInt16:v45 forKey:*MEMORY[0x1E4F8C438]];
  uint64_t v46 = [v28 sceneAnalysisIsFromPreview];
  [v7 setUInt16:v46 forKey:*MEMORY[0x1E4F8C428]];
  unsigned __int16 v47 = [v28 viewPresentation];
  [v7 setUInt16:v47 forKey:*MEMORY[0x1E4F8C480]];
  uint64_t v48 = (void *)MEMORY[0x1E4F28DB0];
  __int16 v49 = [v28 libraryScopeAssetContributorsToUpdate];
  id v54 = 0;
  id v50 = [v48 archivedDataWithRootObject:v49 requiringSecureCoding:1 error:&v54];
  id v51 = v54;

  if (v51)
  {
    uint64_t v52 = PLBackendGetLog();
    if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v56 = v51;
      _os_log_impl(&dword_19B3C7000, v52, OS_LOG_TYPE_ERROR, "libraryScopeAssetContributorsToUpdate archiving failed: %@", buf, 0xCu);
    }
  }
  else
  {
    [v7 setData:v50 forKey:*MEMORY[0x1E4F8C3D8]];
  }
  [v7 persist];
}

- (void)persistMetadataToFilesystem
{
  if (PLIsAssetsd() && [(PLManagedAsset *)self isValidTypeForPersistence])
  {
    int v3 = [(PLManagedAsset *)self persistedFileSystemAttributesFileURL];
    if (v3)
    {
      id v4 = v3;
      [(PLManagedAsset *)self persistMetadataToFileURL:v3];
      int v3 = v4;
    }
  }
}

- (id)_mediaGroupUUIDFromPersistence:(id)a3
{
  return (id)[a3 stringByReplacingOccurrencesOfString:@"failed-" withString:&stru_1EEB2EB80];
}

- (id)_mediaGroupUUIDForPersistence
{
  int v3 = [(PLManagedAsset *)self mediaGroupUUID];
  if (v3 && [(PLManagedAsset *)self isVideo])
  {
    uint64_t v4 = [NSString stringWithFormat:@"%@%@", @"failed-", v3];

    int v3 = (void *)v4;
  }
  return v3;
}

- (void)didSetCustomLocation
{
  self->_setCustomLocation = 1;
}

- (void)didSetCustomDateCreated
{
  self->_setCustomCreationDate = 1;
}

- (id)addedDateData
{
  id v2 = (void *)MEMORY[0x1E4F28F98];
  int v3 = [(PLManagedAsset *)self addedDate];
  uint64_t v4 = [v2 dataWithPropertyList:v3 format:200 options:0 error:0];

  return v4;
}

- (id)dateCreatedData
{
  id v2 = (void *)MEMORY[0x1E4F28F98];
  int v3 = [(PLManagedAsset *)self dateCreated];
  uint64_t v4 = [v2 dataWithPropertyList:v3 format:200 options:0 error:0];

  return v4;
}

- (BOOL)hasLegacyRequiredResourcesLocallyAvailable
{
  int v3 = [(PLManagedObject *)self photoLibrary];
  int v4 = [v3 isCloudPhotoLibraryEnabled];

  if (!v4) {
    return 1;
  }
  return [(PLManagedAsset *)self checkAllResourcesRequiredForCPLDisableWithReachableBlock:0];
}

- (BOOL)hasOriginalFile
{
  int v3 = [MEMORY[0x1E4F28CB8] defaultManager];
  int v4 = [(PLManagedAsset *)self pathForOriginalFile];
  char v5 = [v3 fileExistsAtPath:v4 isDirectory:0];

  return v5;
}

- (BOOL)isValidTypeForPersistence
{
  [MEMORY[0x1E4F8BA10] maskForIsValidForFileSystemPersistence];
  [(PLManagedAsset *)self savedAssetType];
  int v3 = PLValidatedSavedAssetTypeApplies();
  if (v3)
  {
    int v3 = objc_msgSend(MEMORY[0x1E4F8B980], "bundleScopeShouldBePersistedForRebuild:", -[PLManagedAsset bundleScope](self, "bundleScope"));
    if (v3)
    {
      if ([(PLManagedAsset *)self hasOriginalFile])
      {
        LOBYTE(v3) = 1;
      }
      else
      {
        LOBYTE(v3) = [(PLManagedAsset *)self hasDeferredProcessingPreviewFile];
      }
    }
  }
  return v3;
}

- (NSString)uuidDescription
{
  int v3 = NSString;
  int v4 = [(PLManagedAsset *)self objectID];
  char v5 = objc_msgSend(v4, "pl_shortURI");
  uint64_t v6 = [(PLManagedAsset *)self uuid];
  uint64_t v7 = [v3 stringWithFormat:@"<%@ %@>", v5, v6];

  return (NSString *)v7;
}

- (id)_prettyDescription
{
  int v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  int v4 = [(PLManagedAsset *)self objectID];
  char v5 = [v4 URIRepresentation];
  uint64_t v6 = [v5 path];
  uint64_t v7 = [v6 pathComponents];

  if ((unint64_t)[v7 count] >= 2)
  {
    uint64_t v8 = objc_msgSend(v7, "subarrayWithRange:", objc_msgSend(v7, "count") - 2, 2);

    uint64_t v7 = (void *)v8;
  }
  unsigned __int16 v9 = [NSString pathWithComponents:v7];
  if ([(PLManagedAsset *)self isFault])
  {
    id v10 = v9;
  }
  else
  {
    id v10 = [MEMORY[0x1E4F28E78] string];
    [v10 appendString:v9];
    uint64_t v11 = [MEMORY[0x1E4F1CA48] array];
    unsigned int v12 = [(PLManagedAsset *)self _kindDescription];
    if (v12) {
      [v11 addObject:v12];
    }
    long long v13 = [(PLManagedAsset *)self _savedAssetTypeDescription];

    if (v13)
    {
      unsigned __int16 v14 = [(PLManagedAsset *)self _savedAssetTypeDescription];
      [v11 addObject:v14];
    }
    uint64_t v15 = [(PLManagedAsset *)self _hdrTypeDescription];
    if (v15) {
      [v11 addObject:v15];
    }
    if ([v11 count])
    {
      objc_msgSend(v10, "appendString:", @" (");
      uint64_t v16 = [v11 componentsJoinedByString:@", "];
      [v10 appendString:v16];

      [v10 appendString:@""]);
    }
  }
  return v10;
}

- (id)_compactDebugDescription
{
  int v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  int v4 = [(PLManagedAsset *)self objectID];
  char v5 = [v4 URIRepresentation];
  uint64_t v6 = [v5 path];
  uint64_t v7 = [v6 pathComponents];

  if ((unint64_t)[v7 count] >= 2)
  {
    uint64_t v8 = objc_msgSend(v7, "subarrayWithRange:", objc_msgSend(v7, "count") - 2, 2);

    uint64_t v7 = (void *)v8;
  }
  unsigned __int16 v9 = [NSString pathWithComponents:v7];
  id v10 = NSString;
  uint64_t v11 = [(PLManagedAsset *)self uuid];
  unsigned int v12 = [v10 stringWithFormat:@"%@ [%@]", v11, v9];

  return v12;
}

- (id)_kindDescription
{
  unsigned int v2 = [(PLManagedAsset *)self kind];
  if (v2 > 2) {
    return @"unknown";
  }
  else {
    return (id)qword_1E5865950[(unsigned __int16)v2];
  }
}

- (id)_savedAssetTypeDescription
{
  [(PLManagedAsset *)self savedAssetType];
  return (id)PLValidatedSavedAssetTypeDescription();
}

- (id)_hdrTypeDescription
{
  unsigned int v2 = [(PLManagedAsset *)self hdrType];
  if (v2 > 0xB) {
    return @"HDR";
  }
  else {
    return off_1E58658F0[(unsigned __int16)v2];
  }
}

- (void)unregisterForChanges
{
  if (self->_isRegisteredForChanges)
  {
    self->_isRegisteredForChanges = 0;
    id v3 = +[PLChangeNotificationCenter defaultCenter];
    [(PLManagedAsset *)self removeObserver:v3 forKeyPath:@"cloudComments" context:&PLChangeNotificationCenterKVOContext];
    [(PLManagedAsset *)self removeObserver:v3 forKeyPath:@"likeComments" context:&PLChangeNotificationCenterKVOContext];
  }
}

- (void)registerForChanges
{
  if ([(PLManagedObject *)self isRegisteredWithUserInterfaceContext]
    && [(PLManagedAsset *)self isCloudSharedAsset]
    && !self->_isRegisteredForChanges)
  {
    self->_isRegisteredForChanges = 1;
    id v3 = +[PLChangeNotificationCenter defaultCenter];
    [(PLManagedAsset *)self addObserver:v3 forKeyPath:@"cloudComments" options:8 context:&PLChangeNotificationCenterKVOContext];
    [(PLManagedAsset *)self addObserver:v3 forKeyPath:@"likeComments" options:8 context:&PLChangeNotificationCenterKVOContext];
  }
}

- (BOOL)_isValidUTI:(id)a3 forService:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (-[PLManagedAsset isPhoto](self, "isPhoto") && ![v7 caseInsensitiveCompare:@"MMS"])
  {
    id v10 = [MEMORY[0x1E4F8CDF8] typeWithIdentifier:v6];
    if (([v10 isEqual:*MEMORY[0x1E4F44410]] & 1) != 0
      || ([v10 isEqual:*MEMORY[0x1E4F44460]] & 1) != 0)
    {
      char v8 = 1;
    }
    else
    {
      char v8 = [v10 isEqual:*MEMORY[0x1E4F443D0]];
    }
  }
  else
  {
    char v8 = 1;
  }

  return v8;
}

- (NSObject)inflightImage
{
  if ([(PLManagedAsset *)self isInFlight])
  {
    id v3 = [(PLManagedAsset *)self inflightImagePath];

    if (v3)
    {
      id v4 = objc_alloc(MEMORY[0x1E4F1C9B8]);
      char v5 = [(PLManagedAsset *)self inflightImagePath];
      id v6 = (void *)[v4 initWithContentsOfFile:v5 options:1 error:0];

      if ([v6 length]) {
        id v7 = (void *)DCIM_newPLImageWithData();
      }
      else {
        id v7 = 0;
      }

      if (v7) {
        goto LABEL_14;
      }
      goto LABEL_10;
    }
    id v7 = [(PLManagedAsset *)self inflightImageInMemory];
    if (!v7)
    {
LABEL_10:
      char v8 = [(PLManagedAsset *)self managedObjectContext];
      [v8 stalenessInterval];
      double v10 = v9;
      [v8 setStalenessInterval:0.0];
      [v8 refreshObject:self mergeChanges:1];
      [v8 setStalenessInterval:v10];
      uint64_t v11 = [(PLManagedAsset *)self pathForLargeDisplayableImageFile];
      if (v11)
      {
        id v7 = DCIM_newPLImageWithContentsOfFile();
        [(PLManagedAsset *)self setIsInFlight:0];
      }
      else
      {
        id v7 = 0;
      }
    }
  }
  else
  {
    id v7 = 0;
  }
LABEL_14:
  return v7;
}

- (BOOL)isInFlight
{
  id v3 = [(PLManagedAsset *)self inflightImageInMemory];
  if (v3)
  {
    BOOL v4 = 1;
  }
  else
  {
    char v5 = [(PLManagedAsset *)self inflightImagePath];
    if (v5)
    {
      BOOL v4 = 1;
    }
    else
    {
      id v6 = [(PLManagedAsset *)self inflightIndexSheetImage];
      if (v6)
      {
        BOOL v4 = 1;
      }
      else
      {
        id v7 = [(PLManagedAsset *)self inflightMetadata];
        BOOL v4 = v7 != 0;
      }
    }
  }
  return v4;
}

- (void)setIsInFlight:(BOOL)a3
{
  if (!a3)
  {
    [(PLManagedAsset *)self setInflightImageInMemory:0];
    [(PLManagedAsset *)self setInflightImagePath:0];
    [(PLManagedAsset *)self setInflightIndexSheetImage:0];
    [(PLManagedAsset *)self setInflightMetadata:0];
  }
}

- (id)pathToOriginalVideoFile
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if ([(PLManagedAsset *)self isStreamedVideo]
    && ([(PLManagedAsset *)self originalAssetsUUID],
        uint64_t v3 = objc_claimAutoreleasedReturnValue(),
        v3,
        v3))
  {
    BOOL v4 = [(PLManagedObject *)self photoLibrary];
    char v5 = [(PLManagedAsset *)self originalAssetsUUID];
    id v6 = [v4 assetWithUUID:v5];

    if (v6 && (-[PLManagedAsset duration](self, "duration"), double v8 = v7, [v6 duration], v8 == v9))
    {
      double v10 = [v6 pathForVideoFile];
      uint64_t v11 = PLPhotoSharingGetLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        int v13 = 138412290;
        unsigned __int16 v14 = v10;
        _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEBUG, "pathToOriginalVideoFile %@", (uint8_t *)&v13, 0xCu);
      }
    }
    else
    {
      double v10 = 0;
    }
  }
  else
  {
    double v10 = 0;
  }
  return v10;
}

- (NSURL)cachedNonPersistedVideoPlaybackURL
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = self->cachedNonPersistedVideoPlaybackURL;
  BOOL v4 = [(PLManagedAsset *)self cachedNonPersistedVideoPlaybackURLExpiration];
  if (v3)
  {
    char v5 = PLPhotoSharingGetLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [MEMORY[0x1E4F1C9C8] date];
      [v6 timeIntervalSinceDate:v4];
      int v12 = 138412546;
      int v13 = v4;
      __int16 v14 = 2048;
      uint64_t v15 = v7;
      _os_log_impl(&dword_19B3C7000, v5, OS_LOG_TYPE_DEFAULT, "cachedNonPersistedVideoPlaybackURLExpiration %@ %lf", (uint8_t *)&v12, 0x16u);
    }
    double v8 = [MEMORY[0x1E4F1C9C8] date];
    uint64_t v9 = [v4 compare:v8];

    if (v9 != 1)
    {
      double v10 = PLPhotoSharingGetLog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = 138412290;
        int v13 = v4;
        _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_DEFAULT, "cachedNonPersistedVideoPlaybackURL expired on %@", (uint8_t *)&v12, 0xCu);
      }

      uint64_t v3 = 0;
    }
  }

  return v3;
}

- (void)_coordinatesFromDoubles:(double)a3 faceMaxX:(double)a4 faceMinY:(double)a5 faceMaxY:(double)a6 minX:(double *)a7 maxX:(double *)a8 minY:(double *)a9 maxY:(double *)a10
{
  if (*a7 < a3 && *a7 > -1.0) {
    a3 = *a7;
  }
  *a7 = a3;
  double v11 = *a9;
  if (*a9 >= a5 || v11 <= -1.0) {
    double v11 = a5;
  }
  *a9 = v11;
  double v13 = *a8;
  if (*a8 <= a4 || v13 <= -1.0) {
    double v13 = a4;
  }
  *a8 = v13;
  double v15 = *a10;
  if (*a10 <= a6 || v15 <= -1.0) {
    double v15 = a6;
  }
  *a10 = v15;
}

- (void)revalidateFaceAreaPoints
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  unint64_t v42 = 0xBFF0000000000000;
  unint64_t v43 = 0xBFF0000000000000;
  unint64_t v40 = 0xBFF0000000000000;
  unint64_t v41 = 0xBFF0000000000000;
  uint64_t v3 = [(PLManagedAsset *)self detectedFaces];
  uint64_t v4 = [v3 count];

  if (v4)
  {
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    char v5 = [(PLManagedAsset *)self detectedFaces];
    uint64_t v6 = [v5 countByEnumeratingWithState:&v36 objects:v44 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v37;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v37 != v8) {
            objc_enumerationMutation(v5);
          }
          double v10 = *(void **)(*((void *)&v36 + 1) + 8 * i);
          if (([v10 isTorsoOnly] & 1) == 0)
          {
            [v10 centerX];
            double v12 = v11;
            [v10 centerY];
            double v14 = v13;
            [v10 size];
            double v16 = v15 * 0.5;
            double v17 = v12 - v15 * 0.5;
            if (v17 < 0.0) {
              double v17 = 0.0;
            }
            double v18 = v12 + v16;
            if (v12 + v16 > 1.0) {
              double v18 = 1.0;
            }
            double v19 = v14 - v16;
            if (v14 - v16 < 0.0) {
              double v19 = 0.0;
            }
            double v20 = v14 + v16;
            if (v20 > 1.0) {
              double v20 = 1.0;
            }
            [(PLManagedAsset *)self _coordinatesFromDoubles:&v43 faceMaxX:&v41 faceMinY:&v42 faceMaxY:&v40 minX:v17 maxX:v18 minY:v19 maxY:v20];
          }
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v36 objects:v44 count:16];
      }
      while (v7);
    }
LABEL_24:

    goto LABEL_25;
  }
  int v21 = [(PLManagedAsset *)self faceRegions];

  if (v21)
  {
    uint64_t v22 = [(PLManagedAsset *)self faceRegions];
    char v5 = PLManagedAssetDecodeFaceRegions(v22);

    if ([v5 count])
    {
      unint64_t v23 = 0;
      do
      {
        uint64_t v24 = [v5 objectAtIndexedSubscript:v23];
        CGFloat v25 = MEMORY[0x19F38B350]();
        CGFloat v27 = v26;
        CGFloat v29 = v28;
        CGFloat v31 = v30;

        v46.origin.double x = v25;
        v46.origin.double y = v27;
        v46.size.double width = v29;
        v46.size.double height = v31;
        double MinX = CGRectGetMinX(v46);
        v47.origin.double x = v25;
        v47.origin.double y = v27;
        v47.size.double width = v29;
        v47.size.double height = v31;
        double MaxX = CGRectGetMaxX(v47);
        v48.origin.double x = v25;
        v48.origin.double y = v27;
        v48.size.double width = v29;
        v48.size.double height = v31;
        double MinY = CGRectGetMinY(v48);
        v49.origin.double x = v25;
        v49.origin.double y = v27;
        v49.size.double width = v29;
        v49.size.double height = v31;
        [(PLManagedAsset *)self _coordinatesFromDoubles:&v43 faceMaxX:&v41 faceMinY:&v42 faceMaxY:&v40 minX:MinX maxX:MaxX minY:MinY maxY:CGRectGetMaxY(v49)];
        ++v23;
      }
      while ([v5 count] > v23);
    }
    goto LABEL_24;
  }
LABEL_25:
  uint64_t v35 = PLCombineToInt64();
  if ([(PLManagedAsset *)self faceAreaPoints] != v35) {
    [(PLManagedAsset *)self setFaceAreaPoints:v35];
  }
}

- (void)setLibraryScope:(id)a3
{
  id v4 = a3;
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  char v11 = 0;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __34__PLManagedAsset_setLibraryScope___block_invoke;
  v7[3] = &unk_1E5865558;
  void v7[4] = &v8;
  [(PLManagedObject *)self pl_safeSetValue:v4 forKey:@"libraryScope" valueDidChangeHandler:v7];
  if (*((unsigned char *)v9 + 24))
  {
    uint64_t v5 = +[PLLibraryScope participationStateFromLibraryScope:v4];
    uint64_t v6 = [NSNumber numberWithShort:v5];
    [(PLManagedObject *)self pl_safeSetValue:v6 forKey:@"activeLibraryScopeParticipationState" valueDidChangeHandler:0];
  }
  _Block_object_dispose(&v8, 8);
}

uint64_t __34__PLManagedAsset_setLibraryScope___block_invoke(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  return result;
}

- (void)setFaceCrop:(id)a3
{
}

- (void)setFaceAdjustmentVersion:(id)a3
{
}

- (void)setAvalanchePickType:(int)a3
{
  id v4 = [NSNumber numberWithInt:*(void *)&a3];
  [(PLManagedAsset *)self _setAllowedForAnalysisDependentValue:v4 forKey:@"avalanchePickType"];
}

- (void)setSavedAssetType:(signed __int16)a3
{
  uint64_t v3 = a3;
  int v6 = [(PLManagedAsset *)self savedAssetType];
  if (v6 != v3 && v6 == [MEMORY[0x1E4F8BA10] savedAssetTypeForPromoteToGuestAsset])
  {
    uint64_t v7 = [(PLManagedObject *)self photoLibrary];
    uint64_t v8 = [v7 libraryServicesManager];
    uint64_t v9 = [v8 wellKnownPhotoLibraryIdentifier];

    if (v9 != 3)
    {
      uint64_t v10 = [MEMORY[0x1E4F28B00] currentHandler];
      [v10 handleFailureInMethod:a2, self, @"PLManagedAsset.m", 4149, @"Invalid parameter not satisfying: %@", @"self.photoLibrary.libraryServicesManager.wellKnownPhotoLibraryIdentifier == PLWellKnownPhotoLibraryIdentifierSyndication" object file lineNumber description];
    }
  }
  id v11 = [NSNumber numberWithShort:v3];
  [(PLManagedAsset *)self _setAllowedForAnalysisDependentValue:v11 forKey:@"savedAssetType"];
}

- (void)setTrashedState:(signed __int16)a3
{
  id v4 = [NSNumber numberWithShort:a3];
  [(PLManagedAsset *)self _setAllowedForAnalysisDependentValue:v4 forKey:@"trashedState"];
}

- (void)setHidden:(BOOL)a3
{
  id v4 = [NSNumber numberWithBool:a3];
  [(PLManagedAsset *)self _setAllowedForAnalysisDependentValue:v4 forKey:@"hidden"];
}

- (void)_setAllowedForAnalysisDependentValue:(id)a3 forKey:(id)a4
{
  id v7 = a3;
  id v8 = a4;
  if (!v8)
  {
    uint64_t v9 = [MEMORY[0x1E4F28B00] currentHandler];
    [v9 handleFailureInMethod:a2, self, @"PLManagedAsset.m", 4124, @"Invalid parameter not satisfying: %@", @"key" object file lineNumber description];
  }
  objc_initWeak(&location, self);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __62__PLManagedAsset__setAllowedForAnalysisDependentValue_forKey___block_invoke;
  v10[3] = &unk_1E5865530;
  objc_copyWeak(&v11, &location);
  [(PLManagedObject *)self pl_safeSetValue:v7 forKey:v8 valueDidChangeHandler:v10];
  objc_destroyWeak(&v11);
  objc_destroyWeak(&location);
}

void __62__PLManagedAsset__setAllowedForAnalysisDependentValue_forKey___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained calculateAllowedForAnalysis];
  unsigned int v2 = [WeakRetained additionalAttributes];
  int v3 = [v2 allowedForAnalysis];

  if (v1 != v3)
  {
    id v4 = [WeakRetained additionalAttributes];
    [v4 setAllowedForAnalysis:v1];
  }
}

- (void)setUuid:(id)a3
{
  id v4 = a3;
  objc_initWeak(&location, self);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __26__PLManagedAsset_setUuid___block_invoke;
  v6[3] = &unk_1E5866040;
  objc_copyWeak(&v8, &location);
  id v5 = v4;
  id v7 = v5;
  [(PLManagedObject *)self pl_safeSetValue:v5 forKey:@"uuid" valueDidChangeHandler:v6];

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __26__PLManagedAsset_setUuid___block_invoke(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v3 = objc_msgSend(WeakRetained, "analysisStates", 0);

  uint64_t v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * v7++) setAssetUUID:*(void *)(a1 + 32)];
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

- (void)_dateCreatedDidChange:(id)a3
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  [v4 timeIntervalSinceReferenceDate];
  double v6 = v5;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v7 = [(PLManagedAsset *)self analysisStates];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v17;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v11++) setSortToken:v6];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v9);
  }

  double v12 = [(PLManagedAsset *)self mediaAnalysisAttributesInsertingIfNecessary];
  [v12 setAssetDateCreated:v4];
  uint64_t v13 = [(PLManagedAsset *)self additionalAttributes];
  [v13 setInferredTimeZoneOffset:0];

  cachedDateCreated = self->_cachedDateCreated;
  self->_cachedDateCreated = 0;

  cachedLocalDateCreated = self->_cachedLocalDateCreated;
  self->_cachedLocalDateCreated = 0;
}

- (void)setDateCreated:(id)a3
{
  id v4 = a3;
  objc_initWeak(&location, self);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __33__PLManagedAsset_setDateCreated___block_invoke;
  v6[3] = &unk_1E5866040;
  objc_copyWeak(&v8, &location);
  id v5 = v4;
  id v7 = v5;
  [(PLManagedObject *)self pl_safeSetValue:v5 forKey:@"dateCreated" valueDidChangeHandler:v6];

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __33__PLManagedAsset_setDateCreated___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _dateCreatedDidChange:*(void *)(a1 + 32)];
}

- (void)setMoment:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedObject *)self photoLibrary];
  BOOL v6 = [(PLManagedAsset *)self hasLibraryScope];
  id v7 = [v5 libraryServicesManager];
  id v8 = [v7 databaseContext];
  uint64_t v9 = [v8 momentLibrary];
  BOOL v10 = v5 == v9;

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __28__PLManagedAsset_setMoment___block_invoke;
  v12[3] = &unk_1E5865508;
  BOOL v14 = v10;
  BOOL v15 = v6;
  void v12[4] = self;
  id v13 = v4;
  id v11 = v4;
  [(PLManagedObject *)self pl_safeSetValue:v11 forKey:@"moment" valueDidChangeHandler:v12];
}

void __28__PLManagedAsset_setMoment___block_invoke(uint64_t a1, void *a2)
{
  id v7 = a2;
  if (*(unsigned char *)(a1 + 48))
  {
    int v3 = objc_alloc_init(PLSharedAssetsContainerIncrementalChange);
    [(PLSharedAssetsContainerIncrementalChange *)v3 setCollectionChangeType:1];
    uint64_t v4 = *(unsigned char *)(a1 + 49) ? 1 : 2;
    [(PLSharedAssetsContainerIncrementalChange *)v3 setSharingChange:v4];
    [(PLSharedAssetsContainerIncrementalChange *)v3 setSuggestionStateChange:0];
    -[PLSharedAssetsContainerIncrementalChange setMediaType:](v3, "setMediaType:", [*(id *)(a1 + 32) kind] != 0);
    [*(id *)(a1 + 40) reportSharedAssetContainerIncrementalChange:v3 forAllAssetsCountKey:@"assetsCount"];

    if (*(unsigned char *)(a1 + 48))
    {
      id v5 = objc_alloc_init(PLSharedAssetsContainerIncrementalChange);
      [(PLSharedAssetsContainerIncrementalChange *)v5 setCollectionChangeType:2];
      if (*(unsigned char *)(a1 + 49)) {
        uint64_t v6 = 1;
      }
      else {
        uint64_t v6 = 2;
      }
      [(PLSharedAssetsContainerIncrementalChange *)v5 setSharingChange:v6];
      [(PLSharedAssetsContainerIncrementalChange *)v5 setSuggestionStateChange:0];
      -[PLSharedAssetsContainerIncrementalChange setMediaType:](v5, "setMediaType:", [*(id *)(a1 + 32) kind] != 0);
      [v7 reportSharedAssetContainerIncrementalChange:v5 forAllAssetsCountKey:@"assetsCount"];
    }
  }
}

- (BOOL)isTrashed
{
  return [(PLManagedAsset *)self trashedState] != 0;
}

- (BOOL)hasGPS
{
  return 0;
}

- (void)setOriginalAsset:(id)a3
{
  id v4 = [a3 uuid];
  [(PLManagedAsset *)self setOriginalAssetsUUID:v4];
}

- (PLManagedAsset)originalAsset
{
  int v3 = [(PLManagedAsset *)self originalAssetsUUID];
  id v4 = [(PLManagedObject *)self photoLibrary];
  id v5 = +[PLManagedAsset assetWithUUID:v3 inLibrary:v4];

  return (PLManagedAsset *)v5;
}

- (CGSize)originalImageSize
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  int v3 = [v2 originalWidth];
  [v3 doubleValue];
  double v5 = v4;
  uint64_t v6 = [v2 originalHeight];
  [v6 doubleValue];
  double v8 = v7;

  double v9 = v5;
  double v10 = v8;
  result.double height = v10;
  result.double width = v9;
  return result;
}

- (BOOL)isOriginalSRGB
{
  int v3 = [(PLManagedAsset *)self originalColorSpace];

  if (!v3) {
    return 1;
  }
  double v4 = [(PLManagedAsset *)self originalColorSpace];
  char v5 = [v4 isEqualToString:@"sRGB IEC61966-2.1"];

  return v5;
}

- (int64_t)originalImageOrientation
{
  [(PLManagedAsset *)self originalOrientation];
  return PLImageOrientationFromExifOrientation();
}

- (void)didSave
{
  self->_setCustomCreationDate = 0;
  self->_setCustomLocation = 0;
  v2.receiver = self;
  v2.super_class = (Class)PLManagedAsset;
  [(PLManagedObject *)&v2 didSave];
}

- (id)duplicateAlbum
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  int v3 = [(PLManagedObject *)self photoLibrary];
  double v4 = [v3 libraryServicesManager];

  if (v4) {
    BOOL v5 = +[PLDuplicateProcessor isDuplicateProcessorEnabledForLibraryServicesManager:v4];
  }
  else {
    BOOL v5 = 1;
  }
  uint64_t v6 = [(PLManagedAsset *)self albums];

  id v7 = 0;
  if (v6 && v5)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    double v8 = [(PLManagedAsset *)self albums];
    id v7 = (id)[v8 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v7)
    {
      uint64_t v9 = *(void *)v14;
      while (2)
      {
        for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v14 != v9) {
            objc_enumerationMutation(v8);
          }
          id v11 = *(void **)(*((void *)&v13 + 1) + 8 * i);
          if ([v11 isDuplicateAlbum])
          {
            id v7 = v11;
            goto LABEL_16;
          }
        }
        id v7 = (id)[v8 countByEnumeratingWithState:&v13 objects:v17 count:16];
        if (v7) {
          continue;
        }
        break;
      }
    }
LABEL_16:
  }
  return v7;
}

- (void)removeFromDuplicateAlbum
{
  id v4 = [(PLManagedAsset *)self duplicateAlbum];
  if (v4)
  {
    [(PLManagedAsset *)self setDuplicateAssetVisibilityState:0];
    int v3 = [v4 mutableAssets];
    [v3 removeObject:self];
  }
}

- (void)_resetAllMediaProcessingVersionsIncludingVideo:(BOOL)a3
{
  BOOL v3 = a3;
  for (uint64_t i = 0; i != 7; ++i)
  {
    unint64_t v6 = qword_19BA9A7C8[i];
    if (v6 > 0x11) {
      continue;
    }
    if (((1 << v6) & 0x1140C) != 0)
    {
      __int16 v7 = 1;
LABEL_5:
      PLResetMediaProcessingStateOnAsset(v6, self, v7);
      continue;
    }
    if (v6 == 1)
    {
      if (v3)
      {
        __int16 v7 = 10305;
        goto LABEL_5;
      }
    }
    else if (v6 == 17)
    {
      __int16 v7 = 5121;
      goto LABEL_5;
    }
  }
}

- (void)_resetMediaAnalysisStateOnEditIncludingVideo:(BOOL)a3
{
  BOOL v3 = a3;
  [(PLManagedAsset *)self _clearOverallAestheticScore];
  [(PLManagedAsset *)self _deleteComputedAttributes];
  [(PLManagedAsset *)self _clearPreferredCropRect];
  [(PLManagedAsset *)self _clearAcceptableCropRect];
  [(PLManagedAsset *)self removeAllStillFrameSceneClassifications];
  [(PLManagedAsset *)self _reloadWidgetTimelineIfNeeded];
  [(PLManagedAsset *)self removeFromDuplicateAlbum];
  [(PLManagedAsset *)self _clearStickerConfidenceAttributes];
  [(PLManagedAsset *)self _resetAllMediaProcessingVersionsIncludingVideo:v3];
  if (v3)
  {
    [(PLManagedAsset *)self removeAllTemporalSceneClassifications];
  }
}

- (void)_duplicateProcessingChanges:(id)a3
{
  id v21 = a3;
  id v4 = [(PLManagedObject *)self photoLibrary];
  BOOL v5 = [v4 libraryServicesManager];
  BOOL v6 = +[PLDuplicateProcessor isDuplicateProcessorEnabledForLibraryServicesManager:v5];

  if (v6)
  {
    __int16 v7 = (void *)MEMORY[0x19F38D3B0]();
    double v8 = [v21 objectForKeyedSubscript:@"hidden"];

    uint64_t v9 = [v21 objectForKeyedSubscript:@"trashedState"];

    double v10 = [v21 objectForKeyedSubscript:@"activeLibraryScopeParticipationState"];

    if (v8)
    {
      if ([(PLManagedAsset *)self hidden]) {
        goto LABEL_8;
      }
      if (!v9) {
        goto LABEL_10;
      }
    }
    else if (!v9)
    {
LABEL_11:
      if (v10)
      {
        [(PLManagedAsset *)self removeFromDuplicateAlbum];
LABEL_15:
        int v11 = 1;
        goto LABEL_19;
      }
      if (+[PLDuplicateAsset isDuplicateAssetSortChangedObject:self])
      {
        double v12 = [(PLManagedAsset *)self duplicateAlbum];
        [v12 sortAssets];
      }
LABEL_18:
      int v11 = 0;
LABEL_19:
      uint64_t v13 = [v21 objectForKeyedSubscript:@"kindSubtype"];

      if (v13)
      {
        int v14 = [(PLManagedAsset *)self kindSubtype];
        uint64_t v13 = 4 * (v14 == 10);
        uint64_t v15 = 4 * (v14 != 10);
        int v11 = 1;
      }
      else
      {
        uint64_t v15 = 0;
      }
      long long v16 = [v21 objectForKeyedSubscript:@"kind"];

      if (v16)
      {
        if ([(PLManagedAsset *)self kind] == 1
          || [(PLManagedAsset *)self kind] == 2)
        {
          uint64_t v13 = v13 | 2;
        }
        else
        {
          uint64_t v15 = v15 | 2;
        }
        int v11 = 1;
      }
      long long v17 = [v21 objectForKeyedSubscript:@"playbackStyle"];

      if (v17)
      {
        int v18 = [(PLManagedAsset *)self playbackStyle];
        if (v18 == 2) {
          uint64_t v13 = v13 | 8;
        }
        else {
          uint64_t v13 = v13;
        }
        if (v18 == 2) {
          uint64_t v15 = v15;
        }
        else {
          uint64_t v15 = v15 | 8;
        }
      }
      else if (!v11)
      {
LABEL_39:
        goto LABEL_40;
      }
      if (v13 | v15)
      {
        long long v19 = [(PLManagedAsset *)self additionalAttributes];
        [v19 addDuplicateDetectorPerceptualProcessingStates:v13 removeProcessingStates:v15];
      }
      double v20 = [(PLManagedObject *)self photoLibrary];
      +[PLDuplicateProcessor signalBackgroundJobServiceDuplicateProcessingWithLibrary:v20];

      goto LABEL_39;
    }
    if (![(PLManagedAsset *)self isInTrash])
    {
LABEL_10:
      if (([(PLManagedAsset *)self hidden] & 1) == 0
        && ![(PLManagedAsset *)self isInTrash]
        && !v10)
      {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
LABEL_8:
    if (!v10)
    {
      [(PLManagedAsset *)self removeFromDuplicateAlbum];
      goto LABEL_18;
    }
    goto LABEL_10;
  }
LABEL_40:
}

- (void)_recordAssetPersonEdgeAndSocialGroupContainmentUpdateIfNeededWithChangedValues:(id)a3 inContext:(id)a4
{
  id v11 = a3;
  id v6 = a4;
  __int16 v7 = [v11 objectForKey:@"hidden"];
  if (v7
    || ([v11 objectForKey:@"trashedState"],
        (__int16 v7 = objc_claimAutoreleasedReturnValue()) != 0))
  {

LABEL_4:
    double v8 = [v6 delayedSaveActions];
    [v8 recordAssetPersonEdgeUpdateNeededForAsset:self];

    uint64_t v9 = [v6 delayedSaveActions];
    [v9 recordSocialGroupContainmentUpdateNeededForAsset:self];

    goto LABEL_5;
  }
  double v10 = [v11 objectForKey:@"visibilityState"];

  if (v10) {
    goto LABEL_4;
  }
LABEL_5:
}

- (void)willSave
{
  v170[1] = *MEMORY[0x1E4F143B8];
  v164.receiver = self;
  v164.super_class = (Class)PLManagedAsset;
  [(PLManagedObject *)&v164 willSave];
  if ([(PLManagedAsset *)self isDeleted]
    && ((PLIsAssetsd() & 1) != 0 || MEMORY[0x19F38C0C0]()))
  {
    BOOL v3 = [(PLManagedAsset *)self managedObjectContext];
    +[PLGraphEdge cleanupDanglingReferencesInManagedObjectContext:v3];
  }
  id v4 = [(PLManagedAsset *)self managedObjectContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    BOOL v5 = [v4 userInfo];
    id v6 = +[PLClientServerTransaction transactionFromUserInfo:v5];

    if (v6) {
      [v6 pushChangeScopesBatch];
    }
    __int16 v162 = v6;
    __int16 v7 = [(PLManagedAsset *)self changedValues];
    BOOL v8 = [(PLManagedAsset *)self isSyncableChange];
    uint64_t v9 = [v7 objectForKeyedSubscript:@"modificationDate"];

    if (!v9 && v8)
    {
      double v10 = [MEMORY[0x1E4F1C9C8] date];
      [(PLManagedAsset *)self setModificationDate:v10];
    }
    if ([(PLManagedAsset *)self isDeleted])
    {
LABEL_100:
      uint64_t v61 = [v7 objectForKeyedSubscript:@"savedAssetType"];

      if (v61)
      {
        v170[0] = @"savedAssetType";
        id v62 = [MEMORY[0x1E4F1C978] arrayWithObjects:v170 count:1];
        BOOL v63 = [(PLManagedAsset *)self committedValuesForKeys:v62];

        id v64 = [v63 objectForKeyedSubscript:@"savedAssetType"];
        uint64_t v65 = [v64 shortValue];

        int v66 = [v7 objectForKeyedSubscript:@"savedAssetType"];
        uint64_t v67 = [v66 shortValue];

        if (([MEMORY[0x1E4F8BA10] allowSavedAssetTypeMutationFrom:v65 to:v67] & 1) == 0)
        {
          uint64_t v68 = [(PLManagedObject *)self photoLibrary];
          char v69 = [v68 isUnitTesting];

          if ((v69 & 1) == 0)
          {
            uint64_t v70 = PLBackendGetLog();
            if (os_log_type_enabled(v70, OS_LOG_TYPE_FAULT))
            {
              CFTypeRef v71 = [(PLManagedAsset *)self uuid];
              *(_DWORD *)buf = 138543874;
              id v167 = v71;
              __int16 v168 = 1024;
              *(_DWORD *)v169 = v65;
              *(_WORD *)&v169[4] = 1024;
              *(_DWORD *)&v169[6] = v67;
              _os_log_impl(&dword_19B3C7000, v70, OS_LOG_TYPE_FAULT, "Attempting to modify the saved asset type is not permitted for asset %{public}@. From: %d to: %d", buf, 0x18u);
            }
          }
        }
      }
      uint64_t v72 = [v7 objectForKeyedSubscript:@"videoKeyFrameValue"];

      if (v72)
      {
        [(PLManagedAsset *)self resetKeyFaceOnVideoKeyFrameChange];
        uint64_t v73 = [v7 objectForKeyedSubscript:@"modificationDate"];

        if (!v73)
        {
          long long v74 = [MEMORY[0x1E4F1C9C8] date];
          [(PLManagedAsset *)self setModificationDate:v74];
        }
        if ([(PLManagedAsset *)self isVideo]
          && ![(PLManagedAsset *)self isCloudSharedAsset])
        {
          [(PLManagedAsset *)self videoKeyFrameTime];
          if ((v163 & 0x1D) == 1)
          {
            id v75 = [(PLManagedAsset *)self localVideoKeyFrameResource];

            if (v75)
            {
              id v76 = PLBackendGetLog();
              if (os_log_type_enabled(v76, OS_LOG_TYPE_DEBUG))
              {
                id v77 = [(PLManagedAsset *)self uuid];
                *(_DWORD *)buf = 138543362;
                id v167 = v77;
                _os_log_impl(&dword_19B3C7000, v76, OS_LOG_TYPE_DEBUG, "Pruning local video key frame due to media analsysis key frame time change change for asset: %{public}@", buf, 0xCu);
              }
              [(PLManagedAsset *)self pruneLocalVideoKeyFrameImage];
            }
            else
            {
              id v81 = +[PLResourceInstaller onDemand_installLocalVideoKeyFrameForAsset:self];
            }
          }
          else
          {
            uint64_t v78 = PLBackendGetLog();
            if (os_log_type_enabled(v78, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v79 = [(PLManagedAsset *)self uuid];
              *(_DWORD *)buf = 138543362;
              id v167 = v79;
              _os_log_impl(&dword_19B3C7000, v78, OS_LOG_TYPE_DEBUG, "Pruning and deleting local key frame resource due to media analysis key frame time invalidated for asset: %{public}@", buf, 0xCu);
            }
            [(PLManagedAsset *)self pruneLocalVideoKeyFrameImage];
            id v80 = [(PLManagedAsset *)self localVideoKeyFrameResource];
            [v80 deleteResource];
          }
        }
        [(PLManagedAsset *)self _resetMediaAnalysisStateOnEditIncludingVideo:0];
      }
      if ([(PLManagedAsset *)self _hasBecomeNonVisibleToMemoriesAndPersonsAndSuggestions:v7]&& ![(PLManagedAsset *)self isCloudSharedAsset]&& ![(PLManagedAsset *)self isPlaceholderAsset])
      {
        [(PLManagedAsset *)self fixupMemoriesWithMissingKeyAsset];
        [(PLManagedAsset *)self removeAssetFromRelatedSuggestionsAndFixupSuggestions];
      }
      uint64_t v82 = [v7 objectForKeyedSubscript:@"favorite"];
      if (v82)
      {
      }
      else
      {
        uint64_t v83 = [v7 objectForKeyedSubscript:@"albums"];

        if (!v83)
        {
LABEL_130:
          id v84 = [v7 objectForKeyedSubscript:@"trashedState"];
          if (v84
            || ([v7 objectForKeyedSubscript:@"hidden"],
                (id v84 = objc_claimAutoreleasedReturnValue()) != 0))
          {
          }
          else
          {
            os_signpost_id_t v148 = [v7 objectForKeyedSubscript:@"dateCreated"];

            if (!v148)
            {
LABEL_134:
              uint64_t v87 = [v7 objectForKeyedSubscript:@"detectedFaces"];

              if (v87) {
                [(PLManagedAsset *)self revalidateFaceAreaPoints];
              }
              uint64_t v88 = [v7 objectForKeyedSubscript:@"trashedState"];
              if (v88)
              {
                __int16 v89 = (void *)v88;
                int v90 = [(PLManagedAsset *)self trashedState];

                if (v90 == 2)
                {
                  uint64_t v91 = [v4 delayedSaveActions];
                  [v91 recordAssetForDuetDelete:self];
                }
              }
              uint64_t v92 = [v7 objectForKey:@"modernResources"];
              uint64_t v93 = [v7 objectForKeyedSubscript:@"deferredProcessingNeeded"];

              uint64_t v94 = v93 | v92;
              uint64_t v95 = [v7 objectForKeyedSubscript:@"additionalAttributes.originalResourceChoice"];

              BOOL v96 = (v95 | v92) != 0;
              if (v94) {
                [(PLManagedAsset *)self recalculateImageRequestHints];
              }
              if (v96) {
                [(PLManagedAsset *)self recalculateRAWBadgeAttribute];
              }
              __int16 v97 = [v7 objectForKeyedSubscript:@"adjustmentTimestamp"];

              if (v97)
              {
                [(PLManagedAsset *)self _resetMediaAnalysisStateOnEditIncludingVideo:1];
                uint64_t v98 = [(PLManagedAsset *)self additionalAttributes];
                int v99 = [v98 hasDuplicateMatchingData];

                if (v99)
                {
                  uint64_t v100 = [(PLManagedAsset *)self additionalAttributes];
                  [v100 setDuplicateMatchingData:0 duplicateMatchingAlternateData:0 processingSucceeded:1];
                }
                if (![(PLManagedAsset *)self isValidForPerceptualProcessing])
                {
                  uint64_t v101 = [(PLManagedObject *)self photoLibrary];
                  +[PLDuplicateProcessor signalBackgroundJobServiceDuplicateProcessingWithLibrary:v101];
                }
              }
              uint64_t v102 = [(PLManagedAsset *)self mediaAnalysisAttributes];

              if (!v102)
              {
                id v103 = PLBackendGetLog();
                if (os_log_type_enabled(v103, OS_LOG_TYPE_FAULT))
                {
                  id v104 = [(NSManagedObject *)self pl_shortDescription];
                  *(_DWORD *)buf = 138412290;
                  id v167 = v104;
                  _os_log_impl(&dword_19B3C7000, v103, OS_LOG_TYPE_FAULT, "mediaAnalysisAttributes is unexpectedly nil: %@", buf, 0xCu);
                }
              }
              uint64_t v105 = [v7 objectForKeyedSubscript:@"mediaAnalysisAttributes"];

              if (v105)
              {
                uint64_t v106 = PLBackendGetLog();
                if (os_log_type_enabled(v106, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl(&dword_19B3C7000, v106, OS_LOG_TYPE_DEBUG, "Pruning local video key frame due to media analysis attributes relationship change", buf, 2u);
                }

                [(PLManagedAsset *)self pruneLocalVideoKeyFrameImage];
              }
              [(PLManagedAsset *)self ensurePlaybackStyleConsistencyWithKindSubtype:v7];
              uint64_t v107 = [(PLManagedObject *)self photoLibrary];
              int v108 = [v107 libraryServicesManager];

              if ([v108 wellKnownPhotoLibraryIdentifier] == 3
                && ([(PLManagedAsset *)self isDeleted] & 1) == 0)
              {
                uint64_t v109 = v92;
                v165[0] = @"savedAssetType";
                v165[1] = @"syndicationState";
                id v110 = [MEMORY[0x1E4F1C978] arrayWithObjects:v165 count:2];
                uint64_t v111 = [(PLManagedAsset *)self committedValuesForKeys:v110];

                uint64_t v112 = objc_opt_class();
                v113 = [v111 objectForKeyedSubscript:@"savedAssetType"];
                __int16 v114 = [v113 integerValue];
                uint64_t v115 = [v111 objectForKeyedSubscript:@"syndicationState"];
                LODWORD(v112) = objc_msgSend(v112, "shouldSyncAssetToSPLWithSavedAssetType:syndicationState:", v114, (unsigned __int16)objc_msgSend(v115, "integerValue"));

                if (v112 != [(PLManagedAsset *)self shouldSyncToSPL])
                {
                  BOOL v116 = [(PLManagedAsset *)self uuid];
                  id v117 = +[PLBackgroundJobWorkItem insertBackgroundJobWorkItemIfNeededWithIdentifier:v116 jobType:0 jobFlags:1 inManagedObjectContext:v4];

                  if (v117)
                  {
                    id v118 = PLSyndicationGetLog();
                    if (os_log_type_enabled(v118, OS_LOG_TYPE_DEBUG))
                    {
                      BOOL v119 = [(PLManagedAsset *)self uuid];
                      BOOL v120 = [(PLManagedAsset *)self shouldSyncToSPL];
                      id v121 = @"should not";
                      if (v120) {
                        id v121 = @"should";
                      }
                      *(_DWORD *)buf = 138412546;
                      id v167 = v119;
                      __int16 v168 = 2112;
                      *(void *)v169 = v121;
                      _os_log_impl(&dword_19B3C7000, v118, OS_LOG_TYPE_DEBUG, "GuestAssetSync: property changes to asset: %@ indicate %@ sync to SPL, triggering update", buf, 0x16u);
                    }
                  }
                  unint64_t v122 = [v108 backgroundJobService];
                  int v123 = [(PLManagedObject *)self photoLibrary];
                  [v122 signalBackgroundProcessingNeededOnLibrary:v123];
                }
                uint64_t v92 = v109;
              }
              if ([(PLManagedAsset *)self shouldPurgeSyndicationResourcesWithChangedValues:v7])
              {
                [(PLManagedAsset *)self purgeSyndicationResourcesAfterMediaAnalysisProcessing];
              }
              if (PLPlatformMomentsSupported())
              {
                id v124 = [v4 delayedSaveActions];
                [v124 recordAssetForMomentUpdate:self];
              }
              if (PLPlatformCloudFeedSupported())
              {
                uint64_t v125 = [v4 delayedSaveActions];
                [v125 recordAssetForCloudFeedUpdate:self];
              }
              if (PLPlatformSearchSupported())
              {
                uint64_t v126 = [v4 delayedSaveActions];
                [v126 recordAssetForSearchIndexUpdate:self];
              }
              if (([(PLManagedAsset *)self isDeleted] & 1) == 0) {
                +[PLDelayedSearchIndexUpdates recordAssetIfNeeded:self];
              }
              [v4 recordAvalancheUUIDForUpdate:self];
              uint64_t v127 = [v7 objectForKeyedSubscript:@"trashedState"];
              if (v127
                || ([v7 objectForKeyedSubscript:@"hidden"],
                    (uint64_t v127 = objc_claimAutoreleasedReturnValue()) != 0))
              {
                double v128 = (void *)v127;
                if ([v108 wellKnownPhotoLibraryIdentifier] == 1)
                {
                }
                else
                {
                  uint64_t v129 = [v108 wellKnownPhotoLibraryIdentifier];

                  if (v129) {
                    goto LABEL_185;
                  }
                }
                v130 = PLBackendGetLog();
                if (os_log_type_enabled(v130, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl(&dword_19B3C7000, v130, OS_LOG_TYPE_DEBUG, "Signaling delayed background processing needed for LockedResourceWorker", buf, 2u);
                }

                [v4 recordNeedsBackgroundJobProcessing];
              }
LABEL_185:
              uint64_t v131 = [(PLManagedObject *)self photoLibrary];
              id v132 = [v131 libraryServicesManager];
              id v133 = [v132 modelMigrator];
              if ([v133 isPostProcessingLightweightMigration])
              {
              }
              else
              {
                id v134 = v4;
                uint64_t v135 = v92;
                id v136 = [(PLManagedObject *)self photoLibrary];
                id v137 = [v136 thumbnailManager];
                if (([v137 isRebuildingThumbnails] & 1) != 0
                  || !PLCameraPreviewWellSupportedOnCurrentDevice())
                {

                  uint64_t v92 = v135;
                  id v4 = v134;
                }
                else
                {
                  char v161 = [(PLManagedAsset *)self isInserted];

                  uint64_t v92 = v135;
                  id v4 = v134;
                  if (v161) {
                    goto LABEL_195;
                  }
                  CGImageSourceRef v138 = [v134 userInfo];
                  id v139 = [v138 objectForKeyedSubscript:@"com.apple.photos.PLCameraPreviewWellNeedsUpdate"];
                  char v140 = [v139 BOOLValue];

                  if (v140) {
                    goto LABEL_195;
                  }
                  CFURLRef v141 = [(PLManagedObject *)self photoLibrary];
                  char v142 = [v141 libraryServicesManager];
                  uint64_t v143 = [v142 cameraPreviewWellManager];
                  int v144 = [v143 shouldReconsiderCameraPreviewWellImageForUpdatedAsset:self thumbnailWasGenerated:0];

                  if (!v144)
                  {
LABEL_195:
                    if (_os_feature_enabled_impl())
                    {
                      if (([(PLManagedAsset *)self isDeleted] & 1) == 0)
                      {
                        if (PLPlatformMomentsSupported())
                        {
                          uint64_t v145 = [(PLManagedAsset *)self highlightBeingExtendedAssets];
                          if (v145)
                          {
                            id v146 = (void *)v145;
                            uint64_t v147 = [v7 objectForKeyedSubscript:@"dateCreated"];
                            if (v147)
                            {

                              goto LABEL_204;
                            }
                            id v149 = [v7 objectForKeyedSubscript:@"activeLibraryScopeParticipationState"];

                            if (v149)
                            {
LABEL_204:
                              unsigned __int16 v150 = [(PLManagedAsset *)self highlightBeingExtendedAssets];
                              int v151 = [v150 kind];

                              if (!v151)
                              {
                                id v152 = [(PLManagedAsset *)self highlightBeingExtendedAssets];
                                [v152 recalculateCollageAssets];
                              }
                            }
                          }
                        }
                      }
                    }
                    if (v162) {
                      [v162 popChangeScopesBatch];
                    }

                    goto LABEL_209;
                  }
                  uint64_t v131 = [v4 userInfo];
                  [v131 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:@"com.apple.photos.PLCameraPreviewWellNeedsUpdate"];
                }
              }

              goto LABEL_195;
            }
          }
          id v85 = [v4 delayedSaveActions];
          [v85 recordAssetForAlbumCountsDateRangeAndKeyAssetsUpdate:self];

          uint64_t v86 = [v4 delayedSaveActions];
          [v86 recordAssetForImportSessionCountsAndDateRangeUpdate:self];

          goto LABEL_134;
        }
      }
      [(PLManagedAsset *)self removeAssetFromUserAlbumSuggestionIfNeededWithChangedValues:v7];
      goto LABEL_130;
    }
    uint64_t v11 = [v7 objectForKeyedSubscript:@"libraryScope"];
    if (v11)
    {
      double v12 = (void *)v11;
      uint64_t v13 = [v7 objectForKeyedSubscript:@"activeLibraryScopeParticipationState"];

      if (!v13)
      {
        int v14 = PLBackendGetLog();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_FAULT, "-[PLManagedAsset willSave] detected a change with changedValues[libraryScope] but no corresponding change to activeLibraryScopeParticipationState.", buf, 2u);
        }

        uint64_t v15 = [(PLManagedAsset *)self libraryScope];
        uint64_t v16 = +[PLLibraryScope participationStateFromLibraryScope:v15];

        long long v17 = [NSNumber numberWithShort:v16];
        [(PLManagedObject *)self pl_safeSetValue:v17 forKey:@"activeLibraryScopeParticipationState" valueDidChangeHandler:0];
      }
    }
    if ([(PLManagedAsset *)self isPhoto])
    {
      if ([(PLManagedAsset *)self isInserted]
        && [(PLManagedAsset *)self isCloudSharedAsset]
        && [(PLManagedAsset *)self visibilityState] != 2)
      {
        [(PLManagedAsset *)self setVisibilityState:2];
      }
      int v18 = [v7 objectForKeyedSubscript:@"avalanchePickType"];
      if (v18)
      {
        BOOL v159 = 1;
      }
      else
      {
        long long v19 = [v7 objectForKeyedSubscript:@"avalancheUUID"];
        BOOL v159 = v19 != 0;
      }
    }
    else
    {
      BOOL v159 = 0;
    }
    uint64_t v20 = [v7 objectForKeyedSubscript:@"dateCreated"];
    if (v20)
    {
      id v21 = (void *)v20;
      uint64_t v22 = [v7 objectForKeyedSubscript:@"sortToken"];

      if (!v22)
      {
        unint64_t v23 = [(PLManagedAsset *)self dateCreated];
        [v23 timeIntervalSinceReferenceDate];
        double v25 = v24;

        [(PLManagedAsset *)self sortToken];
        if (vabdd_f64(v26, v25) > 2.22044605e-16) {
          [(PLManagedAsset *)self setSortToken:v25];
        }
      }
    }
    CGFloat v27 = [v7 objectForKeyedSubscript:@"hidden"];

    double v28 = [v7 objectForKeyedSubscript:@"favorite"];

    CGFloat v29 = [v7 objectForKeyedSubscript:@"trashedState"];

    int v156 = [v7 objectForKeyedSubscript:@"deferredProcessingNeeded"];

    double v30 = [v7 objectForKeyedSubscript:@"addedDate"];

    if ([(PLManagedAsset *)self isCloudSharedAsset])
    {
      BOOL v158 = 0;
    }
    else
    {
      CGFloat v31 = [v7 objectForKeyedSubscript:@"cloudAssetGUID"];
      BOOL v158 = v31 != 0;
    }
    uint64_t v32 = [v7 objectForKeyedSubscript:@"mediaGroupUUID"];

    uint64_t v33 = [v7 objectForKeyedSubscript:@"videoCpDurationValue"];
    if (v33)
    {
      BOOL v157 = 1;
    }
    else
    {
      uint64_t v34 = v30;
      uint64_t v35 = v32;
      long long v36 = [v7 objectForKeyedSubscript:@"additionalAttributes.videoCpDurationTimescale"];
      if (v36)
      {
        BOOL v157 = 1;
      }
      else
      {
        long long v37 = [v7 objectForKeyedSubscript:@"additionalAttributes.videoCpDisplayValue"];
        if (v37)
        {
          BOOL v157 = 1;
        }
        else
        {
          long long v38 = [v7 objectForKeyedSubscript:@"additionalAttributes.videoCpDisplayTimescale"];
          BOOL v157 = v38 != 0;

          long long v37 = 0;
        }
      }
      uint64_t v32 = v35;
      double v30 = v34;
    }

    long long v39 = [v7 objectForKeyedSubscript:@"videoCpVisibilityState"];

    id v155 = [v7 objectForKeyedSubscript:@"libraryScopeShareState"];

    unint64_t v40 = [v7 objectForKeyedSubscript:@"trashedReason"];

    [(PLManagedAsset *)self _recordAssetPersonEdgeAndSocialGroupContainmentUpdateIfNeededWithChangedValues:v7 inContext:v4];
    if (v27) {
      char v41 = 1;
    }
    else {
      char v41 = v159;
    }
    if ((v41 & 1) == 0 && !v28 && !v29 && !self->_setCustomCreationDate)
    {
      BOOL v46 = !self->_setCustomLocation && v30 == 0;
      int v47 = v158;
      if (!v46) {
        int v47 = 1;
      }
      if (v32) {
        int v47 = 1;
      }
      if (((v47 | v157) & 1) == 0 && !v39 && !v156 && !v155 && !v40)
      {
LABEL_99:
        [(PLManagedAsset *)self _duplicateProcessingChanges:v7];
        goto LABEL_100;
      }
    }
    __int16 v154 = v40;
    unint64_t v42 = [(PLManagedAsset *)self persistedFileSystemAttributesFileURL];
    if (!v42 || ![(PLManagedAsset *)self isValidTypeForPersistence])
    {
LABEL_98:

      goto LABEL_99;
    }
    __int16 v153 = v32;
    unint64_t v43 = [MEMORY[0x1E4F8B900] filesystemPersistenceBatchItemForFileAtURL:v42];
    if (v159)
    {
      unsigned int v44 = [(PLManagedAsset *)self avalancheKind];
      if (v44 < 2)
      {
        __int16 v160 = [(PLManagedAsset *)self avalancheUUID];
        [v43 setUUIDString:v160 forKey:*MEMORY[0x1E4F8C328]];

        unsigned __int16 v45 = [(PLManagedAsset *)self avalanchePickType];
LABEL_70:
        [v43 setUInt16:v45 forKey:*MEMORY[0x1E4F8C320]];
        goto LABEL_71;
      }
      if (v44 == 2)
      {
        unsigned __int16 v45 = 0;
        goto LABEL_70;
      }
    }
LABEL_71:
    if (v27)
    {
      uint64_t v48 = [(PLManagedAsset *)self hidden];
      [v43 setUInt16:v48 forKey:*MEMORY[0x1E4F8C390]];
    }
    if (v28)
    {
      uint64_t v49 = [(PLManagedAsset *)self favorite];
      [v43 setUInt16:v49 forKey:*MEMORY[0x1E4F8C388]];
    }
    if (v29)
    {
      BOOL v50 = [(PLManagedAsset *)self isInTrash];
      [v43 setUInt16:v50 forKey:*MEMORY[0x1E4F8C460]];
    }
    if (v156)
    {
      uint64_t v51 = [(PLManagedAsset *)self deferredProcessingNeeded];
      [v43 setUInt16:v51 forKey:*MEMORY[0x1E4F8C368]];
    }
    if (self->_setCustomCreationDate)
    {
      uint64_t v52 = [(PLManagedAsset *)self dateCreatedData];
      [v43 setData:v52 forKey:*MEMORY[0x1E4F8C348]];
    }
    if (self->_setCustomLocation)
    {
      uint64_t v53 = [(PLManagedAsset *)self locationData];
      [v43 setData:v53 forKey:*MEMORY[0x1E4F8C350]];
    }
    if (v30)
    {
      id v54 = [(PLManagedAsset *)self addedDateData];
      [v43 setData:v54 forKey:*MEMORY[0x1E4F8C310]];
    }
    if (v158)
    {
      uint64_t v55 = [(PLManagedAsset *)self cloudAssetGUID];
      [v43 setString:v55 forKey:*MEMORY[0x1E4F8C330]];
    }
    if (v153)
    {
      id v56 = [(PLManagedAsset *)self _mediaGroupUUIDForPersistence];
      [v43 setString:v56 forKey:*MEMORY[0x1E4F8C3E8]];
    }
    if (v157)
    {
      uint64_t v57 = [(PLManagedAsset *)self videoComplementData];
      [v43 setData:v57 forKey:*MEMORY[0x1E4F8C380]];
    }
    if (v39)
    {
      uint64_t v58 = [(PLManagedAsset *)self videoCpVisibilityState];
      [v43 setUInt16:v58 forKey:*MEMORY[0x1E4F8C478]];
    }
    if (v155)
    {
      uint64_t v59 = [(PLManagedAsset *)self libraryScopeShareState];
      [v43 setUInt64:v59 forKey:*MEMORY[0x1E4F8C3E0]];
    }
    if (v154)
    {
      uint64_t v60 = [(PLManagedAsset *)self trashedReason];
      [v43 setUInt16:v60 forKey:*MEMORY[0x1E4F8C468]];
    }
    [v43 persist];

    goto LABEL_98;
  }
LABEL_209:
}

- (void)recalculateIsRecentlySaved
{
  BOOL v3 = objc_msgSend(NSNumber, "numberWithShort:", -[PLManagedAsset importedBy](self, "importedBy"));
  int v4 = [&unk_1EEBF16B8 containsObject:v3];

  BOOL v5 = [(PLManagedAsset *)self importedByBundleIdentifier];
  int v6 = [v5 isEqualToString:@"com.apple.camera.CameraMessagesApp"];

  id v7 = [NSNumber numberWithBool:(v6 | v4) ^ 1u];
  [(PLManagedObject *)self pl_safeSetValue:v7 forKey:@"isRecentlySaved" valueDidChangeHandler:0];
}

- (void)recalculateIsDetectedScreenshot
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if ([(PLManagedAsset *)self kind] && [(PLManagedAsset *)self kind] != 1)
  {
    uint64_t v5 = 0;
    goto LABEL_25;
  }
  if ([(PLManagedAsset *)self kind])
  {
    if ([(PLManagedAsset *)self kind] != 1
      || [(PLManagedAsset *)self kindSubtype] != 103)
    {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v5 = 1;
    goto LABEL_25;
  }
  if ([(PLManagedAsset *)self kindSubtype] == 10) {
    goto LABEL_10;
  }
LABEL_6:
  BOOL v3 = [(PLManagedObject *)self photoLibrary];
  int v4 = [v3 libraryServicesManager];

  if ([v4 wellKnownPhotoLibraryIdentifier] == 3)
  {
    uint64_t v5 = 0;
  }
  else
  {
    int v6 = [v4 searchIndexingEngine];
    id v7 = [v6 configuration];
    BOOL v8 = [v7 sceneTaxonomyProvider];

    if (!v8)
    {
      uint64_t v9 = PLBackendGetLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
      {
        double v10 = [v4 searchIndexingEngine];
        int v17 = 138543362;
        int v18 = v10;
        _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_FAULT, "configuration.sceneTaxonomyProvider nil on searchIndexingEngine: %{public}@", (uint8_t *)&v17, 0xCu);
      }
    }
    uint64_t v11 = +[PLUtilityAsset utilityAssetFromManagedAsset:self usingPool:0];
    double v12 = objc_msgSend(v8, "searchIndexSceneTaxonomyForSceneAnalysisVersion:", (__int16)objc_msgSend(v11, "sceneAnalysisVersion"));
    id v13 = objc_alloc(MEMORY[0x1E4F8EB38]);
    if (v12) {
      uint64_t v14 = [v13 initWithSceneTaxonomy:v12];
    }
    else {
      uint64_t v14 = objc_msgSend(v13, "initWithSceneAnalysisVersion:", objc_msgSend(v11, "sceneAnalysisVersion"));
    }
    uint64_t v15 = (void *)v14;
    uint64_t v5 = 0;
    if (v11 && v14)
    {
      if (objc_opt_class()) {
        uint64_t v5 = [MEMORY[0x1E4F8EB68] screenshotInferredInAsset:v11 usingSceneModel:v15];
      }
      else {
        uint64_t v5 = 0;
      }
    }
  }
LABEL_25:
  uint64_t v16 = [NSNumber numberWithBool:v5];
  [(PLManagedObject *)self pl_safeSetValue:v16 forKey:@"isDetectedScreenshot" valueDidChangeHandler:0];
}

- (BOOL)_checkForAndAddFrameDropRecoveryForPhotoKitIngest
{
  if ([(PLManagedAsset *)self hasAdjustments]) {
    return 0;
  }
  BOOL v4 = [(PLManagedAsset *)self importedBy] != 1 && [(PLManagedAsset *)self importedBy] != 2;
  uint64_t v5 = (void *)[objc_alloc(MEMORY[0x1E4F1CB18]) initWithSuiteName:@"com.apple.mobileslideshow"];
  int v6 = [v5 BOOLForKey:@"PLFrameDropRecoveryEnableOnOlderDevices"];
  if ((PLPlatformIsFrameDropRecoverySupported() & 1) != 0 || v6)
  {
    if ([(PLManagedAsset *)self videoDeferredProcessingNeeded]) {
      BOOL v3 = 0;
    }
    else {
      BOOL v3 = !v4;
    }
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

- (void)ensurePlaybackStyleConsistencyWithKindSubtype:(id)a3
{
  v9[1] = *MEMORY[0x1E4F143B8];
  BOOL v4 = [a3 objectForKeyedSubscript:@"kindSubtype"];

  if (v4)
  {
    v9[0] = @"kindSubtype";
    uint64_t v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:1];
    int v6 = [(PLManagedAsset *)self committedValuesForKeys:v5];

    id v7 = [v6 objectForKey:@"kindSubtype"];
    __int16 v8 = [v7 intValue];

    if (![(PLManagedAsset *)self kindSubtype] && v8 == 2) {
      [(PLManagedObject *)self pl_safeSetValue:&unk_1EEBED5F0 forKey:@"playbackStyle" valueDidChangeHandler:0];
    }
  }
}

- (void)_reloadWidgetTimelineIfNeeded
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [(PLManagedAsset *)self managedObjectContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    BOOL v4 = [(PLManagedAsset *)self suggestionsBeingKeyAssets];
    uint64_t v5 = (void *)[v4 copy];

    uint64_t v6 = [v5 countByEnumeratingWithState:&v34 objects:v41 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v35;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v35 != v8) {
          objc_enumerationMutation(v5);
        }
        double v10 = *(void **)(*((void *)&v34 + 1) + 8 * v9);
        if ([v10 featuredState] == 1) {
          break;
        }
        if (v7 == ++v9)
        {
          uint64_t v7 = [v5 countByEnumeratingWithState:&v34 objects:v41 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
      int v12 = [v10 type];
      BOOL v11 = v12 != 6;
      if (v12 == 6)
      {
        uint64_t v14 = [v3 delayedSaveActions];
        uint64_t v16 = [v10 uuid];
        [v14 recordWallpaperSuggestionReloadForUUID:v16];
        goto LABEL_16;
      }
      int v13 = [v10 type];
      uint64_t v14 = PLBackendGetLog();
      BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_INFO);
      if (v13 == 7)
      {
        if (!v15)
        {
LABEL_17:

          goto LABEL_18;
        }
        uint64_t v16 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)buf = 138543362;
        unint64_t v40 = v16;
        _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_INFO, "Recording Album widget timeline invalidation due to asset with featured suggestion being adjusted %{public}@", buf, 0xCu);
LABEL_16:

        goto LABEL_17;
      }
      if (v15)
      {
        CGFloat v29 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)buf = 138543362;
        unint64_t v40 = v29;
        _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_INFO, "Recording ForYou widget timeline invalidation due to asset with featured suggestion being adjusted %{public}@", buf, 0xCu);
      }
      double v26 = [v3 delayedSaveActions];
      CGFloat v27 = v26;
      uint64_t v28 = 0;
    }
    else
    {
LABEL_10:
      BOOL v11 = 0;
LABEL_18:

      long long v32 = 0u;
      long long v33 = 0u;
      long long v30 = 0u;
      long long v31 = 0u;
      int v17 = [(PLManagedAsset *)self memoriesBeingKeyAsset];
      int v18 = (void *)[v17 copy];

      uint64_t v19 = [v18 countByEnumeratingWithState:&v30 objects:v38 count:16];
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = *(void *)v31;
LABEL_20:
        uint64_t v22 = 0;
        while (1)
        {
          if (*(void *)v31 != v21) {
            objc_enumerationMutation(v18);
          }
          if ([*(id *)(*((void *)&v30 + 1) + 8 * v22) featuredState] == 1) {
            break;
          }
          if (v20 == ++v22)
          {
            uint64_t v20 = [v18 countByEnumeratingWithState:&v30 objects:v38 count:16];
            if (v20) {
              goto LABEL_20;
            }
            goto LABEL_26;
          }
        }
        unint64_t v23 = PLBackendGetLog();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
        {
          double v24 = [(PLManagedAsset *)self uuid];
          *(_DWORD *)buf = 138543362;
          unint64_t v40 = v24;
          _os_log_impl(&dword_19B3C7000, v23, OS_LOG_TYPE_INFO, "Recording ForYou widget timeline invalidation due to key asset with featured memory being adjusted %{public}@", buf, 0xCu);
        }
        double v25 = [v3 delayedSaveActions];
        [v25 recordWidgetTimelineReloadNeededForType:0];

        if (!v11) {
          goto LABEL_36;
        }
      }
      else
      {
LABEL_26:

        if (!v11) {
          goto LABEL_36;
        }
      }
      double v26 = [v3 delayedSaveActions];
      CGFloat v27 = v26;
      uint64_t v28 = 1;
    }
    [v26 recordWidgetTimelineReloadNeededForType:v28];
  }
LABEL_36:
}

- (void)_clearStickerConfidenceAttributes
{
  id v3 = [(PLManagedAsset *)self mediaAnalysisAttributes];
  objc_msgSend(v3, "pl_safeSetValue:forKey:valueDidChangeHandler:", &unk_1EEBED5D8, @"visualSearchStickerConfidenceVersion", 0);
  [(PLManagedObject *)self pl_safeSetValue:&unk_1EEBF2AD8 forKey:@"stickerConfidenceScore" valueDidChangeHandler:0];
}

- (void)_clearOverallAestheticScore
{
  [(PLManagedAsset *)self overallAestheticScore];
  if (*(float *)&v3 != 0.5)
  {
    LODWORD(v3) = 0.5;
    [(PLManagedAsset *)self setOverallAestheticScore:v3];
  }
}

- (void)_clearAcceptableCropRect
{
  if ([(PLManagedAsset *)self packedAcceptableCropRect])
  {
    [(PLManagedAsset *)self setPackedAcceptableCropRect:0];
  }
}

- (void)_clearPreferredCropRect
{
  if ([(PLManagedAsset *)self packedPreferredCropRect])
  {
    [(PLManagedAsset *)self setPackedPreferredCropRect:0];
  }
}

- (void)_deleteComputedAttributes
{
  id v5 = [(PLManagedAsset *)self managedObjectContext];
  double v3 = [(PLManagedAsset *)self computedAttributes];

  if (v3)
  {
    BOOL v4 = [(PLManagedAsset *)self computedAttributes];
    [v5 deleteObject:v4];
  }
}

- (void)removeAssetFromUserAlbumSuggestionIfNeededWithChangedValues:(id)a3
{
  v38[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self managedObjectContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v6 = [v4 objectForKeyedSubscript:@"favorite"];
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      char v8 = [(PLManagedAsset *)self favorite];

      if ((v8 & 1) == 0)
      {
        uint64_t v9 = [v5 delayedSaveActions];
        double v10 = [(PLManagedAsset *)self objectID];
        [v9 recordAssetIDForWidgetFavoriteAlbumRemoval:v10];

        BOOL v11 = [v5 delayedSaveActions];
        int v12 = [(PLManagedAsset *)self objectID];
        [v11 recordAssetIDForWallpaperFavoriteAlbumRemoval:v12];
      }
    }
    int v13 = [v4 objectForKeyedSubscript:@"albums"];

    if (v13)
    {
      v38[0] = @"albums";
      uint64_t v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v38 count:1];
      BOOL v15 = [(PLManagedAsset *)self committedValuesForKeys:v14];

      uint64_t v16 = [v15 objectForKey:@"albums"];
      int v17 = [(PLManagedAsset *)self albums];
      int v18 = (void *)[v16 mutableCopy];
      [v18 minusSet:v17];
      if ([v18 count])
      {
        long long v30 = v17;
        long long v31 = v16;
        long long v32 = v15;
        long long v35 = 0u;
        long long v36 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        CGFloat v29 = v18;
        id v19 = v18;
        uint64_t v20 = [v19 countByEnumeratingWithState:&v33 objects:v37 count:16];
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = *(void *)v34;
          do
          {
            for (uint64_t i = 0; i != v21; ++i)
            {
              if (*(void *)v34 != v22) {
                objc_enumerationMutation(v19);
              }
              double v24 = *(void **)(*((void *)&v33 + 1) + 8 * i);
              if ((objc_msgSend(v24, "isDeleted", v29, v30, v31, v32, (void)v33) & 1) == 0)
              {
                double v25 = [v5 delayedSaveActions];
                double v26 = [(PLManagedAsset *)self objectID];
                [v25 recordAssetID:v26 forWidgetUserAlbumRemoval:v24];

                CGFloat v27 = [v5 delayedSaveActions];
                uint64_t v28 = [(PLManagedAsset *)self objectID];
                [v27 recordAssetID:v28 forWallpaperUserAlbumRemoval:v24];
              }
            }
            uint64_t v21 = [v19 countByEnumeratingWithState:&v33 objects:v37 count:16];
          }
          while (v21);
        }

        uint64_t v16 = v31;
        BOOL v15 = v32;
        int v18 = v29;
        int v17 = v30;
      }
    }
  }
}

- (void)_removeKeyAssetFromSuggestions:(id)a3
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self managedObjectContext];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_31;
  }
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v6 = (void *)[v4 copy];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v24 objects:v30 count:16];
  if (!v7) {
    goto LABEL_30;
  }
  uint64_t v8 = v7;
  id v22 = v4;
  uint64_t v23 = 0;
  uint64_t v9 = *(void *)v25;
  do
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if (*(void *)v25 != v9) {
        objc_enumerationMutation(v6);
      }
      BOOL v11 = *(void **)(*((void *)&v24 + 1) + 8 * i);
      [v11 replaceKeyAsset:self];
      if ([v11 isEmpty])
      {
        int v12 = PLBackendGetLog();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          CGFloat v29 = v11;
          _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_INFO, "Deleting suggestion %@ due to it containing no more assets", buf, 0xCu);
        }

        [v5 deleteObject:v11];
      }
      else
      {
        int v13 = [v5 photoLibrary];
        [v11 updateCachedCounts:v13];
      }
      if ([v11 featuredState] == 1)
      {
        if ([v11 type] == 6)
        {
          uint64_t v14 = [v5 delayedSaveActions];
          BOOL v15 = [v11 uuid];
          [v14 recordWallpaperSuggestionReloadForUUID:v15];
        }
        else
        {
          int v16 = [v11 type];
          uint64_t v14 = PLBackendGetLog();
          BOOL v17 = os_log_type_enabled(v14, OS_LOG_TYPE_INFO);
          if (v16 == 7)
          {
            if (!v17)
            {
              BYTE4(v23) = 1;
              goto LABEL_23;
            }
            int v18 = [v11 uuid];
            *(_DWORD *)buf = 138543362;
            CGFloat v29 = v18;
            BYTE4(v23) = 1;
            id v19 = v14;
            uint64_t v20 = "Recording Album widget timeline invalidation due to featured suggestion's %{public}@ key asset being removed";
          }
          else
          {
            if (!v17)
            {
              LOBYTE(v23) = 1;
              goto LABEL_23;
            }
            int v18 = [v11 uuid];
            *(_DWORD *)buf = 138543362;
            CGFloat v29 = v18;
            LOBYTE(v23) = 1;
            id v19 = v14;
            uint64_t v20 = "Recording ForYou widget timeline invalidation due to featured suggestion's %{public}@ key asset being removed";
          }
          _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_INFO, v20, buf, 0xCu);
        }
LABEL_23:

        continue;
      }
    }
    uint64_t v8 = [v6 countByEnumeratingWithState:&v24 objects:v30 count:16];
  }
  while (v8);

  if (v23)
  {
    uint64_t v21 = [v5 delayedSaveActions];
    [v21 recordWidgetTimelineReloadNeededForType:0];
  }
  id v4 = v22;
  if ((v23 & 0x100000000) != 0)
  {
    uint64_t v6 = [v5 delayedSaveActions];
    [v6 recordWidgetTimelineReloadNeededForType:1];
LABEL_30:
  }
LABEL_31:
}

- (void)removeAssetFromRelatedSuggestionsAndFixupSuggestions
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  double v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  id v4 = [(PLManagedAsset *)self managedObjectContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v5 = [(PLManagedAsset *)self suggestionsBeingRepresentativeAssets];
    uint64_t v6 = (void *)[v5 copy];

    uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v15;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v15 != v9) {
            objc_enumerationMutation(v6);
          }
          BOOL v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
          [v11 removeRepresentativeAsset:self];
          int v12 = [v4 photoLibrary];
          [v11 updateCachedCounts:v12];
        }
        uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v8);
    }

    int v13 = [(PLManagedAsset *)self suggestionsBeingKeyAssets];
    [(PLManagedAsset *)self _removeKeyAssetFromSuggestions:v13];
  }
}

- (void)resetKeyFaceOnVideoKeyFrameChange
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  context = (void *)MEMORY[0x19F38D3B0](self, a2);
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  double v3 = [(PLManagedAsset *)self detectedFaces];
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = [*(id *)(*((void *)&v13 + 1) + 8 * i) personBeingKeyFace];
        if (v8)
        {
          uint64_t v9 = PLBackendGetLog();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          {
            double v10 = [(PLManagedAsset *)self uuid];
            BOOL v11 = [v8 personUUID];
            *(_DWORD *)buf = 138543618;
            int v18 = v10;
            __int16 v19 = 2114;
            uint64_t v20 = v11;
            _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_DEFAULT, "Video key frame change on asset %{public}@: Resetting key face for person %{public}@", buf, 0x16u);
          }
          [v8 setKeyFace:0 pickSource:0];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v5);
  }
}

- (void)fixupMemoriesWithMissingKeyAsset
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  double v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  uint64_t v4 = [(PLManagedAsset *)self managedObjectContext];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && ![v4 resetCloudLibraryMode])
  {
    long long v25 = v3;
    uint64_t v5 = [MEMORY[0x1E4F1CA80] set];
    uint64_t v6 = [MEMORY[0x1E4F1CA48] array];
    uint64_t v7 = [MEMORY[0x1E4F1CA48] array];
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v24 = self;
    uint64_t v8 = [(PLManagedAsset *)self memoriesBeingKeyAsset];
    uint64_t v9 = [v8 countByEnumeratingWithState:&v28 objects:v38 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v29;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v29 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = *(void **)(*((void *)&v28 + 1) + 8 * i);
          long long v14 = [v13 calculateKeyAsset];
          if (v14)
          {
            [v6 addObject:v13];
            long long v15 = v7;
            long long v16 = v14;
          }
          else
          {
            long long v15 = v5;
            long long v16 = v13;
          }
          [v15 addObject:v16];
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v28 objects:v38 count:16];
      }
      while (v10);
    }

    if ([v6 count])
    {
      unint64_t v17 = 0;
      do
      {
        int v18 = [v6 objectAtIndexedSubscript:v17];
        __int16 v19 = [v7 objectAtIndexedSubscript:v17];
        uint64_t v20 = PLBackendGetLog();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412802;
          long long v33 = v18;
          __int16 v34 = 2112;
          long long v35 = v24;
          __int16 v36 = 2112;
          long long v37 = v19;
          _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_INFO, "Updating keyAsset for memory %@ from %@ to %@", buf, 0x20u);
        }

        [v18 setKeyAsset:v19];
        if ([v18 featuredState] == 1)
        {
          uint64_t v21 = [v4 delayedSaveActions];
          [v21 recordWidgetTimelineReloadNeededForType:0];

          uint64_t v22 = PLBackendGetLog();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            uint64_t v23 = [v18 uuid];
            *(_DWORD *)buf = 138543362;
            long long v33 = v23;
            _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_INFO, "Recording ForYou widget timeline invalidation due to memory %{public}@ keyAsset update", buf, 0xCu);
          }
        }

        ++v17;
      }
      while ([v6 count] > v17);
    }
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    v26[2] = __50__PLManagedAsset_fixupMemoriesWithMissingKeyAsset__block_invoke;
    v26[3] = &unk_1E5868A10;
    id v27 = v4;
    [v5 enumerateObjectsUsingBlock:v26];

    double v3 = v25;
  }
}

void __50__PLManagedAsset_fixupMemoriesWithMissingKeyAsset__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = PLBackendGetLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl(&dword_19B3C7000, v4, OS_LOG_TYPE_INFO, "Deleting memory %@ due to no key asset found", (uint8_t *)&v5, 0xCu);
  }

  [*(id *)(a1 + 32) deleteObject:v3];
}

- (BOOL)_hasBecomeNonVisibleToMemoriesAndPersonsAndSuggestions:(id)a3
{
  id v4 = a3;
  if ([(PLManagedAsset *)self isDeleted]) {
    goto LABEL_6;
  }
  int v5 = [v4 objectForKeyedSubscript:@"trashedState"];

  if (v5)
  {
    id v6 = [v4 objectForKey:@"trashedState"];
    __int16 v7 = [v6 intValue];

    if (v7) {
      goto LABEL_6;
    }
  }
  uint64_t v8 = [v4 objectForKeyedSubscript:@"hidden"];

  if (v8
    && ([v4 objectForKey:@"hidden"],
        uint64_t v9 = objc_claimAutoreleasedReturnValue(),
        char v10 = [v9 BOOLValue],
        v9,
        (v10 & 1) != 0))
  {
LABEL_6:
    LOBYTE(v11) = 1;
  }
  else
  {
    long long v13 = [v4 objectForKeyedSubscript:@"avalanchePickType"];

    if (v13)
    {
      long long v14 = [v4 objectForKey:@"avalanchePickType"];
      uint64_t v15 = [v14 intValue];

      BOOL v11 = ![(PLManagedAsset *)self _isVisibleAvalanchePickType:v15];
    }
    else
    {
      LOBYTE(v11) = 0;
    }
  }

  return v11;
}

- (void)_updateOriginalResourceChoice
{
  id v16 = [(PLManagedAsset *)self additionalAttributes];
  if ([(PLManagedAsset *)self isPhoto] && [(PLManagedAsset *)self hasAdjustments])
  {
    id v3 = [v16 unmanagedAdjustment];
    id v4 = v3;
    if (v3
      && ([v3 adjustmentBaseImageFormat],
          int v5 = objc_claimAutoreleasedReturnValue(),
          uint64_t v6 = [v5 integerValue],
          v5,
          v6))
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v8 = [(PLManagedAsset *)self mainFileURL];
      uint64_t v9 = [v8 pathExtension];
      char v10 = +[PLManagedAsset uniformTypeIdentifierFromPathExtension:v9 assetType:[(PLManagedAsset *)self kind]];

      if (v10)
      {
        BOOL v11 = [MEMORY[0x1E4F442D8] typeWithIdentifier:v10];
        int v12 = [v11 conformsToType:*MEMORY[0x1E4F44498]];

        if (v12) {
          uint64_t v7 = 3;
        }
        else {
          uint64_t v7 = 0;
        }
      }
      else
      {
        uint64_t v7 = 0;
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  long long v13 = [v16 originalResourceChoice];
  uint64_t v14 = [v13 unsignedIntegerValue];

  if (v7 != v14)
  {
    uint64_t v15 = [NSNumber numberWithUnsignedInteger:v7];
    [v16 setOriginalResourceChoice:v15];
  }
}

- (void)reevaluateCameraProcessingAdjustmentState
{
  id v4 = [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_555];
  if (v4) {
    uint64_t v3 = [(PLManagedAsset *)self cameraProcessingAdjustmentState] | 1;
  }
  else {
    uint64_t v3 = 0;
  }
  [(PLManagedAsset *)self setCameraProcessingAdjustmentState:v3];
}

BOOL __59__PLManagedAsset_reevaluateCameraProcessingAdjustmentState__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 version]) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = [v2 resourceType] == 10 || objc_msgSend(v2, "resourceType") == 11;
  }

  return v3;
}

- (BOOL)setTrashedState:(signed __int16)a3 forResourceType:(unint64_t)a4
{
  uint64_t v5 = a3;
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = [(PLManagedAsset *)self masterResourceForCPLType:a4];
  uint64_t v8 = v7;
  if (v7 && [v7 supportsTrashedState])
  {
    uint64_t v9 = PLBackendGetLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      char v10 = [(PLManagedAsset *)self uuid];
      BOOL v11 = [v8 objectID];
      int v12 = [MEMORY[0x1E4F59940] descriptionForResourceType:a4];
      int v19 = 67109890;
      *(_DWORD *)uint64_t v20 = v5;
      *(_WORD *)&v20[4] = 2114;
      *(void *)&v20[6] = v10;
      *(_WORD *)&v20[14] = 2112;
      *(void *)&v20[16] = v11;
      *(_WORD *)&v20[24] = 2112;
      *(void *)&v20[26] = v12;
      _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_INFO, "Setting resource trashedState to %i for asset %{public}@, resource %@, cplType %@", (uint8_t *)&v19, 0x26u);
    }
    [v8 applyTrashedState:v5];
    BOOL v13 = 1;
  }
  else
  {
    uint64_t v14 = PLBackendGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      id v15 = [(PLManagedAsset *)self uuid];
      if (v8)
      {
        id v16 = [v8 objectID];
      }
      else
      {
        id v16 = @"<no master resource for cplType>";
      }
      unint64_t v17 = [MEMORY[0x1E4F59940] descriptionForResourceType:a4];
      int v19 = 138543874;
      *(void *)uint64_t v20 = v15;
      *(_WORD *)&v20[8] = 2112;
      *(void *)&v20[10] = v16;
      *(_WORD *)&v20[18] = 2112;
      *(void *)&v20[20] = v17;
      _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_ERROR, "Resource does not support trashedState %{public}@, resource %@, cplType %@", (uint8_t *)&v19, 0x20u);
      if (v8) {
    }
      }
    BOOL v13 = 0;
  }

  return v13;
}

- (void)expungeTrashedSpatialOverCaptureResources
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [(PLManagedAsset *)self persistedResourcesMatching:&__block_literal_global_550];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        -[PLManagedAsset setTrashedState:forResourceType:](self, "setTrashedState:forResourceType:", 2, [*(id *)(*((void *)&v8 + 1) + 8 * v7++) cplType]);
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

BOOL __59__PLManagedAsset_expungeTrashedSpatialOverCaptureResources__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = ![v2 version]
    && ([v2 resourceType] == 10 || objc_msgSend(v2, "resourceType") == 11)
    && [v2 trashedState] != 0;

  return v3;
}

- (BOOL)setTrashedStateOnSpatialOverCaptureResources:(signed __int16)a3
{
  uint64_t v3 = a3;
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (setTrashedStateOnSpatialOverCaptureResources__onceToken != -1) {
    dispatch_once(&setTrashedStateOnSpatialOverCaptureResources__onceToken, &__block_literal_global_547);
  }
  if (v3 == 1 && setTrashedStateOnSpatialOverCaptureResources__ignoreSOCSetTrashedStateChange)
  {
    uint64_t v5 = PLBackendGetLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = [(PLManagedAsset *)self uuid];
      int v9 = 138412546;
      long long v10 = @"PLIgnoreSOCPrune";
      __int16 v11 = 2114;
      int v12 = v6;
      _os_log_impl(&dword_19B3C7000, v5, OS_LOG_TYPE_INFO, "ignoring setTrashedState for SOC resources: %@ = YES for asset %{public}@", (uint8_t *)&v9, 0x16u);
    }
    return 0;
  }
  else
  {
    if ([(PLManagedAsset *)self isPhotoIris]) {
      BOOL v8 = [(PLManagedAsset *)self setTrashedState:v3 forResourceType:24];
    }
    else {
      BOOL v8 = 1;
    }
    return v8 & [(PLManagedAsset *)self setTrashedState:v3 forResourceType:23];
  }
}

void __63__PLManagedAsset_setTrashedStateOnSpatialOverCaptureResources___block_invoke()
{
  id v0 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  setTrashedStateOnSpatialOverCaptureResources__ignoreSOCSetTrashedStateChange = [v0 BOOLForKey:@"PLIgnoreSOCPrune"];
}

- (BOOL)isSyncableChange
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ([(PLManagedAsset *)self savedAssetTypeIsSupportedForUpload])
  {
    uint64_t v3 = [(PLManagedAsset *)self changedValues];
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v4 = +[PLManagedAsset listOfSyncedProperties];
    uint64_t v5 = [v4 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v20;
      while (2)
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v20 != v7) {
            objc_enumerationMutation(v4);
          }
          int v9 = [v3 objectForKey:*(void *)(*((void *)&v19 + 1) + 8 * i)];

          if (v9)
          {
            int v10 = 0;
            goto LABEL_13;
          }
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v19 objects:v23 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }
    int v10 = 1;
LABEL_13:

    int v12 = [v3 objectForKey:@"cloudLocalState"];
    uint64_t v13 = v12;
    if (v12)
    {
      if ([v12 intValue]) {
        char v14 = v10;
      }
      else {
        char v14 = 0;
      }
      if ((v14 & 1) == 0) {
        goto LABEL_23;
      }
    }
    else if (!v10)
    {
      goto LABEL_23;
    }
    uint64_t v15 = [v3 objectForKey:@"savedAssetType"];
    if (!v15
      || (id v16 = (void *)v15, v17 = [(PLManagedAsset *)self cloudLocalState], v16, v17))
    {
      BOOL v11 = 0;
LABEL_26:

      return v11;
    }
LABEL_23:
    if ([(PLManagedAsset *)self isPlaceholderAsset]) {
      BOOL v11 = +[PLManagedAsset validMomentShareForPlaceholderAsset:self];
    }
    else {
      BOOL v11 = 1;
    }
    goto LABEL_26;
  }
  return 0;
}

- (BOOL)_updateKindSubtypeIfScreenshotWithCheckTask:(id)a3
{
  uint64_t v5 = (unsigned int (**)(void))a3;
  if (!v5)
  {
    BOOL v8 = [MEMORY[0x1E4F28B00] currentHandler];
    [v8 handleFailureInMethod:a2, self, @"PLManagedAsset.m", 2905, @"Invalid parameter not satisfying: %@", @"checkTask" object file lineNumber description];
  }
  if ([(PLManagedAsset *)self isPhotoIris]
    || ![(PLManagedAsset *)self isPhoto]
    || [(PLManagedAsset *)self kindSubtype] == 10
    || !v5[2](v5))
  {
    BOOL v6 = 0;
  }
  else
  {
    [(PLManagedAsset *)self setKindSubtype:10];
    BOOL v6 = 1;
  }

  return v6;
}

- (BOOL)updateKindSubtypeIfScreenshotWithMetadata:(id)a3
{
  id v5 = a3;
  if (!v5)
  {
    int v9 = [MEMORY[0x1E4F28B00] currentHandler];
    [v9 handleFailureInMethod:a2, self, @"PLManagedAsset.m", 2891, @"Invalid parameter not satisfying: %@", @"metadata" object file lineNumber description];
  }
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __60__PLManagedAsset_updateKindSubtypeIfScreenshotWithMetadata___block_invoke;
  v10[3] = &unk_1E5871CA0;
  id v11 = v5;
  int v12 = self;
  id v6 = v5;
  BOOL v7 = [(PLManagedAsset *)self _updateKindSubtypeIfScreenshotWithCheckTask:v10];

  return v7;
}

uint64_t __60__PLManagedAsset_updateKindSubtypeIfScreenshotWithMetadata___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) contentType];
  if (![v2 conformsToType:*MEMORY[0x1E4F44460]])
  {
    if (![v2 conformsToType:*MEMORY[0x1E4F44410]])
    {
      uint64_t v3 = 0;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (([*(id *)(a1 + 40) _hasScreenshotDimensions] & 1) == 0)
  {
LABEL_5:
    uint64_t v3 = [*(id *)(a1 + 40) _hasScreenshotMetadataWithMetadata:*(void *)(a1 + 32)];
    goto LABEL_7;
  }
  uint64_t v3 = 1;
LABEL_7:

  return v3;
}

- (BOOL)updateKindSubtypeIfScreenshot
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __47__PLManagedAsset_updateKindSubtypeIfScreenshot__block_invoke;
  v3[3] = &unk_1E58708B0;
  v3[4] = self;
  return [(PLManagedAsset *)self _updateKindSubtypeIfScreenshotWithCheckTask:v3];
}

uint64_t __47__PLManagedAsset_updateKindSubtypeIfScreenshot__block_invoke(uint64_t a1)
{
  id v2 = (void *)MEMORY[0x1E4F8CDF8];
  uint64_t v3 = [*(id *)(a1 + 32) uniformTypeIdentifier];
  uint64_t v4 = [v2 typeWithIdentifier:v3];

  if (![v4 conformsToType:*MEMORY[0x1E4F44460]])
  {
    if (![v4 conformsToType:*MEMORY[0x1E4F44410]])
    {
      uint64_t v5 = 0;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (([*(id *)(a1 + 32) _hasScreenshotDimensions] & 1) == 0)
  {
LABEL_5:
    uint64_t v5 = [*(id *)(a1 + 32) hasScreenshotMetadata];
    goto LABEL_7;
  }
  uint64_t v5 = 1;
LABEL_7:

  return v5;
}

- (void)updatePanoramosityWithMetadata:(id)a3
{
  id v6 = a3;
  if (![(PLManagedAsset *)self isPhotoIris]
    && [(PLManagedAsset *)self kindSubtype] != 10
    && [(PLManagedAsset *)self isPhoto])
  {
    if (!v6)
    {
      id v6 = [(PLManagedAsset *)self metadataFromMediaPropertiesOrOriginalResource];
    }
    if ([(PLManagedAsset *)self _hasPanoramaDimensions]
      && ([v6 isScreenshot] & 1) == 0
      && ((int64_t v5 = [(PLManagedAsset *)self height], v5 <= [(PLManagedAsset *)self width])
       || [v6 isPanorama]))
    {
      if ([(PLManagedAsset *)self kindSubtype] == 1) {
        goto LABEL_15;
      }
      uint64_t v4 = 1;
    }
    else
    {
      if ([(PLManagedAsset *)self kindSubtype] != 1) {
        goto LABEL_15;
      }
      uint64_t v4 = 0;
    }
    [(PLManagedAsset *)self setKindSubtype:v4];
  }
LABEL_15:
}

- (BOOL)validateForUpdate:(id *)a3
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = +[PLManagedAsset correctedOrientation:[(PLManagedAsset *)self orientation]];
  if (v5 != [(PLManagedAsset *)self orientation]) {
    [(PLManagedAsset *)self setOrientation:v5];
  }
  v13.receiver = self;
  v13.super_class = (Class)PLManagedAsset;
  BOOL v6 = [(PLManagedAsset *)&v13 validateForUpdate:a3];
  if (v6)
  {
    BOOL v7 = [(PLManagedAsset *)self changedValues];
    BOOL v8 = [v7 objectForKeyedSubscript:@"libraryScope"];
    if (v8)
    {
    }
    else
    {
      int v9 = [v7 objectForKeyedSubscript:@"libraryScopeShareState"];

      if (!v9)
      {
LABEL_12:

        return v6;
      }
    }
    if ([(PLManagedAsset *)self hasLibraryScope]
      && [(PLManagedAsset *)self isSuggestedForSharingByPhotos])
    {
      int v10 = PLBackendGetLog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        id v11 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)buf = 138543362;
        uint64_t v15 = v11;
        _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_DEFAULT, "Correcting libraryScopeShareState on asset %{public}@, for failing rule: a shared asset should not be marked as suggested for sharing.", buf, 0xCu);
      }
      PLLibraryScopeAssetRemoveSuggestedByClientType(self);
    }
    goto LABEL_12;
  }
  return v6;
}

- (BOOL)validateForInsert:(id *)a3
{
  uint64_t v5 = +[PLManagedAsset correctedOrientation:[(PLManagedAsset *)self orientation]];
  if (v5 != [(PLManagedAsset *)self orientation]) {
    [(PLManagedAsset *)self setOrientation:v5];
  }
  v7.receiver = self;
  v7.super_class = (Class)PLManagedAsset;
  return [(PLManagedAsset *)&v7 validateForInsert:a3];
}

- (void)applyTrashedState:(signed __int16)a3 withTrashedReason:(unsigned __int16)a4 expungeReasonFromClient:(id)a5
{
  uint64_t v5 = a4;
  uint64_t v6 = a3;
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v9 = a5;
  if (![(PLManagedAsset *)self canMoveToTrash])
  {
    long long v20 = [MEMORY[0x1E4F28B00] currentHandler];
    [v20 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:2759 description:@"expect trashable asset"];
  }
  if (v6 == 2)
  {
    if ([(PLManagedAsset *)self trashedState] == 1
      || ![(PLManagedAsset *)self trashedState])
    {
      id v11 = objc_alloc_init(MEMORY[0x1E4F28E78]);
      if ([(PLManagedAsset *)self trashedState] == 1) {
        int v12 = @"User deleted asset in trashedState.";
      }
      else {
        int v12 = @"User deleted asset in non-trashedState";
      }
      [v11 appendString:v12];
      if (v9) {
        [v11 appendFormat:@" Client expunge reason: %@", v9];
      }
      [(PLManagedAsset *)self setTrashedState:v6];
      objc_super v13 = +[PLAssetTransactionReason transactionReason:v11];
      [(PLManagedAsset *)self deleteWithReason:v13];
    }
  }
  else if (v6 == 1)
  {
    if (![(PLManagedAsset *)self trashedState])
    {
      [(PLManagedAsset *)self setTrashedState:v6];
      char v14 = [MEMORY[0x1E4F1C9C8] date];
      [(PLManagedAsset *)self setTrashedDate:v14];

      [(PLManagedAsset *)self setTrashedReason:v5];
      if ([(PLManagedAsset *)self hasLibraryScope]
        && ([(PLManagedAsset *)self libraryScopeShareState] & 0x800000) != 0)
      {
        uint64_t v15 = [(PLManagedAsset *)self libraryScope];
        uint64_t v16 = [v15 currentUserParticipant];
        [(PLManagedAsset *)self setTrashedByParticipant:v16];
      }
      int v17 = PLPhotosStatusGetLog();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        int v18 = [(PLManagedAsset *)self uuid];
        long long v19 = [(PLManagedAsset *)self dateCreated];
        *(_DWORD *)buf = 138543618;
        long long v22 = v18;
        __int16 v23 = 2114;
        uint64_t v24 = v19;
        _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEFAULT, "Asset %{public}@ (created on %{public}@) was trashed.", buf, 0x16u);
      }
    }
  }
  else if (!v6 && [(PLManagedAsset *)self trashedState] == 1)
  {
    [(PLManagedAsset *)self setTrashedState:v6];
    [(PLManagedAsset *)self setTrashedDate:0];
    [(PLManagedAsset *)self setTrashedReason:0];
    int v10 = [(PLManagedAsset *)self trashedByParticipant];

    if (v10) {
      [(PLManagedAsset *)self setTrashedByParticipant:0];
    }
  }
}

- (void)expunge
{
}

- (void)unTrash
{
}

- (void)trashWithReason:(unsigned __int16)a3
{
}

- (BOOL)isInTrash
{
  return [(PLManagedAsset *)self trashedState] != 0;
}

- (void)deleteFromDatabaseOnlyWithReason:(id)a3
{
  id v6 = a3;
  if ((PLIsAssetsd() & 1) == 0)
  {
    uint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
    [v5 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:2705 description:@"deleteFromDatabaseOnly is only safe from inside of assetsd!"];
  }
  self->_didPrepareForDeletion = 1;
  [(PLManagedAsset *)self deleteWithReason:v6];
}

- (void)deleteFromDatabaseOnly
{
  if ((PLIsAssetsd() & 1) == 0)
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    [v4 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:2696 description:@"deleteFromDatabaseOnly is only safe from inside of assetsd!"];
  }
  self->_didPrepareForDeletion = 1;
  id v5 = +[PLAssetTransactionReason transactionReason:@"Deleting from database only"];
  [(PLManagedAsset *)self deleteWithReason:v5];
}

- (void)delete
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  if (!self->_deleteReasonExists)
  {
    char v14 = [MEMORY[0x1E4F28B00] currentHandler];
    [v14 handleFailureInMethod:a2 object:self file:@"PLManagedAsset.m" lineNumber:2682 description:@"Asset deletion must specify a reason.  Please use deleteWithReason:"];
  }
  BOOL v3 = [(PLManagedAsset *)self isCameraConnectionKitAsset];
  uint64_t v4 = PLPhotosStatusGetLog();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      id v6 = [(PLManagedAsset *)self directory];
      objc_super v7 = [(PLManagedAsset *)self filename];
      BOOL v8 = [(PLManagedAsset *)self objectID];
      id v9 = [(PLManagedAsset *)self uuid];
      int v10 = [(PLManagedAsset *)self dateCreated];
      int v15 = 138544386;
      uint64_t v16 = v6;
      __int16 v17 = 2112;
      int v18 = v7;
      __int16 v19 = 2114;
      long long v20 = v8;
      __int16 v21 = 2114;
      long long v22 = v9;
      __int16 v23 = 2114;
      uint64_t v24 = v10;
      id v11 = "Deleting %{public}@/%@ [%{public}@ %{public}@] (created on %{public}@)";
LABEL_8:
      _os_log_impl(&dword_19B3C7000, v4, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v15, 0x34u);
    }
  }
  else if (v5)
  {
    id v6 = [(PLManagedAsset *)self directory];
    objc_super v7 = [(PLManagedAsset *)self filename];
    BOOL v8 = [(PLManagedAsset *)self objectID];
    id v9 = [(PLManagedAsset *)self uuid];
    int v10 = [(PLManagedAsset *)self dateCreated];
    int v15 = 138544386;
    uint64_t v16 = v6;
    __int16 v17 = 2114;
    int v18 = v7;
    __int16 v19 = 2114;
    long long v20 = v8;
    __int16 v21 = 2114;
    long long v22 = v9;
    __int16 v23 = 2114;
    uint64_t v24 = v10;
    id v11 = "Deleting %{public}@/%{public}@ [%{public}@ %{public}@] (created on %{public}@)";
    goto LABEL_8;
  }

  int v12 = [(PLManagedAsset *)self managedObjectContext];
  [v12 deleteObject:self];

  self->_deleteReasonExists = 0;
}

- (void)deleteWithReason:(id)a3
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  BOOL v5 = PLPhotosStatusGetLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v4 reason];
    int v8 = 138543362;
    id v9 = v6;
    _os_log_impl(&dword_19B3C7000, v5, OS_LOG_TYPE_DEFAULT, "Delete reason: %{public}@", (uint8_t *)&v8, 0xCu);
  }
  objc_super v7 = [v4 reason];
  [(PLManagedAsset *)self setDeleteReason:v7];

  self->_deleteReasonExists = 1;
  [(PLManagedAsset *)self delete];
}

- (BOOL)isDeletableFromAssetsLibrary
{
  BOOL v3 = [(PLManagedAsset *)self canPerformEditOperation:4];
  if (v3)
  {
    if ([(PLManagedAsset *)self isCloudSharedAsset]) {
      LOBYTE(v3) = 0;
    }
    else {
      LOBYTE(v3) = ![(PLManagedAsset *)self isPhotoStreamPhoto];
    }
  }
  return v3;
}

- (BOOL)isEditableFromAssetsLibrary
{
  BOOL v3 = [(PLManagedAsset *)self canPerformEditOperation:1];
  if (v3)
  {
    if (([(PLManagedAsset *)self isDeleted] & 1) != 0
      || [(PLManagedAsset *)self isCloudSharedAsset])
    {
      LOBYTE(v3) = 0;
    }
    else
    {
      LOBYTE(v3) = ![(PLManagedAsset *)self isPhotoStreamPhoto];
    }
  }
  return v3;
}

- (id)decodedFaceRegions
{
  id v2 = [(PLManagedAsset *)self faceRegions];
  BOOL v3 = PLManagedAssetDecodeFaceRegions(v2);

  return v3;
}

- (void)_loadReverseGeoIfNeeded
{
  if (!self->_didLoadReverseGeo)
  {
    BOOL v3 = [(PLManagedAsset *)self locationInfo];
    if (v3)
    {
      id v8 = v3;
      id v4 = [(PLManagedAsset *)self location];

      BOOL v3 = v8;
      if (v4)
      {
        self->_isLocatedAtHome = [v8 isHome];
        BOOL v5 = [v8 localizedDescription];
        id v6 = (NSString *)[v5 copy];
        reverseGeoDescription = self->_reverseGeoDescription;
        self->_reverseGeoDescription = v6;

        BOOL v3 = v8;
      }
    }
    self->_didLoadReverseGeo = 1;
  }
}

- (BOOL)isLocatedAtHome
{
  return self->_isLocatedAtHome;
}

- (id)reverseGeoDescription
{
  [(PLManagedAsset *)self _loadReverseGeoIfNeeded];
  reverseGeoDescription = self->_reverseGeoDescription;
  return reverseGeoDescription;
}

- (id)avalanchePickDescription
{
  int v2 = [(PLManagedAsset *)self avalanchePickType];
  BOOL v3 = [MEMORY[0x1E4F28E78] string];
  id v4 = v3;
  if (!v2)
  {
    BOOL v5 = @" PLAvalancheTypeNotInBurst";
LABEL_14:
    [v4 appendString:v5];
    goto LABEL_15;
  }
  if (v2)
  {
    [v3 appendString:@" PLAvalancheTypeUnknown"];
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  [v4 appendString:@" PLAvalancheTypeNotPicked"];
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    [v4 appendString:@" PLAvalancheTypeUserFavorite"];
    if ((v2 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
LABEL_11:
  [v4 appendString:@" PLAvalancheTypeAutoPicked"];
  if ((v2 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
LABEL_13:
    BOOL v5 = @" PLAvalancheTypeStack";
    goto LABEL_14;
  }
LABEL_15:
  return v4;
}

- (BOOL)isAvalanchePhoto
{
  int v3 = [(PLManagedAsset *)self avalanchePickType];
  if (v3)
  {
    LOBYTE(v3) = [(PLManagedAsset *)self isPartOfBurst];
  }
  return v3;
}

- (BOOL)isAvalancheStackPhoto
{
  if (([(PLManagedAsset *)self avalanchePickType] & 0x10) == 0) {
    return 0;
  }
  return [(PLManagedAsset *)self isPartOfBurst];
}

- (BOOL)_isVisibleAvalanchePickType:(int)a3
{
  return (a3 & 0x18) != 0 || a3 == 0;
}

- (BOOL)avalanchePickTypeIsVisible
{
  uint64_t v3 = [(PLManagedAsset *)self avalanchePickType];
  return [(PLManagedAsset *)self _isVisibleAvalanchePickType:v3];
}

- (BOOL)isAnimation
{
  return [(PLManagedAsset *)self playbackStyle] == 2;
}

- (BOOL)isMirror
{
  return [(PLManagedAsset *)self playbackVariation] == 2;
}

- (BOOL)isLongExposure
{
  return [(PLManagedAsset *)self playbackVariation] == 3;
}

- (BOOL)isAutoloop
{
  return [(PLManagedAsset *)self playbackVariation] == 1;
}

- (void)setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:(unsigned __int16)a3
{
  uint64_t v3 = a3;
  if ([(PLManagedAsset *)self playbackVariation] != a3)
  {
    [(PLManagedAsset *)self setPlaybackVariation:v3];
    int v5 = [(PLManagedAsset *)self playbackStyle];
    if ([(id)objc_opt_class() _isLoopingVideoPlaybackVariation:v3])
    {
      unsigned __int16 v6 = 5;
    }
    else
    {
      if (v5 != 5) {
        return;
      }
      if ([(PLManagedAsset *)self isPhotoIris]) {
        unsigned __int16 v6 = 3;
      }
      else {
        unsigned __int16 v6 = 4;
      }
    }
    if (v5 != v6)
    {
      [(PLManagedAsset *)self setPlaybackStyle:v6];
    }
  }
}

- (unsigned)_playbackVariationWithAdjustmentRenderTypes:(unsigned int)a3
{
  if ((a3 & 8) != 0) {
    LOWORD(v3) = 2;
  }
  else {
    int v3 = ((int)(a3 << 29) >> 31) & 3;
  }
  if (a3) {
    return 1;
  }
  else {
    return v3;
  }
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withAdjustmentData:(id)a4 formatIdentifier:(id)a5 formatVersion:(id)a6
{
  return a3 & 0xFFFFF0FF | (((+[PLPhotoEditPersistenceManager renderTypeForAdjustmentData:a4 formatIdentifier:a5 formatVersion:a6] >> 8) & 0xF) << 8);
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withPlaybackVariation:(unsigned __int16)a4
{
  if ((a4 - 1) > 2) {
    int v4 = 0;
  }
  else {
    int v4 = dword_19BA9A8B0[(unsigned __int16)(a4 - 1)];
  }
  return v4 | a3 & 0xFFFFFFF2;
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withAdjustmentState:(unsigned __int16)a4
{
  return a3 & 0xFFFFFFCF | (16 * ((a4 >> 2) & 3));
}

- (unsigned)updateAdjustmentRenderTypes:(unsigned int)a3 withDepthType:(signed __int16)a4
{
  int v4 = (a4 == 2) << 7;
  if (a4 == 1) {
    int v4 = 2;
  }
  return v4 | a3 & 0xFFFFFF7D;
}

- (void)setCameraProcessingAdjustmentStateFromAdjustmentRenderTypes:(unsigned int)a3
{
  uint64_t v4 = (a3 >> 2) & 0xC | [(PLManagedAsset *)self cameraProcessingAdjustmentState] & 0xFFFFFFF3;
  [(PLManagedAsset *)self setCameraProcessingAdjustmentState:v4];
}

- (void)setDepthTypeFromAdjustmentRenderTypes:(unsigned int)a3
{
  if ((a3 & 2) != 0)
  {
    uint64_t v3 = 1;
LABEL_5:
    [(PLManagedAsset *)self setDepthType:v3];
    return;
  }
  if ((a3 & 0x80) != 0)
  {
    uint64_t v3 = 2;
    goto LABEL_5;
  }
}

- (void)setPlaybackVariationAndLoopingStyleFromAdjustmentRenderTypes:(unsigned int)a3
{
  uint64_t v4 = [(PLManagedAsset *)self _playbackVariationWithAdjustmentRenderTypes:*(void *)&a3];
  [(PLManagedAsset *)self setPlaybackVariationAndLoopingPlaybackStyleWithPlaybackVariation:v4];
}

- (BOOL)becomePhotoIrisWithMediaGroupUUID:(id)a3 mainFileMetadata:(id)a4 videoURL:(id)a5 spatialOverCaptureURL:(id)a6 videoDuration:(id *)a7 stillDisplayTime:(id *)a8 options:(unint64_t)a9
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  id v49 = a3;
  id v50 = a4;
  id v16 = a5;
  id v17 = a6;
  if (![(PLManagedAsset *)self isPhoto])
  {
    int v47 = [MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v47, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"PLManagedAsset.m", 2358, @"expect photo when changing to photoIris but type is %d", (int)-[PLManagedAsset kind](self, "kind"));
  }
  BOOL v18 = [(PLManagedAsset *)self isPhoto];
  BOOL v19 = [(PLManagedAsset *)self _checkForAndAddFrameDropRecoveryForPhotoKitIngest];
  long long v20 = [v16 path];
  __int16 v21 = [(PLManagedAsset *)self pathForDeferredVideoComplementFile];
  int v22 = [v20 isEqualToString:v21];

  if (!v18)
  {
    BOOL v25 = 0;
    long long v26 = 0;
    uint64_t v24 = 0;
    goto LABEL_45;
  }
  char v23 = v22 | v19;
  int v48 = v22 | v19;
  if ((a9 & 2) != 0)
  {
    uint64_t v24 = [v16 path];
  }
  else
  {
    if (([v50 isSyndicationOriginated] & 1) == 0)
    {
      long long v28 = [v16 path];
      if (v23) {
        [(PLManagedAsset *)self pathForDeferredVideoComplementFile];
      }
      else {
      uint64_t v24 = [(PLManagedAsset *)self pathForVideoComplementFile];
      }
      BOOL v27 = [(PLManagedAsset *)self _linkVideoFileFromSourcePath:v28 toDestinationPath:v24];

      if (!v17) {
        goto LABEL_18;
      }
      goto LABEL_15;
    }
    uint64_t v24 = 0;
  }
  BOOL v27 = 1;
  if (!v17) {
    goto LABEL_18;
  }
LABEL_15:
  if (v27)
  {
    long long v26 = [v17 path];
    if ((a9 & 2) != 0) {
      [v17 path];
    }
    else {
    unsigned int v44 = [(PLManagedAsset *)self pathForVideoComplementSpatialOverCaptureContentFile];
    }
    BOOL v45 = [(PLManagedAsset *)self _linkVideoFileFromSourcePath:v26 toDestinationPath:v44];

    if (v45) {
      goto LABEL_19;
    }
LABEL_44:
    BOOL v25 = 0;
    goto LABEL_45;
  }
LABEL_18:
  long long v26 = 0;
  if (!v27) {
    goto LABEL_44;
  }
LABEL_19:
  [(PLManagedAsset *)self setKindSubtype:2];
  long long v29 = [(PLManagedAsset *)self master];

  if (v29)
  {
    long long v30 = PLBackendGetLog();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      long long v31 = [(PLManagedAsset *)self uuid];
      *(_DWORD *)buf = 138543362;
      *(void *)&uint8_t buf[4] = v31;
      _os_log_impl(&dword_19B3C7000, v30, OS_LOG_TYPE_INFO, "Mark the master to be not pushed, we just detect the video complement %{public}@", buf, 0xCu);
    }
    long long v32 = [(PLManagedAsset *)self master];
    [v32 setCloudLocalState:0];
  }
  *(_OWORD *)buf = *(_OWORD *)&a7->var0;
  int64_t var3 = a7->var3;
  long long v53 = *(_OWORD *)&a8->var0;
  int64_t v54 = a8->var3;
  [(PLManagedAsset *)self updatePhotoIrisMetadataWithMediaGroupUUID:v49 videoDuration:buf stillDisplayTime:&v53];
  if (([v50 isSyndicationOriginated] & 1) == 0) {
    [MEMORY[0x1E4F8B900] persistString:0 forKey:*MEMORY[0x1E4F8C3E8] fileURL:v16];
  }
  if ([(PLManagedAsset *)self canPlayPhotoIris])
  {
    [(PLManagedAsset *)self setPlaybackStyle:3];
    [(PLManagedAsset *)self updatePlaybackVariationAndStyleFromOriginalMetadata:v50];
  }
  if (v26) {
    [(PLManagedAsset *)self setCameraProcessingAdjustmentState:[(PLManagedAsset *)self cameraProcessingAdjustmentState] | 1];
  }
  if (v19)
  {
    [(PLManagedAsset *)self setVideoDeferredProcessingNeeded:1];
    long long v33 = [(PLManagedObject *)self photoLibrary];
    __int16 v34 = [v33 libraryServicesManager];
    long long v35 = [v34 backgroundJobService];
    __int16 v36 = [(PLManagedObject *)self photoLibrary];
    [v35 signalBackgroundProcessingNeededOnLibrary:v36];
  }
  BOOL v25 = 1;
  if (![(PLManagedAsset *)self isCloudSharedAsset] && v24)
  {
    long long v37 = [(PLManagedObject *)self photoLibrary];
    long long v38 = [v37 libraryID];
    uint64_t v39 = PLDataStoreForClassIDAndLibraryID(0, v38);

    unint64_t v40 = [(PLManagedAsset *)self managedObjectContext];
    char v41 = +[PLResourceInstaller validatedExternalResourceForLocalVideoIfPresentAtPath:v24 context:v40];

    if (v41)
    {
      [v41 setVersion:0];
      [v41 setResourceType:3];
      if (v48) {
        [v41 setRecipeID:131279];
      }
      uint64_t v52 = 0;
      [v39 storeExternalResource:v41 forAsset:self options:0 error:0 resultingResource:&v52];
    }
    if (v26)
    {
      uint64_t v42 = [(PLManagedAsset *)self managedObjectContext];
      unint64_t v43 = +[PLResourceInstaller validatedExternalResourceForLocalVideoIfPresentAtPath:v26 context:v42];

      if (v43)
      {
        [v43 setVersion:0];
        [v43 setResourceType:11];
        uint64_t v51 = 0;
        [v39 storeExternalResource:v43 forAsset:self options:0 error:0 resultingResource:&v51];
      }
    }
    BOOL v25 = 1;
  }
LABEL_45:

  return v25;
}

- (BOOL)becomePhotoIrisWithMediaGroupUUID:(id)a3 mainFileMetadata:(id)a4 videoURL:(id)a5 videoDuration:(id *)a6 stillDisplayTime:(id *)a7 options:(unint64_t)a8
{
  $3CC8671D27C23BF42ADDB32F2B5E48AE v10 = *a6;
  $3CC8671D27C23BF42ADDB32F2B5E48AE v9 = *a7;
  return [(PLManagedAsset *)self becomePhotoIrisWithMediaGroupUUID:a3 mainFileMetadata:a4 videoURL:a5 spatialOverCaptureURL:0 videoDuration:&v10 stillDisplayTime:&v9 options:a8];
}

- (BOOL)_linkVideoFileFromSourcePath:(id)a3 toDestinationPath:(id)a4
{
  v28[1] = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  objc_super v7 = [MEMORY[0x1E4F28CB8] defaultManager];
  if [v5 isEqualToString:v6] && (objc_msgSend(v7, "fileExistsAtPath:", v6))
  {
    char v8 = 1;
  }
  else
  {
    uint64_t v27 = *MEMORY[0x1E4F28370];
    v28[0] = *MEMORY[0x1E4F28358];
    $3CC8671D27C23BF42ADDB32F2B5E48AE v9 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v28 forKeys:&v27 count:1];
    id v20 = 0;
    char v10 = [v7 setAttributes:v9 ofItemAtPath:v5 error:&v20];
    id v11 = v20;

    if ((v10 & 1) == 0)
    {
      int v12 = PLPhotoSharingGetLog();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        id v22 = v5;
        __int16 v23 = 2112;
        id v24 = v11;
        _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "Unable to assign data protection to \"%@\": %@", buf, 0x16u);
      }
    }
    objc_super v13 = (void *)MEMORY[0x1E4F8B908];
    char v14 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v5 isDirectory:0];
    int v15 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v6 isDirectory:0];
    id v19 = 0;
    char v8 = [v13 copyItemAtURL:v14 toURL:v15 error:&v19];
    id v16 = v19;

    if ((v8 & 1) == 0)
    {
      id v17 = PLBackendGetLog();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412802;
        id v22 = v5;
        __int16 v23 = 2112;
        id v24 = v6;
        __int16 v25 = 2112;
        id v26 = v16;
        _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "failed to copy video file from %@ to %@: %@", buf, 0x20u);
      }
    }
  }

  return v8;
}

- (void)updatePhotoIrisVisibilityStateWithVitalityScore:(id)a3
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    [v4 floatValue];
    if (v6 < 0.5)
    {
      objc_super v7 = PLBackendGetLog();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        int v10 = 138543362;
        id v11 = v5;
        _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_INFO, "Setting VC visibility state to hidden with vitalityScore:%{public}@", (uint8_t *)&v10, 0xCu);
      }

      [(PLManagedAsset *)self setVideoCpVisibilityState:[(PLManagedAsset *)self videoCpVisibilityState] | 5];
    }
  }
  else
  {
    char v8 = PLBackendGetLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      $3CC8671D27C23BF42ADDB32F2B5E48AE v9 = [(PLManagedAsset *)self uuid];
      int v10 = 138543362;
      id v11 = v9;
      _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "Vitality thresholding was requested for asset %{public}@ but vitality score was nil", (uint8_t *)&v10, 0xCu);
    }
  }
}

- (void)updatePhotoIrisMetadataWithMediaGroupUUID:(id)a3 videoDuration:(id *)a4 stillDisplayTime:(id *)a5
{
  id v8 = a3;
  $3CC8671D27C23BF42ADDB32F2B5E48AE v9 = [(PLManagedAsset *)self mediaGroupUUID];
  char v10 = [v9 isEqualToString:v8];

  if ((v10 & 1) == 0) {
    [(PLManagedAsset *)self setMediaGroupUUID:v8];
  }
  long long v11 = *(_OWORD *)&a4->var0;
  int64_t var3 = a4->var3;
  [(PLManagedAsset *)self setPhotoIrisVideoDuration:&v11];
  long long v11 = *(_OWORD *)&a5->var0;
  int64_t var3 = a5->var3;
  [(PLManagedAsset *)self setPhotoIrisStillDisplayTime:&v11];
}

- (void)_updatePhotoIrisTemporalMetadataFromVideoComplementAVAsset:(id)a3
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = PFVideoComplementMetadataForVideoAVAssetPreloadingValues();
  float v6 = v5;
  memset(&v21[1], 0, sizeof(CMTime));
  objc_super v7 = (CMTime *)MEMORY[0x1E4F1F9F8];
  if (!v5)
  {
    memset(v21, 0, 24);
    goto LABEL_8;
  }
  [v5 videoDuration];
  memset(v21, 0, 24);
  [v6 imageDisplayTime];
  if (v21[1].value) {
    goto LABEL_18;
  }
  if ((v21[0].flags & 1) == 0)
  {
LABEL_8:
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_14;
    }
    id v10 = v4;
    long long v11 = [v10 URL];
    uint64_t v12 = [MEMORY[0x1E4F28CB8] defaultManager];

    objc_super v13 = [v11 path];
    int v14 = [v12 fileExistsAtPath:v13];

    if (v11)
    {
      int v15 = PLPhotoEditGetLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
      {
        id v16 = [(PLManagedAsset *)self uuid];
        id v17 = @"does not";
        LODWORD(buf.value) = 138543874;
        *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v16;
        LOWORD(buf.flags) = 2112;
        if (v14) {
          id v17 = @"does";
        }
        *(void *)((char *)&buf.flags + 2) = v17;
        HIWORD(buf.epoch) = 2112;
        __int16 v23 = v11;
        _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_FAULT, "asset %{public}@ photo iris still display time is invalid and duration is 0, rejecting times, backing video file %@ exist at url: %@", (uint8_t *)&buf, 0x20u);
      }
    }
    else
    {
LABEL_14:
      long long v11 = PLPhotoEditGetLog();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
      {
LABEL_17:

        v21[1] = *v7;
        goto LABEL_18;
      }
      int v15 = [(PLManagedAsset *)self uuid];
      LODWORD(buf.value) = 138543618;
      *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v15;
      LOWORD(buf.flags) = 2112;
      *(void *)((char *)&buf.flags + 2) = v4;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_FAULT, "asset %{public}@ photo iris still display time is invalid and duration is 0, rejecting times, likely failed to read temporal metadata from avasset: %@", (uint8_t *)&buf, 0x16u);
    }

    goto LABEL_17;
  }
  id v8 = PLPhotoEditGetLog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    $3CC8671D27C23BF42ADDB32F2B5E48AE v9 = [(PLManagedAsset *)self uuid];
    LODWORD(buf.value) = 138543618;
    *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v9;
    LOWORD(buf.flags) = 2112;
    *(void *)((char *)&buf.flags + 2) = v4;
    _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "asset %{public}@ photo iris duration is 0, video will likely be unplayable, avasset: %@", (uint8_t *)&buf, 0x16u);
  }
LABEL_18:
  CMTime buf = v21[0];
  long long v19 = *(_OWORD *)&v7->value;
  *(_OWORD *)&time2.value = *(_OWORD *)&v7->value;
  CMTimeEpoch epoch = v7->epoch;
  time2.CMTimeEpoch epoch = epoch;
  if (CMTimeCompare(&buf, &time2))
  {
    CMTime buf = v21[0];
    [(PLManagedAsset *)self setPhotoIrisStillDisplayTime:&buf];
  }
  CMTime buf = v21[1];
  *(_OWORD *)&time2.value = v19;
  time2.CMTimeEpoch epoch = epoch;
  if (CMTimeCompare(&buf, &time2))
  {
    CMTime buf = v21[1];
    [(PLManagedAsset *)self setPhotoIrisVideoDuration:&buf];
  }
}

- (id)photoIrisSidecarIgnoringSubtype:(BOOL)a3
{
  if (a3 || [(PLManagedAsset *)self isPhotoIris])
  {
    id v4 = [(PLManagedAsset *)self sidecarFileMatchingContentType:*MEMORY[0x1E4F44448] requireExactMatch:0 requireSort:1];
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

- (void)_setVideoComplementData:(id)a3
{
  long long v8 = *MEMORY[0x1E4F1F9F8];
  uint64_t v9 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
  long long v6 = v8;
  uint64_t v7 = v9;
  +[PLAdditionalAssetAttributes fromExtraDurationData:a3 getStillDisplayTime:&v8 videoDuration:&v6];
  long long v4 = v6;
  uint64_t v5 = v7;
  [(PLManagedAsset *)self setPhotoIrisVideoDuration:&v4];
  long long v4 = v8;
  uint64_t v5 = v9;
  [(PLManagedAsset *)self setPhotoIrisStillDisplayTime:&v4];
}

- (id)videoComplementData
{
  if ([(PLManagedAsset *)self _hasVideoComplementData])
  {
    uint64_t v3 = [(PLManagedAsset *)self additionalAttributes];
    memset(&v9, 0, sizeof(v9));
    CMTimeMake(&v9, [v3 videoCpDisplayValue], objc_msgSend(v3, "videoCpDisplayTimescale"));
    memset(&v8, 0, sizeof(v8));
    CMTimeMake(&v8, -[PLManagedAsset videoCpDurationValue](self, "videoCpDurationValue"), [v3 videoCpDurationTimescale]);
    CMTime v7 = v9;
    CMTime v6 = v8;
    id v4 = +[PLAdditionalAssetAttributes newExtraDurationDataFromStillDisplayTime:&v7 videoDuration:&v6];
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

- (BOOL)_hasVideoComplementData
{
  uint64_t v3 = [(PLManagedAsset *)self additionalAttributes];
  BOOL v4 = [(PLManagedAsset *)self videoCpDurationValue]
    || [v3 videoCpDurationTimescale]
    || [v3 videoCpDisplayValue]
    || [v3 videoCpDisplayTimescale] != 0;

  return v4;
}

- (void)setPhotoIrisVideoDuration:(id *)a3
{
  [(PLManagedAsset *)self photoIrisVideoDuration];
  CMTime v6 = *(CMTime *)a3;
  if (CMTimeCompare(&v6, &time2))
  {
    uint64_t v5 = [(PLManagedAsset *)self additionalAttributes];
    [(PLManagedAsset *)self setVideoCpDurationValue:a3->var0];
    [v5 setVideoCpDurationTimescale:a3->var1];
  }
}

- ($3CC8671D27C23BF42ADDB32F2B5E48AE)photoIrisVideoDuration
{
  int64_t v5 = [(PLManagedAsset *)self videoCpDurationValue];
  CMTime v6 = [(PLManagedAsset *)self additionalAttributes];
  int32_t v7 = [v6 videoCpDurationTimescale];

  retstr->var0 = 0;
  *(void *)&retstr->var1 = 0;
  retstr->int64_t var3 = 0;
  return ($3CC8671D27C23BF42ADDB32F2B5E48AE *)CMTimeMake((CMTime *)retstr, v5, v7);
}

- (void)setPhotoIrisStillDisplayTime:(id *)a3
{
  [(PLManagedAsset *)self photoIrisStillDisplayTime];
  CMTime v6 = *(CMTime *)a3;
  if (CMTimeCompare(&v6, &time2))
  {
    int64_t v5 = [(PLManagedAsset *)self additionalAttributes];
    [v5 setVideoCpDisplayValue:a3->var0];
    [v5 setVideoCpDisplayTimescale:a3->var1];
  }
}

- ($3CC8671D27C23BF42ADDB32F2B5E48AE)photoIrisStillDisplayTime
{
  int64_t v5 = [(PLManagedAsset *)self additionalAttributes];
  int64_t v6 = [v5 videoCpDisplayValue];

  int32_t v7 = [(PLManagedAsset *)self additionalAttributes];
  int32_t v8 = [v7 videoCpDisplayTimescale];

  retstr->var0 = 0;
  *(void *)&retstr->var1 = 0;
  retstr->int64_t var3 = 0;
  return ($3CC8671D27C23BF42ADDB32F2B5E48AE *)CMTimeMake((CMTime *)retstr, v6, v8);
}

- (BOOL)hasAdjustedVideoComplement
{
  BOOL v3 = [(PLManagedAsset *)self isPhotoIris];
  if (v3)
  {
    BOOL v3 = [(PLManagedAsset *)self hasAdjustments];
    if (v3) {
      return ([(PLManagedAsset *)self videoCpVisibilityState] >> 3) & 1;
    }
  }
  return v3;
}

- (BOOL)canPlayPhotoIris
{
  BOOL v3 = [(PLManagedAsset *)self isPhotoIris];
  BOOL v4 = [(PLManagedAsset *)self isPhotoIrisPlaceholder];
  BOOL v5 = [(PLManagedAsset *)self hasAdjustments];
  uint64_t v6 = [(PLManagedAsset *)self videoCpVisibilityState];
  int32_t v7 = objc_opt_class();
  return [v7 canPlayPhotoIrisWithPhotoIris:v3 photoIrisPlaceholder:v4 hasAdjustments:v5 videoCpVisibilityState:v6];
}

- (BOOL)isPhotoIrisPlaceholder
{
  int v2 = self;
  BOOL v3 = [(PLManagedAsset *)self isPhotoIris];
  uint64_t v4 = [(PLManagedAsset *)v2 videoCpDurationValue];
  uint64_t v5 = [(PLManagedAsset *)v2 isCloudSharedAsset];
  uint64_t v6 = [(PLManagedAsset *)v2 pathForVideoComplementFile];
  LOBYTE(v2) = [(id)objc_opt_class() isPhotoIrisPlaceholderWithPhotoIris:v3 videoCpDuration:v4 isCloudShared:v5 videoCpFilePath:v6];

  return (char)v2;
}

- (BOOL)isPhotoIris
{
  BOOL v3 = [(PLManagedAsset *)self isPhoto];
  if (v3) {
    LOBYTE(v3) = [(PLManagedAsset *)self kindSubtype] == 2;
  }
  return v3;
}

- (void)setLocation:(id)a3
{
  id v16 = a3;
  [(PLManagedAsset *)self willChangeValueForKey:@"location"];
  [(PLManagedAsset *)self setCachedLocation:v16];
  [(PLManagedAsset *)self didChangeValueForKey:@"location"];
  id v4 = +[PLManagedAsset newLocationDataFromLocation:v16];
  [(PLManagedAsset *)self setLocationData:v4];
  if (v4)
  {
    [v16 coordinate];
    -[PLManagedAsset setLatitude:](self, "setLatitude:");
    [v16 coordinate];
    [(PLManagedAsset *)self setLongitude:v5];
    [v16 horizontalAccuracy];
    double v7 = v6;
    int32_t v8 = [(PLManagedAsset *)self additionalAttributes];
    double v9 = -1.0;
    if (v7 != 0.0) {
      objc_msgSend(v16, "horizontalAccuracy", -1.0);
    }
    [v8 setGpsHorizontalAccuracy:v9];

    [v16 coordinate];
    BOOL v10 = +[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:");
    long long v11 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v12 = v11;
    if (v10)
    {
      objc_super v13 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v16, "pl_locationHash"));
      [v12 setLocationHash:v13];
    }
    else
    {
      [v11 setLocationHash:0];
    }
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4F1E750];
    [(PLManagedAsset *)self setLatitude:*MEMORY[0x1E4F1E750]];
    [(PLManagedAsset *)self setLongitude:*(double *)(v14 + 8)];
    int v15 = [(PLManagedAsset *)self additionalAttributes];
    [v15 setLocationHash:0];

    uint64_t v12 = [(PLManagedAsset *)self additionalAttributes];
    [v12 setGpsHorizontalAccuracy:-1.0];
  }

  [(PLManagedAsset *)self setReverseLocationDataIsValid:v4 == 0];
  [(PLManagedAsset *)self setShiftedLocationIsValid:0];
}

- (CLLocation)location
{
  [(PLManagedAsset *)self willAccessValueForKey:@"location"];
  id v3 = [(PLManagedAsset *)self cachedLocation];
  [(PLManagedAsset *)self didAccessValueForKey:@"location"];
  if (!v3)
  {
    id v4 = [(PLManagedAsset *)self locationData];
    double v5 = [(PLManagedAsset *)self dateCreated];
    id v3 = +[PLManagedAsset newLocationFromLocationData:v4 timestampIfMissing:v5];
    if (v3)
    {
      [(PLManagedAsset *)self willChangeValueForKey:@"location"];
      [(PLManagedAsset *)self setCachedLocation:v3];
      [(PLManagedAsset *)self didChangeValueForKey:@"location"];
    }
  }
  return (CLLocation *)v3;
}

- (BOOL)isLocatedAtCoordinates:(CLLocationCoordinate2D)a3
{
  double longitude = a3.longitude;
  double latitude = a3.latitude;
  double v5 = [(PLManagedAsset *)self location];
  double v6 = v5;
  if (v5)
  {
    [v5 coordinate];
    double v8 = v7;
    double v10 = v9;
  }
  else
  {
    double v8 = *MEMORY[0x1E4F1E750];
    double v10 = *(double *)(MEMORY[0x1E4F1E750] + 8);
  }
  if (+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:", latitude, longitude))
  {
    BOOL v11 = vabdd_f64(latitude, v8) < 2.22044605e-16;
    LOBYTE(v12) = vabdd_f64(longitude, v10) < 2.22044605e-16 && v11;
  }
  else
  {
    BOOL v12 = !+[PLLocationUtils canUseCoordinate:](PLLocationUtils, "canUseCoordinate:", v8, v10);
  }

  return v12;
}

- (BOOL)isSemanticEnhanceProcessingCandidate
{
  int v2 = [(PLManagedAsset *)self additionalAttributes];
  unsigned int v3 = ([v2 deferredProcessingCandidateOptions] >> 3) & 1;

  return v3;
}

- (BOOL)isLocalVideoKeyFrameValid
{
  if ([(PLManagedAsset *)self hasAdjustments]
    || [(PLManagedAsset *)self bundleScope] == 3)
  {
    return 0;
  }
  [MEMORY[0x1E4F8BA10] maskForGuestAsset];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies() ^ 1;
}

- (BOOL)resetVideoKeyFrameTime
{
  uint64_t v3 = [(PLManagedAsset *)self videoKeyFrameValue];
  BOOL v4 = v3 != 0;
  if (v3) {
    [(PLManagedAsset *)self setVideoKeyFrameValue:0];
  }
  if ([(PLManagedAsset *)self videoKeyFrameTimeScale])
  {
    [(PLManagedAsset *)self setVideoKeyFrameTimeScale:0];
    return 1;
  }
  return v4;
}

- (BOOL)isVideoKeyFrameSet
{
  return [(PLManagedAsset *)self videoKeyFrameValue] >= 1
      && (int)[(PLManagedAsset *)self videoKeyFrameTimeScale] > 0;
}

- ($3CC8671D27C23BF42ADDB32F2B5E48AE)videoKeyFrameTime
{
  int64_t v5 = [(PLManagedAsset *)self videoKeyFrameValue];
  int32_t v6 = [(PLManagedAsset *)self videoKeyFrameTimeScale];
  return ($3CC8671D27C23BF42ADDB32F2B5E48AE *)CMTimeMake((CMTime *)retstr, v5, v6);
}

- (void)setVideoKeyFrameTime:(id *)a3
{
  [(PLManagedAsset *)self setVideoKeyFrameValue:a3->var0];
  uint64_t var1 = a3->var1;
  [(PLManagedAsset *)self setVideoKeyFrameTimeScale:var1];
}

- (int64_t)cloudDeletionType
{
  return 1;
}

- (void)prepareForDeletion
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  v30.receiver = self;
  v30.super_class = (Class)PLManagedAsset;
  [(PLManagedObject *)&v30 prepareForDeletion];
  uint64_t v3 = [(PLManagedAsset *)self managedObjectContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    +[PLDelayedSearchIndexUpdates recordAssetIfNeeded:self];
    if (([v3 mergingChanges] & 1) == 0)
    {
      BOOL v4 = [(PLManagedObject *)self photoLibrary];
      int v5 = [v4 isCloudPhotoLibraryEnabled];

      if (v5)
      {
        int32_t v6 = [(PLManagedAsset *)self master];
        double v7 = v6;
        if (v6)
        {
          if (([v6 isDeleted] & 1) == 0)
          {
            double v8 = [(PLManagedAsset *)self uuid];
            char v9 = [v7 hasResourcesOtherThanForAssetUuid:v8];

            if ((v9 & 1) == 0)
            {
              double v10 = PLBackendGetLog();
              if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
              {
                BOOL v11 = objc_msgSend(v7, "pl_shortDescription");
                *(_DWORD *)CMTime buf = 138543362;
                long long v32 = v11;
                _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_INFO, "Deleting master %{public}@, last resource was removed since we deleted the asset", buf, 0xCu);
              }
              [v3 deleteObject:v7];
            }
          }
        }
      }
      if (PLPlatformMomentsSupported())
      {
        BOOL v12 = [v3 delayedSaveActions];
        [v12 recordAssetForMomentUpdate:self];
      }
      [v3 recordAvalancheUUIDForUpdate:self];
      if (!self->_didPrepareForDeletion)
      {
        self->_didPrepareForDeletion = 1;
        if ([(PLManagedAsset *)self savedAssetTypeIsSupportedForUpload]
          && ![(PLManagedAsset *)self isMomentSharedAsset]
          && ![(PLManagedAsset *)self isPlaceholderAsset]
          && ![(PLManagedAsset *)self isLocalOnlyDelete])
        {
          [v3 recordCloudDeletionForObject:self];
        }
        if (PLIsAssetsd()
          && ([(PLManagedAsset *)self hasOutstandingDeferredCaptureProcessing]
           || [(PLManagedAsset *)self hasUnrenderedAsyncAdjustments]))
        {
          [(PLManagedAsset *)self requestDeletionOfDeferredPhotoProcessingIntermediates];
        }
        objc_super v13 = +[PLFilesystemDeletionInfo deletionInfoWithAsset:self];
        if (v13)
        {
          if (!PLIsAssetsd())
          {
            id v26 = PLBackendGetLog();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
            {
              uint64_t v27 = [(PLManagedAsset *)self uuid];
              long long v28 = [(PLManagedAsset *)self mainFileURL];
              long long v29 = [v28 path];
              *(_DWORD *)CMTime buf = 138543618;
              long long v32 = v27;
              __int16 v33 = 2112;
              __int16 v34 = v29;
              _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_INFO, "Registering file system deletion info for assetsd to process %{public}@ %@", buf, 0x16u);
            }
            [v3 registerFilesystemDeletionInfo:v13];
            goto LABEL_38;
          }
          uint64_t v14 = objc_opt_new();
          [v14 addFilesystemDeletionInfo:v13];
          int v15 = [(PLManagedObject *)self photoLibrary];
          [v14 deleteAllRemainingFilesAndThumbnailsWithPhotoLibrary:v15];

          id v16 = [(PLManagedObject *)self photoLibrary];
          id v17 = [v16 libraryServicesManager];

          if ([v17 wellKnownPhotoLibraryIdentifier] == 3)
          {
            BOOL v18 = [(PLManagedAsset *)self uuid];
            long long v19 = +[PLBackgroundJobWorkItem insertBackgroundJobWorkItemIfNeededWithIdentifier:v18 jobType:0 jobFlags:2 inManagedObjectContext:v3];

            if (v19)
            {
              id v20 = PLSyndicationGetLog();
              if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
              {
                __int16 v21 = [(PLManagedAsset *)self uuid];
                *(_DWORD *)CMTime buf = 138412290;
                long long v32 = v21;
                _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_DEBUG, "GuestAssetSync: preparing to delete syndication asset: %@, triggering update", buf, 0xCu);
              }
            }
            id v22 = [v17 backgroundJobService];
            __int16 v23 = [(PLManagedObject *)self photoLibrary];
            [v22 signalBackgroundProcessingNeededOnLibrary:v23];
          }
        }
        else
        {
          uint64_t v14 = PLBackendGetLog();
          if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
LABEL_34:

LABEL_38:
            goto LABEL_39;
          }
          id v17 = [(PLManagedAsset *)self uuid];
          uint64_t v24 = [(PLManagedAsset *)self mainFileURL];
          __int16 v25 = [v24 path];
          *(_DWORD *)CMTime buf = 138543618;
          long long v32 = v17;
          __int16 v33 = 2112;
          __int16 v34 = v25;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_INFO, "No file system deletion info for %{public}@ %@", buf, 0x16u);
        }
        goto LABEL_34;
      }
    }
  }
LABEL_39:
}

- (void)setImportSessionAlbumWithImportSessionID:(id)a3
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int v5 = [(PLManagedAsset *)self managedObjectContext];
  if (v4)
  {
    int32_t v6 = [(PLManagedAsset *)self importSession];
    double v7 = [v6 importSessionID];
    char v8 = [v7 isEqualToString:v4];

    if (v8)
    {
LABEL_18:

      goto LABEL_19;
    }
    char v9 = [v5 userInfo];
    double v10 = [v9 objectForKeyedSubscript:@"importSessionObjectIDCache"];

    if (!v10)
    {
      double v10 = [MEMORY[0x1E4F1CA60] dictionary];
      BOOL v11 = [v5 userInfo];
      [v11 setObject:v10 forKeyedSubscript:@"importSessionObjectIDCache"];
    }
    BOOL v12 = [v10 objectForKeyedSubscript:v4];
    if (v12
      && ([v5 objectRegisteredForID:v12], (objc_super v13 = objc_claimAutoreleasedReturnValue()) != 0)
      || (+[PLImportSession albumWithImportSessionID:v4 inManagedObjectContext:v5], (objc_super v13 = objc_claimAutoreleasedReturnValue()) != 0))
    {
      uint64_t v14 = PLBackendGetLog();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        int v15 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)id v20 = 138412546;
        *(void *)&v20[4] = v4;
        *(_WORD *)&v20[12] = 2112;
        *(void *)&v20[14] = v15;
        id v16 = "Found importSessionAlbum (%@) for asset uuid %@";
LABEL_12:
        _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_INFO, v16, v20, 0x16u);
      }
    }
    else
    {
      objc_super v13 = +[PLImportSession insertNewImportSessionAlbumWithImportSessionID:v4 inManagedObjectContext:v5];
      uint64_t v14 = PLBackendGetLog();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        int v15 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)id v20 = 138412546;
        *(void *)&v20[4] = v4;
        *(_WORD *)&v20[12] = 2112;
        *(void *)&v20[14] = v15;
        id v16 = "Created importSessionAlbum (%@) for asset uuid %@";
        goto LABEL_12;
      }
    }

    if (v6)
    {
      id v17 = PLBackendGetLog();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v18 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)id v20 = 138412802;
        *(void *)&v20[4] = v6;
        *(_WORD *)&v20[12] = 2112;
        *(void *)&v20[14] = v4;
        *(_WORD *)&v20[22] = 2112;
        __int16 v21 = v18;
        _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEFAULT, "Changed importSessionAlbum (%@) to (%@) for asset uuid %@", v20, 0x20u);
      }
    }
    -[PLManagedAsset setImportSession:](self, "setImportSession:", v13, *(_OWORD *)v20, *(void *)&v20[16]);
    [v13 updateImportDatesFromAddedAsset:self];
    long long v19 = [v13 objectID];
    [v10 setObject:v19 forKeyedSubscript:v4];

    goto LABEL_18;
  }
LABEL_19:
}

- (PLRevGeoLocationInfo)locationInfo
{
  int v2 = [(PLManagedAsset *)self reverseLocationData];
  uint64_t v3 = +[PLRevGeoLocationInfo infoFromPlistData:v2];

  return (PLRevGeoLocationInfo *)v3;
}

- (PLRevGeoPlaceAnnotation)placeAnnotation
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [(PLManagedAsset *)self placeAnnotationData];
  if (v3)
  {
    id v9 = 0;
    id v4 = [MEMORY[0x1E4F28DC0] unarchivedObjectOfClass:objc_opt_class() fromData:v3 error:&v9];
    id v5 = v9;
    if (!v4)
    {
      int32_t v6 = PLBackendGetLog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        double v7 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)CMTime buf = 138543618;
        BOOL v11 = v7;
        __int16 v12 = 2114;
        id v13 = v5;
        _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_ERROR, "Failed to read placeAnnotation from asset with ID %{public}@, error:%{public}@", buf, 0x16u);
      }
    }
  }
  else
  {
    id v4 = 0;
  }

  return (PLRevGeoPlaceAnnotation *)v4;
}

- (id)_sizeOfVideoPreviewForAVAsset:(id)a3
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if ([(PLManagedAsset *)self hasAdjustments]) {
    int v5 = 2;
  }
  else {
    int v5 = 0;
  }
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  v24[2] = __48__PLManagedAsset__sizeOfVideoPreviewForAVAsset___block_invoke;
  v24[3] = &__block_descriptor_36_e28_B16__0__PLInternalResource_8l;
  int v25 = v5;
  int32_t v6 = [(PLManagedAsset *)self firstPersistedResourceMatching:v24];
  double v7 = v6;
  double v8 = *MEMORY[0x1E4F1DB30];
  double v9 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
  if (v6)
  {
    double v10 = (double)[v6 orientedWidth];
    double v11 = (double)[v7 orientedHeight];
  }
  else
  {
    +[PLManagedAsset dimensionsForAVAsset:v4];
    if (v12 <= 0.0 || (double v14 = v13, v13 <= 0.0))
    {
      long long v19 = PLThumbnailsGetLog();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        id v20 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)CMTime buf = 138543362;
        uint64_t v27 = v20;
        _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_ERROR, "Asset %{public}@ attempting to size preview image for video with 0 dimensions", buf, 0xCu);
      }
      double v11 = v9;
      double v10 = v8;
    }
    else
    {
      double v10 = v12;
      [MEMORY[0x1E4F59940] maxPixelSizeForResourceType:4];
      PFScaleFactorForMaximumPixelCount();
      BOOL v16 = v15 < 1.0;
      double v17 = v10 * v15;
      double v18 = v14 * v15;
      if (v16) {
        double v11 = v18;
      }
      else {
        double v11 = v14;
      }
      if (v16) {
        double v10 = v17;
      }
    }
  }
  if (v10 == v8 && v11 == v9)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = DCIM_NSValueFromCGSize();
  }

  return v22;
}

BOOL __48__PLManagedAsset__sizeOfVideoPreviewForAVAsset___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 recipeID] == 65741
    && [v3 version] == *(_DWORD *)(a1 + 32);

  return v4;
}

- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 metadata:(id)a7 forceSRGBConversion:(BOOL)a8 forFinalCameraImage:(BOOL)a9 saveCameraPreviewWellImage:(BOOL)a10
{
  BOOL v10 = a8;
  v87[1] = *MEMORY[0x1E4F143B8];
  uint64_t v16 = (uint64_t)a3;
  unint64_t v17 = (unint64_t)a4;
  CFDataRef data = (const __CFData *)a6;
  id v18 = a7;
  context = (void *)MEMORY[0x19F38D3B0]();
  if (!(v16 | v17)
    && [(PLManagedAsset *)self resetVideoKeyFrameTimeAndDeleteKeyFrameResource])
  {
    long long v19 = PLThumbnailsGetLog();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      CFDataRef v20 = [(PLManagedAsset *)self uuid];
      *(_DWORD *)CMTime buf = 138543362;
      CFDataRef v81 = v20;
      _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_INFO, "Reset media analysis key frame due to generating thumbs for asset %{public}@", buf, 0xCu);
    }
  }
  __int16 v21 = PLThumbnailsGetLog();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
  {
    CFDataRef v22 = [(PLManagedAsset *)self uuid];
    *(_DWORD *)CMTime buf = 138412290;
    CFDataRef v81 = v22;
    _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_DEBUG, "[RM]: generating and updating thumbnails for asset %@", buf, 0xCu);
  }
  __int16 v23 = [(PLManagedObject *)self photoLibrary];
  uint64_t v24 = [v23 thumbnailManager];

  unint64_t v25 = [(PLManagedAsset *)self effectiveThumbnailIndex];
  if (![(PLManagedAsset *)self hasAllThumbs])
  {
    id v26 = [(PLManagedObject *)self photoLibrary];
    unint64_t v25 = +[PLThumbnailIndexes nextAvailableThumbnailIndexInLibrary:v26];
  }
  [(PLManagedAsset *)self setEffectiveThumbnailIndex:v25];
  uint64_t v27 = PLThumbnailsGetLog();
  id v69 = v18;
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
  {
    CFDataRef v28 = [(PLManagedAsset *)self uuid];
    *(_DWORD *)CMTime buf = 138412546;
    CFDataRef v81 = v28;
    __int16 v82 = 2048;
    unint64_t v83 = v25;
    _os_log_impl(&dword_19B3C7000, v27, OS_LOG_TYPE_DEBUG, "[RM]: setting effective thumbnail index for %@ at index %lu", buf, 0x16u);

    id v18 = v69;
  }

  uint64_t v68 = (void *)v24;
  if ([(PLManagedAsset *)self isVideo])
  {
    long long v29 = [(PLManagedObject *)self photoLibrary];
    objc_super v30 = (void *)v17;
    if ([v29 isCloudPhotoLibraryEnabled]
      && [(PLManagedAsset *)self cloudPlaceholderKind] == 3)
    {
      int v31 = ![(PLManagedAsset *)self isCloudSharedAsset];
    }
    else
    {
      int v31 = 0;
    }
  }
  else
  {
    objc_super v30 = (void *)v17;
    int v31 = 0;
  }
  char v79 = 0;
  if ([(PLManagedAsset *)self isVideo]
    && [(PLManagedAsset *)self isBundleScopeSyndication]
    || [(PLManagedAsset *)self isPhoto]
    || (([(PLManagedAsset *)self isStreamedVideo] | v31) & 1) != 0
    || [(PLManagedAsset *)self hasUnrenderedAsyncAdjustments])
  {
    if (a5)
    {
      if (v16)
      {
LABEL_26:
        LOBYTE(v63) = v79;
        [(PLManagedAsset *)self generateThumbnailsWithImageSource:a5 imageData:data metadata:v18 allowMediumPreview:1 forceSRGBConversion:v10 forFinalCameraImage:a9 outSmallThumbnailData:0 isPreviewSource:v63];
        id v32 = 0;
        goto LABEL_40;
      }
LABEL_39:
      id v77 = 0;
      LOBYTE(v63) = v79;
      [(PLManagedAsset *)self generateThumbnailsWithImageSource:a5 imageData:data metadata:v18 allowMediumPreview:1 forceSRGBConversion:v10 forFinalCameraImage:a9 outSmallThumbnailData:&v77 isPreviewSource:v63];
      id v32 = v77;
      uint64_t v16 = DCIM_newPLImageWithData();
LABEL_40:
      if (v31)
      {
        uint64_t v39 = [(PLManagedAsset *)self fileURLForThumbnailFile];
        unint64_t v40 = v30;
        +[PLManagedAsset createTHMFileWithPreviewImage:v16 thumbnailImage:v30 fileURLForThumbnailFile:v39];

        char v41 = v68;
        id v18 = v69;
        uint64_t v42 = (uint64_t)v32;
      }
      else
      {
        uint64_t v42 = (uint64_t)v32;
        unint64_t v40 = v30;
        char v41 = v68;
      }
      goto LABEL_43;
    }
    if (data)
    {
      CFDictionaryRef v33 = 0;
      __int16 v34 = 0;
    }
    else
    {
      id v78 = 0;
      uint64_t v36 = [(PLManagedAsset *)self imageDataForThumbGenerationAndIfNeededRAWUTI:&v78 isPreviewSource:&v79];
      id v37 = v78;
      __int16 v34 = v37;
      CFDataRef data = (const __CFData *)v36;
      if (!v36)
      {
        CFDataRef data = 0;
        a5 = 0;
        goto LABEL_38;
      }
      if (v37)
      {
        uint64_t v86 = *MEMORY[0x1E4F2FF78];
        v87[0] = v37;
        CFDictionaryRef v33 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v87 forKeys:&v86 count:1];
      }
      else
      {
        CFDictionaryRef v33 = 0;
      }
    }
    uint64_t v35 = CGImageSourceCreateWithData(data, v33);
    a5 = v35;
    if (v35)
    {
      CFAutorelease(v35);
    }
    else
    {
      long long v38 = PLThumbnailsGetLog();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
      {
        uint64_t v64 = [(__CFData *)data length];
        uint64_t v65 = [(PLManagedAsset *)self _compactDebugDescription];
        *(_DWORD *)CMTime buf = 134218498;
        CFDataRef v81 = data;
        __int16 v82 = 2048;
        unint64_t v83 = v64;
        __int16 v84 = 2114;
        id v85 = v65;
        _os_log_impl(&dword_19B3C7000, v38, OS_LOG_TYPE_ERROR, "Unable to generate image source from data %p (length %lu) for asset %{public}@", buf, 0x20u);
      }
      id v18 = v69;
    }

LABEL_38:
    if (v16) {
      goto LABEL_26;
    }
    goto LABEL_39;
  }
  if (![(PLManagedAsset *)self isVideo])
  {
    unint64_t v40 = v30;
    char v41 = v68;
    goto LABEL_52;
  }
  if (v16 && v30)
  {
    uint64_t v42 = 0;
    id v47 = v30;
    char v41 = v68;
  }
  else
  {
    uint64_t v58 = [(PLManagedAsset *)self pathForVideoFile];
    id v75 = v30;
    id v76 = (id)v16;
    v74[0] = MEMORY[0x1E4F143A8];
    v74[1] = 3221225472;
    v74[2] = __179__PLManagedAsset_generateAndUpdateThumbnailsWithPreviewImage_thumbnailImage_fromImageSource_imageData_metadata_forceSRGBConversion_forFinalCameraImage_saveCameraPreviewWellImage___block_invoke;
    v74[3] = &unk_1E58654E0;
    v74[4] = self;
    PLPreviewImageAndDurationForVideoAtPathWithPreferredTime(0, v58, &v76, &v75, v74);
    id v59 = v76;

    id v47 = v75;
    if (v59)
    {
      uint64_t v42 = 0;
      uint64_t v16 = (uint64_t)v59;
      char v41 = v68;
      id v18 = v69;
    }
    else
    {
      uint64_t v60 = [(PLManagedAsset *)self imageDataForThumbGenerationAndIfNeededRAWUTI:0 isPreviewSource:0];
      uint64_t v42 = (uint64_t)v60;
      char v41 = v68;
      if (v60)
      {
        id v61 = v60;
        uint64_t v16 = DCIM_newPLImageWithData();
      }
      else
      {
        uint64_t v16 = 0;
      }
      id v18 = v69;
    }
  }
  id v62 = [(PLManagedAsset *)self pathForVideoPreviewFile];
  PLWriteImageWithEmbeddedThumbnailToPath(v16, v47, v62);

  id v32 = [(PLManagedAsset *)self fileURLForThumbnailFile];
  +[PLManagedAsset createTHMFileWithPreviewImage:v16 thumbnailImage:v47 fileURLForThumbnailFile:v32];
  unint64_t v40 = v47;
LABEL_43:

  if (v42)
  {
    unint64_t v43 = [PLImageContainer alloc];
    unsigned int v44 = 0;
LABEL_45:
    BOOL v45 = [(id)*MEMORY[0x1E4F44410] identifier];
    BOOL v46 = [(PLImageContainer *)v43 initWithPLImage:v16 backingData:v42 uniformTypeIdentifier:v45 auxiliaryImageRecords:v44];

    goto LABEL_59;
  }
LABEL_52:
  uint64_t v42 = DCIM_storedJPEGDataFromImage();
  unsigned int v44 = [MEMORY[0x1E4F8CC38] auxiliaryImageRecordsToPreserveForDerivativesFromPrimaryImageInImageSource:a5];
  if (v16 | v42)
  {
    unint64_t v43 = [PLImageContainer alloc];
    if (v42) {
      goto LABEL_45;
    }
  }
  else
  {
    int v48 = PLThumbnailsGetLog();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
    {
      CFDataRef v49 = [(PLManagedAsset *)self _compactDebugDescription];
      *(_DWORD *)CMTime buf = 138543362;
      CFDataRef v81 = v49;
      _os_log_impl(&dword_19B3C7000, v48, OS_LOG_TYPE_ERROR, "Missing preview image and data to set as thumbnail for asset %{public}@", buf, 0xCu);
    }
    unint64_t v43 = [PLImageContainer alloc];
  }
  BOOL v46 = [(PLImageContainer *)v43 initWithPLImage:v16 backingData:0 uniformTypeIdentifier:0 auxiliaryImageRecords:v44];
  uint64_t v42 = 0;
LABEL_59:
  [v41 setThumbnailsForAsset:self withImage:v46];
  if (a10)
  {
    id v50 = [(PLManagedObject *)self photoLibrary];
    uint64_t v51 = [v50 libraryServicesManager];
    if (![v51 isSystemPhotoLibrary]
      || !PLCameraPreviewWellSupportedOnCurrentDevice())
    {
LABEL_72:

      goto LABEL_73;
    }
    uint64_t v52 = [(PLManagedObject *)self photoLibrary];
    [v52 thumbnailManager];
    uint64_t v53 = v16;
    v55 = int64_t v54 = v40;
    char v66 = [v55 isRebuildingThumbnails];

    unint64_t v40 = v54;
    uint64_t v16 = v53;
    char v41 = v68;

    id v18 = v69;
    if ((v66 & 1) == 0)
    {
      id v50 = [(PLManagedObject *)self photoLibrary];
      id v56 = [v50 libraryServicesManager];
      uint64_t v51 = [v56 cameraPreviewWellManager];

      if ([v51 shouldReconsiderCameraPreviewWellImageForUpdatedAsset:self thumbnailWasGenerated:1])
      {
        uint64_t v57 = [v50 managedObjectContext];
        if ([v50 pendingTransactions])
        {
          v71[0] = MEMORY[0x1E4F143A8];
          v71[1] = 3221225472;
          v71[2] = __179__PLManagedAsset_generateAndUpdateThumbnailsWithPreviewImage_thumbnailImage_fromImageSource_imageData_metadata_forceSRGBConversion_forFinalCameraImage_saveCameraPreviewWellImage___block_invoke_409;
          v71[3] = &unk_1E5875E18;
          id v72 = v51;
          id v73 = v57;
          [v50 addCompletionHandlerToCurrentTransaction:v71];
        }
        else
        {
          [v51 refreshPreviewWellImageWithContext:v57 avoidNotificationIfLinkIsAlreadySet:0];
        }
        char v41 = v68;
      }
      else
      {
        char v41 = v68;
      }
      goto LABEL_72;
    }
  }
LABEL_73:
}

uint64_t __179__PLManagedAsset_generateAndUpdateThumbnailsWithPreviewImage_thumbnailImage_fromImageSource_imageData_metadata_forceSRGBConversion_forFinalCameraImage_saveCameraPreviewWellImage___block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _sizeOfVideoPreviewForAVAsset:a2];
}

uint64_t __179__PLManagedAsset_generateAndUpdateThumbnailsWithPreviewImage_thumbnailImage_fromImageSource_imageData_metadata_forceSRGBConversion_forFinalCameraImage_saveCameraPreviewWellImage___block_invoke_409(uint64_t a1)
{
  return [*(id *)(a1 + 32) refreshPreviewWellImageWithContext:*(void *)(a1 + 40) avoidNotificationIfLinkIsAlreadySet:0];
}

- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 metadata:(id)a7 forceSRGBConversion:(BOOL)a8 saveCameraPreviewWellImage:(BOOL)a9
{
  BYTE1(v9) = a9;
  LOBYTE(v9) = 0;
  -[PLManagedAsset generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:](self, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:", a3, a4, a5, a6, a7, a8, v9);
}

- (void)generateAndUpdateThumbnailsWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fromImageSource:(CGImageSource *)a5 imageData:(id)a6 forceSRGBConversion:(BOOL)a7
{
  LOWORD(v7) = 256;
  -[PLManagedAsset generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:](self, "generateAndUpdateThumbnailsWithPreviewImage:thumbnailImage:fromImageSource:imageData:metadata:forceSRGBConversion:forFinalCameraImage:saveCameraPreviewWellImage:", a3, a4, a5, a6, 0, a7, v7);
}

- (void)setThumbnailDataFromImageProperties:(id)a3
{
  id v12 = [a3 objectForKey:*MEMORY[0x1E4F2F800]];
  BOOL v4 = [v12 objectForKey:*MEMORY[0x1E4F2FEA0]];
  int v5 = [v12 objectForKey:*MEMORY[0x1E4F2FEA8]];
  int32_t v6 = [(PLManagedAsset *)self additionalAttributes];
  [v6 setEmbeddedThumbnailOffset:v4];

  uint64_t v7 = [(PLManagedAsset *)self additionalAttributes];
  [v7 setEmbeddedThumbnailLength:v5];

  double v8 = [v12 objectForKey:@"JPEGInterchangeFormatWidth"];
  uint64_t v9 = [v12 objectForKey:@"JPEGInterchangeFormatHeight"];
  BOOL v10 = [(PLManagedAsset *)self additionalAttributes];
  [v10 setEmbeddedThumbnailWidth:v8];

  double v11 = [(PLManagedAsset *)self additionalAttributes];
  [v11 setEmbeddedThumbnailHeight:v9];
}

- (id)thumbnailIdentifier
{
  id v3 = [(PLManagedAsset *)self uuid];
  BOOL v4 = [(PLManagedAsset *)self directory];
  int v5 = [(PLManagedAsset *)self filename];
  uint64_t v6 = [(PLManagedAsset *)self bundleScope];
  uint64_t v7 = [(PLManagedObject *)self pathManager];
  double v8 = +[PLThumbnailManager thumbnailIdentifierWithAssetUUID:v3 directory:v4 filename:v5 bundleScope:v6 pathManager:v7];

  return v8;
}

- (BOOL)hasMasterThumb
{
  unsigned int v2 = [(PLManagedAsset *)self thumbnailIndex];
  return v2 == -2 || v2 < 0x989681;
}

- (BOOL)hasAllThumbs
{
  return [(PLManagedAsset *)self thumbnailIndex] < 0x989681;
}

- (void)setEffectiveThumbnailIndex:(unint64_t)a3
{
  int v5 = [(PLManagedAsset *)self thumbnailIndex];
  if (a3 > 0x989680) {
    a3 = 0xFFFFFFFFLL;
  }
  else {
    a3 = a3;
  }
  [(PLManagedAsset *)self setThumbnailIndex:a3];
  if ((a3 & 0x80000000) != 0 || v5 != -2)
  {
    [(PLManagedAsset *)self recalculateImageRequestHints];
  }
  else
  {
    [(PLManagedAsset *)self insertTableThumbImageRequestHints];
  }
}

- (unint64_t)effectiveThumbnailIndex
{
  LODWORD(result) = [(PLManagedAsset *)self thumbnailIndex];
  if ((result & 0x80000000) != 0) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    return (int)result;
  }
}

- (unint64_t)syndicationProcessingVersion
{
  unsigned int v2 = [(PLManagedAsset *)self mediaAnalysisAttributes];
  unint64_t v3 = [v2 syndicationProcessingVersion];

  return v3;
}

- (unsigned)syndicationProcessingValue
{
  unsigned int v2 = [(PLManagedAsset *)self mediaAnalysisAttributes];
  unsigned __int16 v3 = [v2 syndicationProcessingValue];

  return v3;
}

- (id)mediaAnalysisAttributesInsertingIfNecessary
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  unsigned __int16 v3 = [(PLManagedAsset *)self mediaAnalysisAttributes];
  if (!v3)
  {
    BOOL v4 = PLBackendGetLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      int v5 = [(PLManagedAsset *)self uuidDescription];
      int v8 = 138412290;
      uint64_t v9 = v5;
      _os_log_impl(&dword_19B3C7000, v4, OS_LOG_TYPE_FAULT, "mediaAnalysisAttributes is unexpectedly nil for asset: %@", (uint8_t *)&v8, 0xCu);
    }
    uint64_t v6 = [(PLManagedAsset *)self managedObjectContext];
    unsigned __int16 v3 = +[PLManagedObject insertInManagedObjectContext:v6];

    [(PLManagedAsset *)self setMediaAnalysisAttributes:v3];
  }
  return v3;
}

- (unsigned)syndicationHistory
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  unsigned __int16 v3 = [v2 syndicationHistory];

  return v3;
}

- (void)setImportedByBundleIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setImportedByBundleIdentifier:v4];
}

- (NSString)importedByBundleIdentifier
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  unsigned __int16 v3 = [v2 importedByBundleIdentifier];

  return (NSString *)v3;
}

- (void)setShiftedLocationIsValid:(BOOL)a3
{
  BOOL v3 = a3;
  id v4 = [(PLManagedAsset *)self additionalAttributes];
  [v4 setShiftedLocationIsValid:v3];
}

- (BOOL)shiftedLocationIsValid
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  char v3 = [v2 shiftedLocationIsValid];

  return v3;
}

- (void)setShiftedLocation:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setShiftedLocation:v4];
}

- (CLLocation)shiftedLocation
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  char v3 = [v2 shiftedLocation];

  return (CLLocation *)v3;
}

- (void)setImportedBy:(signed __int16)a3
{
  uint64_t v3 = a3;
  id v4 = [(PLManagedAsset *)self additionalAttributes];
  [v4 setImportedBy:v3];
}

- (signed)importedBy
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  signed __int16 v3 = [v2 importedBy];

  return v3;
}

- (void)setPlaceAnnotationData:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setPlaceAnnotationData:v4];
}

- (NSData)placeAnnotationData
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  signed __int16 v3 = [v2 placeAnnotationData];

  return (NSData *)v3;
}

- (void)setReverseLocationDataIsValid:(BOOL)a3
{
  BOOL v3 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [NSNumber numberWithBool:v3];
  [v5 setReverseLocationDataIsValid:v4];
}

- (BOOL)reverseLocationDataIsValid
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  BOOL v3 = [v2 reverseLocationDataIsValid];
  char v4 = [v3 BOOLValue];

  return v4;
}

- (void)setReverseLocationData:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setReverseLocationData:v4];
}

- (NSData)reverseLocationData
{
  unsigned int v2 = [(PLManagedAsset *)self additionalAttributes];
  BOOL v3 = [v2 reverseLocationData];

  return (NSData *)v3;
}

- (void)setDayGroupHighlightBeingSummaryAssets:(id)a3
{
}

- (void)setDayGroupHighlightBeingExtendedAssets:(id)a3
{
}

- (void)setDayGroupHighlightBeingAssets:(id)a3
{
}

- (void)setHighlightBeingSummaryAssets:(id)a3
{
}

- (void)setHighlightBeingExtendedAssets:(id)a3
{
}

- (void)setHighlightBeingAssets:(id)a3
{
}

- (void)_handleHighlightRelationshipChangeForKey:(id)a3 forAssetCountKey:(id)a4 newValue:(id)a5
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (v9)
  {
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    __int16 v23 = [MEMORY[0x1E4F28B00] currentHandler];
    [v23 handleFailureInMethod:a2, self, @"PLManagedAsset.m", 1323, @"Invalid parameter not satisfying: %@", @"key" object file lineNumber description];

    if (v10) {
      goto LABEL_3;
    }
  }
  uint64_t v24 = [MEMORY[0x1E4F28B00] currentHandler];
  [v24 handleFailureInMethod:a2, self, @"PLManagedAsset.m", 1324, @"Invalid parameter not satisfying: %@", @"countKey" object file lineNumber description];

LABEL_3:
  id v12 = [(PLManagedObject *)self photoLibrary];
  BOOL v13 = [(PLManagedAsset *)self hasLibraryScope];
  uint64_t v14 = [(PLManagedAsset *)self libraryScopeShareState];
  char v15 = 1;
  if (v14 > 65537)
  {
    if (v14 != 65538 && v14 != 65552) {
      goto LABEL_9;
    }
  }
  else if (v14 != 2 && v14 != 16)
  {
LABEL_9:
    char v15 = 0;
  }
  uint64_t v16 = [v12 libraryServicesManager];
  unint64_t v17 = [v16 databaseContext];
  id v18 = [v17 momentLibrary];
  BOOL v19 = v12 == v18;

  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = __85__PLManagedAsset__handleHighlightRelationshipChangeForKey_forAssetCountKey_newValue___block_invoke;
  v25[3] = &unk_1E58654B8;
  BOOL v30 = v19;
  BOOL v31 = v13;
  char v32 = v15;
  id v26 = v9;
  uint64_t v27 = self;
  id v28 = v11;
  id v29 = v10;
  id v20 = v10;
  id v21 = v11;
  id v22 = v9;
  [(PLManagedObject *)self pl_safeSetValue:v21 forKey:v22 valueDidChangeHandler:v25];
}

void __85__PLManagedAsset__handleHighlightRelationshipChangeForKey_forAssetCountKey_newValue___block_invoke(uint64_t a1, void *a2)
{
  id v9 = a2;
  if (*(unsigned char *)(a1 + 64))
  {
    BOOL v3 = objc_alloc_init(PLSharedAssetsContainerIncrementalChange);
    [(PLSharedAssetsContainerIncrementalChange *)v3 setCollectionChangeType:1];
    if (*(unsigned char *)(a1 + 65)) {
      uint64_t v4 = 1;
    }
    else {
      uint64_t v4 = 2;
    }
    [(PLSharedAssetsContainerIncrementalChange *)v3 setSharingChange:v4];
    if ([*(id *)(a1 + 32) isEqual:@"highlightBeingAssets"])
    {
      if (*(unsigned char *)(a1 + 66)) {
        uint64_t v5 = 1;
      }
      else {
        uint64_t v5 = 2;
      }
      [(PLSharedAssetsContainerIncrementalChange *)v3 setSuggestionStateChange:v5];
    }
    -[PLSharedAssetsContainerIncrementalChange setMediaType:](v3, "setMediaType:", [*(id *)(a1 + 40) kind] != 0);
    [*(id *)(a1 + 48) reportSharedAssetContainerIncrementalChange:v3 forAllAssetsCountKey:*(void *)(a1 + 56)];

    if (*(unsigned char *)(a1 + 64))
    {
      uint64_t v6 = objc_alloc_init(PLSharedAssetsContainerIncrementalChange);
      [(PLSharedAssetsContainerIncrementalChange *)v6 setCollectionChangeType:2];
      if (*(unsigned char *)(a1 + 65)) {
        uint64_t v7 = 1;
      }
      else {
        uint64_t v7 = 2;
      }
      [(PLSharedAssetsContainerIncrementalChange *)v6 setSharingChange:v7];
      if ([*(id *)(a1 + 32) isEqual:@"highlightBeingAssets"])
      {
        if (*(unsigned char *)(a1 + 66)) {
          uint64_t v8 = 1;
        }
        else {
          uint64_t v8 = 2;
        }
        [(PLSharedAssetsContainerIncrementalChange *)v6 setSuggestionStateChange:v8];
      }
      -[PLSharedAssetsContainerIncrementalChange setMediaType:](v6, "setMediaType:", [*(id *)(a1 + 40) kind] != 0);
      [v9 reportSharedAssetContainerIncrementalChange:v6 forAllAssetsCountKey:*(void *)(a1 + 56)];
    }
  }
}

- (BOOL)isSuggestedForSharingByPhotos
{
  uint64_t v2 = [(PLManagedAsset *)self libraryScopeShareState];
  BOOL result = 1;
  if (v2 > 65537)
  {
    if (v2 != 65538 && v2 != 65552) {
      return 0;
    }
  }
  else if (v2 != 2 && v2 != 16)
  {
    return 0;
  }
  return result;
}

- (BOOL)hasLibraryScope
{
  uint64_t v2 = [(PLManagedAsset *)self objectIDsForRelationshipNamed:@"libraryScope"];
  BOOL v3 = [v2 count] != 0;

  return v3;
}

- (NSString)originalFilename
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  BOOL v3 = [v2 originalFilename];

  return (NSString *)v3;
}

- (BOOL)isWalrusEnabled
{
  if ((MEMORY[0x19F38C0C0]() & 1) == 0)
  {
    uint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
    [v5 handleFailureInMethod:a2, self, @"PLManagedAsset.m", 1302, @"Invalid parameter not satisfying: %@", @"PLIsXcTest()" object file lineNumber description];
  }
  return 0;
}

- (id)libraryID
{
  uint64_t v2 = [(PLManagedObject *)self photoLibrary];
  BOOL v3 = [v2 libraryID];

  return v3;
}

- (PLManagedAssetID)assetID
{
  assetID = self->_assetID;
  if (!assetID)
  {
    uint64_t v4 = [[PLManagedAssetID alloc] initWithManagedAsset:self];
    uint64_t v5 = self->_assetID;
    self->_assetID = v4;

    assetID = self->_assetID;
  }
  return assetID;
}

- (CGSize)unorientedSize
{
  uint64_t v3 = [(PLManagedAsset *)self width];
  uint64_t v4 = [(PLManagedAsset *)self height];
  int v5 = [(PLManagedAsset *)self orientation];
  if (v5 == 8 || v5 == 6)
  {
    double v6 = (double)v4;
    double v7 = (double)v3;
    BOOL v8 = 1;
  }
  else
  {
    BOOL v8 = (unint64_t)(v5 - 5) < 4;
    double v6 = (double)v4;
    double v7 = (double)v3;
    double v9 = (double)v3;
    if ((unint64_t)(v5 - 5) > 3) {
      goto LABEL_6;
    }
  }
  double v9 = v6;
LABEL_6:
  if (v8) {
    double v6 = v7;
  }
  result.double height = v6;
  result.double width = v9;
  return result;
}

- (void)setHeight:(int64_t)a3
{
  [(PLManagedAsset *)self willChangeValueForKey:@"height"];
  self->_double height = a3;
  [(PLManagedAsset *)self didChangeValueForKey:@"height"];
}

- (int64_t)height
{
  [(PLManagedAsset *)self willAccessValueForKey:@"height"];
  int64_t height = self->_height;
  [(PLManagedAsset *)self didAccessValueForKey:@"height"];
  return height;
}

- (void)setWidth:(int64_t)a3
{
  [(PLManagedAsset *)self willChangeValueForKey:@"width"];
  self->_double width = a3;
  [(PLManagedAsset *)self didChangeValueForKey:@"width"];
}

- (int64_t)width
{
  [(PLManagedAsset *)self willAccessValueForKey:@"width"];
  int64_t width = self->_width;
  [(PLManagedAsset *)self didAccessValueForKey:@"width"];
  return width;
}

- (NSSet)allDetectedFaces
{
  uint64_t v3 = [(PLManagedAsset *)self detectedFaces];
  uint64_t v4 = (void *)[v3 mutableCopy];

  int v5 = [(PLManagedAsset *)self temporalDetectedFaces];
  [v4 unionSet:v5];

  double v6 = (void *)[v4 copy];
  return (NSSet *)v6;
}

- (void)didTurnIntoFault
{
  reverseGeoDescription = self->_reverseGeoDescription;
  self->_reverseGeoDescription = 0;

  self->_isLocatedAtHome = 0;
  self->_didLoadReverseGeo = 0;
  v4.receiver = self;
  v4.super_class = (Class)PLManagedAsset;
  [(PLManagedAsset *)&v4 didTurnIntoFault];
}

- (void)willTurnIntoFault
{
  [(PLManagedAsset *)self unregisterForChanges];
  v3.receiver = self;
  v3.super_class = (Class)PLManagedAsset;
  [(PLManagedAsset *)&v3 willTurnIntoFault];
}

- (void)awakeFromSnapshotEvents:(unint64_t)a3
{
  if ([(PLManagedAsset *)self isInFlight] && [(PLManagedAsset *)self hasAllThumbs])
  {
    [(PLManagedAsset *)self setIsInFlight:0];
  }
}

- (void)awakeFromFetch
{
  v3.receiver = self;
  v3.super_class = (Class)PLManagedAsset;
  [(PLManagedAsset *)&v3 awakeFromFetch];
  [(PLManagedAsset *)self registerForChanges];
}

- (void)awakeFromInsert
{
  v8.receiver = self;
  v8.super_class = (Class)PLManagedAsset;
  [(PLManagedAsset *)&v8 awakeFromInsert];
  objc_super v3 = [(PLManagedAsset *)self managedObjectContext];
  objc_super v4 = +[PLManagedObject insertInManagedObjectContext:v3];
  if (v4)
  {
    [(PLManagedAsset *)self setAdditionalAttributes:v4];
    int v5 = +[PLManagedObject insertInManagedObjectContext:v3];
    if (v5)
    {
      [(PLManagedAsset *)self setMediaAnalysisAttributes:v5];
      [(PLManagedAsset *)self setKind:3];
      [(PLManagedAsset *)self setPlaybackStyle:0];
      double v6 = [MEMORY[0x1E4F8BA08] UUIDString];
      [(PLManagedAsset *)self setUuid:v6];

      [(PLManagedAsset *)self setHdrType:0];
      -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", [MEMORY[0x1E4F8BA10] savedAssetTypeForAwakeFromInsert]);
      [(PLManagedAsset *)self setTrashedState:0];
      double v7 = [MEMORY[0x1E4F1C9C8] date];
      [(PLManagedAsset *)self setAddedDate:v7];

      [(PLManagedAsset *)self registerForChanges];
      [(PLManagedAsset *)self setComplete:1];
    }
  }
}

- (void)dealloc
{
  [(PLManagedAsset *)self unregisterForChanges];
  [(PLManagedAsset *)self setIsInFlight:0];
  reverseGeoDescription = self->_reverseGeoDescription;
  self->_reverseGeoDescription = 0;

  v4.receiver = self;
  v4.super_class = (Class)PLManagedAsset;
  [(PLManagedAsset *)&v4 dealloc];
}

+ (unsigned)portraitScrubberThumbnailFormat
{
  uint64_t v2 = [MEMORY[0x1E4F8B918] defaultFormatChooser];
  objc_super v3 = [v2 portraitScrubberThumbnailFormat];
  unsigned __int16 v4 = [v3 formatID];

  return v4;
}

+ (unsigned)landscapeScrubberThumbnailFormat
{
  uint64_t v2 = [MEMORY[0x1E4F8B918] defaultFormatChooser];
  objc_super v3 = [v2 landscapeScrubberThumbnailFormat];
  unsigned __int16 v4 = [v3 formatID];

  return v4;
}

+ (unsigned)masterThumbnailFormat
{
  uint64_t v2 = [MEMORY[0x1E4F8B918] defaultFormatChooser];
  objc_super v3 = [v2 masterThumbnailFormat];
  unsigned __int16 v4 = [v3 formatID];

  return v4;
}

+ (id)attributeValidationRules
{
  v84[2] = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  CFTypeRef v71 = [MEMORY[0x1E4F1C9C8] date];
  objc_super v3 = _PLPropertyValidationRuleMake(5, @"addedDate", 0, 0, v71, 0);
  [v2 setObject:v3 forKeyedSubscript:@"addedDate"];

  unsigned __int16 v4 = _PLPropertyValidationRuleMake(3, @"adjustmentsState", &unk_1EEBED7A0, 0, 0, 0);
  int v5 = _PLPropertyValidationRuleMake(9, @"adjustmentTimestamp", 0, 0, 0, 0);
  double v6 = v4;
  uint64_t v70 = v4;
  double v7 = [v4 reverseRule];
  v84[0] = v7;
  v84[1] = v5;
  id v69 = v5;
  objc_super v8 = [MEMORY[0x1E4F1C978] arrayWithObjects:v84 count:2];
  uint64_t v68 = +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:v8];

  v83[0] = v6;
  double v9 = [v5 reverseRule];
  v83[1] = v9;
  id v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v83 count:2];
  uint64_t v67 = +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:v10];

  v82[0] = v68;
  v82[1] = v67;
  id v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v82 count:2];
  id v12 = +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:v11];
  [v2 setObject:v12 forKeyedSubscript:@"adjustmentTimestamp"];

  BOOL v13 = _PLPropertyValidationRuleMake(3, @"complete", MEMORY[0x1E4F1CC38], 0, 0, 0);
  [v2 setObject:v13 forKeyedSubscript:@"complete"];

  uint64_t v14 = _PLPropertyValidationRuleMake(5, @"dateCreated", 0, 0, v71, 0);
  [v2 setObject:v14 forKeyedSubscript:@"dateCreated"];

  char v15 = _PLPropertyValidationRuleMake(2, @"directory", 0, 0, 0, 0);
  [v2 setObject:v15 forKeyedSubscript:@"directory"];

  uint64_t v16 = _PLPropertyValidationRuleMake(2, @"filename", 0, 0, 0, 0);
  [v2 setObject:v16 forKeyedSubscript:@"filename"];

  uint64_t v17 = _PLPropertyValidationRuleMake(6, @"kind", 0, 0, 0, &unk_1EEBF1718);
  char v66 = _PLPropertyValidationRuleMake(4, @"height", &unk_1EEBED5D8, 0, 0, 0);
  uint64_t v65 = _PLPropertyValidationRuleMake(4, @"width", &unk_1EEBED5D8, 0, 0, 0);
  v81[0] = v17;
  v81[1] = v66;
  id v18 = (void *)v17;
  BOOL v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:v81 count:2];
  uint64_t v64 = +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:v19];

  v80[0] = v18;
  v80[1] = v65;
  id v20 = [MEMORY[0x1E4F1C978] arrayWithObjects:v80 count:2];
  id v62 = +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:v20];

  v79[0] = v64;
  id v21 = v18;
  uint64_t v63 = v18;
  id v22 = [v18 reverseRule];
  v79[1] = v22;
  __int16 v23 = [MEMORY[0x1E4F1C978] arrayWithObjects:v79 count:2];
  uint64_t v24 = +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:v23];
  [v2 setObject:v24 forKeyedSubscript:@"height"];

  v78[0] = v62;
  unint64_t v25 = [v21 reverseRule];
  v78[1] = v25;
  id v26 = [MEMORY[0x1E4F1C978] arrayWithObjects:v78 count:2];
  uint64_t v27 = +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:v26];
  [v2 setObject:v27 forKeyedSubscript:@"width"];

  id v28 = _PLPropertyValidationRuleMake(6, @"kind", 0, 0, 0, &unk_1EEBF1730);
  [v2 setObject:v28 forKeyedSubscript:@"kind"];

  id v29 = _PLPropertyValidationRuleMake(6, @"kindSubtype", 0, 0, 0, &unk_1EEBF1748);
  [v2 setObject:v29 forKeyedSubscript:@"kindSubtype"];

  BOOL v30 = _PLPropertyValidationRuleMake(12, @"lastSharedDate", 0, 0, v71, 0);
  [v2 setObject:v30 forKeyedSubscript:@"lastSharedDate"];

  BOOL v31 = _PLPropertyValidationRuleMake(12, @"modificationDate", 0, 0, v71, 0);
  [v2 setObject:v31 forKeyedSubscript:@"modificationDate"];

  char v32 = _PLPropertyValidationRuleMake(5, @"orientation", 0, &unk_1EEBED7A0, &unk_1EEBED830, 0);
  [v2 setObject:v32 forKeyedSubscript:@"orientation"];

  CFDictionaryRef v33 = _PLPropertyValidationRuleMake(6, @"playbackStyle", 0, 0, 0, &unk_1EEBF1760);
  [v2 setObject:v33 forKeyedSubscript:@"playbackStyle"];

  __int16 v34 = _PLPropertyValidationRuleMake(6, @"playbackVariation", 0, 0, 0, &unk_1EEBF1778);
  [v2 setObject:v34 forKeyedSubscript:@"playbackVariation"];

  id v61 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateArrayArgumentForMask:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForValidSavedAssetTypesDuringMacMigration"));
  uint64_t v35 = _PLPropertyValidationRuleMake(6, @"savedAssetType", 0, 0, 0, v61);
  [v2 setObject:v35 forKeyedSubscript:@"savedAssetType"];

  uint64_t v36 = _PLPropertyValidationRuleMake(3, @"trashedState", &unk_1EEBED638, 0, 0, 0);
  id v37 = _PLPropertyValidationRuleMake(9, @"trashedDate", 0, 0, 0, 0);
  v77[0] = v36;
  v77[1] = v37;
  uint64_t v60 = v36;
  long long v38 = [MEMORY[0x1E4F1C978] arrayWithObjects:v77 count:2];
  id v59 = +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:v38];

  uint64_t v39 = [v36 reverseRule];
  v76[0] = v39;
  unint64_t v40 = [v37 reverseRule];
  v76[1] = v40;
  char v41 = [MEMORY[0x1E4F1C978] arrayWithObjects:v76 count:2];
  uint64_t v58 = +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:v41];

  v75[0] = v59;
  v75[1] = v58;
  uint64_t v42 = [MEMORY[0x1E4F1C978] arrayWithObjects:v75 count:2];
  unint64_t v43 = +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:v42];
  [v2 setObject:v43 forKeyedSubscript:@"trashedDate"];

  unsigned int v44 = _PLPropertyValidationRuleMake(6, @"trashedState", 0, 0, 0, &unk_1EEBF1790);
  [v2 setObject:v44 forKeyedSubscript:@"trashedState"];

  BOOL v45 = _PLPropertyValidationRuleMake(2, @"uniformTypeIdentifier", 0, 0, 0, 0);
  [v2 setObject:v45 forKeyedSubscript:@"uniformTypeIdentifier"];

  BOOL v46 = _PLPropertyValidationRuleMake(2, @"uuid", 0, 0, 0, 0);
  [v2 setObject:v46 forKeyedSubscript:@"uuid"];

  id v47 = _PLPropertyValidationRuleMake(3, @"kindSubtype", &unk_1EEBED608, 0, 0, 0);
  int v48 = _PLPropertyValidationRuleMake(3, @"videoCpDurationValue", &unk_1EEBED5D8, 0, 0, 0);
  v74[0] = v47;
  CFDataRef v49 = [v48 reverseRule];
  v74[1] = v49;
  id v50 = [MEMORY[0x1E4F1C978] arrayWithObjects:v74 count:2];
  uint64_t v51 = +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:v50];

  uint64_t v52 = [v47 reverseRule];
  v73[0] = v52;
  v73[1] = v48;
  uint64_t v53 = [MEMORY[0x1E4F1C978] arrayWithObjects:v73 count:2];
  int64_t v54 = +[PLCompoundPropertyValidationRule andCompoundPropertyValidationRuleWithRules:v53];

  v72[0] = v51;
  v72[1] = v54;
  uint64_t v55 = [MEMORY[0x1E4F1C978] arrayWithObjects:v72 count:2];
  id v56 = +[PLCompoundPropertyValidationRule orCompoundPropertyValidationRuleWithRules:v55];
  [v2 setObject:v56 forKeyedSubscript:@"videoCpDurationValue"];

  return v2;
}

+ (void)batchFetchAssetsByFaceUUIDWithFaceUUIDs:(id)a3 library:(id)a4 completion:(id)a5
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (!v11)
  {
    char v15 = [MEMORY[0x1E4F28B00] currentHandler];
    [v15 handleFailureInMethod:a2 object:a1 file:@"PLManagedAsset.m" lineNumber:12106 description:@"Completion handler is mandatory"];
  }
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  void v16[2] = __77__PLManagedAsset_batchFetchAssetsByFaceUUIDWithFaceUUIDs_library_completion___block_invoke;
  v16[3] = &unk_1E5874868;
  id v17 = v10;
  id v18 = v9;
  id v19 = v11;
  id v12 = v11;
  id v13 = v9;
  id v14 = v10;
  [v14 performBlockAndWait:v16];
}

void __77__PLManagedAsset_batchFetchAssetsByFaceUUIDWithFaceUUIDs_library_completion___block_invoke(uint64_t a1)
{
  v14[1] = *MEMORY[0x1E4F143B8];
  id v2 = [*(id *)(a1 + 32) managedObjectContext];
  objc_super v3 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K IN %@", @"uuid", *(void *)(a1 + 40)];
  unsigned __int16 v4 = (void *)MEMORY[0x1E4F1C0D0];
  int v5 = +[PLDetectedFace entityName];
  double v6 = [v4 fetchRequestWithEntityName:v5];

  v14[0] = @"assetForFace";
  double v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v14 count:1];
  [v6 setRelationshipKeyPathsForPrefetching:v7];

  [v6 setPredicate:v3];
  objc_super v8 = [MEMORY[0x1E4F1CA60] dictionary];
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __77__PLManagedAsset_batchFetchAssetsByFaceUUIDWithFaceUUIDs_library_completion___block_invoke_2;
  v12[3] = &unk_1E5874A10;
  id v9 = v8;
  id v13 = v9;
  id v10 = [v2 enumerateObjectsFromFetchRequest:v6 count:0 usingDefaultBatchSizeWithBlock:v12];
  if (v10)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    id v11 = (void *)[objc_alloc(MEMORY[0x1E4F1C9E8]) initWithDictionary:v9];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void __77__PLManagedAsset_batchFetchAssetsByFaceUUIDWithFaceUUIDs_library_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v5 = a2;
  objc_super v3 = [v5 associatedAssetForFaceOrTorso:1 orTemporal:1];
  if (v3)
  {
    unsigned __int16 v4 = [v5 uuid];
    [*(id *)(a1 + 32) setObject:v3 forKey:v4];
  }
}

+ (BOOL)_isPlayableVideoUTI:(__CFString *)a3
{
  return +[PLUniformTypeIdentifier isPlayableVideoTypeIdentifierString:a3];
}

+ (id)uuidFromAssetURL:(id)a3
{
  return (id)[a1 uuidFromAssetURL:a3 fileExtension:0 sidecarIndex:0];
}

+ (id)uuidFromAssetURL:(id)a3 fileExtension:(id *)a4 sidecarIndex:(id *)a5
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  objc_super v8 = (void *)MEMORY[0x19F38D3B0]();
  id v9 = [v7 scheme];
  if ([v9 isEqualToString:@"assets-library"])
  {
    id v10 = [v7 host];
    int v11 = [v10 isEqualToString:@"asset"];

    if (!v11) {
      goto LABEL_25;
    }
    id v9 = [v7 query];
    if ((unint64_t)[v9 length] >= 0x65)
    {

      id v28 = 0;
      goto LABEL_31;
    }
    id v12 = [v9 componentsSeparatedByString:@"&"];
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    uint64_t v13 = [v12 countByEnumeratingWithState:&v38 objects:v42 count:16];
    if (v13)
    {
      uint64_t v14 = v13;
      BOOL v30 = v9;
      BOOL v31 = v8;
      char v32 = a4;
      CFDictionaryRef v33 = a5;
      id v34 = v7;
      uint64_t v35 = v12;
      uint64_t v36 = 0;
      id v15 = 0;
      id v16 = 0;
      uint64_t v17 = *(void *)v39;
      while (1)
      {
        for (uint64_t i = 0; i != v14; ++i)
        {
          if (*(void *)v39 != v17) {
            objc_enumerationMutation(v12);
          }
          id v19 = objc_msgSend(*(id *)(*((void *)&v38 + 1) + 8 * i), "componentsSeparatedByString:", @"=", v30);
          if ((unint64_t)[v19 count] >= 2)
          {
            id v20 = [v19 objectAtIndex:0];
            id v21 = [v19 objectAtIndex:1];
            if ([v20 isEqualToString:@"id"])
            {
              id v22 = v16;
              id v16 = v21;
              goto LABEL_17;
            }
            if ([v20 isEqualToString:@"ext"])
            {
              id v22 = v15;
              id v15 = v21;
              goto LABEL_17;
            }
            if ([v20 isEqualToString:@"sci"])
            {
              id v22 = [MEMORY[0x1E4F28FE8] scannerWithString:v21];
              unsigned int v37 = 0;
              if ([v22 scanInt:&v37])
              {
                [NSNumber numberWithInt:v37];
                id v23 = v16;
                v25 = id v24 = v15;

                uint64_t v36 = (void *)v25;
                id v15 = v24;
                id v16 = v23;
                id v12 = v35;
              }
LABEL_17:
            }
          }
        }
        uint64_t v14 = [v12 countByEnumeratingWithState:&v38 objects:v42 count:16];
        if (!v14)
        {
          id v26 = v15;

          a5 = v33;
          id v7 = v34;
          objc_super v8 = v31;
          a4 = v32;
          uint64_t v27 = v36;
          goto LABEL_26;
        }
      }
    }
  }
LABEL_25:
  uint64_t v27 = 0;
  id v26 = 0;
  id v16 = 0;
LABEL_26:
  if (a4) {
    *a4 = v26;
  }
  if (a5) {
    *a5 = v27;
  }
  id v28 = v16;

LABEL_31:
  return v28;
}

+ (id)fileURLFromAssetURL:(id)a3 photoLibrary:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  objc_super v8 = (void *)MEMORY[0x19F38D3B0]();
  id v14 = 0;
  id v9 = [a1 photoFromAssetURL:v6 photoLibrary:v7 sidecar:&v14];
  id v10 = v14;
  int v11 = v10;
  if (v10) {
    [v10 fileURL];
  }
  else {
  id v12 = [v9 mainFileURL];
  }

  return v12;
}

+ (id)photoFromAssetURL:(id)a3 photoLibrary:(id)a4 sidecar:(id *)a5
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v10 = (void *)MEMORY[0x19F38D3B0]();
  int v11 = [v8 scheme];
  if (([v11 isEqualToString:@"assets-library"] & 1) == 0)
  {

    goto LABEL_11;
  }
  id v12 = [v8 host];
  int v13 = [v12 isEqualToString:@"asset"];

  if (!v13)
  {
LABEL_11:
    uint64_t v17 = 0;
    goto LABEL_12;
  }
  id v20 = 0;
  id v21 = 0;
  id v14 = [a1 uuidFromAssetURL:v8 fileExtension:&v21 sidecarIndex:&v20];
  id v15 = v21;
  id v16 = v20;
  if (![v14 length]
    || ([(id)objc_opt_class() assetWithUUID:v14 inLibrary:v9],
        (uint64_t v17 = objc_claimAutoreleasedReturnValue()) == 0))
  {
    id v18 = PLBackendGetLog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138543362;
      id v23 = v14;
      _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_ERROR, "Could not find asset with UUID %{public}@", buf, 0xCu);
    }

    uint64_t v17 = 0;
  }

  if (a5) {
    *a5 = 0;
  }
LABEL_12:

  return v17;
}

+ (id)photoFromAssetURL:(id)a3 photoLibrary:(id)a4
{
  return (id)[a1 photoFromAssetURL:a3 photoLibrary:a4 sidecar:0];
}

+ (id)assetsLibraryURLWithUUID:(id)a3 extension:(id)a4
{
  unsigned __int16 v4 = (void *)MEMORY[0x1E4F1CB10];
  id v5 = [NSString stringWithFormat:@"%@://%@/%@.%@?%@=%@&%@=%@", @"assets-library", @"asset", @"asset", a4, @"id", a3, @"ext", a4];
  id v6 = [v4 URLWithString:v5];

  return v6;
}

+ (id)preferredFileExtensionForType:(id)a3
{
  objc_super v3 = [MEMORY[0x1E4F8CDF8] typeWithIdentifier:a3];
  unsigned __int16 v4 = v3;
  if (!v3)
  {
    id v6 = PLBackendGetLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_ERROR, "Empty utiType. Default to JPG extension.", v10, 2u);
    }

LABEL_7:
    id v5 = @"JPG";
    goto LABEL_17;
  }
  if ([v3 isEqual:*MEMORY[0x1E4F444E0]])
  {
    id v5 = @"TIF";
    goto LABEL_17;
  }
  if ([v4 isEqual:*MEMORY[0x1E4F44460]])
  {
    id v5 = @"PNG";
    goto LABEL_17;
  }
  if (([v4 isEqual:*MEMORY[0x1E4F443D0]] & 1) == 0)
  {
    if (([v4 isEqual:*MEMORY[0x1E4F44410]] & 1) == 0)
    {
      id v7 = [MEMORY[0x1E4F8CDF8] preferredOrFallbackFilenameExtensionForType:v4];
      id v8 = [v7 uppercaseString];

      if (v8) {
        id v5 = v8;
      }
      else {
        id v5 = @"JPG";
      }

      goto LABEL_17;
    }
    goto LABEL_7;
  }
  id v5 = @"GIF";
LABEL_17:

  return v5;
}

+ (BOOL)isKnownFileExtension:(id)a3
{
  objc_super v3 = [a3 uppercaseString];
  if (([v3 isEqualToString:@"TIF"] & 1) != 0
    || ([v3 isEqualToString:@"PNG"] & 1) != 0
    || ([v3 isEqualToString:@"GIF"] & 1) != 0
    || ([v3 isEqualToString:@"JPG"] & 1) != 0)
  {
    LOBYTE(v4) = 1;
  }
  else
  {
    id v6 = [MEMORY[0x1E4F8CDF8] typeWithFilenameExtension:v3];
    id v7 = v6;
    if (v6) {
      int v4 = [v6 isDynamic] ^ 1;
    }
    else {
      LOBYTE(v4) = 0;
    }
  }
  return v4;
}

+ (BOOL)isValidFileURLForImport:(id)a3
{
  id v3 = a3;
  int v4 = [v3 lastPathComponent];
  id v5 = [NSString stringWithFormat:@"%@.%@", *MEMORY[0x1E4F8C5A0], *MEMORY[0x1E4F8C598]];
  char v6 = [v4 hasSuffix:v5];

  if (v6)
  {
    BOOL v7 = 0;
  }
  else
  {
    id v8 = [v3 pathExtension];
    BOOL v7 = +[PLManagedAsset isValidFileExtensionForImport:v8];
  }
  return v7;
}

+ (BOOL)isValidFileExtensionForImport:(id)a3
{
  id v3 = a3;
  BOOL v4 = ([v3 isEqualToString:@"DBG"] & 1) == 0
    && ![v3 isEqualToString:@"SLM"];

  return v4;
}

+ (id)diagnosticFilePathForLibrary:(id)a3 mainFilename:(id)a4 createIfNeeded:(BOOL)a5
{
  BOOL v5 = a5;
  id v7 = a4;
  id v8 = [a3 pathManager];
  id v9 = [v8 privateDirectoryWithSubType:8 createIfNeeded:v5 error:0];

  id v10 = [v7 stringByDeletingPathExtension];

  int v11 = [v10 stringByAppendingPathExtension:@"DBG"];

  id v12 = [v9 stringByAppendingPathComponent:v11];

  return v12;
}

+ (id)extensionForMediumThumbnailFile
{
  return @"medium.JPG";
}

+ (id)extensionForLargeThumbnailFile
{
  return @"JPG";
}

+ (id)extensionForFullsizeThumbnailFile
{
  return @"full.JPG";
}

+ (id)pathForAlchemistImageWithUUID:(id)a3 bundleScope:(unsigned __int16)a4 directory:(id)a5 filename:(id)a6 pathManager:(id)a7
{
  uint64_t v10 = a4;
  id v11 = a3;
  id v12 = a5;
  id v13 = a6;
  id v14 = a7;
  if ([v14 isUBF])
  {
    id v15 = objc_alloc(MEMORY[0x1E4F8B978]);
    id v16 = [(id)*MEMORY[0x1E4F443E0] identifier];
    uint64_t v17 = (void *)[v15 initWithAssetUuid:v11 bundleScope:v10 uti:v16 resourceVersion:3 resourceType:15 recipeID:66137 originalFilename:0];

    id v18 = [v14 readOnlyUrlWithIdentifier:v17];
    id v19 = [v18 path];
  }
  else
  {
    uint64_t v17 = [v14 assetPathForComputeDirectoryWithDirectory:v12 filename:v13];
    id v19 = [v17 stringByAppendingPathComponent:@"Alchemist.heic"];
  }

  return v19;
}

+ (id)pathForAdjustmentDataFileWithPathManager:(id)a3 uuid:(id)a4 directory:(id)a5 filename:(id)a6
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  if ([v9 isUBF])
  {
    id v13 = objc_alloc(MEMORY[0x1E4F8B978]);
    id v14 = [(id)*MEMORY[0x1E4F44378] identifier];
    id v15 = (void *)[v13 initWithAssetUuid:v10 bundleScope:0 uti:v14 resourceVersion:2 recipeID:0];

    id v16 = [v9 readOnlyUrlWithIdentifier:v15];
    [v16 path];
  }
  else
  {
    id v15 = [v9 assetPathForMutationsDirectoryWithDirectory:v11 filename:v12];
    id v16 = +[PLManagedAsset pathForAdjustmentDirectoryWithMutationsDirectory:v15];
    [v16 stringByAppendingPathComponent:@"Adjustments.data"];
  uint64_t v17 = };

  return v17;
}

+ (id)pathForAdjustmentFileWithPathManager:(id)a3 uuid:(id)a4 directory:(id)a5 filename:(id)a6
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  if ([v9 isUBF])
  {
    id v13 = objc_alloc(MEMORY[0x1E4F8B978]);
    id v14 = [(id)*MEMORY[0x1E4F44488] identifier];
    id v15 = (void *)[v13 initWithAssetUuid:v10 bundleScope:0 uti:v14 resourceVersion:2 recipeID:0];

    id v16 = [v9 readOnlyUrlWithIdentifier:v15];
    [v16 path];
  }
  else
  {
    id v15 = [v9 assetPathForMutationsDirectoryWithDirectory:v11 filename:v12];
    id v16 = +[PLManagedAsset pathForAdjustmentDirectoryWithMutationsDirectory:v15];
    [v16 stringByAppendingPathComponent:@"Adjustments.plist"];
  uint64_t v17 = };

  return v17;
}

+ (id)pathForAdjustmentDirectoryWithMutationsDirectory:(id)a3
{
  return (id)[a3 stringByAppendingPathComponent:*MEMORY[0x1E4F8C4E0]];
}

+ (id)pathForMutationsDirectoryWithDirectory:(id)a3 filename:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)MEMORY[0x19F38D3B0]();
  id v8 = [MEMORY[0x1E4F8B980] systemLibraryPathManager];
  id v9 = [v8 assetAbbreviatedMetadataDirectoryForDirectory:v5 type:31 bundleScope:0];
  id v10 = [v6 stringByDeletingPathExtension];
  if (v9 && ([v9 length] ? (BOOL v11 = v10 == 0) : (BOOL v11 = 1), !v11 && objc_msgSend(v10, "length")))
  {
    id v12 = [v8 photoDirectoryWithType:9];
    id v13 = v12;
    if (v12)
    {
      id v14 = [v12 stringByAppendingPathComponent:v9];

      id v13 = [v14 stringByAppendingPathComponent:v10];
    }
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

+ (signed)assetTypeFromUniformTypeIdentifier:(id)a3
{
  id v3 = [MEMORY[0x1E4F8CDF8] typeWithIdentifier:a3];
  if ([v3 conformsToType:*MEMORY[0x1E4F44448]])
  {
    signed __int16 v4 = 1;
  }
  else if (([v3 conformsToType:*MEMORY[0x1E4F44400]] & 1) != 0 {
         || ([v3 conformsToType:*MEMORY[0x1E4F44450]] & 1) != 0)
  }
  {
    signed __int16 v4 = 0;
  }
  else if ([v3 conformsToType:*MEMORY[0x1E4F44330]])
  {
    signed __int16 v4 = 2;
  }
  else
  {
    signed __int16 v4 = 3;
  }

  return v4;
}

+ (id)uniformTypeIdentifierFromPathExtension:(id)a3 assetType:(signed __int16)a4
{
  signed __int16 v4 = [a1 uniformTypeFromPathExtension:a3 assetType:a4];
  id v5 = [v4 identifier];

  return v5;
}

+ (id)uniformTypeFromPathExtension:(id)a3 assetType:(signed __int16)a4
{
  unsigned int v4 = a4;
  id v5 = a3;
  if (v4 > 2) {
    id v6 = (id *)MEMORY[0x1E4F44370];
  }
  else {
    id v6 = (id *)qword_1E5865968[(unsigned __int16)v4];
  }
  id v7 = *v6;
  id v8 = [MEMORY[0x1E4F8CDF8] typeWithFilenameExtension:v5 conformingToType:v7];
  if ([v8 isDynamic])
  {
    uint64_t v9 = [MEMORY[0x1E4F442D8] typeWithFilenameExtension:v5];

    id v8 = (void *)v9;
  }

  return v8;
}

+ (BOOL)isScreenRecordingFileName:(id)a3
{
  id v3 = a3;
  BOOL v4 = ([v3 hasPrefix:@"RPReplay"] & 1) != 0
    || [v3 hasPrefix:@"ScreenRecording"];

  return v4;
}

+ (BOOL)isPrimaryImageFormatForUTI:(id)a3
{
  if (!a3) {
    return 0;
  }
  objc_msgSend(MEMORY[0x1E4F442D8], "typeWithIdentifier:");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  BOOL v4 = v3;
  if (v3)
  {
    if (([v3 conformsToType:*MEMORY[0x1E4F44410]] & 1) != 0
      || ([v4 conformsToType:*MEMORY[0x1E4F443E0]] & 1) != 0)
    {
      char v5 = 1;
    }
    else
    {
      char v5 = [v4 conformsToType:*MEMORY[0x1E4F443E8]];
    }
  }
  else
  {
    char v5 = 0;
  }

  return v5;
}

+ (id)keyPathsForValuesAffectingIsJPEG
{
  return (id)[MEMORY[0x1E4F1CAD0] setWithObject:@"uniformTypeIdentifier"];
}

+ (unsigned)defaultPlaybackStyleFromAssetType:(signed __int16)a3 subtype:(signed __int16)a4 playbackVariation:(unsigned __int16)a5
{
  unint64_t v5 = 0x3000500050003uLL >> (16 * a5);
  if (a5 >= 4u) {
    LOWORD(v5) = 0;
  }
  if (a4 == 2) {
    __int16 v6 = v5;
  }
  else {
    __int16 v6 = 1;
  }
  if (a3) {
    __int16 v6 = 0;
  }
  if (a3 == 1) {
    unsigned __int16 v7 = 4;
  }
  else {
    unsigned __int16 v7 = v6;
  }
  if (a3 == 2) {
    return 4;
  }
  else {
    return v7;
  }
}

+ (id)allHDRValues
{
  if (allHDRValues_onceToken != -1) {
    dispatch_once(&allHDRValues_onceToken, &__block_literal_global_925);
  }
  id v2 = (void *)allHDRValues_hdrValues;
  return v2;
}

void __30__PLManagedAsset_allHDRValues__block_invoke()
{
  uint64_t v0 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CAD0]), "initWithObjects:", &unk_1EEBED608, &unk_1EEBED650, &unk_1EEBED668, &unk_1EEBED680, &unk_1EEBED698, 0);
  uint64_t v1 = (void *)allHDRValues_hdrValues;
  allHDRValues_hdrValues = v0;
}

+ (signed)imageHDRTypeFromCustomRenderedValue:(signed __int16)a3
{
  if ((a3 - 2) >= 3) {
    return 0;
  }
  else {
    return a3;
  }
}

+ (signed)imageDepthTypeFromCustomRenderedValue:(signed __int16)a3
{
  if (a3 > 9) {
    return 0;
  }
  else {
    return word_19BA9A8BC[(unsigned __int16)a3];
  }
}

+ (BOOL)guaranteedFlashOffForAssetAtURL:(id)a3
{
  id v3 = CGImageSourceCreateWithURL((CFURLRef)a3, 0);
  if (!v3) {
    return 0;
  }
  BOOL v4 = v3;
  CFDictionaryRef v5 = PLImageSourceCopyPropertiesAtIndexDecodingRawIfNecessary(v3, 0, 0);
  __int16 v6 = [(__CFDictionary *)v5 objectForKey:*MEMORY[0x1E4F2F800]];
  unsigned __int16 v7 = [v6 objectForKey:*MEMORY[0x1E4F2F838]];
  id v8 = v7;
  if (v7) {
    BOOL v9 = ([v7 integerValue] & 1) == 0;
  }
  else {
    BOOL v9 = 0;
  }
  CFRelease(v4);

  return v9;
}

+ (BOOL)_isLibraryScopeExiting:(id)a3
{
  id v3 = a3;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  BOOL v4 = [v3 libraryScope];
  CFDictionaryRef v5 = v4;
  if (v4)
  {
    BOOL v6 = [v4 exitState] != 0;
    *((unsigned char *)v14 + 24) = v6;
  }
  else
  {
    unsigned __int16 v7 = [v3 photoLibrary];
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    v10[2] = __41__PLManagedAsset__isLibraryScopeExiting___block_invoke;
    v10[3] = &unk_1E5875E68;
    id v8 = v7;
    id v11 = v8;
    id v12 = &v13;
    [v8 performBlockAndWait:v10];

    BOOL v6 = *((unsigned char *)v14 + 24) != 0;
  }

  _Block_object_dispose(&v13, 8);
  return v6;
}

void __41__PLManagedAsset__isLibraryScopeExiting___block_invoke(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v2 = (void *)MEMORY[0x1E4F1C0D0];
  id v3 = +[PLLibraryScope entityName];
  BOOL v4 = [v2 fetchRequestWithEntityName:v3];

  CFDictionaryRef v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != %d", @"exitState", 0);
  [v4 setPredicate:v5];

  [v4 setResultType:4];
  BOOL v6 = [*(id *)(a1 + 32) managedObjectContext];
  id v10 = 0;
  uint64_t v7 = [v6 countForFetchRequest:v4 error:&v10];
  id v8 = v10;

  if (v7 == 1)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  else if (v7 == 0x7FFFFFFFFFFFFFFFLL)
  {
    BOOL v9 = PLPhotoKitGetLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 136315394;
      id v12 = "+[PLManagedAsset _isLibraryScopeExiting:]_block_invoke";
      __int16 v13 = 2112;
      id v14 = v8;
      _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_ERROR, "Failed to fetch exit library scope for %s: %@", buf, 0x16u);
    }
  }
}

+ (id)keyPathsForValuesAffectingIsPhotoStreamPhoto
{
  return (id)[MEMORY[0x1E4F1CAD0] setWithObject:@"savedAssetType"];
}

+ (id)keyPathsForValuesAffectingGpsCoordinate
{
  return (id)[MEMORY[0x1E4F1CAD0] setWithObject:@"location"];
}

+ (id)keyPathsForValuesAffectingImageSize
{
  return (id)objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", @"width", @"height", 0);
}

+ (BOOL)isHFRVideoAVAsset:(id)a3
{
  id v3 = [MEMORY[0x1E4F8CC38] tracksWithMediaType:*MEMORY[0x1E4F15C18] forAsset:a3];
  if ([v3 count])
  {
    BOOL v4 = [v3 objectAtIndex:0];
    [v4 nominalFrameRate];
    BOOL v6 = v5 >= 105.0;
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

+ (CGSize)dimensionsForAVAsset:(id)a3
{
  CGFloat width = *MEMORY[0x1E4F1DB30];
  CGFloat height = *(double *)(MEMORY[0x1E4F1DB30] + 8);
  if (a3)
  {
    float v5 = [MEMORY[0x1E4F8CC38] tracksWithMediaType:*MEMORY[0x1E4F15C18] forAsset:a3];
    if ([v5 count])
    {
      BOOL v6 = [v5 objectAtIndex:0];
      [v6 naturalSize];
      double v8 = v7;
      double v10 = v9;
      if (v6) {
        [v6 preferredTransform];
      }
      v14.size.CGFloat width = v10 * 0.0 + 0.0 * v8;
      v14.size.CGFloat height = v14.size.width;
      v14.origin.double x = 0.0;
      v14.origin.double y = 0.0;
      CGRect v15 = CGRectStandardize(v14);
      CGFloat width = v15.size.width;
      CGFloat height = v15.size.height;
    }
  }
  double v11 = width;
  double v12 = height;
  result.CGFloat height = v12;
  result.CGFloat width = v11;
  return result;
}

+ (CGSize)dimensionsForVideoAtURL:(id)a3
{
  id v3 = [MEMORY[0x1E4F16330] assetWithURL:a3];
  +[PLManagedAsset dimensionsForAVAsset:v3];
  double v5 = v4;
  double v7 = v6;

  double v8 = v5;
  double v9 = v7;
  result.CGFloat height = v9;
  result.CGFloat width = v8;
  return result;
}

+ (CGSize)sizeOfImageAtURL:(id)a3 outOrientation:(signed __int16 *)a4
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  double v7 = *MEMORY[0x1E4F1DB30];
  double v8 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
  id v29 = 0;
  double v9 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithContentsOfURL:v6 options:1 error:&v29];
  id v10 = v29;
  if ([v9 length]) {
    BOOL v11 = v10 == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (!v11)
  {
    double v12 = PLBackendGetLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412546;
      id v33 = v6;
      __int16 v34 = 2112;
      id v35 = v10;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "Unable to read imageData from file '%@'. Error: %@", buf, 0x16u);
    }

    goto LABEL_26;
  }
  id v28 = a4;
  context = (void *)MEMORY[0x19F38D3B0]();
  __int16 v13 = (void *)MEMORY[0x1E4F8CDF8];
  CGRect v14 = [v6 pathExtension];
  CGRect v15 = [v13 typeWithIdentifier:v14];

  if (v15)
  {
    uint64_t v30 = *MEMORY[0x1E4F2FF78];
    char v16 = [v15 identifier];
    BOOL v31 = v16;
    CFDictionaryRef v17 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v31 forKeys:&v30 count:1];
  }
  else
  {
    CFDictionaryRef v17 = 0;
  }
  CGImageSourceRef v18 = CGImageSourceCreateWithData((CFDataRef)v9, v17);
  if (!v18)
  {

    id v21 = 0;
    id v22 = 0;
    id v23 = 0;
LABEL_19:
    uint64_t v24 = PLBackendGetLog();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v33 = v6;
      _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_ERROR, "Failed to get size of image at %@", buf, 0xCu);
    }

    goto LABEL_22;
  }
  CGImageSourceRef v19 = v18;
  id v20 = (void *)[a1 newImagePropertiesFromImageSource:v18];
  if (v20)
  {
    PFGetDimensionsFromImageProperties();
    id v21 = 0;
    id v22 = 0;
    id v23 = 0;
  }
  else
  {
    id v23 = 0;
    id v22 = 0;
    id v21 = 0;
  }
  CFRelease(v19);

  if (!v22 || !v23) {
    goto LABEL_19;
  }
  double v7 = (double)[v22 longLongValue];
  double v8 = (double)[v23 longLongValue];
LABEL_22:
  if (v28 && v21) {
    signed __int16 *v28 = [v21 shortValue];
  }

LABEL_26:

  double v25 = v7;
  double v26 = v8;
  result.CGFloat height = v26;
  result.CGFloat width = v25;
  return result;
}

+ (id)_ptpCalendar
{
  pl_dispatch_once();
  id v2 = (void *)_ptpCalendar__myCalendar;
  return v2;
}

void __30__PLManagedAsset__ptpCalendar__block_invoke()
{
  id v0 = objc_alloc(MEMORY[0x1E4F1C9A8]);
  uint64_t v1 = [v0 initWithCalendarIdentifier:*MEMORY[0x1E4F1C318]];
  id v2 = (void *)_ptpCalendar__myCalendar;
  _ptpCalendar__myCalendar = v1;
}

+ (void)ptpResetEventAndFilenameMapping
{
  id v2 = +[PLManagedAsset _ptpEventInfoIsolationQueue];
  pl_dispatch_sync();
}

void __49__PLManagedAsset_ptpResetEventAndFilenameMapping__block_invoke()
{
  id v0 = +[PLManagedAsset eventInfoForPTP];
  [v0 removeAllObjects];
}

+ (void)ptpSetAssetIDForEventAndFilenameKey:(id)a3 value:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  double v7 = +[PLManagedAsset _ptpEventInfoIsolationQueue];
  id v10 = v5;
  BOOL v11 = v6;
  id v8 = v6;
  id v9 = v5;
  pl_dispatch_sync();
}

void __60__PLManagedAsset_ptpSetAssetIDForEventAndFilenameKey_value___block_invoke(uint64_t a1)
{
  id v2 = +[PLManagedAsset eventInfoForPTP];
  id v3 = [v2 objectForKey:*(void *)(a1 + 32)];

  if (!v3)
  {
    id v4 = +[PLManagedAsset eventInfoForPTP];
    [v4 setValue:*(void *)(a1 + 40) forKey:*(void *)(a1 + 32)];
  }
}

+ (id)ptpAssetIDForEventAndFilenameKey:(id)a3
{
  id v3 = a3;
  uint64_t v8 = 0;
  id v9 = &v8;
  uint64_t v10 = 0x3032000000;
  BOOL v11 = __Block_byref_object_copy__15798;
  double v12 = __Block_byref_object_dispose__15799;
  id v13 = 0;
  id v4 = +[PLManagedAsset _ptpEventInfoIsolationQueue];
  id v7 = v3;
  pl_dispatch_sync();

  id v5 = (id)v9[5];
  _Block_object_dispose(&v8, 8);

  return v5;
}

void __51__PLManagedAsset_ptpAssetIDForEventAndFilenameKey___block_invoke(uint64_t a1)
{
  id v5 = +[PLManagedAsset eventInfoForPTP];
  uint64_t v2 = [v5 objectForKey:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

+ (id)_ptpEventInfoIsolationQueue
{
  pl_dispatch_once();
  uint64_t v2 = (void *)_ptpEventInfoIsolationQueue_ptpQueue;
  return v2;
}

void __45__PLManagedAsset__ptpEventInfoIsolationQueue__block_invoke()
{
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.assetsd.ptpeventinfoisolationqueue", 0);
  uint64_t v1 = (void *)_ptpEventInfoIsolationQueue_ptpQueue;
  _ptpEventInfoIsolationQueue_ptpQueue = (uint64_t)v0;
}

+ (id)eventInfoForPTP
{
  pl_dispatch_once();
  uint64_t v2 = (void *)eventInfoForPTP_eventInfo;
  return v2;
}

void __33__PLManagedAsset_eventInfoForPTP__block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v1 = (void *)eventInfoForPTP_eventInfo;
  eventInfoForPTP_eventInfo = (uint64_t)v0;
}

+ (id)newImagePropertiesFromImageSource:(CGImageSource *)a3
{
  uint64_t v3 = [MEMORY[0x1E4F8CC38] imagePropertiesFromImageSource:a3];
  id v4 = (void *)v3;
  id v5 = (void *)MEMORY[0x1E4F1CC08];
  if (v3) {
    id v5 = (void *)v3;
  }
  id v6 = v5;

  return v6;
}

+ (PLManagedAsset)assetWithObjectID:(id)a3 inManagedObjectContext:(id)a4
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  if (v5)
  {
    id v7 = (void *)MEMORY[0x19F38D3B0]();
    id v14 = 0;
    uint64_t v8 = [v6 existingObjectWithID:v5 error:&v14];
    id v9 = v14;
    if (v9)
    {
      uint64_t v10 = v9;
      BOOL v11 = PLBackendGetLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138543618;
        id v16 = v5;
        __int16 v17 = 2112;
        CGImageSourceRef v18 = v10;
        _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_ERROR, "Failed to fetch asset %{public}@: %@.", buf, 0x16u);
      }

      id v12 = 0;
    }
    else
    {
      id v12 = v8;
    }
  }
  else
  {
    id v12 = 0;
  }

  return (PLManagedAsset *)v12;
}

+ (PLManagedAsset)assetWithUUID:(id)a3 inManagedObjectContext:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (v5)
  {
    id v7 = (void *)MEMORY[0x19F38D3B0]();
    uint64_t v8 = (void *)MEMORY[0x1E4F1C0D0];
    id v9 = +[PLManagedAsset entityName];
    uint64_t v10 = [v8 fetchRequestWithEntityName:v9];

    BOOL v11 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"uuid == %@", v5];
    [v10 setPredicate:v11];
    [v10 setFetchLimit:1];
    uint64_t v15 = 0;
    id v12 = [v6 executeFetchRequest:v10 error:&v15];
    if ([v12 count])
    {
      id v13 = [v12 objectAtIndex:0];
    }
    else
    {
      id v13 = 0;
    }
  }
  else
  {
    id v13 = 0;
  }

  return (PLManagedAsset *)v13;
}

+ (id)assetsWithValidatedSavedAssetTypeMask:(unsigned int)a3 inManagedObjectContext:(id)a4
{
  uint64_t v4 = *(void *)&a3;
  id v5 = a4;
  id v6 = (void *)MEMORY[0x19F38D3B0]();
  id v7 = objc_alloc_init(MEMORY[0x1E4F1C0D0]);
  uint64_t v8 = [(id)objc_opt_class() entityInManagedObjectContext:v5];
  [v7 setEntity:v8];

  id v9 = [MEMORY[0x1E4F8BA10] predicateForIncludeMask:v4 useIndex:1];
  [v7 setPredicate:v9];
  uint64_t v12 = 0;
  uint64_t v10 = [v5 executeFetchRequest:v7 error:&v12];

  return v10;
}

+ (unint64_t)countUsedAssetsWithKind:(signed __int16)a3 excludeTrashed:(BOOL)a4 excludeInvisible:(BOOL)a5 excludeCloudShared:(BOOL)a6 excludePhotoStream:(BOOL)a7 inManagedObjectContext:(id)a8
{
  BOOL v8 = a7;
  BOOL v9 = a6;
  BOOL v10 = a5;
  BOOL v11 = a4;
  uint64_t v12 = a3;
  v54[1] = *MEMORY[0x1E4F143B8];
  id v13 = a8;
  id v14 = (void *)MEMORY[0x19F38D3B0]();
  id v15 = objc_alloc_init(MEMORY[0x1E4F1C0D0]);
  id v16 = +[PLManagedAsset entityName];
  __int16 v17 = PLSafeEntityForNameInManagedObjectContext((uint64_t)v16, (uint64_t)v13, 0);

  if (v17)
  {
    BOOL v48 = v8;
    BOOL v49 = v9;
    id v50 = v14;
    [v15 setEntity:v17];
    CGImageSourceRef v18 = [MEMORY[0x1E4F1CA48] array];
    uint64_t v19 = (void *)MEMORY[0x1E4F28C68];
    id v20 = [MEMORY[0x1E4F28C68] expressionForKeyPath:@"complete"];
    v54[0] = v20;
    id v21 = [MEMORY[0x1E4F1C978] arrayWithObjects:v54 count:1];
    id v22 = [v19 expressionForFunction:@"noindex:" arguments:v21];

    id v23 = [MEMORY[0x1E4F28C68] expressionForConstantValue:&unk_1EEBED5D8];
    uint64_t v24 = [MEMORY[0x1E4F28B98] predicateWithLeftExpression:v22 rightExpression:v23 modifier:0 type:5 options:0];
    [v18 addObject:v24];

    double v25 = [MEMORY[0x1E4F28C68] expressionForKeyPath:@"kind"];
    double v26 = (void *)MEMORY[0x1E4F28C68];
    uint64_t v27 = [NSNumber numberWithShort:v12];
    id v28 = [v26 expressionForConstantValue:v27];

    id v29 = [MEMORY[0x1E4F28B98] predicateWithLeftExpression:v25 rightExpression:v28 modifier:0 type:4 options:0];
    [v18 addObject:v29];

    if (v11)
    {
      uint64_t v30 = (void *)MEMORY[0x1E4F28C68];
      BOOL v31 = [MEMORY[0x1E4F28C68] expressionForKeyPath:@"trashedState"];
      uint64_t v53 = v31;
      char v32 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v53 count:1];
      id v33 = [v30 expressionForFunction:@"noindex:" arguments:v32];

      __int16 v34 = [MEMORY[0x1E4F28C68] expressionForConstantValue:&unk_1EEBED5D8];
      id v35 = [MEMORY[0x1E4F28B98] predicateWithLeftExpression:v33 rightExpression:v34 modifier:0 type:4 options:0];
      [v18 addObject:v35];
    }
    if (v10)
    {
      uint64_t v36 = (void *)MEMORY[0x1E4F28C68];
      unsigned int v37 = [MEMORY[0x1E4F28C68] expressionForKeyPath:@"visibilityState"];
      uint64_t v52 = v37;
      long long v38 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v52 count:1];
      long long v39 = [v36 expressionForFunction:@"noindex:" arguments:v38];

      long long v40 = [MEMORY[0x1E4F28C68] expressionForConstantValue:&unk_1EEBED638];
      long long v41 = [MEMORY[0x1E4F28B98] predicateWithLeftExpression:v39 rightExpression:v40 modifier:0 type:4 options:0];
      [v18 addObject:v41];
    }
    LOWORD(v47) = 0;
    uint64_t v42 = objc_msgSend(MEMORY[0x1E4F8BA10], "validatedSavedAssetTypeMaskUnknown:photoBooth:photoStream:camera:cloudShared:cameraConnectionKit:cloudPhotoLibrary:wallpaper_UNUSED:momentShared:placeholder:referenced:alternate:guest:companionSynced:recovered:legacyImport:", 0, 0, v48, 0, v49, 0, 0x10001010000, v47);
    uint64_t v43 = [MEMORY[0x1E4F8BA10] predicateForExcludeMask:v42 useIndex:0];
    [v18 addObject:v43];

    unsigned int v44 = [MEMORY[0x1E4F28BA0] andPredicateWithSubpredicates:v18];
    [v15 setPredicate:v44];
    uint64_t v51 = 0;
    unint64_t v45 = [v13 countForFetchRequest:v15 error:&v51];

    id v14 = v50;
  }
  else
  {
    unint64_t v45 = 0;
  }

  return v45;
}

+ (int64_t)totalPurgeableSizeOnDiskInLibrary:(id)a3 urgency:(int64_t)a4 sizeOption:(unint64_t)a5
{
  v44[1] = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  BOOL v9 = [v8 managedObjectContext];
  if (a5)
  {
    id v10 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    if (a5)
    {
      BOOL v11 = +[PLInternalResource nonOriginalCPLResourceTypes];
      [v10 addObjectsFromArray:v11];
    }
    if ((a5 & 2) != 0)
    {
      uint64_t v12 = +[PLInternalResource originalCPLResourceTypesForMaster];
      [v10 addObjectsFromArray:v12];

      id v13 = +[PLInternalResource originalCPLResourceTypesForAsset];
      [v10 addObjectsFromArray:v13];
    }
    id v14 = (void *)MEMORY[0x1E4F1C0D0];
    id v15 = +[PLInternalResource entityName];
    id v16 = [v14 fetchRequestWithEntityName:v15];

    [v16 setResultType:2];
    __int16 v17 = +[PLInternalResource purgeablePushedPredicateForCPLResourceTypes:v10 urgency:a4];
    [v16 setPredicate:v17];

    id v18 = objc_alloc_init(MEMORY[0x1E4F1C0B8]);
    [v18 setName:@"totalFileSize"];
    uint64_t v19 = [MEMORY[0x1E4F28C68] expressionWithFormat:@"sum:(dataLength)"];
    [v18 setExpression:v19];

    [v18 setExpressionResultType:300];
    v44[0] = v18;
    id v20 = [MEMORY[0x1E4F1C978] arrayWithObjects:v44 count:1];
    [v16 setPropertiesToFetch:v20];

    id v39 = 0;
    id v21 = [v9 executeFetchRequest:v16 error:&v39];
    id v22 = v39;
    if (v21)
    {
      if ([v21 count] == 1)
      {
        id v23 = [v21 objectAtIndexedSubscript:0];
        uint64_t v24 = [v23 objectForKeyedSubscript:@"totalFileSize"];
        int64_t v25 = [v24 longLongValue];

        if (v25 >= 1)
        {
          uint64_t v38 = -1;
          if (PLIsAssetsd())
          {
            double v26 = [v8 libraryServicesManager];
            uint64_t v27 = [v26 cloudPhotoLibraryManager];

            uint64_t v28 = [v27 sizeOfResourcesToUploadByCPL:0];
            uint64_t v38 = v28;
          }
          else
          {
            BOOL v31 = [v8 assetsdClient];
            char v32 = [v31 libraryInternalClient];
            id v37 = v22;
            [v32 synchronouslyGetSizeOfResourcesToUploadByCPL:&v38 error:&v37];
            id v36 = v37;

            uint64_t v28 = v38;
            id v22 = v36;
          }
          if (v25 <= v28 || v28 <= -1) {
            int64_t v25 = 0;
          }
          else {
            v25 -= v28;
          }
          __int16 v34 = PLBackendGetLog();
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)CMTime buf = 134218240;
            int64_t v41 = v25;
            __int16 v42 = 2048;
            uint64_t v43 = v38;
            _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_DEFAULT, "totalPurgeableSizeOnDiskInLibrary pushedSize=%lld sizeOfResourcesToUpload=%lld", buf, 0x16u);
          }
        }
        goto LABEL_26;
      }
    }
    else
    {
      id v29 = PLBackendGetLog();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        uint64_t v30 = NSStringFromSelector(a2);
        *(_DWORD *)CMTime buf = 138412546;
        int64_t v41 = (int64_t)v30;
        __int16 v42 = 2112;
        uint64_t v43 = (uint64_t)v22;
        _os_log_impl(&dword_19B3C7000, v29, OS_LOG_TYPE_ERROR, "%@ failed to calculate size %@", buf, 0x16u);
      }
    }
    int64_t v25 = 0;
LABEL_26:

    goto LABEL_27;
  }
  int64_t v25 = 0;
LABEL_27:

  return v25;
}

+ (int64_t)totalPurgeableSizeOnDiskInLibrary:(id)a3 urgency:(int64_t)a4
{
  id v6 = a3;
  if ([v6 isCloudPhotoLibraryEnabled])
  {
    id v7 = [v6 libraryBundle];
    id v8 = +[PLCPLSettings settingsWithLibraryBundle:v7];

    if ([v8 isKeepOriginalsEnabled]) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = 3;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  int64_t v10 = [a1 totalPurgeableSizeOnDiskInLibrary:v6 urgency:a4 sizeOption:v9];

  return v10;
}

+ (id)_createAssetModelToInsert:(id)a3 uuid:(id)a4 replacementUUID:(id)a5
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  uint64_t v12 = v11;
  if (v10 && v11)
  {
    if ([v10 isEqualToString:v11])
    {
      id v13 = [MEMORY[0x1E4F28B00] currentHandler];
      [v13 handleFailureInMethod:a2, a1, @"PLManagedAsset.m", 5199, @"Invalid parameter not satisfying: %@", @"![uuid isEqualToString:replacementUUID]" object file lineNumber description];
    }
  }
  else if (!v11)
  {
    goto LABEL_10;
  }
  id v14 = [a1 assetWithUUID:v12 inLibrary:v9];
  if (v14) {
    goto LABEL_12;
  }
  id v15 = PLBackendGetLog();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)CMTime buf = 138412290;
    uint64_t v19 = v12;
    _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Could find photo with UUID %@. This will cause duplicates.", buf, 0xCu);
  }

LABEL_10:
  id v16 = [v9 managedObjectContext];
  id v14 = +[PLManagedObject insertInManagedObjectContext:v16];

  if (v10) {
    [v14 setUuid:v10];
  }
LABEL_12:

  return v14;
}

+ (id)_insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 mainFileMetadata:(id)a5 savedAssetType:(signed __int16)a6 bundleScope:(unsigned __int16)a7 uuid:(id)a8 replacementUUID:(id)a9 imageSource:(CGImageSource *)a10 imageData:(id *)a11 isPlaceholder:(BOOL)a12 deleteFileOnFailure:(BOOL)a13
{
  unsigned int v36 = a7;
  uint64_t v14 = a6;
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  id v18 = a3;
  id v19 = a4;
  id v20 = a5;
  id v21 = a8;
  id v22 = a9;
  id v23 = [v18 pathManager];
  int v24 = [v23 isUBF];

  if (v19)
  {
    if (v24)
    {
      [MEMORY[0x1E4F8BA10] maskForReferencedAsset];
      if ((PLValidatedSavedAssetTypeApplies() & 1) == 0)
      {
        if (!v21)
        {
          id v33 = [MEMORY[0x1E4F28B00] currentHandler];
          [v33 handleFailureInMethod:a2, a1, @"PLManagedAsset.m", 5170, @"Invalid parameter not satisfying: %@", @"uuid" object file lineNumber description];
        }
        int64_t v25 = [v19 path];
        char v26 = [v25 containsString:v21];

        if ((v26 & 1) == 0)
        {
          __int16 v34 = [MEMORY[0x1E4F28B00] currentHandler];
          [v34 handleFailureInMethod:a2, a1, @"PLManagedAsset.m", 5172, @"Invalid parameter not satisfying: %@", @"[mainFileURL.path containsString:uuid]" object file lineNumber description];
        }
      }
    }
  }
  uint64_t v27 = [a1 _createAssetModelToInsert:v18 uuid:v21 replacementUUID:v22];
  uint64_t v28 = v27;
  if (!a12
    && ([v27 setAttributesFromMainFileURL:v19 mainFileMetadata:v20 savedAssetType:v14 bundleScope:v36 isPlaceholder:0 placeholderFileURL:0 imageSource:a10 imageData:a11] & 1) == 0)
  {
    id v29 = PLMigrationGetLog();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      uint64_t v30 = [v19 path];
      *(_DWORD *)CMTime buf = 138412290;
      uint64_t v38 = v30;
      _os_log_impl(&dword_19B3C7000, v29, OS_LOG_TYPE_ERROR, "Failed to set attributes for asset at path %@", buf, 0xCu);
    }
    if (a13)
    {
      BOOL v31 = +[PLAssetTransactionReason transactionReason:@"[_insertAssetIntoPhotoLibrary:mainFileURL:savedAssetType:replacementUUID:imageSource:imageData:sPlaceholder:deleteFileOnFailure:] We failed to set the asset's attributes, so we are now deleting the non-placeholder asset that was replaced."];
      [v28 deleteWithReason:v31];
    }
    else
    {
      BOOL v31 = +[PLAssetTransactionReason transactionReason:@"[_insertAssetIntoPhotoLibrary:mainFileURL:savedAssetType:replacementUUID:imageSource:imageData:sPlaceholder:deleteFileOnFailure:] We failed to set the asset's attributes, so we are now deleting the non-placeholder asset that was replaced from the database only because deleteMainFileOnFailure was NO."];
      [v28 deleteFromDatabaseOnlyWithReason:v31];
    }

    uint64_t v28 = 0;
  }

  return v28;
}

+ (id)insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 savedAssetType:(signed __int16)a5 bundleScope:(unsigned __int16)a6 uuid:(id)a7 replacementUUID:(id)a8 imageSource:(CGImageSource *)a9 imageData:(id *)a10
{
  LOWORD(v11) = 256;
  return (id)objc_msgSend(a1, "_insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", a3, a4, 0, a5, a6, a7, a8, a9, a10, v11);
}

+ (id)insertAssetIntoPhotoLibrary:(id)a3 mainFileURL:(id)a4 mainFileMetadata:(id)a5 savedAssetType:(signed __int16)a6 bundleScope:(unsigned __int16)a7 uuid:(id)a8 replacementUUID:(id)a9 imageSource:(CGImageSource *)a10 imageData:(id *)a11 isPlaceholder:(BOOL)a12 deleteFileOnFailure:(BOOL)a13
{
  return (id)objc_msgSend(a1, "_insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", a3, a4, a5, a6, a7, a8);
}

+ (BOOL)isOrphanedMediaGroupUUID:(id)a3
{
  return [a3 hasPrefix:@"failed-"];
}

+ (id)fetchPredicateForLegacyRequiredResourcesLocallyAvailable:(BOOL)a3 photoLibrary:(id)a4
{
  id v5 = a4;
  id v6 = v5;
  if (a3 || [v5 isCloudPhotoLibraryEnabled])
  {
    uint64_t v7 = +[PLManagedAsset predicateForAssetsWithCompleteResourcesOnAsset];
  }
  else
  {
    uint64_t v7 = [MEMORY[0x1E4F28F60] predicateWithValue:1];
  }
  id v8 = (void *)v7;

  return v8;
}

+ (id)cloudMasterMediaMetadataForAssetObjectID:(id)a3 managedObjectContext:(id)a4 error:(id *)a5
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  id v8 = a3;
  id v9 = [(id)objc_opt_class() fetchRequest];
  id v10 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"cloudMaster.assets CONTAINS %@", v8];

  [v9 setPredicate:v10];
  id v16 = 0;
  uint64_t v11 = [v7 executeFetchRequest:v9 error:&v16];

  id v12 = v16;
  if (v11)
  {
    id v13 = [v11 firstObject];
    uint64_t v14 = [v13 valueForKey:@"data"];
  }
  else
  {
    id v13 = PLBackendGetLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v18 = v12;
      _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Fetch for media metadata failed: %@", buf, 0xCu);
    }
    uint64_t v14 = 0;
  }

  if (a5) {
    *a5 = v12;
  }

  return v14;
}

+ (BOOL)validMomentShareForPlaceholderAsset:(id)a3
{
  id v3 = a3;
  if ([v3 isPlaceholderAsset]
    && ([v3 momentShare], uint64_t v4 = objc_claimAutoreleasedReturnValue(), v4, v4))
  {
    id v5 = [v3 momentShare];
    id v6 = [v5 shareURL];
    BOOL v7 = v6 != 0;
  }
  else
  {
    BOOL v7 = 1;
  }

  return v7;
}

+ (signed)correctedOrientation:(signed __int16)a3
{
  signed __int16 v3 = a3;
  if ((unsigned __int16)a3 - 9 < 0xFFFFFFF8) {
    return 1;
  }
  return v3;
}

+ (void)deleteOldPlaceholderAssetsInManagedObjectContext:(id)a3
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  uint64_t v4 = (void *)MEMORY[0x19F38D3B0]();
  id v5 = [MEMORY[0x1E4F1C9C8] date];
  id v6 = objc_opt_new();
  [v6 setDay:-7];
  BOOL v7 = [MEMORY[0x1E4F1C9A8] calendarWithIdentifier:*MEMORY[0x1E4F1C318]];
  id v8 = [v7 dateByAddingComponents:v6 toDate:v5 options:0];

  id v9 = PLBackendGetLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)CMTime buf = 138543362;
    uint64_t v32 = (uint64_t)v8;
    _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_INFO, "Deleting old placeholder assets older than %{public}@", buf, 0xCu);
  }

  id v10 = (void *)MEMORY[0x1E4F1C0D0];
  uint64_t v11 = +[PLManagedAsset entityName];
  id v12 = [v10 fetchRequestWithEntityName:v11];

  id v13 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v14 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForPlaceholderAsset"), 1);
  v30[0] = v14;
  id v15 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K < %@", @"addedDate", v8];
  v30[1] = v15;
  id v16 = [MEMORY[0x1E4F1C978] arrayWithObjects:v30 count:2];
  __int16 v17 = [v13 andPredicateWithSubpredicates:v16];
  [v12 setPredicate:v17];

  id v18 = (void *)[objc_alloc(MEMORY[0x1E4F1C018]) initWithFetchRequest:v12];
  [v18 setResultType:2];
  id v29 = 0;
  uint64_t v19 = [v3 executeRequest:v18 error:&v29];
  id v20 = v29;
  id v21 = PLBackendGetLog();
  id v22 = v21;
  if (v19)
  {
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      [v19 result];
      uint64_t v28 = v8;
      id v23 = v5;
      id v24 = v3;
      v26 = int64_t v25 = v4;
      uint64_t v27 = [v26 unsignedLongValue];
      *(_DWORD *)CMTime buf = 134217984;
      uint64_t v32 = v27;
      _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_INFO, "Deleted %lu placeholder assets", buf, 0xCu);

      uint64_t v4 = v25;
      id v3 = v24;
      id v5 = v23;
      id v8 = v28;
    }
  }
  else if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)CMTime buf = 138412290;
    uint64_t v32 = (uint64_t)v20;
    _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_ERROR, "Failed to delete old placeholder assets %@", buf, 0xCu);
  }
}

+ (BOOL)_isLoopingVideoPlaybackVariation:(unsigned __int16)a3
{
  return (a3 - 1) < 2;
}

+ (id)videoComplementVisibilityStatePlayablePredicate
{
  void v13[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:4];
  id v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(videoCpVisibilityState & %i) != 0 AND (videoCpVisibilityState & %i) == 0", 4, 1);
  [v2 addObject:v3];
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(videoCpVisibilityState & %i) != 0 AND (videoCpVisibilityState & %i) == 0", 8, 4);
  [v2 addObject:v4];
  id v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(videoCpVisibilityState & %i) != 0 AND (videoCpVisibilityState & %i) == 0 AND (videoCpVisibilityState & %i) == 0 AND (videoCpVisibilityState & %i) == 0", 2, 1, 8, 4);
  [v2 addObject:v5];
  id v6 = (void *)MEMORY[0x1E4F28BA0];
  BOOL v7 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %i", @"videoCpVisibilityState", 0);
  v13[0] = v7;
  id v8 = +[PLManagedAsset predicateForUnadjustedAssetsWithKeyPathToAsset:0];
  v13[1] = v8;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:2];
  id v10 = [v6 andPredicateWithSubpredicates:v9];

  [v2 addObject:v10];
  uint64_t v11 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v2];

  return v11;
}

+ (NSString)cloudUUIDKeyForDeletion
{
  return (NSString *)@"cloudAssetGUID";
}

+ (int64_t)cloudDeletionTypeForTombstone:(id)a3
{
  return 1;
}

+ (void)clearImportSessionObjectIDCacheOnManagedObjectContext:(id)a3
{
  id v5 = a3;
  if ([v5 isValidForSelector:a2 error:0])
  {
    uint64_t v4 = [v5 userInfo];
    [v4 removeObjectForKey:@"importSessionObjectIDCache"];
  }
}

+ (id)_importAlbumIsolationQueue
{
  pl_dispatch_once();
  uint64_t v2 = (void *)_importAlbumIsolationQueue_importAlbumQueue;
  return v2;
}

void __44__PLManagedAsset__importAlbumIsolationQueue__block_invoke()
{
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.assetsd.importalbumisolationqueue", 0);
  uint64_t v1 = (void *)_importAlbumIsolationQueue_importAlbumQueue;
  _importAlbumIsolationQueue_importAlbumQueue = (uint64_t)v0;
}

+ (BOOL)invalidateBehavioralScoreOnAllAssetsInManagedObjectContext:(id)a3 error:(id *)a4
{
  v24[1] = *MEMORY[0x1E4F143B8];
  id v5 = (objc_class *)MEMORY[0x1E4F1C038];
  id v6 = a3;
  id v7 = [v5 alloc];
  id v8 = +[PLComputedAssetAttributes entityName];
  id v9 = (void *)[v7 initWithEntityName:v8];

  id v23 = @"behavioralScore";
  v24[0] = &unk_1EEBF2AC8;
  id v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v24 forKeys:&v23 count:1];
  [v9 setPropertiesToUpdate:v10];

  [v9 setResultType:0];
  id v20 = 0;
  uint64_t v11 = [v6 executeRequest:v9 error:&v20];

  id v12 = v20;
  id v13 = v12;
  if (v11)
  {
    uint64_t v14 = PLBackendGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)CMTime buf = 0;
      id v15 = "Behavioral score invalidated for all assets";
      id v16 = v14;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      uint32_t v18 = 2;
LABEL_8:
      _os_log_impl(&dword_19B3C7000, v16, v17, v15, buf, v18);
    }
  }
  else
  {
    if (a4) {
      *a4 = v12;
    }
    uint64_t v14 = PLBackendGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v22 = v13;
      id v15 = "Failed to batch-invalidate behavioral score data for all assets: %@";
      id v16 = v14;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
      uint32_t v18 = 12;
      goto LABEL_8;
    }
  }

  return v11 != 0;
}

+ (BOOL)invalidateReverseLocationDataOnAllAssetsInManagedObjectContext:(id)a3 error:(id *)a4
{
  v24[1] = *MEMORY[0x1E4F143B8];
  id v5 = (objc_class *)MEMORY[0x1E4F1C038];
  id v6 = a3;
  id v7 = [v5 alloc];
  id v8 = +[PLAdditionalAssetAttributes entityName];
  id v9 = (void *)[v7 initWithEntityName:v8];

  id v23 = @"reverseLocationDataIsValid";
  v24[0] = MEMORY[0x1E4F1CC28];
  id v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v24 forKeys:&v23 count:1];
  [v9 setPropertiesToUpdate:v10];

  [v9 setResultType:0];
  id v20 = 0;
  uint64_t v11 = [v6 executeRequest:v9 error:&v20];

  id v12 = v20;
  id v13 = v12;
  if (v11)
  {
    uint64_t v14 = PLMomentsGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)CMTime buf = 0;
      id v15 = "Location data invalidated for all assets";
      id v16 = v14;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      uint32_t v18 = 2;
LABEL_8:
      _os_log_impl(&dword_19B3C7000, v16, v17, v15, buf, v18);
    }
  }
  else
  {
    if (a4) {
      *a4 = v12;
    }
    uint64_t v14 = PLMomentsGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v22 = v13;
      id v15 = "Failed to batch-invalidate location data for all assets: %@";
      id v16 = v14;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
      uint32_t v18 = 12;
      goto LABEL_8;
    }
  }

  return v11 != 0;
}

+ (void)createTHMFileWithPreviewImage:(id)a3 thumbnailImage:(id)a4 fileURLForThumbnailFile:(id)a5
{
  id v7 = (void *)MEMORY[0x1E4F8B918];
  id v8 = a5;
  id v9 = a4;
  id v10 = a3;
  uint64_t v11 = [v7 defaultFormatChooser];
  id v23 = [v11 indexSheetUnbakedFormat];

  [v23 size];
  double v13 = v12;
  double v15 = v14;
  DCIM_sizeFromPLImage();
  if (v13 <= v15) {
    double v18 = v15;
  }
  else {
    double v18 = v13;
  }
  if (v16 >= v17) {
    double v16 = v17;
  }
  if (v18 >= v16) {
    uint64_t v19 = v10;
  }
  else {
    uint64_t v19 = v9;
  }
  id v20 = v19;
  DCIM_sizeFromPLImage();
  PLSquareCropRectForSize();
  id v21 = (void *)PLCreateCroppedImageFromImage();

  id v22 = (void *)DCIM_newJPEGRepresentationWithPLImage();
  [v22 writeToURL:v8 atomically:0];
}

+ (id)predicateForStyleableAssets
{
  v8[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1E4F28BA0];
  id v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K > %d", @"currentSleetCast", 0);
  v8[0] = v3;
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K > 0", @"additionalAttributes.sleetIsReversible");
  v8[1] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:2];
  id v6 = [v2 andPredicateWithSubpredicates:v5];

  return v6;
}

+ (id)predicateForAdjustedAssetsWithKeyPathToAsset:(id)a3
{
  if (a3) {
    objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K.%K != %i", a3, @"adjustmentsState", 0);
  }
  else {
  id v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != %i", @"adjustmentsState", 0, v5);
  }
  return v3;
}

+ (id)predicateForUnadjustedAssetsWithKeyPathToAsset:(id)a3
{
  if (a3) {
    objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K.%K == %i", a3, @"adjustmentsState", 0);
  }
  else {
  id v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %i", @"adjustmentsState", 0, v5);
  }
  return v3;
}

+ (id)predicateForBurstStackAssets
{
  void v10[4] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1E4F28BA0];
  id v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %d", @"avalancheKind", 1);
  v10[0] = v3;
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K >= %d", @"avalanchePickType", 16);
  v10[1] = v4;
  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K <= %d", @"avalanchePickType", 0x7FFFFFFFLL);
  v10[2] = v5;
  id v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(%K & %i) == %i", @"avalanchePickType", 16, 16);
  v10[3] = v6;
  id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:4];
  id v8 = [v2 andPredicateWithSubpredicates:v7];

  return v8;
}

+ (id)predicateForAvalancheKindAssetsWithKind:(unsigned __int16)a3
{
  void v9[2] = *MEMORY[0x1E4F143B8];
  id v3 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != nil", @"avalancheUUID");
  v9[0] = v4;
  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForAvalancheSupportedAssets"), 0);
  v9[1] = v5;
  id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:2];
  id v7 = [v3 andPredicateWithSubpredicates:v6];

  return v7;
}

+ (id)_predicateForAvalancheKindAssetsWithUUID:(id)a3 kind:(unsigned __int16)a4
{
  uint64_t v4 = a4;
  v12[2] = *MEMORY[0x1E4F143B8];
  id v6 = (void *)MEMORY[0x1E4F28BA0];
  id v7 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K == %@", @"avalancheUUID", a3];
  v12[0] = v7;
  id v8 = [a1 predicateForAvalancheKindAssetsWithKind:v4];
  v12[1] = v8;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v12 count:2];
  id v10 = [v6 andPredicateWithSubpredicates:v9];

  return v10;
}

+ (id)predicateForBurstAssetsWithBurstUUID:(id)a3
{
  return (id)[a1 _predicateForAvalancheKindAssetsWithUUID:a3 kind:1];
}

+ (id)predicateForProResAssets
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %d", @"isMagicCarpet", 1);
}

+ (NSPredicate)predicateToIncludeSharedLibrarySharingSuggestionsAssets
{
  v8[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1E4F28BA0];
  id v3 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForSharedLibraryExclusions"), 0);
  v8[0] = v3;
  uint64_t v4 = PLManagedAssetPredicateToFetchAssetsSuggestedForSharing();
  v8[1] = v4;
  uint64_t v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:2];
  id v6 = [v2 andPredicateWithSubpredicates:v5];

  return (NSPredicate *)v6;
}

+ (id)predicateToIncludeSharedLibraryAssetsAllowingIndexingOnParticipationState:(BOOL)a3
{
  BOOL v3 = a3;
  void v12[3] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForSharedLibraryExclusions"), 0);
  id v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"visibilityState", 0, v5);
  v12[1] = v6;
  if (v3) {
    id v7 = @"%K == %d";
  }
  else {
    id v7 = @"noindex:(%K) == %d";
  }
  id v8 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", v7, @"activeLibraryScopeParticipationState", 1);
  v12[2] = v8;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v12 count:3];
  id v10 = [v4 andPredicateWithSubpredicates:v9];

  return v10;
}

+ (id)predicateToIncludePrivateLibraryAssetsAllowingIndexingOnParticipationState:(BOOL)a3
{
  BOOL v3 = a3;
  void v12[3] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForSharedLibraryExclusions"), 0);
  id v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"visibilityState", 0, v5);
  v12[1] = v6;
  if (v3) {
    id v7 = @"%K == %d";
  }
  else {
    id v7 = @"noindex:(%K) == %d";
  }
  id v8 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", v7, @"activeLibraryScopeParticipationState", 0);
  v12[2] = v8;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v12 count:3];
  id v10 = [v4 andPredicateWithSubpredicates:v9];

  return v10;
}

+ (id)predicateForReframedAssets
{
  pl_dispatch_once();
  uint64_t v2 = (void *)predicateForReframedAssets_predicate;
  return v2;
}

void __44__PLManagedAsset_predicateForReframedAssets__block_invoke()
{
  id v6 = [MEMORY[0x1E4F1CA48] array];
  dispatch_queue_t v0 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"cameraProcessingAdjustmentState", 4);
  [v6 addObject:v0];

  uint64_t v1 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"cameraProcessingAdjustmentState", 5);
  [v6 addObject:v1];

  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"cameraProcessingAdjustmentState", 13);
  [v6 addObject:v2];

  BOOL v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"cameraProcessingAdjustmentState", 12);
  [v6 addObject:v3];

  uint64_t v4 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v6];
  uint64_t v5 = (void *)predicateForReframedAssets_predicate;
  predicateForReframedAssets_predicate = v4;
}

+ (id)predicateForSpatialOverCaptureAssets
{
  pl_dispatch_once();
  uint64_t v2 = (void *)predicateForSpatialOverCaptureAssets_predicate;
  return v2;
}

void __54__PLManagedAsset_predicateForSpatialOverCaptureAssets__block_invoke()
{
  id v6 = [MEMORY[0x1E4F1CA48] array];
  dispatch_queue_t v0 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"cameraProcessingAdjustmentState", 1);
  [v6 addObject:v0];

  uint64_t v1 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"cameraProcessingAdjustmentState", 5);
  [v6 addObject:v1];

  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"cameraProcessingAdjustmentState", 13);
  [v6 addObject:v2];

  BOOL v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"cameraProcessingAdjustmentState", 9);
  [v6 addObject:v3];

  uint64_t v4 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v6];
  uint64_t v5 = (void *)predicateForSpatialOverCaptureAssets_predicate;
  predicateForSpatialOverCaptureAssets_predicate = v4;
}

+ (id)predicateForAssetSharingFilter:(signed __int16)a3
{
  return (id)[a1 predicateForAssetSharingFilter:a3 noindex:0];
}

+ (id)predicateForAssetSharingFilter:(signed __int16)a3 noindex:(BOOL)a4
{
  BOOL v4 = a3 == 1;
  if (a4) {
    uint64_t v5 = @"noindex:(%K) == %d";
  }
  else {
    uint64_t v5 = @"%K == %d";
  }
  id v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", v5, @"activeLibraryScopeParticipationState", v4);
  return v6;
}

+ (id)predicateToIncludeBothPrivateAssetsAndSharedContentContributedByCurrentUser
{
  v8[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1E4F28BA0];
  BOOL v3 = +[PLManagedAsset predicateToIncludeOnlyContentContributedByCurrentUser];
  v8[0] = v3;
  BOOL v4 = +[PLManagedAsset predicateForAssetSharingFilter:0];
  v8[1] = v4;
  uint64_t v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:2];
  id v6 = [v2 orPredicateWithSubpredicates:v5];

  return v6;
}

+ (id)predicateToIncludeOnlyContentContributedByCurrentUser
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"ANY %K.%K == YES", @"libraryScopeAssetContributors", @"participant.isCurrentUser");
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToFaceVersion:(id)a3
{
  v10[2] = *MEMORY[0x1E4F143B8];
  if (a3) {
    objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K >= %d", @"additionalAttributes.faceAnalysisVersion", objc_msgSend(a3, "intValue"));
  }
  else {
  BOOL v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K > %d", @"additionalAttributes.faceAnalysisVersion", 0);
  }
  uint64_t v5 = (void *)MEMORY[0x1E4F28BA0];
  id v6 = [a1 predicateToIncludeOnlyAllowedForAnalysisAssets];
  v10[0] = v6;
  v10[1] = v4;
  id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:2];
  id v8 = [v5 andPredicateWithSubpredicates:v7];

  return v8;
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToLatestFaceVersion
{
  BOOL v3 = +[PLMediaAnalysisServiceRequestAdapter currentFaceVersion];
  BOOL v4 = [a1 predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToFaceVersion:v3];

  return v4;
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToSceneVersion:(id)a3
{
  v10[2] = *MEMORY[0x1E4F143B8];
  if (a3) {
    objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K >= %d", @"additionalAttributes.sceneAnalysisVersion", objc_msgSend(a3, "intValue"));
  }
  else {
  BOOL v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K > %d", @"additionalAttributes.sceneAnalysisVersion", 0);
  }
  uint64_t v5 = (void *)MEMORY[0x1E4F28BA0];
  id v6 = [a1 predicateToIncludeOnlyAllowedForAnalysisAssets];
  v10[0] = v6;
  v10[1] = v4;
  id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:2];
  id v8 = [v5 andPredicateWithSubpredicates:v7];

  return v8;
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToLatestSceneVersion
{
  BOOL v3 = +[PLMediaAnalysisServiceRequestAdapter currentSceneVersion];
  BOOL v4 = [a1 predicateToIncludeOnlyAllowedForAnalysisAndProcessedAssetsToSceneVersion:v3];

  return v4;
}

+ (id)predicateToIncludeOnlyAllowedForAnalysisAssets
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == YES", @"additionalAttributes.allowedForAnalysis");
}

+ (id)predicateToExcludeNonVisibleStackedAssets
{
  void v13[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1E4F28BA0];
  BOOL v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) != %d", @"avalancheKind", 2);
  v13[0] = v3;
  BOOL v4 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"avalancheKind", 2);
  v12[0] = v5;
  id v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"avalanchePickType", 20);
  v12[1] = v6;
  id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v12 count:2];
  id v8 = [v4 andPredicateWithSubpredicates:v7];
  v13[1] = v8;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:2];
  id v10 = [v2 orPredicateWithSubpredicates:v9];

  return v10;
}

+ (id)predicateToExcludeDuplicateAssetVisibilityStateHidden
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) != %d", @"duplicateAssetVisibilityState", 100);
}

+ (id)predicateToIncludeDuplicateAssetVisibilityStateMostRelevant
{
  v8[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1E4F28BA0];
  BOOL v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"duplicateAssetVisibilityState", 0);
  v8[0] = v3;
  BOOL v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"duplicateAssetVisibilityState", 2);
  v8[1] = v4;
  uint64_t v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:2];
  id v6 = [v2 orPredicateWithSubpredicates:v5];

  return v6;
}

+ (id)predicateForSpatialMedia
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) != %d", @"spatialType", 0);
}

+ (id)predicateForDepthEffectPhotos
{
  return (id)[a1 _predicateForDepthType:1];
}

+ (id)predicateToLimitToCaptureSessionIdentifier:(id)a3
{
  id v5 = a3;
  if (!v5)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    [v8 handleFailureInMethod:a2, a1, @"PLManagedAsset.m", 708, @"Invalid parameter not satisfying: %@", @"captureSessionIdentifier != nil" object file lineNumber description];
  }
  id v6 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K == %@", @"captureSessionIdentifier", v5];

  return v6;
}

+ (id)predicateToExcludeCameraAutoAdjustments
{
  pl_dispatch_once();
  uint64_t v2 = (void *)predicateToExcludeCameraAutoAdjustments_pl_once_object_16;
  return v2;
}

void __57__PLManagedAsset_predicateToExcludeCameraAutoAdjustments__block_invoke()
{
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) != %d", @"adjustmentsState", 3);
  uint64_t v0 = [v2 copy];
  uint64_t v1 = (void *)predicateToExcludeCameraAutoAdjustments_pl_once_object_16;
  predicateToExcludeCameraAutoAdjustments_pl_once_object_16 = v0;
}

+ (id)predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath:(id)a3
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  pl_dispatch_once();
  id v10 = @"thumbnailIndex";
  BOOL v4 = (void *)MEMORY[0x1E4F28C68];
  id v5 = (id)predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath__pl_once_object_15;
  id v6 = [v4 expressionForKeyPath:v3];

  v11[0] = v6;
  id v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:&v10 count:1];
  id v8 = [v5 predicateWithSubstitutionVariables:v7];

  return v8;
}

void __91__PLManagedAsset_predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath___block_invoke()
{
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:($thumbnailIndex) == %d OR noindex:($thumbnailIndex) >= %d", 4294967294, 0);
  uint64_t v0 = [v2 copy];
  uint64_t v1 = (void *)predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath__pl_once_object_15;
  predicateToExcludeAssetsMissingMasterThumbnailsWithThumbnailIndexKeyPath__pl_once_object_15 = v0;
}

+ (id)predicateToExcludeRestrictedLockedAssets
{
  pl_dispatch_once();
  uint64_t v2 = (void *)predicateToExcludeRestrictedLockedAssets_pl_once_object_12;
  return v2;
}

void __58__PLManagedAsset_predicateToExcludeRestrictedLockedAssets__block_invoke()
{
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d AND noindex:(%K) == NO", @"trashedState", 0, @"hidden");
  uint64_t v0 = [v2 copy];
  uint64_t v1 = (void *)predicateToExcludeRestrictedLockedAssets_pl_once_object_12;
  predicateToExcludeRestrictedLockedAssets_pl_once_object_12 = v0;
}

+ (id)videoAssetsForMediaGroupUUID:(id)a3 moc:(id)a4
{
  v20[1] = *MEMORY[0x1E4F143B8];
  id v5 = (void *)MEMORY[0x1E4F1C0D0];
  id v6 = a4;
  id v7 = a3;
  id v8 = +[PLManagedAsset entityName];
  id v9 = [v5 fetchRequestWithEntityName:v8];

  id v10 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"mediaGroupUUID = %@ AND noindex:(kind) = %d", v7, 1];

  [v9 setPredicate:v10];
  uint64_t v11 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"addedDate" ascending:0];
  v20[0] = v11;
  double v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v20 count:1];
  [v9 setSortDescriptors:v12];

  id v17 = 0;
  double v13 = [v6 executeFetchRequest:v9 error:&v17];

  id v14 = v17;
  if (!v13)
  {
    double v15 = PLBackendGetLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v19 = v14;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }
  }
  return v13;
}

+ (id)imageAssetsForMediaGroupUUID:(id)a3 moc:(id)a4
{
  v20[1] = *MEMORY[0x1E4F143B8];
  id v5 = (void *)MEMORY[0x1E4F1C0D0];
  id v6 = a4;
  id v7 = a3;
  id v8 = +[PLManagedAsset entityName];
  id v9 = [v5 fetchRequestWithEntityName:v8];

  id v10 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K = %@ AND noindex:(%K) = %d", @"mediaGroupUUID", v7, @"kind", 0];

  [v9 setPredicate:v10];
  uint64_t v11 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"addedDate" ascending:0];
  v20[0] = v11;
  double v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v20 count:1];
  [v9 setSortDescriptors:v12];

  id v17 = 0;
  double v13 = [v6 executeFetchRequest:v9 error:&v17];

  id v14 = v17;
  if (!v13)
  {
    double v15 = PLBackendGetLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v19 = v14;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }
  }
  return v13;
}

+ (id)assetsWithGroupingUUID:(id)a3 inManagedObjectContext:(id)a4
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v5 = (void *)MEMORY[0x1E4F1C0D0];
  id v6 = a4;
  id v7 = a3;
  id v8 = +[PLManagedAsset entityName];
  id v9 = [v5 fetchRequestWithEntityName:v8];

  id v10 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"groupingUUID == %@", v7];

  [v9 setPredicate:v10];
  id v15 = 0;
  uint64_t v11 = [v6 executeFetchRequest:v9 error:&v15];

  id v12 = v15;
  if (!v11)
  {
    double v13 = PLBackendGetLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v17 = v12;
      _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Fetch for grouped assets failed with error %@", buf, 0xCu);
    }
  }
  return v11;
}

+ (id)assetUUIDsByObjectIDs:(id)a3 withFilterPredicate:(id)a4 context:(id)a5 error:(id *)a6
{
  void v44[2] = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = (void *)MEMORY[0x1E4F1C0D0];
  double v13 = +[PLManagedAsset entityName];
  id v14 = [v12 fetchRequestWithEntityName:v13];

  uint64_t v15 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"self IN %@", v9];
  double v16 = (void *)v15;
  if (v10)
  {
    id v17 = (void *)MEMORY[0x1E4F28BA0];
    v44[0] = v15;
    v44[1] = v10;
    uint64_t v18 = [MEMORY[0x1E4F1C978] arrayWithObjects:v44 count:2];
    uint64_t v19 = [v17 andPredicateWithSubpredicates:v18];

    double v16 = (void *)v19;
  }
  [v14 setPredicate:v16];
  v43[0] = @"objectID";
  v43[1] = @"uuid";
  id v20 = [MEMORY[0x1E4F1C978] arrayWithObjects:v43 count:2];
  [v14 setPropertiesToFetch:v20];
  [v14 setResultType:2];
  uint64_t v37 = 0;
  uint64_t v38 = &v37;
  uint64_t v39 = 0x3032000000;
  long long v40 = __Block_byref_object_copy__15798;
  int64_t v41 = __Block_byref_object_dispose__15799;
  id v42 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = &v31;
  uint64_t v33 = 0x3032000000;
  __int16 v34 = __Block_byref_object_copy__15798;
  id v35 = __Block_byref_object_dispose__15799;
  id v36 = 0;
  v26[0] = MEMORY[0x1E4F143A8];
  v26[1] = 3221225472;
  v26[2] = __74__PLManagedAsset_assetUUIDsByObjectIDs_withFilterPredicate_context_error___block_invoke;
  v26[3] = &unk_1E5874900;
  id v21 = v11;
  id v27 = v21;
  id v22 = v14;
  id v28 = v22;
  id v29 = &v31;
  uint64_t v30 = &v37;
  [v21 performBlockAndWait:v26];
  id v23 = (void *)v38[5];
  if (a6 && !v23)
  {
    *a6 = (id) v32[5];
    id v23 = (void *)v38[5];
  }
  id v24 = v23;

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v37, 8);

  return v24;
}

void __74__PLManagedAsset_assetUUIDsByObjectIDs_withFilterPredicate_context_error___block_invoke(void *a1)
{
  v29[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  v26[0] = 0;
  BOOL v4 = [v2 executeFetchRequest:v3 error:v26];
  id v5 = v26[0];
  id v21 = v5;
  if (v4)
  {
    uint64_t v6 = [MEMORY[0x1E4F1CA60] dictionary];
    uint64_t v7 = *(void *)(a1[7] + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    id v9 = v4;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v22 objects:v27 count:16];
    if (v10)
    {
      uint64_t v11 = *(void *)v23;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v23 != v11) {
            objc_enumerationMutation(v9);
          }
          double v13 = *(void **)(*((void *)&v22 + 1) + 8 * i);
          id v14 = [v13 objectForKeyedSubscript:@"uuid"];
          uint64_t v15 = [v13 objectForKeyedSubscript:@"objectID"];
          [*(id *)(*(void *)(a1[7] + 8) + 40) setObject:v14 forKey:v15];
        }
        uint64_t v10 = [v9 countByEnumeratingWithState:&v22 objects:v27 count:16];
      }
      while (v10);
    }
  }
  else
  {
    double v16 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v28 = *MEMORY[0x1E4F28228];
    id v9 = [v5 debugDescription];
    v29[0] = v9;
    id v17 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v29 forKeys:&v28 count:1];
    uint64_t v18 = [v16 errorWithDomain:*MEMORY[0x1E4F8C500] code:46301 userInfo:v17];
    uint64_t v19 = *(void *)(a1[6] + 8);
    id v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;
  }
}

+ (id)assetsWithObjectIDs:(id)a3 inLibrary:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if ([v5 count])
  {
    uint64_t v7 = (void *)MEMORY[0x19F38D3B0]();
    id v8 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"self IN %@", v5];
    id v9 = (void *)MEMORY[0x1E4F1C0D0];
    uint64_t v10 = +[PLManagedAsset entityName];
    uint64_t v11 = [v9 fetchRequestWithEntityName:v10];

    [v11 setIncludesPendingChanges:0];
    [v11 setPredicate:v8];
    if ((unint64_t)[v5 count] >= 0x65) {
      [v11 setFetchBatchSize:100];
    }
    id v12 = [v6 managedObjectContext];
    uint64_t v15 = 0;
    double v13 = [v12 executeFetchRequest:v11 error:&v15];
  }
  else
  {
    double v13 = 0;
  }

  return v13;
}

+ (PLManagedAsset)assetWithObjectID:(id)a3 inLibrary:(id)a4
{
  id v6 = a3;
  uint64_t v7 = [a4 managedObjectContext];
  id v8 = [a1 assetWithObjectID:v6 inManagedObjectContext:v7];

  return (PLManagedAsset *)v8;
}

+ (unint64_t)countForAssetsWithUUIDs:(id)a3 uuidKeyPath:(id)a4 includePendingChanges:(BOOL)a5 inManagedObjectContext:(id)a6 error:(id *)a7
{
  BOOL v9 = a5;
  id v11 = a3;
  id v12 = a4;
  id v13 = a6;
  if ([v11 count])
  {
    id v14 = (void *)MEMORY[0x19F38D3B0]();
    uint64_t v15 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K IN %@", v12, v11];
    double v16 = (void *)MEMORY[0x1E4F1C0D0];
    id v17 = +[PLManagedAsset entityName];
    uint64_t v18 = [v16 fetchRequestWithEntityName:v17];

    [v18 setIncludesPendingChanges:v9];
    [v18 setPredicate:v15];
    id v22 = 0;
    unint64_t v19 = [v13 countForFetchRequest:v18 error:&v22];
    id v20 = v22;

    if (a7 && v19 == 0x7FFFFFFFFFFFFFFFLL)
    {
      id v20 = v20;
      *a7 = v20;
      unint64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
    }
  }
  else
  {
    unint64_t v19 = 0;
    id v20 = 0;
  }

  return v19;
}

+ (unint64_t)countForAssetsWithCloudAssetGUIDs:(id)a3 includePendingChanges:(BOOL)a4 inManagedObjectContext:(id)a5 error:(id *)a6
{
  return [a1 countForAssetsWithUUIDs:a3 uuidKeyPath:@"cloudAssetGUID" includePendingChanges:a4 inManagedObjectContext:a5 error:a6];
}

+ (unint64_t)countForAssetsWithUUIDs:(id)a3 includePendingChanges:(BOOL)a4 inManagedObjectContext:(id)a5 error:(id *)a6
{
  return [a1 countForAssetsWithUUIDs:a3 uuidKeyPath:@"uuid" includePendingChanges:a4 inManagedObjectContext:a5 error:a6];
}

+ (id)assetsWithUUIDs:(id)a3 options:(unint64_t)a4 inManagedObjectContext:(id)a5
{
  char v6 = a4;
  id v7 = a3;
  id v8 = a5;
  if ([v7 count])
  {
    BOOL v9 = (void *)MEMORY[0x19F38D3B0]();
    uint64_t v10 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"uuid IN %@", v7];
    id v11 = (void *)MEMORY[0x1E4F1C0D0];
    id v12 = +[PLManagedAsset entityName];
    id v13 = [v11 fetchRequestWithEntityName:v12];

    [v13 setIncludesPendingChanges:v6 & 1];
    if ((v6 & 2) != 0)
    {
      id v14 = [MEMORY[0x1E4F1C978] arrayWithObject:@"uuid"];
      [v13 setPropertiesToFetch:v14];
    }
    [v13 setPredicate:v10];
    uint64_t v17 = 0;
    uint64_t v15 = [v8 executeFetchRequest:v13 error:&v17];
  }
  else
  {
    uint64_t v15 = 0;
  }

  return v15;
}

+ (id)assetsWithUUIDs:(id)a3 options:(unint64_t)a4 inLibrary:(id)a5
{
  id v8 = a3;
  BOOL v9 = [a5 managedObjectContext];
  uint64_t v10 = [a1 assetsWithUUIDs:v8 options:a4 inManagedObjectContext:v9];

  return v10;
}

+ (PLManagedAsset)assetWithUUID:(id)a3 inLibrary:(id)a4
{
  id v6 = a3;
  id v7 = [a4 managedObjectContext];
  id v8 = [a1 assetWithUUID:v6 inManagedObjectContext:v7];

  return (PLManagedAsset *)v8;
}

+ (BOOL)hasRequiredExtendedAttributesForMainFileURL:(id)a3
{
  id v4 = a3;
  id v5 = (void *)MEMORY[0x19F38D3B0]();
  id v6 = [MEMORY[0x1E4F8B900] persistedAttributesForFileAtURL:v4];
  LOBYTE(a1) = [a1 hasRequiredExtendedAttributesForPersistanceAttributes:v6];

  return (char)a1;
}

+ (BOOL)hasRequiredExtendedAttributesForPersistanceAttributes:(id)a3
{
  uint64_t v3 = [a3 UUIDStringForKey:*MEMORY[0x1E4F8C470]];
  BOOL v4 = [v3 length] != 0;

  return v4;
}

- (id)_imagePropertiesFromMetadata:(id)a3
{
  id v4 = a3;
  id v5 = [v4 cgImageProperties];

  if (v5)
  {
    uint64_t v6 = [v4 cgImageProperties];
  }
  else
  {
    if ([(PLManagedAsset *)self isBundleScopeSyndication])
    {
      id v7 = 0;
      goto LABEL_7;
    }
    uint64_t v6 = [(PLManagedAsset *)self imageProperties];
  }
  id v7 = (void *)v6;
LABEL_7:

  return v7;
}

- (id)generatePortraitAdjustment:(id *)a3
{
  v32[3] = *MEMORY[0x1E4F143B8];
  if ([(PLManagedAsset *)self depthType] == 1
    && ![(PLManagedAsset *)self hasAdjustments])
  {
    uint64_t v25 = 0;
    char v26 = &v25;
    uint64_t v27 = 0x3032000000;
    uint64_t v28 = __Block_byref_object_copy__15798;
    id v29 = __Block_byref_object_dispose__15799;
    id v30 = 0;
    v23[0] = 0;
    v23[1] = v23;
    v23[2] = 0x3032000000;
    v23[3] = __Block_byref_object_copy__15798;
    v23[4] = __Block_byref_object_dispose__15799;
    id v24 = 0;
    uint64_t v5 = *MEMORY[0x1E4F749C8];
    v32[0] = MEMORY[0x1E4F1CC38];
    uint64_t v6 = *MEMORY[0x1E4F74958];
    v31[0] = v5;
    v31[1] = v6;
    id v7 = [(PLManagedAsset *)self uniformTypeIdentifier];
    v32[1] = v7;
    v31[2] = *MEMORY[0x1E4F749F8];
    id v8 = objc_msgSend(NSNumber, "numberWithShort:", -[PLManagedAsset originalOrientation](self, "originalOrientation"));
    v32[2] = v8;
    BOOL v9 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v32 forKeys:v31 count:3];

    dispatch_block_t v10 = dispatch_block_create(DISPATCH_BLOCK_INHERIT_QOS_CLASS, &__block_literal_global_2760);
    id v11 = [(PLManagedObject *)self photoLibrary];
    id v12 = [v11 imageConversionServiceClient];

    id v13 = [(PLManagedAsset *)self mainFileURL];
    uint64_t v16 = MEMORY[0x1E4F143A8];
    uint64_t v17 = 3221225472;
    uint64_t v18 = __66__PLManagedAsset_ThumbnailGeneration__generatePortraitAdjustment___block_invoke_2;
    unint64_t v19 = &unk_1E5865850;
    id v21 = &v25;
    id v22 = v23;
    id v14 = v10;
    id v20 = v14;
    [v12 convertImageAtSourceURL:v13 options:v9 completionHandler:&v16];

    dispatch_block_wait(v14, 0xFFFFFFFFFFFFFFFFLL);
    objc_msgSend((id)v26[5], "objectForKeyedSubscript:", *MEMORY[0x1E4F74948], v16, v17, v18, v19);
    id v4 = (id)objc_claimAutoreleasedReturnValue();

    _Block_object_dispose(v23, 8);
    _Block_object_dispose(&v25, 8);
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

void __66__PLManagedAsset_ThumbnailGeneration__generatePortraitAdjustment___block_invoke_2(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = *(void *)(a1[5] + 8);
  BOOL v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v6;
  id v13 = v6;

  uint64_t v10 = *(void *)(a1[6] + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v12 = v7;

  (*(void (**)(void))(a1[4] + 16))();
}

- (void)generateThumbnailsWithImageSource:(CGImageSource *)a3 imageData:(id)a4 metadata:(id)a5 allowMediumPreview:(BOOL)a6 forceSRGBConversion:(BOOL)a7 forFinalCameraImage:(BOOL)a8 outSmallThumbnailData:(id *)a9 isPreviewSource:(BOOL)a10
{
  BOOL v82 = a8;
  BOOL v84 = a7;
  v125[1] = *MEMORY[0x1E4F143B8];
  id v90 = a4;
  id v89 = a5;
  if (!a3)
  {
    uint64_t v16 = 0;
    goto LABEL_87;
  }
  context = (void *)MEMORY[0x19F38D3B0]();
  [(PLManagedAsset *)self orientation];
  if (PLExifOrientationSwapsWidthAndHeight())
  {
    uint64_t v14 = [(PLManagedAsset *)self height];
    uint64_t v15 = [(PLManagedAsset *)self width];
  }
  else
  {
    uint64_t v14 = [(PLManagedAsset *)self width];
    uint64_t v15 = [(PLManagedAsset *)self height];
  }
  double v17 = (double)v15;
  double v18 = (double)v14;
  [(PLManagedAsset *)self imageSize];
  double v20 = v19;
  double v22 = v21;
  double v116 = 0.0;
  double v117 = 0.0;
  double v114 = 0.0;
  double v115 = 0.0;
  objc_msgSend((id)objc_opt_class(), "computePreCropThumbnailSize:andPostCropSize:forOrientedOriginalSize:andCroppedSize:isLargeThumbnail:", &v116, &v114, 1, (double)v14, v17, v19, v21);
  double v112 = 0.0;
  double v113 = 0.0;
  v111[0] = 0;
  v111[1] = 0;
  objc_msgSend((id)objc_opt_class(), "computePreCropThumbnailSize:andPostCropSize:forOrientedOriginalSize:andCroppedSize:isLargeThumbnail:", &v112, v111, 0, (double)v14, v17, v20, v22);
  if (v112 <= v113) {
    double v23 = v113;
  }
  else {
    double v23 = v112;
  }
  int v24 = [(PLManagedAsset *)self embeddedThumbnailWidth];
  if (v24 <= [(PLManagedAsset *)self embeddedThumbnailHeight]) {
    int v81 = [(PLManagedAsset *)self embeddedThumbnailHeight];
  }
  else {
    int v81 = [(PLManagedAsset *)self embeddedThumbnailWidth];
  }
  uint64_t v25 = [(PLManagedAsset *)self fileURLForLargeThumbnailFile];
  uint64_t v107 = 0;
  int v108 = &v107;
  uint64_t v109 = 0x2020000000;
  char v110 = 0;
  uint64_t v103 = 0;
  id v104 = &v103;
  uint64_t v105 = 0x2020000000;
  char v106 = 0;
  if (v18 > v17) {
    double v17 = v18;
  }
  if (v114 <= v115) {
    double v26 = v115;
  }
  else {
    double v26 = v114;
  }
  uint64_t v27 = (void *)MEMORY[0x1E4F8CDF8];
  uint64_t v28 = [(PLManagedAsset *)self uniformTypeIdentifier];
  id v85 = [v27 typeWithIdentifier:v28];

  if ([(PLManagedAsset *)self isPhoto]) {
    char v29 = [v85 conformsToType:*MEMORY[0x1E4F44498]];
  }
  else {
    char v29 = 0;
  }
  v93[0] = MEMORY[0x1E4F143A8];
  v93[1] = 3221225472;
  v93[2] = __189__PLManagedAsset_ThumbnailGeneration__generateThumbnailsWithImageSource_imageData_metadata_allowMediumPreview_forceSRGBConversion_forFinalCameraImage_outSmallThumbnailData_isPreviewSource___block_invoke;
  v93[3] = &unk_1E5865828;
  void v93[4] = self;
  BOOL v96 = &v107;
  CFURLRef url = v25;
  CFURLRef v94 = url;
  double v98 = v17;
  double v99 = v26;
  char v100 = v29;
  BOOL v101 = a10;
  BOOL v102 = a6;
  id v95 = v90;
  __int16 v97 = &v103;
  uint64_t v87 = (uint64_t (**)(void))MEMORY[0x19F38D650](v93);
  int v30 = v87[2]();
  if (v30)
  {
    uint64_t v31 = [(__CFURL *)url URLByDeletingLastPathComponent];
    id v92 = 0;
    char v32 = [v31 getResourceValue:&v92 forKey:*MEMORY[0x1E4F1C5C0] error:0];
    CFDataRef v33 = (const __CFData *)v92;
    if ((v32 & 1) == 0)
    {
      __int16 v34 = [MEMORY[0x1E4F28CB8] defaultManager];
      id v91 = 0;
      char v35 = [v34 createDirectoryAtURL:v31 withIntermediateDirectories:1 attributes:0 error:&v91];
      CFDictionaryRef v36 = (const __CFDictionary *)v91;

      if ((v35 & 1) == 0)
      {
        uint64_t v37 = PLThumbnailsGetLog();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
        {
          uint64_t v38 = [v31 path];
          *(_DWORD *)CMTime buf = 138412546;
          uint64_t v119 = (uint64_t)v38;
          __int16 v120 = 2112;
          id v121 = v36;
          _os_log_impl(&dword_19B3C7000, v37, OS_LOG_TYPE_ERROR, "Unable to create directory '%@': %@", buf, 0x16u);
        }
LABEL_40:

        goto LABEL_41;
      }
      goto LABEL_41;
    }
    goto LABEL_42;
  }
  if (a9)
  {
    if (*((unsigned char *)v108 + 24))
    {
      if (!*((unsigned char *)v104 + 24))
      {
        CFURLRef v39 = url;
        goto LABEL_31;
      }
LABEL_30:
      CFURLRef v39 = [(PLManagedAsset *)self fileURLForMediumThumbnailFile];
LABEL_31:
      uint64_t v31 = v39;
      if (!v39)
      {
LABEL_43:

        goto LABEL_44;
      }
      CFDataRef v33 = [MEMORY[0x1E4F1C9B8] dataWithContentsOfURL:v39 options:1 error:0];
      if ([(__CFData *)v33 length])
      {
        long long v40 = [(PLManagedAsset *)self uniformTypeIdentifier];
        if (v40)
        {
          uint64_t v124 = *MEMORY[0x1E4F2FF78];
          int64_t v41 = [(PLManagedAsset *)self uniformTypeIdentifier];
          v125[0] = v41;
          CFDictionaryRef v36 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v125 forKeys:&v124 count:1];
        }
        else
        {
          CFDictionaryRef v36 = 0;
        }

        CGImageSourceRef v42 = CGImageSourceCreateWithData(v33, v36);
        CFAutorelease(v42);
        if (!v42)
        {
          uint64_t v37 = PLThumbnailsGetLog();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
          {
            uint64_t v43 = [(__CFData *)v33 length];
            unsigned int v44 = [(PLManagedAsset *)self _compactDebugDescription];
            *(_DWORD *)CMTime buf = 134218242;
            uint64_t v119 = v43;
            __int16 v120 = 2114;
            id v121 = v44;
            _os_log_impl(&dword_19B3C7000, v37, OS_LOG_TYPE_ERROR, "Unable to generate image source from data (length %lu) for asset %{public}@", buf, 0x16u);
          }
          goto LABEL_40;
        }
        a3 = v42;
LABEL_41:
      }
LABEL_42:

      goto LABEL_43;
    }
    if (*((unsigned char *)v104 + 24)) {
      goto LABEL_30;
    }
  }
LABEL_44:
  unint64_t v45 = PLThumbnailsGetLog();
  uint64_t v86 = [(PLManagedAsset *)self _imagePropertiesFromMetadata:v89];
  BOOL v46 = (id *)MEMORY[0x1E4F44410];
  if (v30)
  {
    uint64_t v47 = PLThumbnailsGetLog();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
    {
      BOOL v48 = [(PLManagedAsset *)self _compactDebugDescription];
      *(_DWORD *)CMTime buf = 138543362;
      uint64_t v119 = (uint64_t)v48;
      _os_log_impl(&dword_19B3C7000, v47, OS_LOG_TYPE_INFO, "Unable to generate thumbnails via hardware decoder, falling back to software for %{public}@", buf, 0xCu);
    }
    BOOL v49 = [*v46 identifier];
    id v50 = CGImageDestinationCreateWithURL(url, v49, 1uLL, 0);

    if (v50)
    {
      uint64_t v51 = MetadataForPreviewJPGFromOriginalMetadata(v86);
      [v51 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F56298]];
      os_signpost_id_t v52 = os_signpost_id_generate(v45);
      uint64_t v53 = v45;
      int64_t v54 = v53;
      os_signpost_id_t spid = v52;
      unint64_t v55 = v52 - 1;
      if (v52 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v53))
      {
        id v56 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)CMTime buf = 138543362;
        uint64_t v119 = (uint64_t)v56;
        _os_signpost_emit_with_name_impl(&dword_19B3C7000, v54, OS_SIGNPOST_INTERVAL_BEGIN, spid, "generateThumbnailsWithImageSource_SW_Lg1", "uuid: %{public}@", buf, 0xCu);
      }
      double v57 = v116;
      if (v116 <= v117) {
        double v57 = v117;
      }
      uint64_t v58 = [NSNumber numberWithInt:(int)v57];
      [v51 setObject:v58 forKeyedSubscript:*MEMORY[0x1E4F2F428]];

      [v51 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F2FE48]];
      [v51 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F2F460]];
      [v51 setObject:*MEMORY[0x1E4F2FE70] forKeyedSubscript:*MEMORY[0x1E4F2FE58]];
      [v51 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F2F410]];
      if (v84) {
        id v59 = @"sRGB";
      }
      else {
        id v59 = 0;
      }
      [v51 setObject:v59 forKeyedSubscript:*MEMORY[0x1E4F2F450]];
      PrimaryImageIndedouble x = CGImageSourceGetPrimaryImageIndex(a3);
      CGImageDestinationAddImageFromSource(v50, a3, PrimaryImageIndex, (CFDictionaryRef)v51);
      if (!CGImageDestinationFinalize(v50))
      {
        id v61 = PLThumbnailsGetLog();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
        {
          id v62 = [(PLManagedAsset *)self _compactDebugDescription];
          *(_DWORD *)CMTime buf = 138543874;
          uint64_t v119 = (uint64_t)v62;
          __int16 v120 = 2114;
          id v121 = a3;
          __int16 v122 = 2114;
          int v123 = v51;
          _os_log_impl(&dword_19B3C7000, v61, OS_LOG_TYPE_ERROR, "Failed to generate large thumbnail for %{public}@ from image source %{public}@ with options %{public}@", buf, 0x20u);
        }
      }
      CFRelease(v50);
      uint64_t v63 = v54;
      uint64_t v64 = v63;
      if (v55 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v63))
      {
        *(_WORD *)CMTime buf = 0;
        _os_signpost_emit_with_name_impl(&dword_19B3C7000, v64, OS_SIGNPOST_INTERVAL_END, spid, "generateThumbnailsWithImageSource_SW_Lg1", "", buf, 2u);
      }
    }
  }
  if (a9)
  {
    uint64_t v16 = (__CFData *)objc_alloc_init(MEMORY[0x1E4F1CA58]);
    uint64_t v65 = [*v46 identifier];
    char v66 = CGImageDestinationCreateWithData(v16, v65, 1uLL, 0);

    if (v66)
    {
      uint64_t v67 = MetadataForSmallPreviewJPGFromOriginalMetadata(v86);
      double v68 = (double)v81;
      if (v23 >= (double)v81) {
        double v68 = v23;
      }
      id v69 = [NSNumber numberWithDouble:v68];
      [v67 setObject:v69 forKeyedSubscript:*MEMORY[0x1E4F2F428]];

      [v67 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F2FE48]];
      [v67 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F56298]];
      [v67 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:@"kCGImageSourceKeepOriginalProfile"];
      [v67 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F2F460]];
      [v67 setObject:*MEMORY[0x1E4F2FE70] forKeyedSubscript:*MEMORY[0x1E4F2FE58]];
      [v67 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F2F410]];
      if (v84) {
        uint64_t v70 = @"sRGB";
      }
      else {
        uint64_t v70 = 0;
      }
      [v67 setObject:v70 forKeyedSubscript:*MEMORY[0x1E4F2F450]];
      if (v82) {
        [v67 setObject:&unk_1EEBED5D8 forKeyedSubscript:@"kCGImageSourceTiledDownsamplingMode"];
      }
      os_signpost_id_t v71 = os_signpost_id_generate(v45);
      id v72 = v45;
      id v73 = v72;
      if (v71 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v72))
      {
        long long v74 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)CMTime buf = 138543362;
        uint64_t v119 = (uint64_t)v74;
        _os_signpost_emit_with_name_impl(&dword_19B3C7000, v73, OS_SIGNPOST_INTERVAL_BEGIN, v71, "generateThumbnailsWithImageSource_SW_Sm2", "uuid: %{public}@", buf, 0xCu);
      }
      size_t v75 = CGImageSourceGetPrimaryImageIndex(a3);
      CGImageDestinationAddImageFromSource(v66, a3, v75, (CFDictionaryRef)v67);
      if (!CGImageDestinationFinalize(v66))
      {
        id v76 = PLThumbnailsGetLog();
        if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR))
        {
          id v77 = [(PLManagedAsset *)self _compactDebugDescription];
          *(_DWORD *)CMTime buf = 138543874;
          uint64_t v119 = (uint64_t)v77;
          __int16 v120 = 2114;
          id v121 = a3;
          __int16 v122 = 2114;
          int v123 = v67;
          _os_log_impl(&dword_19B3C7000, v76, OS_LOG_TYPE_ERROR, "Failed to generate small thumbnail for %{public}@ from image source %{public}@ with options %{public}@", buf, 0x20u);
        }
        uint64_t v16 = 0;
      }
      CFRelease(v66);
      id v78 = v73;
      char v79 = v78;
      if (v71 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v78))
      {
        *(_WORD *)CMTime buf = 0;
        _os_signpost_emit_with_name_impl(&dword_19B3C7000, v79, OS_SIGNPOST_INTERVAL_END, v71, "generateThumbnailsWithImageSource_SW_Sm2", "", buf, 2u);
      }
    }
  }
  else
  {
    uint64_t v16 = 0;
  }

  _Block_object_dispose(&v103, 8);
  _Block_object_dispose(&v107, 8);

  if (a9)
  {
    uint64_t v16 = v16;
    *a9 = v16;
  }
LABEL_87:
}

uint64_t __189__PLManagedAsset_ThumbnailGeneration__generateThumbnailsWithImageSource_imageData_metadata_allowMediumPreview_forceSRGBConversion_forFinalCameraImage_outSmallThumbnailData_isPreviewSource___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) photoLibrary];
  if (([v2 isCloudPhotoLibraryEnabled] & 1) == 0)
  {
    char v3 = [*(id *)(a1 + 32) isMomentSharedAsset];

    if (v3) {
      return 0;
    }
    uint64_t v5 = *(void **)(a1 + 40);
    id v20 = 0;
    uint64_t v6 = *MEMORY[0x1E4F1C5C0];
    char v7 = [v5 getResourceValue:&v20 forKey:*MEMORY[0x1E4F1C5C0] error:0];
    id v8 = v20;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v7;
    double v9 = *(double *)(a1 + 72);
    double v10 = *(double *)(a1 + 80);
    uint64_t v11 = [*(id *)(a1 + 32) width];
    uint64_t v12 = [*(id *)(a1 + 32) height];
    int v13 = [*(id *)(a1 + 32) isSavedPhotosAsset];
    if ((*(void *)(a1 + 48) || !*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
      && (*(unsigned char *)(a1 + 88) || ((v9 / v10 > 1.22474487) & ~v13) != 0 || v12 * v11 >= 25000000)
      && !*(unsigned char *)(a1 + 89))
    {
      if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) && *(unsigned char *)(a1 + 90))
      {
        uint64_t v15 = [*(id *)(a1 + 32) fileURLForMediumThumbnailFile];
        id v19 = 0;
        char v16 = [v15 getResourceValue:&v19 forKey:v6 error:0];
        id v17 = v19;

        *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v16;
        int v18 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);

        if (v18)
        {
          uint64_t v4 = 0;
          id v8 = v17;
          goto LABEL_15;
        }
        id v8 = v17;
      }
      uint64_t v4 = [*(id *)(a1 + 32) avalanchePickTypeIsVisible];
    }
    else
    {
      uint64_t v4 = 0;
    }
LABEL_15:

    return v4;
  }

  return 0;
}

- (void)generateThumbnailsWithImageSource:(CGImageSource *)a3 imageData:(id)a4 metadata:(id)a5 allowMediumPreview:(BOOL)a6 forceSRGBConversion:(BOOL)a7 outSmallThumbnailData:(id *)a8 isPreviewSource:(BOOL)a9
{
  LOBYTE(v9) = a9;
  [(PLManagedAsset *)self generateThumbnailsWithImageSource:a3 imageData:a4 metadata:a5 allowMediumPreview:a6 forceSRGBConversion:a7 forFinalCameraImage:0 outSmallThumbnailData:a8 isPreviewSource:v9];
}

- (void)copyAuxiliaryImagesFromImageSource:(CGImageSource *)a3 toDestination:(CGImageDestination *)a4 fromImageAtIndex:(unint64_t)a5 imageProperties:(id)a6 applyingOrientation:(signed __int16)a7 scalingToLongSideLength:(int64_t)a8
{
  uint64_t v9 = a7;
  int v13 = (void *)MEMORY[0x1E4F8CC38];
  id v14 = a6;
  uint64_t v15 = [v13 auxiliaryImagesToPreserveForDerivativesFromImageSource:a3 imageIndex:a5];
  uint64_t v16 = *MEMORY[0x1E4F2FD00];
  id v17 = [v14 objectForKeyedSubscript:*MEMORY[0x1E4F2FD00]];
  uint64_t v18 = [v17 integerValue];
  uint64_t v19 = *MEMORY[0x1E4F2FCE8];
  id v20 = [v14 objectForKeyedSubscript:*MEMORY[0x1E4F2FCE8]];
  if (v18 <= [v20 integerValue]) {
    uint64_t v21 = v19;
  }
  else {
    uint64_t v21 = v16;
  }
  double v22 = [v14 objectForKeyedSubscript:v21];

  uint64_t v23 = [v22 integerValue];
  int v24 = [MEMORY[0x1E4F8CC38] transformAuxiliaryImages:v15 scaleFactor:v9 applyingOrientation:(double)a8 / (double)v23];
  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = __165__PLManagedAsset_ThumbnailGeneration__copyAuxiliaryImagesFromImageSource_toDestination_fromImageAtIndex_imageProperties_applyingOrientation_scalingToLongSideLength___block_invoke;
  v25[3] = &__block_descriptor_40_e39_v32__0__NSString_8__NSDictionary_16_B24l;
  void v25[4] = a4;
  [v24 enumerateKeysAndObjectsUsingBlock:v25];
}

void __165__PLManagedAsset_ThumbnailGeneration__copyAuxiliaryImagesFromImageSource_toDestination_fromImageAtIndex_imageProperties_applyingOrientation_scalingToLongSideLength___block_invoke(uint64_t a1, const __CFString *a2, const __CFDictionary *a3)
{
}

- (int64_t)cameraProcessingAdjustmentTrashedState
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v2 = [(PLManagedAsset *)self modernResources];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v11;
    int64_t v6 = 1;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v11 != v5) {
        objc_enumerationMutation(v2);
      }
      id v8 = *(void **)(*((void *)&v10 + 1) + 8 * v7);
      if ([v8 supportsTrashedState])
      {
        if ([v8 isTrashedOrExpunged]) {
          break;
        }
      }
      if (v4 == ++v7)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
        if (v4) {
          goto LABEL_3;
        }
        goto LABEL_10;
      }
    }
  }
  else
  {
LABEL_10:
    int64_t v6 = 0;
  }

  return v6;
}

- (CGSize)videoComplementSpatialOverCaptureSize
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v2 = [(PLManagedAsset *)self modernResources];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v7 resourceType] == 24)
        {
          double v8 = (double)[v7 unorientedWidth];
          double v9 = (double)[v7 unorientedHeight];

          goto LABEL_11;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  double v8 = *MEMORY[0x1E4F1DB30];
  double v9 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
LABEL_11:
  double v10 = v8;
  double v11 = v9;
  result.CGFloat height = v11;
  result.CGFloat width = v10;
  return result;
}

- (CGSize)spatialOverCaptureSize
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v2 = [(PLManagedAsset *)self modernResources];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v7 resourceType] == 10)
        {
          double v8 = (double)[v7 unorientedWidth];
          double v9 = (double)[v7 unorientedHeight];

          goto LABEL_11;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  double v8 = *MEMORY[0x1E4F1DB30];
  double v9 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
LABEL_11:
  double v10 = v8;
  double v11 = v9;
  result.CGFloat height = v11;
  result.CGFloat width = v10;
  return result;
}

- (unint64_t)ptpCloudMasterOriginalFileSize
{
  uint64_t v2 = [(PLManagedAsset *)self masterResourceForCPLType:1];
  unint64_t v3 = [v2 dataLength];

  return v3;
}

- (PLPTPTransferableSidecarFile)ptpPhotoIrisSidecar
{
  return (PLPTPTransferableSidecarFile *)[(PLManagedAsset *)self photoIrisSidecarIgnoringSubtype:0];
}

- (BOOL)cloudPhotoLibraryEnabled
{
  uint64_t v2 = [(PLManagedObject *)self photoLibrary];
  char v3 = [v2 isCloudPhotoLibraryEnabled];

  return v3;
}

- (NSData)faceRegions
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  char v3 = [v2 faceRegions];

  return (NSData *)v3;
}

- (void)setFaceRegions:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setFaceRegions:v4];
}

- (void)setAccessibilityDescription:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setAccessibilityDescription:v4];
}

- (NSString)accessibilityDescription
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  char v3 = [v2 accessibilityDescription];

  return (NSString *)v3;
}

- (void)setTitle:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setTitle:v4];
}

- (NSString)title
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  char v3 = [v2 title];

  return (NSString *)v3;
}

- (void)setLongDescription:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setLongDescription:v4];
}

- (NSString)longDescription
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  char v3 = [v2 longDescription];

  return (NSString *)v3;
}

- (void)setLocationHash:(int)a3
{
  uint64_t v3 = *(void *)&a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [NSNumber numberWithInt:v3];
  [v5 setLocationHash:v4];
}

- (int)locationHash
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 locationHash];
  int v4 = [v3 intValue];

  return v4;
}

- (void)setEmbeddedThumbnailHeight:(signed __int16)a3
{
  uint64_t v3 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  int v4 = [NSNumber numberWithShort:v3];
  [v5 setEmbeddedThumbnailHeight:v4];
}

- (signed)embeddedThumbnailHeight
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 embeddedThumbnailHeight];
  signed __int16 v4 = [v3 shortValue];

  return v4;
}

- (void)setEmbeddedThumbnailWidth:(signed __int16)a3
{
  uint64_t v3 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  signed __int16 v4 = [NSNumber numberWithShort:v3];
  [v5 setEmbeddedThumbnailWidth:v4];
}

- (signed)embeddedThumbnailWidth
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 embeddedThumbnailWidth];
  signed __int16 v4 = [v3 shortValue];

  return v4;
}

- (void)setEmbeddedThumbnailLength:(int)a3
{
  uint64_t v3 = *(void *)&a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  signed __int16 v4 = [NSNumber numberWithInt:v3];
  [v5 setEmbeddedThumbnailLength:v4];
}

- (int)embeddedThumbnailLength
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 embeddedThumbnailLength];
  int v4 = [v3 intValue];

  return v4;
}

- (void)setEmbeddedThumbnailOffset:(int)a3
{
  uint64_t v3 = *(void *)&a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  int v4 = [NSNumber numberWithInt:v3];
  [v5 setEmbeddedThumbnailOffset:v4];
}

- (int)embeddedThumbnailOffset
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 embeddedThumbnailOffset];
  int v4 = [v3 intValue];

  return v4;
}

- (NSData)embeddedThumbnailData
{
  uint64_t v3 = (void *)MEMORY[0x19F38D3B0](self, a2);
  int v4 = [(PLManagedAsset *)self embeddedThumbnailOffset];
  int v5 = [(PLManagedAsset *)self embeddedThumbnailLength];
  if (!v5) {
    goto LABEL_6;
  }
  int v6 = v5;
  uint64_t v7 = (void *)MEMORY[0x1E4F28CB0];
  double v8 = [(PLManagedAsset *)self mainFileURL];
  uint64_t v12 = 0;
  double v9 = [v7 fileHandleForReadingFromURL:v8 error:&v12];

  if (v9)
  {
    [v9 seekToFileOffset:v4];
    double v10 = [v9 readDataOfLength:v6];
    [v9 closeFile];
    if ([v10 length] != v6)
    {

      double v10 = 0;
    }
  }
  else
  {
LABEL_6:
    double v10 = 0;
  }
  return (NSData *)v10;
}

- (void)setOriginalFilesize:(unint64_t)a3
{
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  int v4 = [NSNumber numberWithUnsignedLongLong:a3];
  [v5 setOriginalFilesize:v4];
}

- (unint64_t)originalFilesize
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 originalFilesize];
  unint64_t v4 = [v3 unsignedLongLongValue];

  return v4;
}

- (void)setOriginalOrientation:(signed __int16)a3
{
  uint64_t v4 = +[PLManagedAsset correctedOrientation:a3];
  id v6 = [(PLManagedAsset *)self additionalAttributes];
  id v5 = [NSNumber numberWithShort:v4];
  [v6 setOriginalOrientation:v5];
}

- (signed)originalOrientation
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 originalOrientation];
  signed __int16 v4 = [v3 shortValue];

  return v4;
}

- (void)setOriginalFilename:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setOriginalFilename:v4];
}

- (void)setPublicGlobalUUID:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setPublicGlobalUUID:v4];
}

- (NSString)publicGlobalUUID
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 publicGlobalUUID];

  return (NSString *)v3;
}

- (void)setOriginalHash:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setOriginalHash:v4];
}

- (NSData)originalHash
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 originalHash];

  return (NSData *)v3;
}

- (void)setOriginalWidth:(int64_t)a3
{
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [NSNumber numberWithLongLong:a3];
  [v5 setOriginalWidth:v4];
}

- (int64_t)originalWidth
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 originalWidth];
  int64_t v4 = [v3 longLongValue];

  return v4;
}

- (void)setOriginalHeight:(int64_t)a3
{
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  int64_t v4 = [NSNumber numberWithLongLong:a3];
  [v5 setOriginalHeight:v4];
}

- (int64_t)originalHeight
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 originalHeight];
  int64_t v4 = [v3 longLongValue];

  return v4;
}

- (void)setOriginalAssetsUUID:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setOriginalAssetsUUID:v4];
}

- (NSString)originalAssetsUUID
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 originalAssetsUUID];

  return (NSString *)v3;
}

- (void)setEditorBundleID:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setEditorBundleID:v4];
}

- (NSString)editorBundleID
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 editorBundleID];

  return (NSString *)v3;
}

- (void)setImportedByDisplayName:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setImportedByDisplayName:v4];
}

- (NSString)importedByDisplayName
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 importedByDisplayName];

  return (NSString *)v3;
}

+ (void)computePreCropThumbnailSize:(CGSize *)a3 andPostCropSize:(CGSize *)a4 forOrientedOriginalSize:(CGSize)a5 andCroppedSize:(CGSize)a6 isLargeThumbnail:(BOOL)a7
{
  BOOL v7 = a7;
  double height = a6.height;
  double width = a6.width;
  double v10 = a5.height;
  double v11 = a5.width;
  if (PLMaxIOSurfaceDimension_onceToken != -1) {
    dispatch_once(&PLMaxIOSurfaceDimension_onceToken, &__block_literal_global_14721);
  }
  unint64_t v14 = PLMaxIOSurfaceDimension_maxDimension;
  long long v15 = [MEMORY[0x1E4F8B918] defaultFormatChooser];
  uint64_t v16 = v15;
  if (v7)
  {
    uint64_t v17 = [v15 fullScreenFormatForCurrentDevice];

    double v18 = MEMORY[0x19F38C570]([v17 fullSizeDesiredLongSide], objc_msgSend(v17, "fullSizeMinShortSide"), objc_msgSend(v17, "fullSizeMaxLongSide"), 2, (uint64_t)width, (uint64_t)height);
    double v20 = v19;
    uint64_t v16 = v17;
  }
  else
  {
    uint64_t v21 = [v15 masterThumbnailFormat];
    objc_msgSend(v21, "scaledSizeForSourceSize:capLength:", 1, width, height);
    double v18 = v22;
    double v20 = v23;
  }
  double v24 = ceil(v11 * (v18 / width));
  double v25 = ceil(v10 * (v18 / width));
  double v26 = (double)v14;
  if (v24 > (double)v14 || v25 > v26)
  {
    if (v24 > v26)
    {
      double v24 = (double)v14;
      double v25 = v10 * v26 / v11;
    }
    if (v25 > v26)
    {
      double v25 = (double)v14;
      double v24 = v11 * v26 / v10;
    }
    BOOL v28 = v18 != (double)(uint64_t)(width * v24 / v11);
    if (v20 != (double)(uint64_t)(height * v25 / v10)) {
      BOOL v28 = 1;
    }
    if (v28)
    {
      double v20 = (double)(uint64_t)(height * v25 / v10);
      double v18 = (double)(uint64_t)(width * v24 / v11);
    }
  }
  if (v24 >= 2.0) {
    double v24 = (double)(uint64_t)(((uint64_t)v24 + ((uint64_t)v24 < 0)) & 0xFFFFFFFFFFFFFFFELL);
  }
  if (v25 >= 2.0) {
    double v25 = (double)(uint64_t)(((uint64_t)v25 + ((uint64_t)v25 < 0)) & 0xFFFFFFFFFFFFFFFELL);
  }
  if (v18 >= 2.0) {
    double v18 = (double)(uint64_t)(((uint64_t)v18 + ((uint64_t)v18 < 0)) & 0xFFFFFFFFFFFFFFFELL);
  }
  if (v20 >= 2.0) {
    double v20 = (double)(uint64_t)(((uint64_t)v20 + ((uint64_t)v20 < 0)) & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a4)
  {
    a4->double width = v18;
    a4->double height = v20;
  }
  if (a3)
  {
    a3->double width = v24;
    a3->double height = v25;
  }
}

+ (void)createThumbnailImage:(id *)a3 previewImage:(id *)a4 withToBeReleasedImageSource:(CGImageSource *)a5
{
  CFDictionaryRef options = (CFDictionaryRef)objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v8 = MEMORY[0x1E4F1CC38];
  [(__CFDictionary *)options setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F2FE48]];
  [(__CFDictionary *)options setObject:v8 forKeyedSubscript:*MEMORY[0x1E4F2FE28]];
  double v9 = NSNumber;
  double v10 = [MEMORY[0x1E4F8B918] defaultFormatChooser];
  double v11 = [v10 masterThumbnailFormat];
  [v11 dimension];
  uint64_t v12 = objc_msgSend(v9, "numberWithDouble:");
  uint64_t v13 = *MEMORY[0x1E4F2FF68];
  [(__CFDictionary *)options setObject:v12 forKeyedSubscript:*MEMORY[0x1E4F2FF68]];

  ThumbnailAtIndedouble x = CGImageSourceCreateThumbnailAtIndex(a5, 0, options);
  long long v15 = (void *)DCIM_newPLImageWithCGImage();
  CGImageRelease(ThumbnailAtIndex);
  [(__CFDictionary *)options setObject:&unk_1EEBED8C0 forKeyedSubscript:v13];
  uint64_t v16 = CGImageSourceCreateThumbnailAtIndex(a5, 0, options);
  uint64_t v17 = (void *)DCIM_newPLImageWithCGImage();
  CGImageRelease(v16);
  CFRelease(a5);
  if (a3) {
    *a3 = v15;
  }
  if (a4) {
    *a4 = v17;
  }
}

+ (id)_newPathAndDateDictionariesByAssetUUIDFromFetchResults:(id)a3 photoLibrary:(id)a4
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v27 = a4;
  BOOL v28 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(v5, "count"));
  id v6 = [v27 pathManager];
  char v29 = [v6 photoDirectoryWithType:1];

  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id obj = v5;
  uint64_t v7 = [obj countByEnumeratingWithState:&v32 objects:v40 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    double v9 = @"filename";
    uint64_t v10 = *(void *)v33;
    do
    {
      uint64_t v11 = 0;
      uint64_t v30 = v8;
      do
      {
        if (*(void *)v33 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void **)(*((void *)&v32 + 1) + 8 * v11);
        uint64_t v13 = [v12 objectForKey:@"directory"];
        unint64_t v14 = [v12 objectForKey:v9];
        if ([v13 length] && objc_msgSend(v14, "length"))
        {
          long long v15 = v9;
          uint64_t v16 = [NSString stringWithFormat:@"%@/%@", v13, v14];
          uint64_t v17 = [v29 stringByAppendingPathComponent:v16];

          double v18 = [v12 objectForKey:@"uuid"];
          if ([v18 length])
          {
            uint64_t v19 = [v12 objectForKey:@"dateCreated"];
            double v20 = (void *)v19;
            if (v19)
            {
              v38[0] = @"date";
              v38[1] = @"path";
              v39[0] = v19;
              v39[1] = v17;
              uint64_t v21 = (void *)MEMORY[0x1E4F1C9E8];
              double v22 = (void **)v39;
              double v23 = (__CFString **)v38;
              uint64_t v24 = 2;
            }
            else
            {
              CFDictionaryRef v36 = @"path";
              uint64_t v37 = v17;
              uint64_t v21 = (void *)MEMORY[0x1E4F1C9E8];
              double v22 = &v37;
              double v23 = &v36;
              uint64_t v24 = 1;
            }
            double v25 = [v21 dictionaryWithObjects:v22 forKeys:v23 count:v24];
            [v28 setObject:v25 forKey:v18];
          }
          double v9 = v15;
          uint64_t v8 = v30;
        }

        ++v11;
      }
      while (v8 != v11);
      uint64_t v8 = [obj countByEnumeratingWithState:&v32 objects:v40 count:16];
    }
    while (v8);
  }

  return v28;
}

+ (id)pathAndDateDictionariesForAllIncompleteAssetsInManagedObjectContext:(id)a3
{
  v33[4] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  context = (void *)MEMORY[0x19F38D3B0]();
  id v5 = objc_alloc_init(MEMORY[0x1E4F1C0D0]);
  id v6 = [(id)objc_opt_class() entityInManagedObjectContext:v4];
  [v5 setEntity:v6];
  [v5 setResultType:2];
  v33[0] = @"uuid";
  v33[1] = @"directory";
  v33[2] = @"filename";
  v33[3] = @"dateCreated";
  uint64_t v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v33 count:4];
  [v5 setPropertiesToFetch:v7];

  uint64_t v8 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"complete == 0"];
  double v9 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForPLSyncClientIncompleteAssetExclusions"), 1);
  uint64_t v10 = (void *)MEMORY[0x1E4F28BA0];
  v32[0] = v8;
  v32[1] = v9;
  uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v32 count:2];
  uint64_t v12 = v10;
  uint64_t v13 = v4;
  unint64_t v14 = [v12 andPredicateWithSubpredicates:v11];

  [v5 setPredicate:v14];
  id v27 = 0;
  long long v15 = [v13 executeFetchRequest:v5 error:&v27];
  id v16 = v27;
  if (!v15)
  {
    uint64_t v24 = v13;
    uint64_t v17 = PLBackendGetLog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      double v18 = NSStringFromSelector(a2);
      *(_DWORD *)CMTime buf = 138412546;
      char v29 = v18;
      __int16 v30 = 2112;
      id v31 = v16;
      _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "%@ failed to fetch incomplete assets %@", buf, 0x16u);
    }
    uint64_t v13 = v24;
  }
  uint64_t v19 = objc_msgSend(v13, "photoLibrary", v24);
  uint64_t v20 = [a1 _newPathAndDateDictionariesByAssetUUIDFromFetchResults:v15 photoLibrary:v19];
  uint64_t v21 = v13;
  double v22 = (void *)v20;

  return v22;
}

- (void)simulateQuarantineOriginalImageResourceOnPush:(id)a3
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if ([(PLManagedAsset *)self isPhoto])
  {
    id v5 = (void *)MEMORY[0x19F38D3B0]();
    id v6 = [v4 identity];
    uint64_t v7 = [v6 fileURL];

    uint64_t v8 = (void *)MEMORY[0x1E4F8CDF8];
    double v9 = [v4 identity];
    uint64_t v10 = [v9 fileUTI];
    uint64_t v11 = [v8 typeWithIdentifier:v10];

    uint64_t v12 = *MEMORY[0x1E4F44410];
    if (([v11 conformsToType:*MEMORY[0x1E4F44410]] & 1) == 0
      && ![v11 conformsToType:*MEMORY[0x1E4F44460]])
    {
      if (*MEMORY[0x1E4F59AC0])
      {
LABEL_20:

        goto LABEL_21;
      }
      uint64_t v13 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 136315650;
        char v29 = "-[PLManagedAsset(CPLSimulateQuarantine) simulateQuarantineOriginalImageResourceOnPush:]";
        __int16 v30 = 2112;
        id v31 = v11;
        __int16 v32 = 2112;
        long long v33 = v7;
        _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "%s: unsupported uti: %@ for url: %@", buf, 0x20u);
      }
LABEL_19:

      goto LABEL_20;
    }
    uint64_t v13 = [MEMORY[0x1E4F1E040] filterWithName:@"CISepiaTone"];
    [v13 setValue:&unk_1EEBF2670 forKey:*MEMORY[0x1E4F1E488]];
    unint64_t v14 = [MEMORY[0x1E4F1E050] imageWithContentsOfURL:v7];
    [v13 setValue:v14 forKey:*MEMORY[0x1E4F1E480]];
    long long v15 = [v13 outputImage];
    id v16 = [MEMORY[0x1E4F1E018] context];
    if ([v11 conformsToType:v12])
    {
      uint64_t v17 = [v14 colorSpace];
      id v27 = 0;
      char v18 = [v16 writeJPEGRepresentationOfImage:v15 toURL:v7 colorSpace:v17 options:MEMORY[0x1E4F1CC08] error:&v27];
      id v19 = v27;
      if (v18)
      {
LABEL_18:

        goto LABEL_19;
      }
    }
    else if ([v11 conformsToType:*MEMORY[0x1E4F44460]])
    {
      double v25 = v5;
      CGColorSpaceRef v20 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC98]);
      uint64_t v21 = *MEMORY[0x1E4F1E300];
      id v26 = 0;
      char v22 = [v16 writePNGRepresentationOfImage:v15 toURL:v7 format:v21 colorSpace:v20 options:MEMORY[0x1E4F1CC08] error:&v26];
      id v19 = v26;
      CGColorSpaceRef v23 = v20;
      id v5 = v25;
      CFRelease(v23);
      if (v22) {
        goto LABEL_18;
      }
    }
    else
    {
      id v19 = 0;
    }
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v24 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 136315394;
        char v29 = "-[PLManagedAsset(CPLSimulateQuarantine) simulateQuarantineOriginalImageResourceOnPush:]";
        __int16 v30 = 2112;
        id v31 = v7;
        _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_ERROR, "%s: failed to write output: %@", buf, 0x16u);
      }
    }
    goto LABEL_18;
  }
LABEL_21:
}

- (BOOL)shouldSimulateQuarantineOriginalImageResourceOnPush
{
  if (shouldSimulateQuarantineOriginalImageResourceOnPush_onceToken != -1) {
    dispatch_once(&shouldSimulateQuarantineOriginalImageResourceOnPush_onceToken, &__block_literal_global_17014);
  }
  return shouldSimulateQuarantineOriginalImageResourceOnPush_simulateQuarantine;
}

void __92__PLManagedAsset_CPLSimulateQuarantine__shouldSimulateQuarantineOriginalImageResourceOnPush__block_invoke()
{
  if (MEMORY[0x19F38BDA0]())
  {
    id v0 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
    shouldSimulateQuarantineOriginalImageResourceOnPush_simulateQuarantine = [v0 BOOLForKey:@"PLSimulateQuarantineMasterImageOnPush"];
  }
}

- (BOOL)cleanUpMetadataPath
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v4 = [(PLManagedAsset *)self pathForCameraMetadataFile];
  id v10 = 0;
  char v5 = [v3 removeItemAtPath:v4 error:&v10];
  id v6 = v10;

  if ((v5 & 1) == 0)
  {
    uint64_t v7 = PLBackendGetLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = [(PLManagedAsset *)self pathForCameraMetadataFile];
      *(_DWORD *)CMTime buf = 138412546;
      uint64_t v12 = v8;
      __int16 v13 = 2112;
      id v14 = v6;
      _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_ERROR, "[SemDev] Unable to remove MDATA file at path %@: %@", buf, 0x16u);
    }
  }

  return 1;
}

- (BOOL)promoteSemanticEnhancePreviewToFinalImage:(id *)a3
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v15 = 0;
  BOOL v5 = [(PLManagedAsset *)self promoteDeferredPreviewToFinalImageWithOutError:&v15];
  id v6 = v15;
  if (!v5)
  {
    uint64_t v7 = PLDeferredProcessingGetLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v17 = v6;
      _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_ERROR, "[SemDev] Error promoting deferred preview to final image: %@", buf, 0xCu);
    }
  }
  [(PLManagedAsset *)self cleanUpMetadataPath];
  [(PLManagedAsset *)self setDeferredProcessingNeeded:0];
  uint64_t v8 = [(PLManagedAsset *)self additionalAttributes];
  [v8 setDeferredProcessingCandidateOptions:0];

  if ([(PLManagedAsset *)self hasAdjustments])
  {
    if (![(PLManagedAsset *)self isPhotoIrisPlaceholder])
    {
      [(PLManagedAsset *)self setDeferredProcessingNeeded:2];
      double v9 = [(PLManagedObject *)self photoLibrary];
      uint64_t v11 = [v9 libraryServicesManager];
      uint64_t v12 = [v11 backgroundJobService];
      __int16 v13 = [(PLManagedObject *)self photoLibrary];
      [v12 signalBackgroundProcessingNeededOnLibrary:v13];

LABEL_11:
      goto LABEL_12;
    }
    if ([(PLManagedAsset *)self isPhotoIris])
    {
      double v9 = PLDeferredProcessingGetLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)CMTime buf = 138543362;
        id v17 = v10;
        _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_DEFAULT, "Promoted semantic enhance preview to final image for adjusted live photo (%{public}@) which is still a placeholder, skipping deferred adjustment", buf, 0xCu);
      }
      goto LABEL_11;
    }
  }
LABEL_12:
  if (a3 && v6) {
    *a3 = v6;
  }

  return v6 == 0;
}

- (BOOL)installFinalVideoComplementAndRemoveDeferredFilesWithOutError:(id *)a3
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  BOOL v5 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v6 = [(PLManagedAsset *)self pathForDeferredVideoComplementFile];
  id v17 = 0;
  char v7 = [v5 removeItemAtPath:v6 error:&v17];
  id v8 = v17;
  if (v7)
  {
  }
  else
  {
    char v9 = PLIsErrorFileNotFound();

    if ((v9 & 1) == 0)
    {
      __int16 v13 = PLBackendGetLog();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        id v14 = [(PLManagedAsset *)self pathForDeferredVideoComplementFile];
        *(_DWORD *)CMTime buf = 138412546;
        id v19 = v14;
        __int16 v20 = 2112;
        id v21 = v8;
        _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Failed to remove item at path %@: %@", buf, 0x16u);
      }
      goto LABEL_11;
    }
  }
  id v16 = v8;
  BOOL v10 = [(PLManagedAsset *)self _updateAndStoreFinalVideoComplementResourceWithOutError:&v16];
  id v11 = v16;

  if (v10)
  {
    [(PLManagedAsset *)self deleteResourcesWithRecipeID:131279 andVersion:0];
    BOOL v12 = 1;
    goto LABEL_14;
  }
  __int16 v13 = PLBackendGetLog();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)CMTime buf = 138412290;
    id v19 = v11;
    _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Failed to update and store video complement resource with error: %@", buf, 0xCu);
  }
  id v8 = v11;
LABEL_11:

  if (a3)
  {
    id v11 = v8;
    BOOL v12 = 0;
    *a3 = v11;
  }
  else
  {
    BOOL v12 = 0;
    id v11 = v8;
  }
LABEL_14:

  return v12;
}

- (BOOL)promoteProxyToFinalVideoComplementWithOutError:(id *)a3
{
  uint64_t v19 = 0;
  __int16 v20 = &v19;
  uint64_t v21 = 0x2020000000;
  char v22 = 0;
  BOOL v5 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000;
  id v16 = __Block_byref_object_copy__17936;
  id v17 = __Block_byref_object_dispose__17937;
  id v18 = 0;
  id v6 = [(PLManagedObject *)self photoLibrary];
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  void v9[2] = __90__PLManagedAsset_DeferredPhotoProcessing__promoteProxyToFinalVideoComplementWithOutError___block_invoke;
  void v9[3] = &unk_1E5874900;
  v9[4] = self;
  id v11 = &v13;
  id v7 = v5;
  id v10 = v7;
  BOOL v12 = &v19;
  [v6 performTransactionAndWait:v9];

  if (*((unsigned char *)v20 + 24))
  {
    LOBYTE(a3) = 1;
  }
  else if (a3)
  {
    *a3 = (id) v14[5];
    LOBYTE(a3) = *((unsigned char *)v20 + 24) != 0;
  }

  _Block_object_dispose(&v13, 8);
  _Block_object_dispose(&v19, 8);
  return (char)a3;
}

void __90__PLManagedAsset_DeferredPhotoProcessing__promoteProxyToFinalVideoComplementWithOutError___block_invoke(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)MEMORY[0x1E4F8B908];
  uint64_t v3 = [*(id *)(a1 + 32) fileURLForDeferredVideoComplement];
  id v4 = [*(id *)(a1 + 32) fileURLForOriginalVideoComplement];
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v5 + 40);
  LOBYTE(v2) = [v2 copyItemAtURL:v3 toURL:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  if ((v2 & 1) != 0
    || ([MEMORY[0x1E4F8B908] isFileExistsError:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)] & 1) != 0)
  {
    goto LABEL_6;
  }
  char v6 = PLIsErrorFileNotFound();

  if (v6) {
    goto LABEL_8;
  }
  uint64_t v3 = PLBackendGetLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    id v4 = [*(id *)(a1 + 32) pathForDeferredVideoComplementFile];
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    *(_DWORD *)CMTime buf = 138412546;
    uint64_t v24 = v4;
    __int16 v25 = 2112;
    uint64_t v26 = v7;
    _os_log_impl(&dword_19B3C7000, v3, OS_LOG_TYPE_ERROR, "[FDR] Error copying video complement proxy file %@, error: %@", buf, 0x16u);
LABEL_6:
  }
LABEL_8:
  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  id v21 = *(id *)(v9 + 40);
  char v10 = [v8 _updateAndStoreFinalVideoComplementResourceWithOutError:&v21];
  objc_storeStrong((id *)(v9 + 40), v21);
  if (v10)
  {
    id v11 = *(void **)(a1 + 40);
    BOOL v12 = [*(id *)(a1 + 32) pathForDeferredVideoComplementFile];
    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
    id v20 = *(id *)(v13 + 40);
    LOBYTE(v11) = [v11 removeItemAtPath:v12 error:&v20];
    objc_storeStrong((id *)(v13 + 40), v20);
    if (v11)
    {

LABEL_14:
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
      [*(id *)(a1 + 32) deleteResourcesWithRecipeID:131279 andVersion:0];
      return;
    }
    char v18 = PLIsErrorFileNotFound();

    if (v18) {
      goto LABEL_14;
    }
    id v14 = PLBackendGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = [*(id *)(a1 + 32) pathForDeferredVideoComplementFile];
      uint64_t v19 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      *(_DWORD *)CMTime buf = 138412546;
      uint64_t v24 = v15;
      __int16 v25 = 2112;
      uint64_t v26 = v19;
      id v17 = "Failed to remove item at path %@: %@";
      goto LABEL_17;
    }
  }
  else
  {
    id v14 = PLBackendGetLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = [*(id *)(a1 + 32) uuid];
      uint64_t v16 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      *(_DWORD *)CMTime buf = 138543618;
      uint64_t v24 = v15;
      __int16 v25 = 2112;
      uint64_t v26 = v16;
      id v17 = "Failed to install resources for asset %{public}@: %@";
LABEL_17:
      _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_ERROR, v17, buf, 0x16u);
    }
  }
}

- (BOOL)_updateAndStoreFinalVideoComplementResourceWithOutError:(id *)a3
{
  uint64_t v5 = [(PLManagedAsset *)self pathForVideoComplementFile];
  char v6 = [(PLManagedAsset *)self managedObjectContext];
  uint64_t v7 = +[PLResourceInstaller validatedExternalResourceForLocalVideoIfPresentAtPath:v5 context:v6];

  if (!v7)
  {
    LOBYTE(v11) = 0;
    if (!a3) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  [v7 setRecipeID:0];
  [v7 setResourceType:3];
  [v7 setVersion:0];
  id v8 = [(PLManagedAsset *)self assetID];
  uint64_t v9 = [v8 libraryID];
  char v10 = PLDataStoreForClassIDAndLibraryID(0, v9);

  id v15 = 0;
  id v16 = 0;
  int v11 = [v10 storeExternalResource:v7 forAsset:self options:0 error:&v16 resultingResource:&v15];
  id v12 = v16;
  id v13 = v15;
  if (v11) {
    [(PLManagedAsset *)self deleteResourcesWithRecipeID:131280 andVersion:0];
  }

  if (a3) {
LABEL_5:
  }
    *a3 = 0;
LABEL_6:

  return v11;
}

- (BOOL)transitionToDeferredProcessingNeededAdjustmentWithOriginalWidth:(unint64_t)a3 originalHeight:(unint64_t)a4 shouldSignalBackgroundProcessingNeeded:(BOOL)a5 reason:(id)a6
{
  BOOL v6 = a5;
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v10 = a6;
  if ([(PLManagedAsset *)self hasAdjustments])
  {
    BOOL v11 = [(PLManagedAsset *)self isPhotoIrisPlaceholder];
    if (!v11)
    {
      [(PLManagedAsset *)self setHeight:a4];
      [(PLManagedAsset *)self setWidth:a3];
      [(PLManagedAsset *)self setDeferredProcessingNeeded:2];
      id v15 = PLDeferredProcessingGetLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        id v16 = [(PLManagedAsset *)self uuid];
        int v21 = 138543618;
        id v22 = v10;
        __int16 v23 = 2114;
        uint64_t v24 = v16;
        _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_DEBUG, "%{public}@ finished, transitioning asset (%{public}@) to deferred processing needed adjustment", (uint8_t *)&v21, 0x16u);
      }
      if (!v6)
      {
        char v14 = 1;
        goto LABEL_13;
      }
      id v12 = [(PLManagedObject *)self photoLibrary];
      id v17 = [v12 libraryServicesManager];
      char v18 = [v17 backgroundJobService];
      uint64_t v19 = [(PLManagedObject *)self photoLibrary];
      [v18 signalBackgroundProcessingNeededOnLibrary:v19];

      goto LABEL_11;
    }
    if ([(PLManagedAsset *)self isPhotoIris])
    {
      id v12 = PLDeferredProcessingGetLog();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        id v13 = [(PLManagedAsset *)self uuid];
        int v21 = 138543618;
        id v22 = v10;
        __int16 v23 = 2114;
        uint64_t v24 = v13;
        _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_DEFAULT, "%{public}@, but adjusted live photo (%{public}@) is still a placeholder, skipping deferred adjustment", (uint8_t *)&v21, 0x16u);
      }
LABEL_11:
      char v14 = !v11;

      goto LABEL_13;
    }
  }
  char v14 = 0;
LABEL_13:

  return v14;
}

- (BOOL)promoteDeferredPreviewToFinalImageWithOutError:(id *)a3
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v20 = 0;
  int v21 = &v20;
  uint64_t v22 = 0x3032000000;
  __int16 v23 = __Block_byref_object_copy__17936;
  uint64_t v24 = __Block_byref_object_dispose__17937;
  id v25 = 0;
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 0;
  BOOL v6 = [(PLManagedObject *)self photoLibrary];
  if (v6)
  {
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    void v12[2] = __90__PLManagedAsset_DeferredPhotoProcessing__promoteDeferredPreviewToFinalImageWithOutError___block_invoke;
    void v12[3] = &unk_1E5874900;
    void v12[4] = self;
    id v13 = v5;
    char v14 = &v20;
    id v15 = &v16;
    [v6 performTransactionAndWait:v12];
  }
  else
  {
    uint64_t v7 = PLBackendGetLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = [(PLManagedAsset *)self objectID];
      *(_DWORD *)CMTime buf = 138543362;
      uint64_t v27 = v8;
      _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_ERROR, "photolibrary was nil for asset: %{public}@", buf, 0xCu);
    }
  }
  int v9 = *((unsigned __int8 *)v17 + 24);
  if (a3 && !*((unsigned char *)v17 + 24))
  {
    *a3 = (id) v21[5];
    int v9 = *((unsigned __int8 *)v17 + 24);
  }
  BOOL v10 = v9 != 0;

  _Block_object_dispose(&v16, 8);
  _Block_object_dispose(&v20, 8);

  return v10;
}

void __90__PLManagedAsset_DeferredPhotoProcessing__promoteDeferredPreviewToFinalImageWithOutError___block_invoke(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [*(id *)(a1 + 32) mainFileURL];
  uint64_t v3 = [*(id *)(a1 + 32) height];
  uint64_t v4 = [*(id *)(a1 + 32) width];
  uint64_t v5 = *(void **)(a1 + 40);
  BOOL v6 = [*(id *)(a1 + 32) fileURLForCurrentDeferredProcessingPreviewFile];
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v7 + 40);
  LODWORD(v5) = [v5 copyItemAtURL:v6 toURL:v2 error:&obj];
  objc_storeStrong((id *)(v7 + 40), obj);

  if (v5)
  {
    id v8 = *(void **)(a1 + 32);
    uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
    id v19 = *(id *)(v9 + 40);
    int v10 = [v8 installFinalImageAndRemoveDeferredFilesWithFinalImageURL:v2 outError:&v19];
    objc_storeStrong((id *)(v9 + 40), v19);
    if (v10)
    {
      [*(id *)(a1 + 32) setSpatialType:0];
      BOOL v11 = [*(id *)(a1 + 32) additionalAttributes];
      [v11 setSleetIsReversible:0];

      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
    }
    else if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) {
           && objc_msgSend(MEMORY[0x1E4F8B908], "isFileExistsError:"))
    }
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
      id v17 = PLDeferredProcessingGetLog();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v18 = [*(id *)(a1 + 32) mainFileURL];
        *(_DWORD *)CMTime buf = 138412290;
        uint64_t v22 = v18;
        _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEFAULT, "Asset has already been finalized into slot, skipping promoting final image: %@", buf, 0xCu);
      }
    }
  }
  else
  {
    id v12 = PLDeferredProcessingGetLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      id v13 = [*(id *)(a1 + 32) fileURLForCurrentDeferredProcessingPreviewFile];
      uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      *(_DWORD *)CMTime buf = 138412802;
      uint64_t v22 = v13;
      __int16 v23 = 2112;
      uint64_t v24 = v2;
      __int16 v25 = 2112;
      uint64_t v26 = v14;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "Failed to copy deferred preview: %@ into original slot: %@ with error: %@", buf, 0x20u);
    }
    [*(id *)(a1 + 32) requestDeletionOfDeferredPhotoProcessingIntermediates];
  }
  if (([*(id *)(a1 + 32) transitionToDeferredProcessingNeededAdjustmentWithOriginalWidth:v4 originalHeight:v3 shouldSignalBackgroundProcessingNeeded:0 reason:@"Promoted deferred preview to final image"] & 1) == 0&& objc_msgSend(*(id *)(a1 + 32), "deferredProcessingNeeded") != 7)
  {
    [*(id *)(a1 + 32) setDeferredProcessingNeeded:0];
  }
  id v15 = [*(id *)(a1 + 32) additionalAttributes];
  char v16 = [v15 deferredProcessingCandidateOptions];

  if ((v16 & 8) != 0) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 32) cleanUpMetadataPath];
  }
}

- (BOOL)_updateAndStoreFinalPhotoResourceForResourceType:(unsigned int)a3 version:(unsigned int)a4 error:(id *)a5
{
  uint64_t v6 = *(void *)&a4;
  uint64_t v7 = *(void *)&a3;
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = [(PLManagedAsset *)self mainFileURL];
  int v10 = [v9 path];
  int64_t v11 = [(PLManagedAsset *)self width];
  int64_t v12 = [(PLManagedAsset *)self height];
  LOWORD(v27) = [(PLManagedAsset *)self kind];
  id v13 = +[PLResourceInstaller generateValidatedExternalImageResourceOfType:v7 forFilePath:v10 requireFileToBePresent:1 version:v6 basedOnFullSizeWidth:v11 andHeight:v12 recipe:0 assetKind:v27 error:0];

  if (v13)
  {
    char v16 = [(PLManagedAsset *)self assetID];
    uint64_t v14 = [v16 libraryID];
    id v15 = PLDataStoreForClassIDAndLibraryID(0, v14);

    id v28 = 0;
    id v29 = 0;
    LODWORD(v16) = [v15 storeExternalResource:v13 forAsset:self options:0 error:&v29 resultingResource:&v28];
    id v17 = v29;
    id v18 = v28;
    if (v16)
    {
      [(PLManagedAsset *)self recalculateImageRequestHints];
      id v19 = 0;
    }
    else
    {
      __int16 v23 = [MEMORY[0x1E4F1CA60] dictionary];
      [v17 code];
      uint64_t v24 = NSStringFromPLErrorCode();
      [v23 setObject:v24 forKeyedSubscript:*MEMORY[0x1E4F28228]];

      __int16 v25 = [NSNumber numberWithUnsignedInt:v6];
      [v23 setObject:v25 forKeyedSubscript:@"version"];

      [v23 setObject:v17 forKeyedSubscript:*MEMORY[0x1E4F28A50]];
      id v19 = objc_msgSend(MEMORY[0x1E4F28C58], "errorWithDomain:code:userInfo:", *MEMORY[0x1E4F8C500], objc_msgSend(v17, "code"), v23);
    }
  }
  else
  {
    uint64_t v20 = PLBackendGetLog();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      int v21 = [(PLManagedAsset *)self uuid];
      *(_DWORD *)CMTime buf = 138412290;
      id v31 = v21;
      _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_ERROR, "Failed to install deferred photo processing resources for asset %@", buf, 0xCu);
    }
    id v15 = [MEMORY[0x1E4F1CA60] dictionary];
    char v16 = NSStringFromPLErrorCode();
    [v15 setObject:v16 forKeyedSubscript:*MEMORY[0x1E4F28228]];

    uint64_t v22 = [NSNumber numberWithUnsignedInt:v6];
    [v15 setObject:v22 forKeyedSubscript:@"version"];

    id v19 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4F8C500] code:47010 userInfo:v15];
    LOBYTE(v16) = 0;
  }

  if (a5) {
    *a5 = v19;
  }

  return (char)v16;
}

- (BOOL)installFinalImageAndRemoveDeferredFilesWithFinalImageURL:(id)a3 outError:(id *)a4
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  uint64_t v7 = PLBackendGetLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    id v8 = [(PLManagedAsset *)self uuid];
    *(_DWORD *)CMTime buf = 138412546;
    id v23 = v6;
    __int16 v24 = 2112;
    id v25 = v8;
    _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_DEBUG, "Installing final image and removing deferred files for url %@, uuid %@", buf, 0x16u);
  }
  uint64_t v9 = [(PLManagedObject *)self photoLibrary];
  uint64_t v10 = [(PLManagedAsset *)self savedAssetType];
  int64_t v11 = [(PLManagedAsset *)self uuid];
  LOBYTE(v20) = 1;
  LOBYTE(v19) = 0;
  int64_t v12 = [v9 addDCIMEntryAtFileURL:v6 mainFileMetadata:0 previewImage:0 thumbnailImage:0 savedAssetType:v10 replacementUUID:v11 publicGlobalUUID:0 extendedInfo:0 withUUID:0 isPlaceholder:v19 placeholderFileURL:0 forFinalCameraImage:v20];

  if (v12)
  {
    id v21 = 0;
    char v13 = [(id)objc_opt_class() installResourcesForAssetAndRemoveDeferredProcessingPreviewFile:v12 error:&v21];
    id v14 = v21;
    if (v13)
    {
      BOOL v15 = 1;
      goto LABEL_12;
    }
  }
  else
  {
    id v14 = 0;
  }
  char v16 = PLDeferredProcessingGetLog();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
  {
    id v17 = [(PLManagedAsset *)self uuid];
    *(_DWORD *)CMTime buf = 138543874;
    id v23 = v17;
    __int16 v24 = 2112;
    id v25 = v6;
    __int16 v26 = 2112;
    id v27 = v14;
    _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "Failed to install resources for asset %{public}@, at path %@, error: %@", buf, 0x20u);
  }
  if (a4)
  {
    id v14 = v14;
    BOOL v15 = 0;
    *a4 = v14;
  }
  else
  {
    BOOL v15 = 0;
  }
LABEL_12:

  return v15;
}

- (void)requestDeletionOfDeferredPhotoProcessingIntermediates
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = objc_alloc_init(PLCaptureDeferredPhotoProcessor);
  if (!v3)
  {
    id v6 = PLBackendGetLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v8 = [(PLManagedAsset *)self uuid];
      int v9 = 138543362;
      uint64_t v10 = v8;
      _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_ERROR, "Couldn't get a shared finalizer, unable to request intermediate deletions for asset: %{public}@", (uint8_t *)&v9, 0xCu);
    }
    goto LABEL_6;
  }
  uint64_t v4 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v5 = [v4 deferredPhotoIdentifier];

  if (v5)
  {
    id v6 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v7 = [v6 deferredPhotoIdentifier];
    [(PLManagedAsset *)self _deleteDeferredIntermediatesForDeferredPhotoIdentifier:v7 withFinalizer:v3];

LABEL_6:
  }
}

- (void)_deleteDeferredIntermediatesForDeferredPhotoIdentifier:(id)a3 withFinalizer:(id)a4
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)[objc_alloc(MEMORY[0x1E4F16428]) initWithDeferredPhotoIdentifier:v6];
  int v9 = PLBackendGetLog();
  uint64_t v10 = v9;
  if (!v7 || !v8)
  {
    BOOL v13 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v13)
      {
        id v14 = [(PLManagedAsset *)self uuid];
        int v16 = 138412546;
        id v17 = v14;
        __int16 v18 = 2112;
        id v19 = v6;
        BOOL v15 = "Requested deletion of intermediates for asset: %@, deferredUUID: %@ but that deferredUUID is not recognized";
LABEL_11:
        _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_ERROR, v15, (uint8_t *)&v16, 0x16u);
      }
    }
    else if (v13)
    {
      id v14 = [(PLManagedAsset *)self uuid];
      int v16 = 138412546;
      id v17 = v14;
      __int16 v18 = 2112;
      id v19 = v6;
      BOOL v15 = "Requested deletion of intermediates for asset: %@, deferredUUID: %@ but the shared finalizer was nil";
      goto LABEL_11;
    }

    goto LABEL_13;
  }
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = [(PLManagedAsset *)self uuid];
    int64_t v12 = [v8 deferredPhotoIdentifier];
    int v16 = 138412546;
    id v17 = v11;
    __int16 v18 = 2112;
    id v19 = v12;
    _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_DEFAULT, "Requesting deletion of intermediates for asset: %@, deferredUUID: %@", (uint8_t *)&v16, 0x16u);
  }
  [v7 deletePersistentStorageForPhotoProxy:v8];
LABEL_13:
}

+ (BOOL)installResourcesForAssetAndRemoveDeferredProcessingPreviewFile:(id)a3 error:(id *)a4
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v7 = [v5 pathForDeferredProcessingPreviewFile];
  id v8 = PLBackendGetLog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = [v5 uuid];
    *(_DWORD *)CMTime buf = 138412546;
    id v23 = v7;
    __int16 v24 = 2114;
    id v25 = v9;
    _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_DEFAULT, "Deleting deferred preview at path: %@ for asset %{public}@", buf, 0x16u);
  }
  id v21 = 0;
  char v10 = [v6 removeItemAtPath:v7 error:&v21];
  id v11 = v21;
  if (v10 & 1) != 0 || (PLIsErrorFileNotFound())
  {
    id v20 = v11;
    char v12 = [v5 _updateAndStoreFinalPhotoResourceForResourceType:0 version:0 error:&v20];
    id v13 = v20;

    if (v12)
    {
      [v5 deleteResourcesWithRecipeID:65943 andVersion:0];
      [v5 deleteResourcesWithRecipeID:65951 andVersion:0];
      BOOL v14 = 1;
      goto LABEL_15;
    }
    BOOL v15 = PLDeferredProcessingGetLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      int v16 = [v5 uuid];
      *(_DWORD *)CMTime buf = 138543618;
      id v23 = v16;
      __int16 v24 = 2112;
      id v25 = v13;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Error updating and storing final resource for asset %{public}@ with error %@", buf, 0x16u);
    }
    id v11 = v13;
  }
  else
  {
    BOOL v15 = PLBackendGetLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      id v17 = [MEMORY[0x1E4F8B8F0] descriptionWithPath:v7];
      __int16 v18 = [v5 uuid];
      *(_DWORD *)CMTime buf = 138412802;
      id v23 = v17;
      __int16 v24 = 2114;
      id v25 = v18;
      __int16 v26 = 2112;
      id v27 = v11;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Unable to delete deferred preview file: %@ for asset: %{public}@, with error: %@", buf, 0x20u);
    }
  }

  if (a4)
  {
    id v13 = v11;
    BOOL v14 = 0;
    *a4 = v13;
  }
  else
  {
    BOOL v14 = 0;
    id v13 = v11;
  }
LABEL_15:

  return v14;
}

+ (id)listOfStatesWithOutstandingDeferredPhotoProcessingWork
{
  return &unk_1EEBF17C0;
}

- (BOOL)isEligibleForSearchIndexing
{
  if ([(PLManagedAsset *)self isDeleted]) {
    return 0;
  }
  uint64_t v4 = objc_opt_class();
  id v5 = [(PLManagedObject *)self photoLibrary];
  id v6 = objc_msgSend(v4, "isEligibleForSearchIndexingPredicateForLibraryIdentifier:", +[PLSpotlightDonationUtilities wellKnownPhotoLibraryIdentifierFromPLPhotoLibrary:](PLSpotlightDonationUtilities, "wellKnownPhotoLibraryIdentifierFromPLPhotoLibrary:", v5));
  char v7 = [v6 evaluateWithObject:self];

  return v7;
}

+ (id)fetchAssetsWithUUIDs:(id)a3 managedObjectContext:(id)a4
{
  id v6 = a3;
  char v7 = (void *)MEMORY[0x1E4F1C0D0];
  id v8 = a4;
  int v9 = +[PLManagedAsset entityName];
  char v10 = [v7 fetchRequestWithEntityName:v9];

  [v10 setIncludesPendingChanges:0];
  id v11 = [a1 relationshipKeyPathsToPrefetch];
  [v10 setRelationshipKeyPathsForPrefetching:v11];

  if ((unint64_t)[v6 count] >= 0x65) {
    [v10 setFetchBatchSize:100];
  }
  char v12 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"uuid IN %@", v6];
  [v10 setPredicate:v12];

  objc_msgSend(v10, "setFetchLimit:", objc_msgSend(v6, "count"));
  id v17 = 0;
  id v13 = [v8 executeFetchRequest:v10 error:&v17];

  id v14 = v17;
  if (v13) {
    [MEMORY[0x1E4F8B9B8] successWithResult:v13];
  }
  else {
  BOOL v15 = [MEMORY[0x1E4F8B9B8] failureWithError:v14];
  }

  return v15;
}

+ (id)relationshipKeyPathsToPrefetch
{
  v4[8] = *MEMORY[0x1E4F143B8];
  v4[0] = @"additionalAttributes";
  v4[1] = @"additionalAttributes.keywords";
  v4[2] = @"additionalAttributes.assetDescription";
  v4[3] = @"extendedAttributes";
  v4[4] = @"mediaAnalysisAttributes.characterRecognitionAttributes";
  v4[5] = @"mediaAnalysisAttributes.visualSearchAttributes";
  v4[6] = @"dayGroupHighlightBeingAssets";
  v4[7] = @"moment";
  uint64_t v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:8];
  return v2;
}

+ (id)propertiesToFetch
{
  return 0;
}

+ (id)isEligibleForSearchIndexingPredicateForLibraryIdentifier:(int64_t)a3
{
  void v11[2] = *MEMORY[0x1E4F143B8];
  pl_dispatch_once();
  if (a3 == 3)
  {
    uint64_t v4 = (void *)MEMORY[0x1E4F28F60];
    id v5 = [MEMORY[0x1E4F1C9C8] distantPast];
    id v6 = [v4 predicateWithFormat:@"noindex:(%K) != %@", @"dateCreated", v5];

    char v7 = (void *)MEMORY[0x1E4F28BA0];
    v11[0] = isEligibleForSearchIndexingPredicateForLibraryIdentifier__predicate_42707;
    v11[1] = v6;
    id v8 = [MEMORY[0x1E4F1C978] arrayWithObjects:v11 count:2];
    id v9 = [v7 andPredicateWithSubpredicates:v8];
  }
  else
  {
    id v9 = (id)isEligibleForSearchIndexingPredicateForLibraryIdentifier__predicate_42707;
  }
  return v9;
}

void __91__PLManagedAsset_SearchIndexing__isEligibleForSearchIndexingPredicateForLibraryIdentifier___block_invoke()
{
  v8[4] = *MEMORY[0x1E4F143B8];
  id v0 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v1 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"visibilityState", 0);
  v8[0] = v1;
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForSearchIndexExclusions"), 0);
  v8[1] = v2;
  uint64_t v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == NO", @"hidden");
  v8[2] = v3;
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"trashedState", 0);
  void v8[3] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:4];
  uint64_t v6 = [v0 andPredicateWithSubpredicates:v5];
  char v7 = (void *)isEligibleForSearchIndexingPredicateForLibraryIdentifier__predicate_42707;
  isEligibleForSearchIndexingPredicateForLibraryIdentifier__predicate_42707 = v6;
}

- (BOOL)isValidForPerceptualProcessing
{
  return ![(PLManagedAsset *)self isVideo]
      && [(PLManagedAsset *)self kindSubtype] != 10;
}

- (id)duplicateSortPropertyNamesSkip
{
  v4[1] = *MEMORY[0x1E4F143B8];
  v4[0] = @"duplicateAssetVisibilityState";
  uint64_t v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:1];
  return v2;
}

- (id)duplicateSortPropertyNames
{
  v4[6] = *MEMORY[0x1E4F143B8];
  v4[0] = @"favorite";
  v4[1] = @"latitude";
  void v4[2] = @"longitude";
  v4[3] = @"dateCreated";
  v4[4] = @"playbackStyle";
  v4[5] = @"libraryScopeShareState";
  uint64_t v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:6];
  return v2;
}

+ (int64_t)pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:(int64_t)a3
{
  if (a3 == 1) {
    return 1;
  }
  else {
    return 2 * (a3 == 2);
  }
}

+ (int64_t)adjustmentBaseVersionFromPFAdjustmentsBaseVersion:(int64_t)a3
{
  if (a3 == 1) {
    return 1;
  }
  else {
    return 2 * (a3 == 2);
  }
}

- (BOOL)unQuarantineIfPossible
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [(PLManagedAsset *)self master];
  int v4 = [v3 cloudLocalState];

  if (v4 != 4) {
    return 0;
  }
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v5 = [(PLManagedAsset *)self master];
  uint64_t v6 = [v5 assets];

  uint64_t v7 = [v6 countByEnumeratingWithState:&v33 objects:v39 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v34;
    while (2)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v34 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v33 + 1) + 8 * i);
        if ([v11 cloudLocalState] != 4)
        {
          BOOL v23 = 0;
          goto LABEL_31;
        }
        long long v31 = 0u;
        long long v32 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        char v12 = [v11 modernResources];
        uint64_t v13 = [v12 countByEnumeratingWithState:&v29 objects:v38 count:16];
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = *(void *)v30;
          while (2)
          {
            for (uint64_t j = 0; j != v14; ++j)
            {
              if (*(void *)v30 != v15) {
                objc_enumerationMutation(v12);
              }
              id v17 = *(void **)(*((void *)&v29 + 1) + 8 * j);
              if ([v17 isCPLResource]
                && ([v17 isDerivative] & 1) == 0
                && ![v17 isLocallyAvailable])
              {
                BOOL v23 = 0;
                goto LABEL_30;
              }
            }
            uint64_t v14 = [v12 countByEnumeratingWithState:&v29 objects:v38 count:16];
            if (v14) {
              continue;
            }
            break;
          }
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v33 objects:v39 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }

  [(PLManagedAsset *)self setCloudLocalState:0];
  [(PLManagedAsset *)self setUploadAttempts:0];
  [(PLManagedAsset *)self setLastUploadAttemptDate:0];
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  __int16 v18 = [(PLManagedAsset *)self modernResources];
  uint64_t v19 = [v18 countByEnumeratingWithState:&v25 objects:v37 count:16];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)v26;
    do
    {
      for (uint64_t k = 0; k != v20; ++k)
      {
        if (*(void *)v26 != v21) {
          objc_enumerationMutation(v18);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * k) setCloudLocalState:0];
      }
      uint64_t v20 = [v18 countByEnumeratingWithState:&v25 objects:v37 count:16];
    }
    while (v20);
  }

  [(PLManagedAsset *)self setOriginalHash:0];
  uint64_t v6 = [(PLManagedAsset *)self managedObjectContext];
  char v12 = [(PLManagedAsset *)self master];
  [v6 deleteObject:v12];
  BOOL v23 = 1;
LABEL_30:

LABEL_31:
  return v23;
}

- (id)photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:(id)a3
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (!v5)
  {
    uint64_t v20 = [MEMORY[0x1E4F28B00] currentHandler];
    [v20 handleFailureInMethod:a2 object:self file:@"PLManagedAsset+CPL.m" lineNumber:4230 description:@"Identifier must not be nil"];
  }
  uint64_t v6 = [(PLManagedAsset *)self momentShare];
  uint64_t v7 = v6;
  if (v6)
  {
    uint64_t v8 = [v6 uuid];
    uint64_t v9 = [(PLManagedAsset *)self managedObjectContext];
    char v10 = [v9 pathManager];

    if (!v10)
    {
      char v10 = [MEMORY[0x1E4F8B980] systemLibraryPathManager];
    }
    id v11 = [v10 privateDirectoryWithSubType:7];
    char v12 = [v11 stringByAppendingPathComponent:v8];
  }
  else
  {
    unint64_t v13 = [v5 hash];
    uint64_t v8 = objc_msgSend(NSString, "stringWithFormat:", @"group%u", v13 % 0x1F4);
    uint64_t v14 = [(PLManagedAsset *)self managedObjectContext];
    uint64_t v15 = [v14 pathManager];
    char v10 = [v15 photoDirectoryWithType:29];

    char v12 = [v10 stringByAppendingPathComponent:v8];
  }

  id v21 = 0;
  char v16 = [MEMORY[0x1E4F8B908] createDirectoryAtPath:v12 error:&v21];
  id v17 = v21;
  if ((v16 & 1) == 0)
  {
    __int16 v18 = PLBackendGetLog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 136315650;
      BOOL v23 = "-[PLManagedAsset(CPL) photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:]";
      __int16 v24 = 2112;
      long long v25 = v12;
      __int16 v26 = 2112;
      id v27 = v17;
      _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_ERROR, "%s: failed to create directory: %@ with error: %@", buf, 0x20u);
    }
  }
  return v12;
}

- (void)markForNeedingFaceDetection
{
}

- (BOOL)faceDetectionComplete
{
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  int v3 = [v2 faceAnalysisVersion];
  int v4 = +[PLMediaAnalysisServiceRequestAdapter currentFaceVersion];
  LOBYTE(v3) = [v4 intValue] == v3;

  return v3;
}

- (id)syncDescription
{
  void v6[4] = *MEMORY[0x1E4F143B8];
  v6[0] = @"cloudAssetGUID";
  v6[1] = @"uuid";
  v6[2] = @"master";
  v6[3] = @"detectedFaces";
  int v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:4];
  int v4 = [(NSManagedObject *)self truncatedDescriptionWithPropertyKeys:v3];

  return v4;
}

- (NSString)syncedAdjustmentFingerprint
{
  if ([(PLManagedAsset *)self hasAdjustments])
  {
    int v3 = [(PLManagedAsset *)self additionalAttributes];
    int v4 = [v3 unmanagedAdjustment];
    id v5 = [v4 otherAdjustmentsFingerprint];

    if (!v5)
    {
      id v5 = [(PLManagedAsset *)self _calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources];
    }
  }
  else
  {
    id v5 = 0;
  }
  return (NSString *)v5;
}

- (id)masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:(id *)a3 fullsizeRenderImageIfNecessary:(BOOL)a4 error:(id *)a5
{
  BOOL v37 = a4;
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v8 = [v7 originalStableHash];
  if (v8)
  {
    uint64_t v9 = [(PLManagedAsset *)self fingerprintContext];
    CFURLRef v39 = [v9 fingerprintSchemeForFingerprint:v8];

    BOOL v10 = 0;
    id v38 = (id)v8;
    goto LABEL_7;
  }
  id v11 = [(PLManagedAsset *)self master];
  char v12 = v11;
  BOOL v10 = v11 != 0;
  if (!v11)
  {
    __int16 v24 = [(PLManagedAsset *)self fingerprintContext];
    CFURLRef v39 = [v24 fingerprintSchemeForNewMasterAsset];

    goto LABEL_25;
  }
  unint64_t v13 = [v11 scopedIdentifier];
  uint64_t v14 = [v13 identifier];

  CFURLRef v39 = [v12 fingerprintScheme];
  if (!v14)
  {
LABEL_25:
    if ([(PLManagedAsset *)self isTimelapsePlaceholder]
      || ![(PLManagedAsset *)self complete]
      || [(PLManagedAsset *)self isPhotoIrisPlaceholder]
      || ([(PLManagedAsset *)self mainFileURL], (long long v25 = objc_claimAutoreleasedReturnValue()) == 0))
    {
      id v15 = 0;
      id v38 = 0;
    }
    else
    {
      id v56 = 0;
      uint64_t v14 = [v39 fingerPrintForFileAtURL:v25 error:&v56];
      id v15 = v56;

      if (v14) {
        goto LABEL_6;
      }
      if (a5 && v15)
      {
        id v15 = v15;
        id v38 = 0;
        *a5 = v15;
      }
      else
      {
        id v38 = 0;
      }
    }
LABEL_56:

    goto LABEL_57;
  }
  id v15 = 0;
LABEL_6:
  id v38 = (id)v14;
  [v7 setOriginalStableHash:v14];

LABEL_7:
  int v16 = ![(PLManagedAsset *)self hasAdjustments];
  if (!a3) {
    LOBYTE(v16) = 1;
  }
  if ((v16 & 1) == 0)
  {
    id v17 = [v7 adjustedStableHash];
    *a3 = v17;
    if (!v17)
    {
      if (v10)
      {
        long long v35 = [(PLManagedAsset *)self allAssetCPLResources];
        unint64_t v18 = [(PLManagedAsset *)self bestResourceTypeForAdjustedFingerPrint];
        if (v18)
        {
          long long v54 = 0u;
          long long v55 = 0u;
          long long v53 = 0u;
          long long v52 = 0u;
          id v19 = v35;
          id v20 = (id)[v19 countByEnumeratingWithState:&v52 objects:v62 count:16];
          if (v20)
          {
            uint64_t v21 = *(void *)v53;
            while (2)
            {
              for (uint64_t i = 0; i != v20; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v53 != v21) {
                  objc_enumerationMutation(v19);
                }
                BOOL v23 = *(void **)(*((void *)&v52 + 1) + 8 * i);
                if ([v23 cplType] == v18)
                {
                  id v20 = v23;
                  goto LABEL_35;
                }
              }
              id v20 = (id)[v19 countByEnumeratingWithState:&v52 objects:v62 count:16];
              if (v20) {
                continue;
              }
              break;
            }
          }
LABEL_35:

          *a3 = [v20 fingerprint];
        }
        if (*a3) {
          goto LABEL_52;
        }
      }
      if (![(PLManagedAsset *)self isPhoto] || !v37)
      {
        if (![(PLManagedAsset *)self isDefaultAdjustedSlomo])
        {
          uint64_t v28 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
          if (v28)
          {
            long long v29 = (void *)[objc_alloc(MEMORY[0x1E4F1CB10]) initFileURLWithPath:v28 isDirectory:0];
            id v41 = 0;
            long long v30 = [v39 fingerPrintForFileAtURL:v29 error:&v41];
            id v31 = v41;
            *a3 = v30;
          }
          else
          {
            id v31 = 0;
          }
          if (a5 && !*a3) {
            *a5 = v31;
          }
        }
LABEL_51:
        if (!*a3) {
          goto LABEL_11;
        }
LABEL_52:
        objc_msgSend(v7, "setAdjustedStableHash:");
        goto LABEL_53;
      }
      *(void *)&long long buf = 0;
      *((void *)&buf + 1) = &buf;
      uint64_t v58 = 0x3032000000;
      id v59 = __Block_byref_object_copy__51072;
      uint64_t v60 = __Block_byref_object_dispose__51073;
      id v61 = 0;
      uint64_t v46 = 0;
      uint64_t v47 = &v46;
      uint64_t v48 = 0x3032000000;
      BOOL v49 = __Block_byref_object_copy__51072;
      id v50 = __Block_byref_object_dispose__51073;
      id v51 = 0;
      v42[0] = MEMORY[0x1E4F143A8];
      v42[1] = 3221225472;
      v42[2] = __116__PLManagedAsset_CPL__masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint_fullsizeRenderImageIfNecessary_error___block_invoke;
      v42[3] = &unk_1E586AFE8;
      p_long long buf = &buf;
      id v43 = v39;
      unint64_t v45 = &v46;
      [(PLManagedAsset *)self synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:0 withCompletionHandler:v42];
      __int16 v26 = *(void **)(*((void *)&buf + 1) + 40);
      id v27 = a3;
      if (!v26)
      {
        if (!a5)
        {
LABEL_42:

          _Block_object_dispose(&v46, 8);
          _Block_object_dispose(&buf, 8);

          goto LABEL_51;
        }
        __int16 v26 = (void *)v47[5];
        id v27 = a5;
      }
      *id v27 = v26;
      goto LABEL_42;
    }
  }
LABEL_11:
  if (v8) {
    goto LABEL_58;
  }
LABEL_53:
  long long v32 = [(PLManagedAsset *)self managedObjectContext];
  id v40 = 0;
  char v33 = [v32 save:&v40];
  id v15 = v40;

  if ((v33 & 1) == 0)
  {
    char v12 = PLBackendGetLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v15;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "Error trying to save cached fingerprints: %@", (uint8_t *)&buf, 0xCu);
    }
    goto LABEL_56;
  }
LABEL_57:

LABEL_58:
  return v38;
}

void __116__PLManagedAsset_CPL__masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint_fullsizeRenderImageIfNecessary_error___block_invoke(void *a1, void *a2)
{
  if (a2)
  {
    int v3 = (objc_class *)MEMORY[0x1E4F1CB10];
    id v4 = a2;
    id v5 = (void *)[[v3 alloc] initFileURLWithPath:v4 isDirectory:0];

    uint64_t v6 = (void *)a1[4];
    uint64_t v7 = *(void *)(a1[6] + 8);
    id obj = *(id *)(v7 + 40);
    uint64_t v8 = [v6 fingerPrintForFileAtURL:v5 error:&obj];
    objc_storeStrong((id *)(v7 + 40), obj);
    uint64_t v9 = *(void *)(a1[5] + 8);
    BOOL v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;
  }
}

- (id)masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:(id *)a3 error:(id *)a4
{
  return [(PLManagedAsset *)self masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:a3 fullsizeRenderImageIfNecessary:1 error:a4];
}

- (unint64_t)bestResourceTypeForAdjustedFingerPrint
{
  if ([(PLManagedAsset *)self isPhoto]) {
    return 2;
  }
  if ([(PLManagedAsset *)self isDefaultAdjustedSlomo]) {
    return 0;
  }
  return 16;
}

- (id)descriptionForResources
{
  v26[1] = *MEMORY[0x1E4F143B8];
  int v3 = [MEMORY[0x1E4F28E78] string];
  id v4 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"dataStoreSubtype" ascending:1];
  v26[0] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v26 count:1];

  uint64_t v6 = [(PLManagedAsset *)self modernResources];
  uint64_t v7 = [v6 allObjects];
  uint64_t v8 = [v7 sortedArrayUsingDescriptors:v5];

  if ([v8 count])
  {
    id v20 = v5;
    objc_msgSend(v3, "appendFormat:", @"%lu resources\n", objc_msgSend(v8, "count"));
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v19 = v8;
    id v9 = v8;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v22;
      do
      {
        for (uint64_t i = 0; i != v11; ++i)
        {
          if (*(void *)v22 != v12) {
            objc_enumerationMutation(v9);
          }
          uint64_t v14 = *(void **)(*((void *)&v21 + 1) + 8 * i);
          [v3 appendFormat:@"\t%@\n", v14];
          if ([v14 isLocallyAvailable])
          {
            id v15 = [v14 fileURL];
            int v16 = [v15 path];

            id v17 = +[PLCacheDeleteSupport purgeableStateDescriptionForFile:v16];
            [v3 appendFormat:@"Purgeable: %@\n", v17];
          }
        }
        uint64_t v11 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
      }
      while (v11);
    }

    id v5 = v20;
    uint64_t v8 = v19;
  }

  return v3;
}

- (BOOL)supportsCloudUpload
{
  if ([(PLManagedAsset *)self isDeleted]) {
    goto LABEL_15;
  }
  int v3 = [(id)objc_opt_class() _syncablePredicate];
  int v4 = [v3 evaluateWithObject:self];

  if (!v4) {
    goto LABEL_15;
  }
  id v5 = [(id)objc_opt_class() predicateForSupportedAssetTypesForUpload];
  int v6 = [v5 evaluateWithObject:self];

  if (!v6) {
    goto LABEL_15;
  }
  if ([(PLManagedAsset *)self isPartOfBurst])
  {
    if ([(PLManagedAsset *)self avalanchePickType] == 1) {
      goto LABEL_15;
    }
  }
  else if ([(PLManagedAsset *)self isTimelapsePlaceholder] {
         || [(PLManagedAsset *)self isPhotoIrisPlaceholder])
  }
  {
    goto LABEL_15;
  }
  if (![(PLManagedAsset *)self isPlaceholderAsset]) {
    goto LABEL_21;
  }
  uint64_t v7 = [(PLManagedObject *)self photoLibrary];
  BOOL v8 = +[PLManagedAsset shouldPerformServerCopyOnPlaceholderAsset:self photoLibrary:v7];

  if (!v8)
  {
LABEL_15:
    LOBYTE(v9) = 0;
    return v9;
  }
  BOOL v9 = +[PLManagedAsset validMomentShareForPlaceholderAsset:self];
  if (v9)
  {
LABEL_21:
    if ([(PLManagedAsset *)self isMomentSharedAsset]
      && ([(PLManagedAsset *)self momentShare],
          uint64_t v10 = objc_claimAutoreleasedReturnValue(),
          v10,
          v10))
    {
      uint64_t v11 = [(PLManagedAsset *)self momentShare];
      int v12 = [v11 status];

      LOBYTE(v9) = v12 != 3;
    }
    else
    {
      LOBYTE(v9) = 1;
    }
  }
  return v9;
}

- (id)adjustedPathForCPLResourceType:(unint64_t)a3
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  switch(a3)
  {
    case 2uLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedFullsizeImageFile];
      break;
    case 3uLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedLargeSizeImageFile];
      break;
    case 4uLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedLargeThumbnailFile];
      break;
    case 5uLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedMediumThumbnailFile];
      break;
    case 6uLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedMediumVideoFile];
      break;
    case 7uLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedSmallVideoFile];
      break;
    case 0xDuLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustmentDataFile];
      break;
    case 0x13uLL:
      id v5 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
      break;
    case 0x15uLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedLargeVideoFile];
      break;
    case 0x1BuLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedMediaMetadataFile];
      break;
    case 0x1CuLL:
      id v5 = [(PLManagedAsset *)self pathForAdjustedMediumHDRVideoFile];
      break;
    default:
      if (!*MEMORY[0x1E4F59AC0])
      {
        int v6 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v7 = [MEMORY[0x1E4F59940] descriptionForResourceType:a3];
          int v9 = 138412546;
          uint64_t v10 = v7;
          __int16 v11 = 2112;
          int v12 = self;
          _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_DEBUG, "Unsupported resource type %@ for asset %@", (uint8_t *)&v9, 0x16u);
        }
      }
      id v5 = 0;
      break;
  }
  return v5;
}

- (id)nonAdjustedPathForCPLResourceType:(unint64_t)a3
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  switch(a3)
  {
    case 2uLL:
      id v5 = [(PLManagedAsset *)self pathForNonAdjustedFullsizeImageFile];
      break;
    case 3uLL:
      id v5 = [(PLManagedAsset *)self pathForNonAdjustedLargeSizeImageFile];
      break;
    case 4uLL:
      id v5 = [(PLManagedAsset *)self pathForNonAdjustedLargeThumbnailFile];
      break;
    case 5uLL:
      id v5 = [(PLManagedAsset *)self pathForNonAdjustedMediumThumbnailFile];
      break;
    case 6uLL:
      id v5 = [(PLManagedAsset *)self pathForNonAdjustedMediumVideoFile];
      break;
    case 7uLL:
      id v5 = [(PLManagedAsset *)self pathForNonAdjustedSmallVideoFile];
      break;
    case 0xAuLL:
      id v5 = [(PLManagedAsset *)self pathForMediaMetadataFile];
      break;
    case 0x12uLL:
      id v5 = [(PLManagedAsset *)self pathForVideoComplementFile];
      break;
    case 0x15uLL:
      id v5 = [(PLManagedAsset *)self pathForNonAdjustedLargeVideoFile];
      break;
    case 0x1AuLL:
      id v5 = [(PLManagedAsset *)self pathForVideoMetadataFile];
      break;
    case 0x1CuLL:
      id v5 = [(PLManagedAsset *)self pathForNonAdjustedMediumHDRVideoFile];
      break;
    default:
      if (!*MEMORY[0x1E4F59AC0])
      {
        int v6 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v7 = [MEMORY[0x1E4F59940] descriptionForResourceType:a3];
          int v9 = 138412546;
          uint64_t v10 = v7;
          __int16 v11 = 2112;
          int v12 = self;
          _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_DEBUG, "Unsupported resource type %@ for asset %@", (uint8_t *)&v9, 0x16u);
        }
      }
      id v5 = 0;
      break;
  }
  return v5;
}

- (id)pathForCPLResourceType:(unint64_t)a3 adjusted:(BOOL)a4
{
  BOOL v4 = a4;
  switch(a3)
  {
    case 1uLL:
      uint64_t v7 = [(PLManagedAsset *)self pathForOriginalFile];
      goto LABEL_15;
    case 8uLL:
      BOOL v8 = &__block_literal_global_582;
      goto LABEL_11;
    case 9uLL:
      uint64_t v7 = [(PLManagedAsset *)self pathForXMPFile];
      goto LABEL_15;
    case 0xEuLL:
      uint64_t v7 = [(PLManagedAsset *)self pathForAdjustmentSecondaryDataFile];
      goto LABEL_15;
    case 0xFuLL:
      uint64_t v7 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
      goto LABEL_15;
    case 0x10uLL:
      uint64_t v7 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
      goto LABEL_15;
    case 0x11uLL:
      BOOL v8 = &__block_literal_global_580;
      goto LABEL_11;
    case 0x14uLL:
    case 0x19uLL:
      uint64_t v7 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
      goto LABEL_15;
    case 0x16uLL:
      BOOL v8 = &__block_literal_global_584;
LABEL_11:
      int v9 = [(PLManagedAsset *)self firstPersistedResourceMatching:v8];
      uint64_t v10 = [(PLManagedAsset *)self _pathForSidecarResource:v9];

      if (!v10) {
        goto LABEL_16;
      }
      goto LABEL_20;
    case 0x17uLL:
      uint64_t v7 = [(PLManagedAsset *)self pathForSpatialOverCaptureContentFile];
      goto LABEL_15;
    case 0x18uLL:
      uint64_t v7 = [(PLManagedAsset *)self pathForVideoComplementSpatialOverCaptureContentFile];
LABEL_15:
      uint64_t v10 = (void *)v7;
      if (!v7) {
        goto LABEL_16;
      }
      goto LABEL_20;
    default:
LABEL_16:
      if (v4) {
        [(PLManagedAsset *)self adjustedPathForCPLResourceType:a3];
      }
      else {
      uint64_t v10 = [(PLManagedAsset *)self nonAdjustedPathForCPLResourceType:a3];
      }
LABEL_20:
      return v10;
  }
}

BOOL __55__PLManagedAsset_CPL__pathForCPLResourceType_adjusted___block_invoke_3(uint64_t a1, void *a2)
{
  return [a2 resourceType] == 5;
}

BOOL __55__PLManagedAsset_CPL__pathForCPLResourceType_adjusted___block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 resourceType] == 2;
}

BOOL __55__PLManagedAsset_CPL__pathForCPLResourceType_adjusted___block_invoke(uint64_t a1, void *a2)
{
  return [a2 resourceType] == 4;
}

- (id)_pathForSidecarResource:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedObject *)self pathManager];
  if (![v5 isUBF])
  {
    __int16 v11 = [v4 sidecarRepresentation];
    int v12 = [v11 fileURL];
    goto LABEL_5;
  }
  if (v4)
  {
    id v6 = objc_alloc(MEMORY[0x1E4F8B978]);
    uint64_t v7 = [(PLManagedAsset *)self uuid];
    uint64_t v8 = [(PLManagedAsset *)self bundleScope];
    int v9 = [v4 uniformTypeIdentifier];
    uint64_t v10 = [v9 identifier];
    __int16 v11 = objc_msgSend(v6, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v7, v8, v10, 0, objc_msgSend(v4, "resourceType"));

    int v12 = [v5 readOnlyUrlWithIdentifier:v11];
LABEL_5:
    uint64_t v13 = v12;
    uint64_t v14 = [v12 path];

    goto LABEL_7;
  }
  uint64_t v14 = 0;
LABEL_7:

  return v14;
}

- (BOOL)savedAssetTypeIsSupportedForUpload
{
  [MEMORY[0x1E4F8BA10] maskForAssetsEligibleForCloudKitTransport];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (void)postProcessResourceDependentPropertyChangesFromAssetChange:(id)a3 inLibrary:(id)a4
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if ([v5 hasChangeType:2])
  {
    __int16 v6 = [v5 videoComplementVisibilityState];
    if ((v6 & 8) != 0)
    {
      uint64_t v7 = [(PLManagedAsset *)self assetResourceForCPLType:19];
      if (v7)
      {
      }
      else if ([(PLManagedAsset *)self hasAdjustments] {
             || ([(PLManagedAsset *)self masterResourceForCPLType:18],
      }
                 uint64_t v10 = objc_claimAutoreleasedReturnValue(),
                 v10,
                 !v10))
      {
        [(PLManagedAsset *)self setVideoCpVisibilityState:v6 & 0xFFF7];
LABEL_16:
        if (!*MEMORY[0x1E4F59AC0])
        {
          __int16 v11 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
          {
            int v12 = [(PLManagedAsset *)self uuid];
            int v13 = 138412290;
            uint64_t v14 = v12;
            _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEBUG, "Updated full editing support for asset %@", (uint8_t *)&v13, 0xCu);
          }
        }
        goto LABEL_20;
      }
    }
  }
  if ([v5 hasChangeType:8])
  {
    int v8 = [(PLManagedAsset *)self videoCpVisibilityState];
    if ([(PLManagedAsset *)self isPhotoIris])
    {
      if ([(PLManagedAsset *)self hasAdjustments] && (v8 & 8) == 0)
      {
        int v9 = [(PLManagedAsset *)self assetResourceForCPLType:19];
        if (v9) {
          [(PLManagedAsset *)self setVideoCpVisibilityState:v8 | 8u];
        }

        if (v9) {
          goto LABEL_16;
        }
      }
    }
  }
LABEL_20:
  if ([(PLManagedAsset *)self isPhotoIris]) {
    [(PLManagedAsset *)self updatePlaybackStyleWithLivePhotoPlayability:[(PLManagedAsset *)self canPlayPhotoIris]];
  }
}

- (void)removeLocalFileForResource:(id)a3 allowDCIMPath:(BOOL)a4
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  uint64_t v7 = [MEMORY[0x1E4F28CB8] defaultManager];
  int v8 = [(PLManagedAsset *)self managedObjectContext];
  int v9 = [v8 pathManager];
  uint64_t v10 = [v9 photoDirectoryWithType:4];

  __int16 v11 = (unsigned char *)MEMORY[0x1E4F59AC0];
  if (!*MEMORY[0x1E4F59AC0])
  {
    int v12 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_DEBUG, "Removing local resource file for %@", buf, 0xCu);
    }
  }
  int v13 = [v6 cplFileURL];
  uint64_t v14 = [v13 path];

  if (!a4 && ([v14 hasPrefix:v10] & 1) != 0
    || ![v7 fileExistsAtPath:v14])
  {
    if (*v11)
    {
      id v16 = 0;
      goto LABEL_21;
    }
    id v17 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEFAULT, "Skip removing local resource file for %@", buf, 0xCu);
    }
    id v16 = 0;
    goto LABEL_20;
  }
  id v22 = 0;
  char v15 = [v7 removeItemAtPath:v14 error:&v22];
  id v16 = v22;
  if (v15)
  {
    if (!*v11)
    {
      id v17 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 138412290;
        id v24 = v6;
        unint64_t v18 = "Removed local resource file for %@";
        id v19 = v17;
        os_log_type_t v20 = OS_LOG_TYPE_DEBUG;
        uint32_t v21 = 12;
LABEL_19:
        _os_log_impl(&dword_19B3C7000, v19, v20, v18, buf, v21);
        goto LABEL_20;
      }
      goto LABEL_20;
    }
  }
  else if (!*v11)
  {
    id v17 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412546;
      id v24 = v6;
      __int16 v25 = 2112;
      id v26 = v16;
      unint64_t v18 = "Can't remove local resource file for %@. Error: %@";
      id v19 = v17;
      os_log_type_t v20 = OS_LOG_TYPE_ERROR;
      uint32_t v21 = 22;
      goto LABEL_19;
    }
LABEL_20:
  }
LABEL_21:
}

- (void)removeLocalFileForResource:(id)a3
{
}

- (void)_removeAdjustmentDataResources
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  int v3 = [(PLManagedAsset *)self allAssetCPLResources];
  uint64_t v4 = [v3 countByEnumeratingWithState:&v14 objects:v20 count:16];
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = *(void *)v15;
    int v8 = (unsigned char *)MEMORY[0x1E4F59AC0];
    *(void *)&long long v5 = 138412290;
    long long v13 = v5;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v15 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v10 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        if (objc_msgSend(v10, "cplType", v13) == 13)
        {
          if (!*v8)
          {
            __int16 v11 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)long long buf = v13;
              id v19 = v10;
              _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEFAULT, "Deleting the CPLResourceTypeAdjustmentData: %@", buf, 0xCu);
            }
          }
          [(PLManagedAsset *)self removeLocalFileForResource:v10];
          int v12 = [(PLManagedAsset *)self managedObjectContext];
          [v12 deleteObject:v10];
        }
      }
      uint64_t v6 = [v3 countByEnumeratingWithState:&v14 objects:v20 count:16];
    }
    while (v6);
  }
}

- (BOOL)_isResourceType:(unint64_t)a3 inResources:(id)a4
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v5 = a4;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        if (objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * i), "resourceType", (void)v12) == a3)
        {
          BOOL v10 = 1;
          goto LABEL_11;
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }
  BOOL v10 = 0;
LABEL_11:

  return v10;
}

- (void)markAsUnavailableCloudResourceOfType:(unint64_t)a3
{
  id v3 = [(PLManagedAsset *)self assetResourceForCPLType:a3];
  [v3 markAsNotLocallyAvailable];
}

- (int64_t)_plAdjustmentBaseVersionFromCPLAdjustmentSourceType:(unint64_t)a3
{
  return a3 == 1;
}

- (void)applyFacesFromAssetChange:(id)a3 inSyncContext:(id)a4
{
  id v6 = a4;
  id v9 = a3;
  uint64_t v7 = [v6 photoLibrary];
  uint64_t v8 = [v7 managedObjectContext];
  +[PLCPLFaceRebuildSupport rebuildDeferredFacesForAsset:self inManagedObjectContext:v8];

  +[PLCPLFacePullSupport applyFacesChangesFromAssetChange:v9 toAsset:self inSyncContext:v6];
}

- (void)applySharingPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [v6 sharingScopeIdentifier];
  if (!v8)
  {
    if ([(PLManagedAsset *)self hasLibraryScope])
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v16 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v17 = [(PLManagedAsset *)self libraryScope];
          int v32 = 138412546;
          char v33 = v17;
          __int16 v34 = 2112;
          long long v35 = v6;
          _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_DEFAULT, "Clearing library scope %@ for asset change %@", (uint8_t *)&v32, 0x16u);
        }
      }
      [(PLManagedAsset *)self removeLibraryScopeAndContributors];
LABEL_41:
      unint64_t v18 = [v6 updateSharingContributorUserIdentifiers];
      uint64_t v23 = [v18 count];
      id v24 = [(PLManagedAsset *)self additionalAttributes];
      __int16 v25 = [v24 libraryScopeAssetContributorsToUpdate];
      id v26 = v25;
      if (v23)
      {
        uint64_t v27 = [MEMORY[0x1E4F1CAD0] setWithArray:v18];
        int v28 = [v26 isEqualToSet:v27];

        if (v28)
        {
          long long v29 = [MEMORY[0x1E4F1CAD0] setWithArray:v18];
          long long v30 = [(PLManagedAsset *)self additionalAttributes];
          [v30 setLibraryScopeAssetContributorsToUpdate:v29];

LABEL_46:
        }
      }
      else
      {
        uint64_t v31 = [v25 count];

        if (v31)
        {
          long long v29 = [(PLManagedAsset *)self additionalAttributes];
          [v29 setLibraryScopeAssetContributorsToUpdate:0];
          goto LABEL_46;
        }
      }
LABEL_47:

      goto LABEL_48;
    }
    if (*MEMORY[0x1E4F59AC0]) {
      goto LABEL_41;
    }
    BOOL v10 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      int v32 = 138412290;
      char v33 = v6;
      _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_DEBUG, "Does not need to clear library scope for asset change %@", (uint8_t *)&v32, 0xCu);
    }
LABEL_40:

    goto LABEL_41;
  }
  id v9 = [v7 managedObjectContext];
  BOOL v10 = +[PLShare shareWithScopeIdentifier:v8 includeTrashed:1 inManagedObjectContext:v9];

  if (v10)
  {
    __int16 v11 = [v6 sharingContributorUserIdentifiers];
    uint64_t v12 = [v11 count];
    long long v13 = (unsigned char *)MEMORY[0x1E4F59AC0];
    if (v12)
    {
      long long v14 = +[PLShareParticipant participantsWithUserIdentifiers:v11 inScope:v10 inPhotoLibrary:v7];
      if (![v14 count] && !*v13)
      {
        long long v15 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          int v32 = 138412546;
          char v33 = v11;
          __int16 v34 = 2112;
          long long v35 = v6;
          _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Failed to fetch a local library scope contributors for sharing contributor user identifier %@ of asset change %@", (uint8_t *)&v32, 0x16u);
        }
      }
    }
    else
    {
      long long v14 = 0;
    }
    if ([v14 count])
    {
      if (!*v13)
      {
        id v19 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          int v32 = 138412802;
          char v33 = v10;
          __int16 v34 = 2112;
          long long v35 = v14;
          __int16 v36 = 2112;
          BOOL v37 = v6;
          _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_DEFAULT, "Setting library scope %@ and originator %@ for asset change %@", (uint8_t *)&v32, 0x20u);
        }
      }
      os_log_type_t v20 = [MEMORY[0x1E4F1CAD0] setWithArray:v14];
      [(PLManagedAsset *)self setLibraryScope:v10 withContributors:v20];
    }
    else if ([v11 count])
    {
      if (!*v13)
      {
        uint64_t v21 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          int v32 = 138412546;
          char v33 = v10;
          __int16 v34 = 2112;
          long long v35 = v6;
          _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_DEFAULT, "Setting library scope %@ with no originators for asset change %@", (uint8_t *)&v32, 0x16u);
        }
      }
      [(PLManagedAsset *)self setLibraryScope:v10 withContributors:0];
    }
    else
    {
      if (!*v13)
      {
        id v22 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          int v32 = 138412546;
          char v33 = v8;
          __int16 v34 = 2112;
          long long v35 = v6;
          _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_DEFAULT, "Setting library scope %@ and originator as current user for asset change %@", (uint8_t *)&v32, 0x16u);
        }
      }
      [(PLManagedAsset *)self setLibraryScopeWithCurrentUserAsContributor:v10];
    }
    PLLibraryScopeAssetSetAddToSharedZoneState(1, self);

    goto LABEL_40;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    unint64_t v18 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      int v32 = 138412546;
      char v33 = v8;
      __int16 v34 = 2112;
      long long v35 = v6;
      _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_ERROR, "Failed to fetch a local library scope for sharing scope identifier %@ of asset change %@", (uint8_t *)&v32, 0x16u);
    }
    goto LABEL_47;
  }
LABEL_48:
}

- (void)applyPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4
{
  uint64_t v150 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v139 = a4;
  int v7 = [(PLManagedAsset *)self isFavorite];
  if (v7 != [v6 isFavorite]) {
    -[PLManagedAsset setFavorite:](self, "setFavorite:", [v6 isFavorite]);
  }
  uint64_t v8 = [(PLManagedAsset *)self additionalAttributes];
  id v9 = [v6 scopedIdentifier];
  uint64_t v10 = [v9 identifier];

  if (!v10 && !*MEMORY[0x1E4F59AC0])
  {
    __int16 v11 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf.value) = 138412290;
      *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v6;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_ERROR, "No identifier for assetChange %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v12 = [v6 timeZoneName];
  long long v13 = [v8 timeZoneName];
  char v14 = [v13 isEqualToString:v12];

  if ((v14 & 1) == 0) {
    [v8 setTimeZoneName:v12];
  }
  uint64_t v15 = [v6 timeZoneOffset];
  id v132 = (void *)v12;
  if (v15)
  {
    long long v16 = [v8 timeZoneOffset];

    if (v16 != (void *)v15)
    {
      [v8 setTimeZoneOffset:v15];
LABEL_14:
      [(id)objc_opt_class() fixMissingOriginalTimezoneIfNeededForAsset:self];
      goto LABEL_15;
    }
  }
  if ((v14 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v131 = (void *)v15;
  if (v10)
  {
    uint64_t v17 = [(PLManagedAsset *)self cloudAssetGUID];
    if (!v17
      || (unint64_t v18 = (void *)v17,
          [(PLManagedAsset *)self cloudAssetGUID],
          id v19 = objc_claimAutoreleasedReturnValue(),
          char v20 = [v19 isEqualToString:v10],
          v19,
          v18,
          (v20 & 1) == 0))
    {
      [(PLManagedAsset *)self setCloudAssetGUID:v10];
    }
  }
  id v133 = (void *)v10;
  uint64_t v21 = [v6 recordModificationDate];
  if (v21)
  {
    id v22 = (void *)v21;
    uint64_t v23 = [(PLManagedAsset *)self modificationDate];
    if (v23)
    {
      id v24 = (void *)v23;
      __int16 v25 = [(PLManagedAsset *)self modificationDate];
      id v26 = [v6 recordModificationDate];
      char v27 = [v25 isEqualToDate:v26];

      if (v27) {
        goto LABEL_25;
      }
    }
    else
    {
    }
    int v28 = [v6 recordModificationDate];
    [(PLManagedAsset *)self setModificationDate:v28];
  }
LABEL_25:
  uint64_t v29 = [v6 lastSharedDate];
  if (!v29) {
    goto LABEL_31;
  }
  long long v30 = (void *)v29;
  uint64_t v31 = [(PLManagedAsset *)self lastSharedDate];
  if (!v31)
  {

    goto LABEL_30;
  }
  int v32 = (void *)v31;
  char v33 = [(PLManagedAsset *)self lastSharedDate];
  __int16 v34 = [v6 lastSharedDate];
  uint64_t v35 = [v33 compare:v34];

  if (v35 == 1)
  {
LABEL_30:
    __int16 v36 = [v6 lastSharedDate];
    [(PLManagedAsset *)self setLastSharedDate:v36];
  }
LABEL_31:
  uint64_t v37 = [v6 assetDate];
  uint64_t v38 = [(PLManagedAsset *)self dateCreated];

  if (v37)
  {
    if (!v38)
    {
LABEL_35:
      [(PLManagedAsset *)self setDateCreated:v37];
      goto LABEL_38;
    }
    CFURLRef v39 = [(PLManagedAsset *)self dateCreated];
    char v40 = [v39 isEqualToDate:v37];

    if ((v40 & 1) == 0)
    {
      [(PLManagedAsset *)self didSetCustomDateCreated];
      goto LABEL_35;
    }
  }
  else if (!v38)
  {
    id v41 = [MEMORY[0x1E4F1C9C8] date];
    [(PLManagedAsset *)self setDateCreated:v41];
  }
LABEL_38:
  v130 = (void *)v37;
  uint64_t v42 = [v6 addedDate];
  if (v42)
  {
    id v43 = [(PLManagedAsset *)self addedDate];
    char v44 = [v43 isEqualToDate:v42];

    if ((v44 & 1) == 0) {
      [(PLManagedAsset *)self setAddedDate:v42];
    }
  }
  uint64_t v129 = (void *)v42;
  unint64_t v45 = [(PLManagedAsset *)self location];
  uint64_t v46 = [v6 location];
  BOOL v47 = [(PLManagedAsset *)self _location:v45 isEqualToLocationForUpdating:v46];

  if (!v47)
  {
    uint64_t v48 = [v6 location];
    [(PLManagedAsset *)self setLocation:v48];
  }
  BOOL v49 = objc_opt_class();
  id v50 = [v6 placeAnnotation];
  id v51 = [v49 _dataFromCPLPlaceAnnotation:v50];

  uint64_t v52 = [v8 placeAnnotationData];
  if (v51 != (void *)v52 && ([v51 isEqualToData:v52] & 1) == 0) {
    [v8 setPlaceAnnotationData:v51];
  }
  double v128 = v51;
  long long v53 = [v6 keywords];

  if (v53)
  {
    long long v54 = +[PLKeywordManager keywordsForAsset:self];
    long long v55 = (void *)MEMORY[0x1E4F1CAD0];
    id v56 = [v6 keywords];
    double v57 = [v55 setWithArray:v56];

    if (([v54 isEqualToSet:v57] & 1) == 0)
    {
      uint64_t v58 = [v139 keywordManager];
      [v58 setKeywords:v57 forAsset:self];
    }
  }
  int v59 = [v6 isHidden];
  if (v59 != [(PLManagedAsset *)self hidden]) {
    -[PLManagedAsset setHidden:](self, "setHidden:", [v6 isHidden]);
  }
  if (_os_feature_enabled_impl())
  {
    if ([(PLManagedAsset *)self isInserted])
    {
      if ([(PLManagedAsset *)self expectedBundleScopeBasedOnAssetLockingProperties] == 4&& ![(PLManagedAsset *)self bundleScope]&& ![(PLManagedAsset *)self anyInternalResourceIsLocal])
      {
        [(PLManagedAsset *)self setBundleScope:4];
        uint64_t v60 = [(PLManagedObject *)self pathManager];
        int v61 = [v60 isDCIM];

        if (v61)
        {
          id v62 = [(PLManagedObject *)self pathManager];
          uint64_t v63 = +[PLLockedResourceTransferRecovery assetDirectoryForAsset:self bundleScope:4 pathManager:v62];

          [(PLManagedAsset *)self setDirectory:v63];
        }
      }
    }
  }
  uint64_t v64 = [(PLManagedAsset *)self longDescription];
  if (!v64) {
    goto LABEL_61;
  }
  uint64_t v65 = (void *)v64;
  char v66 = [(PLManagedAsset *)self longDescription];
  uint64_t v67 = [v6 extendedDescription];
  char v68 = [v66 isEqualToString:v67];

  if ((v68 & 1) == 0)
  {
LABEL_61:
    id v69 = [v6 extendedDescription];
    [(PLManagedAsset *)self setLongDescription:v69];
  }
  id v134 = v8;
  uint64_t v70 = [(PLManagedAsset *)self accessibilityDescription];
  if (!v70) {
    goto LABEL_64;
  }
  os_signpost_id_t v71 = (void *)v70;
  id v72 = [(PLManagedAsset *)self accessibilityDescription];
  id v73 = [v6 accessibilityDescription];
  char v74 = [v72 isEqualToString:v73];

  if ((v74 & 1) == 0)
  {
LABEL_64:
    size_t v75 = [v6 accessibilityDescription];
    [(PLManagedAsset *)self setAccessibilityDescription:v75];
  }
  uint64_t v127 = (void *)v52;
  uint64_t v76 = [(PLManagedAsset *)self title];
  if (!v76) {
    goto LABEL_67;
  }
  id v77 = (void *)v76;
  id v78 = [(PLManagedAsset *)self title];
  char v79 = [v6 caption];
  char v80 = [v78 isEqualToString:v79];

  if ((v80 & 1) == 0)
  {
LABEL_67:
    int v81 = [v6 caption];
    [(PLManagedAsset *)self setTitle:v81];
  }
  [(PLManagedAsset *)self _updateAvalanchePropertiesFromAssetChange:v6];
  -[PLManagedAsset _updateAssetSubtypeFromCPLAssetSubtype:](self, "_updateAssetSubtypeFromCPLAssetSubtype:", [v6 assetSubtype]);
  [(PLManagedAsset *)self updateKindSubtypeIfScreenshot];
  id v136 = self;
  [(PLManagedAsset *)self updatePanoramosityWithMetadata:0];
  uint64_t v135 = v6;
  BOOL v82 = [v6 people];
  unint64_t v83 = objc_msgSend(MEMORY[0x1E4F1CA80], "setWithCapacity:", objc_msgSend(v82, "count"));
  long long v143 = 0u;
  long long v144 = 0u;
  long long v145 = 0u;
  long long v146 = 0u;
  id obj = v82;
  uint64_t v84 = [obj countByEnumeratingWithState:&v143 objects:v149 count:16];
  if (v84)
  {
    uint64_t v85 = v84;
    uint64_t v86 = *(void *)v144;
    do
    {
      for (uint64_t i = 0; i != v85; ++i)
      {
        if (*(void *)v144 != v86) {
          objc_enumerationMutation(obj);
        }
        uint64_t v88 = *(void **)(*((void *)&v143 + 1) + 8 * i);
        id v89 = [v88 personIdentifier];
        if (v89)
        {
          id v90 = [v88 extraProperties];
          id v91 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v90 format:200 options:0 error:0];
          id v92 = +[PLPersonReference insertIntoPhotoLibrary:v139 personUUID:v89 personData:v91];
          [v83 addObject:v92];
        }
        else
        {
          if (*MEMORY[0x1E4F59AC0]) {
            goto LABEL_79;
          }
          id v90 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v90, OS_LOG_TYPE_ERROR))
          {
            LODWORD(buf.value) = 138412290;
            *(CMTimeValue *)((char *)&buf.value + 4) = (CMTimeValue)v88;
            _os_log_impl(&dword_19B3C7000, v90, OS_LOG_TYPE_ERROR, "Found a person reference %@ without personUUID, skipping update", (uint8_t *)&buf, 0xCu);
          }
        }

LABEL_79:
      }
      uint64_t v85 = [obj countByEnumeratingWithState:&v143 objects:v149 count:16];
    }
    while (v85);
  }

  [v134 setPersonReferences:v83];
  uint64_t v93 = [v135 playCount];
  if (v93 >= 1) {
    [v134 setPlayCount:v93];
  }
  uint64_t v94 = [v135 shareCount];
  if (v94) {
    [v134 setShareCount:v94];
  }
  uint64_t v95 = [v135 viewCount];
  if (v95 >= 1) {
    [v134 setViewCount:v95];
  }
  if ([MEMORY[0x1E4F59840] serverSupportsLastViewedDate])
  {
    uint64_t v96 = [v135 lastViewedDate];
    if (v96)
    {
      __int16 v97 = (void *)v96;
      uint64_t v98 = [v134 lastViewedDate];
      if (v98)
      {
        double v99 = (void *)v98;
        char v100 = [v134 lastViewedDate];
        BOOL v101 = [v135 lastViewedDate];
        uint64_t v102 = [v100 compare:v101];

        if (v102 != 1) {
          goto LABEL_94;
        }
      }
      else
      {
      }
      uint64_t v103 = [v135 lastViewedDate];
      [v134 setLastViewedDate:v103];
    }
  }
LABEL_94:
  id v104 = [v135 syndicationIdentifier];
  if (v104)
  {
    uint64_t v105 = [v134 syndicationIdentifier];
    char v106 = [v105 isEqualToString:v104];

    if ((v106 & 1) == 0)
    {
      if (([v134 setSyndicationIdentifier:v104],
            ![(PLManagedAsset *)v136 isPlaceholderAsset])
        && ![(PLManagedAsset *)v136 isMomentSharedAsset]
        || [(PLManagedAsset *)v136 isPlaceholderAsset]
        && ([(PLManagedAsset *)v136 momentShare],
            uint64_t v107 = objc_claimAutoreleasedReturnValue(),
            v107,
            !v107))
      {
        int v108 = [(PLManagedAsset *)v136 additionalAttributes];
        uint64_t v109 = [v108 syndicationIdentifier];
        if (v109)
        {
          char v110 = (void *)v109;
          char v111 = [(PLManagedAsset *)v136 syndicationState];

          if ((v111 & 2) == 0) {
            [(PLManagedAsset *)v136 syndicatedAssetDidSaveToUserLibrary];
          }
        }
        else
        {
        }
      }
    }
  }
  if ((_os_feature_enabled_impl() & 1) == 0) {
    PLLibraryScopeAssetSetLocalSharingStateValueFromSyncableShareStateValue([v135 sharedLibrarySharingState], v136);
  }
  objc_msgSend(v134, "setViewPresentation:", objc_msgSend(v135, "viewPresentation"));
  int v112 = [v135 inExpunged];
  if (v112)
  {
    BOOL v137 = 0;
    BOOL v126 = 0;
    uint64_t v113 = 2;
  }
  else
  {
    int v114 = [v135 inTrash];
    BOOL v137 = v114 == 0;
    BOOL v126 = v114 != 0;
    uint64_t v113 = v114 != 0;
  }
  int v115 = [(PLManagedAsset *)v136 trashedState];
  -[PLManagedAsset applyTrashedState:withTrashedReason:expungeReasonFromClient:](v136, "applyTrashedState:withTrashedReason:expungeReasonFromClient:", v113, [v135 trashedReason], 0);
  double v116 = [v135 dateDeleted];
  [(PLManagedAsset *)v136 setTrashedDate:v116];

  if ([MEMORY[0x1E4F59840] serverSupportsDeletedByUserIdentifier])
  {
    uint64_t v117 = [v135 deletedByUserIdentifier];
    if (v117)
    {
      id v118 = (void *)v117;
      char v119 = _os_feature_enabled_impl();

      if ((v119 & 1) == 0)
      {
        uint64_t v125 = [v135 deletedByUserIdentifier];
        os_signpost_id_t v148 = v125;
        __int16 v120 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v148 count:1];
        id v121 = [(PLManagedAsset *)v136 libraryScope];
        __int16 v122 = +[PLShareParticipant participantsWithUserIdentifiers:v120 inScope:v121 inPhotoLibrary:v139];

        if ([v122 count])
        {
          int v123 = [v122 firstObject];
          [(PLManagedAsset *)v136 setTrashedByParticipant:v123];
        }
      }
    }
  }
  if (v104 && v115 != v113)
  {
    if (v137)
    {
      [(PLManagedAsset *)v136 restoreSyndicatedAsset];
    }
    else if ((v112 | v126) == 1)
    {
      [(PLManagedAsset *)v136 rejectSyndicatedAsset];
    }
  }
  memset(&buf, 0, sizeof(buf));
  CMTimeMake(&buf, [v135 videoComplementDurationValue], objc_msgSend(v135, "videoComplementDurationTimescale"));
  memset(&v142, 0, sizeof(v142));
  CMTimeMake(&v142, [v135 videoComplementImageDisplayValue], objc_msgSend(v135, "videoComplementImageDisplayTimescale"));
  uint64_t v124 = [v135 mediaGroupIdentifier];
  CMTime v141 = buf;
  CMTime v140 = v142;
  [(PLManagedAsset *)v136 updatePhotoIrisMetadataWithMediaGroupUUID:v124 videoDuration:&v141 stillDisplayTime:&v140];

  -[PLManagedAsset setVideoCpVisibilityState:](v136, "setVideoCpVisibilityState:", (unsigned __int16)[v135 videoComplementVisibilityState]);
}

- (BOOL)_location:(id)a3 isEqualToLocationForUpdating:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  int v7 = v6;
  if (v5 == v6)
  {
    char v28 = 1;
  }
  else if ((v5 == 0) == (v6 != 0))
  {
    char v28 = 0;
  }
  else
  {
    uint64_t v8 = [v5 timestamp];
    uint64_t v9 = [v7 timestamp];
    [v5 coordinate];
    double v11 = v10;
    [v7 coordinate];
    if (v11 != v12) {
      goto LABEL_15;
    }
    [v5 coordinate];
    double v14 = v13;
    [v7 coordinate];
    if (v14 != v15) {
      goto LABEL_15;
    }
    [v5 altitude];
    double v17 = v16;
    [v7 altitude];
    if (v17 != v18) {
      goto LABEL_15;
    }
    [v5 horizontalAccuracy];
    double v20 = v19;
    [v7 horizontalAccuracy];
    if (v20 != v21) {
      goto LABEL_15;
    }
    [v5 verticalAccuracy];
    double v23 = v22;
    [v7 verticalAccuracy];
    if (v23 == v24 && ([v5 course], double v26 = v25, objc_msgSend(v7, "course"), v26 == v27))
    {
      if (v8 | v9)
      {
        char v28 = 0;
        if (v8 && v9) {
          char v28 = [(id)v8 isEqual:v9];
        }
      }
      else
      {
        char v28 = 1;
      }
    }
    else
    {
LABEL_15:
      char v28 = 0;
    }
  }
  return v28;
}

- (void)setVideoInfoOnMasterFromAVAsset:(id)a3
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self master];

  if (v5)
  {
    id v6 = [v4 plVideoCodecName];
    int v7 = [(PLManagedAsset *)self master];
    [v7 setCodecName:v6];

    uint64_t v8 = [MEMORY[0x1E4F8CC38] tracksWithMediaType:*MEMORY[0x1E4F15C18] forAsset:v4];
    if ([v8 count])
    {
      uint64_t v9 = [v8 objectAtIndex:0];
      double v10 = [(PLManagedAsset *)self master];
      [v9 nominalFrameRate];
      LODWORD(v12) = llroundf(v11);
      [v10 setVideoFrameRate:v12];
    }
    else
    {
      if (*MEMORY[0x1E4F59AC0])
      {
LABEL_8:

        goto LABEL_9;
      }
      uint64_t v9 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        double v13 = [(PLManagedAsset *)self master];
        double v14 = [v13 scopedIdentifier];
        int v15 = 138543362;
        double v16 = v14;
        _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_ERROR, "setVideoInfoFromAVAsset: videoTrack doesn't have a track of type AVMediaTypeVideo for %{public}@", (uint8_t *)&v15, 0xCu);
      }
    }

    goto LABEL_8;
  }
LABEL_9:
}

- (void)_applyPropertiesFromCloudMaster:(id)a3
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  [(PLManagedAsset *)self setMaster:v4];
  id v5 = [v4 creationDate];
  id v6 = [(PLManagedAsset *)self dateCreated];

  if (v5)
  {
    if (!v6) {
      [(PLManagedAsset *)self setDateCreated:v5];
    }
  }
  else if (!v6)
  {
    int v7 = [MEMORY[0x1E4F1C9C8] date];
    [(PLManagedAsset *)self setDateCreated:v7];
  }
  uint64_t v8 = [v4 uniformTypeIdentifier];
  if ([v8 length])
  {
    if (!v8) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v9 = (unsigned char *)MEMORY[0x1E4F59AC0];
    if (!*MEMORY[0x1E4F59AC0])
    {
      double v10 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v59 = v4;
        _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_ERROR, "Missing UTI from cloudMaster %@, attempting to get it from resources", buf, 0xCu);
      }
    }
    float v11 = objc_msgSend(v4, "rm_cloudResourcesForResourceType:", 1);
    uint64_t v12 = [v11 firstObject];

    if (v12)
    {
      double v13 = [v12 uniformTypeIdentifier];
      uint64_t v14 = [v13 identifier];

      if (v14)
      {
        if (!*v9)
        {
          int v15 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)CMTime buf = 138412546;
            id v59 = v4;
            __int16 v60 = 2112;
            uint64_t v61 = v14;
            _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Setting UTI for cloudMaster %@ to %@", buf, 0x16u);
          }
        }
        [v4 setUniformTypeIdentifier:v14];
      }
      else
      {
        if (!*v9)
        {
          uint64_t v17 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)CMTime buf = 138412290;
            id v59 = v12;
            _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "Missing UTI from original resource %@", buf, 0xCu);
          }
        }
        uint64_t v14 = 0;
      }
    }
    else
    {
      if (!*v9)
      {
        double v16 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)CMTime buf = 138412290;
          id v59 = v4;
          _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "Missing original resource from %@", buf, 0xCu);
        }
      }
      uint64_t v14 = (uint64_t)v8;
    }

    uint64_t v8 = (void *)v14;
    if (!v14) {
      goto LABEL_32;
    }
  }
  double v18 = [(PLManagedAsset *)self uniformTypeIdentifier];
  char v19 = [v18 isEqualToString:v8];

  if (v19)
  {
LABEL_32:
    uint64_t v20 = [(PLManagedAsset *)self uniformTypeIdentifier];

    uint64_t v8 = (void *)v20;
    goto LABEL_34;
  }
  [(PLManagedAsset *)self setUniformTypeIdentifier:v8];
  [(PLManagedAsset *)self updateAssetKindFromUniformTypeIdentifier];
LABEL_34:
  if ([(PLManagedAsset *)self kind] == 3)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      double v21 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        double v22 = [(PLManagedAsset *)self cloudAssetGUID];
        *(_DWORD *)CMTime buf = 138412546;
        id v59 = v22;
        __int16 v60 = 2112;
        uint64_t v61 = (uint64_t)v8;
        _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_DEFAULT, "Unknown kind for asset %@ with UTI %@, attempting to promote from cloud master", buf, 0x16u);
      }
    }
    [(PLManagedAsset *)self attemptPromoteFromUnknownKindUsingCloudMaster];
  }
  uint64_t v23 = [v4 originalFilename];
  if (v23)
  {
    double v24 = (void *)v23;
    double v25 = [v4 originalFilename];
    double v26 = [(PLManagedAsset *)self originalFilename];
    char v27 = [v25 isEqualToString:v26];

    if ((v27 & 1) == 0)
    {
      char v28 = [v4 originalFilename];
      [(PLManagedAsset *)self setOriginalFilename:v28];
    }
  }
  int v29 = [(PLManagedAsset *)self originalOrientation];
  if (v29 != [v4 originalOrientation]) {
    -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", [v4 originalOrientation]);
  }
  long long v30 = [(PLManagedAsset *)self cloudAssetGUID];
  uint64_t v31 = [(PLManagedObject *)self pathManager];
  int v32 = [v31 isUBF];

  if (v32)
  {
    char v33 = [(PLManagedAsset *)self originalFilename];
    [(PLManagedAsset *)self setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:v8 originalFilename:v33];
LABEL_55:

    goto LABEL_56;
  }
  __int16 v34 = [(PLManagedAsset *)self directory];

  if (!v34)
  {
    uint64_t v35 = [(PLManagedAsset *)self photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:v30];
    __int16 v36 = [(PLManagedObject *)self pathManager];
    uint64_t v37 = objc_msgSend(v36, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v35, 31, -[PLManagedAsset bundleScope](self, "bundleScope"));
    [(PLManagedAsset *)self setDirectory:v37];
  }
  uint64_t v38 = [(PLManagedAsset *)self filename];

  if (!v38)
  {
    CFURLRef v39 = [(PLManagedAsset *)self originalFilename];
    char v40 = [v39 pathExtension];
    char v33 = [v40 uppercaseString];

    if (+[PLManagedAsset isKnownFileExtension:v33]
      || ![v33 length])
    {
      id v41 = +[PLManagedAsset preferredFileExtensionForType:v8];
    }
    else
    {
      id v41 = v33;
    }
    uint64_t v42 = v41;
    id v43 = [NSString stringWithFormat:@"%@.%@", v30, v41];
    [(PLManagedAsset *)self setFilename:v43];

    goto LABEL_55;
  }
LABEL_56:
  char v44 = objc_msgSend(v4, "rm_cloudResourcesForResourceType:", 18);
  uint64_t v45 = [v44 count];

  if (v45) {
    [(PLManagedAsset *)self setKindSubtype:2];
  }
  uint64_t v46 = objc_msgSend(v4, "rm_cloudResourcesForResourceType:", 23);
  uint64_t v47 = [v46 count];

  if (v47) {
    [(PLManagedAsset *)self setCameraProcessingAdjustmentState:[(PLManagedAsset *)self cameraProcessingAdjustmentState] | 1];
  }
  uint64_t v48 = [(PLManagedAsset *)self additionalAttributes];
  objc_msgSend(v48, "setImportedBy:", objc_msgSend(v4, "importedBy"));

  BOOL v49 = [(PLManagedAsset *)self additionalAttributes];
  id v50 = [v4 importedByBundleIdentifier];
  [v49 setImportedByBundleIdentifier:v50];

  id v51 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v52 = [v4 importedByDisplayName];
  [v51 setImportedByDisplayName:v52];

  [(id)objc_opt_class() processMediaMetadataForAsset:self withCloudMaster:v4];
  [(id)objc_opt_class() fixMissingOriginalDateCreatedIfNeededForAsset:self withCloudMaster:v4];
  long long v53 = [(PLManagedAsset *)self additionalAttributes];
  long long v54 = [v4 scopedIdentifier];
  long long v55 = [v54 identifier];
  [v53 setOriginalStableHash:v55];

  id v56 = [(PLManagedAsset *)self additionalAttributes];
  double v57 = [v4 originatingAssetIdentifier];
  [v56 setOriginatingAssetIdentifier:v57];
}

- (id)localResourcePathForMasterResourceWithCPLType:(unint64_t)a3 andUTI:(id)a4
{
  id v6 = a4;
  if (a3 <= 0x16 && ((1 << a3) & 0x420100) != 0)
  {
    int v7 = [(PLManagedObject *)self pathManager];
    int v8 = [v7 isUBF];

    if (v8)
    {
      uint64_t v9 = [(PLManagedObject *)self pathManager];
      uint64_t v10 = +[PLResourceInstaller resourceTypeFromCPLType:a3 assetType:[(PLManagedAsset *)self kind]];
      id v11 = objc_alloc(MEMORY[0x1E4F8B978]);
      uint64_t v12 = [(PLManagedAsset *)self uuid];
      double v13 = objc_msgSend(v11, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:", v12, -[PLManagedAsset bundleScope](self, "bundleScope"), v6, 0, v10);

      uint64_t v14 = [v9 readOnlyUrlWithIdentifier:v13];
      [v14 path];
    }
    else
    {
      uint64_t v9 = +[PLManagedAsset preferredFileExtensionForType:v6];
      double v13 = [(PLManagedAsset *)self pathForOriginalFile];
      uint64_t v14 = [v13 stringByDeletingPathExtension];
      [v14 stringByAppendingPathExtension:v9];
    int v15 = };
  }
  else
  {
    int v15 = [(PLManagedAsset *)self pathForCPLResourceType:a3 adjusted:0];
  }

  return v15;
}

- (id)localResourcePathForMasterResource:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 cplType];
  id v6 = [v4 uniformTypeIdentifier];

  int v7 = [v6 identifier];
  int v8 = [(PLManagedAsset *)self localResourcePathForMasterResourceWithCPLType:v5 andUTI:v7];

  return v8;
}

- (CGSize)_targetSizeForInputSize:(CGSize)a3 maxPixelSize:(unint64_t)a4
{
  double v4 = 1.0;
  if (a3.height * a3.width > (double)a4) {
    double v4 = sqrt((double)a4 / (a3.height * a3.width));
  }
  float v5 = a3.width * v4;
  double v6 = roundf(v5);
  float v7 = a3.height * v4;
  double v8 = roundf(v7);
  result.double height = v8;
  result.double width = v6;
  return result;
}

- (id)_cplRelationsForAssetInLibrary:(id)a3 orderKeyManager:(id)a4
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v30 = v6;
  uint64_t v9 = [v6 managedObjectContext];
  int v29 = v7;
  uint64_t v10 = [v7 albumsAndOrderValuesForAsset:self inManagedObjectContext:v9];
  if ((unint64_t)[v10 count] >= 2)
  {
    unint64_t v12 = 1;
    *(void *)&long long v11 = 138412546;
    long long v26 = v11;
    id v28 = v8;
    uint64_t v31 = v9;
    char v27 = self;
    while (1)
    {
      double v13 = objc_msgSend(v10, "objectAtIndex:", v12 - 1, v26);
      uint64_t v14 = [v9 existingObjectWithID:v13 error:0];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        break;
      }
LABEL_21:

      v12 += 2;
      if (v12 >= [v10 count]) {
        goto LABEL_26;
      }
    }
    id v15 = v14;
    if (([v15 isCameraAlbum] & 1) == 0)
    {
      double v16 = [v15 cloudGUID];

      if (v16)
      {
        if ([v15 kindValue] == 2
          || [v15 kindValue] == 4000
          || [v15 isProjectAlbumSupportingCloudUpload])
        {
          uint64_t v17 = objc_alloc_init(MEMORY[0x1E4F59858]);
          double v18 = [v10 objectAtIndex:v12];
          char v19 = [v15 cloudGUID];
          [v17 setContainerIdentifier:v19];

          int v32 = v18;
          [v17 setPosition:[(PLManagedAsset *)v18 integerValue]];
          uint64_t v20 = [v15 customKeyAsset];
          LODWORD(v18) = [v20 isEqual:self];

          if (v18) {
            [v17 setKeyAsset:1];
          }
          if (!*MEMORY[0x1E4F59AC0])
          {
            double v21 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
            {
              double v22 = [(PLManagedAsset *)self cloudAssetGUID];
              if ([v17 isKeyAsset]) {
                uint64_t v23 = @"(keyAsset)";
              }
              else {
                uint64_t v23 = &stru_1EEB2EB80;
              }
              double v24 = [v15 cloudGUID];
              *(_DWORD *)CMTime buf = 138413058;
              id v34 = v22;
              __int16 v35 = 2112;
              __int16 v36 = v32;
              __int16 v37 = 2112;
              uint64_t v38 = v23;
              self = v27;
              __int16 v39 = 2112;
              char v40 = v24;
              _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_DEBUG, "Sending asset %@ with position: %@ %@ album: %@", buf, 0x2Au);

              id v8 = v28;
            }
          }
          [v8 addObject:v17];

          uint64_t v9 = v31;
        }
        else
        {
          if (*MEMORY[0x1E4F59AC0]) {
            goto LABEL_20;
          }
          uint64_t v17 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)CMTime buf = v26;
            id v34 = v15;
            __int16 v35 = 2112;
            __int16 v36 = self;
            _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "Trying to send non-user created album/folder relation, or album type is unsupported for relation change. album: %@, asset: %@", buf, 0x16u);
          }
        }
      }
    }
LABEL_20:

    goto LABEL_21;
  }
LABEL_26:

  return v8;
}

- (void)_updateAssetSubtypeForCPLAssetChange:(id)a3
{
  id v7 = a3;
  double v4 = [(PLManagedAsset *)self additionalAttributes];
  unint64_t v5 = (int)[v4 cloudKindSubtype];

  if (v5 - 100 < 4 || v5 <= 3) {
    unint64_t v5 = [(PLManagedAsset *)self cplAssetSubtypeFromPLAssetSubtype:[(PLManagedAsset *)self kindSubtype]];
  }
  if (!v5)
  {
    if ([(PLManagedAsset *)self spatialType])
    {
      if ([(PLManagedAsset *)self isVideo]) {
        unint64_t v5 = 104;
      }
      else {
        unint64_t v5 = 4;
      }
    }
    else
    {
      unint64_t v5 = 0;
    }
  }
  [v7 setAssetSubtype:v5];
}

- (unint64_t)cplAssetSubtypeFromPLAssetSubtype:(signed __int16)a3
{
  if (a3 <= 100)
  {
    unint64_t v6 = 2;
    uint64_t v7 = 3;
    if (a3 != 10) {
      uint64_t v7 = 0;
    }
    if (a3 != 2) {
      unint64_t v6 = v7;
    }
    if (a3 == 1) {
      return 1;
    }
    else {
      return v6;
    }
  }
  else
  {
    switch(a3)
    {
      case 'e':
        if (([(PLManagedAsset *)self highFrameRateState] & 2) != 0) {
          unint64_t result = 100;
        }
        else {
          unint64_t result = 0;
        }
        break;
      case 'f':
        unint64_t result = 101;
        break;
      case 'g':
        unint64_t result = 102;
        break;
      case 'h':
        unint64_t result = 103;
        break;
      default:
        unint64_t result = 0;
        break;
    }
  }
  return result;
}

- (void)_updateAssetSubtypeFromCPLAssetSubtype:(unint64_t)a3
{
  unint64_t v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setCloudKindSubtype:(__int16)a3];

  int v6 = [(PLManagedAsset *)self highFrameRateState];
  unsigned __int16 v7 = v6;
  if (!v9 & v8)
  {
    switch(a3)
    {
      case 'd':
        unsigned __int16 v7 = (2 * (v6 & 1)) | v6;
        uint64_t v10 = 101;
        break;
      case 'e':
        uint64_t v10 = 102;
        break;
      case 'f':
        uint64_t v10 = 103;
        break;
      case 'g':
        uint64_t v10 = 104;
        break;
      default:
        uint64_t v10 = 0;
        break;
    }
  }
  else
  {
    switch(a3)
    {
      case 0uLL:
        if (v6) {
          unsigned __int16 v7 = v6 & 0xFFFD;
        }
        else {
          unsigned __int16 v7 = v6;
        }
        uint64_t v10 = (v6 << 31 >> 31) & 0x65;
        break;
      case 1uLL:
        uint64_t v10 = 1;
        break;
      case 2uLL:
        uint64_t v10 = 2;
        break;
      case 3uLL:
        uint64_t v10 = 10;
        break;
      default:
        JUMPOUT(0);
    }
  }
  if ([(PLManagedAsset *)self kindSubtype] != v10) {
    [(PLManagedAsset *)self setKindSubtype:v10];
  }
  if ([(PLManagedAsset *)self highFrameRateState] != v7)
  {
    [(PLManagedAsset *)self setHighFrameRateState:v7];
  }
}

- (void)_updateAvalanchePropertiesFromAssetChange:(id)a3
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  int v6 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v7 = [v5 burstFlags];
  [v6 setCloudAvalanchePickType:v7];
  uint64_t v8 = [(PLManagedAsset *)self _avalancheTypeFromCplBurstFlags:v7];
  if ([(PLManagedAsset *)self avalanchePickType] != v8)
  {
    [(PLManagedAsset *)self setAvalanchePickType:v8];
    if (+[PLAvalanche shouldOnlyShowAvalanchePicks]
      && ![(PLManagedAsset *)self avalanchePickTypeIsVisible])
    {
      [(PLManagedAsset *)self setVisibilityState:2];
      [(PLManagedAsset *)self setAlbums:0];
    }
    else if ([(PLManagedAsset *)self avalanchePickTypeIsVisible] {
           && [(PLManagedAsset *)self visibilityState])
    }
    {
      [(PLManagedAsset *)self setVisibilityState:0];
    }
  }
  char v9 = [v5 burstIdentifier];
  uint64_t v10 = [(PLManagedAsset *)self avalancheUUID];
  char v11 = [v10 isEqualToString:v9];

  if ((v11 & 1) == 0)
  {
    [(PLManagedAsset *)self setAvalancheUUID:v9];
    if (v9)
    {
      [(PLManagedAsset *)self setAvalancheKind:1];
    }
    else if ([(PLManagedAsset *)self avalanchePickType])
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        unint64_t v12 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        {
          double v13 = NSStringFromSelector(a2);
          uint64_t v14 = [(PLManagedAsset *)self uuid];
          int v15 = 138413058;
          double v16 = v13;
          __int16 v17 = 2112;
          double v18 = v14;
          __int16 v19 = 2112;
          id v20 = v5;
          __int16 v21 = 1024;
          int v22 = [(PLManagedAsset *)self avalanchePickType];
          _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "%@: No burst identifier for asset %@ from assetChange %@ with pick type %d", (uint8_t *)&v15, 0x26u);
        }
      }
      [(PLManagedAsset *)self setAvalanchePickType:0];
      [(PLManagedAsset *)self setAvalancheKind:0];
      [(PLManagedAsset *)self setVisibilityState:0];
    }
  }
}

- (int)_avalancheTypeFromCplBurstFlags:(unint64_t)a3
{
  return a3 & 0x3F;
}

- (unint64_t)cplBurstFlagsFromPLAvalancheType:(int)a3
{
  return a3 & 0x3F;
}

- (void)_updateBurstFlagsForCPLAssetChange:(id)a3 photoLibrary:(id)a4
{
  id v9 = a3;
  if ([(PLManagedAsset *)self avalancheKind] == 1)
  {
    id v5 = [(PLManagedAsset *)self avalancheUUID];

    if (v5)
    {
      int v6 = [(PLManagedAsset *)self additionalAttributes];
      int v7 = [v6 cloudAvalanchePickType];

      objc_msgSend(v9, "setBurstFlags:", -[PLManagedAsset cplBurstFlagsFromPLAvalancheType:](self, "cplBurstFlagsFromPLAvalancheType:", -[PLManagedAsset avalanchePickType](self, "avalanchePickType")) | (int)(v7 & 0xFFFFFFC0));
      uint64_t v8 = [(PLManagedAsset *)self avalancheUUID];
      [v9 setBurstIdentifier:v8];
    }
  }
}

- (id)cplAssetChangeWithMasterScopedIdentifier:(id)a3 withChangeType:(unint64_t)a4 shouldGenerateDerivatives:(BOOL)a5 orderKeyManager:(id)a6 computeSyncUploadEnabled:(BOOL)a7 inLibrary:(id)a8
{
  BOOL v9 = a7;
  BOOL v11 = a5;
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v14 = a3;
  id v15 = a6;
  id v16 = a8;
  __int16 v17 = [(PLManagedAsset *)self scopedIdentifier];
  double v18 = (void *)[MEMORY[0x1E4F59840] newChangeWithScopedIdentifier:v17 changeType:a4];
  if ([v18 hasChangeType:2]) {
    [(PLManagedAsset *)self _applyPropertiesChangeToCPLAssetChange:v18 withMasterScopedIdentifier:v14 computeSyncUploadEnabled:v9 inLibrary:v16];
  }
  if ((_os_feature_enabled_impl() & 1) == 0 && [v18 hasChangeType:64]) {
    [(PLManagedAsset *)self _applySharingChangeToCPLAssetChange:v18 inLibrary:v16];
  }
  if ([v18 hasChangeType:32]) {
    [(PLManagedAsset *)self _applyFaceChangeToCPLAssetChange:v18 inLibrary:v16];
  }
  if ([v18 hasChangeType:8]) {
    [(PLManagedAsset *)self _applyResourceChangeToCPLAsset:v18 forChangeType:a4 shouldGenerateDerivatives:v11 inLibrary:v16];
  }
  if ([v18 hasChangeType:16])
  {
    __int16 v19 = [(PLManagedAsset *)self _cplRelationsForAssetInLibrary:v16 orderKeyManager:v15];
    [v18 setContainerRelations:v19];
  }
  id v20 = [(PLManagedAsset *)self modificationDate];
  [v18 setRecordModificationDate:v20];

  if (!*MEMORY[0x1E4F59AC0])
  {
    __int16 v21 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
    {
      int v23 = 138412290;
      double v24 = v18;
      _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_DEBUG, "CPLAssetChange %@", (uint8_t *)&v23, 0xCu);
    }
  }
  return v18;
}

- (id)cplFullRecord
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [(PLManagedAsset *)self master];
  uint64_t v4 = v3;
  if (v3)
  {
    id v5 = [(PLManagedAsset *)v3 scopedIdentifier];
    if (v5)
    {
      int v6 = [(PLManagedObject *)self photoLibrary];
      int v7 = [v6 libraryServicesManager];
      uint64_t v8 = [v7 databaseContext];

      BOOL v9 = [PLRelationshipOrderKeyManager alloc];
      v17[0] = MEMORY[0x1E4F143A8];
      v17[1] = 3221225472;
      v17[2] = __36__PLManagedAsset_CPL__cplFullRecord__block_invoke;
      v17[3] = &unk_1E5872390;
      id v18 = v8;
      uint64_t v10 = v8;
      BOOL v11 = [(PLRelationshipOrderKeyManager *)v9 initWithGenerateContextBlock:v17];
      unint64_t v12 = [(PLManagedObject *)self photoLibrary];
      BOOL v13 = +[PLManagedAsset isComputeSyncEnabledForDirection:0 library:v12];

      id v14 = [(PLManagedObject *)self photoLibrary];
      id v15 = [(PLManagedAsset *)self cplAssetChangeWithMasterScopedIdentifier:v5 withChangeType:0 shouldGenerateDerivatives:1 orderKeyManager:v11 computeSyncUploadEnabled:v13 inLibrary:v14];

LABEL_12:
      goto LABEL_13;
    }
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v10 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v20 = v4;
        _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_ERROR, "No masterScopedIdentifier found in master %@.", buf, 0xCu);
      }
      id v15 = 0;
      goto LABEL_12;
    }
    id v5 = 0;
LABEL_7:
    id v15 = 0;
LABEL_13:

    goto LABEL_14;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    id v5 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v20 = self;
      _os_log_impl(&dword_19B3C7000, v5, OS_LOG_TYPE_ERROR, "Can't find master for asset %@.", buf, 0xCu);
    }
    goto LABEL_7;
  }
  id v15 = 0;
LABEL_14:

  return v15;
}

id __36__PLManagedAsset_CPL__cplFullRecord__block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = PLBackendGetLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    int v7 = 136315138;
    uint64_t v8 = "-[PLManagedAsset(CPL) cplFullRecord]_block_invoke";
    _os_log_impl(&dword_19B3C7000, v4, OS_LOG_TYPE_INFO, "Generating PLRelationshipOrderKeyManager context on-demand for: %s...", (uint8_t *)&v7, 0xCu);
  }

  id v5 = objc_msgSend((id)objc_msgSend(*(id *)(a1 + 32), "newShortLivedLibraryForOrderKeyManagerWithName:", a2), "managedObjectContext");
  return v5;
}

- (id)_generateVideoResourcesFromURL:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5
{
  BOOL v57 = a5;
  v76[3] = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v59 = a4;
  uint64_t v8 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:3];
  if ((PLIsEDUMode() & 1) == 0)
  {
    uint64_t v9 = [(PLManagedAsset *)self fingerprintScheme];
    uint64_t v10 = v9;
    if (v9)
    {
      id v11 = v9;
    }
    else
    {
      id v11 = [MEMORY[0x1E4F59898] invalidFingerprintScheme];
    }
    uint64_t v58 = v11;

    BOOL v12 = [(PLManagedAsset *)self isPhotoIris];
    BOOL v13 = (void *)MEMORY[0x1E4F1CA48];
    v76[0] = &unk_1EEBEEA78;
    v76[1] = &unk_1EEBEE9E8;
    void v76[2] = &unk_1EEBEEA00;
    id v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v76 count:3];
    id v15 = [v13 arrayWithArray:v14];

    id v16 = [MEMORY[0x1E4F16330] assetWithURL:v7];
    uint64_t v52 = (void *)[objc_alloc(MEMORY[0x1E4F8CC48]) initWithAVAsset:v16 timeZoneLookup:0];
    BOOL v56 = v12;
    if (!v12 && [v52 isHDR])
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        __int16 v17 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          id v18 = [v7 lastPathComponent];
          *(_DWORD *)CMTime buf = 138412290;
          uint64_t v68 = (uint64_t)v18;
          _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEFAULT, "Video resource %@ is HDR, requesting additional HDR medium derivative", buf, 0xCu);
        }
      }
      [v15 addObject:&unk_1EEBEEAA8];
    }
    long long v65 = 0u;
    long long v66 = 0u;
    long long v63 = 0u;
    long long v64 = 0u;
    id obj = v15;
    uint64_t v19 = [obj countByEnumeratingWithState:&v63 objects:v75 count:16];
    if (v19)
    {
      uint64_t v20 = v19;
      BOOL v21 = !v57;
      uint64_t v22 = *(void *)v64;
      id v50 = v8;
      id v51 = v7;
      long long v54 = self;
      uint64_t v55 = *(void *)v64;
      long long v53 = v16;
      do
      {
        uint64_t v23 = 0;
        do
        {
          if (*(void *)v64 != v22) {
            objc_enumerationMutation(obj);
          }
          uint64_t v24 = [*(id *)(*((void *)&v63 + 1) + 8 * v23) unsignedIntegerValue];
          if ([MEMORY[0x1E4F59AD8] shouldGenerateVideoDerivativeForAVAsset:v16 forResourceType:v24 adjusted:v21])
          {
            uint64_t v25 = [(PLManagedAsset *)self _createVideoResourceFromVideoURL:v7 withResourceType:v24 scopedIdentifier:v59 applyVideoAdjustments:1 forMaster:v57 forPhotoIris:v56 fingerprintScheme:v58];
            if (v25)
            {
              long long v26 = v25;
              char v27 = [MEMORY[0x1E4F28CB8] defaultManager];
              id v28 = [v7 path];
              int v29 = [v27 attributesOfItemAtPath:v28 error:0];
              unint64_t v30 = [v29 fileSize];

              uint64_t v31 = [v26 identity];
              if ([v31 fileSize] < v30
                || [v52 firstVideoTrackCodec] != 1635148593)
              {
                goto LABEL_41;
              }
              if (!*MEMORY[0x1E4F59AC0])
              {
                int v32 = __CPLAssetsdOSLogDomain();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v33 = [v31 fileSize];
                  id v34 = [MEMORY[0x1E4F59940] descriptionForResourceType:v24];
                  *(_DWORD *)CMTime buf = 134218498;
                  uint64_t v68 = v33;
                  uint64_t v8 = v50;
                  __int16 v69 = 2048;
                  unint64_t v70 = v30;
                  __int16 v71 = 2112;
                  id v72 = v34;
                  _os_log_impl(&dword_19B3C7000, v32, OS_LOG_TYPE_DEFAULT, "Generated derivative size %llu is larger than input size %llu for %@, will attempt to use the input resource instead.", buf, 0x20u);
                }
              }
              __int16 v35 = [v31 fileURL];
              id v62 = 0;
              int v36 = [v27 removeItemAtURL:v35 error:&v62];
              id v37 = v62;
              uint64_t v38 = v37;
              if (v36)
              {
                id v61 = v37;
                int v39 = [v27 copyItemAtURL:v51 toURL:v35 error:&v61];
                id v49 = v61;

                if (v39)
                {
                  [v35 removeAllCachedResourceValues];
                  char v40 = [v35 path];
                  uint64_t v41 = [v31 fileUTI];
                  uint64_t v42 = [(PLManagedAsset *)v54 _createCPLResourceFromResourcePath:v40 withResourceType:v24 uniformTypeIdentifier:v41 scopedIdentifier:v59 fingerprintScheme:v58];

                  long long v26 = v42;
                  id v7 = v51;
                  goto LABEL_38;
                }
                if (!*MEMORY[0x1E4F59AC0])
                {
                  char v40 = __CPLAssetsdOSLogDomain();
                  id v7 = v51;
                  if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
                  {
                    uint64_t v46 = [MEMORY[0x1E4F59940] descriptionForResourceType:v24];
                    *(_DWORD *)CMTime buf = 138413058;
                    uint64_t v68 = (uint64_t)v46;
                    __int16 v69 = 2112;
                    unint64_t v70 = (unint64_t)v51;
                    __int16 v71 = 2112;
                    id v72 = v35;
                    __int16 v73 = 2112;
                    id v45 = v49;
                    id v74 = v49;
                    _os_log_impl(&dword_19B3C7000, v40, OS_LOG_TYPE_ERROR, "Failed to copy the input video to be use for %@ from %@ to %@, fallback and use the generated video. Error: %@", buf, 0x2Au);
                  }
                  else
                  {
LABEL_38:
                    id v45 = v49;
                  }
LABEL_39:

                  uint64_t v38 = v45;
                  uint64_t v8 = v50;
LABEL_40:

LABEL_41:
                  self = v54;
                  [v8 addObject:v26];

                  id v16 = v53;
                  BOOL v21 = !v57;
LABEL_42:
                  uint64_t v22 = v55;
                  goto LABEL_43;
                }
                uint64_t v38 = v49;
              }
              else if (!*MEMORY[0x1E4F59AC0])
              {
                char v40 = __CPLAssetsdOSLogDomain();
                if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
                {
                  char v44 = [MEMORY[0x1E4F59940] descriptionForResourceType:v24];
                  *(_DWORD *)CMTime buf = 138412802;
                  uint64_t v68 = (uint64_t)v44;
                  __int16 v69 = 2112;
                  unint64_t v70 = (unint64_t)v35;
                  __int16 v71 = 2112;
                  id v72 = v38;
                  _os_log_impl(&dword_19B3C7000, v40, OS_LOG_TYPE_ERROR, "Failed to delete the oversized generated video derivative for %@ from %@, fallback and use the generated video. Error: %@", buf, 0x20u);
                }
                id v45 = v38;
                id v7 = v51;
                goto LABEL_39;
              }
              id v7 = v51;
              goto LABEL_40;
            }
            if (*MEMORY[0x1E4F59AC0]) {
              goto LABEL_44;
            }
            long long v26 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              id v43 = [MEMORY[0x1E4F59940] descriptionForResourceType:v24];
              *(_DWORD *)CMTime buf = 138412546;
              uint64_t v68 = (uint64_t)v43;
              __int16 v69 = 2112;
              unint64_t v70 = (unint64_t)v7;
              _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_ERROR, "Failed to generate video derivative for %@ from %@.", buf, 0x16u);

              goto LABEL_42;
            }
LABEL_43:
          }
LABEL_44:
          ++v23;
        }
        while (v20 != v23);
        uint64_t v47 = [obj countByEnumeratingWithState:&v63 objects:v75 count:16];
        uint64_t v20 = v47;
      }
      while (v47);
    }
  }
  return v8;
}

- (id)_generatePosterFrameResourcesFromVideoURL:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 fingerprintScheme:(id)a6
{
  BOOL v7 = a5;
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  BOOL v13 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:2];
  id v14 = [(PLManagedAsset *)self _generatePosterFrameForVideoAtURL:v10 withResourceType:4 scopedIdentifier:v11 forMaster:v7 fingerprintScheme:v12];
  if (v14)
  {
    [v13 addObject:v14];
  }
  else if (!*MEMORY[0x1E4F59AC0])
  {
    id v15 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      int v19 = 138412290;
      id v20 = v10;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Failed to generate medium poster image for %@", (uint8_t *)&v19, 0xCu);
    }
  }
  id v16 = [(PLManagedAsset *)self _generatePosterFrameForVideoAtURL:v10 withResourceType:5 scopedIdentifier:v11 forMaster:v7 fingerprintScheme:v12];
  if (v16)
  {
    [v13 addObject:v16];
  }
  else if (!*MEMORY[0x1E4F59AC0])
  {
    __int16 v17 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      int v19 = 138412290;
      id v20 = v10;
      _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "Failed to generate thumbnail poster image for %@", (uint8_t *)&v19, 0xCu);
    }
  }
  return v13;
}

- (id)_createJPEGResourcesFromFullSizePath:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 forResourceTypes:(id)a6 fingerprintScheme:(id)a7
{
  BOOL v36 = a5;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  id v39 = a7;
  id v37 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:3];
  if (v10)
  {
    BOOL v13 = [MEMORY[0x1E4F28CB8] defaultManager];
    int v14 = [v13 fileExistsAtPath:v10];

    if (v14)
    {
      id v15 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v10 isDirectory:0];
      +[PLManagedAsset sizeOfImageAtURL:v15 outOrientation:0];
      double v17 = v16;
      double v19 = v18;

      [MEMORY[0x1E4F59940] derivativeGenerationThreshold];
      float v21 = v20;
      long long v40 = 0u;
      long long v41 = 0u;
      long long v42 = 0u;
      long long v43 = 0u;
      id v35 = v12;
      id v22 = v12;
      uint64_t v23 = [v22 countByEnumeratingWithState:&v40 objects:v50 count:16];
      BOOL v24 = v36;
      if (v23)
      {
        uint64_t v25 = v23;
        uint64_t v26 = *(void *)v41;
        float v27 = (float)(unint64_t)(v17 * v19);
        do
        {
          for (uint64_t i = 0; i != v25; ++i)
          {
            if (*(void *)v41 != v26) {
              objc_enumerationMutation(v22);
            }
            uint64_t v29 = [*(id *)(*((void *)&v40 + 1) + 8 * i) unsignedIntegerValue];
            unint64_t v30 = [MEMORY[0x1E4F59940] maxPixelSizeForResourceType:v29];
            if (v29 == 5 || (float)(v21 * (float)v30) <= v27)
            {
              uint64_t v31 = [(PLManagedAsset *)self _createImageResourceForResourceType:v29 withPreviewImagePath:v10 scopedIdentifier:v11 forMaster:v24 fingerprintScheme:v39];
              if (v31)
              {
                [v37 addObject:v31];
              }
              else if (!*MEMORY[0x1E4F59AC0])
              {
                int v32 = __CPLAssetsdOSLogDomain();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v33 = [MEMORY[0x1E4F59940] descriptionForResourceType:v29];
                  *(_DWORD *)CMTime buf = 138412802;
                  id v45 = v33;
                  __int16 v46 = 2112;
                  id v47 = v10;
                  __int16 v48 = 2112;
                  id v49 = v11;
                  _os_log_impl(&dword_19B3C7000, v32, OS_LOG_TYPE_ERROR, "Failed to generate image resource type %@ from fullsize image %@ for asset %@.", buf, 0x20u);
                }
                BOOL v24 = v36;
              }
            }
          }
          uint64_t v25 = [v22 countByEnumeratingWithState:&v40 objects:v50 count:16];
        }
        while (v25);
      }

      id v12 = v35;
    }
  }

  return v37;
}

- (id)_createJPEGResourcesFromFullSizePath:(id)a3 withScopedIdentifier:(id)a4 forMaster:(BOOL)a5 fingerprintScheme:(id)a6
{
  return [(PLManagedAsset *)self _createJPEGResourcesFromFullSizePath:a3 withScopedIdentifier:a4 forMaster:a5 forResourceTypes:&unk_1EEBF1E98 fingerprintScheme:a6];
}

- (void)_debugPrintAdjustmentState
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v4 = (unsigned char *)MEMORY[0x1E4F59AC0];
  if (!*MEMORY[0x1E4F59AC0])
  {
    id v5 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = [(PLManagedAsset *)self additionalAttributes];
      BOOL v7 = [v6 unmanagedAdjustment];
      uint64_t v8 = [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
      int v9 = [v3 fileExistsAtPath:v8];
      id v10 = @"missing";
      if (v9) {
        id v10 = @"exists";
      }
      int v15 = 138412546;
      double v16 = v7;
      __int16 v17 = 2112;
      double v18 = v10;
      _os_log_impl(&dword_19B3C7000, v5, OS_LOG_TYPE_DEFAULT, "UnmanagedAdjustment: %@ \nFull size render %@", (uint8_t *)&v15, 0x16u);
    }
  }
  id v11 = [(PLManagedAsset *)self pathForAdjustmentFile];
  if ([v3 fileExistsAtPath:v11])
  {
    id v12 = [MEMORY[0x1E4F1C9B8] dataWithContentsOfFile:v11];
    if (v12)
    {
      BOOL v13 = [MEMORY[0x1E4F28F98] propertyListWithData:v12 options:0 format:0 error:0];
      if (!*v4)
      {
        int v14 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          int v15 = 138412290;
          double v16 = v13;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_DEFAULT, "Adjustment dictionary: %@", (uint8_t *)&v15, 0xCu);
        }
      }
    }
    else
    {
      if (*v4)
      {
LABEL_17:

        goto LABEL_18;
      }
      BOOL v13 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        int v15 = 138412290;
        double v16 = v11;
        _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Failed to load adjustment data from %@", (uint8_t *)&v15, 0xCu);
      }
    }

    goto LABEL_17;
  }
LABEL_18:
}

- (void)_applyResourceChangeToCPLAsset:(id)a3 forChangeType:(unint64_t)a4 shouldGenerateDerivatives:(BOOL)a5 inLibrary:(id)a6
{
  BOOL v7 = a5;
  char v8 = a4;
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a6;
  id v12 = (void *)MEMORY[0x1E4F1CA48];
  BOOL v13 = [(PLManagedAsset *)self allAssetCPLResources];
  int v14 = objc_msgSend(v12, "arrayWithCapacity:", objc_msgSend(v13, "count"));

  if (![(PLManagedAsset *)self isPlaceholderAsset])
  {
    float v27 = [(PLManagedAsset *)self fingerprintScheme];
    id v28 = v27;
    if (v27)
    {
      id v29 = v27;
    }
    else
    {
      id v29 = [MEMORY[0x1E4F59898] invalidFingerprintScheme];
    }
    BOOL v82 = v29;

    BOOL v30 = [(PLManagedAsset *)self hasAdjustedCPLThumbResource];
    uint64_t v31 = [(PLManagedAsset *)self additionalAttributes];
    int v32 = [v31 sourceAssetForDuplicationCPLScopedIdentifier];

    if (v32)
    {
      char v80 = v10;
      uint64_t v33 = self;
      [(PLManagedAsset *)self allAssetCPLResources];
      long long v102 = 0u;
      long long v103 = 0u;
      long long v104 = 0u;
      long long v105 = 0u;
      id obj = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v34 = [obj countByEnumeratingWithState:&v102 objects:v112 count:16];
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v36 = *(void *)v103;
        do
        {
          for (uint64_t i = 0; i != v35; ++i)
          {
            if (*(void *)v103 != v36) {
              objc_enumerationMutation(obj);
            }
            uint64_t v38 = *(void **)(*((void *)&v102 + 1) + 8 * i);
            id v39 = [v38 cplResourceIncludeFile:0];
            long long v40 = v39;
            if (v39)
            {
              [v39 setCanGenerateDerivative:0];
              long long v41 = [v40 identity];
              [v41 setFileURL:0];

              objc_msgSend(v40, "setSourceResourceType:", objc_msgSend(v38, "cplType"));
              [v14 addObject:v40];
            }
            else if (!*MEMORY[0x1E4F59AC0])
            {
              long long v42 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
              {
                long long v43 = [(PLManagedAsset *)v33 scopedIdentifier];
                *(_DWORD *)CMTime buf = 138412546;
                uint64_t v109 = (uint64_t)v38;
                __int16 v110 = 2112;
                char v111 = v43;
                _os_log_impl(&dword_19B3C7000, v42, OS_LOG_TYPE_ERROR, "Dedupe merge resource copy: Unable to create CPLResource from %@ with itemIdentifier %@", buf, 0x16u);
              }
            }
          }
          uint64_t v35 = [obj countByEnumeratingWithState:&v102 objects:v112 count:16];
        }
        while (v35);
      }
      if ([v14 count])
      {
        char v44 = [(PLManagedAsset *)v33 additionalAttributes];
        id v45 = [v44 sourceAssetForDuplicationCPLScopedIdentifier];
        id v10 = v80;
        [v80 setResourceCopyFromScopedIdentifier:v45];

        char v46 = 0;
      }
      else
      {
        char v46 = 0;
        id v10 = v80;
      }
LABEL_74:

      v93[0] = MEMORY[0x1E4F143A8];
      v93[1] = 3221225472;
      v93[2] = __104__PLManagedAsset_CPL___applyResourceChangeToCPLAsset_forChangeType_shouldGenerateDerivatives_inLibrary___block_invoke;
      v93[3] = &unk_1E586AEB8;
      char v97 = v46 & 1;
      uint64_t v26 = &v94;
      void v93[4] = v33;
      uint64_t v94 = v82;
      id v95 = v14;
      id v96 = v10;
      id v18 = v82;
      [(PLManagedAsset *)v33 synchronouslyFetchAdjustmentBlobWithCompletionHandler:v93];

      self = v33;
LABEL_75:

      goto LABEL_76;
    }
    if ((v8 & 8) != 0 || !v30)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        id v49 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEBUG))
        {
          id v50 = [v10 scopedIdentifier];
          *(_DWORD *)CMTime buf = 138412290;
          uint64_t v109 = (uint64_t)v50;
          _os_log_impl(&dword_19B3C7000, v49, OS_LOG_TYPE_DEBUG, "Generating derivatives for assetChange with identifier %@", buf, 0xCu);
        }
      }
      id obj = [(PLManagedAsset *)self createResourcesForAssetInPhotoLibrary:v11 shouldGenerateDerivatives:v7];
      objc_msgSend(v14, "addObjectsFromArray:");
      uint64_t v33 = self;
      char v46 = 0;
      goto LABEL_74;
    }
    id obj = [MEMORY[0x1E4F28CB8] defaultManager];
    if ([(PLManagedAsset *)self isPhoto])
    {
      __int16 v48 = [(PLManagedAsset *)self fileURLForFullsizeRenderImage];
    }
    else
    {
      if (![(PLManagedAsset *)self isVideo]) {
        goto LABEL_51;
      }
      __int16 v48 = [(PLManagedAsset *)self fileURLForFullsizeRenderVideo];
      if ([(PLManagedAsset *)self isDefaultAdjustedSlomo])
      {
        uint64_t v51 = [v48 path];
        char v52 = [obj fileExistsAtPath:v51];

        if ((v52 & 1) == 0)
        {
          uint64_t v53 = [(PLManagedAsset *)self mainFileURL];

          __int16 v48 = (void *)v53;
        }
      }
    }
    if (v48)
    {
      long long v54 = [v48 path];
      unsigned int v55 = [obj fileExistsAtPath:v54];

LABEL_52:
      unsigned int v84 = v55;
      if (!*MEMORY[0x1E4F59AC0])
      {
        BOOL v56 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v57 = [(PLManagedAsset *)self resources];
          uint64_t v58 = (void *)v57;
          id v59 = @"NO";
          if (v55) {
            id v59 = @"YES";
          }
          *(_DWORD *)CMTime buf = 138412546;
          uint64_t v109 = v57;
          __int16 v110 = 2112;
          char v111 = v59;
          _os_log_impl(&dword_19B3C7000, v56, OS_LOG_TYPE_DEFAULT, "Reusing existing cloud resources %@. canGenerateDerivative: %@", buf, 0x16u);
        }
      }
      id v79 = v11;
      id v81 = v10;
      unint64_t v83 = self;
      [(PLManagedAsset *)self allAssetCPLResources];
      long long v98 = 0u;
      long long v99 = 0u;
      long long v100 = 0u;
      uint64_t v85 = v101 = 0u;
      uint64_t v60 = [v85 countByEnumeratingWithState:&v98 objects:v107 count:16];
      uint64_t v61 = v55;
      if (v60)
      {
        uint64_t v62 = v60;
        char v46 = 0;
        uint64_t v63 = *(void *)v99;
        do
        {
          for (uint64_t j = 0; j != v62; ++j)
          {
            if (*(void *)v99 != v63) {
              objc_enumerationMutation(v85);
            }
            long long v65 = *(void **)(*((void *)&v98 + 1) + 8 * j);
            BOOL v66 = [v65 cplType] == 13;
            uint64_t v67 = [v65 cplResourceIncludeFile:0];
            uint64_t v68 = v67;
            if (v67)
            {
              [v67 setCanGenerateDerivative:v61];
              [v14 addObject:v68];
            }
            else if (!*MEMORY[0x1E4F59AC0])
            {
              __int16 v69 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
              {
                unint64_t v70 = [(PLManagedAsset *)v83 scopedIdentifier];
                *(_DWORD *)CMTime buf = 138412546;
                uint64_t v109 = (uint64_t)v65;
                __int16 v110 = 2112;
                char v111 = v70;
                _os_log_impl(&dword_19B3C7000, v69, OS_LOG_TYPE_ERROR, "Unable to create CPLResource from %@ with itemIdentifier %@", buf, 0x16u);

                uint64_t v61 = v84;
              }
            }
            v46 |= v66;
          }
          uint64_t v62 = [v85 countByEnumeratingWithState:&v98 objects:v107 count:16];
        }
        while (v62);
      }
      else
      {
        char v46 = 0;
      }

      id v11 = v79;
      id v10 = v81;
      uint64_t v33 = v83;
      goto LABEL_74;
    }
LABEL_51:
    unsigned int v55 = 0;
    goto LABEL_52;
  }
  if ([(PLManagedAsset *)self isPlaceholderAsset])
  {
    int v15 = [(PLManagedAsset *)self additionalAttributes];
    double v16 = [v15 sourceAssetForDuplicationCPLScopedIdentifier];
    [v10 setResourceCopyFromScopedIdentifier:v16];

    if ([(PLManagedAsset *)self hasAdjustments])
    {
      __int16 v17 = self;
      id v18 = [(PLManagedAsset *)self allAssetCPLResources];
      long long v89 = 0u;
      long long v90 = 0u;
      long long v91 = 0u;
      long long v92 = 0u;
      uint64_t v19 = [v18 countByEnumeratingWithState:&v89 objects:v106 count:16];
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = *(void *)v90;
        do
        {
          for (uint64_t k = 0; k != v20; ++k)
          {
            if (*(void *)v90 != v21) {
              objc_enumerationMutation(v18);
            }
            uint64_t v23 = *(void **)(*((void *)&v89 + 1) + 8 * k);
            BOOL v24 = [v23 cplResourceIncludeFile:0];
            if (v24)
            {
              objc_msgSend(v24, "setSourceResourceType:", objc_msgSend(v23, "cplType"));
              uint64_t v25 = [v24 identity];
              [v25 setFileURL:0];

              [v24 setCanGenerateDerivative:0];
              [v14 addObject:v24];
            }
          }
          uint64_t v20 = [v18 countByEnumeratingWithState:&v89 objects:v106 count:16];
        }
        while (v20);
      }
      v87[0] = MEMORY[0x1E4F143A8];
      v87[1] = 3221225472;
      v87[2] = __104__PLManagedAsset_CPL___applyResourceChangeToCPLAsset_forChangeType_shouldGenerateDerivatives_inLibrary___block_invoke_253;
      v87[3] = &unk_1E586AEE0;
      self = v17;
      void v87[4] = v17;
      uint64_t v26 = &v88;
      id v88 = v10;
      [(PLManagedAsset *)v17 synchronouslyFetchAdjustmentBlobWithCompletionHandler:v87];
      goto LABEL_75;
    }
  }
LABEL_76:
  [v10 setResources:v14];
  if (!*MEMORY[0x1E4F59AC0])
  {
    __int16 v71 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v71, OS_LOG_TYPE_DEBUG))
    {
      int v72 = [(PLManagedAsset *)self orientation];
      *(_DWORD *)CMTime buf = 67109120;
      LODWORD(v109) = v72;
      _os_log_impl(&dword_19B3C7000, v71, OS_LOG_TYPE_DEBUG, "Setting orientation %d to assetChange", buf, 8u);
    }
  }
  objc_msgSend(v10, "setOrientation:", (int)-[PLManagedAsset orientation](self, "orientation"));
  [(PLManagedAsset *)self duration];
  [v10 setDuration:llround(v73 * 1000.0)];
  objc_msgSend(v10, "setOriginalChoice:", -[PLManagedAsset originalResourceChoice](self, "originalResourceChoice"));
  id v74 = [(PLManagedAsset *)self additionalAttributes];
  size_t v75 = [v74 mediaMetadataType];
  [v10 setAdjustedMediaMetaDataType:v75];

  uint64_t v76 = [(PLManagedAsset *)self additionalAttributes];
  id v77 = [v76 mediaMetadataData];

  unint64_t v78 = [v77 length];
  if (v78 <= [MEMORY[0x1E4F59910] maxInlineDataSize]) {
    [v10 setAdjustedMediaMetaData:v77];
  }
}

void __104__PLManagedAsset_CPL___applyResourceChangeToCPLAsset_forChangeType_shouldGenerateDerivatives_inLibrary___block_invoke(uint64_t a1, void *a2, int a3, void *a4, void *a5, uint64_t a6, unsigned int a7, void *a8)
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  int v15 = a2;
  id v16 = a4;
  id v17 = a5;
  id v18 = a8;
  if (!v15)
  {
    [*(id *)(a1 + 56) setAdjustments:0];
    goto LABEL_41;
  }
  id v19 = objc_alloc_init(MEMORY[0x1E4F59830]);
  [v19 setAdjustmentType:v16];
  [v19 setAdjustmentCompoundVersion:v17];
  [v19 setAdjustmentTimestamp:v18];
  [v19 setAdjustmentSourceType:a6 == 1];
  uint64_t v20 = [*(id *)(a1 + 32) editorBundleID];
  [v19 setAdjustmentCreatorCode:v20];

  int v54 = a3;
  if (a3)
  {
    unsigned int v53 = a7;
    if (*(unsigned char *)(a1 + 64)) {
      [*(id *)(a1 + 32) _removeAdjustmentDataResources];
    }
    uint64_t v21 = [*(id *)(a1 + 32) pathForAdjustmentDataFile];
    id v56 = 0;
    id v22 = [(__CFString *)v21 stringByDeletingLastPathComponent];
    uint64_t v23 = (void *)MEMORY[0x1E4F8B908];
    BOOL v24 = [MEMORY[0x1E4F28CB8] defaultManager];
    LODWORD(v23) = [v23 createDirectoryAtPath:v22 error:&v56 usingFileManager:v24];

    uint64_t v25 = (__CFString *)v56;
    uint64_t v26 = v25;
    if (v23)
    {
      unsigned int v55 = v25;
      int v27 = [v15 writeToFile:v21 options:1 error:&v55];
      char v52 = v55;

      if (v27)
      {
        uint64_t v28 = [*(id *)(a1 + 32) scopedIdentifier];
        id v29 = *(void **)(a1 + 32);
        BOOL v30 = [(id)*MEMORY[0x1E4F44378] identifier];
        uint64_t v31 = v29;
        int v32 = v28;
        uint64_t v33 = [v31 _createCPLResourceFromResourcePath:v21 withResourceType:13 uniformTypeIdentifier:v30 scopedIdentifier:v28 fingerprintScheme:*(void *)(a1 + 40)];

        if (v33)
        {
          id v34 = (id)[*(id *)(a1 + 32) storedResourceForCPLResource:v33 asset:*(void *)(a1 + 32) adjusted:1];
          [*(id *)(a1 + 48) addObject:v33];
          uint64_t v35 = v32;
          if (!*MEMORY[0x1E4F59AC0])
          {
            uint64_t v36 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)CMTime buf = 138412290;
              uint64_t v58 = v33;
              id v37 = "Recreated the CPLResourceTypeAdjustmentData: %@";
              uint64_t v38 = v36;
              os_log_type_t v39 = OS_LOG_TYPE_DEFAULT;
LABEL_23:
              _os_log_impl(&dword_19B3C7000, v38, v39, v37, buf, 0xCu);
              goto LABEL_24;
            }
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t v35 = v32;
          if (!*MEMORY[0x1E4F59AC0])
          {
            uint64_t v36 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)CMTime buf = 138412290;
              uint64_t v58 = v35;
              id v37 = "Unable to create CPL resource for adjustment data for asset %@";
              uint64_t v38 = v36;
              os_log_type_t v39 = OS_LOG_TYPE_ERROR;
              goto LABEL_23;
            }
LABEL_24:
          }
        }

        uint64_t v26 = v52;
        goto LABEL_26;
      }
      if (*MEMORY[0x1E4F59AC0])
      {
        uint64_t v26 = v52;
        goto LABEL_27;
      }
      uint64_t v33 = __CPLAssetsdOSLogDomain();
      uint64_t v26 = v52;
      if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        goto LABEL_26;
      }
      *(_DWORD *)CMTime buf = 138412802;
      uint64_t v58 = v15;
      __int16 v59 = 2112;
      uint64_t v60 = v21;
      __int16 v61 = 2112;
      uint64_t v62 = v52;
      long long v40 = "Failed to save adjustment data %@ to %@. Error: %@";
      long long v41 = v33;
      uint32_t v42 = 32;
    }
    else
    {
      if (*MEMORY[0x1E4F59AC0])
      {
LABEL_27:

        a7 = v53;
        goto LABEL_28;
      }
      uint64_t v33 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
LABEL_26:

        goto LABEL_27;
      }
      *(_DWORD *)CMTime buf = 138412546;
      uint64_t v58 = v21;
      __int16 v59 = 2112;
      uint64_t v60 = v26;
      long long v40 = "Failed to create intermediate directory for %@. Error: %@";
      long long v41 = v33;
      uint32_t v42 = 22;
    }
    _os_log_impl(&dword_19B3C7000, v41, OS_LOG_TYPE_ERROR, v40, buf, v42);
    goto LABEL_26;
  }
  [v19 setSimpleAdjustmentData:v15];
LABEL_28:
  long long v43 = objc_msgSend(*(id *)(a1 + 32), "additionalAttributes", v52);
  char v44 = [v43 unmanagedAdjustment];
  id v45 = [v44 otherAdjustmentsFingerprint];

  if (!v45)
  {
    id v45 = [*(id *)(a1 + 32) _calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources];
    if (!*MEMORY[0x1E4F59AC0])
    {
      char v46 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
      {
        id v47 = @"NO";
        if (v54) {
          id v47 = @"YES";
        }
        *(_DWORD *)CMTime buf = 138412546;
        uint64_t v58 = v45;
        __int16 v59 = 2112;
        uint64_t v60 = v47;
        _os_log_impl(&dword_19B3C7000, v46, OS_LOG_TYPE_DEFAULT, "Calculating cloud adjustment fingerprint at push time: %@  (large? %@)", buf, 0x16u);
      }
    }
    __int16 v48 = [*(id *)(a1 + 32) additionalAttributes];
    id v49 = [v48 unmanagedAdjustment];
    [v49 setOtherAdjustmentsFingerprint:v45];
  }
  [v19 setOtherAdjustmentsFingerprint:v45];
  [v19 setAdjustmentRenderTypes:a7];
  [*(id *)(a1 + 56) setAdjustments:v19];
  if (!*MEMORY[0x1E4F59AC0])
  {
    id v50 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v51 = [v19 adjustmentSimpleDescription];
      *(_DWORD *)CMTime buf = 138412290;
      uint64_t v58 = v51;
      _os_log_impl(&dword_19B3C7000, v50, OS_LOG_TYPE_DEFAULT, "CPLAdjustments: %@", buf, 0xCu);
    }
  }

LABEL_41:
}

void __104__PLManagedAsset_CPL___applyResourceChangeToCPLAsset_forChangeType_shouldGenerateDerivatives_inLibrary___block_invoke_253(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, unsigned int a7, void *a8)
{
  id v20 = a2;
  id v14 = a4;
  int v15 = (objc_class *)MEMORY[0x1E4F59830];
  id v16 = a8;
  id v17 = a5;
  id v18 = objc_alloc_init(v15);
  if (v20) {
    [v18 setSimpleAdjustmentData:v20];
  }
  [v18 setAdjustmentType:v14];
  [v18 setAdjustmentCompoundVersion:v17];

  [v18 setAdjustmentSourceType:a6 == 1];
  id v19 = [*(id *)(a1 + 32) editorBundleID];
  [v18 setAdjustmentCreatorCode:v19];

  [v18 setAdjustmentRenderTypes:a7];
  [v18 setAdjustmentTimestamp:v16];

  [*(id *)(a1 + 40) setAdjustments:v18];
}

- (id)_calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources
{
  uint64_t v5 = 0;
  int v6 = &v5;
  uint64_t v7 = 0x3032000000;
  char v8 = __Block_byref_object_copy__51072;
  int v9 = __Block_byref_object_dispose__51073;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  void v4[2] = __93__PLManagedAsset_CPL___calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources__block_invoke;
  v4[3] = &unk_1E586AE90;
  v4[4] = self;
  v4[5] = &v5;
  [(PLManagedAsset *)self synchronouslyFetchAdjustmentBlobWithCompletionHandler:v4];
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void __93__PLManagedAsset_CPL___calculateCloudAdjustmentFingerprintFromAdjustmentPListAndCPLResources__block_invoke(uint64_t a1, void *a2, int a3, void *a4, void *a5, uint64_t a6)
{
  id v11 = a2;
  id v12 = a4;
  id v13 = a5;
  if (v11)
  {
    id v14 = [*(id *)(a1 + 32) assetResourceForCPLType:15];
    int v15 = [*(id *)(a1 + 32) assetResourceForCPLType:13];
    id v16 = [v14 fingerprint];
    id v17 = [v15 fingerprint];
    if (!a3 || v15)
    {
      uint64_t v28 = objc_opt_class();
      uint64_t v29 = a6;
      BOOL v19 = a3 == 0;
      if (a3) {
        id v20 = 0;
      }
      else {
        id v20 = v11;
      }
      id v21 = v12;
      if (v19) {
        id v22 = 0;
      }
      else {
        id v22 = v17;
      }
      [*(id *)(a1 + 32) editorBundleID];
      uint64_t v23 = v30 = v14;
      BOOL v24 = v22;
      id v12 = v21;
      uint64_t v25 = [v28 _cloudAdjustmentFingerprintWithAdjustmentDataBlob:v20 largeAdjustmentBlobFingerpint:v24 formatIdentifier:v21 formatVersion:v13 editorBundleID:v23 baseVersion:v29 baseImageData:0 baseImageFingerprint:v16];
      uint64_t v26 = *(void *)(*(void *)(a1 + 40) + 8);
      int v27 = *(void **)(v26 + 40);
      *(void *)(v26 + 40) = v25;

      id v14 = v30;
    }
    else if (!*MEMORY[0x1E4F59AC0])
    {
      id v18 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)CMTime buf = 0;
        _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_ERROR, "Attempting to calculate adjustment fingerprint from cloud resources which are missing", buf, 2u);
      }
    }
  }
}

- (void)synchronouslyFetchAdjustmentBlobWithCompletionHandler:(id)a3
{
  id v4 = a3;
  BOOL v5 = [(PLManagedAsset *)self hasAdjustments];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __77__PLManagedAsset_CPL__synchronouslyFetchAdjustmentBlobWithCompletionHandler___block_invoke;
  v7[3] = &unk_1E586AE68;
  BOOL v9 = v5;
  void v7[4] = self;
  id v8 = v4;
  id v6 = v4;
  [(PLManagedAsset *)self synchronouslyFetchAdjustmentDataWithCompletionHandler:v7];
}

void __77__PLManagedAsset_CPL__synchronouslyFetchAdjustmentBlobWithCompletionHandler___block_invoke(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, unsigned int a7, void *a8, void *a9)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  id v13 = a2;
  id v14 = a3;
  id v15 = a8;
  id v16 = a9;
  id v17 = (objc_class *)MEMORY[0x1E4F1C9B8];
  id v18 = a6;
  BOOL v19 = (void *)[[v17 alloc] initWithContentsOfFile:v18];

  if (v19)
  {
    if (!*(unsigned char *)(a1 + 48))
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        id v20 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        {
          uint64_t v21 = *(void *)(a1 + 32);
          *(_DWORD *)CMTime buf = 138412290;
          uint64_t v38 = v21;
          _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_ERROR, "Asset %@ has adjustment data but no adjustment.", buf, 0xCu);
        }
      }
      [*(id *)(a1 + 32) _debugPrintAdjustmentState];
    }
    id v22 = [MEMORY[0x1E4F28F98] propertyListWithData:v19 options:0 format:0 error:0];
    uint64_t v23 = [v22 objectForKeyedSubscript:*MEMORY[0x1E4F8BA58]];
    if (v23)
    {
      if (v13) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v31 = [*(id *)(a1 + 32) assetResourceForCPLType:13];
      int v32 = v31;
      if (v31)
      {
        uint64_t v23 = [v31 fileURL];

        if (v23)
        {
          id v33 = objc_alloc(MEMORY[0x1E4F1C9B8]);
          id v34 = [v32 fileURL];
          uint64_t v23 = (void *)[v33 initWithContentsOfURL:v34];
        }
      }
      else
      {
        uint64_t v23 = 0;
      }

      if (v13)
      {
LABEL_10:
        if (v14) {
          goto LABEL_11;
        }
        goto LABEL_33;
      }
    }
    id v13 = [v22 objectForKeyedSubscript:*MEMORY[0x1E4F8BA68]];
    if (v14)
    {
LABEL_11:
      if (v15)
      {
LABEL_12:
        unint64_t v24 = [v23 length];
        BOOL v25 = v24 > [MEMORY[0x1E4F59910] maxInlineDataSize];

        goto LABEL_24;
      }
LABEL_34:
      id v15 = [v22 objectForKeyedSubscript:*MEMORY[0x1E4F8BA80]];
      goto LABEL_12;
    }
LABEL_33:
    id v14 = [v22 objectForKeyedSubscript:*MEMORY[0x1E4F8BA70]];
    if (v15) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
  uint64_t v26 = (unsigned char *)MEMORY[0x1E4F59AC0];
  if (!*MEMORY[0x1E4F59AC0])
  {
    int v27 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)CMTime buf = 0;
      _os_log_impl(&dword_19B3C7000, v27, OS_LOG_TYPE_DEBUG, "AdjustmentsData path does not exist", buf, 2u);
    }
  }
  if (*(unsigned char *)(a1 + 48))
  {
    if (!*v26)
    {
      uint64_t v28 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        uint64_t v29 = *(void *)(a1 + 32);
        *(_DWORD *)CMTime buf = 138412290;
        uint64_t v38 = v29;
        _os_log_impl(&dword_19B3C7000, v28, OS_LOG_TYPE_ERROR, "Asset %@ has adjustment but no adjustmentsData.", buf, 0xCu);
      }
    }
    [*(id *)(a1 + 32) _debugPrintAdjustmentState];
  }
  BOOL v25 = 0;
  uint64_t v23 = 0;
LABEL_24:
  uint64_t v30 = *(void *)(a1 + 40);
  if (v30) {
    (*(void (**)(uint64_t, void *, BOOL, id, id, uint64_t, void, id, id))(v30 + 16))(v30, v23, v25, v13, v14, a5, a7, v15, v16);
  }
}

- (id)createResourcesForAssetInPhotoLibrary:(id)a3 shouldGenerateDerivatives:(BOOL)a4
{
  BOOL v117 = a4;
  uint64_t v141 = *MEMORY[0x1E4F143B8];
  id v123 = a3;
  id v124 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:5];
  BOOL v5 = [(PLManagedAsset *)self hasAdjustments];
  __int16 v122 = [(PLManagedAsset *)self scopedIdentifier];
  id v6 = [MEMORY[0x1E4F28CB8] defaultManager];
  if (v5)
  {
    uint64_t v7 = [(PLManagedAsset *)self fingerprintScheme];
    id v8 = v7;
    if (v7)
    {
      BOOL v9 = v7;
    }
    else
    {
      BOOL v9 = [MEMORY[0x1E4F59898] invalidFingerprintScheme];
    }
    id v12 = v9;

    id v13 = [(PLManagedAsset *)self managedObjectContext];
    id v14 = [v13 pathManager];
    id v130 = 0;
    uint64_t v113 = [v14 photoDirectoryWithType:13 leafType:2 createIfNeeded:1 error:&v130];
    id v120 = v130;

    if (v120 && !*MEMORY[0x1E4F59AC0])
    {
      id v15 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        *(void *)&uint8_t buf[4] = v120;
        _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Unable to create directory for asset: %@", buf, 0xCu);
      }
    }
    id v121 = [(PLManagedAsset *)self pathForAdjustmentSecondaryDataFile];
    if ([v6 fileExistsAtPath:v121])
    {
      id v16 = [(id)*MEMORY[0x1E4F44378] identifier];
      id v17 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v121 withResourceType:14 uniformTypeIdentifier:v16 scopedIdentifier:v122 fingerprintScheme:v12];

      if (v17) {
        [v124 addObject:v17];
      }
    }
    id v118 = [(PLManagedAsset *)self uniformTypeIdentifier];
    id v18 = [(PLManagedAsset *)self penultimateImageResource];
    char v119 = v18;
    if (v18)
    {
      BOOL v19 = [v18 uniformTypeIdentifier];
      id v114 = [v19 identifier];
    }
    else
    {
      id v114 = v118;
    }
    if ([(PLManagedAsset *)self isPhoto])
    {
      *(void *)CMTime buf = 0;
      *(void *)&unsigned __int16 buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x3032000000;
      CGImageSourceRef v138 = __Block_byref_object_copy__51072;
      id v139 = __Block_byref_object_dispose__51073;
      id v140 = 0;
      int v115 = [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
      BOOL v20 = [(PLManagedAsset *)self isPartOfBurst];
      if (v115) {
        BOOL v21 = v20;
      }
      else {
        BOOL v21 = 0;
      }
      if (v21 && (objc_msgSend(v6, "fileExistsAtPath:") & 1) == 0)
      {
        char v44 = NSString;
        id v45 = [(PLManagedAsset *)v122 identifier];
        char v46 = [v45 stringByReplacingOccurrencesOfString:@"/" withString:@"_"];
        id v47 = [v44 stringWithFormat:@"%@_render.JPG", v46];
        uint64_t v48 = [v113 stringByAppendingPathComponent:v47];

        uint64_t v22 = 1;
        int v115 = (void *)v48;
      }
      else
      {
        uint64_t v22 = 0;
      }
      v129[0] = MEMORY[0x1E4F143A8];
      v129[1] = 3221225472;
      v129[2] = __87__PLManagedAsset_CPL__createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives___block_invoke;
      v129[3] = &unk_1E586AE20;
      v129[4] = buf;
      [(PLManagedAsset *)self synchronouslyGenerateFullsizeRenderImageIfNecessaryAtPath:v115 withCompletionHandler:v129];
      if (!*(void *)(*(void *)&buf[8] + 40) || !objc_msgSend(v6, "fileExistsAtPath:"))
      {
        if (*MEMORY[0x1E4F59AC0])
        {
LABEL_85:
          double v73 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderImageFile];
          if ([v6 fileExistsAtPath:v73])
          {
            id v74 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v73 withResourceType:15 uniformTypeIdentifier:v114 scopedIdentifier:v122 fingerprintScheme:v12];
            if (v74) {
              [v124 addObject:v74];
            }
          }
          if ([(PLManagedAsset *)self isPhotoIris])
          {
            size_t v75 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
            if ([v6 fileExistsAtPath:v75])
            {
              uint64_t v76 = [v75 pathExtension];
              uint64_t v77 = [MEMORY[0x1E4F8CDF8] typeWithFilenameExtension:v76 conformingToType:*MEMORY[0x1E4F44448]];
              unint64_t v78 = (void *)v77;
              id v79 = (void *)*MEMORY[0x1E4F44490];
              if (v77) {
                id v79 = (void *)v77;
              }
              id v80 = v79;

              id v81 = [v80 identifier];
              BOOL v82 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v75 withResourceType:19 uniformTypeIdentifier:v81 scopedIdentifier:v122 fingerprintScheme:v12];

              if (v82) {
                [v124 addObject:v82];
              }
              if (v117)
              {
                unint64_t v83 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v75 isDirectory:0];
                unsigned int v84 = [(PLManagedAsset *)self _generateVideoResourcesFromURL:v83 withScopedIdentifier:v122 forMaster:0];

                [v124 addObjectsFromArray:v84];
              }
            }
            uint64_t v85 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
            if ([v6 fileExistsAtPath:v85])
            {
              uint64_t v86 = [v85 pathExtension];
              uint64_t v87 = [MEMORY[0x1E4F8CDF8] typeWithFilenameExtension:v86 conformingToType:*MEMORY[0x1E4F44448]];
              id v88 = (void *)v87;
              long long v89 = (void *)*MEMORY[0x1E4F44490];
              if (v87) {
                long long v89 = (void *)v87;
              }
              id v90 = v89;

              long long v91 = [v90 identifier];
              long long v92 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v85 withResourceType:20 uniformTypeIdentifier:v91 scopedIdentifier:v122 fingerprintScheme:v12];

              if (v92) {
                [v124 addObject:v92];
              }
            }
          }

          _Block_object_dispose(buf, 8);
          goto LABEL_140;
        }
        id v50 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
        {
          uint64_t v62 = *(PLManagedAsset **)(*(void *)&buf[8] + 40);
          *(_DWORD *)uint64_t v131 = 138412546;
          id v132 = v62;
          __int16 v133 = 2112;
          id v134 = self;
          _os_log_impl(&dword_19B3C7000, v50, OS_LOG_TYPE_ERROR, "Unable to find a full size render image at %@ to generate asset resources for asset %@", v131, 0x16u);
        }
LABEL_84:

        goto LABEL_85;
      }
      id v49 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:*(void *)(*(void *)&buf[8] + 40) withResourceType:2 uniformTypeIdentifier:v118 scopedIdentifier:v122 fingerprintScheme:v12];
      id v50 = v49;
      if (!v49)
      {
LABEL_82:
        if (v117)
        {
          int v72 = [(PLManagedAsset *)self _createJPEGResourcesFromFullSizePath:*(void *)(*(void *)&buf[8] + 40) withScopedIdentifier:v122 forMaster:0 fingerprintScheme:v12];
          [v124 addObjectsFromArray:v72];
        }
        goto LABEL_84;
      }
      [v49 setDeleteAfterUpload:v22];
      [v124 addObject:v50];
      uint64_t v51 = [MEMORY[0x1E4F1CB10] fileURLWithPath:*(void *)(*(void *)&buf[8] + 40)];
      char v52 = [(PLManagedAsset *)self imageMediaMetadataForURL:v51];

      if (!v52)
      {
LABEL_81:

        goto LABEL_82;
      }
      unint64_t v53 = [(PLManagedAsset *)v52 length];
      if (v53 <= [MEMORY[0x1E4F59910] maxInlineDataSize])
      {
LABEL_80:
        unint64_t v70 = [(PLManagedAsset *)self additionalAttributes];
        [v70 setMediaMetadataData:v52];

        __int16 v71 = [(PLManagedAsset *)self additionalAttributes];
        [v71 setMediaMetadataType:@"CGImageProperties"];

        goto LABEL_81;
      }
      int v54 = [(PLManagedAsset *)self pathForAdjustedMediaMetadataFile];
      id v128 = 0;
      int v55 = _PLEnsureIntermediateDirectoriesExistForFilePath(v54, (uint64_t)&v128);
      id v56 = (PLManagedAsset *)v128;
      uint64_t v57 = v56;
      if (!v55)
      {
        if (*MEMORY[0x1E4F59AC0])
        {
          __int16 v61 = 0;
          __int16 v59 = v56;
          goto LABEL_79;
        }
        uint64_t v63 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t v131 = 138412546;
          id v132 = v54;
          __int16 v133 = 2112;
          id v134 = v57;
          _os_log_impl(&dword_19B3C7000, v63, OS_LOG_TYPE_ERROR, "Failed to create intermediate directory for %@. Error: %@", v131, 0x16u);
        }
        __int16 v59 = v57;
        goto LABEL_77;
      }
      uint64_t v127 = v56;
      int v58 = [(PLManagedAsset *)v52 writeToFile:v54 options:1 error:&v127];
      __int16 v59 = v127;

      if (v58)
      {
        uint64_t v60 = [(id)*MEMORY[0x1E4F44378] identifier];
        __int16 v61 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v54 withResourceType:27 uniformTypeIdentifier:v60 scopedIdentifier:v122 fingerprintScheme:v12];

        if (v61)
        {
          [v61 setDeleteAfterUpload:1];
          [v124 addObject:v61];
LABEL_79:

          goto LABEL_80;
        }
        if (!*MEMORY[0x1E4F59AC0])
        {
          uint64_t v63 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)uint64_t v131 = 138412290;
            id v132 = v122;
            long long v64 = "Unable to create CPL resource for image properties data for asset %@";
            long long v65 = v63;
            uint32_t v66 = 12;
            goto LABEL_76;
          }
          goto LABEL_77;
        }
      }
      else if (!*MEMORY[0x1E4F59AC0])
      {
        uint64_t v63 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t v131 = 138412802;
          id v132 = v52;
          __int16 v133 = 2112;
          id v134 = v54;
          __int16 v135 = 2112;
          id v136 = v59;
          long long v64 = "Failed to save image properties data %@ to %@. Error: %@";
          long long v65 = v63;
          uint32_t v66 = 32;
LABEL_76:
          _os_log_impl(&dword_19B3C7000, v65, OS_LOG_TYPE_ERROR, v64, v131, v66);
        }
LABEL_77:
      }
      __int16 v61 = 0;
      goto LABEL_79;
    }
    if (![(PLManagedAsset *)self isVideo])
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        uint32_t v42 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
        {
          int v43 = [(PLManagedAsset *)self kind];
          *(_DWORD *)CMTime buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v43;
          _os_log_impl(&dword_19B3C7000, v42, OS_LOG_TYPE_DEFAULT, "Unsupported asset type %d", buf, 8u);
        }
      }
      goto LABEL_140;
    }
    double v116 = [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
    if ([v6 fileExistsAtPath:v116])
    {
      uint64_t v23 = [(id)*MEMORY[0x1E4F44410] identifier];
      CFURLRef v24 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v116];
      BOOL v25 = CGImageSourceCreateWithURL(v24, 0);

      if (v25)
      {
        uint64_t v26 = CGImageSourceGetType(v25);

        CFRelease(v25);
        uint64_t v23 = (void *)v26;
      }
      int v27 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v116 withResourceType:2 uniformTypeIdentifier:v23 scopedIdentifier:v122 fingerprintScheme:v12];
      if (v27) {
        [v124 addObject:v27];
      }
    }
    uint64_t v28 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
    int v29 = [v6 fileExistsAtPath:v28];
    char v30 = v29;
    if (!v29)
    {
LABEL_115:
      id v95 = [(PLManagedAsset *)self pathForPenultimateFullsizeRenderVideoFile];
      if ([v6 fileExistsAtPath:v95])
      {
        id v96 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v95 withResourceType:25 uniformTypeIdentifier:v118 scopedIdentifier:v122 fingerprintScheme:v12];
        if (v96) {
          [v124 addObject:v96];
        }
      }
      if (v30) {
        [MEMORY[0x1E4F1CB10] fileURLWithPath:v28 isDirectory:0];
      }
      else {
      char v97 = [(PLManagedAsset *)self mainFileURL];
      }
      long long v98 = v97;
      if (!v97) {
        goto LABEL_139;
      }
      long long v99 = [v97 path];
      int v100 = [v6 fileExistsAtPath:v99];

      if (!v100) {
        goto LABEL_139;
      }
      if (v117)
      {
        long long v101 = [(PLManagedAsset *)self _generatePosterFrameResourcesFromVideoURL:v98 withScopedIdentifier:v122 forMaster:0 fingerprintScheme:v12];
        [v124 addObjectsFromArray:v101];
        long long v102 = [(PLManagedAsset *)self _generateVideoResourcesFromURL:v98 withScopedIdentifier:v122 forMaster:0];
        [v124 addObjectsFromArray:v102];
      }
      else
      {
        if (![(PLManagedAsset *)self isDefaultAdjustedSlomo])
        {
LABEL_139:

LABEL_140:
          goto LABEL_141;
        }
        long long v103 = [v98 path];
        long long v101 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v103 withResourceType:1000 uniformTypeIdentifier:v118 scopedIdentifier:v122 fingerprintScheme:v12];

        if (v101)
        {
          if (!*MEMORY[0x1E4F59AC0])
          {
            long long v104 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v104, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)CMTime buf = 138412290;
              *(void *)&uint8_t buf[4] = v101;
              _os_log_impl(&dword_19B3C7000, v104, OS_LOG_TYPE_DEFAULT, "Adding adjustment original resource %@", buf, 0xCu);
            }
          }
          [v124 addObject:v101];
        }
        else
        {
          if (!*MEMORY[0x1E4F59AC0])
          {
            long long v105 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v105, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)CMTime buf = 138412290;
              *(void *)&uint8_t buf[4] = self;
              _os_log_impl(&dword_19B3C7000, v105, OS_LOG_TYPE_ERROR, "Failed to create adjustment original resource for %@", buf, 0xCu);
            }
          }
          long long v101 = 0;
        }
      }

      goto LABEL_139;
    }
    uint64_t v31 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v28 withResourceType:16 uniformTypeIdentifier:v118 scopedIdentifier:v122 fingerprintScheme:v12];
    if (!v31)
    {
LABEL_114:

      goto LABEL_115;
    }
    [v124 addObject:v31];
    int v32 = (void *)MEMORY[0x1E4F166C8];
    id v33 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v28];
    id v34 = [v32 URLAssetWithURL:v33 options:0];

    if (!v34)
    {
LABEL_113:

      goto LABEL_114;
    }
    context = (void *)MEMORY[0x19F38D3B0]();
    char v111 = [v34 propertyListForProxy];
    int v112 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v111 format:200 options:0 error:0];
    unint64_t v35 = [v112 length];
    if (v35 <= [MEMORY[0x1E4F59910] maxInlineDataSize])
    {
LABEL_112:
      uint64_t v93 = [(PLManagedAsset *)self additionalAttributes];
      [v93 setMediaMetadataData:v112];

      uint64_t v94 = [(PLManagedAsset *)self additionalAttributes];
      [v94 setMediaMetadataType:@"AVAssetProxy"];

      goto LABEL_113;
    }
    __int16 v110 = [(PLManagedAsset *)self pathForAdjustedMediaMetadataFile];
    id v126 = 0;
    int v36 = _PLEnsureIntermediateDirectoriesExistForFilePath(v110, (uint64_t)&v126);
    id v37 = (uint64_t (*)(uint64_t, uint64_t))v126;
    uint64_t v38 = v37;
    if (!v36)
    {
      if (*MEMORY[0x1E4F59AC0])
      {
        int v108 = v37;
        goto LABEL_111;
      }
      long long v41 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412546;
        *(void *)&uint8_t buf[4] = v110;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v38;
        _os_log_impl(&dword_19B3C7000, v41, OS_LOG_TYPE_ERROR, "Failed to create intermediate directory for %@. Error: %@", buf, 0x16u);
      }
      int v108 = v38;
      goto LABEL_110;
    }
    uint64_t v125 = v37;
    int v39 = [v112 writeToFile:v110 options:1 error:&v125];
    int v108 = v125;

    if (v39)
    {
      long long v40 = [(id)*MEMORY[0x1E4F44378] identifier];
      long long v41 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v110 withResourceType:27 uniformTypeIdentifier:v40 scopedIdentifier:v122 fingerprintScheme:v12];

      if (v41)
      {
        [v41 setDeleteAfterUpload:1];
        [v124 addObject:v41];
LABEL_110:

        goto LABEL_111;
      }
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v41 = __CPLAssetsdOSLogDomain();
        if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
          goto LABEL_110;
        }
        *(_DWORD *)CMTime buf = 138412290;
        *(void *)&uint8_t buf[4] = v122;
        uint64_t v67 = "Unable to create CPL resource for video properties data for asset %@";
        uint64_t v68 = v41;
        uint32_t v69 = 12;
        goto LABEL_109;
      }
    }
    else if (!*MEMORY[0x1E4F59AC0])
    {
      long long v41 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
        goto LABEL_110;
      }
      *(_DWORD *)CMTime buf = 138412802;
      *(void *)&uint8_t buf[4] = v112;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v110;
      *(_WORD *)&buf[22] = 2112;
      CGImageSourceRef v138 = v108;
      uint64_t v67 = "Failed to save video properties data %@ to %@. Error: %@";
      uint64_t v68 = v41;
      uint32_t v69 = 32;
LABEL_109:
      _os_log_impl(&dword_19B3C7000, v68, OS_LOG_TYPE_ERROR, v67, buf, v69);
      goto LABEL_110;
    }
LABEL_111:

    goto LABEL_112;
  }
  id v10 = [(PLManagedAsset *)self additionalAttributes];
  [v10 setMediaMetadataType:0];

  id v11 = [(PLManagedAsset *)self additionalAttributes];
  [v11 setMediaMetadata:0];

  if (*MEMORY[0x1E4F59AC0]) {
    goto LABEL_142;
  }
  id v12 = __CPLAssetsdOSLogDomain();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)CMTime buf = 138412290;
    *(void *)&uint8_t buf[4] = self;
    _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_DEBUG, "Clear out resources for %@", buf, 0xCu);
  }
LABEL_141:

LABEL_142:
  if (createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_onceToken != -1) {
    dispatch_once(&createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_onceToken, &__block_literal_global_211);
  }
  char v106 = [v124 filteredArrayUsingPredicate:createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_filterPredicate];
  [(PLManagedAsset *)self rm_createAssetResourcesForCPLResources:v106 inLibrary:v123];

  return v124;
}

void __87__PLManagedAsset_CPL__createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives___block_invoke(uint64_t a1, void *a2)
{
}

void __87__PLManagedAsset_CPL__createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives___block_invoke_209()
{
  uint64_t v0 = [MEMORY[0x1E4F28F60] predicateWithBlock:&__block_literal_global_214];
  uint64_t v1 = (void *)createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_filterPredicate;
  createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives__s_filterPredicate = v0;
}

BOOL __87__PLManagedAsset_CPL__createResourcesForAssetInPhotoLibrary_shouldGenerateDerivatives___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 resourceType];
  return +[PLResourceInstaller isValidCPLResourceTypeForPersistence:v2];
}

- (id)imageMediaMetadataForURL:(id)a3
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  objc_opt_class();
  BOOL v5 = [(PLManagedAsset *)self managedObjectContext];
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  id v8 = (void *)MEMORY[0x1E4F8CDF8];
  BOOL v9 = [(PLManagedAsset *)self uniformTypeIdentifier];
  id v10 = [v8 typeWithIdentifier:v9];

  id v11 = objc_alloc(MEMORY[0x1E4F8CC48]);
  id v12 = objc_msgSend(v7, "pl_libraryBundle");
  id v13 = [v12 timeZoneLookup];
  id v14 = (void *)[v11 initWithImageURL:v4 contentType:v10 options:13 timeZoneLookup:v13 cacheImageSource:1 cacheImageData:0];

  id v15 = [v14 imageSourceProxyData];
  if (v15) {
    BOOL v16 = 0;
  }
  else {
    BOOL v16 = *MEMORY[0x1E4F59AC0] == 0;
  }
  if (v16)
  {
    id v17 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      id v18 = [(NSManagedObject *)self pl_shortDescription];
      int v20 = 138412290;
      BOOL v21 = v18;
      _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "Failed to get image source proxy data for asset %@", (uint8_t *)&v20, 0xCu);
    }
  }

  return v15;
}

- (BOOL)shouldIncludeInCPLCounts
{
  [MEMORY[0x1E4F8BA10] maskForIncludeInCPLCounts];
  [(PLManagedAsset *)self savedAssetType];
  return PLValidatedSavedAssetTypeApplies();
}

- (id)bestAvaliableAdjustedResource
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (bestAvaliableAdjustedResource_onceToken != -1) {
    dispatch_once(&bestAvaliableAdjustedResource_onceToken, &__block_literal_global_142_51211);
  }
  if ([(PLManagedAsset *)self isPhoto])
  {
    BOOL v3 = [(PLManagedAsset *)self isLoopingVideo];
    id v4 = &bestAvaliableAdjustedResource_photoResourceTypePriority;
    if (v3) {
      id v4 = &bestAvaliableAdjustedResource_loopingPhotoResourceTypePriority;
    }
  }
  else
  {
    if (![(PLManagedAsset *)self isVideo])
    {
LABEL_19:
      id v6 = 0;
      id v12 = 0;
      goto LABEL_22;
    }
    id v4 = &bestAvaliableAdjustedResource_videoResourceTypePriority;
  }
  id v5 = (id)*v4;
  if (!v5) {
    goto LABEL_19;
  }
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v6 = v5;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v15;
    while (2)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:", (int)objc_msgSend(*(id *)(*((void *)&v14 + 1) + 8 * i), "intValue", (void)v14));
        if (v11)
        {
          id v12 = (void *)v11;
          goto LABEL_21;
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }
  id v12 = 0;
LABEL_21:

LABEL_22:
  return v12;
}

void __52__PLManagedAsset_CPL__bestAvaliableAdjustedResource__block_invoke()
{
  uint64_t v0 = (void *)bestAvaliableAdjustedResource_photoResourceTypePriority;
  bestAvaliableAdjustedResource_photoResourceTypePrioritdouble y = (uint64_t)&unk_1EEBF1E20;

  uint64_t v1 = (void *)bestAvaliableAdjustedResource_loopingPhotoResourceTypePriority;
  bestAvaliableAdjustedResource_loopingPhotoResourceTypePrioritdouble y = (uint64_t)&unk_1EEBF1E38;

  int v2 = [MEMORY[0x1E4F8CC30] currentDeviceIsEligibleForHDRPlayback];
  BOOL v3 = &unk_1EEBF1E68;
  id v4 = (void *)bestAvaliableAdjustedResource_videoResourceTypePriority;
  if (v2) {
    BOOL v3 = &unk_1EEBF1E50;
  }
  bestAvaliableAdjustedResource_videoResourceTypePrioritdouble y = (uint64_t)v3;
}

- (void)invalidateThumbnailIfNeededAfterMasterResourceChangeInLibrary:(id)a3
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (![(PLManagedAsset *)self hasAdjustments])
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v5 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        id v6 = [(PLManagedAsset *)self uuid];
        uint64_t v7 = [(PLManagedAsset *)self cloudAssetGUID];
        int v12 = 138412546;
        id v13 = v6;
        __int16 v14 = 2112;
        long long v15 = v7;
        _os_log_impl(&dword_19B3C7000, v5, OS_LOG_TYPE_DEFAULT, "Detecting a master resource change on an unadjusted asset, invalidate the thumbnail for this asset with uuid: %@ guid: %@", (uint8_t *)&v12, 0x16u);
      }
    }
    uint64_t v8 = [v4 thumbnailManager];
    uint64_t v9 = [(PLManagedAsset *)self thumbnailIdentifier];
    unint64_t v10 = [(PLManagedAsset *)self effectiveThumbnailIndex];
    uint64_t v11 = [(PLManagedAsset *)self uuid];
    [v8 deleteThumbnailsWithIdentifier:v9 orIndex:v10 uuid:v11];

    [(PLManagedAsset *)self setEffectiveThumbnailIndex:0x7FFFFFFFFFFFFFFFLL];
  }
}

- (void)_applyFaceChangeToCPLAssetChange:(id)a3 inLibrary:(id)a4
{
}

- (void)_applySharingChangeToCPLAssetChange:(id)a3 inLibrary:(id)a4
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  int v6 = [(PLManagedAsset *)self libraryScopeShareState];
  if ((v6 & 0x800000) != 0 && [(PLManagedAsset *)self hasLibraryScope])
  {
    uint64_t v7 = [(PLManagedAsset *)self libraryScope];
    uint64_t v8 = [v7 scopeIdentifier];
    [v5 setSharingScopeIdentifier:v8];

    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v9 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v10 = [(PLManagedAsset *)self libraryScope];
        uint64_t v11 = [v10 scopeIdentifier];
        int v24 = 138543618;
        id v25 = v11;
        __int16 v26 = 2114;
        id v27 = v5;
        _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_DEFAULT, "Setting libraryScopeIdentifier %{public}@ on CPLAssetChange %{public}@", (uint8_t *)&v24, 0x16u);
      }
    }
  }
  else
  {
    [v5 setSharingScopeIdentifier:0];
    if (!*MEMORY[0x1E4F59AC0])
    {
      int v12 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
      {
        int v24 = 138543362;
        id v25 = v5;
        _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_DEBUG, "Setting nil libraryScopeIdentifier on CPLAssetChange %{public}@", (uint8_t *)&v24, 0xCu);
      }
    }
    if ((v6 & 0x800000) == 0) {
      goto LABEL_14;
    }
  }
  id v13 = [(PLManagedAsset *)self libraryScopeContributors];
  uint64_t v14 = [v13 count];

  if (v14)
  {
    long long v15 = [(PLManagedAsset *)self libraryScopeContributors];
    uint64_t v16 = objc_msgSend(v15, "_pl_map:", &__block_literal_global_125_51216);
    long long v17 = [v16 allObjects];
    [v5 setSharingContributorUserIdentifiers:v17];

    goto LABEL_15;
  }
LABEL_14:
  [v5 setSharingContributorUserIdentifiers:0];
LABEL_15:
  id v18 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v19 = [v18 libraryScopeAssetContributorsToUpdate];
  uint64_t v20 = [v19 count];

  if (v20)
  {
    BOOL v21 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v22 = [v21 libraryScopeAssetContributorsToUpdate];
    uint64_t v23 = [v22 allObjects];
    [v5 setUpdateSharingContributorUserIdentifiers:v23];
  }
}

uint64_t __69__PLManagedAsset_CPL___applySharingChangeToCPLAssetChange_inLibrary___block_invoke(uint64_t a1, void *a2)
{
  return [a2 userIdentifier];
}

- (void)_applyPropertiesChangeToCPLAssetChange:(id)a3 withMasterScopedIdentifier:(id)a4 computeSyncUploadEnabled:(BOOL)a5 inLibrary:(id)a6
{
  BOOL v64 = a5;
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a6;
  uint64_t v11 = [a4 identifier];
  [v9 setMasterIdentifier:v11];

  objc_msgSend(v9, "setFavorite:", -[PLManagedAsset isFavorite](self, "isFavorite"));
  long long v65 = v10;
  [(PLManagedAsset *)self _updateBurstFlagsForCPLAssetChange:v9 photoLibrary:v10];
  int v12 = [(PLManagedAsset *)self lastSharedDate];
  [v9 setLastSharedDate:v12];

  id v13 = [(PLManagedAsset *)self addedDate];
  [v9 setAddedDate:v13];

  uint64_t v14 = [(PLManagedAsset *)self dateCreated];

  if (!v14)
  {
    long long v15 = [MEMORY[0x1E4F1C9C8] date];
    [(PLManagedAsset *)self setDateCreated:v15];
  }
  uint64_t v16 = [(PLManagedAsset *)self dateCreated];
  [v9 setAssetDate:v16];

  long long v17 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v18 = [v17 timeZoneName];
  if (v18) {
    [v9 setTimeZoneName:v18];
  }
  uint64_t v62 = (void *)v18;
  uint64_t v19 = [v17 timeZoneOffset];
  if (v19) {
    [v9 setTimeZoneOffset:v19];
  }
  __int16 v61 = (void *)v19;
  uint64_t v20 = [(PLManagedAsset *)self location];
  [v9 setLocation:v20];

  BOOL v21 = objc_opt_class();
  uint64_t v22 = [v17 placeAnnotationData];
  uint64_t v23 = [v21 _placeAnnotationFromAnnotationData:v22];

  uint64_t v60 = (void *)v23;
  [v9 setPlaceAnnotation:v23];
  __int16 v59 = +[PLKeywordManager keywordsForAsset:self];
  int v24 = [v59 allObjects];
  id v25 = (id)[v24 sortedArrayWithOptions:1 usingComparator:&__block_literal_global_51219];
  int v58 = v24;
  [v9 setKeywords:v24];
  objc_msgSend(v9, "setHidden:", -[PLManagedAsset hidden](self, "hidden"));
  __int16 v26 = [(PLManagedAsset *)self title];
  [v9 setCaption:v26];

  id v27 = [(PLManagedAsset *)self longDescription];
  [v9 setExtendedDescription:v27];

  uint64_t v28 = [(PLManagedAsset *)self accessibilityDescription];
  [v9 setAccessibilityDescription:v28];

  [(PLManagedAsset *)self _updateAssetSubtypeForCPLAssetChange:v9];
  objc_msgSend(v9, "setAssetHDRType:", +[PLManagedAsset CPLAssetHDRTypeFromPLAssetHDRType:](PLManagedAsset, "CPLAssetHDRTypeFromPLAssetHDRType:", -[PLManagedAsset hdrType](self, "hdrType")));
  if ([(PLManagedAsset *)self isPhoto]) {
    objc_msgSend(v9, "setCustomRenderedValue:", (int)-[PLManagedAsset hdrType](self, "hdrType"));
  }
  int v29 = [(PLManagedAsset *)self trashedState];
  BOOL v30 = v29 == 2 || [(PLManagedAsset *)self trashedState] == 1;
  [v9 setInTrash:v30];
  [v9 setInExpunged:v29 == 2];
  uint64_t v31 = [(PLManagedAsset *)self trashedDate];
  [v9 setDateDeleted:v31];

  uint32_t v66 = v9;
  objc_msgSend(v9, "setTrashedReason:", -[PLManagedAsset trashedReason](self, "trashedReason"));
  uint64_t v63 = v17;
  int v32 = [v17 personReferences];
  id v33 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v32, "count"));
  long long v67 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  id v34 = v32;
  uint64_t v35 = [v34 countByEnumeratingWithState:&v67 objects:v71 count:16];
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v37 = *(void *)v68;
    do
    {
      for (uint64_t i = 0; i != v36; ++i)
      {
        if (*(void *)v68 != v37) {
          objc_enumerationMutation(v34);
        }
        int v39 = *(void **)(*((void *)&v67 + 1) + 8 * i);
        id v40 = objc_alloc_init(MEMORY[0x1E4F598F8]);
        long long v41 = [v39 personUUID];
        [v40 setPersonIdentifier:v41];

        uint32_t v42 = [v39 personData];
        if (v42)
        {
          int v43 = [MEMORY[0x1E4F28F98] propertyListWithData:v42 options:0 format:0 error:0];
          [v40 setExtraProperties:v43];
        }
        [v33 addObject:v40];
      }
      uint64_t v36 = [v34 countByEnumeratingWithState:&v67 objects:v71 count:16];
    }
    while (v36);
  }

  [v66 setPeople:v33];
  objc_msgSend(v66, "setPlayCount:", objc_msgSend(v17, "playCount"));
  objc_msgSend(v66, "setShareCount:", objc_msgSend(v17, "shareCount"));
  objc_msgSend(v66, "setViewCount:", objc_msgSend(v17, "viewCount"));
  if ([MEMORY[0x1E4F59840] serverSupportsLastViewedDate])
  {
    char v44 = [v17 lastViewedDate];
    [v66 setLastViewedDate:v44];
  }
  id v45 = [(PLManagedAsset *)self mediaGroupUUID];
  [v66 setMediaGroupIdentifier:v45];
  [(PLManagedAsset *)self photoIrisVideoDuration];
  [(PLManagedAsset *)self photoIrisStillDisplayTime];
  [v66 setVideoComplementDurationValue:0];
  [v66 setVideoComplementDurationTimescale:0];
  [v66 setVideoComplementImageDisplayValue:0];
  [v66 setVideoComplementImageDisplayTimescale:0];
  objc_msgSend(v66, "setVideoComplementVisibilityState:", -[PLManagedAsset videoCpVisibilityState](self, "videoCpVisibilityState"));
  char v46 = [v17 syndicationIdentifier];
  [v66 setSyndicationIdentifier:v46];

  objc_msgSend(v66, "setViewPresentation:", objc_msgSend(v17, "viewPresentation"));
  if ((_os_feature_enabled_impl() & 1) == 0)
  {
    objc_msgSend(v66, "setSharedLibrarySharingState:", PLLibraryScopeAssetGetSyncableSharingStateValueFromLocalShareStateValue(-[PLManagedAsset libraryScopeShareState](self, "libraryScopeShareState")));
    if ([MEMORY[0x1E4F59840] serverSupportsDeletedByUserIdentifier])
    {
      id v47 = [(PLManagedAsset *)self trashedByParticipant];
      uint64_t v48 = [v47 userIdentifier];

      if (v48)
      {
        id v49 = [(PLManagedAsset *)self trashedByParticipant];
        id v50 = [v49 userIdentifier];
        [v66 setDeletedByUserIdentifier:v50];
      }
    }
  }
  if (v64)
  {
    uint64_t v51 = [(PLManagedAsset *)self computeSyncAttributes];

    if (v51)
    {
      char v52 = [(PLManagedAsset *)self computeSyncAttributes];
      unint64_t v53 = [v52 cloudComputeStateVersion];
      [v66 setComputeStateVersion:v53];

      int v54 = [(PLManagedAsset *)self computeSyncAttributes];
      int v55 = [v54 cloudComputeStateAdjustmentFingerprint];
      [v66 setComputeStateAdjustmentFingerprint:v55];

      id v56 = [(PLManagedAsset *)self computeSyncAttributes];
      uint64_t v57 = [v56 cloudComputeStateLastUpdatedDate];
      [v66 setComputeStateLastUpdatedDate:v57];
    }
  }
}

uint64_t __124__PLManagedAsset_CPL___applyPropertiesChangeToCPLAssetChange_withMasterScopedIdentifier_computeSyncUploadEnabled_inLibrary___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compare:");
}

- (id)_createVideoResourceFromVideoURL:(id)a3 withResourceType:(unint64_t)a4 scopedIdentifier:(id)a5 applyVideoAdjustments:(BOOL)a6 forMaster:(BOOL)a7 forPhotoIris:(BOOL)a8 fingerprintScheme:(id)a9
{
  BOOL v9 = a8;
  BOOL v10 = a7;
  BOOL v11 = a6;
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  id v59 = a3;
  id v55 = a5;
  id v53 = a9;
  if (PLIsEDUMode())
  {
    uint64_t v48 = [MEMORY[0x1E4F28B00] currentHandler];
    [v48 handleFailureInMethod:a2 object:self file:@"PLManagedAsset+CPL.m" lineNumber:890 description:@"Should not be generating video derivatives in EDU mode"];
  }
  uint64_t v75 = 0;
  uint64_t v76 = &v75;
  uint64_t v77 = 0x3032000000;
  unint64_t v78 = __Block_byref_object_copy__51072;
  id v79 = __Block_byref_object_dispose__51073;
  id v80 = 0;
  if ((uint64_t)a4 > 20)
  {
    if (a4 == 21)
    {
      long long v17 = (id *)MEMORY[0x1E4F15718];
    }
    else
    {
      if (a4 != 28) {
        goto LABEL_18;
      }
      long long v17 = (id *)MEMORY[0x1E4F15710];
    }
    id v15 = *v17;
LABEL_24:
    BOOL v21 = (id *)MEMORY[0x1E4F15AB0];
    goto LABEL_25;
  }
  if (a4 == 6)
  {
    id v15 = (id)*MEMORY[0x1E4F15700];
    uint64_t v16 = (void **)MEMORY[0x1E4F15708];
LABEL_11:
    uint64_t v18 = *v16;
    if (v9) {
      uint64_t v19 = v15;
    }
    else {
      uint64_t v19 = *v16;
    }
    id v20 = v19;
    if (!v9)
    {
      BOOL v21 = (id *)MEMORY[0x1E4F15AA8];
      id v15 = v18;
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (a4 == 7)
  {
    id v15 = (id)*MEMORY[0x1E4F156F8];
    uint64_t v16 = (void **)MEMORY[0x1E4F156F0];
    goto LABEL_11;
  }
LABEL_18:
  if (!*MEMORY[0x1E4F59AC0])
  {
    if (__CPLCloudPhotoServicesOSLogDomain_onceToken != -1) {
      dispatch_once(&__CPLCloudPhotoServicesOSLogDomain_onceToken, &__block_literal_global_882);
    }
    uint64_t v22 = __CPLCloudPhotoServicesOSLogDomain_result;
    if (os_log_type_enabled((os_log_t)__CPLCloudPhotoServicesOSLogDomain_result, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 134217984;
      *(void *)&uint8_t buf[4] = a4;
      _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_ERROR, "Unhandled CPL resource type: %ld, Unable to set preset for video derivatives.", buf, 0xCu);
    }
  }
  id v15 = 0;
  if (v9) {
    goto LABEL_24;
  }
  BOOL v21 = (id *)MEMORY[0x1E4F15AA8];
LABEL_25:
  id v52 = *v21;
  uint64_t v23 = [MEMORY[0x1E4F28CB8] defaultManager];
  int v24 = [(PLManagedAsset *)self pathForCPLResourceType:a4 adjusted:!v10];
  id v25 = [v24 stringByDeletingLastPathComponent];
  id v74 = 0;
  char v26 = [v23 createDirectoryIfNeededAtPath:v25 error:&v74];
  id v57 = v74;
  if (*MEMORY[0x1E4F59AC0]) {
    char v27 = 1;
  }
  else {
    char v27 = v26;
  }
  if ((v27 & 1) == 0)
  {
    uint64_t v28 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      *(void *)&uint8_t buf[4] = v57;
      _os_log_impl(&dword_19B3C7000, v28, OS_LOG_TYPE_ERROR, "Unable to create directory for video resource: %@", buf, 0xCu);
    }
  }
  int v29 = [v23 fileExistsAtPath:v24];
  if (v29)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      BOOL v30 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)CMTime buf = 138412290;
        *(void *)&uint8_t buf[4] = v24;
        _os_log_impl(&dword_19B3C7000, v30, OS_LOG_TYPE_DEFAULT, "Derivative already exists at %@, removing", buf, 0xCu);
      }
    }
    [v23 removeItemAtPath:v24 error:0];
  }
  else if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v31 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)CMTime buf = 138412290;
      *(void *)&uint8_t buf[4] = v24;
      _os_log_impl(&dword_19B3C7000, v31, OS_LOG_TYPE_DEBUG, "Derivative at %@ will be removed after sending to CPL", buf, 0xCu);
    }
  }
  int v32 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v24 isDirectory:0];
  if (v11)
  {
    uint64_t v33 = +[PLSlalomUtilities synchronouslyFetchVideoAdjustmentsFromManagedAsset:self];
    id v34 = v23;
  }
  else
  {
    id v34 = v23;
    uint64_t v33 = 0;
  }
  unint64_t v35 = a4;
  uint64_t v36 = [MEMORY[0x1E4F166C8] assetWithURL:v59];
  uint64_t v37 = (void *)[objc_alloc(MEMORY[0x1E4F8CE00]) initWithVideoAsset:v36 videoAdjustments:v33];
  id v50 = (void *)v33;
  uint64_t v51 = (void *)v36;
  dispatch_semaphore_t v38 = dispatch_semaphore_create(0);
  v63[0] = MEMORY[0x1E4F143A8];
  v63[1] = 3221225472;
  v63[2] = __153__PLManagedAsset_CPL___createVideoResourceFromVideoURL_withResourceType_scopedIdentifier_applyVideoAdjustments_forMaster_forPhotoIris_fingerprintScheme___block_invoke;
  v63[3] = &unk_1E586ADD8;
  unint64_t v72 = v35;
  id v49 = v59;
  id v64 = v49;
  id v39 = v32;
  id v65 = v39;
  id v60 = v34;
  id v66 = v60;
  id v54 = v53;
  id v67 = v54;
  id v40 = v52;
  id v68 = v40;
  __int16 v71 = &v75;
  id v56 = v55;
  id v69 = v56;
  char v73 = v29 ^ 1;
  long long v41 = v38;
  long long v70 = v41;
  *(_OWORD *)CMTime buf = *MEMORY[0x1E4F1FA48];
  uint64_t v82 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  long long v61 = *(_OWORD *)buf;
  uint64_t v62 = v82;
  +[PLVideoTranscoder transcodeVideoWithObjectBuilder:v37 outputURL:v39 startTime:buf endTime:&v61 presetName:v15 outputFileType:v40 metadata:0 completionHandler:v63];
  dispatch_semaphore_wait(v41, 0xFFFFFFFFFFFFFFFFLL);
  uint32_t v42 = (void *)v76[5];
  if (v42)
  {
    if (*MEMORY[0x1E4F59AC0]) {
      goto LABEL_53;
    }
    int v43 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v44 = v76[5];
      *(_DWORD *)CMTime buf = 138412290;
      *(void *)&uint8_t buf[4] = v44;
      _os_log_impl(&dword_19B3C7000, v43, OS_LOG_TYPE_DEBUG, "Generated video resource %@", buf, 0xCu);
    }
    goto LABEL_52;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    int v43 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
    {
      id v45 = [(PLManagedAsset *)self scopedIdentifier];
      *(_DWORD *)CMTime buf = 138412290;
      *(void *)&uint8_t buf[4] = v45;
      _os_log_impl(&dword_19B3C7000, v43, OS_LOG_TYPE_ERROR, "Failed to create video resource for %@", buf, 0xCu);
    }
LABEL_52:

    uint32_t v42 = (void *)v76[5];
    goto LABEL_53;
  }
  uint32_t v42 = 0;
LABEL_53:
  id v46 = v42;

  _Block_object_dispose(&v75, 8);
  return v46;
}

void __153__PLManagedAsset_CPL___createVideoResourceFromVideoURL_withResourceType_scopedIdentifier_applyVideoAdjustments_forMaster_forPhotoIris_fingerprintScheme___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    int v12 = *(void **)(a1 + 48);
    id v13 = [*(id *)(a1 + 40) path];
    LOBYTE(v12) = [v12 fileExistsAtPath:v13];

    if ((v12 & 1) == 0)
    {
      if (*MEMORY[0x1E4F59AC0])
      {
        id v7 = 0;
        goto LABEL_27;
      }
      uint64_t v8 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        id v20 = [MEMORY[0x1E4F59940] descriptionForResourceType:*(void *)(a1 + 96)];
        BOOL v21 = *(void **)(a1 + 32);
        uint64_t v22 = *(void *)(a1 + 40);
        *(_DWORD *)CMTime buf = 138412802;
        id v34 = v20;
        __int16 v35 = 2112;
        uint64_t v36 = v21;
        __int16 v37 = 2112;
        uint64_t v38 = v22;
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "failed to write video derivative type %@ for %@ to %@.", buf, 0x20u);
      }
      id v7 = 0;
      goto LABEL_26;
    }
    uint64_t v8 = [objc_alloc(MEMORY[0x1E4F59948]) initWithFileURL:*(void *)(a1 + 40)];
    uint64_t v14 = *(void **)(a1 + 56);
    uint64_t v15 = *(void *)(a1 + 40);
    id v32 = 0;
    BOOL v9 = [v14 fingerPrintForFileAtURL:v15 error:&v32];
    id v16 = v32;
    long long v17 = v16;
    if (!v9 || v16)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        uint64_t v23 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          int v24 = *(void **)(a1 + 40);
          *(_DWORD *)CMTime buf = 138412546;
          id v34 = v24;
          __int16 v35 = 2112;
          uint64_t v36 = v17;
          _os_log_impl(&dword_19B3C7000, v23, OS_LOG_TYPE_ERROR, "Failed to create finger print for %@. Error: %@", buf, 0x16u);
        }
      }
    }
    else
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        uint64_t v18 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v19 = *(void **)(a1 + 40);
          *(_DWORD *)CMTime buf = 138412546;
          id v34 = v9;
          __int16 v35 = 2112;
          uint64_t v36 = v19;
          _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_DEBUG, "Setting finger print %@ to %@", buf, 0x16u);
        }
      }
      [v8 setFingerPrint:v9];
    }
    [v8 setFileUTI:*(void *)(a1 + 64)];
    id v25 = *(void **)(a1 + 48);
    char v26 = [*(id *)(a1 + 40) path];
    id v31 = v17;
    char v27 = [v25 attributesOfItemAtPath:v26 error:&v31];
    id v7 = v31;

    if (!v7 && v27) {
      -[NSObject setFileSize:](v8, "setFileSize:", [v27 fileSize]);
    }
    +[PLManagedAsset dimensionsForVideoAtURL:*(void *)(a1 + 40)];
    -[NSObject setImageDimensions:](v8, "setImageDimensions:");
    [v8 setAvailable:1];
    uint64_t v28 = [objc_alloc(MEMORY[0x1E4F59940]) initWithResourceIdentity:v8 itemScopedIdentifier:*(void *)(a1 + 72) resourceType:*(void *)(a1 + 96)];
    uint64_t v29 = *(void *)(*(void *)(a1 + 88) + 8);
    BOOL v30 = *(void **)(v29 + 40);
    *(void *)(v29 + 40) = v28;

    [*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) setDeleteAfterUpload:*(unsigned __int8 *)(a1 + 104)];
    goto LABEL_25;
  }
  id v7 = v6;
  if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v8 = __CPLAssetsdOSLogDomain();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
LABEL_26:

      goto LABEL_27;
    }
    BOOL v9 = [MEMORY[0x1E4F59940] descriptionForResourceType:*(void *)(a1 + 96)];
    BOOL v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    *(_DWORD *)CMTime buf = 138413058;
    id v34 = v9;
    __int16 v35 = 2112;
    uint64_t v36 = v10;
    __int16 v37 = 2112;
    uint64_t v38 = v11;
    __int16 v39 = 2112;
    id v40 = v7;
    _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "could not generate video derivative type %@ for %@ error %@, to write to %@", buf, 0x2Au);
LABEL_25:

    goto LABEL_26;
  }
LABEL_27:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 80));
}

- (id)_createCPLResourceFromResourcePath:(id)a3 withResourceType:(unint64_t)a4 uniformTypeIdentifier:(id)a5 scopedIdentifier:(id)a6 fingerprintScheme:(id)a7
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v12 = a3;
  id v13 = a5;
  id v14 = a7;
  uint64_t v15 = (objc_class *)MEMORY[0x1E4F1CB10];
  id v16 = a6;
  long long v17 = (void *)[[v15 alloc] initFileURLWithPath:v12 isDirectory:0];
  uint64_t v18 = (void *)[objc_alloc(MEMORY[0x1E4F59948]) initWithFileURL:v17];
  [v18 setAvailable:1];
  id v38 = (id)[objc_alloc(MEMORY[0x1E4F59940]) initWithResourceIdentity:v18 itemScopedIdentifier:v16 resourceType:a4];

  [v18 setFileUTI:v13];
  if (a4 == 1)
  {
    double v19 = (double)[(PLManagedAsset *)self originalWidth];
    double v20 = (double)[(PLManagedAsset *)self originalHeight];
    if (!v13) {
      goto LABEL_18;
    }
  }
  else
  {
    double v19 = *MEMORY[0x1E4F1DB30];
    double v20 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
    if (!v13) {
      goto LABEL_18;
    }
  }
  if (v19 == 0.0 || v20 == 0.0)
  {
    BOOL v21 = [MEMORY[0x1E4F442D8] typeWithIdentifier:v13];
    if ([v21 conformsToType:*MEMORY[0x1E4F44400]])
    {
      +[PLManagedAsset sizeOfImageAtURL:v17 outOrientation:0];
      double v19 = v22;
      double v20 = v23;
      if (*MEMORY[0x1E4F59AC0])
      {
LABEL_17:

        goto LABEL_18;
      }
      int v24 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
      {
LABEL_16:

        goto LABEL_17;
      }
      *(_DWORD *)CMTime buf = 134218498;
      double v43 = v19;
      __int16 v44 = 2048;
      double v45 = v20;
      __int16 v46 = 2112;
      id v47 = v12;
      id v25 = "Read image size %lf.%lf from resource file %@.";
    }
    else
    {
      if (![v21 conformsToType:*MEMORY[0x1E4F44448]]) {
        goto LABEL_17;
      }
      +[PLManagedAsset dimensionsForVideoAtURL:v17];
      double v19 = v26;
      double v20 = v27;
      if (*MEMORY[0x1E4F59AC0]) {
        goto LABEL_17;
      }
      int v24 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_16;
      }
      *(_DWORD *)CMTime buf = 134218498;
      double v43 = v19;
      __int16 v44 = 2048;
      double v45 = v20;
      __int16 v46 = 2112;
      id v47 = v12;
      id v25 = "Read video size %lf.%lf from resource file %@.";
    }
    _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_DEBUG, v25, buf, 0x20u);
    goto LABEL_16;
  }
LABEL_18:
  objc_msgSend(v18, "setImageDimensions:", v19, v20);
  id v41 = 0;
  uint64_t v28 = *MEMORY[0x1E4F1C5F8];
  id v40 = 0;
  int v29 = [v17 getResourceValue:&v41 forKey:v28 error:&v40];
  id v30 = v41;
  id v31 = v40;
  if (v29) {
    objc_msgSend(v18, "setFileSize:", objc_msgSend(v30, "unsignedIntegerValue"));
  }
  id v39 = v31;
  id v32 = [v14 fingerPrintForFileAtURL:v17 error:&v39];
  id v33 = v39;

  if (!v32 || v33)
  {
    __int16 v35 = [NSString stringWithFormat:@"Failed to generate finger print for %@. Error: %@", v12, v33];
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v36 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        double v43 = *(double *)&v35;
        _os_log_impl(&dword_19B3C7000, v36, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
    }
    PLSimulateCrash();
  }
  else
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v34 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)CMTime buf = 138412546;
        double v43 = *(double *)&v32;
        __int16 v44 = 2112;
        double v45 = *(double *)&v12;
        _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_DEBUG, "Setting finger print %@ to %@", buf, 0x16u);
      }
    }
    [v18 setFingerPrint:v32];
  }

  return v38;
}

- (id)_createImageResourceForResourceType:(unint64_t)a3 withPreviewImagePath:(id)a4 scopedIdentifier:(id)a5 forMaster:(BOOL)a6 fingerprintScheme:(id)a7
{
  BOOL v8 = a6;
  uint64_t v79 = *MEMORY[0x1E4F143B8];
  id v11 = a4;
  id v12 = a5;
  id v63 = a7;
  id v64 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v13 = v11;
  if (!v13 || (id v14 = v13, ([v64 fileExistsAtPath:v13] & 1) == 0))
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v15 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        id v16 = [(PLManagedAsset *)self mainFileURL];
        *(_DWORD *)CMTime buf = 138412546;
        *(void *)&uint8_t buf[4] = v13;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v16;
        _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Input file to resize does not exist at %@, use main file %@ instead", buf, 0x16u);
      }
    }
    long long v17 = [(PLManagedAsset *)self mainFileURL];
    id v14 = [v17 path];

    if (!v14) {
      goto LABEL_74;
    }
  }
  if (![v64 fileExistsAtPath:v14])
  {
LABEL_74:
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint32_t v42 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
      {
LABEL_37:

        goto LABEL_38;
      }
      *(_DWORD *)CMTime buf = 138412546;
      *(void *)&uint8_t buf[4] = v14;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v12;
      double v43 = "Failed to find image to resize at %@. Skipping derivative generation for %@";
LABEL_36:
      _os_log_impl(&dword_19B3C7000, v42, OS_LOG_TYPE_ERROR, v43, buf, 0x16u);
      goto LABEL_37;
    }
LABEL_71:
    double v45 = 0;
    goto LABEL_43;
  }
  [(PLManagedAsset *)self imageSize];
  double v20 = v19;
  double v21 = v18;
  if (v19 == 0.0 && v18 == 0.0)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      double v22 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 134218498;
        *(double *)&uint8_t buf[4] = v20;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v21;
        *(_WORD *)&buf[22] = 2112;
        unint64_t v78 = v14;
        _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_ERROR, "Original size (width: %f height: %f) is invalid. Getting the size from the image file %@ directly", buf, 0x20u);
      }
    }
    double v23 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v14 isDirectory:0];
    +[PLManagedAsset sizeOfImageAtURL:v23 outOrientation:0];
    double v20 = v24;
    double v21 = v25;
  }
  double v26 = [(PLManagedAsset *)self pathForCPLResourceType:a3 adjusted:!v8];
  if (!v26)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint32_t v42 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
        goto LABEL_37;
      }
      *(_DWORD *)CMTime buf = 134218242;
      *(void *)&uint8_t buf[4] = a3;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = self;
      double v43 = "No destination path found to write the derivative of type %lu for %@";
      goto LABEL_36;
    }
    goto LABEL_71;
  }
  uint64_t v61 = [MEMORY[0x1E4F59940] maxPixelSizeForResourceType:a3];
  -[PLManagedAsset _targetSizeForInputSize:maxPixelSize:](self, "_targetSizeForInputSize:maxPixelSize:", v61, v20, v21);
  double v28 = v27;
  double v30 = v29;
  id v31 = [v26 stringByDeletingLastPathComponent];
  id v70 = 0;
  char v32 = [v64 createDirectoryIfNeededAtPath:v31 error:&v70];
  id v59 = v70;
  if (*MEMORY[0x1E4F59AC0]) {
    char v33 = 1;
  }
  else {
    char v33 = v32;
  }
  if ((v33 & 1) == 0)
  {
    id v34 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      *(void *)&uint8_t buf[4] = v59;
      _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_ERROR, "Unable to create directory for image resource: %@", buf, 0xCu);
    }
  }
  int v60 = [v64 fileExistsAtPath:v26];
  if (v60)
  {
    *(_WORD *)__int16 v71 = 1;
    __int16 v35 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v26 isDirectory:0];
    +[PLManagedAsset sizeOfImageAtURL:v35 outOrientation:v71];
    double v37 = v36;
    double v39 = v38;

    if (*(unsigned __int16 *)v71 == 1 && v28 == v37 && v30 == v39)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        id v40 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v40, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)CMTime buf = 138412290;
          *(void *)&uint8_t buf[4] = v26;
          _os_log_impl(&dword_19B3C7000, v40, OS_LOG_TYPE_DEBUG, "Derivative already exists at %@, using it", buf, 0xCu);
        }
      }
      uint64_t v41 = 0;
      *(void *)CMTime buf = 0;
      *(void *)&unsigned __int16 buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x2020000000;
      LOBYTE(v78) = 0;
      goto LABEL_60;
    }
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v48 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v48, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)CMTime buf = 138412290;
        *(void *)&uint8_t buf[4] = v26;
        _os_log_impl(&dword_19B3C7000, v48, OS_LOG_TYPE_DEBUG, "Derivative exists at %@, but size doesn't match, removing", buf, 0xCu);
      }
    }
    [v64 removeItemAtPath:v26 error:0];
  }
  else if (!*MEMORY[0x1E4F59AC0])
  {
    id v47 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)CMTime buf = 138412290;
      *(void *)&uint8_t buf[4] = v26;
      _os_log_impl(&dword_19B3C7000, v47, OS_LOG_TYPE_DEBUG, "Derivative at %@ will be removed after sending to CPL", buf, 0xCu);
    }
  }
  *(void *)CMTime buf = 0;
  *(void *)&unsigned __int16 buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x2020000000;
  LOBYTE(v78) = 0;
  dispatch_semaphore_t v49 = dispatch_semaphore_create(0);
  id v50 = NSString;
  uint64_t v51 = [MEMORY[0x1E4F59940] descriptionForResourceType:a3];
  id v52 = [v50 stringWithFormat:@"Managed asset image generation for resource type %@", v51];

  int v58 = (void *)MEMORY[0x1E4F59AD8];
  id v53 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v14 isDirectory:0];
  id v54 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v26 isDirectory:0];
  v65[0] = MEMORY[0x1E4F143A8];
  v65[1] = 3221225472;
  v65[2] = __125__PLManagedAsset_CPL___createImageResourceForResourceType_withPreviewImagePath_scopedIdentifier_forMaster_fingerprintScheme___block_invoke;
  v65[3] = &unk_1E586F2E0;
  id v66 = v14;
  id v67 = v26;
  id v69 = buf;
  id v55 = v49;
  id v68 = v55;
  [v58 resizeImageAtURL:v53 destinationURL:v54 maximumPixelCount:v61 bakeInOrientation:1 colorOutput:0 reason:v52 completionHandler:v65];

  dispatch_semaphore_wait(v55, 0xFFFFFFFFFFFFFFFFLL);
  if (!*(unsigned char *)(*(void *)&buf[8] + 24)) {
    goto LABEL_62;
  }
  uint64_t v41 = v60 ^ 1u;
LABEL_60:
  if ([v64 fileExistsAtPath:v26])
  {
    id v56 = [(id)*MEMORY[0x1E4F44410] identifier];
    double v45 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v26 withResourceType:a3 uniformTypeIdentifier:v56 scopedIdentifier:v12 fingerprintScheme:v63];

    [v45 setDeleteAfterUpload:v41];
    goto LABEL_67;
  }
LABEL_62:
  if (!*MEMORY[0x1E4F59AC0])
  {
    id v57 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int16 v71 = 138412802;
      unint64_t v72 = self;
      __int16 v73 = 2112;
      id v74 = v14;
      __int16 v75 = 2112;
      uint64_t v76 = v26;
      _os_log_impl(&dword_19B3C7000, v57, OS_LOG_TYPE_ERROR, "Failed to generate derivative for %@. Original file path: %@ Derivative path: %@", v71, 0x20u);
    }
  }
  double v45 = 0;
LABEL_67:
  _Block_object_dispose(buf, 8);

  if (!v45)
  {
LABEL_38:
    if (!*MEMORY[0x1E4F59AC0])
    {
      __int16 v44 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        *(void *)&uint8_t buf[4] = v12;
        _os_log_impl(&dword_19B3C7000, v44, OS_LOG_TYPE_ERROR, "Failed to create image resource for %@", buf, 0xCu);
      }
      double v45 = 0;
      goto LABEL_42;
    }
    goto LABEL_71;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    __int16 v44 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)CMTime buf = 138412290;
      *(void *)&uint8_t buf[4] = v45;
      _os_log_impl(&dword_19B3C7000, v44, OS_LOG_TYPE_DEBUG, "Generated image resource %@", buf, 0xCu);
    }
LABEL_42:
  }
LABEL_43:

  return v45;
}

void __125__PLManagedAsset_CPL___createImageResourceForResourceType_withPreviewImagePath_scopedIdentifier_forMaster_fingerprintScheme___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v7 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        uint64_t v9 = *(void *)(a1 + 40);
        int v13 = 138412802;
        uint64_t v14 = v8;
        __int16 v15 = 2112;
        uint64_t v16 = v9;
        __int16 v17 = 2112;
        id v18 = v6;
        _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_ERROR, "Failed to resize image at %@ to %@: %@", (uint8_t *)&v13, 0x20u);
      }
    }
  }
  else
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      BOOL v10 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v11 = *(void *)(a1 + 32);
        uint64_t v12 = *(void *)(a1 + 40);
        int v13 = 138412546;
        uint64_t v14 = v11;
        __int16 v15 = 2112;
        uint64_t v16 = v12;
        _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_DEBUG, "Resized %@ to %@", (uint8_t *)&v13, 0x16u);
      }
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

- (void)_promptForNilScopeIdentifierRadar
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  BOOL v3 = NSString;
  id v4 = [(PLManagedAsset *)self objectID];
  int v5 = [(PLManagedAsset *)self isDeleted];
  id v6 = @"NO";
  if (v5) {
    id v6 = @"YES";
  }
  id v7 = v6;
  uint64_t v8 = [(PLManagedAsset *)self syncDescription];
  uint64_t v9 = [MEMORY[0x1E4F29060] callStackSymbols];
  BOOL v10 = [v3 stringWithFormat:@"Found asset with nil scope identifier %@ (isDeleted=%@) %@.\n\nSee rdar://problem/40112514\n\nBacktrace:\n%@", v4, v7, v8, v9];

  if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v11 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138543362;
      int v13 = v10;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
    }
  }
  +[PLDiagnostics fileRadarUserNotificationWithHeader:@"Unexpected Photo Library state" message:@"Please file a Radar against Photos" radarTitle:@"TTR: asset with nil scope identifier" radarDescription:v10];
}

- (id)fingerprintScheme
{
  int v2 = [(PLManagedAsset *)self master];
  BOOL v3 = [v2 fingerprintScheme];

  return v3;
}

- (id)fingerprintContext
{
  int v2 = [(PLManagedObject *)self photoLibrary];
  BOOL v3 = [v2 fingerprintContext];

  return v3;
}

- (id)scopedIdentifier
{
  BOOL v3 = [(PLManagedAsset *)self cloudAssetGUID];
  if (v3) {
    goto LABEL_4;
  }
  uint64_t v4 = [(PLManagedAsset *)self uuid];
  if (v4)
  {
    BOOL v3 = (void *)v4;
    [(PLManagedAsset *)self setCloudAssetGUID:v4];
LABEL_4:
    int v5 = [(PLManagedAsset *)self scopeIdentifier];
    id v6 = (void *)[objc_alloc(MEMORY[0x1E4F59968]) initWithScopeIdentifier:v5 identifier:v3];

    goto LABEL_5;
  }
  [(PLManagedAsset *)self _promptForNilScopeIdentifierRadar];
  id v6 = 0;
LABEL_5:
  return v6;
}

- (id)scopeIdentifier
{
  BOOL v3 = [(PLManagedAsset *)self momentShare];
  uint64_t v4 = v3;
  if (v3)
  {
    int v5 = [v3 scopeIdentifier];
  }
  else
  {
    id v6 = [(PLManagedObject *)self photoLibrary];
    int v5 = [v6 mainScopeIdentifier];
  }
  return v5;
}

- (id)_generatePosterFrameForVideoAtURL:(id)a3 withResourceType:(unint64_t)a4 scopedIdentifier:(id)a5 forMaster:(BOOL)a6 fingerprintScheme:(id)a7
{
  BOOL v8 = a6;
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  id v50 = (__CFString *)a3;
  id v48 = a5;
  id v12 = a7;
  uint64_t v13 = [MEMORY[0x1E4F59940] maxPixelSizeForResourceType:a4];
  [(PLManagedAsset *)self imageSize];
  double v16 = v15;
  double v17 = v14;
  id v18 = (unsigned __int8 *)MEMORY[0x1E4F59AC0];
  if (v15 == 0.0 || v14 == 0.0)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v19 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 134218498;
        id v54 = *(PLManagedAsset **)&v16;
        __int16 v55 = 2048;
        double v56 = v17;
        __int16 v57 = 2112;
        int v58 = v50;
        _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_ERROR, "Original size (width: %f height: %f) is invalid. Getting the size from the video file %@ directly", buf, 0x20u);
      }
    }
    +[PLManagedAsset dimensionsForVideoAtURL:](PLManagedAsset, "dimensionsForVideoAtURL:", v50, v48);
    double v16 = v20;
    double v17 = v21;
  }
  -[PLManagedAsset _targetSizeForInputSize:maxPixelSize:](self, "_targetSizeForInputSize:maxPixelSize:", v13, v16, v17, v48);
  double v23 = v22;
  double v25 = v24;
  double v26 = [MEMORY[0x1E4F28CB8] defaultManager];
  double v27 = [(PLManagedAsset *)self pathForCPLResourceType:a4 adjusted:!v8];
  double v28 = [(__CFString *)v27 stringByDeletingLastPathComponent];
  id v52 = 0;
  char v29 = [v26 createDirectoryIfNeededAtPath:v28 error:&v52];
  double v30 = (PLManagedAsset *)v52;
  if ((v29 & 1) == 0 && !*v18)
  {
    id v31 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v54 = v30;
      _os_log_impl(&dword_19B3C7000, v31, OS_LOG_TYPE_ERROR, "Unable to create directory for video posterframe image: %@", buf, 0xCu);
    }
  }
  int v32 = [v26 fileExistsAtPath:v27];
  char v33 = v18;
  int v34 = v32;
  int v35 = *v33;
  if (v32)
  {
    if (!v35)
    {
      double v36 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v54 = (PLManagedAsset *)v27;
        _os_log_impl(&dword_19B3C7000, v36, OS_LOG_TYPE_DEBUG, "Poster frame exists at %@, removing", buf, 0xCu);
      }
    }
    [v26 removeItemAtPath:v27 error:0];
  }
  else if (!v35)
  {
    double v37 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v54 = (PLManagedAsset *)v27;
      _os_log_impl(&dword_19B3C7000, v37, OS_LOG_TYPE_DEBUG, "Poster frame at %@ will be removed after sending to CPL", buf, 0xCu);
    }
  }
  uint64_t v51 = v30;
  double v38 = +[PLVideoTranscoder generatePosterFrameForVideoAtURL:maxSize:error:](PLVideoTranscoder, "generatePosterFrameForVideoAtURL:maxSize:error:", v50, &v51, v23, v25);
  double v39 = v51;

  if (!v39 && v38)
  {
    id v40 = (CGImage *)DCIM_CGImageRefFromPLImage();
    writeCGImageToPath(v40, v27, 0);
  }
  if ([v26 fileExistsAtPath:v27])
  {
    uint64_t v41 = v34 ^ 1u;
    uint32_t v42 = [(id)*MEMORY[0x1E4F44410] identifier];
    unint64_t v43 = a4;
    __int16 v44 = v49;
    double v45 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v27 withResourceType:v43 uniformTypeIdentifier:v42 scopedIdentifier:v49 fingerprintScheme:v12];

    [v45 setDeleteAfterUpload:v41];
  }
  else
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      __int16 v46 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138413058;
        id v54 = self;
        __int16 v55 = 2112;
        double v56 = *(double *)&v50;
        __int16 v57 = 2112;
        int v58 = v27;
        __int16 v59 = 2112;
        int v60 = v39;
        _os_log_impl(&dword_19B3C7000, v46, OS_LOG_TYPE_ERROR, "Failed to write poster image for %@. Original file path: %@ Derivative path: %@ Error: %@", buf, 0x2Au);
      }
    }
    double v45 = 0;
    __int16 v44 = v49;
  }

  return v45;
}

- (id)cplMasterChangeInLibrary:(id)a3 shouldGenerateDerivatives:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = (unsigned char *)MEMORY[0x1E4F59AC0];
  if (!*MEMORY[0x1E4F59AC0])
  {
    BOOL v8 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)CMTime buf = 138412290;
      unint64_t v43 = self;
      _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_DEBUG, "CPLMasterChange for %@", buf, 0xCu);
    }
  }
  uint64_t v9 = [(PLManagedAsset *)self master];
  if (v9
    || ([(PLManagedAsset *)self createMasterIfNecessaryInLibrary:v6],
        [(PLManagedAsset *)self master],
        (uint64_t v9 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    BOOL v39 = v4;
    BOOL v10 = [(PLManagedAsset *)self masterResourceForCPLType:1];
    id v40 = [(PLManagedAsset *)self masterResourceForCPLType:18];
    uint64_t v11 = [(PLManagedAsset *)self masterResourceForCPLType:5];
    uint64_t v12 = [(PLManagedAsset *)self masterResourceForCPLType:17];
    uint64_t v13 = [(PLManagedAsset *)self masterResourceForCPLType:23];
    double v14 = [(PLManagedAsset *)self masterResourceForCPLType:24];
    BOOL v15 = v13 && ![v13 cloudLocalState]
       || v14 && ![v14 cloudLocalState];
    uint64_t v41 = (void *)v12;
    if (!v10)
    {
      if (*v7)
      {
        double v30 = 0;
        goto LABEL_57;
      }
      id v18 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        [(PLManagedAsset *)self uuid];
        uint64_t v19 = v11;
        id v20 = v6;
        double v21 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)CMTime buf = 138412546;
        unint64_t v43 = v9;
        __int16 v44 = 2112;
        double v45 = v21;
        _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_ERROR, "Can't find original resource in master %@ for asset %@", buf, 0x16u);

        id v6 = v20;
        uint64_t v11 = v19;
      }
      goto LABEL_55;
    }
    int v16 = [v10 isLocallyAvailable];
    double v38 = v11;
    if (v11) {
      BOOL v17 = [v11 cloudLocalState] == 0;
    }
    else {
      BOOL v17 = 1;
    }
    int v22 = v16 & v17;
    if (![(PLManagedAsset *)self isPhotoIris]
      || v40 && [v40 cloudLocalState])
    {
      goto LABEL_69;
    }
    double v23 = [MEMORY[0x1E4F28CB8] defaultManager];
    [(PLManagedAsset *)self pathForVideoComplementFile];
    double v24 = v37 = v6;
    int v25 = [v23 fileExistsAtPath:v24];

    id v6 = v37;
    if (!v25)
    {
LABEL_69:
      if (!v41
        || [v41 cloudLocalState]
        || ![v41 isLocallyAvailable])
      {
LABEL_35:
        if (v22)
        {
          id v18 = [(PLManagedAsset *)self createResourcesForMaster:v9 shouldGenerateDerivatives:v39 inPhotoLibrary:v6];
          uint64_t v11 = v38;
          if ([v18 count])
          {
            double v30 = [(PLManagedAsset *)v9 cplMasterPropertyChangeForAsset:self];
            [(PLManagedAsset *)v30 setResources:v18];
            id v7 = (unsigned char *)MEMORY[0x1E4F59AC0];
LABEL_56:

LABEL_57:
            goto LABEL_58;
          }
          id v7 = (unsigned char *)MEMORY[0x1E4F59AC0];
          if (!*MEMORY[0x1E4F59AC0])
          {
            int v34 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)CMTime buf = 138412290;
              unint64_t v43 = 0;
              _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_ERROR, "Unable to generate any resources for masterChange %@. Skipping upload", buf, 0xCu);
            }
          }
LABEL_55:
          double v30 = 0;
          goto LABEL_56;
        }
        double v30 = [(PLManagedAsset *)v9 cplMasterPropertyChangeForAsset:self];
        id v18 = [(PLManagedAsset *)self rm_cplMasterResourcesFromCloudMaster:v9 addOriginalResourceMode:v15];
        [(PLManagedAsset *)v30 setResources:v18];
        BOOL v31 = [(PLManagedAsset *)self isPlaceholderAsset];
        id v7 = (unsigned char *)MEMORY[0x1E4F59AC0];
        uint64_t v11 = v38;
        if (v31)
        {
          if (*MEMORY[0x1E4F59AC0]) {
            goto LABEL_56;
          }
          int v32 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)CMTime buf = 138412546;
            unint64_t v43 = v30;
            __int16 v44 = 2112;
            double v45 = v9;
            char v33 = "Created CPLMaster %@ from placeholder master %@ for server side copy";
LABEL_49:
            _os_log_impl(&dword_19B3C7000, v32, OS_LOG_TYPE_DEFAULT, v33, buf, 0x16u);
          }
        }
        else
        {
          if (*MEMORY[0x1E4F59AC0]) {
            goto LABEL_56;
          }
          int v32 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)CMTime buf = 138412546;
            unint64_t v43 = v30;
            __int16 v44 = 2112;
            double v45 = v9;
            char v33 = "Created optimistic CPLMaster %@ from %@, assuming reset sync";
            goto LABEL_49;
          }
        }

        goto LABEL_56;
      }
      if (!*MEMORY[0x1E4F59AC0])
      {
        double v26 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          [(PLManagedAsset *)self uuid];
          id v28 = v6;
          char v29 = (PLManagedAsset *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)CMTime buf = 138412290;
          unint64_t v43 = v29;
          _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_DEFAULT, "Asset %@ now has original alternate resource, will include it now", buf, 0xCu);

          id v6 = v28;
        }
        goto LABEL_33;
      }
    }
    else if (!*MEMORY[0x1E4F59AC0])
    {
      double v26 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        double v27 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)CMTime buf = 138412290;
        unint64_t v43 = v27;
        _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_DEFAULT, "Asset %@ now has video complement resource, will include it now", buf, 0xCu);

        id v6 = v37;
      }
LABEL_33:
    }
    BOOL v15 = 1;
    goto LABEL_35;
  }
  if (*v7)
  {
    double v30 = 0;
    uint64_t v9 = 0;
    goto LABEL_62;
  }
  BOOL v10 = __CPLAssetsdOSLogDomain();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)CMTime buf = 138412290;
    unint64_t v43 = self;
    _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_ERROR, "Asset %@ doesn't have a master.", buf, 0xCu);
  }
  uint64_t v9 = 0;
  double v30 = 0;
LABEL_58:

  if (!*v7)
  {
    int v35 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)CMTime buf = 138412290;
      unint64_t v43 = v30;
      _os_log_impl(&dword_19B3C7000, v35, OS_LOG_TYPE_DEBUG, "CPLMasterChange %@", buf, 0xCu);
    }
  }
LABEL_62:

  return v30;
}

- (id)createResourcesForMaster:(id)a3 shouldGenerateDerivatives:(BOOL)a4 inPhotoLibrary:(id)a5
{
  BOOL v6 = a4;
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a5;
  BOOL v10 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:5];
  uint64_t v11 = [(PLManagedAsset *)self rm_cplMasterResourceForResourceType:1];
  if (v11)
  {
    [v10 addObject:v11];
    if ([(PLManagedAsset *)self isPhoto])
    {
      [(PLManagedAsset *)self _createPhotoResourcesForMaster:v8 withOriginalResource:v11 intoMasterResources:v10 shouldGenerateDerivatives:v6 inPhotoLibrary:v9];
    }
    else if ([(PLManagedAsset *)self isVideo])
    {
      [(PLManagedAsset *)self _createVideoResourcesForMaster:v8 intoMasterResources:v10 shouldGenerateDerivatives:v6];
    }
    [(PLManagedAsset *)self rm_createMasterResourcesForCPLResources:v10 master:v8 inLibrary:v9];
  }
  else if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v12 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v14 = 138412290;
      id v15 = v8;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "Unable to find original resource from master %@", (uint8_t *)&v14, 0xCu);
    }
  }
  return v10;
}

- (id)_videoComplementDerivativeResourcesForMaster:(id)a3
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int v5 = [MEMORY[0x1E4F1CA48] array];
  BOOL v6 = [(PLManagedAsset *)self photoIrisSidecarIgnoringSubtype:0];
  id v7 = [v4 scopedIdentifier];
  BOOL v17 = v4;
  id v8 = [v4 fingerprintScheme];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  uint64_t v9 = [&unk_1EEBF1E08 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v19 != v11) {
          objc_enumerationMutation(&unk_1EEBF1E08);
        }
        uint64_t v13 = [*(id *)(*((void *)&v18 + 1) + 8 * i) unsignedIntegerValue];
        int v14 = [v6 fileURL];
        id v15 = [(PLManagedAsset *)self _createVideoResourceFromVideoURL:v14 withResourceType:v13 scopedIdentifier:v7 applyVideoAdjustments:0 forMaster:1 forPhotoIris:1 fingerprintScheme:v8];

        if (v15) {
          [v5 addObject:v15];
        }
      }
      uint64_t v10 = [&unk_1EEBF1E08 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v10);
  }

  return v5;
}

- (void)_createVideoResourcesForMaster:(id)a3 intoMasterResources:(id)a4 shouldGenerateDerivatives:(BOOL)a5
{
  BOOL v5 = a5;
  uint64_t v79 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v64 = a4;
  uint64_t v62 = self;
  uint64_t v9 = [(PLManagedAsset *)self mainFileURL];
  uint64_t v10 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v11 = [v8 scopedIdentifier];
  id v63 = [v8 fingerprintScheme];
  if (v9)
  {
    uint64_t v12 = [v9 path];
    int v13 = [v10 fileExistsAtPath:v12];

    if (v13)
    {
      if (v5)
      {
        int v14 = [(PLManagedAsset *)v62 _generatePosterFrameResourcesFromVideoURL:v9 withScopedIdentifier:v11 forMaster:1 fingerprintScheme:v63];
        [v64 addObjectsFromArray:v14];
        if (![(PLManagedAsset *)v62 isDefaultAdjustedSlomo])
        {
          id v15 = [(PLManagedAsset *)v62 _generateVideoResourcesFromURL:v9 withScopedIdentifier:v11 forMaster:1];
          [v64 addObjectsFromArray:v15];
        }
      }
    }
  }
  __int16 v57 = (void *)v11;
  int v58 = v9;
  double v56 = v8;
  [(PLManagedAsset *)v62 allMasterCPLResources];
  long long v68 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  id v16 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v17 = [v16 countByEnumeratingWithState:&v68 objects:v78 count:16];
  id v61 = v16;
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v69;
    long long v20 = (unsigned char *)MEMORY[0x1E4F59AC0];
    do
    {
      for (uint64_t i = 0; i != v18; ++i)
      {
        if (*(void *)v69 != v19) {
          objc_enumerationMutation(v16);
        }
        int v22 = *(void **)(*((void *)&v68 + 1) + 8 * i);
        if ([v22 cplType] == 23 || objc_msgSend(v22, "cplType") == 22)
        {
          uint64_t v23 = [v22 fingerprint];

          if (!v23)
          {
            double v24 = v20;
            id v25 = v22;
            double v26 = [v25 fileURL];
            id v67 = 0;
            double v27 = [v63 fingerPrintForFileAtURL:v26 error:&v67];
            id v28 = v67;

            if (v27)
            {
              [v25 setFingerprint:v27];
            }
            else if (!*v24)
            {
              char v29 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
              {
                int v60 = [v25 fileURL];
                double v30 = [v60 path];
                __int16 v59 = [(PLManagedAsset *)v62 scopedIdentifier];
                *(_DWORD *)CMTime buf = 138412802;
                __int16 v73 = v30;
                __int16 v74 = 2112;
                __int16 v75 = v59;
                __int16 v76 = 2112;
                id v77 = v28;
                _os_log_impl(&dword_19B3C7000, v29, OS_LOG_TYPE_ERROR, "Failed to generate fingerprint for path %@ uuid %@. Error: %@", buf, 0x20u);

                id v16 = v61;
              }
            }
            long long v20 = v24;
          }
          BOOL v31 = [v22 cplResourceIncludeFile:1];
          if (v31)
          {
            if (!*v20)
            {
              int v32 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)CMTime buf = 138412290;
                __int16 v73 = v31;
                _os_log_impl(&dword_19B3C7000, v32, OS_LOG_TYPE_DEBUG, "Created original adjustment master resource %@", buf, 0xCu);
              }
            }
            [v64 addObject:v31];
          }
          else if (!*v20)
          {
            char v33 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
            {
              int v34 = [(PLManagedAsset *)v62 scopedIdentifier];
              *(_DWORD *)CMTime buf = 138412290;
              __int16 v73 = v34;
              _os_log_impl(&dword_19B3C7000, v33, OS_LOG_TYPE_ERROR, "Unable to create original adjustment CPLResource with itemIdentifier %@", buf, 0xCu);

              id v16 = v61;
            }
          }
        }
      }
      uint64_t v18 = [v16 countByEnumeratingWithState:&v68 objects:v78 count:16];
    }
    while (v18);
  }

  int v35 = [MEMORY[0x1E4F166C8] URLAssetWithURL:v58 options:0];
  if (v35)
  {
    double v36 = (void *)MEMORY[0x19F38D3B0]();
    id v37 = [v35 propertyListForProxy];
    double v38 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v37 format:200 options:0 error:0];
    unint64_t v39 = [v38 length];
    if (v39 <= [MEMORY[0x1E4F59910] maxInlineDataSize])
    {
LABEL_56:
      id v54 = [v56 mediaMetadata];
      [v54 setValue:v38 forKey:@"data"];

      [v56 setMediaMetadataType:@"AVAssetProxy"];
      goto LABEL_57;
    }
    id v40 = [(PLManagedAsset *)v62 pathForMediaMetadataFile];
    id v66 = 0;
    uint64_t v41 = [v40 stringByDeletingLastPathComponent];
    uint32_t v42 = (void *)MEMORY[0x1E4F8B908];
    unint64_t v43 = [MEMORY[0x1E4F28CB8] defaultManager];
    LODWORD(v42) = [v42 createDirectoryAtPath:v41 error:&v66 usingFileManager:v43];

    id v44 = v66;
    double v45 = v44;
    if (!v42)
    {
      if (*MEMORY[0x1E4F59AC0])
      {
        id v16 = v61;
        goto LABEL_55;
      }
      uint64_t v46 = v36;
      id v50 = __CPLAssetsdOSLogDomain();
      id v16 = v61;
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412546;
        __int16 v73 = v40;
        __int16 v74 = 2112;
        __int16 v75 = v45;
        _os_log_impl(&dword_19B3C7000, v50, OS_LOG_TYPE_ERROR, "Failed to create intermediate directory for %@. Error: %@", buf, 0x16u);
      }
      id v48 = v45;
      goto LABEL_52;
    }
    uint64_t v46 = v36;
    id v65 = v44;
    int v47 = [v38 writeToFile:v40 options:1 error:&v65];
    id v48 = v65;

    if (v47)
    {
      dispatch_semaphore_t v49 = [(id)*MEMORY[0x1E4F44378] identifier];
      id v50 = [(PLManagedAsset *)v62 _createCPLResourceFromResourcePath:v40 withResourceType:10 uniformTypeIdentifier:v49 scopedIdentifier:v57 fingerprintScheme:v63];

      if (v50)
      {
        [v50 setDeleteAfterUpload:1];
        [v64 addObject:v50];
        id v16 = v61;
        goto LABEL_52;
      }
      id v16 = v61;
      if (*MEMORY[0x1E4F59AC0])
      {
LABEL_53:
        double v45 = v48;
LABEL_54:
        double v36 = v46;
LABEL_55:

        goto LABEL_56;
      }
      id v50 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
LABEL_52:

        goto LABEL_53;
      }
      *(_DWORD *)CMTime buf = 138412290;
      __int16 v73 = v57;
      uint64_t v51 = "Unable to create CPL resource for video properties data for asset %@";
      id v52 = v50;
      uint32_t v53 = 12;
    }
    else
    {
      if (*MEMORY[0x1E4F59AC0])
      {
        double v45 = v48;
        id v16 = v61;
        goto LABEL_54;
      }
      id v50 = __CPLAssetsdOSLogDomain();
      id v16 = v61;
      if (!os_log_type_enabled(v50, OS_LOG_TYPE_ERROR)) {
        goto LABEL_52;
      }
      *(_DWORD *)CMTime buf = 138412802;
      __int16 v73 = v38;
      __int16 v74 = 2112;
      __int16 v75 = v40;
      __int16 v76 = 2112;
      id v77 = v48;
      uint64_t v51 = "Failed to save video properties data %@ to %@. Error: %@";
      id v52 = v50;
      uint32_t v53 = 32;
    }
    _os_log_impl(&dword_19B3C7000, v52, OS_LOG_TYPE_ERROR, v51, buf, v53);
    goto LABEL_52;
  }
LABEL_57:
}

- (void)_createPhotoResourcesForMaster:(id)a3 withOriginalResource:(id)a4 intoMasterResources:(id)a5 shouldGenerateDerivatives:(BOOL)a6 inPhotoLibrary:(id)a7
{
  BOOL v95 = a6;
  uint64_t v126 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v91 = a4;
  id v98 = a5;
  id v87 = a7;
  uint64_t v93 = v10;
  id v88 = [v10 scopedIdentifier];
  id v90 = [(PLManagedAsset *)self mainFileURL];
  long long v92 = [v91 identity];
  uint64_t v11 = [v92 fileUTI];
  [v92 imageDimensions];
  objc_msgSend(v10, "setFullSizeJPEGSource:", (__int16)+[PLCloudMaster fullSizeJPEGSourceForUTI:andImageDimensions:](PLCloudMaster, "fullSizeJPEGSourceForUTI:andImageDimensions:", v11));

  long long v101 = [v10 fingerprintScheme];
  long long v89 = [MEMORY[0x1E4F28CB8] defaultManager];
  if (!v95) {
    goto LABEL_37;
  }
  *(void *)__int16 v122 = 0;
  *(void *)&v122[8] = v122;
  *(void *)&v122[16] = 0x3032000000;
  id v123 = __Block_byref_object_copy__51072;
  id v124 = __Block_byref_object_dispose__51073;
  id v125 = 0;
  id obj = [v90 path];
  uint64_t v12 = [MEMORY[0x1E4F1CA48] arrayWithArray:&unk_1EEBF1DF0];
  dispatch_semaphore_t v13 = dispatch_semaphore_create(0);
  int v14 = (void *)MEMORY[0x1E4F59AD8];
  id v15 = (void *)MEMORY[0x1E4F1CB10];
  id v16 = NSTemporaryDirectory();
  uint64_t v17 = [v15 fileURLWithPath:v16];
  v111[0] = MEMORY[0x1E4F143A8];
  v111[1] = 3221225472;
  void v111[2] = __136__PLManagedAsset_CPL___createPhotoResourcesForMaster_withOriginalResource_intoMasterResources_shouldGenerateDerivatives_inPhotoLibrary___block_invoke;
  v111[3] = &unk_1E586ADB0;
  id v112 = v91;
  id v114 = v122;
  uint64_t v18 = v13;
  uint64_t v113 = v18;
  [v14 generateFullSizeJPEGIfNecessaryFromInputResource:v112 destinationDirectory:v17 fingerprintScheme:v101 completionHandler:v111];

  dispatch_semaphore_wait(v18, 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v19 = *(void **)(*(void *)&v122[8] + 40);
  if (v19)
  {
    uint64_t v20 = [v19 resourceType];
    long long v21 = [NSNumber numberWithUnsignedInteger:v20];
    [v12 removeObject:v21];

    if (v20 == 4)
    {
      int v22 = &unk_1EEBEE9A0;
    }
    else
    {
      if (v20 != 5)
      {
LABEL_9:
        uint64_t v23 = [(PLManagedAsset *)self pathForCPLResourceType:v20 adjusted:0];
        if (([v89 fileExistsAtPath:v23] & 1) == 0)
        {
          uint64_t v94 = [v23 stringByDeletingLastPathComponent];
          if (([v89 fileExistsAtPath:v94] & 1) == 0)
          {
            id v110 = 0;
            char v24 = [MEMORY[0x1E4F8B908] createDirectoryAtPath:v94 error:&v110 usingFileManager:v89];
            id v25 = v110;
            if (*MEMORY[0x1E4F59AC0]) {
              char v26 = 1;
            }
            else {
              char v26 = v24;
            }
            if ((v26 & 1) == 0)
            {
              double v27 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)CMTime buf = 138412546;
                BOOL v117 = v23;
                __int16 v118 = 2112;
                id v119 = v25;
                _os_log_impl(&dword_19B3C7000, v27, OS_LOG_TYPE_ERROR, "Unable to create parent directory of fullsize derivative %@.Error: %@", buf, 0x16u);
              }
            }
          }
          id v28 = [*(id *)(*(void *)&v122[8] + 40) identity];
          char v29 = [v28 fileURL];

          double v30 = [v87 pathManager];
          BOOL v31 = [v30 capabilities];

          int v32 = (void *)MEMORY[0x1E4F8B908];
          char v33 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v23 isDirectory:0];
          id v109 = 0;
          char v34 = [v32 secureMoveItemAtURL:v29 toURL:v33 capabilities:v31 error:&v109];
          id v35 = v109;

          if (*MEMORY[0x1E4F59AC0]) {
            char v36 = 1;
          }
          else {
            char v36 = v34;
          }
          if ((v36 & 1) == 0)
          {
            id v37 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)CMTime buf = 138412802;
              BOOL v117 = v29;
              __int16 v118 = 2112;
              id v119 = v23;
              __int16 v120 = 2112;
              id v121 = v35;
              _os_log_impl(&dword_19B3C7000, v37, OS_LOG_TYPE_ERROR, "Failed to secure move fullsize derivative from %@ to %@.Error: %@", buf, 0x20u);
            }
          }
        }
        if ([v89 fileExistsAtPath:v23])
        {
          double v38 = [(id)*MEMORY[0x1E4F44410] identifier];
          unint64_t v39 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v23 withResourceType:v20 uniformTypeIdentifier:v38 scopedIdentifier:v88 fingerprintScheme:v101];

          if (v39)
          {
            [v39 setDeleteAfterUpload:1];
            [v98 addObject:v39];
          }
          else if (!*MEMORY[0x1E4F59AC0])
          {
            id v40 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)CMTime buf = 138412290;
              BOOL v117 = v23;
              _os_log_impl(&dword_19B3C7000, v40, OS_LOG_TYPE_ERROR, "Unable to create CPL resource from %@", buf, 0xCu);
            }
          }
        }

        goto LABEL_36;
      }
      [v12 removeObject:&unk_1EEBEE9A0];
      int v22 = &unk_1EEBEE9B8;
    }
    [v12 removeObject:v22];
    goto LABEL_9;
  }
  uint64_t v23 = obj;
LABEL_36:
  uint64_t v41 = [(PLManagedAsset *)self _createJPEGResourcesFromFullSizePath:v23 withScopedIdentifier:v88 forMaster:1 forResourceTypes:v12 fingerprintScheme:v101];
  [v98 addObjectsFromArray:v41];

  _Block_object_dispose(v122, 8);
LABEL_37:
  id obja = [(PLManagedAsset *)self allMasterCPLResources];
  long long v107 = 0u;
  long long v108 = 0u;
  long long v105 = 0u;
  long long v106 = 0u;
  uint64_t v42 = [obja countByEnumeratingWithState:&v105 objects:v115 count:16];
  if (!v42) {
    goto LABEL_75;
  }
  uint64_t v43 = *(void *)v106;
  int v96 = !v95;
  do
  {
    uint64_t v44 = 0;
    do
    {
      if (*(void *)v106 != v43) {
        objc_enumerationMutation(obja);
      }
      double v45 = *(void **)(*((void *)&v105 + 1) + 8 * v44);
      unint64_t v46 = [v45 cplType];
      if (v46 <= 0x18)
      {
        if (((1 << v46) & 0x1860104) != 0) {
          goto LABEL_44;
        }
        if (v46 == 22)
        {
          __int16 v59 = [v45 uniformTypeIdentifier];
          int v60 = [v59 identifier];
          id v61 = [MEMORY[0x1E4F8CDF8] supplementalResourceAAEType];
          uint64_t v62 = [v61 identifier];
          int v63 = [v60 isEqualToString:v62];

          if (v63)
          {
LABEL_44:
            id v47 = v45;
            id v48 = [v47 cplFileURL];
            id v104 = 0;
            dispatch_semaphore_t v49 = [v101 fingerPrintForFileAtURL:v48 error:&v104];
            id v50 = (uint64_t (*)(uint64_t, uint64_t))v104;

            if (v49)
            {
              [v47 setFingerprint:v49];
              goto LABEL_51;
            }
            if (!*MEMORY[0x1E4F59AC0])
            {
              uint64_t v51 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
              {
                id v52 = [v47 fileURL];
                uint32_t v53 = [v52 path];
                id v54 = [(PLManagedAsset *)self scopedIdentifier];
                *(_DWORD *)__int16 v122 = 138412802;
                *(void *)&v122[4] = v53;
                *(_WORD *)&v122[12] = 2112;
                *(void *)&v122[14] = v54;
                *(_WORD *)&v122[22] = 2112;
                id v123 = v50;
                _os_log_impl(&dword_19B3C7000, v51, OS_LOG_TYPE_ERROR, "Failed to generate fingerprint for path %@ uuid %@. Error: %@", v122, 0x20u);
              }
            }
            if ([v47 isCPLOriginalResourceAssetHasAdjustments:0])
            {
LABEL_51:
              __int16 v55 = [v47 cplResourceIncludeFile:1];
              if (v55)
              {
                if (!*MEMORY[0x1E4F59AC0])
                {
                  double v56 = __CPLAssetsdOSLogDomain();
                  if (os_log_type_enabled(v56, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)__int16 v122 = 138412290;
                    *(void *)&v122[4] = v55;
                    _os_log_impl(&dword_19B3C7000, v56, OS_LOG_TYPE_DEBUG, "Created master resource %@", v122, 0xCu);
                  }
                }
                [v47 setRemoteAvailability:1];
                [v98 addObject:v55];
                if ([v47 cplType] == 18 && ((PLIsEDUMode() | v96) & 1) == 0)
                {
                  __int16 v57 = [(PLManagedAsset *)self _videoComplementDerivativeResourcesForMaster:v93];
                  [v98 addObjectsFromArray:v57];
                  goto LABEL_62;
                }
              }
              else if (!*MEMORY[0x1E4F59AC0])
              {
                __int16 v57 = __CPLAssetsdOSLogDomain();
                if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
                {
                  int v58 = [(PLManagedAsset *)self scopedIdentifier];
                  *(_DWORD *)__int16 v122 = 138412546;
                  *(void *)&v122[4] = v47;
                  *(_WORD *)&v122[12] = 2112;
                  *(void *)&v122[14] = v58;
                  _os_log_impl(&dword_19B3C7000, v57, OS_LOG_TYPE_ERROR, "Unable to create CPLResource from %@ with itemIdentifier %@", v122, 0x16u);
                }
LABEL_62:
              }
LABEL_64:
            }
            else if (!*MEMORY[0x1E4F59AC0])
            {
              dispatch_semaphore_t v49 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
              {
                id v64 = objc_msgSend(MEMORY[0x1E4F59940], "shortDescriptionForResourceType:", objc_msgSend(v47, "cplType"));
                id v65 = [v93 scopedIdentifier];
                *(_DWORD *)__int16 v122 = 138543618;
                *(void *)&v122[4] = v64;
                *(_WORD *)&v122[12] = 2112;
                *(void *)&v122[14] = v65;
                _os_log_impl(&dword_19B3C7000, v49, OS_LOG_TYPE_ERROR, "Not adding resource of type: %{public}@ to master change identifier %@", v122, 0x16u);
              }
              goto LABEL_64;
            }
          }
        }
      }
      ++v44;
    }
    while (v42 != v44);
    uint64_t v66 = [obja countByEnumeratingWithState:&v105 objects:v115 count:16];
    uint64_t v42 = v66;
  }
  while (v66);
LABEL_75:
  id v67 = [(PLManagedAsset *)self imageMediaMetadataForURL:v90];
  long long v68 = v67;
  if (v67)
  {
    unint64_t v69 = [v67 length];
    if (v69 > [MEMORY[0x1E4F59910] maxInlineDataSize])
    {
      long long v70 = (unsigned char *)MEMORY[0x1E4F59AC0];
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v71 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
        {
          unint64_t v72 = [(NSManagedObject *)self pl_shortDescription];
          *(_DWORD *)__int16 v122 = 138412290;
          *(void *)&v122[4] = v72;
          _os_log_impl(&dword_19B3C7000, v71, OS_LOG_TYPE_DEFAULT, "Creating overflow image properties resource for asset %@", v122, 0xCu);
        }
      }
      __int16 v73 = [(PLManagedAsset *)self pathForMediaMetadataFile];
      id v103 = 0;
      __int16 v74 = [v73 stringByDeletingLastPathComponent];
      __int16 v75 = (void *)MEMORY[0x1E4F8B908];
      __int16 v76 = [MEMORY[0x1E4F28CB8] defaultManager];
      LODWORD(v75) = [v75 createDirectoryAtPath:v74 error:&v103 usingFileManager:v76];

      id v77 = v103;
      unint64_t v78 = v77;
      if (v75)
      {
        id v102 = v77;
        int v79 = [v68 writeToFile:v73 options:1 error:&v102];
        id v80 = (uint64_t (*)(uint64_t, uint64_t))v102;

        if (v79)
        {
          id v81 = [(id)*MEMORY[0x1E4F44378] identifier];
          uint64_t v82 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v73 withResourceType:10 uniformTypeIdentifier:v81 scopedIdentifier:v88 fingerprintScheme:v101];

          if (v82)
          {
            [v82 setDeleteAfterUpload:1];
            [v98 addObject:v82];
            goto LABEL_96;
          }
          if (!*v70)
          {
            uint64_t v82 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)__int16 v122 = 138412290;
              *(void *)&v122[4] = v88;
              uint64_t v83 = "Unable to create CPL resource for image properties data for asset %@";
              unsigned int v84 = v82;
              uint32_t v85 = 12;
LABEL_95:
              _os_log_impl(&dword_19B3C7000, v84, OS_LOG_TYPE_ERROR, v83, v122, v85);
            }
            goto LABEL_96;
          }
        }
        else if (!*v70)
        {
          uint64_t v82 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__int16 v122 = 138412802;
            *(void *)&v122[4] = v68;
            *(_WORD *)&v122[12] = 2112;
            *(void *)&v122[14] = v73;
            *(_WORD *)&v122[22] = 2112;
            id v123 = v80;
            uint64_t v83 = "Failed to save image properties data %@ to %@. Error: %@";
            unsigned int v84 = v82;
            uint32_t v85 = 32;
            goto LABEL_95;
          }
LABEL_96:
        }
      }
      else
      {
        if (!*v70)
        {
          uint64_t v82 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__int16 v122 = 138412546;
            *(void *)&v122[4] = v73;
            *(_WORD *)&v122[12] = 2112;
            *(void *)&v122[14] = v78;
            _os_log_impl(&dword_19B3C7000, v82, OS_LOG_TYPE_ERROR, "Failed to create intermediate directory for %@. Error: %@", v122, 0x16u);
          }
          id v80 = (uint64_t (*)(uint64_t, uint64_t))v78;
          goto LABEL_96;
        }
        id v80 = (uint64_t (*)(uint64_t, uint64_t))v77;
      }
    }
    uint64_t v86 = [v93 mediaMetadata];
    [v86 setValue:v68 forKey:@"data"];

    [v93 setMediaMetadataType:@"CGImageProperties"];
  }
}

void __136__PLManagedAsset_CPL___createPhotoResourcesForMaster_withOriginalResource_intoMasterResources_shouldGenerateDerivatives_inPhotoLibrary___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  id v7 = a3;
  if (v7)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v8 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v9 = *(void *)(a1 + 32);
        int v10 = 138412546;
        uint64_t v11 = v9;
        __int16 v12 = 2112;
        id v13 = v7;
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "Failed to generate full size JPEG from %@: %@", (uint8_t *)&v10, 0x16u);
      }
    }
  }
  else
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

- (void)setupPropertiesOnNewCloudMaster:(id)a3 withPlaceholderSourceAsset:(id)a4 uniformTypeIdentifier:(id)a5
{
  id v23 = a3;
  id v8 = (PLManagedAsset *)a4;
  id v9 = a5;
  if (v8) {
    int v10 = v8;
  }
  else {
    int v10 = self;
  }
  uint64_t v11 = v10;
  __int16 v12 = [(PLManagedAsset *)v11 dateCreated];
  [v23 setCreationDate:v12];

  id v13 = [(PLManagedAsset *)v11 addedDate];
  [v23 setImportDate:v13];

  if (v9) {
    [v23 setUniformTypeIdentifier:v9];
  }
  objc_msgSend(v23, "setOriginalOrientation:", -[PLManagedAsset originalOrientation](v11, "originalOrientation"));
  uint64_t v14 = [(PLManagedAsset *)v11 originalFilename];

  if (v14)
  {
    id v15 = [(PLManagedAsset *)v11 originalFilename];
    [v23 setOriginalFilename:v15];
  }
  id v16 = [(PLManagedAsset *)v11 additionalAttributes];
  uint64_t v17 = [v16 originatingAssetIdentifier];
  [v23 setOriginatingAssetIdentifier:v17];

  uint64_t v18 = [(PLManagedAsset *)self additionalAttributes];
  objc_msgSend(v23, "setImportedBy:", objc_msgSend(v18, "importedBy"));

  uint64_t v19 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v20 = [v19 importedByBundleIdentifier];
  [v23 setImportedByBundleIdentifier:v20];

  long long v21 = [(PLManagedAsset *)self additionalAttributes];
  int v22 = [v21 importedByDisplayName];
  [v23 setImportedByDisplayName:v22];
}

- (void)setupPropertiesOnExistingMaster:(id)a3
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  BOOL v5 = [(PLManagedAsset *)self managedObjectContext];
  [(PLManagedAsset *)self rm_createNewResourcesIn:v4 inManagedObjectContext:v5];

  [(PLManagedAsset *)self setMaster:v4];
  uint64_t v6 = [v4 originalFilename];
  if (v6)
  {
    id v7 = (void *)v6;
    id v8 = [(PLManagedAsset *)self originalFilename];
    id v9 = [v4 originalFilename];
    char v10 = [v8 isEqualToString:v9];

    if ((v10 & 1) == 0)
    {
      uint64_t v11 = [v4 originalFilename];
      [(PLManagedAsset *)self setOriginalFilename:v11];
    }
  }
  uint64_t v12 = [(PLManagedAsset *)self importedByBundleIdentifier];
  if (v12)
  {
    id v13 = (void *)v12;
    uint64_t v14 = [v4 importedByBundleIdentifier];
    id v15 = [(PLManagedAsset *)self importedByBundleIdentifier];
    char v16 = [v14 isEqualToString:v15];

    if ((v16 & 1) == 0)
    {
      uint64_t v17 = [(PLManagedAsset *)self importedByBundleIdentifier];
      [v4 updateImportedByBundleIdentifier:v17];
    }
  }
  uint64_t v18 = [(PLManagedAsset *)self importedByDisplayName];
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    uint64_t v20 = [v4 importedByDisplayName];
    long long v21 = [(PLManagedAsset *)self importedByDisplayName];
    char v22 = [v20 isEqualToString:v21];

    if ((v22 & 1) == 0)
    {
      id v23 = [(PLManagedAsset *)self importedByDisplayName];
      [v4 updateImportedByDisplayName:v23];
    }
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    char v24 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      int v25 = 138412546;
      id v26 = v4;
      __int16 v27 = 2112;
      id v28 = self;
      _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_DEFAULT, "Found an existing cloud master %@ for %@", (uint8_t *)&v25, 0x16u);
    }
  }
}

- (void)createMasterIfNecessaryInLibrary:(id)a3
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  BOOL v5 = [(PLManagedAsset *)self master];
  if (!v5
    && ![(PLManagedAsset *)self isTimelapsePlaceholder]
    && [(PLManagedAsset *)self complete]
    && ![(PLManagedAsset *)self isPhotoIrisPlaceholder]
    && ![(PLManagedAsset *)self isPlaceholderAsset])
  {
    id v8 = [(PLManagedAsset *)self mainFileURL];
    if ([(PLManagedAsset *)self hasAdjustments]) {
      [(PLManagedAsset *)self nonDynamicOriginalUTI];
    }
    else {
    id v9 = [(PLManagedAsset *)self uniformTypeIdentifier];
    }
    char v10 = [(PLManagedAsset *)self fingerprintContext];
    uint64_t v11 = [v10 fingerprintSchemeForNewMasterAsset];

    id v27 = 0;
    uint64_t v12 = [v11 fingerPrintForFileAtURL:v8 error:&v27];
    id v13 = v27;
    uint64_t v6 = v13;
    if (!v12 || v13)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        uint64_t v18 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)CMTime buf = 138412546;
          uint64_t v29 = v8;
          __int16 v30 = 2112;
          BOOL v31 = v6;
          _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_ERROR, "CreateMaster: Failed to generate finger print for %@. Error: %@", buf, 0x16u);
        }
      }
      [(PLManagedAsset *)self setCloudLocalState:2];
      BOOL v5 = 0;
    }
    else
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        uint64_t v14 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)CMTime buf = 138412290;
          uint64_t v29 = v12;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_DEBUG, "Master asset finger print %@", buf, 0xCu);
        }
      }
      id v26 = v8;
      id v15 = v9;
      char v16 = [(PLManagedAsset *)self momentShare];
      uint64_t v17 = [(PLManagedAsset *)self managedObjectContext];
      BOOL v5 = +[PLCloudMaster cloudMasterWithGUID:v12 inMomentShare:v16 prefetchResources:0 inManagedObjectContext:v17];

      if (v5)
      {
        [(PLManagedAsset *)self setupPropertiesOnExistingMaster:v5];
        id v8 = v26;
      }
      else
      {
        int v25 = [(PLManagedAsset *)self momentShare];
        BOOL v5 = +[PLCloudMaster insertIntoPhotoLibrary:withCloudMasterGUID:inMomentShare:](PLCloudMaster, "insertIntoPhotoLibrary:withCloudMasterGUID:inMomentShare:", v4, v12);
        [(PLManagedAsset *)self setupPropertiesOnNewCloudMaster:v5 withPlaceholderSourceAsset:0 uniformTypeIdentifier:v9];
        [(PLManagedAsset *)self setMaster:v5];
        uint64_t v19 = [(PLManagedAsset *)v26 path];
        uint64_t v20 = [v5 scopedIdentifier];
        long long v21 = [(PLManagedAsset *)self _createCPLResourceFromResourcePath:v19 withResourceType:1 uniformTypeIdentifier:v15 scopedIdentifier:v20 fingerprintScheme:v11];

        if (v21)
        {
          id v22 = [(PLManagedAsset *)self storedResourceForCPLResource:v21 asset:self adjusted:0];
          id v9 = v15;
          id v8 = v26;
          if ([(PLManagedAsset *)self shouldSimulateQuarantineOriginalImageResourceOnPush])
          {
            [(PLManagedAsset *)self simulateQuarantineOriginalImageResourceOnPush:v21];
          }
        }
        else
        {
          id v9 = v15;
          id v8 = v26;
          if (!*MEMORY[0x1E4F59AC0])
          {
            id v23 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)CMTime buf = 138412290;
              uint64_t v29 = self;
              _os_log_impl(&dword_19B3C7000, v23, OS_LOG_TYPE_ERROR, "CreateMaster: Can't create CPLResource for originalResource for asset %@", buf, 0xCu);
            }
          }
          [(PLManagedAsset *)self setCloudLocalState:2];
        }
      }
      char v24 = [(PLManagedAsset *)self additionalAttributes];
      [v24 setOriginalStableHash:v12];
    }
    goto LABEL_9;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v6 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [(PLManagedAsset *)self uuid];
      *(_DWORD *)CMTime buf = 138412290;
      uint64_t v29 = v7;
      _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_DEFAULT, "Skipping creating master for asset: %@", buf, 0xCu);
    }
LABEL_9:
  }
}

- (id)existingCloudMasterNeedsRepush:(BOOL *)a3
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = [(PLManagedAsset *)self master];
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    BOOL v7 = 0;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v9 = [(PLManagedAsset *)self mainFileURL];
  char v10 = [(PLManagedAsset *)self fingerprintContext];
  uint64_t v11 = [v10 fingerprintSchemeForNewMasterAsset];
  id v39 = 0;
  uint64_t v12 = [v11 fingerPrintForFileAtURL:v9 error:&v39];
  id v13 = v39;

  BOOL v7 = 0;
  uint64_t v6 = 0;
  if (v12 && !v13)
  {
    uint64_t v14 = [(PLManagedAsset *)self momentShare];
    id v15 = [(PLManagedAsset *)self managedObjectContext];
    uint64_t v6 = +[PLCloudMaster cloudMasterWithGUID:v12 inMomentShare:v14 prefetchResources:0 inManagedObjectContext:v15];

    if (v6)
    {
      char v16 = [(PLManagedAsset *)self managedObjectContext];
      [(PLManagedAsset *)self rm_createNewResourcesIn:v6 inManagedObjectContext:v16];

      [(PLManagedAsset *)self setMaster:v6];
      uint64_t v17 = [v6 originalFilename];
      if (v17)
      {
        uint64_t v18 = (void *)v17;
        uint64_t v19 = [(PLManagedAsset *)self originalFilename];
        uint64_t v20 = [v6 originalFilename];
        char v21 = [v19 isEqualToString:v20];

        if ((v21 & 1) == 0)
        {
          id v22 = [v6 originalFilename];
          [(PLManagedAsset *)self setOriginalFilename:v22];
        }
      }
      uint64_t v23 = [(PLManagedAsset *)self importedByBundleIdentifier];
      if (!v23) {
        goto LABEL_15;
      }
      char v24 = (void *)v23;
      int v25 = [v6 importedByBundleIdentifier];
      id v26 = [(PLManagedAsset *)self importedByBundleIdentifier];
      char v27 = [v25 isEqualToString:v26];

      if ((v27 & 1) == 0)
      {
        uint64_t v29 = [(PLManagedAsset *)self importedByBundleIdentifier];
        [v6 updateImportedByBundleIdentifier:v29];

        int v28 = 1;
      }
      else
      {
LABEL_15:
        int v28 = 0;
      }
      uint64_t v30 = [(PLManagedAsset *)self importedByDisplayName];
      if (v30)
      {
        BOOL v31 = (void *)v30;
        uint64_t v32 = [v6 importedByDisplayName];
        char v33 = [(PLManagedAsset *)self importedByDisplayName];
        char v34 = [v32 isEqualToString:v33];

        if ((v34 & 1) == 0)
        {
          id v35 = [(PLManagedAsset *)self importedByDisplayName];
          [v6 updateImportedByDisplayName:v35];

          int v28 = 1;
        }
      }
      BOOL v7 = v28 != 0;
      if (*MEMORY[0x1E4F59AC0])
      {
        id v13 = v38;
      }
      else
      {
        char v36 = __CPLAssetsdOSLogDomain();
        id v13 = v38;
        if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)CMTime buf = 138412546;
          uint64_t v41 = v6;
          __int16 v42 = 2112;
          uint64_t v43 = self;
          _os_log_impl(&dword_19B3C7000, v36, OS_LOG_TYPE_DEFAULT, "Found an existing cloud master %@ for %@", buf, 0x16u);
        }
      }
    }
    else
    {
      BOOL v7 = 0;
    }
    id v37 = [(PLManagedAsset *)self additionalAttributes];
    [v37 setOriginalStableHash:v12];
  }
  if (a3) {
LABEL_3:
  }
    *a3 = v7;
LABEL_4:
  return v6;
}

- (void)incrementUploadAttempts
{
  uint64_t v3 = (__int16)([(PLManagedAsset *)self uploadAttempts] + 1);
  [(PLManagedAsset *)self setUploadAttempts:v3];
}

- (void)setUploadAttempts:(signed __int16)a3
{
  uint64_t v3 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [NSNumber numberWithShort:v3];
  [v5 setUploadAttempts:v4];
}

- (signed)uploadAttempts
{
  int v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 uploadAttempts];
  signed __int16 v4 = [v3 shortValue];

  return v4;
}

- (void)setLastUploadAttemptDate:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setLastUploadAttemptDate:v4];
}

- (id)lastUploadAttemptDate
{
  int v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 lastUploadAttemptDate];

  return v3;
}

- (void)setOriginalResourceChoice:(unint64_t)a3
{
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [NSNumber numberWithUnsignedInteger:a3];
  [v5 setOriginalResourceChoice:v4];
}

- (unint64_t)originalResourceChoice
{
  int v2 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v3 = [v2 originalResourceChoice];
  unint64_t v4 = (int)[v3 shortValue];

  return v4;
}

+ (id)_placeAnnotationFromAnnotationData:(id)a3
{
  if (a3)
  {
    uint64_t v3 = [MEMORY[0x1E4F28F98] propertyListWithData:a3 options:0 format:0 error:0];
    if (v3)
    {
      id v4 = objc_alloc_init(MEMORY[0x1E4F59900]);
      id v5 = [v3 objectForKey:@"level"];
      [v4 setPlaceLevel:v5];

      uint64_t v6 = [v3 objectForKey:@"name"];
      [v4 setPlaceName:v6];
    }
    else
    {
      id v4 = 0;
    }
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

+ (id)_dataFromCPLPlaceAnnotation:(id)a3
{
  id v3 = a3;
  if (v3)
  {
    id v4 = [MEMORY[0x1E4F1CA60] dictionary];
    id v5 = [v3 placeName];

    if (v5)
    {
      uint64_t v6 = [v3 placeName];
      [v4 setObject:v6 forKey:@"name"];
    }
    BOOL v7 = [v3 placeLevel];

    if (v7)
    {
      id v8 = [v3 placeLevel];
      [v4 setObject:v8 forKey:@"level"];
    }
    id v9 = [MEMORY[0x1E4F28F98] dataWithPropertyList:v4 format:200 options:0 error:0];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

+ (id)quarantinedAssetsInLibrary:(id)a3
{
  id v3 = (void *)MEMORY[0x1E4F1C0D0];
  id v4 = a3;
  id v5 = +[PLManagedAsset entityName];
  uint64_t v6 = [v3 fetchRequestWithEntityName:v5];

  BOOL v7 = +[PLManagedAsset predicateForUploadableAssetsWithCloudLocalState:4];
  [v6 setPredicate:v7];

  id v8 = [v4 managedObjectContext];

  uint64_t v11 = 0;
  id v9 = [v8 executeFetchRequest:v6 error:&v11];

  return v9;
}

+ (id)failedToPushAssetInLibrary:(id)a3
{
  id v3 = (void *)MEMORY[0x1E4F1C0D0];
  id v4 = a3;
  id v5 = +[PLManagedAsset entityName];
  uint64_t v6 = [v3 fetchRequestWithEntityName:v5];

  BOOL v7 = +[PLManagedAsset predicateForUploadableAssetsWithCloudLocalState:2];
  [v6 setPredicate:v7];

  id v8 = [v4 managedObjectContext];

  uint64_t v11 = 0;
  id v9 = [v8 executeFetchRequest:v6 error:&v11];

  return v9;
}

+ (id)toUploadAssetsInLibrary:(id)a3
{
  id v3 = (void *)MEMORY[0x1E4F1C0D0];
  id v4 = a3;
  id v5 = +[PLManagedAsset entityName];
  uint64_t v6 = [v3 fetchRequestWithEntityName:v5];

  BOOL v7 = +[PLManagedAsset predicateForUploadableAssetsWithMasterCloudLocalStateNotEqualTo:3];
  [v6 setPredicate:v7];

  id v8 = [v4 managedObjectContext];

  uint64_t v11 = 0;
  id v9 = [v8 executeFetchRequest:v6 error:&v11];

  return v9;
}

+ (void)resetAssetsCloudStateInLibrary:(id)a3
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = (void *)MEMORY[0x19F38D3B0]();
  id v5 = (unsigned char *)MEMORY[0x1E4F59AC0];
  if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v6 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)CMTime buf = 0;
      _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_DEFAULT, "Resetting cloudLocalState of assets", buf, 2u);
    }
  }
  id v7 = objc_alloc(MEMORY[0x1E4F1C038]);
  id v8 = +[PLManagedAsset entityName];
  id v9 = (void *)[v7 initWithEntityName:v8];

  char v10 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(cloudLocalState != %d)", 0);
  [v9 setPredicate:v10];
  [v9 setResultType:2];
  [v9 setPropertiesToUpdate:&unk_1EEBF2978];
  uint64_t v11 = [v3 managedObjectContext];
  id v28 = 0;
  uint64_t v12 = [v11 executeRequest:v9 error:&v28];
  id v13 = v28;

  if (v13)
  {
    if (*v5) {
      goto LABEL_13;
    }
    uint64_t v14 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v32 = v13;
      _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_ERROR, "Failed to batch     assets: %@", buf, 0xCu);
    }
  }
  else
  {
    if (*v5) {
      goto LABEL_13;
    }
    uint64_t v14 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = [v12 result];
      *(_DWORD *)CMTime buf = 138412290;
      id v32 = v15;
      _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_DEFAULT, "Batch updated %@ assets", buf, 0xCu);
    }
  }

LABEL_13:
  char v16 = (void *)MEMORY[0x19F38D3B0]();
  if (!*v5)
  {
    uint64_t v17 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)CMTime buf = 0;
      _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEFAULT, "Resetting uploadAttempts of assets", buf, 2u);
    }
  }
  uint64_t v18 = (void *)[objc_alloc(MEMORY[0x1E4F1C038]) initWithEntityName:@"AdditionalAssetAttributes"];
  uint64_t v19 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"lastUploadAttemptDate != nil OR uploadAttempts > 0"];
  [v18 setPredicate:v19];
  [v18 setResultType:2];
  v29[0] = @"uploadAttempts";
  v29[1] = @"lastUploadAttemptDate";
  v30[0] = &unk_1EEBEEAF0;
  uint64_t v20 = [MEMORY[0x1E4F1CA98] null];
  v30[1] = v20;
  char v21 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v30 forKeys:v29 count:2];
  [v18 setPropertiesToUpdate:v21];

  id v22 = [v3 managedObjectContext];
  id v27 = 0;
  uint64_t v23 = [v22 executeRequest:v18 error:&v27];
  id v24 = v27;

  if (v24)
  {
    if (!*v5)
    {
      int v25 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v32 = v24;
        _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_ERROR, "Failed to batch assets: %@", buf, 0xCu);
      }
LABEL_24:
    }
  }
  else if (!*v5)
  {
    int v25 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      id v26 = [v23 result];
      *(_DWORD *)CMTime buf = 138412290;
      id v32 = v26;
      _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_DEFAULT, "Batch updated %@ assets", buf, 0xCu);
    }
    goto LABEL_24;
  }
}

+ (id)assetsToRetryInLibrary:(id)a3 limit:(unint64_t)a4
{
  v35[2] = *MEMORY[0x1E4F143B8];
  id v30 = a3;
  id v28 = [v30 managedObjectContext];
  context = (void *)MEMORY[0x19F38D3B0]();
  id v5 = (void *)MEMORY[0x1E4F1C0D0];
  uint64_t v6 = +[PLManagedAsset entityName];
  id v7 = [v5 fetchRequestWithEntityName:v6];

  id v8 = [MEMORY[0x1E4F1C9C8] date];
  id v9 = [v8 dateByAddingTimeInterval:-86400.0];

  char v10 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"cloudLocalState == %d AND additionalAttributes.lastUploadAttemptDate != nil AND additionalAttributes.lastUploadAttemptDate < %@ AND additionalAttributes.uploadAttempts > 1", 0, v9];
  uint64_t v11 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v12 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"momentShare == nil"];
  v35[0] = v12;
  id v13 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"momentShare.shareURL != nil"];
  v35[1] = v13;
  uint64_t v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v35 count:2];
  id v15 = [v11 orPredicateWithSubpredicates:v14];

  char v16 = (void *)MEMORY[0x1E4F28BA0];
  v34[0] = v10;
  uint64_t v17 = +[PLManagedAsset _syncablePredicate];
  v34[1] = v17;
  uint64_t v18 = [a1 predicateForSupportedAssetTypesForUpload];
  void v34[2] = v18;
  v34[3] = v15;
  uint64_t v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:v34 count:4];
  uint64_t v20 = [v16 andPredicateWithSubpredicates:v19];

  char v21 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"dateCreated" ascending:0];
  v33[0] = v21;
  id v22 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"additionalAttributes.uploadAttempts" ascending:1];
  v33[1] = v22;
  uint64_t v23 = [MEMORY[0x1E4F1C978] arrayWithObjects:v33 count:2];
  [v7 setSortDescriptors:v23];

  id v32 = @"additionalAttributes";
  id v24 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v32 count:1];
  [v7 setRelationshipKeyPathsForPrefetching:v24];

  [v7 setPredicate:v20];
  [v7 setFetchLimit:vcvtpd_u64_f64((double)(a4 >> 1) + 0.5)];
  uint64_t v31 = 0;
  int v25 = [v28 executeFetchRequest:v7 error:&v31];

  return v25;
}

+ (id)_notPushedAssetsToUploadInitiallyInManagedObjectContext:(id)a3 withSavedAssetTypePredicate:(id)a4 shouldSort:(BOOL)a5 limit:(unint64_t)a6
{
  BOOL v6 = a5;
  v30[4] = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  context = (void *)MEMORY[0x19F38D3B0]();
  uint64_t v11 = (void *)MEMORY[0x1E4F1C0D0];
  uint64_t v12 = +[PLManagedAsset entityName];
  id v13 = [v11 fetchRequestWithEntityName:v12];

  uint64_t v14 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"cloudLocalState == %d AND additionalAttributes.uploadAttempts <= 1", 0);
  id v15 = [a1 _predicateForTrashedAssetsToExcludeInInitialUpload];
  char v16 = (void *)MEMORY[0x1E4F28BA0];
  v30[0] = v10;
  v30[1] = v14;
  uint64_t v17 = +[PLManagedAsset _syncablePredicate];
  void v30[2] = v17;
  v30[3] = v15;
  uint64_t v18 = [MEMORY[0x1E4F1C978] arrayWithObjects:v30 count:4];
  uint64_t v19 = [v16 andPredicateWithSubpredicates:v18];

  if (v6)
  {
    uint64_t v20 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"dateCreated" ascending:0];
    uint64_t v29 = v20;
    char v21 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v29 count:1];
    [v13 setSortDescriptors:v21];
  }
  id v28 = @"additionalAttributes";
  id v22 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v28 count:1];
  [v13 setRelationshipKeyPathsForPrefetching:v22];

  [v13 setPredicate:v19];
  [v13 setFetchLimit:vcvtpd_u64_f64((double)(a6 >> 1) + 0.5)];
  uint64_t v27 = 0;
  uint64_t v23 = [v9 executeFetchRequest:v13 error:&v27];

  return v23;
}

+ (id)assetsToUploadInitiallyInManagedObjectContext:(id)a3 limit:(unint64_t)a4
{
  v23[2] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = [a1 predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders];
  id v8 = [a1 _notPushedAssetsToUploadInitiallyInManagedObjectContext:v6 withSavedAssetTypePredicate:v7 shouldSort:1 limit:a4];
  if (![v8 count])
  {
    id v9 = (void *)MEMORY[0x1E4F28BA0];
    id v10 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForMomentSharedAsset"), 1);
    v23[0] = v10;
    uint64_t v11 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != nil", @"momentShare.shareURL");
    v23[1] = v11;
    uint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v23 count:2];
    id v13 = [v9 andPredicateWithSubpredicates:v12];

    uint64_t v14 = [a1 _notPushedAssetsToUploadInitiallyInManagedObjectContext:v6 withSavedAssetTypePredicate:v13 shouldSort:0 limit:a4];

    if (![v14 count])
    {
      id v15 = (void *)MEMORY[0x1E4F28BA0];
      char v16 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForPlaceholderAsset"), 1);
      uint64_t v17 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(%K == nil || %K != nil) && %K != nil", @"momentShare", @"momentShare.shareURL", @"master", v16);
      v22[1] = v17;
      uint64_t v18 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:2];
      uint64_t v19 = [v15 andPredicateWithSubpredicates:v18];

      uint64_t v20 = [a1 _notPushedAssetsToUploadInitiallyInManagedObjectContext:v6 withSavedAssetTypePredicate:v19 shouldSort:0 limit:a4];

      uint64_t v14 = (void *)v20;
    }

    id v8 = v14;
  }

  return v8;
}

+ (id)_predicateForTrashedAssetsToExcludeInInitialUpload
{
  if (_predicateForTrashedAssetsToExcludeInInitialUpload_onceToken != -1) {
    dispatch_once(&_predicateForTrashedAssetsToExcludeInInitialUpload_onceToken, &__block_literal_global_527);
  }
  int v2 = (void *)_predicateForTrashedAssetsToExcludeInInitialUpload_normalOrNeverPushedAssetPredicate;
  return v2;
}

void __73__PLManagedAsset_CPL___predicateForTrashedAssetsToExcludeInInitialUpload__block_invoke()
{
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %d OR %K == nil", @"trashedState", 0, @"cloudAssetGUID");
  uint64_t v1 = (void *)_predicateForTrashedAssetsToExcludeInInitialUpload_normalOrNeverPushedAssetPredicate;
  _predicateForTrashedAssetsToExcludeInInitialUpload_normalOrNeverPushedAssetPredicate = v0;
}

+ (id)predicateForUnpushedDeferredAssets
{
  if (predicateForUnpushedDeferredAssets_onceToken != -1) {
    dispatch_once(&predicateForUnpushedDeferredAssets_onceToken, &__block_literal_global_513_51392);
  }
  int v2 = (void *)predicateForUnpushedDeferredAssets_predicate;
  return v2;
}

void __57__PLManagedAsset_CPL__predicateForUnpushedDeferredAssets__block_invoke()
{
  void v9[5] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v1 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %d", @"cloudLocalState", 0);
  v9[0] = v1;
  int v2 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) != 0", @"complete");
  v9[1] = v2;
  id v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(noindex:(%K) != %d AND noindex:(%K) != %d) OR noindex:(%K) != %d", @"deferredProcessingNeeded", 0, @"deferredProcessingNeeded", 11, @"videoDeferredProcessingNeeded", 0);
  void v9[2] = v3;
  id v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) < %llu", @"additionalAttributes.cloudRecoveryState", 0x80000000);
  void v9[3] = v4;
  id v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) == %d", @"trashedState", 0);
  v9[4] = v5;
  id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:5];
  uint64_t v7 = [v0 andPredicateWithSubpredicates:v6];
  id v8 = (void *)predicateForUnpushedDeferredAssets_predicate;
  predicateForUnpushedDeferredAssets_predicate = v7;
}

+ (id)_syncablePredicate
{
  if (_syncablePredicate_onceToken_51415 != -1) {
    dispatch_once(&_syncablePredicate_onceToken_51415, &__block_literal_global_505);
  }
  int v2 = (void *)_syncablePredicate_predicate_51416;
  return v2;
}

void __41__PLManagedAsset_CPL___syncablePredicate__block_invoke()
{
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) != 0 AND (noindex:(%K) == %d OR noindex:(%K) == %d) AND noindex:(%K) == %d", @"complete", @"deferredProcessingNeeded", 0, @"deferredProcessingNeeded", 11, @"videoDeferredProcessingNeeded", 0);
  uint64_t v1 = (void *)_syncablePredicate_predicate_51416;
  _syncablePredicate_predicate_51416 = v0;
}

+ (unint64_t)countOfNotUploadedAssetsInPhotoLibrary:(id)a3 forAssetType:(signed __int16)a4 error:(id *)a5
{
  id v7 = a3;
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x2020000000;
  uint64_t v19 = 0;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  void v11[2] = __81__PLManagedAsset_CPL__countOfNotUploadedAssetsInPhotoLibrary_forAssetType_error___block_invoke;
  void v11[3] = &unk_1E586AFC0;
  signed __int16 v15 = a4;
  id v13 = &v16;
  id v8 = v7;
  id v12 = v8;
  uint64_t v14 = a5;
  [v8 performBlockAndWait:v11];
  unint64_t v9 = v17[3];

  _Block_object_dispose(&v16, 8);
  return v9;
}

void __81__PLManagedAsset_CPL__countOfNotUploadedAssetsInPhotoLibrary_forAssetType_error___block_invoke(uint64_t a1)
{
  v26[2] = *MEMORY[0x1E4F143B8];
  int v2 = (void *)MEMORY[0x1E4F1C0D0];
  id v3 = +[PLManagedAsset entityName];
  id v4 = [v2 fetchRequestWithEntityName:v3];

  id v5 = +[PLManagedAsset predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders];
  if (*(_WORD *)(a1 + 56)) {
    id v6 = @"%K == %d";
  }
  else {
    id v6 = @"noindex:(%K) == %d";
  }
  id v7 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", v6, @"kind", *(__int16 *)(a1 + 56));
  id v8 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == nil", @"master");
  unint64_t v9 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"master.cloudLocalState != %d", 3);
  id v10 = (void *)MEMORY[0x1E4F28BA0];
  v26[0] = v8;
  v26[1] = v9;
  uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v26 count:2];
  id v12 = [v10 orPredicateWithSubpredicates:v11];

  id v13 = (void *)MEMORY[0x1E4F28BA0];
  v25[0] = v5;
  v25[1] = v7;
  v25[2] = v12;
  uint64_t v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v25 count:3];
  signed __int16 v15 = [v13 andPredicateWithSubpredicates:v14];
  [v4 setPredicate:v15];

  uint64_t v16 = [*(id *)(a1 + 32) managedObjectContext];
  id v20 = 0;
  uint64_t v17 = [v16 countForFetchRequest:v4 error:&v20];
  id v18 = v20;
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v17;

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v19 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412546;
        id v22 = v4;
        __int16 v23 = 2112;
        id v24 = v18;
        _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_ERROR, "Error on fetch: %@, error: %@", buf, 0x16u);
      }
    }
    if (*(void *)(a1 + 48) && v18) {
      **(void **)(a1 + 48) = v18;
    }
  }
}

+ (unint64_t)iCPLAssetCountInPhotoLibrary:(id)a3
{
  id v3 = a3;
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2020000000;
  uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __52__PLManagedAsset_CPL__iCPLAssetCountInPhotoLibrary___block_invoke;
  v7[3] = &unk_1E5875E68;
  id v4 = v3;
  id v8 = v4;
  unint64_t v9 = &v10;
  [v4 performBlockAndWait:v7];
  unint64_t v5 = v11[3];

  _Block_object_dispose(&v10, 8);
  return v5;
}

void __52__PLManagedAsset_CPL__iCPLAssetCountInPhotoLibrary___block_invoke(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  int v2 = (void *)MEMORY[0x1E4F1C0D0];
  id v3 = +[PLManagedAsset entityName];
  id v4 = [v2 fetchRequestWithEntityName:v3];

  unint64_t v5 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders"), 0);
  [v4 setPredicate:v5];

  [v4 setResultType:4];
  id v6 = [*(id *)(a1 + 32) managedObjectContext];
  id v10 = 0;
  uint64_t v7 = [v6 countForFetchRequest:v4 error:&v10];
  id v8 = v10;

  if (v7 == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      unint64_t v9 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v12 = v8;
        _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_ERROR, "Failed to fetch asset count. Error: %@", buf, 0xCu);
      }
    }
  }
  else
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v7;
  }
}

+ (unint64_t)countOfDeferredAssetsToSyncInPhotoLibrary:(id)a3 outAssetList:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v15 = 0;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x2020000000;
  uint64_t v18 = 0;
  if (v7)
  {
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    v10[2] = __78__PLManagedAsset_CPL__countOfDeferredAssetsToSyncInPhotoLibrary_outAssetList___block_invoke;
    void v10[3] = &unk_1E5873DC0;
    id v14 = a1;
    id v11 = v6;
    uint64_t v13 = &v15;
    id v12 = v7;
    [v11 performBlockAndWait:v10];

    unint64_t v8 = v16[3];
  }
  else
  {
    unint64_t v8 = 0;
  }
  _Block_object_dispose(&v15, 8);

  return v8;
}

void __78__PLManagedAsset_CPL__countOfDeferredAssetsToSyncInPhotoLibrary_outAssetList___block_invoke(uint64_t a1)
{
  v25[2] = *MEMORY[0x1E4F143B8];
  int v2 = (void *)MEMORY[0x1E4F1C0D0];
  id v3 = +[PLManagedAsset entityName];
  id v4 = [v2 fetchRequestWithEntityName:v3];

  unint64_t v5 = [*(id *)(a1 + 56) predicateForUnpushedDeferredAssets];
  id v6 = (void *)MEMORY[0x1E4F28BA0];
  v25[0] = v5;
  id v7 = +[PLManagedAsset predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders];
  v25[1] = v7;
  unint64_t v8 = [MEMORY[0x1E4F1C978] arrayWithObjects:v25 count:2];
  unint64_t v9 = [v6 andPredicateWithSubpredicates:v8];

  [v4 setPredicate:v9];
  id v24 = @"uuid";
  id v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v24 count:1];
  [v4 setPropertiesToFetch:v10];

  [v4 setResultType:2];
  id v11 = [*(id *)(a1 + 32) managedObjectContext];
  id v21 = 0;
  id v12 = [v11 executeFetchRequest:v4 error:&v21];
  id v13 = v21;
  if (v12)
  {
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    void v16[2] = __78__PLManagedAsset_CPL__countOfDeferredAssetsToSyncInPhotoLibrary_outAssetList___block_invoke_2;
    v16[3] = &unk_1E586AF98;
    uint64_t v14 = *(void *)(a1 + 48);
    uint64_t v17 = @"uuid";
    uint64_t v20 = v14;
    id v18 = *(id *)(a1 + 32);
    id v19 = *(id *)(a1 + 40);
    [v12 enumerateObjectsUsingBlock:v16];

    uint64_t v15 = v17;
LABEL_6:

    goto LABEL_7;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v15 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v23 = v13;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Could not fetch the UUID of deferred assets: %@", buf, 0xCu);
    }
    goto LABEL_6;
  }
LABEL_7:
}

void __78__PLManagedAsset_CPL__countOfDeferredAssetsToSyncInPhotoLibrary_outAssetList___block_invoke_2(uint64_t a1, void *a2)
{
  id v6 = [a2 objectForKeyedSubscript:*(void *)(a1 + 32)];
  if (v6)
  {
    ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
    id v3 = objc_alloc(MEMORY[0x1E4F59968]);
    id v4 = [*(id *)(a1 + 40) mainScopeIdentifier];
    unint64_t v5 = (void *)[v3 initWithScopeIdentifier:v4 identifier:v6];

    [*(id *)(a1 + 48) addObject:v5];
  }
}

+ (unint64_t)totalSizeOfUnpushedOriginalsInPhotoLibrary:(id)a3 outMasterList:(id)a4 isInitialUpload:(BOOL)a5
{
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __96__PLManagedAsset_CPL__totalSizeOfUnpushedOriginalsInPhotoLibrary_outMasterList_isInitialUpload___block_invoke;
    void v11[3] = &unk_1E5873588;
    BOOL v15 = a5;
    id v14 = a1;
    id v12 = v8;
    id v13 = v9;
    [v12 performBlockAndWait:v11];
  }
  return 0;
}

void __96__PLManagedAsset_CPL__totalSizeOfUnpushedOriginalsInPhotoLibrary_outMasterList_isInitialUpload___block_invoke(uint64_t a1)
{
  v23[1] = *MEMORY[0x1E4F143B8];
  int v2 = (void *)MEMORY[0x1E4F1C0D0];
  id v3 = +[PLManagedAsset entityName];
  id v4 = [v2 fetchRequestWithEntityName:v3];

  unint64_t v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"cloudLocalState == %d AND complete != 0 AND master != nil AND master.placeholderState != %d AND master.cloudMasterGUID != nil AND master.cloudMasterGUID != ''", 0, 1);
  id v6 = +[PLManagedAsset predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders];
  id v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithObjects:", v5, v6, 0);
  if (*(unsigned char *)(a1 + 56))
  {
    id v8 = [*(id *)(a1 + 48) _predicateForTrashedAssetsToExcludeInInitialUpload];
    [v7 addObject:v8];
  }
  id v9 = [MEMORY[0x1E4F28BA0] andPredicateWithSubpredicates:v7];
  [v4 setPredicate:v9];
  id v10 = objc_alloc_init(MEMORY[0x1E4F1C0B8]);
  [v10 setName:@"cloudMasterGUID"];
  id v11 = [MEMORY[0x1E4F28C68] expressionForKeyPath:@"master.cloudMasterGUID"];
  [v10 setExpression:v11];

  [v10 setExpressionResultType:700];
  v23[0] = v10;
  id v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v23 count:1];
  [v4 setPropertiesToFetch:v12];

  [v4 setResultType:2];
  id v13 = [*(id *)(a1 + 32) managedObjectContext];
  id v20 = 0;
  id v14 = [v13 executeFetchRequest:v4 error:&v20];
  id v15 = v20;
  if (v14)
  {
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    v17[2] = __96__PLManagedAsset_CPL__totalSizeOfUnpushedOriginalsInPhotoLibrary_outMasterList_isInitialUpload___block_invoke_2;
    v17[3] = &unk_1E586AF70;
    id v18 = *(id *)(a1 + 32);
    id v19 = *(id *)(a1 + 40);
    [v14 enumerateObjectsUsingBlock:v17];

    uint64_t v16 = v18;
LABEL_8:

    goto LABEL_9;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v16 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v22 = v15;
      _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "Could not fetch total size of unpushed original assets: %@", buf, 0xCu);
    }
    goto LABEL_8;
  }
LABEL_9:
}

void __96__PLManagedAsset_CPL__totalSizeOfUnpushedOriginalsInPhotoLibrary_outMasterList_isInitialUpload___block_invoke_2(uint64_t a1, void *a2)
{
  id v6 = [a2 objectForKey:@"cloudMasterGUID"];
  if (v6)
  {
    id v3 = objc_alloc(MEMORY[0x1E4F59968]);
    id v4 = [*(id *)(a1 + 32) mainScopeIdentifier];
    unint64_t v5 = (void *)[v3 initWithScopeIdentifier:v4 identifier:v6];

    [*(id *)(a1 + 40) addObject:v5];
  }
}

+ (id)predicateForLocallyAvailablePrimaryStoreResourcesWithCPLResourceTypes:(id)a3 version:(unsigned int)a4
{
  return (id)[MEMORY[0x1E4F28F60] predicateWithFormat:@"SUBQUERY(%K, $resource, $resource.%K == %d AND ($resource.%K IN %@) AND $resource.%K >= %d AND $resource.%K == %d).@count > 0", @"modernResources", @"dataStoreClassID", 0, @"dataStoreSubtype", a3, @"localAvailability", 1, @"version", *(void *)&a4];
}

+ (id)predicateForAssetsToCheckForDeletionOnCPLDisable
{
  void v9[2] = *MEMORY[0x1E4F143B8];
  id v3 = (void *)MEMORY[0x1E4F28BA0];
  id v4 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForAssetsEligibleForCloudKitTransport"), 1);
  v9[0] = v4;
  unint64_t v5 = [a1 _syncablePredicate];
  v9[1] = v5;
  id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:2];
  id v7 = [v3 andPredicateWithSubpredicates:v6];

  return v7;
}

+ (id)predicateForUploadableAssetsWithoutCloudLocalState:(signed __int16)a3
{
  void v12[3] = *MEMORY[0x1E4F143B8];
  id v3 = (void *)MEMORY[0x1E4F28BA0];
  id v4 = (void *)MEMORY[0x1E4F28F60];
  unint64_t v5 = [NSNumber numberWithShort:a3];
  id v6 = [v4 predicateWithFormat:@"noindex:(%K) != %@", @"cloudLocalState", v5];
  v12[0] = v6;
  id v7 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForAssetsEligibleForCloudKitTransport"), 0);
  v12[1] = v7;
  id v8 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != %d", @"trashedState", 2);
  void v12[2] = v8;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v12 count:3];
  id v10 = [v3 andPredicateWithSubpredicates:v9];

  return v10;
}

+ (id)predicateForUploadableAssetsWithCloudLocalStates:(id)a3
{
  void v10[3] = *MEMORY[0x1E4F143B8];
  id v3 = (void *)MEMORY[0x1E4F28BA0];
  id v4 = [a1 _predicateForCloudLocalStates:a3];
  v10[0] = v4;
  unint64_t v5 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForAssetsEligibleForCloudKitTransport"), 0);
  v10[1] = v5;
  id v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"noindex:(%K) != %d", @"trashedState", 2);
  v10[2] = v6;
  id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:3];
  id v8 = [v3 andPredicateWithSubpredicates:v7];

  return v8;
}

+ (id)_predicateForCloudLocalStates:(id)a3
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  id v4 = [MEMORY[0x1E4F1CA48] array];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K == %@", @"cloudLocalState", *(void *)(*((void *)&v13 + 1) + 8 * i), (void)v13];
        [v4 addObject:v10];
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v7);
  }

  id v11 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v4];

  return v11;
}

+ (id)predicateForUploadableAssetsWithCloudLocalState:(signed __int16)a3
{
  v8[1] = *MEMORY[0x1E4F143B8];
  id v4 = [NSNumber numberWithShort:a3];
  v8[0] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:1];
  uint64_t v6 = [a1 predicateForUploadableAssetsWithCloudLocalStates:v5];

  return v6;
}

+ (id)predicateForUploadableAssetsWithMasterCloudLocalStateNotEqualTo:(signed __int16)a3
{
  void v10[3] = *MEMORY[0x1E4F143B8];
  id v3 = (void *)MEMORY[0x1E4F28BA0];
  id v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != %d && %K != %d", @"master.cloudLocalState", a3, @"master.cloudLocalState", 4);
  v10[0] = v4;
  id v5 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForAssetsEligibleForCloudKitTransport"), 1);
  v10[1] = v5;
  uint64_t v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"$K != %d", @"trashedState", 2);
  v10[2] = v6;
  uint64_t v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:3];
  uint64_t v8 = [v3 andPredicateWithSubpredicates:v7];

  return v8;
}

+ (id)predicateForSupportedAssetTypesForUploadWithoutMomentSharesAndPlaceholders
{
  int v2 = (void *)MEMORY[0x1E4F8BA10];
  uint64_t v3 = [MEMORY[0x1E4F8BA10] maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders];
  return (id)[v2 predicateForIncludeMask:v3 useIndex:0];
}

+ (id)predicateForSupportedAssetTypesForUpload
{
  int v2 = (void *)MEMORY[0x1E4F8BA10];
  uint64_t v3 = [MEMORY[0x1E4F8BA10] maskForAssetsEligibleForCloudKitTransport];
  return (id)[v2 predicateForIncludeMask:v3 useIndex:0];
}

+ (id)objectsWithScopedIdentifiers:(id)a3 forEntityName:(id)a4 prefetchResources:(BOOL)a5 relationshipKeyPathsForPrefetching:(id)a6 inLibrary:(id)a7
{
  BOOL v52 = a5;
  v69[2] = *MEMORY[0x1E4F143B8];
  id v12 = a3;
  id v13 = a4;
  id v54 = a6;
  id v55 = a7;
  if (v12 && ![v12 count])
  {
    id v35 = (void *)MEMORY[0x1E4F1CBF0];
  }
  else
  {
    long long v14 = +[PLCloudMaster entityName];
    int v15 = [v13 isEqualToString:v14];

    if ((v15 & 1) == 0)
    {
      long long v16 = +[PLManagedAsset entityName];
      char v17 = [v13 isEqualToString:v16];

      if ((v17 & 1) == 0)
      {
        uint64_t v18 = [MEMORY[0x1E4F28B00] currentHandler];
        [v18 handleFailureInMethod:a2 object:a1 file:@"PLManagedAsset+CPL.m" lineNumber:3284 description:@"Entity name must be either Asset or CloudMaster."];
      }
    }
    if (v12)
    {
      context = (void *)MEMORY[0x19F38D3B0]();
      uint64_t v51 = [v55 managedObjectContext];
      uint32_t v53 = objc_msgSend(v12, "_pl_filter:", &__block_literal_global_401);

      id v19 = (void *)MEMORY[0x1E4F29008];
      id v20 = NSStringFromSelector(sel_scopeIdentifier);
      id v21 = [v19 sortDescriptorWithKey:v20 ascending:1];
      v69[0] = v21;
      id v22 = (void *)MEMORY[0x1E4F29008];
      id v23 = NSStringFromSelector(sel_identifier);
      id v24 = [v22 sortDescriptorWithKey:v23 ascending:1];
      v69[1] = v24;
      int v25 = [MEMORY[0x1E4F1C978] arrayWithObjects:v69 count:2];
      id v26 = [v53 sortedArrayUsingDescriptors:v25];

      uint64_t v27 = [MEMORY[0x1E4F1CA48] array];
      id v28 = [MEMORY[0x1E4F1CA48] array];
      v64[0] = 0;
      v64[1] = v64;
      v64[2] = 0x3032000000;
      v64[3] = __Block_byref_object_copy__51072;
      v64[4] = __Block_byref_object_dispose__51073;
      id v65 = 0;
      v57[0] = MEMORY[0x1E4F143A8];
      v57[1] = 3221225472;
      v57[2] = __129__PLManagedAsset_CPL__objectsWithScopedIdentifiers_forEntityName_prefetchResources_relationshipKeyPathsForPrefetching_inLibrary___block_invoke_2;
      v57[3] = &unk_1E586AF48;
      uint64_t v62 = v64;
      id v29 = v26;
      id v58 = v29;
      id v48 = v27;
      id v59 = v48;
      id v60 = v55;
      char v63 = v15;
      id v30 = v28;
      id v61 = v30;
      [v29 enumerateObjectsUsingBlock:v57];
      uint64_t v31 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v30];
      id v32 = v31;
      if (v15)
      {
        id v33 = v31;
        char v34 = (void *)MEMORY[0x1E4F1C0D0];
        +[PLCloudMaster entityName];
      }
      else
      {
        char v36 = (void *)MEMORY[0x1E4F28BA0];
        v68[0] = v31;
        id v37 = objc_msgSend(a1, "predicateForSupportedAssetTypesForUpload", v48);
        v68[1] = v37;
        double v38 = [MEMORY[0x1E4F1C978] arrayWithObjects:v68 count:2];
        id v33 = [v36 andPredicateWithSubpredicates:v38];

        char v34 = (void *)MEMORY[0x1E4F1C0D0];
        +[PLManagedAsset entityName];
      id v39 = };
      id v40 = [v34 fetchRequestWithEntityName:v39];

      [v40 setPredicate:v33];
      objc_msgSend(v40, "setFetchLimit:", objc_msgSend(v53, "count"));
      if ((unint64_t)[v53 count] >= 0x65) {
        [v40 setFetchBatchSize:100];
      }
      uint64_t v41 = [MEMORY[0x1E4F1CA80] setWithArray:v54];
      __int16 v42 = v41;
      if (v52)
      {
        if (v15)
        {
          [v41 addObject:@"assets.modernResources"];
          uint64_t v43 = @"transientModernResources";
        }
        else
        {
          [v41 addObject:@"modernResources"];
          uint64_t v43 = @"master";
        }
        [v42 addObject:v43];
      }
      uint64_t v44 = [v42 allObjects];
      [v40 setRelationshipKeyPathsForPrefetching:v44];

      id v56 = 0;
      id v35 = [v51 executeFetchRequest:v40 error:&v56];
      id v45 = v56;
      if (!v35 && !*MEMORY[0x1E4F59AC0])
      {
        unint64_t v46 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)CMTime buf = 138412290;
          id v67 = v45;
          _os_log_impl(&dword_19B3C7000, v46, OS_LOG_TYPE_ERROR, "Could not fetch objects by scoped identifier: %@", buf, 0xCu);
        }
      }
      _Block_object_dispose(v64, 8);

      id v12 = v53;
    }
    else
    {
      id v35 = 0;
    }
  }

  return v35;
}

void __129__PLManagedAsset_CPL__objectsWithScopedIdentifiers_forEntityName_prefetchResources_relationshipKeyPathsForPrefetching_inLibrary___block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  uint64_t v6 = [v5 scopeIdentifier];
  id v23 = [v5 identifier];

  uint64_t v7 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
  if (v7) {
    int v8 = [v7 isEqualToString:v6] ^ 1;
  }
  else {
    int v8 = 0;
  }
  uint64_t v9 = [*(id *)(a1 + 32) count] - 1;
  if ((v8 & 1) != 0 || v9 == a3)
  {
    if (v9 == a3) {
      [*(id *)(a1 + 40) addObject:v23];
    }
    id v10 = (void *)v6;
    if (v8) {
      id v10 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    }
    id v11 = v10;
    id v12 = [*(id *)(a1 + 48) mainScopeIdentifier];
    int v13 = [v11 isEqualToString:v12];

    int v14 = *(unsigned __int8 *)(a1 + 72);
    int v15 = (void *)MEMORY[0x1E4F28F60];
    uint64_t v16 = [*(id *)(a1 + 40) copy];
    char v17 = (void *)v16;
    if (v13)
    {
      if (v14) {
        [v15 predicateWithFormat:@"cloudMasterGUID IN %@ AND noindex:(%K) == NULL", v16, @"momentShare", v21, v22];
      }
      else {
        [v15 predicateWithFormat:@"%K IN %@ AND noindex:(%K) == NULL", @"cloudAssetGUID", v16, @"momentShare", v22];
      }
    }
    else if (v14)
    {
      [v15 predicateWithFormat:@"cloudMasterGUID IN %@ AND %K == %@", v16, @"momentShare.scopeIdentifier", v11, v22];
    }
    else
    {
      [v15 predicateWithFormat:@"%K IN %@ AND %K == %@", @"cloudAssetGUID", v16, @"momentShare.scopeIdentifier", v11];
    uint64_t v18 = };

    [*(id *)(a1 + 56) addObject:v18];
    [*(id *)(a1 + 40) removeAllObjects];
  }
  [*(id *)(a1 + 40) addObject:v23];
  uint64_t v19 = *(void *)(*(void *)(a1 + 64) + 8);
  id v20 = *(void **)(v19 + 40);
  *(void *)(v19 + 40) = v6;
}

uint64_t __129__PLManagedAsset_CPL__objectsWithScopedIdentifiers_forEntityName_prefetchResources_relationshipKeyPathsForPrefetching_inLibrary___block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

+ (id)assetsWithScopedIdentifiers:(id)a3 prefetchResources:(BOOL)a4 relationshipKeyPathsForPrefetching:(id)a5 inLibrary:(id)a6
{
  BOOL v7 = a4;
  id v10 = a6;
  id v11 = a5;
  id v12 = a3;
  int v13 = +[PLManagedAsset entityName];
  int v14 = [a1 objectsWithScopedIdentifiers:v12 forEntityName:v13 prefetchResources:v7 relationshipKeyPathsForPrefetching:v11 inLibrary:v10];

  return v14;
}

+ (PLManagedAsset)assetWithScopedIdentifier:(id)a3 inLibrary:(id)a4 prefetchResources:(BOOL)a5
{
  BOOL v5 = a5;
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v15 = a3;
  int v8 = (void *)MEMORY[0x1E4F1C978];
  id v9 = a4;
  id v10 = a3;
  id v11 = [v8 arrayWithObjects:&v15 count:1];

  id v12 = objc_msgSend(a1, "assetsWithScopedIdentifiers:prefetchResources:relationshipKeyPathsForPrefetching:inLibrary:", v11, v5, 0, v9, v15, v16);

  int v13 = [v12 firstObject];

  return (PLManagedAsset *)v13;
}

+ (id)assetsByScopedIdentifiers:(id)a3 relationshipKeyPathsForPrefetching:(id)a4 inLibrary:(id)a5
{
  BOOL v5 = [a1 assetsWithScopedIdentifiers:a3 prefetchResources:0 relationshipKeyPathsForPrefetching:a4 inLibrary:a5];
  uint64_t v6 = objc_msgSend(v5, "_pl_indexBy:", &__block_literal_global_395);

  return v6;
}

uint64_t __94__PLManagedAsset_CPL__assetsByScopedIdentifiers_relationshipKeyPathsForPrefetching_inLibrary___block_invoke(uint64_t a1, void *a2)
{
  return [a2 scopedIdentifier];
}

+ (id)assetsByCloudAssetUUID:(id)a3 inLibrary:(id)a4
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  int v8 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionaryWithCapacity:", objc_msgSend(v6, "count"));
  context = (void *)MEMORY[0x19F38D3B0]();
  id v9 = [MEMORY[0x1E4F59968] scopedIdentifiersFromArrayOfUnknownIdentifiers:v6];
  id v10 = [a1 assetsWithScopedIdentifiers:v9 prefetchResources:0 relationshipKeyPathsForPrefetching:0 inLibrary:v7];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v11 = [v10 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        if (*(void *)v20 != v13) {
          objc_enumerationMutation(v10);
        }
        id v15 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        uint64_t v16 = [v15 cloudAssetGUID];
        [v8 setObject:v15 forKey:v16];
      }
      uint64_t v12 = [v10 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v12);
  }

  return v8;
}

+ (void)deDupCMMAssets:(id)a3
{
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  if ([v3 count])
  {
    id v4 = [v3 firstObject];
    id v64 = [v4 photoLibrary];

    long long v68 = objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v3, "count"));
    id v65 = [MEMORY[0x1E4F1CA60] dictionary];
    unint64_t v69 = [MEMORY[0x1E4F1CA60] dictionary];
    long long v81 = 0u;
    long long v82 = 0u;
    long long v83 = 0u;
    long long v84 = 0u;
    id v63 = v3;
    id obj = v3;
    uint64_t v5 = [obj countByEnumeratingWithState:&v81 objects:v91 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v82;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v82 != v7) {
            objc_enumerationMutation(obj);
          }
          id v9 = *(void **)(*((void *)&v81 + 1) + 8 * i);
          id v10 = (void *)MEMORY[0x19F38D3B0]();
          id v80 = 0;
          uint64_t v11 = [v9 masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:&v80 fullsizeRenderImageIfNecessary:0 error:0];
          id v12 = v80;
          if (v11)
          {
            if (v12)
            {
              uint64_t v13 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K = %@", @"adjustedStableHash", v12];
              int v14 = v69;
              id v15 = v9;
              id v16 = v12;
            }
            else
            {
              uint64_t v13 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K = %@", @"originalStableHash", v11];
              int v14 = v65;
              id v15 = v9;
              id v16 = v11;
            }
            [v14 setObject:v15 forKeyedSubscript:v16];
            int v17 = [v9 isMomentSharedAsset];
            uint64_t v18 = (void *)MEMORY[0x1E4F8BA10];
            if (v17) {
              uint64_t v19 = [MEMORY[0x1E4F8BA10] maskForMomentShareDeDupe];
            }
            else {
              uint64_t v19 = [MEMORY[0x1E4F8BA10] maskForMomentSharedAsset];
            }
            long long v20 = [v18 predicateForIncludeMask:v19 useIndex:0 keyPathPrefix:@"asset"];
            long long v21 = (void *)MEMORY[0x1E4F28BA0];
            v90[0] = v13;
            v90[1] = v20;
            long long v22 = [MEMORY[0x1E4F1C978] arrayWithObjects:v90 count:2];
            id v23 = [v21 andPredicateWithSubpredicates:v22];

            [v68 addObject:v23];
          }
        }
        uint64_t v6 = [obj countByEnumeratingWithState:&v81 objects:v91 count:16];
      }
      while (v6);
    }

    uint64_t v24 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v68];
    int v25 = (void *)MEMORY[0x1E4F1C0D0];
    id v26 = +[PLAdditionalAssetAttributes entityName];
    uint64_t v27 = [v25 fetchRequestWithEntityName:v26];

    [v27 setPredicate:v24];
    long long v89 = @"asset";
    id v28 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v89 count:1];
    [v27 setRelationshipKeyPathsForPrefetching:v28];

    id v29 = [v64 managedObjectContext];
    id v79 = 0;
    id v30 = [v29 executeFetchRequest:v27 error:&v79];
    id v31 = v79;

    if (v30)
    {
      id v59 = v31;
      id v61 = v27;
      uint64_t v62 = v24;
      id obja = [MEMORY[0x1E4F1CA80] set];
      long long v75 = 0u;
      long long v76 = 0u;
      long long v77 = 0u;
      long long v78 = 0u;
      id v60 = v30;
      id v32 = v30;
      uint64_t v33 = [v32 countByEnumeratingWithState:&v75 objects:v86 count:16];
      if (!v33) {
        goto LABEL_35;
      }
      uint64_t v34 = v33;
      uint64_t v35 = *(void *)v76;
      while (1)
      {
        for (uint64_t j = 0; j != v34; ++j)
        {
          if (*(void *)v76 != v35) {
            objc_enumerationMutation(v32);
          }
          id v37 = [*(id *)(*((void *)&v75 + 1) + 8 * j) asset];
          id v74 = 0;
          double v38 = [v37 masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:&v74 fullsizeRenderImageIfNecessary:0 error:0];
          id v39 = v74;
          if (v39)
          {
            id v40 = v69;
            id v41 = v39;
          }
          else
          {
            id v40 = v65;
            id v41 = v38;
          }
          __int16 v42 = [v40 objectForKeyedSubscript:v41];
          uint64_t v43 = v42;
          if (v42)
          {
            if ([v42 isMomentSharedAsset]
              && ([v43 momentShare],
                  uint64_t v44 = objc_claimAutoreleasedReturnValue(),
                  int v45 = [v44 status],
                  v44,
                  v45 != 1))
            {
              id v48 = obja;
              dispatch_semaphore_t v49 = v43;
            }
            else
            {
              unint64_t v46 = [v37 momentShare];
              int v47 = [v46 status];

              if (v47 == 1) {
                goto LABEL_33;
              }
              id v48 = obja;
              dispatch_semaphore_t v49 = v37;
            }
            [v48 addObject:v49];
          }
LABEL_33:
        }
        uint64_t v34 = [v32 countByEnumeratingWithState:&v75 objects:v86 count:16];
        if (!v34)
        {
LABEL_35:

          long long v72 = 0u;
          long long v73 = 0u;
          long long v70 = 0u;
          long long v71 = 0u;
          id v50 = obja;
          uint64_t v51 = [v50 countByEnumeratingWithState:&v70 objects:v85 count:16];
          if (v51)
          {
            uint64_t v52 = v51;
            uint64_t v53 = *(void *)v71;
            id v54 = (unsigned char *)MEMORY[0x1E4F59AC0];
            do
            {
              for (uint64_t k = 0; k != v52; ++k)
              {
                if (*(void *)v71 != v53) {
                  objc_enumerationMutation(v50);
                }
                id v56 = *(void **)(*((void *)&v70 + 1) + 8 * k);
                __int16 v57 = [v56 additionalAttributes];
                [v57 setDestinationAssetCopyState:2];

                if (!*v54)
                {
                  id v58 = __CPLAssetsdOSLogDomain();
                  if (os_log_type_enabled(v58, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)CMTime buf = 67109378;
                    *(_DWORD *)id v88 = 2;
                    *(_WORD *)&v88[4] = 2112;
                    *(void *)&v88[6] = v56;
                    _os_log_impl(&dword_19B3C7000, v58, OS_LOG_TYPE_DEBUG, "Setting destinationAssetCopyState %d for asset %@", buf, 0x12u);
                  }
                }
              }
              uint64_t v52 = [v50 countByEnumeratingWithState:&v70 objects:v85 count:16];
            }
            while (v52);
          }

          uint64_t v27 = v61;
          uint64_t v24 = v62;
          id v31 = v59;
          id v30 = v60;
          goto LABEL_50;
        }
      }
    }
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v50 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138543618;
        *(void *)id v88 = v24;
        *(_WORD *)&v88[8] = 2112;
        *(void *)&v88[10] = v31;
        _os_log_impl(&dword_19B3C7000, v50, OS_LOG_TYPE_ERROR, "Failed to fetch assets with same fingerprint with predicate: %{public}@, error: %@", buf, 0x16u);
      }
LABEL_50:
    }
    id v3 = v63;
  }
}

+ (id)listOfSharingRelationshipsRelevantForUpload
{
  pl_dispatch_once();
  id v2 = (void *)listOfSharingRelationshipsRelevantForUpload_result;
  return v2;
}

void __66__PLManagedAsset_CPL__listOfSharingRelationshipsRelevantForUpload__block_invoke()
{
  uint64_t v0 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1C978]), "initWithObjects:", @"libraryScope", @"libraryScopeAssetContributors", 0);
  uint64_t v1 = (void *)listOfSharingRelationshipsRelevantForUpload_result;
  listOfSharingRelationshipsRelevantForUpload_unint64_t result = v0;
}

+ (id)listOfSharingAttributesRelevantForUpload
{
  pl_dispatch_once();
  id v2 = (void *)listOfSharingAttributesRelevantForUpload_result;
  return v2;
}

void __63__PLManagedAsset_CPL__listOfSharingAttributesRelevantForUpload__block_invoke()
{
  uint64_t v0 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1C978]), "initWithObjects:", @"libraryScopeShareState", 0);
  uint64_t v1 = (void *)listOfSharingAttributesRelevantForUpload_result;
  listOfSharingAttributesRelevantForUpload_unint64_t result = v0;
}

+ (id)listOfSyncedProperties
{
  pl_dispatch_once();
  id v2 = (void *)listOfSyncedProperties_result_51532;
  return v2;
}

void __45__PLManagedAsset_CPL__listOfSyncedProperties__block_invoke(uint64_t a1)
{
  uint64_t v6 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithObjects:", @"favorite", @"lastSharedDate", @"addedDate", @"dateCreated", @"locationData", @"hidden", @"title", @"visibilityState", @"avalancheUUID", @"avalanchePickType", @"kindSubtype", @"hdrType", @"trashedState", @"trashedDate", @"mediaGroupUUID", @"videoCpDurationValue", @"videoCpVisibilityState",
                 @"sortToken",
                 @"adjustmentsState",
                 @"orientation",
                 @"duration",
                 @"deferredProcessingNeeded",
                 @"cameraProcessingAdjustmentState",
                 @"videoDeferredProcessingNeeded",
                 @"savedAssetType",
                 0);
  if ((_os_feature_enabled_impl() & 1) == 0)
  {
    [v6 addObject:@"trashedByParticipant"];
    id v2 = [*(id *)(a1 + 32) listOfSharingAttributesRelevantForUpload];
    [v6 addObjectsFromArray:v2];

    id v3 = [*(id *)(a1 + 32) listOfSharingRelationshipsRelevantForUpload];
    [v6 addObjectsFromArray:v3];
  }
  uint64_t v4 = [v6 copy];
  uint64_t v5 = (void *)listOfSyncedProperties_result_51532;
  listOfSyncedProperties_result_51532 = v4;
}

+ (void)fixMissingOriginalTimezoneIfNeededForAsset:(id)a3
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  if (PLPlatformExtendedAttributesSupported())
  {
    uint64_t v4 = [v3 extendedAttributesCreateIfNeeded:1];
    uint64_t v5 = [v4 dateCreated];
    uint64_t v6 = [v4 timezoneOffset];
    if (v6)
    {

LABEL_12:
      goto LABEL_13;
    }
    uint64_t v7 = [v4 timezoneName];

    if (v7) {
      goto LABEL_12;
    }
    int v8 = [v3 additionalAttributes];
    id v9 = [v8 timeZoneName];
    if (v9)
    {
    }
    else
    {
      id v10 = [v3 additionalAttributes];
      uint64_t v11 = [v10 timeZoneOffset];

      if (!v11)
      {
        if (!v5)
        {
          if (*MEMORY[0x1E4F59AC0]) {
            goto LABEL_12;
          }
          int v14 = __CPLAssetsdOSLogDomain();
          if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_11;
          }
          id v16 = [v3 uuid];
          int v18 = 138543362;
          uint64_t v19 = v16;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_DEBUG, "Unable to set original timezone for asset: %{public}@", (uint8_t *)&v18, 0xCu);
LABEL_10:

LABEL_11:
          goto LABEL_12;
        }
        int v14 = [MEMORY[0x1E4F1CAF0] localTimeZone];
        int v17 = [v14 name];
        [v4 setTimezoneName:v17];

        uint64_t v15 = objc_msgSend(NSNumber, "numberWithInteger:", -[NSObject secondsFromGMTForDate:](v14, "secondsFromGMTForDate:", v5));
LABEL_9:
        id v16 = (void *)v15;
        [v4 setTimezoneOffset:v15];
        goto LABEL_10;
      }
    }
    id v12 = [v3 additionalAttributes];
    uint64_t v13 = [v12 timeZoneName];
    [v4 setTimezoneName:v13];

    int v14 = [v3 additionalAttributes];
    uint64_t v15 = [v14 timeZoneOffset];
    goto LABEL_9;
  }
LABEL_13:
}

+ (void)fixMissingOriginalDateCreatedIfNeededForAsset:(id)a3 withCloudMaster:(id)a4
{
  id v10 = a3;
  id v5 = a4;
  if (PLPlatformExtendedAttributesSupported())
  {
    uint64_t v6 = [v10 extendedAttributesCreateIfNeeded:1];
    uint64_t v7 = [v6 dateCreated];

    if (!v7)
    {
      int v8 = [v5 creationDate];
      if (v8)
      {
        [v6 setDateCreated:v8];
        id v9 = [v10 additionalAttributes];
        [v9 setDateCreatedSource:3];
      }
    }
  }
}

+ (void)processMediaMetadataForAsset:(id)a3 withCloudMaster:(id)a4
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  uint64_t v7 = [v6 mediaMetadata];
  int v8 = [v7 valueForKey:@"data"];

  if (v8)
  {
    id v41 = 0;
    id v9 = [MEMORY[0x1E4F28F98] propertyListWithData:v8 options:0 format:0 error:&v41];
    id v10 = v41;
    if (v9)
    {
      objc_opt_class();
      uint64_t v11 = [v5 managedObjectContext];
      if (objc_opt_isKindOfClass()) {
        id v12 = v11;
      }
      else {
        id v12 = 0;
      }
      uint64_t v13 = v12;

      switch([v5 kind])
      {
        case 0u:
          id v14 = objc_alloc(MEMORY[0x1E4F8CC48]);
          uint64_t v15 = (void *)MEMORY[0x1E4F8CDF8];
          [v5 uniformTypeIdentifier];
          id v16 = v38 = v10;
          int v17 = [v15 typeWithIdentifier:v16];
          int v18 = [v13 pl_libraryBundle];
          uint64_t v19 = [v18 timeZoneLookup];
          uint64_t v20 = [v14 initWithImageSourceProxyOrEncodedImagePropertyData:v8 contentType:v17 timeZoneLookup:v19];

          id v10 = v38;
          [v5 setImageInfoFromOriginalImageMetadata:v20];
          break;
        case 1u:
          long long v21 = [MEMORY[0x1E4F16330] assetProxyWithPropertyList:v9];
          if (v21)
          {
            id v39 = v10;
            [v5 setVideoInfoOnMasterFromAVAsset:v21];
            id v22 = objc_alloc(MEMORY[0x1E4F8CC48]);
            id v23 = [v13 pl_libraryBundle];
            uint64_t v24 = [v23 timeZoneLookup];
            uint64_t v20 = [v22 initWithAVAsset:v21 timeZoneLookup:v24];

            [v5 updateVideoAttributesFromMetadata:v20 overwriteOriginalProperties:1];
            if ([v5 cameraProcessingAdjustmentState])
            {
              int v25 = [v20 spatialOverCaptureIdentifier];
              if (v25)
              {
                id v26 = [v5 additionalAttributes];
                [v26 setSpatialOverCaptureGroupIdentifier:v25];
              }
            }
            id v10 = v39;
            if (PLPlatformExtendedAttributesSupported()) {
              [v5 updateVideoExtendedAttributesFromMetadata:v20];
            }
          }
          else
          {
            if ([v5 isMomentSharedAsset])
            {
              if (!*MEMORY[0x1E4F59AC0])
              {
                id v32 = __CPLAssetsdOSLogDomain();
                if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v33 = [v5 cloudAssetGUID];
                  *(_DWORD *)CMTime buf = 138412290;
                  uint64_t v43 = v33;
                  _os_log_impl(&dword_19B3C7000, v32, OS_LOG_TYPE_ERROR, "CMM video asset with invalid mediaProperties detected, clearing mediaMetadata on CMM master with GUID %@", buf, 0xCu);
                }
              }
              uint64_t v34 = [v6 mediaMetadata];
              [v34 setValue:0 forKey:@"data"];
            }
            else if (!*MEMORY[0x1E4F59AC0])
            {
              char v36 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
              {
                id v37 = [v5 cloudAssetGUID];
                *(_DWORD *)CMTime buf = 138412290;
                uint64_t v43 = v37;
                _os_log_impl(&dword_19B3C7000, v36, OS_LOG_TYPE_ERROR, "Video asset with invalid mediaProperties detected with GUID %@", buf, 0xCu);
              }
            }
            uint64_t v20 = 0;
          }
          goto LABEL_38;
        case 2u:
          if (!PLPlatformExtendedAttributesSupported()) {
            goto LABEL_21;
          }
          uint64_t v20 = [MEMORY[0x1E4F16330] assetProxyWithPropertyList:v9];
          if (v20)
          {
            id v27 = objc_alloc(MEMORY[0x1E4F8CC48]);
            [v13 pl_libraryBundle];
            id v28 = v40 = v10;
            id v29 = [v28 timeZoneLookup];
            long long v21 = [v27 initWithAVAsset:v20 timeZoneLookup:v29];

            id v10 = v40;
            [v5 updateAudioExtendedAttributesFromMetadata:v21];
LABEL_38:

            break;
          }
          if (!*MEMORY[0x1E4F59AC0])
          {
            long long v21 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              uint64_t v35 = [v5 cloudAssetGUID];
              *(_DWORD *)CMTime buf = 138412290;
              uint64_t v43 = v35;
              _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_ERROR, "Audio asset with invalid mediaProperties detected with GUID %@", buf, 0xCu);
            }
            goto LABEL_38;
          }
          uint64_t v20 = 0;
          break;
        case 3u:
LABEL_21:
          if (*MEMORY[0x1E4F59AC0]) {
            goto LABEL_40;
          }
          uint64_t v20 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            id v30 = [v5 cloudAssetGUID];
            int v31 = [v5 kind];
            *(_DWORD *)CMTime buf = 138412546;
            uint64_t v43 = v30;
            __int16 v44 = 1024;
            LODWORD(v45) = v31;
            _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_ERROR, "Media properties on unexpected asset kind with GUID %@, kind %d", buf, 0x12u);
          }
          break;
        default:
          goto LABEL_40;
      }
    }
    else
    {
      if (*MEMORY[0x1E4F59AC0])
      {
LABEL_41:

        goto LABEL_42;
      }
      uint64_t v13 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
LABEL_40:

        goto LABEL_41;
      }
      uint64_t v20 = [v5 cloudAssetGUID];
      *(_DWORD *)CMTime buf = 138543618;
      uint64_t v43 = v20;
      __int16 v44 = 2112;
      id v45 = v10;
      _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Media metadata for asset asset %{public}@ failed to decode: error: %@", buf, 0x16u);
    }

    goto LABEL_40;
  }
LABEL_42:
}

+ (void)processAdjustedMediaMetadataForAsset:(id)a3
{
  id v4 = a3;
  if (![v4 kind])
  {
    id v3 = [v4 fullSizeResourceMetadataFromMediaPropertiesOrFullSizeResourceOrOptionalURL:0];
    if (v3) {
      [v4 setSpatialTypeFromMetadata:v3];
    }
  }
  [v4 updateAssetPropertiesFromAdjustmentFile];
}

+ (void)fixupCloudPhotoLibraryAsset:(id)a3 withCloudMaster:(id)a4 inLibrary:(id)a5
{
  id v13 = a3;
  id v9 = a4;
  id v10 = a5;
  if (!v9)
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInMethod:a2, a1, @"PLManagedAsset+CPL.m", 2422, @"Invalid parameter not satisfying: %@", @"cloudMaster" object file lineNumber description];
  }
  if ([v9 cloudLocalState] != 3) {
    [v9 setCloudLocalState:3];
  }
  if ([v13 cloudLocalState] != 1) {
    [v13 setCloudLocalState:1];
  }
  [v13 _applyPropertiesFromCloudMaster:v9];
  uint64_t v11 = [v10 managedObjectContext];
  objc_msgSend(v13, "rm_createMasterResourcesIn:inManagedObjectContext:", v9, v11);

  [v13 setCloudPlaceholderKind:2];
}

+ (id)createCloudPhotoLibraryAssetWithAssetRecord:(id)a3 withCloudMaster:(id)a4 inLibrary:(id)a5
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  id v9 = a5;
  id v10 = (unsigned char *)MEMORY[0x1E4F59AC0];
  if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v11 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v30 = v7;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEBUG, "Creating asset with CPLAssetChange %@", buf, 0xCu);
    }
  }
  id v12 = [v7 scopedIdentifier];
  id v28 = 0;
  BOOL v13 = +[PLShare getShareIfNecessary:&v28 forCPLRecordWithClass:objc_opt_class() scopedIdentifier:v12 inLibrary:v9];
  id v14 = v28;
  uint64_t v15 = 0;
  if (v13)
  {
    LOWORD(v27) = 257;
    uint64_t v15 = +[PLManagedAsset insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:](PLManagedAsset, "insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", v9, 0, 0, [MEMORY[0x1E4F8BA10] savedAssetTypeForCloudPhotoLibraryAsset], 0, 0, 0, 0, 0, v27);
    id v16 = [v12 identifier];
    [v15 setCloudAssetGUID:v16];
    if (v14)
    {
      [v15 setMomentShare:v14];
      objc_msgSend(v15, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E4F8BA10], "savedAssetTypeForMomentSharedAsset"));
      [v15 setBundleScope:1];
      int v17 = [v15 additionalAttributes];
      [v17 setShareType:1];

      int v18 = [v15 additionalAttributes];
      uint64_t v19 = [v14 owner];
      uint64_t v20 = [v19 userIdentifier];
      [v18 setShareOriginator:v20];

      id v10 = (unsigned char *)MEMORY[0x1E4F59AC0];
    }
    else
    {
      objc_msgSend(v15, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E4F8BA10], "savedAssetTypeForCloudPhotoLibraryAsset"));
    }
    [v15 setCloudPlaceholderKind:2];
    uint64_t v21 = [v15 setCloudLocalState:1];
    if (v8)
    {
      id v22 = (void *)MEMORY[0x19F38D3B0](v21);
      [v15 _applyPropertiesFromCloudMaster:v8];
      id v23 = [v9 managedObjectContext];
      objc_msgSend(v15, "rm_createMasterResourcesIn:inManagedObjectContext:", v8, v23);
    }
    else
    {
      if (*v10)
      {
LABEL_19:

        goto LABEL_20;
      }
      uint64_t v24 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v30 = v15;
        _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_ERROR, "Unable to find matching cloud master for %@", buf, 0xCu);
      }
    }
    if (!*v10)
    {
      int v25 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v30 = v15;
        _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_DEBUG, "Created asset %@", buf, 0xCu);
      }
    }
    goto LABEL_19;
  }
LABEL_20:

  return v15;
}

+ (id)cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 editorBundleID:(id)a6 baseVersion:(int64_t)a7 baseFingerprint:(id)a8
{
  return (id)[a1 _cloudAdjustmentFingerprintWithAdjustmentDataBlob:a3 largeAdjustmentBlobFingerpint:0 formatIdentifier:a4 formatVersion:a5 editorBundleID:a6 baseVersion:a7 baseImageData:0 baseImageFingerprint:a8];
}

+ (id)cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 formatIdentifier:(id)a4 formatVersion:(id)a5 editorBundleID:(id)a6 baseVersion:(int64_t)a7 baseImageData:(id)a8
{
  return (id)[a1 _cloudAdjustmentFingerprintWithAdjustmentDataBlob:a3 largeAdjustmentBlobFingerpint:0 formatIdentifier:a4 formatVersion:a5 editorBundleID:a6 baseVersion:a7 baseImageData:a8 baseImageFingerprint:0];
}

+ (id)_cloudAdjustmentFingerprintWithAdjustmentDataBlob:(id)a3 largeAdjustmentBlobFingerpint:(id)a4 formatIdentifier:(id)a5 formatVersion:(id)a6 editorBundleID:(id)a7 baseVersion:(int64_t)a8 baseImageData:(id)a9 baseImageFingerprint:(id)a10
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  id v19 = a7;
  id v29 = a9;
  id v20 = a10;
  id v21 = objc_alloc_init(MEMORY[0x1E4F8CBB0]);
  [v21 setAdjustmentType:v17];
  [v21 setAdjustmentCompoundVersion:v18];
  [v21 setAdjustmentCreatorCode:v19];
  BOOL v22 = a8 == 1;
  [v21 setAdjustmentSourceType:v22];
  if (v16)
  {
    [v21 setLargeAdjustmentDataFingerprint:v16];
  }
  else
  {
    unint64_t v23 = [v15 length];
    if (v23 <= [MEMORY[0x1E4F59910] maxInlineDataSize]) {
      [v21 setSimpleAdjustmentData:v15];
    }
    else {
      [v21 setLargeAdjustmentData:v15];
    }
  }
  if (v20) {
    [v21 setBaseImageFingerprint:v20];
  }
  else {
    [v21 setBaseImage:v29];
  }
  uint64_t v24 = +[PLDescriptionBuilder prettyMultiLineDescriptionBuilderWithObject:v21 indent:0];
  [v24 appendName:@"formatIdentifier" object:v17];
  [v24 appendName:@"formatVersion" object:v18];
  [v24 appendName:@"editorBundleID" object:v19];
  [v24 appendName:@"sourceType" integerValue:v22];
  if (v16)
  {
    [v24 appendName:@"largeAdjustmentBlobFingerprint" object:v16];
    if (v20)
    {
LABEL_11:
      [v24 appendName:@"baseImageFingerprint" object:v20];
      goto LABEL_14;
    }
  }
  else
  {
    objc_msgSend(v24, "appendName:unsignedIntegerValue:", @"adjustmentBlobLength", objc_msgSend(v15, "length"));
    if (v20) {
      goto LABEL_11;
    }
  }
  objc_msgSend(v24, "appendName:unsignedIntegerValue:", @"baseImageDataLength", objc_msgSend(v29, "length"));
LABEL_14:
  if (!*MEMORY[0x1E4F59AC0])
  {
    int v25 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
    {
      id v26 = [v24 build];
      *(_DWORD *)CMTime buf = 138412290;
      uint64_t v31 = v26;
      _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_DEBUG, "Calculating cloud adjustment fingerprint with the following parts: %@", buf, 0xCu);
    }
  }
  uint64_t v27 = [MEMORY[0x1E4F8CBB8] fingerprintWithAssetAdjustmentFingerprintData:v21];

  return v27;
}

+ (id)_predicateForAssetsWithNotCompleteResourcesOnResource
{
  pl_dispatch_once();
  id v2 = (void *)_predicateForAssetsWithNotCompleteResourcesOnResource_predicate;
  return v2;
}

void __76__PLManagedAsset_CPL___predicateForAssetsWithNotCompleteResourcesOnResource__block_invoke()
{
  v27[2] = *MEMORY[0x1E4F143B8];
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  unint64_t v23 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"asset.master == NULL"];
  uint64_t v1 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"asset.master != NULL"];
  id v2 = (void *)MEMORY[0x1E4F28F60];
  id v3 = +[PLInternalResource originalCPLResourceTypesForMaster];
  id v4 = [v2 predicateWithFormat:@"dataStoreClassID == %d AND dataStoreSubtype IN %@ AND version == %d AND localAvailability <= %d", 0, v3, 0, 0xFFFFFFFFLL];

  id v5 = (void *)MEMORY[0x1E4F28BA0];
  v27[0] = v1;
  v27[1] = v4;
  id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v27 count:2];
  id v7 = [v5 andPredicateWithSubpredicates:v6];

  id v8 = (void *)MEMORY[0x1E4F28BA0];
  v26[0] = v23;
  v26[1] = v7;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v26 count:2];
  id v10 = [v8 orPredicateWithSubpredicates:v9];
  [v0 addObject:v10];

  uint64_t v11 = +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:@"asset"];
  id v12 = (void *)MEMORY[0x1E4F28F60];
  BOOL v13 = +[PLInternalResource originalCPLResourceTypesForAsset];
  id v14 = [v12 predicateWithFormat:@"dataStoreClassID == %d AND dataStoreSubtype IN %@ AND version IN %@ AND localAvailability <= %d", 0, v13, &unk_1EEBF1E80, 0xFFFFFFFFLL];

  id v15 = (void *)MEMORY[0x1E4F28BA0];
  v25[0] = v11;
  v25[1] = v14;
  id v16 = [MEMORY[0x1E4F1C978] arrayWithObjects:v25 count:2];
  id v17 = [v15 andPredicateWithSubpredicates:v16];

  id v18 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v24 = v17;
  id v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v24 count:1];
  id v20 = [v18 orPredicateWithSubpredicates:v19];
  [v0 addObject:v20];

  uint64_t v21 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v0];
  BOOL v22 = (void *)_predicateForAssetsWithNotCompleteResourcesOnResource_predicate;
  _predicateForAssetsWithNotCompleteResourcesOnResource_predicate = v21;
}

+ (id)predicateForAssetsWithCompleteResourcesOnAsset
{
  pl_dispatch_once();
  id v2 = (void *)predicateForAssetsWithCompleteResourcesOnAsset_predicate;
  return v2;
}

void __69__PLManagedAsset_CPL__predicateForAssetsWithCompleteResourcesOnAsset__block_invoke()
{
  void v24[2] = *MEMORY[0x1E4F143B8];
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v19 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"master == NULL"];
  id v20 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"master != NULL"];
  uint64_t v1 = +[PLInternalResource predicateForAllOriginalResourcesLocallyAvailable];
  id v2 = (void *)MEMORY[0x1E4F28BA0];
  v24[0] = v20;
  v24[1] = v1;
  id v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v24 count:2];
  id v4 = [v2 andPredicateWithSubpredicates:v3];

  id v5 = (void *)MEMORY[0x1E4F28BA0];
  v23[0] = v19;
  v23[1] = v4;
  id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v23 count:2];
  id v7 = [v5 orPredicateWithSubpredicates:v6];
  [v0 addObject:v7];

  id v8 = +[PLManagedAsset predicateForUnadjustedAssetsWithKeyPathToAsset:0];
  id v9 = +[PLManagedAsset predicateForAdjustedAssetsWithKeyPathToAsset:0];
  id v10 = +[PLInternalResource predicateForAllFullSizeResourcesLocallyAvailable];
  uint64_t v11 = (void *)MEMORY[0x1E4F28BA0];
  v22[0] = v9;
  v22[1] = v10;
  id v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:2];
  BOOL v13 = [v11 andPredicateWithSubpredicates:v12];

  id v14 = (void *)MEMORY[0x1E4F28BA0];
  v21[0] = v8;
  v21[1] = v13;
  id v15 = [MEMORY[0x1E4F1C978] arrayWithObjects:v21 count:2];
  id v16 = [v14 orPredicateWithSubpredicates:v15];
  [v0 addObject:v16];

  uint64_t v17 = [MEMORY[0x1E4F28BA0] andPredicateWithSubpredicates:v0];
  id v18 = (void *)predicateForAssetsWithCompleteResourcesOnAsset_predicate;
  predicateForAssetsWithCompleteResourcesOnAsset_predicate = v17;
}

+ (void)countOfAssetsWithRequiredResourcesNotLocallyAvailableInLibrary:(id)a3 outCount:(unint64_t *)a4 photoCount:(unint64_t *)a5 videoCount:(unint64_t *)a6
{
  void v22[2] = *MEMORY[0x1E4F143B8];
  id v10 = (void *)MEMORY[0x1E4F8BA10];
  id v11 = a3;
  id v12 = objc_msgSend(v10, "predicateForIncludeMask:useIndex:keyPathPrefix:", objc_msgSend(v10, "maskForAssetsEligibleForCloudKitTransportWithoutMomentSharesAndPlaceholders"), 0, @"asset");
  BOOL v13 = +[PLManagedAsset _predicateForAssetsWithNotCompleteResourcesOnResource];
  id v14 = (void *)MEMORY[0x1E4F28BA0];
  v22[0] = v12;
  v22[1] = v13;
  id v15 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:2];
  id v16 = [v14 andPredicateWithSubpredicates:v15];

  uint64_t v17 = [v11 managedObjectContext];

  id v18 = [a1 _countOfAssetsByKindWithResourcePredicate:v16 inContext:v17];

  if (v18)
  {
    unint64_t v19 = [a1 _sumOfCountsInCountedSet:v18];
    unint64_t v20 = [v18 countForObject:&unk_1EEBEEA18];
    unint64_t v21 = [v18 countForObject:&unk_1EEBEEA30];
    if (!a4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  unint64_t v21 = 0;
  unint64_t v20 = 0;
  unint64_t v19 = 0;
  if (a4) {
LABEL_3:
  }
    *a4 = v19;
LABEL_4:
  if (a5) {
    *a5 = v20;
  }
  if (a6) {
    *a6 = v21;
  }
}

+ (id)_countOfAssetsByKindWithResourcePredicate:(id)a3 inContext:(id)a4
{
  v35[1] = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)MEMORY[0x1E4F1C0D0];
  id v8 = +[PLInternalResource entityName];
  id v9 = [v7 fetchRequestWithEntityName:v8];

  v35[0] = @"asset";
  id v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v35 count:1];
  [v9 setRelationshipKeyPathsForPrefetching:v10];

  [v9 setPredicate:v5];
  v34[0] = @"asset";
  v34[1] = @"asset.kind";
  id v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v34 count:2];
  [v9 setPropertiesToGroupBy:v11];

  uint64_t v33 = @"asset.kind";
  id v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v33 count:1];
  [v9 setPropertiesToFetch:v12];

  [v9 setResultType:2];
  id v29 = 0;
  BOOL v13 = [v6 executeFetchRequest:v9 error:&v29];
  id v14 = v29;
  if (v13)
  {
    id v15 = (void *)[objc_alloc(MEMORY[0x1E4F28BD0]) initWithCapacity:4];
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    id v16 = v13;
    uint64_t v17 = [v16 countByEnumeratingWithState:&v25 objects:v32 count:16];
    if (v17)
    {
      uint64_t v18 = v17;
      id v23 = v6;
      id v24 = v5;
      uint64_t v19 = *(void *)v26;
      do
      {
        for (uint64_t i = 0; i != v18; ++i)
        {
          if (*(void *)v26 != v19) {
            objc_enumerationMutation(v16);
          }
          unint64_t v21 = objc_msgSend(*(id *)(*((void *)&v25 + 1) + 8 * i), "objectForKeyedSubscript:", @"asset.kind", v23, v24, (void)v25);
          [v15 addObject:v21];
        }
        uint64_t v18 = [v16 countByEnumeratingWithState:&v25 objects:v32 count:16];
      }
      while (v18);
      id v6 = v23;
      id v5 = v24;
    }
  }
  else
  {
    id v16 = PLBackendGetLog();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v31 = v14;
      _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "failed to count assets by kind: %@", buf, 0xCu);
    }
    id v15 = 0;
  }

  return v15;
}

+ (unint64_t)_sumOfCountsInCountedSet:(id)a3
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    unint64_t v6 = 0;
    uint64_t v7 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v3);
        }
        v6 += [v3 countForObject:*(void *)(*((void *)&v10 + 1) + 8 * i)];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }
  else
  {
    unint64_t v6 = 0;
  }

  return v6;
}

+ (unint64_t)CPLAssetHDRTypeFromPLAssetHDRType:(signed __int16)a3
{
  uint64_t v3 = (a3 - 2);
  if (v3 < 3) {
    return v3 + 1;
  }
  else {
    return 0;
  }
}

+ (void)createMastersInLibrary:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 managedObjectContext];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __46__PLManagedAsset_CPL__createMastersInLibrary___block_invoke;
  void v8[3] = &unk_1E5875E40;
  id v10 = v4;
  id v11 = a1;
  id v9 = v5;
  id v6 = v4;
  id v7 = v5;
  [v6 performTransactionAndWait:v8];
}

void __46__PLManagedAsset_CPL__createMastersInLibrary___block_invoke(id *a1)
{
  void v26[3] = *MEMORY[0x1E4F143B8];
  id v2 = (void *)MEMORY[0x1E4F1C0D0];
  uint64_t v3 = +[PLManagedAsset entityName];
  id v4 = [v2 fetchRequestWithEntityName:v3];

  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"cloudLocalState == %d AND master == nil", 0);
  id v6 = (void *)MEMORY[0x1E4F28BA0];
  v26[0] = v5;
  id v7 = [a1[6] predicateForSupportedAssetTypesForUpload];
  v26[1] = v7;
  id v8 = [a1[6] _syncablePredicate];
  void v26[2] = v8;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v26 count:3];
  id v10 = [v6 andPredicateWithSubpredicates:v9];

  long long v25 = @"master";
  id v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v25 count:1];
  [v4 setRelationshipKeyPathsForPrefetching:v11];

  long long v12 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"dateCreated" ascending:0];
  v24[0] = v12;
  long long v13 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"additionalAttributes.uploadAttempts" ascending:1];
  v24[1] = v13;
  id v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v24 count:2];
  [v4 setSortDescriptors:v14];

  [v4 setPredicate:v10];
  uint64_t v21 = 0;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = __46__PLManagedAsset_CPL__createMastersInLibrary___block_invoke_2;
  v18[3] = &unk_1E5875CB8;
  id v15 = a1[4];
  id v19 = a1[5];
  id v20 = a1[4];
  id v16 = (id)[v15 enumerateObjectsFromFetchRequest:v4 count:&v21 usingDefaultBatchSizeWithBlock:v18];
  if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v17 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)CMTime buf = 134217984;
      uint64_t v23 = v21;
      _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEFAULT, "cloudMaster creation done: %li", buf, 0xCu);
    }
  }
}

void __46__PLManagedAsset_CPL__createMastersInLibrary___block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a2 createMasterIfNecessaryInLibrary:*(void *)(a1 + 32)];
  if (__ROR8__(0x8F5C28F5C28F5C29 * a3, 2) <= 0x28F5C28F5C28F5CuLL
    && [*(id *)(a1 + 40) hasChanges])
  {
    uint64_t v5 = *(void **)(a1 + 40);
    id v9 = 0;
    char v6 = [v5 save:&v9];
    id v7 = v9;
    if ((v6 & 1) == 0 && !*MEMORY[0x1E4F59AC0])
    {
      id v8 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v11 = v7;
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "failed to save after creating master for some assets %@", buf, 0xCu);
      }
    }
  }
}

- (void)removeSidecar:(id)a3
{
  id v3 = a3;
  id v4 = [v3 asset];
  [v4 deleteResourceForSidecarRepresentation:v3];
}

- (id)fileURLForHypotheticalSidecarFileWithFilename:(id)a3
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v5 = [(PLManagedAsset *)self pathForOriginalFile];
  char v6 = v5;
  if (v5)
  {
    id v7 = [v5 lastPathComponent];
    char v8 = [v4 isEqualToString:v7];

    if ((v8 & 1) == 0)
    {
      id v9 = [v6 stringByDeletingLastPathComponent];
      id v10 = [v9 stringByAppendingPathComponent:v4];
      id v11 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v10 isDirectory:0];

      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v12 = PLBackendGetLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v14 = 138412290;
      id v15 = self;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "Unable to get original file path for %@", (uint8_t *)&v14, 0xCu);
    }
  }
  id v11 = 0;
LABEL_8:

  return v11;
}

- (id)urlForSideCarImageFile
{
  id v2 = [(PLManagedAsset *)self sidecarFileMatchingContentType:*MEMORY[0x1E4F44400] requireExactMatch:0 requireSort:1];
  id v3 = [v2 fileURL];

  return v3;
}

- (BOOL)addSidecarFileAtIndex:(unint64_t)a3 sidecarURL:(id)a4 withFilename:(id)a5 compressedSize:(id)a6 captureDate:(id)a7 modificationDate:(id)a8 uniformTypeIdentifier:(id)a9 imageOrientation:(unsigned int)a10 pathManager:(id)a11
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v20 = a7;
  id v21 = a8;
  id v22 = a9;
  id v23 = a11;
  if (v23)
  {
    if (v18) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v34 = [MEMORY[0x1E4F28B00] currentHandler];
    [v34 handleFailureInMethod:a2, self, @"PLInternalResource+SidecarAdoption.m", 263, @"Invalid parameter not satisfying: %@", @"pathManager" object file lineNumber description];

    if (v18)
    {
LABEL_3:
      if (v19) {
        goto LABEL_4;
      }
LABEL_17:
      id v44 = 0;
      int v35 = [v17 getResourceValue:&v44 forKey:*MEMORY[0x1E4F1C5F8] error:0];
      id v36 = v44;
      id v37 = v36;
      if (v35) {
        id v19 = v36;
      }

      if (v18) {
        goto LABEL_5;
      }
LABEL_20:
      BOOL v26 = 0;
      goto LABEL_21;
    }
  }
  id v18 = [v17 lastPathComponent];
  if (!v19) {
    goto LABEL_17;
  }
LABEL_4:
  if (!v18) {
    goto LABEL_20;
  }
LABEL_5:
  id v24 = [(PLManagedAsset *)self filename];
  char v25 = [v18 isEqualToString:v24];

  BOOL v26 = 0;
  if (v17 && (v25 & 1) == 0 && v19)
  {
    id v40 = v20;
    long long v27 = [(PLManagedAsset *)self pathForVideoComplementFile];
    long long v28 = [v27 lastPathComponent];
    char v29 = [v18 isEqual:v28];

    if (v29)
    {
      BOOL v26 = 0;
      id v20 = v40;
    }
    else
    {
      [NSNumber numberWithUnsignedInteger:a3];
      id v30 = v42 = v21;
      id v31 = [NSNumber numberWithUnsignedInt:a10];
      id v43 = 0;
      BOOL v26 = +[PLResourceInstaller installSupplementalResourceForExistingFileAtURL:v17 ptpTrashedState:0 index:v30 forAsset:self imageOrientation:v31 resultingResource:0 error:&v43];
      id v32 = v43;

      id v20 = v40;
      id v21 = v42;
      if (!v26)
      {
        id v39 = v32;
        uint64_t v33 = PLBackendGetLog();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)CMTime buf = 138412546;
          id v46 = v39;
          __int16 v47 = 2112;
          id v48 = self;
          _os_log_impl(&dword_19B3C7000, v33, OS_LOG_TYPE_ERROR, "Error: %@, while storing supplemental resource for asset: %@", buf, 0x16u);
        }

        id v32 = v39;
      }
    }
  }
LABEL_21:

  return v26;
}

- (BOOL)addSidecarFileInfo:(id)a3 pathManager:(id)a4 atIndex:(unint64_t)a5 mainFileMetadata:(id)a6
{
  id v10 = a6;
  id v11 = a4;
  id v12 = a3;
  long long v13 = [v12 objectForKey:@"kPTPFilename"];
  int v14 = [v12 objectForKey:@"kPTPObjectCompressedSize"];
  id v15 = [v12 objectForKey:@"kPTPCaptureDate"];
  uint64_t v16 = [v12 objectForKey:@"kPTPModificationDate"];

  LODWORD(v12) = [v10 orientation];
  LODWORD(v18) = v12;
  LOBYTE(a5) = [(PLManagedAsset *)self addSidecarFileAtIndex:a5 sidecarURL:0 withFilename:v13 compressedSize:v14 captureDate:v15 modificationDate:v16 uniformTypeIdentifier:0 imageOrientation:v18 pathManager:v11];

  return a5;
}

- (id)sidecarFileMatchingContentType:(id)a3 requireExactMatch:(BOOL)a4 requireSort:(BOOL)a5
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  if (a5) {
    [(PLManagedAsset *)self sortedSidecarFiles];
  }
  else {
    [(PLManagedAsset *)self sidecars];
  }
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v10 = [v9 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v21;
    while (2)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v21 != v12) {
          objc_enumerationMutation(v9);
        }
        int v14 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        id v15 = (void *)MEMORY[0x1E4F8CDF8];
        uint64_t v16 = objc_msgSend(v14, "uniformTypeIdentifier", (void)v20);
        id v17 = [v15 typeWithIdentifier:v16];

        if (v8 && v17)
        {
          if (a4)
          {
            if ([v17 isEqual:v8]) {
              goto LABEL_18;
            }
          }
          else if ([v17 conformsToType:v8])
          {
LABEL_18:
            id v18 = v14;

            goto LABEL_19;
          }
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v11) {
        continue;
      }
      break;
    }
  }
  id v18 = 0;
LABEL_19:

  return v18;
}

- (id)sidecarWithResourceObjectID:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(PLManagedAsset *)self modernResources];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __63__PLManagedAsset_SidecarAdoption__sidecarWithResourceObjectID___block_invoke;
  void v10[3] = &unk_1E586B230;
  id v11 = v4;
  id v6 = v4;
  id v7 = objc_msgSend(v5, "_pl_firstObjectPassingTest:", v10);

  id v8 = [v7 sidecarRepresentation];

  return v8;
}

uint64_t __63__PLManagedAsset_SidecarAdoption__sidecarWithResourceObjectID___block_invoke(uint64_t a1, void *a2)
{
  id v3 = [a2 objectID];
  uint64_t v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

- (NSArray)sortedSidecarFiles
{
  if (sortedSidecarFiles_s_onceToken != -1) {
    dispatch_once(&sortedSidecarFiles_s_onceToken, &__block_literal_global_53143);
  }
  id v3 = [(PLManagedAsset *)self sidecars];
  uint64_t v4 = [v3 sortedArrayUsingDescriptors:sortedSidecarFiles_s_descriptors];

  return (NSArray *)v4;
}

void __53__PLManagedAsset_SidecarAdoption__sortedSidecarFiles__block_invoke()
{
  v3[1] = *MEMORY[0x1E4F143B8];
  id v0 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"index" ascending:1];
  v3[0] = v0;
  uint64_t v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v3 count:1];
  id v2 = (void *)sortedSidecarFiles_s_descriptors;
  sortedSidecarFiles_s_descriptors = v1;
}

- (id)sidecars
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v4 = [(PLManagedAsset *)self modernResources];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v9 canRepresentAsSidecar])
        {
          uint64_t v10 = [v9 sidecarRepresentation];
          [v3 addObject:v10];
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }

  return v3;
}

- (BOOL)installSparseFullStageComputeSyncResourceIfNeeded
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = [(PLManagedAsset *)self computeSyncAttributes];
  uint64_t v4 = [v3 cloudComputeStateVersion];
  uint64_t v5 = [v3 cloudComputeStateAdjustmentFingerprint];
  uint64_t v6 = [v3 cloudComputeStateLastUpdatedDate];
  BOOL v7 = [(PLManagedAsset *)self _shouldIngestComputeSyncFromCloudWithCloudVersion:v4 cloudAdjustmentFingerprint:v5 cloudLastUpdatedDate:v6];

  if (v7)
  {
    id v14 = 0;
    id v8 = [(PLManagedAsset *)self _installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityShouldRemoveLocalFile:1 error:&v14];
    id v9 = v14;

    BOOL v10 = v8 != 0;
    if (!v8 && !*MEMORY[0x1E4F59AC0])
    {
      id v11 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        long long v12 = [(PLManagedAsset *)self scopedIdentifier];
        *(_DWORD *)CMTime buf = 138412546;
        id v16 = v9;
        __int16 v17 = 2114;
        id v18 = v12;
        _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_ERROR, "[CCSS][Migration] Failed to install empty compute sync resource %@ for asset %{public}@", buf, 0x16u);
      }
    }
  }
  else
  {
    BOOL v10 = 0;
  }

  return v10;
}

- (BOOL)applyComputeSyncPayloadWithComputeStateRecord:(id)a3 originatedFromPrefetch:(BOOL)a4 error:(id *)a5
{
  BOOL v6 = a4;
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = [v8 fileURL];

  if (!v9)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      long long v21 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        long long v22 = [(PLManagedAsset *)self scopedIdentifier];
        *(_DWORD *)CMTime buf = 138543362;
        id v28 = v22;
        long long v23 = "[CCSS] Nil fileURL from compute state record to asset %{public}@";
LABEL_16:
        _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_ERROR, v23, buf, 0xCu);
      }
LABEL_17:
    }
LABEL_18:
    id v16 = 0;
LABEL_19:
    id v24 = v16;
    id v19 = v24;
    if (a5)
    {
      id v19 = v24;
      BOOL v20 = 0;
      *a5 = v19;
    }
    else
    {
      BOOL v20 = 0;
    }
    goto LABEL_22;
  }
  BOOL v10 = (void *)MEMORY[0x1E4F1C9B8];
  id v11 = [v8 fileURL];
  long long v12 = [v11 path];
  long long v13 = [v10 dataWithContentsOfFile:v12];

  if (!v13)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      long long v21 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        long long v22 = [(PLManagedAsset *)self scopedIdentifier];
        *(_DWORD *)CMTime buf = 138543362;
        id v28 = v22;
        long long v23 = "[CCSS] Nil data read from compute state record to asset %{public}@";
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  id v14 = objc_opt_new();
  id v26 = 0;
  int v15 = [v14 applyComputeSyncWrapperData:v13 toAsset:self error:&v26];
  id v16 = v26;

  if (!v15) {
    goto LABEL_19;
  }
  if (!+[PLComputeSyncAttributes updateLocalComputeSyncAttributesForAsset:self cloudRecordComputeState:v8 originatedFromPrefetch:v6]&& !*MEMORY[0x1E4F59AC0])
  {
    __int16 v17 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      id v18 = [(PLManagedAsset *)self scopedIdentifier];
      *(_DWORD *)CMTime buf = 138412546;
      id v28 = v8;
      __int16 v29 = 2114;
      id v30 = v18;
      _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "[CCSS] Failed to extract version from cloudVersion: %@, asset: %{public}@", buf, 0x16u);
    }
  }
  id v19 = v16;
  BOOL v20 = 1;
LABEL_22:

  return v20;
}

- (void)updateComputeSyncResourceAfterDownloadWithResource:(id)a3 onDemandDownload:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  if (!v7)
  {
    long long v23 = [MEMORY[0x1E4F28B00] currentHandler];
    [v23 handleFailureInMethod:a2, self, @"PLManagedAsset+ComputeSync.m", 365, @"Invalid parameter not satisfying: %@", @"computeSyncResource" object file lineNumber description];
  }
  id v8 = [(PLManagedAsset *)self pathForComputeSyncWrapperFile];
  id v9 = [(PLManagedAsset *)self scopedIdentifier];
  [v7 markAsLocallyAvailableWithFilePath:v8];
  BOOL v10 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v26 = 0;
  id v11 = [v10 attributesOfItemAtPath:v8 error:&v26];
  id v12 = v26;

  if (v11)
  {
    objc_msgSend(v7, "setDataLength:", objc_msgSend(v11, "fileSize"));
  }
  else if (!*MEMORY[0x1E4F59AC0])
  {
    long long v13 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412802;
      id v28 = v8;
      __int16 v29 = 2114;
      id v30 = v9;
      __int16 v31 = 2112;
      id v32 = v12;
      _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "[CCSS] Unable to extract attributes for file %@ asset %{public}@: %@", buf, 0x20u);
    }
  }
  id v14 = [v7 fileURL];
  if (v14
    && ([(PLManagedObject *)self pathManager],
        int v15 = objc_claimAutoreleasedReturnValue(),
        [v15 capabilities],
        id v16 = objc_claimAutoreleasedReturnValue(),
        int v17 = [v16 isCentralizedCacheDeleteCapable],
        v16,
        v15,
        v17))
  {
    id v24 = v12;
    uint64_t v25 = 0;
    BOOL v18 = +[PLCacheDeleteSupport markPurgeableForFileAtURL:v14 withUrgency:v4 outInode:&v25 error:&v24];
    id v19 = v24;

    if (v18)
    {
      if (!v25)
      {
        long long v22 = PLResourceCachingGetLog();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)CMTime buf = 138412290;
          id v28 = v14;
          _os_log_impl(&dword_19B3C7000, v22, OS_LOG_TYPE_ERROR, "Unexpected inode value of 0 for %@", buf, 0xCu);
        }

        long long v21 = [NSString stringWithFormat:@"Unexpected inode value of 0 for %@", v14];
        PLSimulateCrash();
        goto LABEL_24;
      }
      uint64_t v20 = [v7 fileID];
      if (v20 != v25) {
        objc_msgSend(v7, "setFileID:");
      }
      if (v4)
      {
        long long v21 = [MEMORY[0x1E4F1C9C8] date];
        [v7 setCloudLastOnDemandDownloadDate:v21];
LABEL_24:
      }
    }
    else if (PLIsErrorEqualToCode())
    {
      [v7 markAsNotLocallyAvailable];
    }
  }
  else
  {
    id v19 = v12;
  }
}

- (BOOL)copyComputeSyncResourceFromCPLFilePath:(id)a3 error:(id *)a4
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = [(PLManagedAsset *)self pathForComputeSyncWrapperFile];
  id v8 = (void *)MEMORY[0x1E4F8B908];
  id v9 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v6];
  BOOL v10 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v7];
  id v11 = [(PLManagedObject *)self pathManager];
  id v12 = [v11 capabilities];
  id v21 = 0;
  char v13 = [v8 ingestItemAtURL:v9 toURL:v10 type:1 options:14 capabilities:v12 error:&v21];
  id v14 = v21;

  if ((v13 & 1) == 0 && !*MEMORY[0x1E4F59AC0])
  {
    int v15 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      id v16 = [(PLManagedAsset *)self scopedIdentifier];
      *(_DWORD *)CMTime buf = 138413058;
      id v23 = v6;
      __int16 v24 = 2112;
      uint64_t v25 = v7;
      __int16 v26 = 2112;
      id v27 = v14;
      __int16 v28 = 2114;
      __int16 v29 = v16;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "[CCSS] Failed to copy from file %@ to file %@ with error: %@ %{public}@", buf, 0x2Au);
    }
  }
  id v17 = v14;
  BOOL v18 = v17;
  if (a4) {
    char v19 = v13;
  }
  else {
    char v19 = 1;
  }
  if ((v19 & 1) == 0) {
    *a4 = v17;
  }

  return v13;
}

- (id)_installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityShouldRemoveLocalFile:(BOOL)a3 error:(id *)a4
{
  BOOL v5 = a3;
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_107_56639];
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = 0;
    goto LABEL_4;
  }
  BOOL v10 = +[PLResourceRecipe recipeFromID:327689];
  id v18 = 0;
  id v8 = +[PLResourceInstaller onDemand_installEmptyComputeResourceWithRecipe:v10 forAsset:self error:&v18];
  id v9 = v18;

  if (v8)
  {
LABEL_4:
    if (v5 && [v8 isLocallyAvailable])
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        id v11 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          id v12 = [(PLManagedAsset *)self scopedIdentifier];
          char v13 = [v8 singleLineDescription];
          *(_DWORD *)CMTime buf = 138543618;
          id v20 = v12;
          __int16 v21 = 2112;
          long long v22 = v13;
          _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEFAULT, "[CCSS] Removing existing ComputeSync local file on asset %{public}@ since we've chosen to install another one from the cloud: %@", buf, 0x16u);
        }
      }
      [(PLManagedAsset *)self removeLocalFileForResource:v8 allowDCIMPath:1];
      [v8 markAsNotLocallyAvailable];
    }
    [v8 resetPrefetchState];
    [v8 setRemoteAvailability:1];
    id v14 = v9;
    goto LABEL_12;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    id v16 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v20 = v9;
      _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "[CCSS] Failed to install empty compute sync resource with error: %@", buf, 0xCu);
    }
  }
  id v17 = v9;
  id v14 = v17;
  if (a4)
  {
    id v14 = v17;
    id v8 = 0;
    *a4 = v14;
  }
  else
  {
    id v8 = 0;
  }
LABEL_12:

  return v8;
}

BOOL __130__PLManagedAsset_ComputeSync___installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityShouldRemoveLocalFile_error___block_invoke(uint64_t a1, void *a2)
{
  return [a2 recipeID] == 327689;
}

- (BOOL)_shouldIngestComputeSyncFromCloudWithCloudVersion:(id)a3 cloudAdjustmentFingerprint:(id)a4 cloudLastUpdatedDate:(id)a5
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)MEMORY[0x1E4F28E78];
  BOOL v10 = [(PLManagedAsset *)self scopedIdentifier];
  id v11 = [v9 stringWithFormat:@"[CCSS] Consumption policy for %@ with cloudVersion %@ and cloudAdjustmentFingerprint %@", v10, v7, v8];

  if (_shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate__onceToken != -1) {
    dispatch_once(&_shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate__onceToken, &__block_literal_global_65);
  }
  if (!_shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate__ignoreShouldIngestChecks)
  {
    id v14 = [(PLManagedAsset *)self additionalAttributes];
    int v15 = [v14 adjustedStableHash];
    if ([v15 length])
    {
    }
    else
    {
      uint64_t v16 = [v8 length];

      if (!v16) {
        goto LABEL_12;
      }
    }
    id v17 = [(PLManagedAsset *)self additionalAttributes];
    id v18 = [v17 adjustedStableHash];
    char v19 = [v8 isEqualToString:v18];

    if ((v19 & 1) == 0)
    {
      __int16 v24 = [(PLManagedAsset *)self additionalAttributes];
      uint64_t v25 = [v24 adjustedStableHash];
      [v11 appendFormat:@", cloudAdjustmentFingerprint does not match local adjustedStableHash %@. Overall decision: NO", v25];

      if (*MEMORY[0x1E4F59AC0])
      {
        BOOL v13 = 0;
        goto LABEL_40;
      }
      id v12 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)CMTime buf = 138412290;
        __int16 v31 = v11;
        _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
      }
      goto LABEL_20;
    }
LABEL_12:
    id v12 = [objc_alloc(MEMORY[0x1E4F59928]) initWithString:v7];
    if ([v12 majorVersion])
    {
      uint64_t v20 = [v12 majorVersion];
      unint64_t v21 = [v12 stage];
      long long v22 = [(PLManagedAsset *)self computeSyncAttributes];
      unint64_t v23 = (int)[v22 localAnalysisStage];

      if (v20)
      {
        if (v20 != 1)
        {
          [v11 appendFormat:@", CloudVersion > Runtime(%d), VersionDecision: NO", 1];
          goto LABEL_34;
        }
        [v11 appendFormat:@", CloudVersion == Runtime(%d), VersionDecision: YES", 1];
        if (v21 == v23)
        {
          [v11 appendFormat:@", CloudAssetStage == Local(%zu), StageDecision: NO", v21];
LABEL_34:
          BOOL v13 = 0;
          goto LABEL_35;
        }
        if (v21 <= v23)
        {
          [v11 appendFormat:@", CloudAssetStage < Local(%zu), StageDecision: NO", v23];
          goto LABEL_34;
        }
        if (v21 >= 0x3B7)
        {
          [v11 appendFormat:@", CloudAssetStage > PLManagedAssetComputeSyncHighestAllowedStage Local(%zu), StageDecision: NO", v23];
          goto LABEL_34;
        }
      }
      else
      {
        [v11 appendFormat:@", CloudVersion < Runtime(%d), VersionDecision: YES", 1];
        BOOL v13 = 0;
        if (v23 || v21 <= v23)
        {
LABEL_35:
          if (!*MEMORY[0x1E4F59AC0])
          {
            __int16 v28 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)CMTime buf = 138412290;
              __int16 v31 = v11;
              _os_log_impl(&dword_19B3C7000, v28, OS_LOG_TYPE_DEBUG, "%@", buf, 0xCu);
            }
          }
          goto LABEL_39;
        }
        unint64_t v23 = 0;
      }
      [v11 appendFormat:@", CloudAssetStage > Local(%zu), StageDecision: YES", v23];
      [v11 appendFormat:@", Overall decision: %@", @"YES"];
      BOOL v13 = 1;
      goto LABEL_35;
    }
    if (!*MEMORY[0x1E4F59AC0])
    {
      __int16 v26 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        id v27 = [(PLManagedAsset *)self scopedIdentifier];
        *(_DWORD *)CMTime buf = 138412546;
        __int16 v31 = v12;
        __int16 v32 = 2112;
        uint64_t v33 = v27;
        _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_ERROR, "[CCSS] Failed to extract non-zero MajorVersion from cloudVersion: %@, asset: %@", buf, 0x16u);
      }
      goto LABEL_34;
    }
LABEL_20:
    BOOL v13 = 0;
    goto LABEL_39;
  }
  [v11 appendString:@", Ignoring actual policy since PLCCSSIgnoreShouldIngestChecks is set. Overall decision override: YES"];
  if (*MEMORY[0x1E4F59AC0])
  {
    BOOL v13 = 1;
    goto LABEL_40;
  }
  id v12 = __CPLAssetsdOSLogDomain();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)CMTime buf = 138412290;
    __int16 v31 = v11;
    _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
  }
  BOOL v13 = 1;
LABEL_39:

LABEL_40:
  return v13;
}

void __129__PLManagedAsset_ComputeSync___shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate___block_invoke()
{
  id v0 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  _shouldIngestComputeSyncFromCloudWithCloudVersion_cloudAdjustmentFingerprint_cloudLastUpdatedDate__ignoreShouldIngestChecks = [v0 BOOLForKey:@"PLCCSSIgnoreShouldIngestChecks"];
}

- (BOOL)_shouldInstallComputeSyncResourceFromCloudWithCPLAssetChange:(id)a3
{
  id v4 = a3;
  BOOL v5 = [v4 computeStateVersion];
  id v6 = [v4 computeStateLastUpdatedDate];
  id v7 = [v4 computeStateAdjustmentFingerprint];

  if ([v5 length]) {
    BOOL v8 = [(PLManagedAsset *)self _shouldIngestComputeSyncFromCloudWithCloudVersion:v5 cloudAdjustmentFingerprint:v7 cloudLastUpdatedDate:v6];
  }
  else {
    BOOL v8 = 0;
  }

  return v8;
}

- (void)applyComputeSyncPropertiesFromAssetChange:(id)a3 inLibrary:(id)a4 didInstallComputeSyncResource:(BOOL *)a5 computeSyncDownloadEnabled:(BOOL)a6
{
  BOOL v6 = a6;
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  if (_os_feature_enabled_impl())
  {
    BOOL v10 = [v9 computeStateVersion];
    id v11 = [v9 computeStateAdjustmentFingerprint];
    id v12 = [v9 computeStateLastUpdatedDate];
    +[PLComputeSyncAttributes updateCloudComputeSyncAttributesForAsset:self cloudVersion:v10 cloudAdjustmentFingerprint:v11 cloudLastUpdatedDate:v12];

    if (v6)
    {
      if ([(PLManagedAsset *)self _shouldInstallComputeSyncResourceFromCloudWithCPLAssetChange:v9])
      {
        id v16 = 0;
        BOOL v13 = [(PLManagedAsset *)self _installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityShouldRemoveLocalFile:1 error:&v16];
        id v14 = v16;

        if (v13)
        {
          if (a5) {
            *a5 = 1;
          }
        }
        else if (!*MEMORY[0x1E4F59AC0])
        {
          int v15 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)CMTime buf = 138412546;
            id v18 = v14;
            __int16 v19 = 2112;
            id v20 = v9;
            _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "[CCSS] Failed to install empty compute sync resource %@ from asset change %@", buf, 0x16u);
          }
        }
      }
    }
  }
}

- (id)_currentComputeStateVersion
{
  id v3 = NSString;
  id v4 = [(PLManagedAsset *)self computeSyncAttributes];
  int v5 = [v4 localAnalysisMajorVersion];
  BOOL v6 = [(PLManagedAsset *)self computeSyncAttributes];
  id v7 = objc_msgSend(v3, "stringWithFormat:", @"%i.%i", v5, (int)objc_msgSend(v6, "localAnalysisStage"));

  return v7;
}

- (BOOL)shouldPushComputeSync
{
  id v14 = objc_opt_class();
  int v15 = [(PLManagedAsset *)self computeSyncAttributes];
  uint64_t v3 = [v15 localAnalysisMajorVersion];
  id v4 = [(PLManagedAsset *)self computeSyncAttributes];
  uint64_t v5 = [v4 localAnalysisStage];
  BOOL v6 = [(PLManagedAsset *)self computeSyncAttributes];
  id v7 = [v6 cloudComputeStateVersion];
  BOOL v8 = [(PLManagedAsset *)self additionalAttributes];
  id v9 = [v8 adjustedStableHash];
  BOOL v10 = [(PLManagedAsset *)self computeSyncAttributes];
  id v11 = [v10 cloudComputeStateAdjustmentFingerprint];
  id v12 = [(PLManagedAsset *)self scopedIdentifier];
  LOBYTE(v3) = [v14 _shouldPushComputeSyncWithLocalMajorVersion:v3 localAnalaysisStage:v5 cloudComputeStateVersionStr:v7 localAdjustmentFingerprint:v9 cloudAdjustmentFingerprint:v11 scopedIdentifier:v12];

  return v3;
}

- (BOOL)installComputeSyncResourceAfterAttachtoCPLWithError:(id *)a3
{
  id v7 = 0;
  id v4 = [(PLManagedAsset *)self _installOrUpdateExistingComputeSyncResourceToIndicateRemoteAvailabilityShouldRemoveLocalFile:0 error:&v7];
  id v5 = v7;
  if (v4)
  {
    [(PLManagedAsset *)self updateComputeSyncResourceAfterDownloadWithResource:v4 onDemandDownload:0];
    [v4 setCloudPrefetchCount:10];
  }

  return 1;
}

- (void)deleteComputeSyncResourceIfExists
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_56692];
  if (v3)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v4 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        id v5 = [(PLManagedAsset *)self scopedIdentifier];
        BOOL v6 = [v3 singleLineDescription];
        int v7 = 138543618;
        BOOL v8 = v5;
        __int16 v9 = 2112;
        BOOL v10 = v6;
        _os_log_impl(&dword_19B3C7000, v4, OS_LOG_TYPE_DEFAULT, "[CCSS] Removing existing ComputeSync resource on asset %{public}@: %@", (uint8_t *)&v7, 0x16u);
      }
    }
    [(PLManagedAsset *)self removeLocalFileForResource:v3 allowDCIMPath:1];
    [v3 deleteResource];
  }
}

BOOL __64__PLManagedAsset_ComputeSync__deleteComputeSyncResourceIfExists__block_invoke(uint64_t a1, void *a2)
{
  return [a2 recipeID] == 327689;
}

+ (void)_runComputeSyncBackfillTaskOnProcessedAssets:(id)a3
{
  id v4 = a3;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __76__PLManagedAsset_ComputeSync___runComputeSyncBackfillTaskOnProcessedAssets___block_invoke;
  v6[3] = &unk_1E5873348;
  id v7 = v4;
  SEL v8 = a2;
  id v5 = v4;
  [v5 performTransactionAndWait:v6];
}

void __76__PLManagedAsset_ComputeSync___runComputeSyncBackfillTaskOnProcessedAssets___block_invoke(uint64_t a1)
{
  void v29[3] = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc(MEMORY[0x1E4F1C0D0]);
  uint64_t v3 = +[PLComputeSyncAttributes entityName];
  id v4 = (void *)[v2 initWithEntityName:v3];

  id v5 = (void *)MEMORY[0x1E4F28BA0];
  BOOL v6 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %d", @"localAnalysisMajorVersion", 1);
  v29[0] = v6;
  id v7 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %d", @"localAnalysisStage", 900);
  v29[1] = v7;
  SEL v8 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"NOT (%K MATCHES %@)", @"cloudComputeStateVersion", @"1.950"];
  void v29[2] = v8;
  __int16 v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v29 count:3];
  BOOL v10 = [v5 andPredicateWithSubpredicates:v9];
  [v4 setPredicate:v10];

  __int16 v28 = @"asset";
  uint64_t v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v28 count:1];
  [v4 setRelationshipKeyPathsForPrefetching:v11];

  v27[0] = 0;
  v27[1] = v27;
  v27[2] = 0x2020000000;
  void v27[3] = 0;
  v26[0] = 0;
  v26[1] = v26;
  void v26[2] = 0x2020000000;
  void v26[3] = 0;
  id v12 = [PLEnumerateAndSaveController alloc];
  BOOL v13 = NSStringFromSelector(*(SEL *)(a1 + 40));
  id v14 = [*(id *)(a1 + 32) managedObjectContext];
  int v15 = [*(id *)(a1 + 32) pathManager];
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  void v24[2] = __76__PLManagedAsset_ComputeSync___runComputeSyncBackfillTaskOnProcessedAssets___block_invoke_2;
  void v24[3] = &unk_1E586FB88;
  id v25 = *(id *)(a1 + 32);
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  void v23[2] = __76__PLManagedAsset_ComputeSync___runComputeSyncBackfillTaskOnProcessedAssets___block_invoke_3;
  void v23[3] = &unk_1E586BAC0;
  v23[4] = v26;
  void v23[5] = v27;
  id v16 = [(PLEnumerateAndSaveController *)v12 initWithName:v13 fetchRequest:v4 context:v14 pathManager:v15 concurrent:0 refreshAllAfterSave:1 generateContextBlock:v24 didFetchObjectIDsBlock:0 processResultBlock:v23];

  id v17 = +[PLConcurrencyLimiter sharedLimiter];
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  void v19[2] = __76__PLManagedAsset_ComputeSync___runComputeSyncBackfillTaskOnProcessedAssets___block_invoke_4;
  v19[3] = &unk_1E5875A90;
  id v18 = v16;
  id v20 = v18;
  uint64_t v21 = v27;
  long long v22 = v26;
  [v17 sync:v19 identifyingBlock:0 library:*(void *)(a1 + 32)];

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v27, 8);
}

uint64_t __76__PLManagedAsset_ComputeSync___runComputeSyncBackfillTaskOnProcessedAssets___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) managedObjectContext];
}

void __76__PLManagedAsset_ComputeSync___runComputeSyncBackfillTaskOnProcessedAssets___block_invoke_3(uint64_t a1, uint64_t a2, void *a3)
{
  id v10 = [a3 asset];
  if (([v10 supportsCloudUpload] & 1) != 0
    && ([v10 mediaAnalysisAttributes],
        id v4 = objc_claimAutoreleasedReturnValue(),
        uint64_t v5 = [v4 mediaAnalysisVersion],
        v4,
        v5 == 70))
  {
    BOOL v6 = [v10 mediaAnalysisAttributes];
    int v7 = [v6 mediaAnalysisImageVersion];

    SEL v8 = v10;
    if (v7 == 70)
    {
      +[PLComputeSyncAttributes updateLocalComputeSyncStageAfterProcessingForAsset:v10 stage:950];
      SEL v8 = v10;
      uint64_t v9 = a1 + 40;
    }
    else
    {
      uint64_t v9 = a1 + 32;
    }
  }
  else
  {
    uint64_t v9 = a1 + 32;
    SEL v8 = v10;
  }
  ++*(void *)(*(void *)(*(void *)v9 + 8) + 24);
}

void __76__PLManagedAsset_ComputeSync___runComputeSyncBackfillTaskOnProcessedAssets___block_invoke_4(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v2 = (void *)a1[4];
  id v12 = 0;
  int v3 = [v2 processObjectsWithError:&v12];
  id v4 = v12;
  if (v3)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v5 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v6 = *(void **)(*(void *)(a1[5] + 8) + 24);
        uint64_t v7 = *(void *)(*(void *)(a1[6] + 8) + 24);
        *(_DWORD *)CMTime buf = 134218240;
        id v14 = v6;
        __int16 v15 = 2048;
        uint64_t v16 = v7;
        SEL v8 = "[CCSS] Successfully backfilled %tu assets and also found %tu non-eligible assets";
        uint64_t v9 = v5;
        os_log_type_t v10 = OS_LOG_TYPE_DEFAULT;
        uint32_t v11 = 22;
LABEL_8:
        _os_log_impl(&dword_19B3C7000, v9, v10, v8, buf, v11);
        goto LABEL_9;
      }
      goto LABEL_9;
    }
  }
  else if (!*MEMORY[0x1E4F59AC0])
  {
    uint64_t v5 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v14 = v4;
      SEL v8 = "[CCSS] Failed to set onboarding preview assets %@";
      uint64_t v9 = v5;
      os_log_type_t v10 = OS_LOG_TYPE_ERROR;
      uint32_t v11 = 12;
      goto LABEL_8;
    }
LABEL_9:
  }
}

+ (void)runComputeSyncBackfillTaskOnProcessedAssets:(id)a3
{
  id v4 = [a3 libraryServicesManager];
  uint64_t v5 = [v4 databaseContext];
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __75__PLManagedAsset_ComputeSync__runComputeSyncBackfillTaskOnProcessedAssets___block_invoke;
  v6[3] = &__block_descriptor_40_e24_v16__0__PLPhotoLibrary_8l;
  void v6[4] = a1;
  [v5 performTransactionSync:v6 withName:"+[PLManagedAsset(ComputeSync) runComputeSyncBackfillTaskOnProcessedAssets:]"];
}

uint64_t __75__PLManagedAsset_ComputeSync__runComputeSyncBackfillTaskOnProcessedAssets___block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _runComputeSyncBackfillTaskOnProcessedAssets:a2];
}

+ (BOOL)_checkComputeSyncUploadPolicyWithCPLConfiguration:(id)a3 library:(id)a4 debugMode:(BOOL)a5 debugLog:(id)a6
{
  int v7 = a5;
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v11 = a6;
  id v12 = (void *)MEMORY[0x1E4F8B858];
  BOOL v13 = [v10 pathManager];
  id v14 = [v13 libraryURL];
  __int16 v15 = [v12 appPrivateDataForLibraryURL:v14];

  uint64_t v16 = [v15 valueForKey:@"ComputeSyncUploadPolicy.cachedResult"];
  if (_checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog__onceToken != -1) {
    dispatch_once(&_checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog__onceToken, &__block_literal_global_183);
  }
  if (!_checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog__skipComputeSyncUploadPolicyChecks)
  {
    if (!v16) {
      goto LABEL_12;
    }
    if ([v16 BOOLValue])
    {
      if (!v7) {
        goto LABEL_5;
      }
      [v11 appendFormat:@"%@: %@ %@\n", @"Policy: Cached result", @"YES", &stru_1EEB2EB80];
    }
    else
    {
      [v11 appendFormat:@"%@: %@ %@\n", @"Policy: Cached result", @"NO", @"policyCachedResult is NO"];
    }
    if (([v16 BOOLValue] & 1) == 0)
    {
      id v18 = [v15 valueForKey:@"ComputeSyncUploadPolicy.lastCheckedDate"];
      __int16 v19 = v18;
      if (v18)
      {
        [v18 timeIntervalSinceNow];
        double v21 = fabs(v20);
        if (v21 < 86400.0 && !v7)
        {

          goto LABEL_43;
        }
        BOOL v17 = v21 < 86400.0;
        if (v21 < 86400.0) {
          long long v22 = @"NO";
        }
        else {
          long long v22 = @"YES";
        }
        [v11 appendFormat:@"%@: %@ %@\n", @"Policy: Last checked date", v22, v19];
      }
      else
      {
        BOOL v17 = 0;
      }
    }
    else
    {
LABEL_12:
      BOOL v17 = 0;
    }
    v35[0] = MEMORY[0x1E4F143A8];
    v35[1] = 3221225472;
    v35[2] = __108__PLManagedAsset_ComputeSync___checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog___block_invoke_2;
    void v35[3] = &unk_1E586BA78;
    char v37 = v7;
    id v36 = v15;
    unint64_t v23 = (void (**)(void, void))MEMORY[0x19F38D650](v35);
    __int16 v24 = [v9 valueForKey:@"feature.computesync.policy.minassetcount"];
    unint64_t v25 = [v24 unsignedIntegerValue];

    if (!v25) {
      unint64_t v25 = 10000;
    }
    unint64_t v26 = +[PLManagedAsset iCPLAssetCountInPhotoLibrary:v10];
    if (v26 >= v25)
    {
      uint64_t v30 = [NSString stringWithFormat:@"Threshold: %tu, Count: %tu", v25, v26];
      __int16 v31 = (void *)v30;
      if (v30) {
        __int16 v32 = (__CFString *)v30;
      }
      else {
        __int16 v32 = &stru_1EEB2EB80;
      }
      [v11 appendFormat:@"%@: %@ %@\n", @"Policy: Asset threshold", @"YES", v32];

      if (!v17)
      {
        char v33 = 1;
        v23[2](v23, 1);
        goto LABEL_41;
      }
    }
    else
    {
      v23[2](v23, 0);
      id v27 = [NSString stringWithFormat:@"Threshold: %tu, Count: %tu", v25, v26];
      if (!*MEMORY[0x1E4F59AC0])
      {
        __int16 v28 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)CMTime buf = 138412290;
          id v39 = v27;
          _os_log_impl(&dword_19B3C7000, v28, OS_LOG_TYPE_DEFAULT, "[CCSS] Upload policy check: Caching NO due to asset count threshold. %@", buf, 0xCu);
        }
      }
      if (!v7)
      {

LABEL_42:
        goto LABEL_43;
      }
      __int16 v29 = &stru_1EEB2EB80;
      if (v27) {
        __int16 v29 = v27;
      }
      [v11 appendFormat:@"%@: %@ %@\n", @"Policy: Asset threshold", @"NO", v29];
    }
    char v33 = 0;
LABEL_41:
    LOBYTE(v7) = v33 | v7 ^ 1;
    goto LABEL_42;
  }
  [v11 appendFormat:@"%@: %@ %@\n", @"Policy: Override policy checks (PLCCSSSkipUploadPolicyChecks)", @"YES", &stru_1EEB2EB80];
LABEL_5:
  LOBYTE(v7) = 1;
LABEL_43:

  return v7;
}

void __108__PLManagedAsset_ComputeSync___checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a1 + 40))
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = [MEMORY[0x1E4F1C9C8] now];
    id v15 = 0;
    char v6 = [v4 setValue:v5 forKey:@"ComputeSyncUploadPolicy.lastCheckedDate" error:&v15];
    id v7 = v15;

    SEL v8 = (unsigned char *)MEMORY[0x1E4F59AC0];
    if ((v6 & 1) == 0 && !*MEMORY[0x1E4F59AC0])
    {
      id v9 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v17 = v7;
        _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_ERROR, "[CCSS] Policy: Failed to persist date to app private data: %@", buf, 0xCu);
      }
    }
    id v10 = *(void **)(a1 + 32);
    id v11 = [NSNumber numberWithBool:a2];
    id v14 = v7;
    LOBYTE(v10) = [v10 setValue:v11 forKey:@"ComputeSyncUploadPolicy.cachedResult" error:&v14];
    id v12 = v14;

    if ((v10 & 1) == 0 && !*v8)
    {
      BOOL v13 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        id v17 = v12;
        _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "[CCSS] Policy: Failed to persist number to app private data: %@", buf, 0xCu);
      }
    }
  }
}

void __108__PLManagedAsset_ComputeSync___checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog___block_invoke()
{
  id v0 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  _checkComputeSyncUploadPolicyWithCPLConfiguration_library_debugMode_debugLog__skipComputeSyncUploadPolicyChecks = [v0 BOOLForKey:@"PLCCSSSkipUploadPolicyChecks"];
}

+ (BOOL)isComputeSyncEnabledForDirection:(int64_t)a3 library:(id)a4 debugMode:(BOOL)a5 debugLog:(id *)a6
{
  uint64_t v7 = a5;
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  id v10 = a4;
  id v11 = objc_alloc(MEMORY[0x1E4F28E78]);
  id v12 = @"download";
  if (!a3) {
    id v12 = @"upload";
  }
  BOOL v13 = (void *)[v11 initWithFormat:@"Compute Sync enabled check for direction: %@", v12];
  if (_os_feature_enabled_impl())
  {
    [v13 appendFormat:@"%@: %@ %@\n", @"FF", @"YES", &stru_1EEB2EB80];
    int v14 = 0;
  }
  else
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v15 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)CMTime buf = 0;
        _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_DEBUG, "[CCSS] Feature flag is off; disabling compute sync",
          buf,
          2u);
      }
    }
    if (!v7) {
      goto LABEL_67;
    }
    [v13 appendFormat:@"%@: %@ %@\n", @"FF", @"NO", &stru_1EEB2EB80];
    int v14 = 1;
  }
  if (PLPlatformComputeSyncSupported())
  {
    id v46 = a1;
    uint64_t v16 = @"YES";
  }
  else
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v17 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)CMTime buf = 0;
        _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEBUG, "[CCSS] Compute sync is currently unsupported on watchOS; disabling compute sync",
          buf,
          2u);
      }
    }
    if (!v7) {
      goto LABEL_67;
    }
    id v46 = a1;
    int v14 = 1;
    uint64_t v16 = @"NO";
  }
  [v13 appendFormat:@"%@: %@ %@\n", @"Platform supported", v16, &stru_1EEB2EB80];
  uint64_t v18 = [v10 libraryServicesManager];
  char v19 = [v18 isSystemPhotoLibrary];

  double v20 = @"YES";
  if (v19) {
    goto LABEL_26;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    double v21 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)CMTime buf = 0;
      _os_log_impl(&dword_19B3C7000, v21, OS_LOG_TYPE_DEBUG, "[CCSS] Compute sync is only supporrted on the System Photo Library; disabling compute sync",
        buf,
        2u);
    }
  }
  if (v7)
  {
    int v14 = 1;
    double v20 = @"NO";
LABEL_26:
    __int16 v47 = a6;
    [v13 appendFormat:@"%@: %@ %@\n", @"Is SPL", v20, &stru_1EEB2EB80];
    if (a3 == 1) {
      [v13 appendFormat:@"%@: %@ %@\n", @"Download allowed", @"YES", @"reason: Not DawnBurstG"];
    }
    long long v22 = [v10 libraryServicesManager];
    unint64_t v23 = [v22 cloudPhotoLibraryManager];
    __int16 v24 = [v23 cplConfiguration];

    unint64_t v25 = [v22 cloudPhotoLibraryManager];
    unint64_t v26 = [v25 cplStatus];
    char v27 = [v26 isKeychainCDPEnabled];

    __int16 v28 = @"YES";
    if ((v27 & 1) == 0)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        __int16 v29 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)CMTime buf = 0;
          _os_log_impl(&dword_19B3C7000, v29, OS_LOG_TYPE_DEBUG, "[CCSS] Device keychain CDP is disabled; disabling compute sync",
            buf,
            2u);
        }
      }
      if (!v7) {
        goto LABEL_66;
      }
      int v14 = 1;
      __int16 v28 = @"NO";
    }
    [v13 appendFormat:@"%@: %@ %@\n", @"Device CDP", v28, &stru_1EEB2EB80];
    if (a3 == 1)
    {
      __int16 v31 = @"download";
      uint64_t v30 = @"feature.version.computesync.download";
    }
    else
    {
      if (a3) {
        uint64_t v30 = 0;
      }
      else {
        uint64_t v30 = @"feature.version.computesync.upload";
      }
      if (a3) {
        __int16 v31 = 0;
      }
      else {
        __int16 v31 = @"upload";
      }
    }
    __int16 v32 = [v24 valueForKey:v30];
    unsigned int v33 = [v32 unsignedIntValue];

    if (isComputeSyncEnabledForDirection_library_debugMode_debugLog__onceToken != -1) {
      dispatch_once(&isComputeSyncEnabledForDirection_library_debugMode_debugLog__onceToken, &__block_literal_global_165_56767);
    }
    if (isComputeSyncEnabledForDirection_library_debugMode_debugLog__skipServerFFChecks)
    {
      [v13 appendFormat:@"%@: %@ %@\n", @"Force enabling compute sync & skipping server FF check (PLCCSSSkipServerFFCheck): ", @"YES", &stru_1EEB2EB80];
    }
    else
    {
      uint64_t v34 = v33;
      if (v33 < 3)
      {
        uint64_t v39 = [NSString stringWithFormat:@"Client version is %zd, server version is %zd", 2, v33];
        uint64_t v40 = (void *)v39;
        if (v39) {
          id v41 = (__CFString *)v39;
        }
        else {
          id v41 = &stru_1EEB2EB80;
        }
        [v13 appendFormat:@"%@: %@ %@\n", @"Server FF", @"YES", v41];
      }
      else
      {
        if (!*MEMORY[0x1E4F59AC0])
        {
          int v35 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)CMTime buf = 134218498;
            uint64_t v49 = 2;
            __int16 v50 = 2048;
            uint64_t v51 = v34;
            __int16 v52 = 2114;
            uint64_t v53 = v31;
            _os_log_impl(&dword_19B3C7000, v35, OS_LOG_TYPE_DEBUG, "[CCSS] Client release version is %zd and server minimum release version is %zd. Disabled compute sync %{public}@ since client release version is less than server minimum release version", buf, 0x20u);
          }
        }
        id v36 = [NSString stringWithFormat:@"Client version is %zd, server version is %zd", 2, v34];
        char v37 = v36;
        if (!v7)
        {

          goto LABEL_66;
        }
        if (v36) {
          id v38 = v36;
        }
        else {
          id v38 = &stru_1EEB2EB80;
        }
        [v13 appendFormat:@"%@: %@ %@\n", @"Server FF", @"NO", v38];

        int v14 = 1;
      }
    }
    char v42 = v14 != 0;
    if (a3)
    {
      if (!v47)
      {
LABEL_65:
        LOBYTE(v7) = v42 & v7 ^ 1;
LABEL_66:

        goto LABEL_67;
      }
    }
    else
    {
      int v44 = [v46 _checkComputeSyncUploadPolicyWithCPLConfiguration:v24 library:v10 debugMode:v7 debugLog:v13];
      if ((v44 & 1) == 0 && !v7) {
        goto LABEL_66;
      }
      if (v14) {
        char v42 = 1;
      }
      else {
        char v42 = v44 ^ 1;
      }
      id v45 = @"NO";
      if (v44) {
        id v45 = @"YES";
      }
      [v13 appendFormat:@"%@: %@ %@\n", @"Policy: Overall", v45, &stru_1EEB2EB80];
      if (!v47) {
        goto LABEL_65;
      }
    }
    if (v7) {
      *__int16 v47 = (id)[v13 copy];
    }
    goto LABEL_65;
  }
LABEL_67:

  return v7;
}

void __91__PLManagedAsset_ComputeSync__isComputeSyncEnabledForDirection_library_debugMode_debugLog___block_invoke()
{
  id v0 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  isComputeSyncEnabledForDirection_library_debugMode_debugLog__skipServerFFChecks = [v0 BOOLForKey:@"PLCCSSSkipServerFFCheck"];
}

+ (BOOL)isComputeSyncEnabledForDirection:(int64_t)a3 library:(id)a4
{
  return [a1 isComputeSyncEnabledForDirection:a3 library:a4 debugMode:0 debugLog:0];
}

+ (BOOL)_shouldPushComputeSyncWithLocalMajorVersion:(signed __int16)a3 localAnalaysisStage:(signed __int16)a4 cloudComputeStateVersionStr:(id)a5 localAdjustmentFingerprint:(id)a6 cloudAdjustmentFingerprint:(id)a7 scopedIdentifier:(id)a8
{
  int v11 = a4;
  int v12 = a3;
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  unint64_t v13 = (unint64_t)a6;
  unint64_t v14 = (unint64_t)a7;
  id v15 = a8;
  if (a5)
  {
    uint64_t v16 = (objc_class *)MEMORY[0x1E4F59928];
    id v17 = a5;
    uint64_t v18 = (void *)[[v16 alloc] initWithString:v17];

    char v19 = (void *)[objc_alloc(MEMORY[0x1E4F59928]) initWithMajorVersion:v12 stage:v11];
    uint64_t v20 = [v19 compare:v18];
    if (v20 == -1)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v22 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        {
          int v28 = 138543874;
          id v29 = v15;
          __int16 v30 = 2112;
          __int16 v31 = v18;
          __int16 v32 = 2112;
          unint64_t v33 = (unint64_t)v19;
          unint64_t v23 = "[CCSS] Not pushing compute sync payload for %{public}@. Cloud version %@ is higher than local version %@";
          __int16 v24 = v22;
          os_log_type_t v25 = OS_LOG_TYPE_DEBUG;
          uint32_t v26 = 32;
LABEL_16:
          _os_log_impl(&dword_19B3C7000, v24, v25, v23, (uint8_t *)&v28, v26);
        }
LABEL_17:
      }
    }
    else
    {
      if (v20)
      {
LABEL_7:
        BOOL v21 = 1;
LABEL_19:

        goto LABEL_20;
      }
      if (v13 && v14)
      {
        if (([(id)v13 isEqual:v14] & 1) == 0) {
          goto LABEL_7;
        }
      }
      else if (v13 | v14)
      {
        goto LABEL_7;
      }
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v22 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          int v28 = 138544386;
          id v29 = v15;
          __int16 v30 = 2112;
          __int16 v31 = v19;
          __int16 v32 = 2112;
          unint64_t v33 = v13;
          __int16 v34 = 2112;
          int v35 = v18;
          __int16 v36 = 2112;
          unint64_t v37 = v14;
          unint64_t v23 = "[CCSS] Not pushing compute sync payload for %{public}@. Versions match and adjustment fingerprints match"
                ", Local: %@ %@, Cloud: %@ %@";
          __int16 v24 = v22;
          os_log_type_t v25 = OS_LOG_TYPE_DEFAULT;
          uint32_t v26 = 52;
          goto LABEL_16;
        }
        goto LABEL_17;
      }
    }
    BOOL v21 = 0;
    goto LABEL_19;
  }
  BOOL v21 = v11 > 0;
LABEL_20:

  return v21;
}

+ (id)generateFullComputeStateRecordForRecord:(id)a3 payloadHelper:(id)a4 destinationDirectoryURL:(id)a5 inPhotoLibrary:(id)a6
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  unint64_t v13 = [v9 itemScopedIdentifier];

  if (v13)
  {
    unint64_t v14 = [v9 itemScopedIdentifier];
    id v15 = +[PLManagedAsset assetWithScopedIdentifier:v14 inLibrary:v12 prefetchResources:1];

    if (v15)
    {
      uint64_t v16 = [v15 computeSyncAttributes];
      if (!v16)
      {
        if (!*MEMORY[0x1E4F59AC0])
        {
          __int16 v24 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
          {
            __int16 v30 = [v9 itemScopedIdentifier];
            *(_DWORD *)CMTime buf = 138543618;
            id v56 = v30;
            __int16 v57 = 2112;
            id v58 = v9;
            _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Asset %{public}@ doesn't have a compute sync attributes relationship %@", buf, 0x16u);
          }
          goto LABEL_26;
        }
        uint64_t v16 = 0;
        goto LABEL_18;
      }
      id v17 = [v9 version];
      uint64_t v18 = [v15 _currentComputeStateVersion];
      char v19 = [v17 isEqualToString:v18];

      if ((v19 & 1) == 0)
      {
        if (!*MEMORY[0x1E4F59AC0])
        {
          __int16 v24 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
          {
            __int16 v31 = [v9 itemScopedIdentifier];
            os_log_type_t v25 = [v15 _currentComputeStateVersion];
            __int16 v32 = [v9 version];
            *(_DWORD *)CMTime buf = 138544130;
            id v56 = v31;
            __int16 v57 = 2114;
            id v58 = v25;
            __int16 v59 = 2114;
            id v60 = v32;
            __int16 v61 = 2112;
            uint64_t v62 = v9;
            _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Asset %{public}@ version %{public}@ doesn't match compute state record version %{public}@ %@", buf, 0x2Au);

            goto LABEL_25;
          }
LABEL_26:
          int v28 = 0;
LABEL_27:

          goto LABEL_28;
        }
LABEL_18:
        int v28 = 0;
LABEL_28:

        goto LABEL_29;
      }
      uint64_t v20 = [v9 adjustmentFingerprint];
      BOOL v21 = [v15 additionalAttributes];
      uint64_t v22 = [v21 adjustedStableHash];

      if (v20 && v22)
      {
        char v23 = [(id)v20 isEqual:v22];

        if ((v23 & 1) == 0) {
          goto LABEL_8;
        }
      }
      else
      {

        if (v20 | v22)
        {
LABEL_8:
          if (!*MEMORY[0x1E4F59AC0])
          {
            __int16 v24 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
            {
              os_log_type_t v25 = [v9 itemScopedIdentifier];
              uint64_t v51 = [v15 additionalAttributes];
              uint32_t v26 = [v51 adjustedStableHash];
              char v27 = [v9 adjustmentFingerprint];
              *(_DWORD *)CMTime buf = 138544130;
              id v56 = v25;
              __int16 v57 = 2114;
              id v58 = v26;
              __int16 v59 = 2114;
              id v60 = v27;
              __int16 v61 = 2112;
              uint64_t v62 = v9;
              _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Asset %{public}@ adjustmentFingerprint %{public}@ doesn't match compute state record adjustmentFingerprint %{public}@ %@", buf, 0x2Au);

LABEL_25:
              goto LABEL_26;
            }
            goto LABEL_26;
          }
          goto LABEL_18;
        }
      }
      __int16 v34 = [v15 computeSyncAttributes];
      __int16 v24 = objc_msgSend(v10, "computeSyncWrapperURLForAsset:analysisStage:", v15, objc_msgSend(v34, "localAnalysisStage"));

      if (!v24)
      {
        if (*MEMORY[0x1E4F59AC0])
        {
          __int16 v24 = 0;
          goto LABEL_26;
        }
        id v46 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        {
          __int16 v47 = [v15 scopedIdentifier];
          *(_DWORD *)CMTime buf = 138543618;
          id v56 = v47;
          __int16 v57 = 2112;
          id v58 = v9;
          _os_log_impl(&dword_19B3C7000, v46, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Nil compute sync payload URL generated for asset %{public}@ %@", buf, 0x16u);
        }
        int v28 = 0;
LABEL_52:

        goto LABEL_27;
      }
      id v54 = 0;
      char v35 = [v15 installComputeSyncResourceAfterAttachtoCPLWithError:&v54];
      __int16 v50 = v54;
      if ((v35 & 1) == 0 && !*MEMORY[0x1E4F59AC0])
      {
        __int16 v36 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
        {
          unint64_t v37 = [v15 scopedIdentifier];
          *(_DWORD *)CMTime buf = 138412546;
          id v56 = v37;
          __int16 v57 = 2112;
          id v58 = v50;
          _os_log_impl(&dword_19B3C7000, v36, OS_LOG_TYPE_ERROR, "[CCSS] Failed to install resource for asset %@ after compute state record upload: %@", buf, 0x16u);
        }
      }
      uint64_t v38 = NSString;
      uint64_t v39 = [MEMORY[0x1E4F29128] UUID];
      uint64_t v40 = [v39 UUIDString];
      id v41 = [v38 stringWithFormat:@"%@.dat", v40];
      uint64_t v52 = [v11 URLByAppendingPathComponent:v41];

      char v42 = (void *)MEMORY[0x1E4F8B908];
      id v43 = [v12 pathManager];
      int v44 = [v43 capabilities];
      id v53 = 0;
      LOBYTE(v42) = [v42 ingestItemAtURL:v24 toURL:v52 type:1 options:10 capabilities:v44 error:&v53];
      id v49 = v53;

      if (v42)
      {
        id v45 = (void *)v52;
        int v28 = (void *)[v9 copyAddingFileURL:v52];
      }
      else
      {
        id v45 = (void *)v52;
        if (!*MEMORY[0x1E4F59AC0])
        {
          id v48 = __CPLAssetsdOSLogDomain();
          id v46 = v50;
          if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)CMTime buf = 138543874;
            id v56 = v24;
            __int16 v57 = 2114;
            id v58 = v52;
            __int16 v59 = 2112;
            id v60 = v9;
            _os_log_impl(&dword_19B3C7000, v48, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Unable to copy payload from URL %{public}@ to %{public}@ %@", buf, 0x20u);
          }

          int v28 = 0;
          goto LABEL_51;
        }
        int v28 = 0;
      }
      id v46 = v50;
LABEL_51:

      goto LABEL_52;
    }
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v16 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        id v29 = [v9 itemScopedIdentifier];
        *(_DWORD *)CMTime buf = 138543618;
        id v56 = v29;
        __int16 v57 = 2112;
        id v58 = v9;
        _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Unable to fetch asset with scopedIdentifier %{public}@ for compute state record %@", buf, 0x16u);
      }
      goto LABEL_18;
    }
    id v15 = 0;
LABEL_14:
    int v28 = 0;
LABEL_29:

    goto LABEL_30;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    id v15 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 138412290;
      id v56 = v9;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "[CCSS] Skip generation: Nil item scoped identifier in compute state record: %@", buf, 0xCu);
    }
    goto LABEL_14;
  }
  int v28 = 0;
LABEL_30:

  return v28;
}

+ (id)createSparseComputeStateRecordsForAssets:(id)a3 inPhotoLibrary:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  uint64_t v17 = 0;
  uint64_t v18 = &v17;
  uint64_t v19 = 0x3032000000;
  uint64_t v20 = __Block_byref_object_copy__56816;
  BOOL v21 = __Block_byref_object_dispose__56817;
  id v22 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v7, "count"));
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __87__PLManagedAsset_ComputeSync__createSparseComputeStateRecordsForAssets_inPhotoLibrary___block_invoke;
  void v13[3] = &unk_1E5875340;
  id v8 = v5;
  id v14 = v8;
  id v9 = v6;
  id v15 = v9;
  uint64_t v16 = &v17;
  [v9 performBlockAndWait:v13];
  if ([(id)v18[5] count]) {
    id v10 = (void *)v18[5];
  }
  else {
    id v10 = 0;
  }
  id v11 = v10;

  _Block_object_dispose(&v17, 8);
  return v11;
}

void __87__PLManagedAsset_ComputeSync__createSparseComputeStateRecordsForAssets_inPhotoLibrary___block_invoke(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = +[PLManagedObjectJournalEntryPayload relationshipKeyPathsForPrefetching];
  uint64_t v21 = a1;
  id v4 = +[PLManagedAsset assetsWithScopedIdentifiers:v2 prefetchResources:0 relationshipKeyPathsForPrefetching:v3 inLibrary:*(void *)(a1 + 40)];

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v5 = v4;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v23 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        if ([v10 shouldPushComputeSync])
        {
          id v11 = [v10 analysisStateModificationDate];
          id v12 = v11;
          if (v11)
          {
            id v13 = v11;
          }
          else
          {
            id v13 = [MEMORY[0x1E4F1C9C8] date];
          }
          id v14 = v13;

          id v15 = objc_alloc(MEMORY[0x1E4F59918]);
          uint64_t v16 = [v10 scopedIdentifier];
          uint64_t v17 = [v10 _currentComputeStateVersion];
          uint64_t v18 = [v10 additionalAttributes];
          uint64_t v19 = [v18 adjustedStableHash];
          uint64_t v20 = (void *)[v15 initWithItemScopedIdentifier:v16 version:v17 fileURL:0 adjustmentFingerprint:v19 lastUpdatedDate:v14];

          [*(id *)(*(void *)(*(void *)(v21 + 48) + 8) + 40) addObject:v20];
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v7);
  }
}

- (BOOL)sceneAnalysisWasPerformedOnLatestAdjustment
{
  int v3 = [(PLManagedAsset *)self additionalAttributes];
  if ([v3 sceneAnalysisVersion])
  {
    id v4 = [(PLManagedAsset *)self dateForComparingAdjustmentVersions];
    id v5 = [(PLManagedAsset *)self additionalAttributes];
    uint64_t v6 = [v5 sceneAnalysisTimestamp];
    char v7 = [v4 isEqualToDate:v6];
  }
  else
  {
    char v7 = 0;
  }

  return v7;
}

- (void)removeAllTemporalSceneClassifications
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  int v3 = [v2 temporalSceneClassifications];
  id v4 = (void *)[v3 copy];

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v5 = v4;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        id v11 = objc_msgSend(v10, "managedObjectContext", (void)v12);
        [v11 deleteObject:v10];
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }
}

- (void)removeAllStillFrameSceneClassifications
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [(PLManagedAsset *)self additionalAttributes];
  int v3 = [v2 sceneClassifications];
  id v4 = (void *)[v3 copy];

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v5 = v4;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        id v11 = objc_msgSend(v10, "managedObjectContext", (void)v12);
        [v11 deleteObject:v10];
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }
}

- (void)removeTemporalSceneClassificationsOfType:(int64_t)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = [(PLManagedAsset *)self additionalAttributes];
  id v5 = [v4 temporalSceneClassifications];
  uint64_t v6 = (void *)[v5 copy];

  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v7 = v6;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        long long v12 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        if ((int)objc_msgSend(v12, "classificationType", (void)v14) == a3)
        {
          long long v13 = [v12 managedObjectContext];
          [v13 deleteObject:v12];
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v9);
  }
}

- (void)removeSceneClassificationsOfType:(int64_t)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = [(PLManagedAsset *)self additionalAttributes];
  id v5 = [v4 sceneClassifications];
  uint64_t v6 = (void *)[v5 copy];

  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v7 = v6;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        long long v12 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        if ((int)objc_msgSend(v12, "classificationType", (void)v14) == a3)
        {
          long long v13 = [v12 managedObjectContext];
          [v13 deleteObject:v12];
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v9);
  }
}

- (BOOL)calculateAllowedForAnalysis
{
  [MEMORY[0x1E4F8BA10] maskForAllowedForAnalysis];
  [(PLManagedAsset *)self savedAssetType];
  if (PLValidatedSavedAssetTypeApplies())
  {
    int v3 = [(PLManagedAsset *)self additionalAttributes];
    id v4 = [v3 montage];
    if (v4)
    {
      BOOL v5 = 0;
    }
    else
    {
      uint64_t v6 = [(PLManagedAsset *)self extendedAttributes];
      id v7 = [v6 generativeAIType];
      BOOL v5 = [v7 intValue] != 1;
    }
  }
  else
  {
    BOOL v5 = 0;
  }
  BOOL v8 = ([(PLManagedAsset *)self hidden] & 1) == 0
    && ![(PLManagedAsset *)self trashedState]
    && [(PLManagedAsset *)self avalanchePickTypeIsVisible];
  return v5 && v8;
}

- (NSDate)dateForComparingAdjustmentVersions
{
  int v3 = [(PLManagedAsset *)self adjustmentTimestamp];
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
  }
  else
  {
    id v5 = [(PLManagedAsset *)self dateCreated];
  }
  uint64_t v6 = v5;

  return (NSDate *)v6;
}

- (id)analysisStateForWorkerType:(signed __int16)a3
{
  int v3 = a3;
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = [(PLManagedAsset *)self analysisStates];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v9 workerType] == v3)
        {
          id v10 = v9;
          goto LABEL_11;
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  id v10 = 0;
LABEL_11:

  return v10;
}

- (BOOL)_analysisStateWasChangedForWorkerType:(signed __int16)a3
{
  int v3 = [(PLManagedAsset *)self analysisStateForWorkerType:a3];
  id v4 = [v3 changedValues];
  BOOL v5 = [v4 count] != 0;

  return v5;
}

- (void)setUserCloudSharedLiked:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if ([(PLManagedAsset *)self userCloudSharedLiked] != a3)
  {
    if (v3)
    {
      id v5 = [(PLManagedObject *)self photoLibrary];
      uint64_t v6 = +[PLCloudSharedComment insertNewCommentIntoAsset:self commentDate:0 withText:0 isLike:1 isMyComment:1 inLibrary:v5];
      v18[0] = MEMORY[0x1E4F143A8];
      v18[1] = 3221225472;
      v18[2] = __62__PLManagedAsset_PLCloudSharedAsset__setUserCloudSharedLiked___block_invoke;
      v18[3] = &unk_1E5875CE0;
      id v19 = v6;
      id v7 = v6;
      [v5 addCompletionHandlerToCurrentTransaction:v18];
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      BOOL v8 = [(PLManagedAsset *)self likeComments];
      id v5 = (id)[v8 countByEnumeratingWithState:&v14 objects:v20 count:16];
      if (v5)
      {
        uint64_t v9 = *(void *)v15;
        while (2)
        {
          for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v15 != v9) {
              objc_enumerationMutation(v8);
            }
            id v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
            long long v12 = [v11 isMyComment];
            int v13 = [v12 BOOLValue];

            if (v13)
            {
              id v5 = v11;
              goto LABEL_14;
            }
          }
          id v5 = (id)[v8 countByEnumeratingWithState:&v14 objects:v20 count:16];
          if (v5) {
            continue;
          }
          break;
        }
      }
LABEL_14:

      +[PLCloudSharedCommentsJob deleteSharedCommentFromServer:v5];
      [(PLManagedAsset *)self deleteComment:v5];
    }
  }
}

uint64_t __62__PLManagedAsset_PLCloudSharedAsset__setUserCloudSharedLiked___block_invoke(uint64_t a1)
{
  return +[PLCloudSharedCommentsJob publishCommentToServer:*(void *)(a1 + 32)];
}

- (void)userReadAllCloudSharedComments
{
  BOOL v3 = [(PLManagedAsset *)self orderedCloudComments];
  id v4 = [v3 lastObject];
  id v12 = [v4 commentDate];

  id v5 = [(PLManagedAsset *)self orderedLikeComments];
  uint64_t v6 = [v5 lastObject];
  id v7 = [v6 commentDate];

  BOOL v8 = v12 != 0;
  if (v12 && v7) {
    BOOL v8 = [v12 compare:v7] == 1;
  }
  if (v8) {
    uint64_t v9 = v12;
  }
  else {
    uint64_t v9 = v7;
  }
  id v10 = v9;
  id v11 = [(PLManagedAsset *)self cloudAssetGUID];
  +[PLPhotoSharingHelper markCommentsForAssetCollectionWithGUID:v11 asViewedWithLastViewedDate:v10];
}

- (unint64_t)likeCommentsCount
{
  return [(PLManagedAsset *)self _countForCommentRelationshipNamed:@"likeComments" inverseRelationshipName:@"likedAsset"];
}

- (NSOrderedSet)orderedLikeComments
{
  v9[1] = *MEMORY[0x1E4F143B8];
  [(PLManagedAsset *)self willAccessValueForKey:@"likeComments"];
  BOOL v3 = [(PLManagedAsset *)self likeComments];
  id v4 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"commentDate" ascending:1];
  v9[0] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:1];
  uint64_t v6 = [v3 sortedArrayUsingDescriptors:v5];

  [(PLManagedAsset *)self didAccessValueForKey:@"likeComments"];
  id v7 = [MEMORY[0x1E4F1CAA0] orderedSetWithArray:v6];

  return (NSOrderedSet *)v7;
}

- (unint64_t)cloudCommentsCount
{
  return [(PLManagedAsset *)self _countForCommentRelationshipNamed:@"cloudComments" inverseRelationshipName:@"commentedAsset"];
}

- (NSOrderedSet)orderedCloudComments
{
  v9[1] = *MEMORY[0x1E4F143B8];
  [(PLManagedAsset *)self willAccessValueForKey:@"cloudComments"];
  BOOL v3 = [(PLManagedAsset *)self cloudComments];
  id v4 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"commentDate" ascending:1];
  v9[0] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:1];
  uint64_t v6 = [v3 sortedArrayUsingDescriptors:v5];

  [(PLManagedAsset *)self didAccessValueForKey:@"cloudComments"];
  id v7 = [MEMORY[0x1E4F1CAA0] orderedSetWithArray:v6];

  return (NSOrderedSet *)v7;
}

- (unint64_t)_countForCommentRelationshipNamed:(id)a3 inverseRelationshipName:(id)a4
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = v8;
  if (!v7)
  {
    long long v17 = [MEMORY[0x1E4F28B00] currentHandler];
    [v17 handleFailureInMethod:a2, self, @"PLCloudSharedAsset.m", 468, @"Invalid parameter not satisfying: %@", @"assetRelationshipName" object file lineNumber description];

    if (v9) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t v18 = [MEMORY[0x1E4F28B00] currentHandler];
    [v18 handleFailureInMethod:a2, self, @"PLCloudSharedAsset.m", 469, @"Invalid parameter not satisfying: %@", @"inverseRelationshipName" object file lineNumber description];

    goto LABEL_3;
  }
  if (!v8) {
    goto LABEL_9;
  }
LABEL_3:
  if (([(PLManagedAsset *)self isFault] & 1) != 0
    || ([(PLManagedAsset *)self hasFaultForRelationshipNamed:v7] & 1) != 0)
  {
    id v10 = (void *)MEMORY[0x1E4F1C0D0];
    id v11 = +[PLCloudSharedComment entityName];
    id v12 = [v10 fetchRequestWithEntityName:v11];

    int v13 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K = %@", v9, self];
    [v12 setPredicate:v13];

    long long v14 = [(PLManagedAsset *)self managedObjectContext];
    unint64_t v15 = [v14 countForFetchRequest:v12 error:0];
  }
  else
  {
    id v12 = [(PLManagedAsset *)self valueForKey:v7];
    unint64_t v15 = [v12 count];
  }

  return v15;
}

- (BOOL)userCloudSharedLiked
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v2 = [(PLManagedAsset *)self likeComments];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v2);
        }
        uint64_t v6 = [*(id *)(*((void *)&v9 + 1) + 8 * i) isMyComment];
        char v7 = [v6 BOOLValue];

        if (v7)
        {
          LOBYTE(v3) = 1;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v3;
}

- (void)userDeleteCloudSharedComment:(id)a3
{
  id v4 = a3;
  +[PLCloudSharedCommentsJob deleteSharedCommentFromServer:v4];
  [(PLManagedAsset *)self deleteComment:v4];
}

- (id)userAddCloudSharedCommentWithText:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedObject *)self photoLibrary];
  uint64_t v6 = +[PLCloudSharedComment insertNewCommentIntoAsset:self commentDate:0 withText:v4 isLike:0 isMyComment:1 inLibrary:v5];

  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  void v9[2] = __72__PLManagedAsset_PLCloudSharedAsset__userAddCloudSharedCommentWithText___block_invoke;
  void v9[3] = &unk_1E5875CE0;
  id v7 = v6;
  id v10 = v7;
  [v5 addCompletionHandlerToCurrentTransaction:v9];

  return v7;
}

uint64_t __72__PLManagedAsset_PLCloudSharedAsset__userAddCloudSharedCommentWithText___block_invoke(uint64_t a1)
{
  return +[PLCloudSharedCommentsJob publishCommentToServer:*(void *)(a1 + 32)];
}

- (BOOL)cloudHasSameOwnerAsAsset:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    id v5 = [(PLManagedAsset *)self cloudOwnerHashedPersonID];
    uint64_t v6 = [v4 cloudOwnerHashedPersonID];
    if ([v5 isEqual:v6])
    {
      LOBYTE(v7) = 1;
    }
    else
    {
      int v8 = [(PLManagedAsset *)self cloudIsMyAsset];
      int v7 = v8 & [v4 cloudIsMyAsset];
    }
  }
  else
  {
    LOBYTE(v7) = 0;
  }

  return v7;
}

- (int)cloudCommentsStatusForOwnedAsset:(BOOL)a3
{
  unint64_t v4 = [(PLManagedAsset *)self totalCommentsCount];
  if (v4)
  {
    if ([(PLManagedAsset *)self cloudHasUnseenComments]) {
      LODWORD(v4) = 2;
    }
    else {
      LODWORD(v4) = 1;
    }
  }
  return v4;
}

- (void)deleteAssetComment:(id)a3
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    uint64_t v6 = [v4 isLike];
    int v7 = [v6 BOOLValue];

    if (v7) {
      [v5 setLikedAsset:0];
    }
    else {
      [v5 setCommentedAsset:0];
    }
    int v8 = [v5 isMyComment];
    int v9 = [v8 BOOLValue];

    [(PLManagedAsset *)self cloudHasCommentsByMe];
    if (v9)
    {
      long long v54 = 0u;
      long long v55 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      id v10 = [(PLManagedAsset *)self cloudComments];
      uint64_t v11 = [v10 countByEnumeratingWithState:&v52 objects:v59 count:16];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = *(void *)v53;
LABEL_8:
        uint64_t v14 = 0;
        while (1)
        {
          if (*(void *)v53 != v13) {
            objc_enumerationMutation(v10);
          }
          unint64_t v15 = *(void **)(*((void *)&v52 + 1) + 8 * v14);
          if (v15 != v5)
          {
            long long v16 = [v15 isMyComment];
            char v17 = [v16 BOOLValue];

            if (v17) {
              goto LABEL_47;
            }
          }
          if (v12 == ++v14)
          {
            uint64_t v12 = [v10 countByEnumeratingWithState:&v52 objects:v59 count:16];
            if (v12) {
              goto LABEL_8;
            }
            break;
          }
        }
      }

      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v10 = [(PLManagedAsset *)self likeComments];
      uint64_t v18 = [v10 countByEnumeratingWithState:&v48 objects:v58 count:16];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = *(void *)v49;
LABEL_17:
        uint64_t v21 = 0;
        while (1)
        {
          if (*(void *)v49 != v20) {
            objc_enumerationMutation(v10);
          }
          long long v22 = *(void **)(*((void *)&v48 + 1) + 8 * v21);
          if (v22 != v5)
          {
            long long v23 = [v22 isMyComment];
            char v24 = [v23 BOOLValue];

            if (v24) {
              break;
            }
          }
          if (v19 == ++v21)
          {
            uint64_t v19 = [v10 countByEnumeratingWithState:&v48 objects:v58 count:16];
            if (v19) {
              goto LABEL_17;
            }
            goto LABEL_24;
          }
        }
LABEL_47:

        [(PLManagedAsset *)self cloudHasCommentsConversation];
        goto LABEL_49;
      }
LABEL_24:

      [(PLManagedAsset *)self setCloudHasCommentsByMe:0];
      if (([(PLManagedAsset *)self cloudHasCommentsConversation] & 1) == 0) {
        goto LABEL_49;
      }
      goto LABEL_46;
    }
    if ([(PLManagedAsset *)self cloudHasCommentsConversation])
    {
      long long v46 = 0u;
      long long v47 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      long long v25 = [(PLManagedAsset *)self cloudComments];
      uint64_t v26 = [v25 countByEnumeratingWithState:&v44 objects:v57 count:16];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)v45;
LABEL_29:
        uint64_t v29 = 0;
        while (1)
        {
          if (*(void *)v45 != v28) {
            objc_enumerationMutation(v25);
          }
          __int16 v30 = *(void **)(*((void *)&v44 + 1) + 8 * v29);
          if (v30 != v5)
          {
            __int16 v31 = [v30 isMyComment];
            int v32 = [v31 BOOLValue];

            if (!v32) {
              break;
            }
          }
          if (v27 == ++v29)
          {
            uint64_t v27 = [v25 countByEnumeratingWithState:&v44 objects:v57 count:16];
            if (v27) {
              goto LABEL_29;
            }
            goto LABEL_36;
          }
        }
      }
      else
      {
LABEL_36:

        long long v42 = 0u;
        long long v43 = 0u;
        long long v40 = 0u;
        long long v41 = 0u;
        long long v25 = [(PLManagedAsset *)self likeComments];
        uint64_t v33 = [v25 countByEnumeratingWithState:&v40 objects:v56 count:16];
        if (!v33)
        {
LABEL_45:

LABEL_46:
          [(PLManagedAsset *)self setCloudHasCommentsConversation:0];
          goto LABEL_49;
        }
        uint64_t v34 = v33;
        uint64_t v35 = *(void *)v41;
LABEL_38:
        uint64_t v36 = 0;
        while (1)
        {
          if (*(void *)v41 != v35) {
            objc_enumerationMutation(v25);
          }
          unint64_t v37 = *(void **)(*((void *)&v40 + 1) + 8 * v36);
          if (v37 != v5)
          {
            uint64_t v38 = [v37 isMyComment];
            int v39 = [v38 BOOLValue];

            if (!v39) {
              break;
            }
          }
          if (v34 == ++v36)
          {
            uint64_t v34 = [v25 countByEnumeratingWithState:&v40 objects:v56 count:16];
            if (v34) {
              goto LABEL_38;
            }
            goto LABEL_45;
          }
        }
      }
    }
  }
LABEL_49:
}

- (void)deleteComment:(id)a3
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    uint64_t v6 = [v4 isLike];
    int v7 = [v6 BOOLValue];

    if (v7) {
      [v5 setLikedAsset:0];
    }
    else {
      [v5 setCommentedAsset:0];
    }
    int v8 = [v5 isMyComment];
    int v9 = [v8 BOOLValue];

    [(PLManagedAsset *)self cloudHasCommentsByMe];
    if (v9)
    {
      long long v55 = 0u;
      long long v56 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      id v10 = [(PLManagedAsset *)self cloudComments];
      uint64_t v11 = [v10 countByEnumeratingWithState:&v53 objects:v60 count:16];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = *(void *)v54;
LABEL_8:
        uint64_t v14 = 0;
        while (1)
        {
          if (*(void *)v54 != v13) {
            objc_enumerationMutation(v10);
          }
          unint64_t v15 = *(void **)(*((void *)&v53 + 1) + 8 * v14);
          if (v15 != v5)
          {
            long long v16 = [v15 isMyComment];
            char v17 = [v16 BOOLValue];

            if (v17) {
              goto LABEL_47;
            }
          }
          if (v12 == ++v14)
          {
            uint64_t v12 = [v10 countByEnumeratingWithState:&v53 objects:v60 count:16];
            if (v12) {
              goto LABEL_8;
            }
            break;
          }
        }
      }

      long long v51 = 0u;
      long long v52 = 0u;
      long long v49 = 0u;
      long long v50 = 0u;
      id v10 = [(PLManagedAsset *)self likeComments];
      uint64_t v18 = [v10 countByEnumeratingWithState:&v49 objects:v59 count:16];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = *(void *)v50;
LABEL_17:
        uint64_t v21 = 0;
        while (1)
        {
          if (*(void *)v50 != v20) {
            objc_enumerationMutation(v10);
          }
          long long v22 = *(void **)(*((void *)&v49 + 1) + 8 * v21);
          if (v22 != v5)
          {
            long long v23 = [v22 isMyComment];
            char v24 = [v23 BOOLValue];

            if (v24) {
              break;
            }
          }
          if (v19 == ++v21)
          {
            uint64_t v19 = [v10 countByEnumeratingWithState:&v49 objects:v59 count:16];
            if (v19) {
              goto LABEL_17;
            }
            goto LABEL_24;
          }
        }
LABEL_47:

        [(PLManagedAsset *)self cloudHasCommentsConversation];
        goto LABEL_49;
      }
LABEL_24:

      [(PLManagedAsset *)self setCloudHasCommentsByMe:0];
      if (([(PLManagedAsset *)self cloudHasCommentsConversation] & 1) == 0) {
        goto LABEL_49;
      }
      goto LABEL_46;
    }
    if (![(PLManagedAsset *)self cloudHasCommentsConversation])
    {
LABEL_49:
      long long v40 = [v5 managedObjectContext];
      [v40 deleteObject:v5];

      goto LABEL_50;
    }
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v25 = [(PLManagedAsset *)self cloudComments];
    uint64_t v26 = [v25 countByEnumeratingWithState:&v45 objects:v58 count:16];
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = *(void *)v46;
LABEL_29:
      uint64_t v29 = 0;
      while (1)
      {
        if (*(void *)v46 != v28) {
          objc_enumerationMutation(v25);
        }
        __int16 v30 = *(void **)(*((void *)&v45 + 1) + 8 * v29);
        if (v30 != v5)
        {
          __int16 v31 = [v30 isMyComment];
          int v32 = [v31 BOOLValue];

          if (!v32) {
            break;
          }
        }
        if (v27 == ++v29)
        {
          uint64_t v27 = [v25 countByEnumeratingWithState:&v45 objects:v58 count:16];
          if (v27) {
            goto LABEL_29;
          }
          goto LABEL_36;
        }
      }
    }
    else
    {
LABEL_36:

      long long v43 = 0u;
      long long v44 = 0u;
      long long v41 = 0u;
      long long v42 = 0u;
      long long v25 = [(PLManagedAsset *)self likeComments];
      uint64_t v33 = [v25 countByEnumeratingWithState:&v41 objects:v57 count:16];
      if (!v33)
      {
LABEL_45:

LABEL_46:
        [(PLManagedAsset *)self setCloudHasCommentsConversation:0];
        goto LABEL_49;
      }
      uint64_t v34 = v33;
      uint64_t v35 = *(void *)v42;
LABEL_38:
      uint64_t v36 = 0;
      while (1)
      {
        if (*(void *)v42 != v35) {
          objc_enumerationMutation(v25);
        }
        unint64_t v37 = *(void **)(*((void *)&v41 + 1) + 8 * v36);
        if (v37 != v5)
        {
          uint64_t v38 = [v37 isMyComment];
          int v39 = [v38 BOOLValue];

          if (!v39) {
            break;
          }
        }
        if (v34 == ++v36)
        {
          uint64_t v34 = [v25 countByEnumeratingWithState:&v41 objects:v57 count:16];
          if (v34) {
            goto LABEL_38;
          }
          goto LABEL_45;
        }
      }
    }

    goto LABEL_49;
  }
LABEL_50:
}

- (void)addComment:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    id v12 = v4;
    id v5 = [v4 isMyComment];
    int v6 = [v5 BOOLValue];

    int v7 = [(PLManagedAsset *)self cloudHasCommentsByMe];
    if ([(PLManagedAsset *)self cloudHasCommentsConversation]) {
      goto LABEL_10;
    }
    if (v7)
    {
      if (v6) {
        goto LABEL_12;
      }
    }
    else
    {
      if (!v6)
      {
LABEL_12:
        int v8 = [v12 isLike];
        int v9 = [v8 BOOLValue];

        if (v9) {
          id v10 = @"likeComments";
        }
        else {
          id v10 = @"cloudComments";
        }
        uint64_t v11 = [(PLManagedAsset *)self mutableSetValueForKey:v10];
        [v11 addObject:v12];

        id v4 = v12;
        goto LABEL_16;
      }
      if (![(PLManagedAsset *)self cloudCommentsCount]
        && ![(PLManagedAsset *)self likeCommentsCount])
      {
LABEL_10:
        if (((v6 ^ 1 | v7) & 1) == 0) {
          [(PLManagedAsset *)self setCloudHasCommentsByMe:1];
        }
        goto LABEL_12;
      }
    }
    [(PLManagedAsset *)self setCloudHasCommentsConversation:1];
    goto LABEL_10;
  }
LABEL_16:
}

- (id)cloudSharedAssetPathForPlaceholderKind:(signed __int16)a3
{
  int v3 = a3;
  [(PLManagedAsset *)self isCloudSharedAsset];
  id v5 = [(PLManagedAsset *)self pathForOriginalFile];
  int v6 = @"thumb.JPG";
  switch(v3)
  {
    case 3:
      goto LABEL_7;
    case 4:
      int v7 = (void *)MEMORY[0x1E4F8CDF8];
      int v8 = [(PLManagedAsset *)self uniformTypeIdentifier];
      int v9 = [v7 typeWithIdentifier:v8];
      char v10 = [v9 isEqual:*MEMORY[0x1E4F443D0]];

      if ((v10 & 1) == 0) {
        goto LABEL_8;
      }
      int v6 = @"GIF";
LABEL_7:
      uint64_t v11 = [(PLManagedAsset *)self _cloudSharedPathWithExtension:v6];

      id v5 = (void *)v11;
LABEL_8:
      return v5;
    case 7:
      int v6 = @"poster.JPG";
      goto LABEL_7;
    case 8:
      int v6 = @"MOV";
      goto LABEL_7;
    case 9:
      int v6 = @"medium.MP4";
      goto LABEL_7;
    default:
      goto LABEL_8;
  }
}

- (id)_cloudSharedPathWithExtension:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self pathForOriginalFile];
  int v6 = [v5 stringByDeletingPathExtension];
  int v7 = [v6 stringByAppendingPathExtension:v4];

  return v7;
}

- (unint64_t)totalCommentsCount
{
  unint64_t v3 = [(PLManagedAsset *)self cloudCommentsCount];
  return [(PLManagedAsset *)self likeCommentsCount] + v3;
}

- (NSString)cloudOwnerDisplayName
{
  unint64_t v3 = [(PLManagedAsset *)self cloudOwnerFirstName];
  id v4 = [(PLManagedAsset *)self cloudOwnerLastName];
  id v5 = [(PLManagedAsset *)self cloudOwnerFullName];
  int v6 = +[PLCloudSharedAlbum cloudOwnerDisplayNameWithFirstName:v3 lastName:v4 fullName:v5 emailKey:0 includingEmail:0 allowsEmail:0 emailAddressManager:0];

  return (NSString *)v6;
}

- (NSString)cloudOwnerFullName
{
  unint64_t v3 = [(PLManagedObject *)self photoLibrary];
  id v4 = [v3 personInfoManager];
  id v5 = [(PLManagedAsset *)self cloudOwnerHashedPersonID];
  int v6 = [v4 fullNameForPersonID:v5];

  return (NSString *)v6;
}

- (NSString)cloudOwnerLastName
{
  unint64_t v3 = [(PLManagedObject *)self photoLibrary];
  id v4 = [v3 personInfoManager];
  id v5 = [(PLManagedAsset *)self cloudOwnerHashedPersonID];
  int v6 = [v4 lastNameForPersonID:v5];

  return (NSString *)v6;
}

- (NSString)cloudOwnerFirstName
{
  unint64_t v3 = [(PLManagedObject *)self photoLibrary];
  id v4 = [v3 personInfoManager];
  id v5 = [(PLManagedAsset *)self cloudOwnerHashedPersonID];
  int v6 = [v4 firstNameForPersonID:v5];

  return (NSString *)v6;
}

- (NSString)cloudOwnerEmail
{
  unint64_t v3 = [(PLManagedObject *)self photoLibrary];
  id v4 = [v3 personInfoManager];
  id v5 = [(PLManagedAsset *)self cloudOwnerHashedPersonID];
  int v6 = [v4 emailForPersonID:v5];

  return (NSString *)v6;
}

+ (id)lightweightReimportFileNameWithGUID:(id)a3 type:(id)a4
{
  id v4 = a3;
  if (a3)
  {
    if (a4) {
      id v5 = (__CFString *)a4;
    }
    else {
      id v5 = @"JPG";
    }
    id v6 = a4;
    id v4 = [v4 stringByAppendingPathExtension:v5];
  }
  return v4;
}

+ (void)markAssetAsRecentlyUsed:(id)a3
{
  id v5 = a3;
  id v6 = [v5 cloudAssetGUID];
  if (v6)
  {
    int v7 = [v5 pathManager];
    int v8 = [v5 pathManager];

    if (!v8)
    {
      char v10 = [MEMORY[0x1E4F28B00] currentHandler];
      [v10 handleFailureInMethod:a2, a1, @"PLCloudSharedAsset.m", 605, @"Invalid parameter not satisfying: %@", @"asset.pathManager" object file lineNumber description];
    }
    pl_dispatch_once();
    id v11 = v6;
    id v9 = v7;
    pl_dispatch_async();
  }
}

void __62__PLManagedAsset_PLCloudSharedAsset__markAssetAsRecentlyUsed___block_invoke_122(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = PLPhotoSharingGetLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)CMTime buf = 138412290;
    unint64_t v30 = v3;
    _os_log_impl(&dword_19B3C7000, v2, OS_LOG_TYPE_DEFAULT, "(sharing-space-management) markAssetAsRecentlyUsed %@", buf, 0xCu);
  }

  id v4 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
  if (!markAssetAsRecentlyUsed__recentlyUsedGUIDS)
  {
    uint64_t v5 = [(id)objc_opt_class() persistedRecentlyUsedGUIDSWithPathManager:*(void *)(a1 + 40)];
    id v6 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
    markAssetAsRecentlyUsed__recentlyUsedGUIDS = v5;

    int v7 = PLPhotoSharingGetLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [(id)markAssetAsRecentlyUsed__recentlyUsedGUIDS count];
      *(_DWORD *)CMTime buf = 134217984;
      unint64_t v30 = v8;
      _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_DEFAULT, "(sharing-space-management) loaded recently used list with %lu entries", buf, 0xCu);
    }

    id v4 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
    if (!markAssetAsRecentlyUsed__recentlyUsedGUIDS)
    {
      id v9 = objc_alloc(MEMORY[0x1E4F1CA70]);
      uint64_t v10 = [v9 initWithCapacity:markAssetAsRecentlyUsed__maxListSize];
      id v11 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
      markAssetAsRecentlyUsed__recentlyUsedGUIDS = v10;

      id v4 = (void *)markAssetAsRecentlyUsed__recentlyUsedGUIDS;
    }
  }
  if ([v4 containsObject:*(void *)(a1 + 32)]) {
    [(id)markAssetAsRecentlyUsed__recentlyUsedGUIDS removeObject:*(void *)(a1 + 32)];
  }
  [(id)markAssetAsRecentlyUsed__recentlyUsedGUIDS addObject:*(void *)(a1 + 32)];
  ++markAssetAsRecentlyUsed__changesSinceLastSave;
  unint64_t v12 = [(id)markAssetAsRecentlyUsed__recentlyUsedGUIDS count];
  if (v12 >= markAssetAsRecentlyUsed__maxListSize)
  {
    objc_msgSend((id)markAssetAsRecentlyUsed__recentlyUsedGUIDS, "removeObjectsInRange:", 0, v12 - markAssetAsRecentlyUsed__maxListSize);
    unint64_t v12 = [(id)markAssetAsRecentlyUsed__recentlyUsedGUIDS count];
  }
  if (markAssetAsRecentlyUsed__changesSinceLastSave > (unint64_t)markAssetAsRecentlyUsed__maxChangesBetweenSaves)
  {
    uint64_t v13 = PLPhotoSharingGetLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)CMTime buf = 134218496;
      unint64_t v30 = v12;
      __int16 v31 = 2048;
      uint64_t v32 = markAssetAsRecentlyUsed__changesSinceLastSave;
      __int16 v33 = 2048;
      uint64_t v34 = markAssetAsRecentlyUsed__maxChangesBetweenSaves;
      _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_DEFAULT, "(sharing-space-management) will save recently used list with size %lu changes since last save %lu maxChangesBetweenSaves %lu", buf, 0x20u);
    }

    uint64_t v14 = [MEMORY[0x1E4F28CB8] defaultManager];
    unint64_t v15 = [(id)objc_opt_class() recentlyUsedGUIDsPathWithPathManager:*(void *)(a1 + 40)];
    id v28 = 0;
    char v16 = [v14 removeItemAtPath:v15 error:&v28];
    id v17 = v28;
    if ((v16 & 1) == 0 && [v14 fileExistsAtPath:v15])
    {
      uint64_t v18 = PLPhotoSharingGetLog();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        unint64_t v30 = (unint64_t)v17;
        _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_ERROR, "(sharing-space-management) ERROR deleting recently used list :%@", buf, 0xCu);
      }
    }
    uint64_t v19 = (void *)MEMORY[0x1E4F28F98];
    uint64_t v20 = [(id)markAssetAsRecentlyUsed__recentlyUsedGUIDS array];
    id v27 = 0;
    uint64_t v21 = [v19 dataWithPropertyList:v20 format:200 options:0 error:&v27];
    id v22 = v27;

    if (v21)
    {
      id v26 = v22;
      char v23 = [v21 writeToFile:v15 options:1073741825 error:&v26];
      id v24 = v26;

      if (v23)
      {
LABEL_28:
        markAssetAsRecentlyUsed__changesSinceLastSave = 0;

        return;
      }
      long long v25 = PLPhotoSharingGetLog();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        unint64_t v30 = (unint64_t)v24;
        _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_ERROR, "(sharing-space-management) ERROR failed to write recently used list: %@", buf, 0xCu);
      }
      id v22 = v24;
    }
    else
    {
      long long v25 = PLPhotoSharingGetLog();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412290;
        unint64_t v30 = (unint64_t)v22;
        _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_ERROR, "(sharing-space-management) ERROR failed to serialize recently used list: %@", buf, 0xCu);
      }
    }

    id v24 = v22;
    goto LABEL_28;
  }
}

void __62__PLManagedAsset_PLCloudSharedAsset__markAssetAsRecentlyUsed___block_invoke()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.PLCloudSharedAssetSaveJob.recentlyUsedAssetsQueue", 0);
  uint64_t v1 = (void *)markAssetAsRecentlyUsed__recentlyUsedAssetsQueue;
  markAssetAsRecentlyUsed__recentlyUsedAssetsQueue = (uint64_t)v0;

  CFPreferencesAppSynchronize(@"com.apple.mobileslideshow");
  Boolean keyExistsAndHasValidFormat = 0;
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue(@"sharingRecentlyUsedListMax", @"com.apple.mobileslideshow", &keyExistsAndHasValidFormat);
  if (AppIntegerValue) {
    BOOL v3 = keyExistsAndHasValidFormat == 0;
  }
  else {
    BOOL v3 = 1;
  }
  uint64_t v4 = 200;
  if (!v3) {
    uint64_t v4 = AppIntegerValue;
  }
  markAssetAsRecentlyUsed__maxListSize = v4;
  CFIndex v5 = CFPreferencesGetAppIntegerValue(@"sharingRecentlyUsedMaxChangesBetweenSaves", @"com.apple.mobileslideshow", &keyExistsAndHasValidFormat);
  if (v5) {
    BOOL v6 = keyExistsAndHasValidFormat == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = 10;
  if (!v6) {
    uint64_t v7 = v5;
  }
  markAssetAsRecentlyUsed__maxChangesBetweenSaves = v7;
  uint64_t v8 = PLPhotoSharingGetLog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)CMTime buf = 134218240;
    uint64_t v11 = markAssetAsRecentlyUsed__maxListSize;
    __int16 v12 = 2048;
    uint64_t v13 = markAssetAsRecentlyUsed__maxChangesBetweenSaves;
    _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_DEFAULT, "(sharing-space-management) maxListSize %lu maxChangesBetweenSaves %lu", buf, 0x16u);
  }
}

+ (id)persistedRecentlyUsedGUIDSWithPathManager:(id)a3
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  BOOL v3 = (void *)MEMORY[0x1E4F1C9B8];
  uint64_t v4 = [a1 recentlyUsedGUIDsPathWithPathManager:a3];
  CFIndex v5 = [v3 dataWithContentsOfFile:v4];

  if (v5)
  {
    BOOL v6 = [MEMORY[0x1E4F28F98] propertyListWithData:v5 options:0 format:0 error:0];
    if (v6)
    {
      uint64_t v7 = (void *)[objc_alloc(MEMORY[0x1E4F1CA70]) initWithArray:v6];
    }
    else
    {
      uint64_t v8 = PLPhotoSharingGetLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        uint64_t v11 = 0;
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "(sharing-space-management) ERROR failed to de-serialize recently used list: %@", (uint8_t *)&v10, 0xCu);
      }

      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

+ (id)recentlyUsedGUIDsPathWithPathManager:(id)a3
{
  return (id)[a3 photoDirectoryWithType:22 additionalPathComponents:@"recentlyUsedGUIDS"];
}

+ (id)fetchRequestForSortedCloudSharedAssetsWithPlaceholderKinds:(id)a3 additionalPredicate:(id)a4 ascending:(BOOL)a5
{
  BOOL v5 = a5;
  id v7 = a4;
  uint64_t v8 = (void *)MEMORY[0x1E4F1C0D0];
  id v9 = a3;
  int v10 = +[PLManagedAsset entityName];
  uint64_t v11 = [v8 fetchRequestWithEntityName:v10];

  id v12 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v13 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForCloudSharedAsset"), 1);
  [v12 addObject:v13];

  uint64_t v14 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K IN %@", @"cloudPlaceholderKind", v9];

  [v12 addObject:v14];
  if (v7) {
    [v12 addObject:v7];
  }
  unint64_t v15 = [MEMORY[0x1E4F28BA0] andPredicateWithSubpredicates:v12];
  [v11 setPredicate:v15];
  char v16 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"cloudServerPublishDate" ascending:v5];
  id v17 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"cloudBatchPublishDate" ascending:v5];
  uint64_t v18 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"dateCreated" ascending:v5];
  uint64_t v19 = objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:", v16, v17, v18, 0);
  [v11 setSortDescriptors:v19];

  [v11 setFetchBatchSize:100];
  return v11;
}

+ (id)cloudSharedAssetsWithGUIDs:(id)a3 inLibrary:(id)a4
{
  void v20[2] = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  id v7 = (void *)MEMORY[0x19F38D3B0]();
  uint64_t v8 = [v6 managedObjectContext];
  id v9 = (void *)MEMORY[0x1E4F28BA0];
  int v10 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K IN %@", @"cloudAssetGUID", v5];
  v20[0] = v10;
  uint64_t v11 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForCloudSharedAsset"), 1);
  v20[1] = v11;
  id v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v20 count:2];
  uint64_t v13 = [v9 andPredicateWithSubpredicates:v12];

  uint64_t v14 = (void *)MEMORY[0x1E4F1C0D0];
  unint64_t v15 = +[PLManagedAsset entityName];
  char v16 = [v14 fetchRequestWithEntityName:v15];

  if ((unint64_t)[v5 count] >= 0x65) {
    [v16 setFetchBatchSize:100];
  }
  [v16 setPredicate:v13];
  uint64_t v19 = 0;
  id v17 = [v8 executeFetchRequest:v16 error:&v19];

  return v17;
}

+ (id)allCloudSharedAssetsInLibrary:(id)a3
{
  uint64_t v4 = [a3 managedObjectContext];
  id v5 = objc_msgSend(a1, "assetsWithValidatedSavedAssetTypeMask:inManagedObjectContext:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForCloudSharedAsset"), v4);

  return v5;
}

- (BOOL)validForPersistenceChangedForChangedKeys:(id)a3
{
  return [a3 containsObject:@"bundleScope"];
}

- (id)payloadForChangedKeys:(id)a3
{
  id v4 = a3;
  if ([(PLManagedAsset *)self isValidForJournalPersistence]) {
    id v5 = [(PLManagedObjectJournalEntryPayload *)[PLAssetJournalEntryPayload alloc] initWithManagedObject:self changedKeys:v4];
  }
  else {
    id v5 = 0;
  }

  return v5;
}

- (id)payloadIDForTombstone:(id)a3
{
  BOOL v3 = [a3 objectForKeyedSubscript:@"uuid"];
  id v4 = +[PLJournalEntryPayloadIDFactory payloadIDWithUUIDString:v3];

  return v4;
}

- (id)payloadID
{
  uint64_t v2 = [(PLManagedAsset *)self uuid];
  BOOL v3 = +[PLJournalEntryPayloadIDFactory payloadIDWithUUIDString:v2];

  return v3;
}

- (BOOL)isValidForJournalPersistence
{
  uint64_t v2 = (void *)MEMORY[0x1E4F8B980];
  uint64_t v3 = [(PLManagedAsset *)self bundleScope];
  return [v2 bundleScopeShouldBePersistedForRebuild:v3];
}

- (BOOL)_setupPlaceholderAdjustmentPropertiesFromSourceAsset:(id)a3 bakeInAdjustmentsFromSourceAsset:(BOOL)a4 library:(id)a5
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a5;
  if ([v8 hasAdjustments])
  {
    int v10 = (unsigned char *)MEMORY[0x1E4F59AC0];
    if (a4)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        uint64_t v11 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          id v12 = [v8 uuid];
          uint64_t v13 = [(PLManagedAsset *)self uuid];
          *(_DWORD *)CMTime buf = 138412546;
          id v27 = v12;
          __int16 v28 = 2112;
          uint64_t v29 = v13;
          _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_DEFAULT, "Baking in adjustments from sourceAsset: %@ into placeholderAsset: %@", buf, 0x16u);
        }
      }
      -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", [v8 height]);
      -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", [v8 width]);
      -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", [v8 orientation]);
      [(PLManagedAsset *)self setVideoCpVisibilityState:0];
      goto LABEL_8;
    }
    if (!*MEMORY[0x1E4F59AC0])
    {
      unint64_t v15 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        char v16 = [v8 uuid];
        id v17 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)CMTime buf = 138412546;
        id v27 = v16;
        __int16 v28 = 2112;
        uint64_t v29 = v17;
        _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_DEFAULT, "Copying adjustments from sourceAsset: %@ to placeholderAsset: %@", buf, 0x16u);
      }
    }
    id v25 = 0;
    id v18 = +[PLUnmanagedAdjustment copyUnmanagedAdjustmentFromSourceAsset:v8 forPlaceholderAsset:self inLibrary:v9 error:&v25];
    id v19 = v25;
    BOOL v14 = v19 == 0;
    if (v19)
    {
      if (*v10)
      {
LABEL_19:

        goto LABEL_20;
      }
      uint64_t v20 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)CMTime buf = 138412802;
        id v27 = v8;
        __int16 v28 = 2112;
        uint64_t v29 = self;
        __int16 v30 = 2112;
        id v31 = v19;
        _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_ERROR, "Failed to copy unmanaged adjustmnent from sourceAsset: %@ to placeholderAsset: %@, %@", buf, 0x20u);
      }
    }
    else
    {
      -[PLManagedAsset setAdjustmentsState:](self, "setAdjustmentsState:", [v8 adjustmentsState]);
      uint64_t v21 = [(PLManagedAsset *)self additionalAttributes];
      id v22 = [v8 additionalAttributes];
      char v23 = [v22 adjustedStableHash];
      [v21 setAdjustedStableHash:v23];

      uint64_t v20 = [(PLManagedAsset *)self additionalAttributes];
      [v20 setUnmanagedAdjustment:v18];
    }

    goto LABEL_19;
  }
LABEL_8:
  BOOL v14 = 1;
LABEL_20:

  return v14;
}

- (BOOL)setupPlaceholderAssetWithRequiredPropertiesFromSourceAsset:(id)a3 placeholderAssetUUID:(id)a4 bundleScope:(unsigned __int16)a5 momentShare:(id)a6 importSessionID:(id)a7 bakeInAdjustmentsFromSourceAsset:(BOOL)a8 flattenLivePhoto:(BOOL)a9 copyTitleDescriptionAndKeywords:(BOOL)a10 copyCameraProcessingAdjustmentResources:(BOOL)a11 library:(id)a12
{
  BOOL v95 = a8;
  uint64_t v14 = a5;
  uint64_t v101 = *MEMORY[0x1E4F143B8];
  id v17 = a3;
  id v18 = a4;
  id v19 = a6;
  id v94 = a7;
  id v96 = a12;
  [(PLManagedAsset *)self setUuid:v18];
  uint64_t v93 = v18;
  [(PLManagedAsset *)self setCloudAssetGUID:v18];
  [(PLManagedAsset *)self setMomentShare:v19];
  uint64_t v20 = [v17 dateCreated];
  [(PLManagedAsset *)self setDateCreated:v20];

  uint64_t v21 = [v17 uniformTypeIdentifier];
  [(PLManagedAsset *)self setUniformTypeIdentifier:v21];

  -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", [MEMORY[0x1E4F8BA10] savedAssetTypeForPlaceholder]);
  [(PLManagedAsset *)self setBundleScope:v14];
  -[PLManagedAsset setHeight:](self, "setHeight:", [v17 height]);
  -[PLManagedAsset setWidth:](self, "setWidth:", [v17 width]);
  -[PLManagedAsset setOriginalHeight:](self, "setOriginalHeight:", [v17 originalHeight]);
  -[PLManagedAsset setOriginalWidth:](self, "setOriginalWidth:", [v17 originalWidth]);
  -[PLManagedAsset setKind:](self, "setKind:", [v17 kind]);
  -[PLManagedAsset setKindSubtype:](self, "setKindSubtype:", [v17 kindSubtype]);
  -[PLManagedAsset setPlaybackStyle:](self, "setPlaybackStyle:", [v17 playbackStyle]);
  -[PLManagedAsset setPlaybackVariation:](self, "setPlaybackVariation:", [v17 playbackVariation]);
  -[PLManagedAsset setVideoCpDurationValue:](self, "setVideoCpDurationValue:", [v17 videoCpDurationValue]);
  -[PLManagedAsset setVideoCpVisibilityState:](self, "setVideoCpVisibilityState:", [v17 videoCpVisibilityState]);
  -[PLManagedAsset setOrientation:](self, "setOrientation:", [v17 orientation]);
  -[PLManagedAsset setOriginalOrientation:](self, "setOriginalOrientation:", [v17 originalOrientation]);
  [v17 duration];
  -[PLManagedAsset setDuration:](self, "setDuration:");
  -[PLManagedAsset setHdrType:](self, "setHdrType:", [v17 hdrType]);
  id v22 = [v17 mediaGroupUUID];
  [(PLManagedAsset *)self setMediaGroupUUID:v22];

  char v23 = [v17 location];
  [(PLManagedAsset *)self setLocation:v23];

  id v24 = [v17 reverseLocationData];
  [(PLManagedAsset *)self setReverseLocationData:v24];

  -[PLManagedAsset setPackedPreferredCropRect:](self, "setPackedPreferredCropRect:", [v17 packedPreferredCropRect]);
  -[PLManagedAsset setPackedAcceptableCropRect:](self, "setPackedAcceptableCropRect:", [v17 packedAcceptableCropRect]);
  -[PLManagedAsset setHighFrameRateState:](self, "setHighFrameRateState:", [v17 highFrameRateState]);
  id v25 = [(PLManagedAsset *)self additionalAttributes];
  id v26 = [v17 scopedIdentifier];
  [v25 setSourceAssetForDuplicationCPLScopedIdentifier:v26];

  if (a11)
  {
    -[PLManagedAsset setCameraProcessingAdjustmentState:](self, "setCameraProcessingAdjustmentState:", [v17 cameraProcessingAdjustmentState]);
    id v27 = [(PLManagedAsset *)self additionalAttributes];
    __int16 v28 = [v17 additionalAttributes];
    uint64_t v29 = [v28 spatialOverCaptureGroupIdentifier];
    [v27 setSpatialOverCaptureGroupIdentifier:v29];
  }
  __int16 v30 = [(PLManagedAsset *)self additionalAttributes];
  id v31 = [v17 additionalAttributes];
  objc_msgSend(v30, "setVideoCpDisplayTimescale:", objc_msgSend(v31, "videoCpDisplayTimescale"));
  objc_msgSend(v30, "setVideoCpDisplayValue:", objc_msgSend(v31, "videoCpDisplayValue"));
  objc_msgSend(v30, "setVideoCpDurationTimescale:", objc_msgSend(v31, "videoCpDurationTimescale"));
  uint64_t v32 = [v31 originalFilename];
  [v30 setOriginalFilename:v32];

  __int16 v33 = [v31 originalFilesize];
  [v30 setOriginalFilesize:v33];

  uint64_t v34 = [v31 timeZoneOffset];
  [v30 setTimeZoneOffset:v34];

  uint64_t v35 = [v31 timeZoneName];
  [v30 setTimeZoneName:v35];

  if (a10)
  {
    uint64_t v36 = [v31 title];
    [v30 setTitle:v36];

    unint64_t v37 = [v31 accessibilityDescription];
    [v30 setAccessibilityDescription:v37];

    uint64_t v38 = [v31 longDescription];
    [v30 setLongDescription:v38];

    int v39 = +[PLKeywordManager keywordsForAsset:v17];
    if ([v39 count])
    {
      long long v40 = [PLKeywordManager alloc];
      long long v41 = [(PLManagedObject *)self pathManager];
      long long v42 = [(PLKeywordManager *)v40 initWithPathManager:v41];

      [(PLKeywordManager *)v42 setKeywords:v39 forAsset:self];
    }
  }
  long long v43 = [v17 momentShare];

  if (v43)
  {
    [v30 setImportedBy:7];
    [v30 setShareType:1];
    long long v44 = [v17 momentShare];
    long long v45 = [v44 owner];
    long long v46 = [v45 userIdentifier];
    [v30 setShareOriginator:v46];

    long long v47 = [v17 additionalAttributes];
    long long v48 = [v47 syndicationIdentifier];
    [v30 setSyndicationIdentifier:v48];
  }
  BOOL v49 = a9;
  long long v50 = [(PLManagedObject *)self photoLibrary];
  int v51 = [v50 isCloudPhotoLibraryEnabled];

  if (v51)
  {
    long long v52 = [(PLManagedObject *)self pathManager];
    int v53 = [v52 isUBF];

    if (!v53)
    {
      id v58 = v96;
      id v92 = v19;
      if (v19)
      {
        __int16 v59 = [v96 pathManager];
        uint64_t v60 = [v59 privateDirectoryWithSubType:7];
        uint64_t v61 = [v19 uuid];
        uint64_t v62 = [v60 stringByAppendingPathComponent:v61];

        uint64_t v63 = [v96 libraryServicesManager];
        id v64 = [v63 imageWriter];
        id v65 = [v17 fileExtension];
        uint64_t v66 = (void *)v62;
        uint64_t v67 = [v64 pathForNewAssetWithDirectoryPath:v62 fileName:v93 extension:v65];

        id v91 = (void *)v67;
        long long v68 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v67 isDirectory:0];
        unint64_t v69 = [(PLManagedObject *)self pathManager];
        long long v70 = [v68 path];
        long long v71 = [v70 stringByDeletingLastPathComponent];
        long long v72 = objc_msgSend(v69, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v71, 31, -[PLManagedAsset bundleScope](self, "bundleScope"));

        id v58 = v96;
        long long v73 = v66;

        id v74 = [v68 lastPathComponent];
        [(PLManagedAsset *)self setDirectory:v72];
        [(PLManagedAsset *)self setFilename:v74];
      }
      else
      {
        uint64_t v75 = [(PLManagedAsset *)self photoDataCPLResourceDestinationDirectoryCreateIfNeededWithIdentifier:v18];
        long long v76 = [v17 pathForOriginalFile];
        long long v77 = [v76 pathExtension];
        uint64_t v78 = [v77 uppercaseString];

        id v91 = (void *)v78;
        long long v73 = (void *)v75;
        long long v68 = [NSString stringWithFormat:@"%@.%@", v93, v78];
        id v79 = [(PLManagedObject *)self pathManager];
        id v80 = objc_msgSend(v79, "assetAbbreviatedMetadataDirectoryForDirectory:type:bundleScope:", v73, 31, -[PLManagedAsset bundleScope](self, "bundleScope"));
        [(PLManagedAsset *)self setDirectory:v80];

        [(PLManagedAsset *)self setFilename:v68];
      }
      __int16 v57 = v94;

      BOOL v54 = [(PLManagedAsset *)self _setupPlaceholderAdjustmentPropertiesFromSourceAsset:v17 bakeInAdjustmentsFromSourceAsset:v95 library:v58];
      id v19 = v92;
      BOOL v49 = a9;
      if (!a9) {
        goto LABEL_24;
      }
      goto LABEL_19;
    }
    BOOL v54 = [(PLManagedAsset *)self _setupPlaceholderAdjustmentPropertiesFromSourceAsset:v17 bakeInAdjustmentsFromSourceAsset:v95 library:v96];
    [(PLManagedAsset *)self setFilename:0];
    [(PLManagedAsset *)self setDirectory:0];
    long long v55 = [(PLManagedAsset *)self originalUniformTypeIdentifier];
    long long v56 = [(PLManagedAsset *)self originalFilename];
    [(PLManagedAsset *)self setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:v55 originalFilename:v56];
  }
  else
  {
    BOOL v54 = 1;
  }
  __int16 v57 = v94;
  if (!a9) {
    goto LABEL_24;
  }
LABEL_19:
  if (!*MEMORY[0x1E4F59AC0])
  {
    long long v81 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
    {
      long long v82 = [v17 uuid];
      [(PLManagedAsset *)self uuid];
      long long v84 = v83 = v19;
      *(_DWORD *)CMTime buf = 138412546;
      id v98 = v82;
      __int16 v99 = 2112;
      int v100 = v84;
      _os_log_impl(&dword_19B3C7000, v81, OS_LOG_TYPE_DEFAULT, "Flattening live photo from sourceAsset: %@ to placeholderAsset: %@", buf, 0x16u);

      id v19 = v83;
      __int16 v57 = v94;
    }
  }
  [(PLManagedAsset *)self setPlaybackStyle:1];
LABEL_24:
  if (v95 && [v17 isLoopingVideo])
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint32_t v85 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v86 = [(PLManagedAsset *)self uuid];
        [v17 uuid];
        v88 = id v87 = v19;
        *(_DWORD *)CMTime buf = 138412546;
        id v98 = v86;
        __int16 v99 = 2112;
        int v100 = v88;
        _os_log_impl(&dword_19B3C7000, v85, OS_LOG_TYPE_DEFAULT, "Resetting kind, kindSubtype and VideoCP state on baked-in placeholder asset %@ as source asset is looping video %@", buf, 0x16u);

        id v19 = v87;
        __int16 v57 = v94;
      }
    }
    [(PLManagedAsset *)self setKind:1];
  }
  else if (!v49)
  {
    goto LABEL_33;
  }
  [(PLManagedAsset *)self setKindSubtype:0];
  [(PLManagedAsset *)self setVideoCpDurationValue:0];
  [(PLManagedAsset *)self setVideoCpVisibilityState:0];
  long long v89 = [(PLManagedAsset *)self additionalAttributes];
  [v89 setVideoCpDisplayTimescale:0];
  [v89 setVideoCpDisplayValue:0];
  [v89 setVideoCpDurationTimescale:0];

LABEL_33:
  if (v57) {
    [(PLManagedAsset *)self setImportSessionAlbumWithImportSessionID:v57];
  }

  return v54;
}

- (unint64_t)masterResourceTypeForAdjustedAssetResourceType:(unint64_t)a3 flattenLivePhoto:(BOOL)a4
{
  if (a4)
  {
    if (a3 - 2 >= 4) {
      return 0;
    }
    else {
      return qword_19BA9EE50[a3 - 2];
    }
  }
  else
  {
    unint64_t result = 0;
    switch(a3)
    {
      case 2uLL:
        if (![(PLManagedAsset *)self isLoopingVideo])
        {
          LODWORD(result) = [(PLManagedAsset *)self isPhoto];
          goto LABEL_15;
        }
        unint64_t result = 2;
        break;
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
      case 0x11uLL:
      case 0x15uLL:
      case 0x1CuLL:
        unint64_t result = a3;
        break;
      case 0x10uLL:
        LODWORD(result) = [(PLManagedAsset *)self isVideo];
LABEL_15:
        unint64_t result = result;
        break;
      case 0x13uLL:
        if ([(PLManagedAsset *)self isLoopingVideo]) {
          unint64_t result = 1;
        }
        else {
          unint64_t result = 18;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

- (id)sortPlaceholderCloudResourcesByOrderOfCloudReReference:(id)a3
{
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = __78__PLManagedAsset_CMM__sortPlaceholderCloudResourcesByOrderOfCloudReReference___block_invoke;
  v5[3] = &unk_1E58729F8;
  id v6 = &unk_1EEBF23A8;
  uint64_t v3 = [a3 sortedArrayUsingComparator:v5];

  return v3;
}

uint64_t __78__PLManagedAsset_CMM__sortPlaceholderCloudResourcesByOrderOfCloudReReference___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = [a2 cplType];
  uint64_t v7 = [v5 cplType];

  id v8 = NSNumber;
  id v9 = *(void **)(a1 + 32);
  int v10 = [NSNumber numberWithUnsignedInteger:v6];
  uint64_t v11 = objc_msgSend(v8, "numberWithUnsignedInteger:", objc_msgSend(v9, "indexOfObject:", v10));

  id v12 = NSNumber;
  uint64_t v13 = *(void **)(a1 + 32);
  uint64_t v14 = [NSNumber numberWithUnsignedInteger:v7];
  unint64_t v15 = objc_msgSend(v12, "numberWithUnsignedInteger:", objc_msgSend(v13, "indexOfObject:", v14));

  uint64_t v16 = [v11 compare:v15];
  return v16;
}

- (id)filterCameraProcessingAdjustmentResourcesFromPlaceholderCloudResources:(id)a3
{
  uint64_t v3 = (void *)MEMORY[0x1E4F28F60];
  id v4 = a3;
  id v5 = [v3 predicateWithBlock:&__block_literal_global_97_103247];
  uint64_t v6 = [v4 filteredArrayUsingPredicate:v5];

  return v6;
}

BOOL __94__PLManagedAsset_CMM__filterCameraProcessingAdjustmentResourcesFromPlaceholderCloudResources___block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 cplType] != 23 && objc_msgSend(v2, "cplType") != 24;

  return v3;
}

- (id)fetchSourceAssetForDuplicationIfExists
{
  BOOL v3 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [v3 sourceAssetForDuplicationCPLScopedIdentifier];

  if (v4)
  {
    id v5 = [(PLManagedObject *)self photoLibrary];
    uint64_t v6 = +[PLManagedAsset assetWithScopedIdentifier:v4 inLibrary:v5 prefetchResources:0];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

- (void)setDestinationAssetCopyStateOnSourceAsset:(signed __int16)a3
{
  uint64_t v3 = a3;
  id v4 = [(PLManagedAsset *)self fetchSourceAssetForDuplicationIfExists];
  if (v4)
  {
    id v6 = v4;
    id v5 = [v4 additionalAttributes];
    [v5 setDestinationAssetCopyState:v3];

    id v4 = v6;
  }
}

- (void)fixupPlaceholderAssetWithSavedAssetType:(signed __int16)a3
{
  [(PLManagedAsset *)self setSavedAssetType:a3];
  id v8 = [(PLManagedAsset *)self fetchSourceAssetForDuplicationIfExists];
  if (v8)
  {
    id v4 = [v8 additionalAttributes];
    [v4 setDestinationAssetCopyState:2];
  }
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setSourceAssetForDuplicationCPLScopedIdentifier:0];

  id v6 = objc_opt_class();
  uint64_t v7 = [(PLManagedAsset *)self master];
  [v6 processMediaMetadataForAsset:self withCloudMaster:v7];
}

- (BOOL)placeholder_shouldAllowServerCopy
{
  if (PLCloudPhotoLibraryMultiLibarySyncingEnabled_onceToken != -1) {
    dispatch_once(&PLCloudPhotoLibraryMultiLibarySyncingEnabled_onceToken, &__block_literal_global_387);
  }
  return PLCloudPhotoLibraryMultiLibarySyncingEnabled_multiLibrarySyncingEnabled == 0;
}

- (BOOL)placeholder_shouldFlattenLivePhoto
{
  uint64_t v3 = [(PLManagedAsset *)self fetchSourceAssetForDuplicationIfExists];
  if ([v3 isPhotoIris]) {
    BOOL v4 = ![(PLManagedAsset *)self isPhotoIris];
  }
  else {
    LOBYTE(v4) = 0;
  }

  return [(PLManagedAsset *)self playbackStyle] == 1 && v4;
}

- (BOOL)placeholder_shouldBakeInAdjustments
{
  uint64_t v3 = [(PLManagedAsset *)self fetchSourceAssetForDuplicationIfExists];
  if ([v3 hasAdjustments]) {
    BOOL v4 = ![(PLManagedAsset *)self hasAdjustments];
  }
  else {
    LOBYTE(v4) = 0;
  }

  return v4;
}

+ (BOOL)attemptToRecreateMasterAndAssetResourcesForPlaceholderAssetRepush:(id)a3 sourceAsset:(id)a4 library:(id)a5
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t v10 = objc_msgSend(v7, "placeholder_shouldBakeInAdjustments");
  uint64_t v11 = objc_msgSend(v7, "placeholder_shouldFlattenLivePhoto");
  if (+[PLManagedAsset createMasterForPlaceholderAsset:v7 withSourceAsset:v8 shouldBakeInAdjustments:v10 shouldFlattenLivePhoto:v11 placeholderResourceURLToSourceResourceURLMap:0 photoLibrary:v9])
  {
    BOOL v12 = +[PLManagedAsset createAssetResourcesForPlaceholderAsset:v7 withSourceAsset:v8 shouldBakeInAdjustments:v10 shouldFlattenLivePhoto:v11 placeholderResourceURLToSourceResourceURLMap:0 photoLibrary:v9];
  }
  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

+ (BOOL)cloneResourceFileFromURL:(id)a3 toURL:(id)a4 forDestinationResource:(id)a5 forDestinationAsset:(id)a6 fileManager:(id)a7 error:(id *)a8
{
  v48[1] = *MEMORY[0x1E4F143B8];
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = a6;
  id v17 = a7;
  id v18 = [v14 path];
  id v19 = [v18 stringByDeletingLastPathComponent];
  id v40 = 0;
  int v20 = [v17 createDirectoryAtPath:v19 withIntermediateDirectories:1 attributes:0 error:&v40];
  id v21 = v40;

  if (!v20)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v26 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        id v27 = [v16 scopedIdentifier];
        *(_DWORD *)CMTime buf = 138412802;
        id v42 = v14;
        __int16 v43 = 2112;
        id v44 = v13;
        __int16 v45 = 2112;
        long long v46 = v27;
        _os_log_impl(&dword_19B3C7000, v26, OS_LOG_TYPE_ERROR, "Failed to create directory for resource at %@ from %@. Asset: %@", buf, 0x20u);
      }
    }
    if (a8) {
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  id v39 = v21;
  int v22 = [v17 copyItemAtURL:v13 toURL:v14 error:&v39];
  id v23 = v39;

  if (!v22)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      __int16 v28 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        uint64_t v29 = [v16 scopedIdentifier];
        *(_DWORD *)CMTime buf = 138412802;
        id v42 = v14;
        __int16 v43 = 2112;
        id v44 = v13;
        __int16 v45 = 2112;
        long long v46 = v29;
        _os_log_impl(&dword_19B3C7000, v28, OS_LOG_TYPE_ERROR, "Failed to clone resource at %@ from %@. Asset: %@", buf, 0x20u);
      }
    }
    if (!a8)
    {
      BOOL v25 = 0;
      goto LABEL_25;
    }
    id v21 = v23;
    goto LABEL_22;
  }
  id v24 = [v14 path];
  [v15 markAsLocallyAvailableWithFilePath:v24];

  if (([v15 copyPurgeabilityFromFileURL:v13] & 1) == 0)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      __int16 v30 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      {
        id v31 = [v16 scopedIdentifier];
        *(_DWORD *)CMTime buf = 138412546;
        id v42 = v14;
        __int16 v43 = 2112;
        id v44 = v31;
        _os_log_impl(&dword_19B3C7000, v30, OS_LOG_TYPE_ERROR, "Failed to update purgeability of resource at %@. Asset: %@", buf, 0x16u);
      }
    }
    unint64_t v37 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v32 = *MEMORY[0x1E4F8C500];
    uint64_t v47 = *MEMORY[0x1E4F28568];
    __int16 v33 = NSString;
    uint64_t v38 = [v16 scopedIdentifier];
    uint64_t v34 = [v33 stringWithFormat:@"Failed to update purgeability of resource at %@. Asset: %@", v14, v38];
    v48[0] = v34;
    uint64_t v35 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v48 forKeys:&v47 count:1];
    id v21 = [v37 errorWithDomain:v32 code:47011 userInfo:v35];

    if (a8)
    {
LABEL_22:
      id v23 = v21;
      BOOL v25 = 0;
      *a8 = v23;
      goto LABEL_25;
    }
LABEL_23:
    BOOL v25 = 0;
    id v23 = v21;
    goto LABEL_25;
  }
  BOOL v25 = 1;
LABEL_25:

  return v25;
}

+ (void)_cloneResourcesForMomentSharePlaceholderAsset:(id)a3 withPlaceholderResourceURLToSourceResourceURLMap:(id)a4 fileManager:(id)a5 photoLibrary:(id)a6
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  id v25 = a5;
  uint64_t v11 = [v9 allMasterCPLResources];
  BOOL v12 = v9;
  id v13 = [v9 allAssetCPLResources];
  id v14 = [v11 setByAddingObjectsFromSet:v13];

  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v15 = v14;
  uint64_t v16 = [v15 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)v27;
    do
    {
      for (uint64_t i = 0; i != v17; ++i)
      {
        if (*(void *)v27 != v18) {
          objc_enumerationMutation(v15);
        }
        int v20 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        id v21 = [v20 cplFileURL];
        uint64_t v22 = [v10 objectForKeyedSubscript:v21];
        id v23 = (void *)v22;
        if (v21) {
          BOOL v24 = v22 == 0;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24) {
          [a1 cloneResourceFileFromURL:v22 toURL:v21 forDestinationResource:v20 forDestinationAsset:v12 fileManager:v25 error:0];
        }
      }
      uint64_t v17 = [v15 countByEnumeratingWithState:&v26 objects:v30 count:16];
    }
    while (v17);
  }

  [v12 generateAndUpdateThumbnailsWithPreviewImage:0 thumbnailImage:0 fromImageSource:0 imageData:0 forceSRGBConversion:0];
}

+ (BOOL)createAssetResourcesForPlaceholderAsset:(id)a3 withSourceAsset:(id)a4 shouldBakeInAdjustments:(BOOL)a5 shouldFlattenLivePhoto:(BOOL)a6 placeholderResourceURLToSourceResourceURLMap:(id)a7 photoLibrary:(id)a8
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v11 = a3;
  id v34 = a7;
  if (a5) {
    goto LABEL_30;
  }
  BOOL v12 = [a4 allAssetCPLResources];
  if (![v12 count]) {
    goto LABEL_29;
  }
  id v13 = [MEMORY[0x1E4F1CA80] set];
  __int16 v33 = v12;
  id v14 = [v12 allObjects];
  id v15 = [v11 sortPlaceholderCloudResourcesByOrderOfCloudReReference:v14];

  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id obj = v15;
  uint64_t v16 = [obj countByEnumeratingWithState:&v37 objects:v45 count:16];
  if (!v16) {
    goto LABEL_28;
  }
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)v38;
  do
  {
    for (uint64_t i = 0; i != v17; ++i)
    {
      if (*(void *)v38 != v18) {
        objc_enumerationMutation(obj);
      }
      int v20 = *(void **)(*((void *)&v37 + 1) + 8 * i);
      id v21 = [v20 fingerprint];
      int v22 = [v13 containsObject:v21];

      if (v22)
      {
        if (*MEMORY[0x1E4F59AC0]) {
          continue;
        }
        id v23 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)CMTime buf = 138412546;
          id v42 = v20;
          __int16 v43 = 2112;
          id v44 = a1;
          _os_log_impl(&dword_19B3C7000, v23, OS_LOG_TYPE_DEFAULT, "Skipping asset resource from re-referencing since it has the same fingerprint as another resource on this asset. Skipped resource: %@, asset: %@", buf, 0x16u);
        }
      }
      else
      {
        BOOL v24 = objc_msgSend(v11, "pathForCPLResourceType:adjusted:", objc_msgSend(v20, "cplType"), objc_msgSend(v11, "hasAdjustments"));
        id v23 = v24;
        if (v24 && [v24 length])
        {
          id v25 = [v20 validatedExternalResourceRepresentationUsingFileURL:0];
          [v25 setSidecarIndex:0];
          long long v26 = [v11 storedResourceForExternalResource:v25 asset:v11];
          [v26 resetPrefetchState];
          long long v27 = [v26 fingerprint];
          [v13 addObject:v27];

          long long v28 = [v20 fileURL];
          uint64_t v29 = [v26 cplFileURL];
          __int16 v30 = (void *)v29;
          if (v34 && v28 && v29) {
            [v34 setObject:v28 forKeyedSubscript:v29];
          }
        }
        else
        {
          id v25 = [NSString stringWithFormat:@"Skipping asset resource from re-referencing since it has an invalid filePath. Skipped resource: %@, asset: %@", v20, a1];
          if (!*MEMORY[0x1E4F59AC0])
          {
            uint64_t v31 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)CMTime buf = 138412290;
              id v42 = v25;
              _os_log_impl(&dword_19B3C7000, v31, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
            }
          }
          PLSimulateCrash();
        }
      }
    }
    uint64_t v17 = [obj countByEnumeratingWithState:&v37 objects:v45 count:16];
  }
  while (v17);
LABEL_28:

  BOOL v12 = v33;
LABEL_29:

LABEL_30:
  return 1;
}

+ (BOOL)createMasterForPlaceholderAsset:(id)a3 withSourceAsset:(id)a4 shouldBakeInAdjustments:(BOOL)a5 shouldFlattenLivePhoto:(BOOL)a6 placeholderResourceURLToSourceResourceURLMap:(id)a7 photoLibrary:(id)a8
{
  BOOL v116 = a6;
  BOOL v10 = a5;
  uint64_t v129 = *MEMORY[0x1E4F143B8];
  id v12 = a3;
  id v13 = a4;
  id v14 = a7;
  id v15 = a8;
  uint64_t v16 = [v13 master];

  if (v16)
  {
    if ([v13 hasAdjustments]) {
      [v13 nonDynamicOriginalUTI];
    }
    else {
      [v13 uniformTypeIdentifier];
    }
    v112 = id v111 = v15;
    id v114 = v14;
    if (!v10)
    {
      id v121 = 0;
      uint64_t v23 = [v13 masterFingerPrintCacheIfNecessaryAndAdjustedFingerPrint:0 error:&v121];
      id v22 = v121;
      uint64_t v32 = (unsigned __int8 *)MEMORY[0x1E4F59AC0];
      int v33 = *MEMORY[0x1E4F59AC0];
      if (!v23 && !*MEMORY[0x1E4F59AC0])
      {
        id v34 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
        {
          [v12 scopedIdentifier];
          v36 = id v35 = v22;
          *(_DWORD *)CMTime buf = 138412546;
          id v124 = v36;
          __int16 v125 = 2112;
          uint64_t v126 = (uint64_t)v35;
          _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_ERROR, "Failed to retrieve source asset fingerprint for placeholder asset %@, error: %@", buf, 0x16u);

          id v22 = v35;
        }

        int v33 = *v32;
      }
      if (v33) {
        goto LABEL_26;
      }
      long long v28 = __CPLAssetsdOSLogDomain();
      if (!os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_25;
      }
      [v12 scopedIdentifier];
      v30 = uint64_t v29 = v22;
      *(_DWORD *)CMTime buf = 138412546;
      id v124 = v30;
      __int16 v125 = 2112;
      uint64_t v126 = v23;
      _os_log_impl(&dword_19B3C7000, v28, OS_LOG_TYPE_DEFAULT, "Not baking in adjustments during master creation for asset: %@, using fingerprint: %@", buf, 0x16u);
      goto LABEL_24;
    }
    id v21 = [v13 bestAvaliableAdjustedResource];
    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = [v21 fingerprint];
      if (v23) {
        goto LABEL_108;
      }
      BOOL v24 = [v13 fingerprintContext];
      [v24 fingerprintSchemeForNewMasterAsset];
      v26 = id v25 = v22;
      long long v27 = [v25 fileURL];
      uint64_t v23 = [v26 fingerPrintForFileAtURL:v27 error:0];

      id v22 = v25;
      id v15 = v111;

      if (v23)
      {
LABEL_108:
        if (*MEMORY[0x1E4F59AC0])
        {
LABEL_26:
          long long v37 = (void *)v23;

          long long v38 = [v12 momentShare];
          long long v39 = [v15 managedObjectContext];
          long long v40 = +[PLCloudMaster cloudMasterWithGUID:v23 inMomentShare:v38 prefetchResources:0 inManagedObjectContext:v39];

          if (v40)
          {
            [v12 setupPropertiesOnExistingMaster:v40];
            BOOL v20 = 1;
            id v14 = v114;
            id v22 = v37;
            uint64_t v17 = v112;
LABEL_96:

LABEL_97:
            id v15 = v111;
            goto LABEL_98;
          }
          long long v41 = [v12 momentShare];
          id v42 = +[PLCloudMaster insertIntoPhotoLibrary:v15 withCloudMasterGUID:v23 inMomentShare:v41];

          [v12 setupPropertiesOnNewCloudMaster:v42 withPlaceholderSourceAsset:v13 uniformTypeIdentifier:v112];
          [v42 setPlaceholderState:1];
          [v12 setMaster:v42];
          if (v10) {
            [v13 allAssetCPLResources];
          }
          else {
          id v44 = [v13 allMasterCPLResources];
          }
          __int16 v45 = [v44 allObjects];

          LODWORD(v44) = [v13 cameraProcessingAdjustmentState];
          uint64_t v46 = v114;
          id v109 = v37;
          id v110 = v13;
          long long v108 = v42;
          if (v44 != [v12 cameraProcessingAdjustmentState])
          {
            uint64_t v47 = [v12 filterCameraProcessingAdjustmentResourcesFromPlaceholderCloudResources:v45];

            __int16 v45 = (void *)v47;
          }
          objc_msgSend(v12, "sortPlaceholderCloudResourcesByOrderOfCloudReReference:", v45, v45);
          long long v117 = 0u;
          long long v118 = 0u;
          long long v119 = 0u;
          long long v120 = 0u;
          id obj = (id)objc_claimAutoreleasedReturnValue();
          uint64_t v48 = [obj countByEnumeratingWithState:&v117 objects:v122 count:16];
          if (!v48)
          {
LABEL_82:
            [v12 reevaluateCameraProcessingAdjustmentState];
            if (v10)
            {
              int v70 = [v12 kind];
              id v13 = v110;
              uint64_t v17 = v112;
              long long v40 = v108;
              if (v70 == [v110 kind])
              {
                long long v71 = [v110 additionalAttributes];
                long long v72 = [v71 mediaMetadataType];
                [v108 setMediaMetadataType:v72];

                long long v73 = [v110 additionalAttributes];
                id v74 = [v73 mediaMetadataData];

                if (v74)
                {
                  uint64_t v75 = [v108 mediaMetadata];
                  [v75 setValue:v74 forKey:@"data"];
                }
              }
              long long v76 = [v12 masterResourceForCPLType:1];
              long long v77 = [v76 uniformTypeIdentifier];
              uint64_t v78 = [v77 identifier];
              [v108 setUniformTypeIdentifier:v78];

              id v79 = [v76 uniformTypeIdentifier];
              id v80 = [v79 identifier];
              [v12 setUniformTypeIdentifier:v80];

              long long v81 = [v76 uniformTypeIdentifier];
              long long v82 = [v81 identifier];
              id v83 = +[PLManagedAsset preferredFileExtensionForType:v82];

              if (v83)
              {
                long long v84 = [v108 originalFilename];
                uint32_t v85 = [v84 stringByDeletingPathExtension];
                uint64_t v86 = [v85 stringByAppendingPathExtension:v83];
                [v108 setOriginalFilename:v86];

                id v87 = [v12 filename];
                id v88 = [v87 stringByDeletingPathExtension];
                long long v89 = [v88 stringByAppendingPathExtension:v83];
                [v12 setFilename:v89];
              }
              id v90 = [v12 additionalAttributes];
              id v91 = [v12 filename];
              [v90 setOriginalFilename:v91];

              -[NSObject setOriginalOrientation:](v108, "setOriginalOrientation:", [v12 originalOrientation]);
              id v92 = [v110 scopedIdentifier];
              [v108 setSourceMasterForDuplicationCPLScopedIdentifier:v92];
            }
            else
            {
              id v13 = v110;
              uint64_t v93 = [v110 master];
              id v94 = [v93 mediaMetadataType];
              long long v40 = v108;
              [v108 setMediaMetadataType:v94];

              BOOL v95 = [v110 master];
              id v96 = [v95 mediaMetadata];
              long long v76 = [v96 valueForKey:@"data"];

              uint64_t v17 = v112;
              if (v76)
              {
                char v97 = [v108 mediaMetadata];
                [v97 setValue:v76 forKey:@"data"];
              }
              id v98 = [v12 additionalAttributes];
              __int16 v99 = [v110 additionalAttributes];
              int v100 = [v99 mediaMetadataType];
              [v98 setMediaMetadataType:v100];

              uint64_t v101 = [v110 additionalAttributes];
              id v83 = [v101 mediaMetadataData];

              if (v83)
              {
                id v102 = [v12 additionalAttributes];
                [v102 setMediaMetadataData:v83];
              }
              id v92 = [v110 master];
              id v103 = [v92 scopedIdentifier];
              [v108 setSourceMasterForDuplicationCPLScopedIdentifier:v103];
            }
            id v104 = [v12 additionalAttributes];
            id v22 = v109;
            [v104 setOriginalStableHash:v109];

            BOOL v20 = 1;
            id v14 = v114;
            goto LABEL_96;
          }
          uint64_t v49 = v48;
          uint64_t v50 = *(void *)v118;
          uint64_t v113 = (void *)*MEMORY[0x1E4F44438];
LABEL_40:
          uint64_t v51 = 0;
          while (1)
          {
            if (*(void *)v118 != v50) {
              objc_enumerationMutation(obj);
            }
            long long v52 = *(void **)(*((void *)&v117 + 1) + 8 * v51);
            unint64_t v53 = [v52 cplType];
            BOOL v54 = [v52 fingerprint];

            if (v54)
            {
              BOOL v55 = v53 > 0x1B || ((1 << v53) & 0xC400400) == 0;
              if (v55 && (![v52 unorientedHeight] || !objc_msgSend(v52, "unorientedWidth")))
              {
                if (*MEMORY[0x1E4F59AC0]) {
                  goto LABEL_71;
                }
                long long v56 = __CPLAssetsdOSLogDomain();
                if (!os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_70;
                }
                __int16 v57 = [v12 scopedIdentifier];
                *(_DWORD *)CMTime buf = 138412546;
                id v124 = v52;
                __int16 v125 = 2112;
                uint64_t v126 = (uint64_t)v57;
                id v58 = v56;
                os_log_type_t v59 = OS_LOG_TYPE_ERROR;
                uint64_t v60 = "Skipping resource from re-referencing since its height or width is nil. Resource is in a really ba"
                      "d state. Skipped resource: %@, asset: %@";
                goto LABEL_56;
              }
              if (!v10)
              {
                if (!v116
                  || (unint64_t v53 = +[PLManagedAsset resourceTypeForUnadjustedFlattenedLivePhotoAssetResourceType:v53]) != 0)
                {
LABEL_59:
                  long long v56 = [v52 validatedExternalResourceRepresentationUsingFileURL:0];
                  [v56 setVersion:0];
                  [v56 setCplType:v53];
                  -[NSObject setSourceCplType:](v56, "setSourceCplType:", [v52 cplType]);
                  [v56 setSidecarIndex:0];
                  if (v10)
                  {
                    if ([v12 isLoopingVideo])
                    {
                      if (v53 != 1)
                      {
                        uint64_t v61 = [v52 uniformTypeIdentifier];
                        int v62 = [v61 conformsToMovie];

                        if (v62)
                        {
                          uint64_t v63 = [v113 identifier];
                          id v64 = +[PLUniformTypeIdentifier utiWithIdentifier:v63];
                          [v56 setUniformTypeIdentifier:v64];
                        }
                      }
                    }
                    -[NSObject setRecipeID:](v56, "setRecipeID:", +[PLResourceInstaller recipeIDFromCPLResourceType:assetType:fromAdjustedSet:](PLResourceInstaller, "recipeIDFromCPLResourceType:assetType:fromAdjustedSet:", v53, [v12 kind], 0));
                    uint64_t v46 = v114;
                  }
                  id v65 = [v12 storedResourceForExternalResource:v56 asset:v12];
                  [v65 resetPrefetchState];
                  uint64_t v66 = [v52 fileURL];
                  uint64_t v67 = [v65 cplFileURL];
                  long long v68 = (void *)v67;
                  if (v46 && v66 && v67) {
                    [v46 setObject:v66 forKeyedSubscript:v67];
                  }

                  goto LABEL_70;
                }
                if (*MEMORY[0x1E4F59AC0]) {
                  goto LABEL_71;
                }
                long long v56 = __CPLAssetsdOSLogDomain();
                if (!os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT)) {
                  goto LABEL_70;
                }
                __int16 v57 = [v12 scopedIdentifier];
                *(_DWORD *)CMTime buf = 138412546;
                id v124 = v52;
                __int16 v125 = 2112;
                uint64_t v126 = (uint64_t)v57;
                id v58 = v56;
                os_log_type_t v59 = OS_LOG_TYPE_DEFAULT;
                uint64_t v60 = "Skipping resource from re-referencing since we're flattening a live photo and we don't want this r"
                      "esource for flattening. Skipped resource: %@, asset: %@";
                goto LABEL_56;
              }
              unint64_t v53 = [v12 masterResourceTypeForAdjustedAssetResourceType:v53 flattenLivePhoto:v116];
              if (v53) {
                goto LABEL_59;
              }
              if (!*MEMORY[0x1E4F59AC0])
              {
                long long v56 = __CPLAssetsdOSLogDomain();
                if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
                {
                  __int16 v57 = [v12 scopedIdentifier];
                  *(_DWORD *)CMTime buf = 138412546;
                  id v124 = v52;
                  __int16 v125 = 2112;
                  uint64_t v126 = (uint64_t)v57;
                  id v58 = v56;
                  os_log_type_t v59 = OS_LOG_TYPE_DEFAULT;
                  uint64_t v60 = "Skipping resource from re-referencing since it's a asset resource we don't want in a master when"
                        " baking-in adjustments. Skipped resource: %@, asset: %@";
                  goto LABEL_56;
                }
LABEL_70:
              }
            }
            else if (!*MEMORY[0x1E4F59AC0])
            {
              long long v56 = __CPLAssetsdOSLogDomain();
              if (!os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
                goto LABEL_70;
              }
              __int16 v57 = [v12 scopedIdentifier];
              *(_DWORD *)CMTime buf = 138412546;
              id v124 = v52;
              __int16 v125 = 2112;
              uint64_t v126 = (uint64_t)v57;
              id v58 = v56;
              os_log_type_t v59 = OS_LOG_TYPE_ERROR;
              uint64_t v60 = "Skipping resource from re-referencing since its fingerprint is nil. Resource is in a really bad stat"
                    "e. Skipped resource: %@, asset: %@";
LABEL_56:
              _os_log_impl(&dword_19B3C7000, v58, v59, v60, buf, 0x16u);

              goto LABEL_70;
            }
LABEL_71:
            if (v49 == ++v51)
            {
              uint64_t v69 = [obj countByEnumeratingWithState:&v117 objects:v122 count:16];
              uint64_t v49 = v69;
              if (!v69) {
                goto LABEL_82;
              }
              goto LABEL_40;
            }
          }
        }
        long long v28 = __CPLAssetsdOSLogDomain();
        if (!os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
LABEL_25:

          goto LABEL_26;
        }
        [v12 scopedIdentifier];
        v30 = uint64_t v29 = v22;
        uint64_t v31 = objc_msgSend(MEMORY[0x1E4F59940], "descriptionForResourceType:", objc_msgSend(v29, "cplType"));
        *(_DWORD *)CMTime buf = 138412802;
        id v124 = v30;
        __int16 v125 = 2112;
        uint64_t v126 = (uint64_t)v31;
        __int16 v127 = 2112;
        id v128 = (const char *)v23;
        _os_log_impl(&dword_19B3C7000, v28, OS_LOG_TYPE_DEFAULT, "Baking in adjustments during master creation for asset: %@, using source's primary adjusted resource with type: %@ fingerprint: %@", buf, 0x20u);

LABEL_24:
        id v22 = v29;
        goto LABEL_25;
      }
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v40 = __CPLAssetsdOSLogDomain();
        uint64_t v17 = v112;
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
        {
          long long v106 = [v12 scopedIdentifier];
          *(_DWORD *)CMTime buf = 138412290;
          id v124 = v106;
          _os_log_impl(&dword_19B3C7000, v40, OS_LOG_TYPE_ERROR, "Baking in adjustments during master creation but failed to find a source primary adjusted resource fingerprint for asset: %@", buf, 0xCu);
        }
LABEL_34:
        BOOL v20 = 0;
        goto LABEL_96;
      }
    }
    else
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v40 = __CPLAssetsdOSLogDomain();
        uint64_t v17 = v112;
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
        {
          __int16 v43 = [v12 scopedIdentifier];
          *(_DWORD *)CMTime buf = 138412290;
          id v124 = v43;
          _os_log_impl(&dword_19B3C7000, v40, OS_LOG_TYPE_ERROR, "Baking in adjustments during master creation but failed to find a source primary adjusted resource for asset: %@", buf, 0xCu);
        }
        id v22 = 0;
        goto LABEL_34;
      }
      id v22 = 0;
    }
    BOOL v20 = 0;
    uint64_t v17 = v112;
    goto LABEL_97;
  }
  if (*MEMORY[0x1E4F59AC0])
  {
    BOOL v20 = 0;
    goto LABEL_99;
  }
  uint64_t v17 = __CPLAssetsdOSLogDomain();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
  {
    uint64_t v18 = [v13 uuid];
    id v19 = [v12 uuid];
    *(_DWORD *)CMTime buf = 138412802;
    id v124 = v18;
    __int16 v125 = 2112;
    uint64_t v126 = (uint64_t)v19;
    __int16 v127 = 2080;
    id v128 = "+[PLManagedAsset(CMM) createMasterForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLi"
           "vePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:]";
    _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "Source asset %@ for placeholder asset %@ does not have a master. Bailing out of %s", buf, 0x20u);
  }
  BOOL v20 = 0;
LABEL_98:

LABEL_99:
  return v20;
}

+ (BOOL)createMomentShareAssetsForMomentShare:(id)a3 batchedSourceAssetsToCopy:(id)a4 creationRequestSourceAssetsCMMAssetsMap:(id)a5 curatedSourceAssets:(id)a6 adjustmentBakeInOptionsDictionary:(id)a7 metadataCopyOptionsDictionary:(id)a8 keySourceAssetIdentifier:(id)a9 clientConnection:(id)a10 library:(id)a11 error:(id *)a12
{
  v135[1] = *MEMORY[0x1E4F143B8];
  id v104 = a3;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v102 = a7;
  id v101 = a8;
  id v100 = a9;
  id v92 = a10;
  id v20 = a11;
  id v97 = objc_alloc_init(MEMORY[0x1E4F28CB8]);
  id v21 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  v121[0] = MEMORY[0x1E4F143A8];
  v121[1] = 3221225472;
  v121[2] = __267__PLManagedAsset_CMM__createMomentShareAssetsForMomentShare_batchedSourceAssetsToCopy_creationRequestSourceAssetsCMMAssetsMap_curatedSourceAssets_adjustmentBakeInOptionsDictionary_metadataCopyOptionsDictionary_keySourceAssetIdentifier_clientConnection_library_error___block_invoke;
  v121[3] = &unk_1E5875D30;
  id v99 = v19;
  id v122 = v99;
  id v98 = v21;
  id v123 = v98;
  uint64_t v93 = v18;
  [v18 enumerateKeysAndObjectsUsingBlock:v121];
  uint64_t v22 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K IN %@ AND noindex:(%K) == NULL", @"uuid", v17, @"momentShare"];
  uint64_t v23 = (void *)MEMORY[0x1E4F1C0D0];
  BOOL v24 = +[PLManagedAsset entityName];
  id v25 = [v23 fetchRequestWithEntityName:v24];

  id v91 = (void *)v22;
  [v25 setPredicate:v22];
  objc_msgSend(v25, "setFetchLimit:", objc_msgSend(v17, "count"));
  v135[0] = @"additionalAttributes";
  long long v26 = [MEMORY[0x1E4F1C978] arrayWithObjects:v135 count:1];
  [v25 setRelationshipKeyPathsForPrefetching:v26];

  if ((unint64_t)[v17 count] >= 0x65) {
    [v25 setFetchBatchSize:100];
  }
  id v94 = v17;
  uint64_t v27 = [v17 count];
  BOOL v28 = v27 == 0;
  id v90 = v25;
  if (!v27)
  {
    uint64_t v32 = v104;
    id v31 = a1;
    if (*MEMORY[0x1E4F59AC0])
    {
      __int16 v30 = 0;
      id v95 = 0;
      goto LABEL_5;
    }
    id v34 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_DEFAULT, "Zero batchedSourceAssetsToCopy: passed in", (uint8_t *)&buf, 2u);
    }
    id v95 = 0;
    int v33 = 0;
LABEL_15:

    __int16 v30 = 0;
    goto LABEL_16;
  }
  uint64_t v29 = [v20 managedObjectContext];
  id v120 = 0;
  __int16 v30 = [v29 executeFetchRequest:v25 error:&v120];
  id v95 = v120;

  uint64_t v32 = v104;
  id v31 = a1;
  if (!v30)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v35 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        int buf = 138412290;
        id v127 = v95;
        _os_log_impl(&dword_19B3C7000, v35, OS_LOG_TYPE_ERROR, "Failed to fetch assets to copy: %@", (uint8_t *)&buf, 0xCu);
      }
    }
    uint64_t v36 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v37 = *MEMORY[0x1E4F8C500];
    uint64_t v133 = *MEMORY[0x1E4F28568];
    id v34 = [NSString stringWithFormat:@"Failed to fetch assets to copy: %@", v95];
    id v134 = v34;
    long long v38 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v134 forKeys:&v133 count:1];
    int v33 = [v36 errorWithDomain:v37 code:-1000001 userInfo:v38];

    id v31 = a1;
    goto LABEL_15;
  }
LABEL_5:
  int v33 = 0;
  BOOL v28 = 1;
LABEL_16:
  long long v39 = v98;
  long long v89 = v30;
  if (![v30 count]) {
    goto LABEL_50;
  }
  long long v118 = 0u;
  long long v119 = 0u;
  long long v116 = 0u;
  long long v117 = 0u;
  id obj = v30;
  uint64_t v114 = [obj countByEnumeratingWithState:&v116 objects:v132 count:16];
  if (!v114) {
    goto LABEL_49;
  }
  uint64_t v113 = *(void *)v117;
  uint64_t v111 = *MEMORY[0x1E4F28568];
  uint64_t v112 = *MEMORY[0x1E4F8C500];
  id v103 = v20;
  do
  {
    for (uint64_t i = 0; i != v114; ++i)
    {
      if (*(void *)v117 != v113) {
        objc_enumerationMutation(obj);
      }
      long long v41 = *(void **)(*((void *)&v116 + 1) + 8 * i);
      id v42 = [v41 uuid];
      LOWORD(v88) = 257;
      __int16 v43 = +[PLManagedAsset insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:](PLManagedAsset, "insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", v20, 0, 0, [MEMORY[0x1E4F8BA10] savedAssetTypeForPlaceholder], 1, 0, 0, 0, 0, v88, v89, v90);
      id v44 = [v43 uuid];
      if (!v43)
      {
        uint64_t v61 = v42;
        int v62 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v130 = v111;
        [NSString stringWithFormat:@"Failed to create placeholder asset"];
        v64 = uint64_t v63 = v33;
        uint64_t v131 = v64;
        id v65 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v131 forKeys:&v130 count:1];
        uint64_t v66 = [v62 errorWithDomain:v112 code:-1000001 userInfo:v65];

        BOOL v28 = 0;
        int v33 = (void *)v66;
        id v42 = v61;
        goto LABEL_47;
      }
      if (!v28)
      {
        BOOL v28 = 0;
        goto LABEL_47;
      }
      unsigned __int8 v115 = 0;
      __int16 v45 = [v102 objectForKeyedSubscript:v42];
      uint64_t v46 = [v31 shouldBakeInAdjustmentsAndFlattenLivePhoto:&v115 forSourceAsset:v41 adjustmentBakeInOptions:v45];
      id v110 = v45;
      if ([v45 flattenLivePhotoToStillIfNeeded])
      {
        unsigned __int8 v115 = 1;
        uint64_t v46 = [v41 hasAdjustments] | v46;
      }
      uint64_t v47 = [v101 objectForKeyedSubscript:v42];
      char v48 = [v47 shouldCopyTitleDescriptionAndKeywords];
      id v109 = v47;
      BYTE2(v87) = [v47 shouldCopySpatialOverCaptureResources];
      BYTE1(v87) = v48;
      LOBYTE(v87) = v115;
      if (!objc_msgSend(v43, "setupPlaceholderAssetWithRequiredPropertiesFromSourceAsset:placeholderAssetUUID:bundleScope:momentShare:importSessionID:bakeInAdjustmentsFromSourceAsset:flattenLivePhoto:copyTitleDescriptionAndKeywords:copyCameraProcessingAdjustmentResources:library:", v41, v44, 1, v104, 0, v46, v87, v20))
      {
        id v108 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
LABEL_41:
        long long v107 = v42;
        uint64_t v67 = v33;
        if (!*MEMORY[0x1E4F59AC0])
        {
          long long v68 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
          {
            uint64_t v69 = [v43 scopedIdentifier];
            int v70 = [v41 scopedIdentifier];
            int buf = 138412546;
            id v127 = v69;
            __int16 v128 = 2112;
            uint64_t v129 = (uint64_t)v70;
            _os_log_impl(&dword_19B3C7000, v68, OS_LOG_TYPE_ERROR, "Failed to prepare moment share asset %@ for server copy from source asset %@", (uint8_t *)&buf, 0x16u);
          }
        }
        long long v71 = (void *)MEMORY[0x1E4F28C58];
        uint64_t v124 = v111;
        long long v72 = NSString;
        long long v73 = [v43 scopedIdentifier];
        id v74 = [v41 scopedIdentifier];
        uint64_t v75 = [v72 stringWithFormat:@"Failed to prepare moment share asset %@ for server copy from source asset %@", v73, v74];
        __int16 v125 = v75;
        long long v76 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v125 forKeys:&v124 count:1];
        uint64_t v77 = [v71 errorWithDomain:v112 code:-1000001 userInfo:v76];

        uint64_t v60 = [v41 additionalAttributes];
        [v60 setDestinationAssetCopyState:0xFFFFFFFFLL];
        BOOL v28 = 0;
        int v33 = (void *)v77;
        id v20 = v103;
        id v31 = a1;
        id v42 = v107;
        long long v56 = v110;
        goto LABEL_46;
      }
      uint64_t v49 = [v41 uuid];
      int v50 = [v49 isEqualToString:v100];

      if (v50)
      {
        id v51 = objc_alloc(MEMORY[0x1E4F598E0]);
        long long v52 = [v104 previewData];
        unint64_t v53 = (void *)[v51 initWithData:v52];

        [v53 setKeyAssetIdentifier:v44];
        BOOL v54 = [v53 data];
        id v20 = v103;
        [v104 setPreviewData:v54];
      }
      if ([v99 containsObject:v42]) {
        [v98 addObject:v44];
      }
      id v55 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
      id v31 = a1;
      id v108 = v55;
      if (![a1 createMasterForPlaceholderAsset:v43 withSourceAsset:v41 shouldBakeInAdjustments:v46 shouldFlattenLivePhoto:v115 placeholderResourceURLToSourceResourceURLMap:v55 photoLibrary:v20]|| !objc_msgSend(a1, "createAssetResourcesForPlaceholderAsset:withSourceAsset:shouldBakeInAdjustments:shouldFlattenLivePhoto:placeholderResourceURLToSourceResourceURLMap:photoLibrary:", v43, v41, v46, v115, v55, v20))
      {
        goto LABEL_41;
      }
      [a1 _cloneResourcesForMomentSharePlaceholderAsset:v43 withPlaceholderResourceURLToSourceResourceURLMap:v55 fileManager:v97 photoLibrary:v20];
      long long v56 = v110;
      if (!*MEMORY[0x1E4F59AC0])
      {
        __int16 v57 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
        {
          id v96 = [v43 scopedIdentifier];
          uint64_t v58 = [v41 scopedIdentifier];
          int buf = 138412546;
          id v127 = v96;
          __int16 v128 = 2112;
          uint64_t v129 = v58;
          os_log_type_t v59 = (void *)v58;
          _os_log_impl(&dword_19B3C7000, v57, OS_LOG_TYPE_DEFAULT, "Preparing moment share asset %@ for server copy from source asset %@", (uint8_t *)&buf, 0x16u);

          id v31 = a1;
        }
      }
      uint64_t v60 = [v41 additionalAttributes];
      BOOL v28 = 1;
      [v60 setDestinationAssetCopyState:1];
LABEL_46:

LABEL_47:
    }
    uint64_t v114 = [obj countByEnumeratingWithState:&v116 objects:v132 count:16];
  }
  while (v114);
LABEL_49:

  uint64_t v32 = v104;
  long long v39 = v98;
LABEL_50:
  [v32 calculatePropertyValues];
  if ([v39 count])
  {
    uint64_t v78 = v39;
    id v79 = objc_alloc(MEMORY[0x1E4F598E0]);
    id v80 = [v32 previewData];
    long long v81 = (void *)[v79 initWithData:v80];

    long long v82 = [v78 allObjects];
    id v83 = (void *)[v82 mutableCopy];
    [v81 setCuratedAssetIdentifiers:v83];

    long long v84 = [v81 data];
    [v32 setPreviewData:v84];
  }
  if (a12) {
    char v85 = v28;
  }
  else {
    char v85 = 1;
  }
  if ((v85 & 1) == 0) {
    *a12 = v33;
  }

  return v28;
}

void __267__PLManagedAsset_CMM__createMomentShareAssetsForMomentShare_batchedSourceAssetsToCopy_creationRequestSourceAssetsCMMAssetsMap_curatedSourceAssets_adjustmentBakeInOptionsDictionary_metadataCopyOptionsDictionary_keySourceAssetIdentifier_clientConnection_library_error___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if ([*(id *)(a1 + 32) containsObject:a2]) {
    [*(id *)(a1 + 40) addObject:v5];
  }
}

+ (BOOL)shouldBakeInAdjustmentsAndFlattenLivePhoto:(BOOL *)a3 forSourceAsset:(id)a4 adjustmentBakeInOptions:(id)a5
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  id v8 = a5;
  if ([v7 hasAdjustments])
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v9 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v10 = [v7 scopedIdentifier];
        *(_DWORD *)int buf = 138412546;
        *(void *)&uint8_t buf[4] = v10;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v8;
        _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_DEFAULT, "Determining whether to bake in adjustments in source asset: %@, with adjustment bake-in options: %@", buf, 0x16u);
      }
    }
    *(void *)int buf = 0;
    *(void *)&unsigned __int16 buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000;
    char v23 = 0;
    uint64_t v18 = 0;
    id v19 = &v18;
    uint64_t v20 = 0x2020000000;
    char v21 = 0;
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = __105__PLManagedAsset_CMM__shouldBakeInAdjustmentsAndFlattenLivePhoto_forSourceAsset_adjustmentBakeInOptions___block_invoke;
    void v13[3] = &unk_1E5872A20;
    id v14 = v7;
    id v15 = v8;
    uint64_t v16 = &v18;
    id v17 = buf;
    [v14 synchronouslyFetchAdjustmentBlobWithCompletionHandler:v13];
    if (a3) {
      *a3 = *((unsigned char *)v19 + 24);
    }
    BOOL v11 = *(unsigned char *)(*(void *)&buf[8] + 24) != 0;

    _Block_object_dispose(&v18, 8);
    _Block_object_dispose(buf, 8);
  }
  else
  {
    BOOL v11 = 0;
  }

  return v11;
}

void __105__PLManagedAsset_CMM__shouldBakeInAdjustmentsAndFlattenLivePhoto_forSourceAsset_adjustmentBakeInOptions___block_invoke(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  uint64_t v139 = *MEMORY[0x1E4F143B8];
  id v12 = a2;
  id v13 = a4;
  id v14 = a5;
  id v15 = a8;
  id v16 = a9;
  if (v12)
  {
    id v17 = objc_alloc_init(PLPhotoEditPersistenceManager);
    uint64_t v18 = [(PLPhotoEditPersistenceManager *)v17 debugDescriptionForAdjustmentData:v12];
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v19 = a1;
  if ([*(id *)(a1 + 32) isPhotoIris]
    && [*(id *)(a1 + 40) shouldBakeInIfLivePhotoPlaybackDisabled]
    && ([*(id *)(a1 + 32) canPlayPhotoIris] & 1) == 0)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      uint64_t v20 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        char v21 = [*(id *)(a1 + 32) scopedIdentifier];
        *(_DWORD *)int buf = 138412290;
        CGImageSourceRef v138 = v21;
        _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments and flatten because Live Photo playback is disabled in source asset: %@", buf, 0xCu);
      }
    }
    uint64_t v19 = a1;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
  id v108 = v18;
  id v109 = v16;
  if (!*(unsigned char *)(*(void *)(*(void *)(v19 + 48) + 8) + 24)
    && [*(id *)(v19 + 40) shouldBakeInIfLivePhotoMuted])
  {
    id v96 = v15;
    id v101 = v14;
    long long v130 = 0u;
    long long v131 = 0u;
    long long v128 = 0u;
    long long v129 = 0u;
    uint64_t v22 = [v18 objectForKeyedSubscript:*MEMORY[0x1E4F8DC70]];
    uint64_t v23 = [v22 countByEnumeratingWithState:&v128 objects:v136 count:16];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)v129;
      uint64_t v26 = *MEMORY[0x1E4F8DC58];
      uint64_t v27 = *MEMORY[0x1E4F8DC78];
      while (2)
      {
        for (uint64_t i = 0; i != v24; ++i)
        {
          if (*(void *)v129 != v25) {
            objc_enumerationMutation(v22);
          }
          uint64_t v29 = *(void **)(*((void *)&v128 + 1) + 8 * i);
          __int16 v30 = [v29 objectForKeyedSubscript:v26];
          id v31 = [v29 objectForKeyedSubscript:@"enabled"];
          if ([v30 isEqualToString:v27] && objc_msgSend(v31, "BOOLValue"))
          {
            if (!*MEMORY[0x1E4F59AC0])
            {
              uint64_t v32 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
              {
                int v33 = [*(id *)(a1 + 32) scopedIdentifier];
                *(_DWORD *)int buf = 138412290;
                CGImageSourceRef v138 = v33;
                _os_log_impl(&dword_19B3C7000, v32, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because Live Photo is muted in source asset: %@", buf, 0xCu);
              }
            }
            *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;

            goto LABEL_29;
          }
        }
        uint64_t v24 = [v22 countByEnumeratingWithState:&v128 objects:v136 count:16];
        if (v24) {
          continue;
        }
        break;
      }
    }
LABEL_29:

    id v14 = v101;
    uint64_t v19 = a1;
    id v15 = v96;
    uint64_t v18 = v108;
    id v16 = v109;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(v19 + 56) + 8) + 24)
    && [*(id *)(v19 + 40) shouldBakeInIfAdjustedByThirdParty]
    && ([v13 isEqualToString:*MEMORY[0x1E4F8DC80]] & 1) == 0
    && ([v13 isEqualToString:*MEMORY[0x1E4F8DCC0]] & 1) == 0
    && ([v13 isEqualToString:*MEMORY[0x1E4F8DCB8]] & 1) == 0
    && (IPAAdjustmentsComeFromSupportedApp() & 1) == 0)
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v34 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        id v35 = [*(id *)(a1 + 32) scopedIdentifier];
        *(_DWORD *)int buf = 138412290;
        CGImageSourceRef v138 = v35;
        _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because third-party edits are applied in source asset: %@", buf, 0xCu);
      }
    }
    uint64_t v19 = a1;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
  if (*(unsigned char *)(*(void *)(*(void *)(v19 + 56) + 8) + 24)
    || ![*(id *)(v19 + 40) shouldBakeInIfCropped])
  {
    goto LABEL_70;
  }
  long long v126 = 0u;
  long long v127 = 0u;
  long long v124 = 0u;
  long long v125 = 0u;
  id obj = [v18 objectForKeyedSubscript:*MEMORY[0x1E4F8DC70]];
  uint64_t v36 = [obj countByEnumeratingWithState:&v124 objects:v135 count:16];
  if (!v36) {
    goto LABEL_69;
  }
  uint64_t v37 = v36;
  uint64_t v38 = *(void *)v125;
  uint64_t v39 = *MEMORY[0x1E4F8DC58];
  uint64_t v40 = *MEMORY[0x1E4F8DC90];
  uint64_t v93 = *MEMORY[0x1E4F8DCE8];
  uint64_t v94 = *MEMORY[0x1E4F8DC68];
  long long v41 = @"enabled";
  id v92 = v12;
  id v102 = v14;
  id v106 = v13;
  id v97 = v15;
  while (2)
  {
    for (uint64_t j = 0; j != v37; ++j)
    {
      if (*(void *)v125 != v38) {
        objc_enumerationMutation(obj);
      }
      __int16 v43 = *(void **)(*((void *)&v124 + 1) + 8 * j);
      id v44 = [v43 objectForKeyedSubscript:v39];
      __int16 v45 = [v43 objectForKeyedSubscript:v41];
      if ([v44 isEqualToString:v40]
        && (!v45 || [v45 BOOLValue]))
      {
        uint64_t v54 = a1;
        if (*MEMORY[0x1E4F59AC0])
        {
LABEL_68:
          *(unsigned char *)(*(void *)(*(void *)(v54 + 56) + 8) + 24) = 1;

          id v12 = v92;
          id v14 = v102;
          id v13 = v106;
          id v15 = v97;
          goto LABEL_69;
        }
        id v55 = __CPLAssetsdOSLogDomain();
        if (!os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
LABEL_67:

          goto LABEL_68;
        }
        long long v56 = [*(id *)(a1 + 32) scopedIdentifier];
        *(_DWORD *)int buf = 138412290;
        CGImageSourceRef v138 = v56;
        __int16 v57 = "Will bake in adjustments because of cropping edits in source asset: %@";
LABEL_66:
        _os_log_impl(&dword_19B3C7000, v55, OS_LOG_TYPE_DEFAULT, v57, buf, 0xCu);

        goto LABEL_67;
      }
      if ([v44 isEqualToString:v40])
      {
        id v110 = v45;
        uint64_t v46 = v40;
        uint64_t v47 = v37;
        uint64_t v48 = v39;
        uint64_t v49 = v41;
        uint64_t v50 = v38;
        id v51 = [v43 objectForKeyedSubscript:v94];
        long long v52 = [v51 objectForKeyedSubscript:v93];
        if (![v52 BOOLValue])
        {
          int v53 = [v44 isEqualToString:@"VideoReframe"];

          uint64_t v38 = v50;
          long long v41 = v49;
          uint64_t v39 = v48;
          uint64_t v37 = v47;
          uint64_t v40 = v46;
          __int16 v45 = v110;
          if (v53) {
            goto LABEL_63;
          }
          goto LABEL_56;
        }

        __int16 v45 = v110;
LABEL_63:
        if (*MEMORY[0x1E4F59AC0])
        {
          uint64_t v54 = a1;
          goto LABEL_68;
        }
        id v55 = __CPLAssetsdOSLogDomain();
        uint64_t v54 = a1;
        if (!os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_67;
        }
        long long v56 = [*(id *)(a1 + 32) scopedIdentifier];
        *(_DWORD *)int buf = 138412290;
        CGImageSourceRef v138 = v56;
        __int16 v57 = "Will bake in adjustments because of reframe edits in source asset: %@";
        goto LABEL_66;
      }
      if ([v44 isEqualToString:@"VideoReframe"]) {
        goto LABEL_63;
      }
LABEL_56:
    }
    uint64_t v37 = [obj countByEnumeratingWithState:&v124 objects:v135 count:16];
    id v12 = v92;
    id v14 = v102;
    id v13 = v106;
    id v15 = v97;
    if (v37) {
      continue;
    }
    break;
  }
LABEL_69:

  uint64_t v19 = a1;
  uint64_t v18 = v108;
  id v16 = v109;
LABEL_70:
  if (!*(unsigned char *)(*(void *)(*(void *)(v19 + 56) + 8) + 24)
    && [*(id *)(v19 + 40) shouldBakeInIfTimelineTrimmed])
  {
    id v98 = v15;
    id v103 = v14;
    long long v122 = 0u;
    long long v123 = 0u;
    long long v120 = 0u;
    long long v121 = 0u;
    uint64_t v58 = [v18 objectForKeyedSubscript:*MEMORY[0x1E4F8DC70]];
    uint64_t v59 = [v58 countByEnumeratingWithState:&v120 objects:v134 count:16];
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = *(void *)v121;
      uint64_t v62 = *MEMORY[0x1E4F8DC58];
      uint64_t v63 = *MEMORY[0x1E4F8DCD0];
      while (2)
      {
        for (uint64_t k = 0; k != v60; ++k)
        {
          if (*(void *)v121 != v61) {
            objc_enumerationMutation(v58);
          }
          id v65 = *(void **)(*((void *)&v120 + 1) + 8 * k);
          uint64_t v66 = [v65 objectForKeyedSubscript:v62];
          uint64_t v67 = [v65 objectForKeyedSubscript:@"enabled"];
          if ([v66 isEqualToString:v63]
            && (!v67 || [v67 BOOLValue]))
          {
            if (!*MEMORY[0x1E4F59AC0])
            {
              long long v68 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v69 = [*(id *)(a1 + 32) scopedIdentifier];
                *(_DWORD *)int buf = 138412290;
                CGImageSourceRef v138 = v69;
                _os_log_impl(&dword_19B3C7000, v68, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because of timeline trimming edits in source asset: %@", buf, 0xCu);
              }
            }
            *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;

            goto LABEL_88;
          }
        }
        uint64_t v60 = [v58 countByEnumeratingWithState:&v120 objects:v134 count:16];
        if (v60) {
          continue;
        }
        break;
      }
    }
LABEL_88:

    id v14 = v103;
    uint64_t v19 = a1;
    id v15 = v98;
    uint64_t v18 = v108;
    id v16 = v109;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(v19 + 56) + 8) + 24)
    && [*(id *)(v19 + 40) shouldBakeInIfPortraitDepthEffectEnabled])
  {
    id v99 = v15;
    id v104 = v14;
    long long v118 = 0u;
    long long v119 = 0u;
    long long v116 = 0u;
    long long v117 = 0u;
    int v70 = [v18 objectForKeyedSubscript:*MEMORY[0x1E4F8DC70]];
    uint64_t v71 = [v70 countByEnumeratingWithState:&v116 objects:v133 count:16];
    if (v71)
    {
      uint64_t v72 = v71;
      uint64_t v73 = *(void *)v117;
      uint64_t v74 = *MEMORY[0x1E4F8DC58];
      uint64_t v75 = *MEMORY[0x1E4F8DC98];
      while (2)
      {
        for (uint64_t m = 0; m != v72; ++m)
        {
          if (*(void *)v117 != v73) {
            objc_enumerationMutation(v70);
          }
          uint64_t v77 = *(void **)(*((void *)&v116 + 1) + 8 * m);
          uint64_t v78 = [v77 objectForKeyedSubscript:v74];
          id v79 = [v77 objectForKeyedSubscript:@"enabled"];
          if ([v78 isEqualToString:v75]
            && (!v79 || [v79 BOOLValue]))
          {
            if (!*MEMORY[0x1E4F59AC0])
            {
              id v80 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
              {
                long long v81 = [*(id *)(a1 + 32) scopedIdentifier];
                *(_DWORD *)int buf = 138412290;
                CGImageSourceRef v138 = v81;
                _os_log_impl(&dword_19B3C7000, v80, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because of portrait depth effect in source asset: %@", buf, 0xCu);
              }
            }
            *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;

            goto LABEL_107;
          }
        }
        uint64_t v72 = [v70 countByEnumeratingWithState:&v116 objects:v133 count:16];
        if (v72) {
          continue;
        }
        break;
      }
    }
LABEL_107:

    id v14 = v104;
    uint64_t v19 = a1;
    id v15 = v99;
    uint64_t v18 = v108;
    id v16 = v109;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(v19 + 56) + 8) + 24)
    && [*(id *)(v19 + 40) shouldBakeInIfContainsPenultimateResources])
  {
    id v100 = v15;
    id v105 = v14;
    id v107 = v13;
    long long v114 = 0u;
    long long v115 = 0u;
    long long v112 = 0u;
    long long v113 = 0u;
    long long v82 = [*(id *)(v19 + 32) modernResources];
    uint64_t v83 = [v82 countByEnumeratingWithState:&v112 objects:v132 count:16];
    if (v83)
    {
      uint64_t v84 = v83;
      uint64_t v85 = v19;
      uint64_t v86 = *(void *)v113;
      uint64_t v87 = (unsigned char *)MEMORY[0x1E4F59AC0];
      do
      {
        for (uint64_t n = 0; n != v84; ++n)
        {
          if (*(void *)v113 != v86) {
            objc_enumerationMutation(v82);
          }
          long long v89 = *(void **)(*((void *)&v112 + 1) + 8 * n);
          if ([v89 version] == 1 && (objc_msgSend(v89, "isDerivative") & 1) == 0)
          {
            if (!*v87)
            {
              id v90 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v90, OS_LOG_TYPE_DEFAULT))
              {
                id v91 = [*(id *)(v85 + 32) scopedIdentifier];
                *(_DWORD *)int buf = 138412290;
                CGImageSourceRef v138 = v91;
                _os_log_impl(&dword_19B3C7000, v90, OS_LOG_TYPE_DEFAULT, "Will bake in adjustments because penultimate resources exist in source asset: %@", buf, 0xCu);

                uint64_t v85 = a1;
              }
            }
            *(unsigned char *)(*(void *)(*(void *)(v85 + 56) + 8) + 24) = 1;
          }
        }
        uint64_t v84 = [v82 countByEnumeratingWithState:&v112 objects:v132 count:16];
      }
      while (v84);
    }

    id v14 = v105;
    id v13 = v107;
    id v15 = v100;
    uint64_t v18 = v108;
    id v16 = v109;
  }
}

+ (unint64_t)resourceTypeForUnadjustedFlattenedLivePhotoAssetResourceType:(unint64_t)a3
{
  unint64_t result = a3;
  if ((a3 + 1 > 0x1C || ((1 << (a3 + 1)) & 0x1185FE7F) == 0) && a3 - 1000 >= 2) {
    return 0;
  }
  return result;
}

+ (BOOL)shouldPerformServerCopyWithSourceAsset:(id)a3 copyingFromMomentShare:(BOOL)a4 photoLibrary:(id)a5
{
  BOOL v6 = a4;
  id v7 = a3;
  id v8 = a5;
  if ([v8 isCloudPhotoLibraryEnabled]
    && objc_msgSend(v7, "placeholder_shouldAllowServerCopy"))
  {
    if (!v6)
    {
      id v16 = [v7 allMasterCPLResources];
      id v17 = [v7 allAssetCPLResources];
      BOOL v11 = [v16 setByAddingObjectsFromSet:v17];

      uint64_t v18 = [v11 allObjects];
      char v19 = objc_msgSend(v18, "_pl_any:", &__block_literal_global_103312);

      uint64_t v20 = [v7 allAssetCPLResources];
      char v21 = [v20 allObjects];
      char v22 = objc_msgSend(v21, "_pl_any:", &__block_literal_global_93);

      uint64_t v23 = [v7 master];
      if (v23) {
        char v24 = v19;
      }
      else {
        char v24 = 1;
      }

      char v15 = (v24 | v22) - 1;
      goto LABEL_17;
    }
    id v9 = [v7 master];
    BOOL v10 = [v9 mediaMetadata];
    BOOL v11 = [v10 valueForKey:@"data"];

    if (!v11)
    {
      char v15 = 0;
LABEL_17:

      goto LABEL_18;
    }
    id v12 = [v8 pathManager];
    id v13 = CPLStatusFromPathManager(v12);
    id v14 = [v13 exitDeleteTime];
    if (v14)
    {
    }
    else if (([v13 isExceedingQuota] & 1) == 0)
    {
      char v15 = 1;
      goto LABEL_16;
    }
    char v15 = 0;
LABEL_16:

    goto LABEL_17;
  }
  char v15 = 0;
LABEL_18:

  return v15 & 1;
}

BOOL __98__PLManagedAsset_CMM__shouldPerformServerCopyWithSourceAsset_copyingFromMomentShare_photoLibrary___block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 cloudLocalState] == 1)
  {
    uint64_t v3 = [v2 fingerprint];
    BOOL v4 = v3 == 0;
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

BOOL __98__PLManagedAsset_CMM__shouldPerformServerCopyWithSourceAsset_copyingFromMomentShare_photoLibrary___block_invoke(uint64_t a1, void *a2)
{
  return [a2 cloudLocalState] != 3;
}

+ (BOOL)shouldPerformServerCopyOnPlaceholderAsset:(id)a3 photoLibrary:(id)a4
{
  id v6 = a4;
  id v7 = [a3 fetchSourceAssetForDuplicationIfExists];
  id v8 = [v7 momentShare];
  BOOL v9 = v8 != 0;

  LOBYTE(a1) = [a1 shouldPerformServerCopyWithSourceAsset:v7 copyingFromMomentShare:v9 photoLibrary:v6];
  return (char)a1;
}

- (void)setWasGuestAsset:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  int v6 = [v5 syndicationHistory];
  if (v3) {
    int v7 = 1;
  }
  else {
    int v7 = 2;
  }
  if (v7 != v6)
  {
    if (v6 == 1)
    {
      id v8 = PLSyndicationGetLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        BOOL v9 = [(PLManagedAsset *)self uuid];
        int v11 = 138543362;
        id v12 = v9;
        BOOL v10 = "GuestAssetSync: leaving asset %{public}@ marked as wasGuestAsset";
LABEL_13:
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_INFO, v10, (uint8_t *)&v11, 0xCu);
      }
    }
    else
    {
      [v5 setSyndicationHistory:(unsigned __int16)v7];
      if (v7 == 2)
      {
        id v8 = PLSyndicationGetLog();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          BOOL v9 = [(PLManagedAsset *)self uuid];
          int v11 = 138543362;
          id v12 = v9;
          BOOL v10 = "GuestAssetSync: marked asset %{public}@ as wasNotGuestAsset";
          goto LABEL_13;
        }
      }
      else
      {
        id v8 = PLSyndicationGetLog();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          BOOL v9 = [(PLManagedAsset *)self uuid];
          int v11 = 138543362;
          id v12 = v9;
          BOOL v10 = "GuestAssetSync: marked asset %{public}@ as wasGuestAsset";
          goto LABEL_13;
        }
      }
    }
  }
}

- (void)purgeSyndicationResourcesOriginalsOnly:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v32 = objc_alloc_init(MEMORY[0x1E4F28CB8]);
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v5 = [(PLManagedAsset *)self modernResources];
  uint64_t v6 = [v5 countByEnumeratingWithState:&v36 objects:v44 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v37;
    BOOL v33 = v3;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v37 != v8) {
          objc_enumerationMutation(v5);
        }
        BOOL v10 = *(void **)(*((void *)&v36 + 1) + 8 * v9);
        if ([v10 dataStoreClassID] == 3)
        {
          if ([v10 isLocallyAvailable])
          {
            if (v3 && ([v10 isOriginalResource] & 1) == 0)
            {
              char v15 = PLSyndicationGetLog();
              if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
              {
                uint64_t v23 = [(PLManagedAsset *)self uuid];
                *(_DWORD *)int buf = 138543618;
                long long v41 = v23;
                __int16 v42 = 2112;
                id v43 = v10;
                char v24 = v15;
                os_log_type_t v25 = OS_LOG_TYPE_INFO;
                uint64_t v26 = "Skipping purge of syndication asset %{public}@ resource that is not an original %@";
                goto LABEL_24;
              }
            }
            else
            {
              int v11 = [(PLManagedAsset *)self additionalAttributes];
              id v12 = [v11 importedByBundleIdentifier];
              int v13 = [v12 isEqualToString:@"com.apple.MobileSMS"];

              if (!v13) {
                goto LABEL_26;
              }
              id v14 = [v10 fileURL];
              char v15 = v14;
              if (v14)
              {
                id v16 = [v14 path];
                id v35 = 0;
                BOOL v17 = +[PLCacheDeleteSupport isPurgeableFile:v16 outIsPhotoType:0 outUrgencyLevel:0 error:&v35];
                id v18 = v35;

                if (v17)
                {
                  char v19 = PLSyndicationGetLog();
                  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
                  {
                    uint64_t v20 = [(PLManagedAsset *)self uuid];
                    *(_DWORD *)int buf = 138543618;
                    long long v41 = v20;
                    __int16 v42 = 2112;
                    id v43 = v10;
                    _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_INFO, "Purge syndication asset %{public}@ resource %@", buf, 0x16u);
                  }
                  id v34 = 0;
                  int v21 = [v32 removeItemAtURL:v15 error:&v34];
                  id v22 = v34;
                  if (v21 || PLIsErrorFileNotFound())
                  {
                    [v10 markAsNotLocallyAvailableAfterPurge];
                  }
                  else
                  {
                    uint64_t v29 = PLSyndicationGetLog();
                    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
                    {
                      __int16 v30 = [MEMORY[0x1E4F8B908] redactedDescriptionForFileURL:v15];
                      *(_DWORD *)int buf = 138543618;
                      long long v41 = v30;
                      __int16 v42 = 2112;
                      id v43 = v22;
                      _os_log_impl(&dword_19B3C7000, v29, OS_LOG_TYPE_ERROR, "purgeSyndicationResources: removeItemAtURL:%{public}@ failed: %@", buf, 0x16u);
                    }
                  }
                  BOOL v3 = v33;
                }
                else if (PLIsErrorFileNotFound())
                {
                  [v10 markAsNotLocallyAvailableAfterPurge];
                  BOOL v3 = v33;
                }
                else
                {
                  uint64_t v27 = PLSyndicationGetLog();
                  BOOL v3 = v33;
                  if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
                  {
                    BOOL v28 = [MEMORY[0x1E4F8B908] redactedDescriptionForFileURL:v15];
                    *(_DWORD *)int buf = 138543618;
                    long long v41 = v28;
                    __int16 v42 = 2112;
                    id v43 = v18;
                    _os_log_impl(&dword_19B3C7000, v27, OS_LOG_TYPE_INFO, "File is not purgeable at %{public}@ error %@", buf, 0x16u);
                  }
                }
              }
            }
          }
          else
          {
            char v15 = PLSyndicationGetLog();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              uint64_t v23 = [(PLManagedAsset *)self uuid];
              *(_DWORD *)int buf = 138543618;
              long long v41 = v23;
              __int16 v42 = 2112;
              id v43 = v10;
              char v24 = v15;
              os_log_type_t v25 = OS_LOG_TYPE_INFO;
              uint64_t v26 = "Skipping purge of syndication asset %{public}@ resource that is already not locally available %@";
              goto LABEL_24;
            }
          }
        }
        else
        {
          char v15 = PLSyndicationGetLog();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            uint64_t v23 = [(PLManagedAsset *)self uuid];
            *(_DWORD *)int buf = 138543618;
            long long v41 = v23;
            __int16 v42 = 2112;
            id v43 = v10;
            char v24 = v15;
            os_log_type_t v25 = OS_LOG_TYPE_ERROR;
            uint64_t v26 = "Skipping non-syndication resource found during asset %{public}@ purgeSyndicationResources %@";
LABEL_24:
            _os_log_impl(&dword_19B3C7000, v24, v25, v26, buf, 0x16u);
          }
        }

LABEL_26:
        ++v9;
      }
      while (v7 != v9);
      uint64_t v31 = [v5 countByEnumeratingWithState:&v36 objects:v44 count:16];
      uint64_t v7 = v31;
    }
    while (v31);
  }
}

- (void)purgeSyndicationResourcesAfterMediaAnalysisProcessing
{
}

- (BOOL)fullAnalysisComplete
{
  id v2 = [(PLManagedAsset *)self mediaAnalysisAttributes];
  uint64_t v3 = [v2 mediaAnalysisVersion];
  BOOL v4 = +[PLMediaAnalysisServiceRequestAdapter currentMediaAnalysisVersion];
  LOBYTE(v3) = v3 == (int)[v4 intValue];

  return v3;
}

- (BOOL)ocrDetectionComplete
{
  id v2 = [(PLManagedAsset *)self mediaAnalysisAttributes];
  uint64_t v3 = [v2 characterRecognitionAttributes];
  BOOL v4 = v3 != 0;

  return v4;
}

- (BOOL)isReadyForPurgeSyndicationResources
{
  uint64_t v3 = [(PLManagedObject *)self photoLibrary];
  BOOL v4 = [v3 libraryServicesManager];

  BOOL v5 = [v4 wellKnownPhotoLibraryIdentifier] == 3
    && [(PLManagedAsset *)self faceDetectionComplete]
    && [(PLManagedAsset *)self ocrDetectionComplete]
    && [(PLManagedAsset *)self fullAnalysisComplete];

  return v5;
}

- (BOOL)shouldPurgeSyndicationResourcesWithChangedValues:(id)a3
{
  BOOL v4 = [a3 objectForKeyedSubscript:@"faceAdjustmentVersion"];

  if (!v4) {
    return 0;
  }
  return [(PLManagedAsset *)self isReadyForPurgeSyndicationResources];
}

- (void)setConversationAlbumWithConversationID:(id)a3
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  BOOL v5 = [(PLManagedAsset *)self managedObjectContext];
  if (v4)
  {
    uint64_t v6 = [(PLManagedAsset *)self conversation];
    uint64_t v7 = [v6 importSessionID];
    char v8 = [v7 isEqualToString:v4];

    if (v8) {
      goto LABEL_26;
    }
    uint64_t v9 = [v5 userInfo];
    BOOL v10 = [v9 objectForKeyedSubscript:@"conversationObjectIDCache"];

    if (!v10)
    {
      BOOL v10 = [MEMORY[0x1E4F1CA60] dictionary];
      int v11 = [v5 userInfo];
      [v11 setObject:v10 forKeyedSubscript:@"conversationObjectIDCache"];
    }
    id v12 = [v10 objectForKeyedSubscript:v4];
    if (v12
      && ([v5 objectRegisteredForID:v12], (int v13 = objc_claimAutoreleasedReturnValue()) != 0)
      || ([(PLManagedObject *)self photoLibrary],
          id v14 = objc_claimAutoreleasedReturnValue(),
          +[PLConversation albumWithConversationID:v4 inLibrary:v14], int v13 = objc_claimAutoreleasedReturnValue(), v14, v13))
    {
      char v15 = PLSyndicationGetLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        id v16 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)char v24 = 138412546;
        *(void *)&void v24[4] = v4;
        *(_WORD *)&v24[12] = 2112;
        *(void *)&v24[14] = v16;
        BOOL v17 = "Found conversationAlbum (%@) for asset uuid %@";
LABEL_14:
        _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_INFO, v17, v24, 0x16u);
      }
    }
    else
    {
      int v13 = +[PLConversation insertNewConversationAlbumWithConversationID:v4 inManagedObjectContext:v5];
      char v15 = PLSyndicationGetLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        id v16 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)char v24 = 138412546;
        *(void *)&void v24[4] = v4;
        *(_WORD *)&v24[12] = 2112;
        *(void *)&v24[14] = v16;
        BOOL v17 = "Created conversationAlbum (%@) for asset uuid %@";
        goto LABEL_14;
      }
    }

    if (v6)
    {
      char v19 = PLSyndicationGetLog();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        uint64_t v20 = [(PLManagedAsset *)self uuid];
        *(_DWORD *)char v24 = 138412802;
        *(void *)&void v24[4] = v6;
        *(_WORD *)&v24[12] = 2112;
        *(void *)&v24[14] = v4;
        *(_WORD *)&v24[22] = 2112;
        os_log_type_t v25 = v20;
        _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_INFO, "Changed conversationAlbum (%@) to (%@) for asset uuid %@", v24, 0x20u);
      }
    }
    -[PLManagedAsset setConversation:](self, "setConversation:", v13, *(_OWORD *)v24, *(void *)&v24[16]);
    [v13 updateConversationDatesFromAddedAsset:self];
    int v21 = [v13 objectID];
    [v10 setObject:v21 forKeyedSubscript:v4];

    unsigned __int16 v22 = [(PLManagedAsset *)self syndicationState];
    int v23 = [v13 syndicate];
    if (v23 == 1)
    {
      v22 &= ~4u;
    }
    else if (!v23)
    {
      v22 |= 4u;
    }
    if ([(PLManagedAsset *)self syndicationState] != v22) {
      [(PLManagedAsset *)self setSyndicationState:v22];
    }

    goto LABEL_26;
  }
  uint64_t v6 = PLSyndicationGetLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    id v18 = [(PLManagedAsset *)self uuid];
    *(_DWORD *)char v24 = 138412290;
    *(void *)&void v24[4] = v18;
    _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_ERROR, "Unable to create conversationAlbum with nil conversationID for asset uuid %@", v24, 0xCu);
  }
LABEL_26:
}

- (void)_updateIMCoreSyndicationForIdentifier:(id)a3 hide:(BOOL)a4
{
  id v5 = a3;
  if (_updateIMCoreSyndicationForIdentifier_hide__onceToken != -1) {
    dispatch_once(&_updateIMCoreSyndicationForIdentifier_hide__onceToken, &__block_literal_global_168_104050);
  }
  uint64_t v6 = _updateIMCoreSyndicationForIdentifier_hide__queue;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __74__PLManagedAsset_Syndication___updateIMCoreSyndicationForIdentifier_hide___block_invoke_2;
  void v8[3] = &unk_1E58748B0;
  BOOL v10 = a4;
  id v9 = v5;
  id v7 = v5;
  dispatch_async(v6, v8);
}

void __74__PLManagedAsset_Syndication___updateIMCoreSyndicationForIdentifier_hide___block_invoke_2(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  int v2 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v3 = PLSyndicationGetLog();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
  if (!v2)
  {
    if (v4)
    {
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)int buf = 138543362;
      uint64_t v13 = v11;
      _os_log_impl(&dword_19B3C7000, v3, OS_LOG_TYPE_INFO, "calling IMCore to un-hide %{public}@ from syndication", buf, 0xCu);
    }

    if (IMCoreLibraryCore() && getIMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc())
    {
      uint64_t v6 = *(id *)(a1 + 32);
      IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc = (void (*))getIMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc();
      if (!IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc)
      {
        char v8 = [MEMORY[0x1E4F28B00] currentHandler];
        id v9 = [NSString stringWithUTF8String:"void softlink_IMSPIUnhideSyndicationForAttachmentGUID(NSString *__strong)"];
        objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, @"PLManagedAsset+Syndication.m", 73, @"%s", dlerror());
LABEL_21:

        __break(1u);
      }
      goto LABEL_15;
    }
    uint64_t v6 = PLSyndicationGetLog();
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
      goto LABEL_19;
    }
    *(_WORD *)int buf = 0;
    BOOL v10 = "IMCore SPI for un-hiding attachment is not available";
LABEL_18:
    _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_INFO, v10, buf, 2u);
    goto LABEL_19;
  }
  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)int buf = 138543362;
    uint64_t v13 = v5;
    _os_log_impl(&dword_19B3C7000, v3, OS_LOG_TYPE_INFO, "rejectSyndicatedAsset: calling IMCore to remove %{public}@ from syndication", buf, 0xCu);
  }

  if (IMCoreLibraryCore() && getIMSPIRemoveAttachmentGUIDFromSyndicationSymbolLoc())
  {
    uint64_t v6 = *(id *)(a1 + 32);
    IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc = (void (*))getIMSPIRemoveAttachmentGUIDFromSyndicationSymbolLoc();
    if (!IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc)
    {
      char v8 = [MEMORY[0x1E4F28B00] currentHandler];
      id v9 = [NSString stringWithUTF8String:"void softlink_IMSPIRemoveAttachmentGUIDFromSyndication(NSString *__strong)"];
      objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, @"PLManagedAsset+Syndication.m", 72, @"%s", dlerror());
      goto LABEL_21;
    }
LABEL_15:
    IMSPIUnhideSyndicationForAttachmentGUIDSymbolLoc(v6);
    goto LABEL_19;
  }
  uint64_t v6 = PLSyndicationGetLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int buf = 0;
    BOOL v10 = "IMCore SPI for removing attachment is not available";
    goto LABEL_18;
  }
LABEL_19:
}

void __74__PLManagedAsset_Syndication___updateIMCoreSyndicationForIdentifier_hide___block_invoke()
{
  dispatch_queue_t v0 = dispatch_queue_create("updateIMCoreSyndicationForIdentifier", 0);
  uint64_t v1 = (void *)_updateIMCoreSyndicationForIdentifier_hide__queue;
  _updateIMCoreSyndicationForIdentifier_hide__queue = (uint64_t)v0;
}

- (void)_updateSyndicationState:(unsigned __int16)a3 enabled:(BOOL)a4 logPrefix:(id)a5
{
  BOOL v5 = a4;
  unsigned int v6 = a3;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v8 = a5;
  int v9 = [(PLManagedAsset *)self syndicationState];
  if (v5) {
    uint64_t v10 = v9 | v6;
  }
  else {
    uint64_t v10 = v9 & ~v6;
  }
  uint64_t v11 = PLSyndicationGetLog();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_INFO);
  if (v10 == v9)
  {
    if (v12)
    {
      uint64_t v13 = [(PLManagedAsset *)self uuid];
      uint64_t v14 = [(PLManagedAsset *)self additionalAttributes];
      char v15 = [v14 syndicationIdentifier];
      id v16 = PLManagedAssetSyndicationStateDescription(v9);
      int v21 = 138544130;
      id v22 = v8;
      __int16 v23 = 2114;
      char v24 = v13;
      __int16 v25 = 2114;
      uint64_t v26 = v15;
      __int16 v27 = 2114;
      BOOL v28 = v16;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_INFO, "%{public}@ %{public}@ / %{public}@ syndicationState unchanged %{public}@", (uint8_t *)&v21, 0x2Au);
    }
  }
  else
  {
    if (v12)
    {
      BOOL v17 = [(PLManagedAsset *)self uuid];
      id v18 = [(PLManagedAsset *)self additionalAttributes];
      char v19 = [v18 syndicationIdentifier];
      uint64_t v20 = PLManagedAssetSyndicationStateDescription(v10);
      int v21 = 138544130;
      id v22 = v8;
      __int16 v23 = 2114;
      char v24 = v17;
      __int16 v25 = 2114;
      uint64_t v26 = v19;
      __int16 v27 = 2114;
      BOOL v28 = v20;
      _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_INFO, "%{public}@ %{public}@ / %{public}@ set syndicationState to %{public}@", (uint8_t *)&v21, 0x2Au);
    }
    [(PLManagedAsset *)self setSyndicationState:v10];
  }
}

- (void)unsaveSyndicatedAsset
{
  uint64_t v3 = NSStringFromSelector(a2);
  [(PLManagedAsset *)self _updateSyndicationState:10 enabled:0 logPrefix:v3];

  BOOL v4 = [(PLManagedAsset *)self additionalAttributes];
  id v5 = [v4 syndicationIdentifier];

  [(PLManagedAsset *)self _updateIMCoreSyndicationForIdentifier:v5 hide:0];
}

- (void)restoreSyndicatedAsset
{
  uint64_t v3 = NSStringFromSelector(a2);
  [(PLManagedAsset *)self _updateSyndicationState:8 enabled:0 logPrefix:v3];

  BOOL v4 = [(PLManagedAsset *)self additionalAttributes];
  id v5 = [v4 syndicationIdentifier];

  [(PLManagedAsset *)self _updateIMCoreSyndicationForIdentifier:v5 hide:0];
}

- (void)rejectSyndicatedAsset
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = NSStringFromSelector(a2);
  [(PLManagedAsset *)self _updateSyndicationState:8 enabled:1 logPrefix:v3];

  BOOL v4 = [(PLManagedAsset *)self additionalAttributes];
  id v5 = [v4 syndicationIdentifier];

  unsigned int v6 = PLSyndicationGetLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = [(PLManagedAsset *)self uuid];
    *(_DWORD *)int buf = 138543618;
    uint64_t v20 = v7;
    __int16 v21 = 2114;
    id v22 = v5;
    _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_INFO, "rejectSyndicatedAsset: %{public}@ / %{public}@", buf, 0x16u);
  }
  [(PLManagedAsset *)self _updateIMCoreSyndicationForIdentifier:v5 hide:1];
  id v8 = [MEMORY[0x1E4F8B980] wellKnownPhotoLibraryURLForIdentifier:1];
  int v9 = +[PLLibraryServicesManager libraryServicesManagerForLibraryURL:v8];
  uint64_t v10 = PLSyndicationGetLog();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = [(PLManagedAsset *)self importedByBundleIdentifier];
    *(_DWORD *)int buf = 138543618;
    uint64_t v20 = v5;
    __int16 v21 = 2114;
    id v22 = v11;
    _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_INFO, "rejectSyndicatedAsset: calling SPL syndicationDeleteManager to delete %{public}@ for bundleID %{public}@", buf, 0x16u);
  }
  BOOL v12 = [v9 syndicationDeleteManager];
  uint64_t v13 = [(PLManagedAsset *)self importedByBundleIdentifier];
  id v18 = v5;
  uint64_t v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v18 count:1];
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  void v16[2] = __52__PLManagedAsset_Syndication__rejectSyndicatedAsset__block_invoke;
  v16[3] = &unk_1E5875CE0;
  id v17 = v5;
  id v15 = v5;
  [v12 processDeletesForBundleID:v13 identifiers:v14 completion:v16];
}

void __52__PLManagedAsset_Syndication__rejectSyndicatedAsset__block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v2 = PLSyndicationGetLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl(&dword_19B3C7000, v2, OS_LOG_TYPE_INFO, "rejectSyndicatedAsset: done deleting %{public}@ from SPL", (uint8_t *)&v4, 0xCu);
  }
}

- (void)_updateDestinationAssetCopyStateOnCMMAsset
{
  v27[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [(PLManagedAsset *)self additionalAttributes];
  int v4 = [v3 syndicationIdentifier];

  uint64_t v5 = [(PLManagedObject *)self photoLibrary];
  uint64_t v6 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForMomentSharedAsset"), 1);
  id v7 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v26 = v4;
  id v8 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v26 count:1];
  int v9 = +[PLManagedAsset predicateForSyndicatedAssetIdentifiers:v8 includeRejected:1];
  v27[0] = v9;
  v27[1] = v6;
  uint64_t v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v27 count:2];
  uint64_t v11 = [v7 andPredicateWithSubpredicates:v10];

  BOOL v12 = (void *)MEMORY[0x1E4F1C0D0];
  uint64_t v13 = +[PLManagedAsset entityName];
  uint64_t v14 = [v12 fetchRequestWithEntityName:v13];

  [v14 setPredicate:v11];
  [v14 setFetchLimit:1];
  id v15 = [v5 managedObjectContext];
  id v21 = 0;
  id v16 = [v15 executeFetchRequest:v14 error:&v21];
  id v17 = v21;

  if (v16)
  {
    id v18 = [v16 firstObject];
    char v19 = v18;
    if (v18)
    {
      uint64_t v20 = [v18 additionalAttributes];
      [v20 setDestinationAssetCopyState:2];
    }
  }
  else
  {
    char v19 = PLSyndicationGetLog();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 138543618;
      uint64_t v23 = v4;
      __int16 v24 = 2112;
      id v25 = v17;
      _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_ERROR, "Fetching syndication CMM asset for %{public}@ failed: %@", buf, 0x16u);
    }
  }
}

- (void)updateSyndicationStateWithSavedToLibrary:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  int v5 = [(PLManagedAsset *)self syndicationState];
  unsigned int v6 = v5 & 0xFFFFFFFD;
  if (v3) {
    int v7 = 2;
  }
  else {
    int v7 = 0;
  }
  unsigned __int16 v8 = v6 | v7;
  if ((v6 | v7) != v5)
  {
    int v9 = v5;
    uint64_t v10 = PLSyndicationGetLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = [(PLManagedAsset *)self uuid];
      BOOL v12 = [(PLManagedAsset *)self additionalAttributes];
      uint64_t v13 = [v12 syndicationIdentifier];
      uint64_t v14 = PLManagedAssetSyndicationStateDescription(v9);
      id v15 = PLManagedAssetSyndicationStateDescription(v8);
      int v16 = 138544130;
      id v17 = v11;
      __int16 v18 = 2114;
      char v19 = v13;
      __int16 v20 = 2114;
      id v21 = v14;
      __int16 v22 = 2114;
      uint64_t v23 = v15;
      _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_INFO, "Updating syndication state on asset %{public}@ / %{public}@ from %{public}@ to %{public}@", (uint8_t *)&v16, 0x2Au);
    }
    [(PLManagedAsset *)self setSyndicationState:v8];
  }
}

- (void)updateSyndicationStateWithSyndicationProcessingValue:(unsigned __int16)a3
{
  if ((a3 & 0x1000) != 0) {
    [(PLManagedAsset *)self updateSyndicationStateWithSavedToLibrary:1];
  }
}

- (void)updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary:(BOOL)a3
{
  int v5 = objc_opt_class();
  unsigned int v6 = [(PLManagedAsset *)self additionalAttributes];
  int v7 = [v6 syndicationIdentifier];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __91__PLManagedAsset_Syndication__updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary___block_invoke;
  void v8[3] = &__block_descriptor_33_e24_v16__0__PLManagedAsset_8l;
  BOOL v9 = a3;
  [v5 performTransactionOnSyndicationLibraryWithSyndicationIdentifier:v7 block:v8];
}

uint64_t __91__PLManagedAsset_Syndication__updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary___block_invoke(uint64_t a1, void *a2)
{
  return [a2 updateSyndicationStateWithSavedToLibrary:*(unsigned __int8 *)(a1 + 32)];
}

- (BOOL)shouldSyncToSPL
{
  BOOL v3 = objc_opt_class();
  uint64_t v4 = [(PLManagedAsset *)self savedAssetType];
  uint64_t v5 = [(PLManagedAsset *)self syndicationState];
  return [v3 shouldSyncAssetToSPLWithSavedAssetType:v4 syndicationState:v5];
}

- (void)_preserveRelationshipsOfDeletedGuestAsset:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 entity];
  unsigned int v6 = [v5 relationshipsByName];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __73__PLManagedAsset_Syndication___preserveRelationshipsOfDeletedGuestAsset___block_invoke;
  void v8[3] = &unk_1E5872A70;
  id v9 = v4;
  uint64_t v10 = self;
  id v7 = v4;
  [v6 enumerateKeysAndObjectsUsingBlock:v8];
}

void __73__PLManagedAsset_Syndication___preserveRelationshipsOfDeletedGuestAsset___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (([v5 hasPrefix:@"memoriesBeing"] & 1) != 0
    || ([v5 hasPrefix:@"suggestionsBeing"] & 1) != 0
    || ([v5 hasPrefix:@"dayGroupHighlightBeing"] & 1) != 0
    || ([v5 hasPrefix:@"highlightBeing"] & 1) != 0
    || ([v5 hasPrefix:@"monthHighlightBeing"] & 1) != 0
    || ([v5 hasPrefix:@"yearHighlightBeing"] & 1) != 0
    || [v5 isEqualToString:@"moment"])
  {
    int v7 = [v6 isToMany];
    unsigned __int16 v8 = *(void **)(a1 + 32);
    id v9 = [v6 name];
    uint64_t v10 = [v8 valueForKey:v9];

    if (v7)
    {
      if ([v10 count])
      {
        uint64_t v11 = [v10 copy];
        BOOL v12 = PLSyndicationGetLog();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          uint64_t v13 = [v6 name];
          uint64_t v14 = [*(id *)(a1 + 32) uuid];
          id v15 = [*(id *)(a1 + 40) uuid];
          int v25 = 138543874;
          uint64_t v26 = v13;
          __int16 v27 = 2114;
          BOOL v28 = v14;
          __int16 v29 = 2114;
          __int16 v30 = v15;
          _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_INFO, "Preserve relationships: copying %{public}@ from %{public}@ to %{public}@", (uint8_t *)&v25, 0x20u);
        }
        int v16 = *(void **)(a1 + 40);
        id v17 = [v6 name];
        [v16 setValue:v11 forKey:v17];

        goto LABEL_21;
      }
      uint64_t v11 = PLSyndicationGetLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v11 = PLSyndicationGetLog();
      BOOL v18 = os_log_type_enabled(v11, OS_LOG_TYPE_INFO);
      if (v10)
      {
        if (v18)
        {
          char v19 = [v6 name];
          __int16 v20 = [*(id *)(a1 + 32) uuid];
          id v21 = [*(id *)(a1 + 40) uuid];
          int v25 = 138543874;
          uint64_t v26 = v19;
          __int16 v27 = 2114;
          BOOL v28 = v20;
          __int16 v29 = 2114;
          __int16 v30 = v21;
          _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_INFO, "Preserve relationships: setting %{public}@ from %{public}@ to %{public}@", (uint8_t *)&v25, 0x20u);
        }
        __int16 v22 = *(void **)(a1 + 40);
        uint64_t v11 = [v6 name];
        [v22 setValue:v10 forKey:v11];
        goto LABEL_21;
      }
      if (v18)
      {
LABEL_20:
        uint64_t v23 = [*(id *)(a1 + 32) uuid];
        uint64_t v24 = [v6 name];
        int v25 = 138543618;
        uint64_t v26 = v23;
        __int16 v27 = 2114;
        BOOL v28 = v24;
        _os_log_impl(&dword_19B3C7000, v11, OS_LOG_TYPE_INFO, "Preserve relationships: guest asset %{public}@ has no %{public}@", (uint8_t *)&v25, 0x16u);
      }
    }
LABEL_21:
  }
}

- (void)syndicatedAssetDidSaveToUserLibrary
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  BOOL v3 = [(PLManagedObject *)self photoLibrary];
  id v4 = [v3 libraryServicesManager];
  int v5 = [v4 isSystemPhotoLibrary];

  id v6 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v7 = [v6 syndicationIdentifier];

  unsigned __int16 v8 = PLSyndicationGetLog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    [(PLManagedAsset *)self uuid];
    v10 = id v9 = v3;
    uint64_t v11 = @"other";
    *(_DWORD *)int buf = 138543874;
    id v44 = v10;
    __int16 v45 = 2114;
    if (v5) {
      uint64_t v11 = @"SPL";
    }
    uint64_t v46 = v7;
    __int16 v47 = 2114;
    uint64_t v48 = v11;
    _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_DEFAULT, "Syndicated asset %{public}@ / %{public}@ did save to user library (%{public}@)", buf, 0x20u);

    BOOL v3 = v9;
  }
  int v38 = v5;

  uint64_t v12 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForGuestAsset"), 1);
  uint64_t v13 = (void *)MEMORY[0x1E4F28BA0];
  long long v39 = (void *)v7;
  uint64_t v41 = v7;
  uint64_t v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v41 count:1];
  id v15 = +[PLManagedAsset predicateForSyndicatedAssetIdentifiers:v14 includeRejected:1];
  v42[0] = v15;
  v42[1] = v12;
  long long v37 = (void *)v12;
  int v16 = [MEMORY[0x1E4F1C978] arrayWithObjects:v42 count:2];
  id v17 = [v13 andPredicateWithSubpredicates:v16];

  BOOL v18 = (void *)MEMORY[0x1E4F1C0D0];
  char v19 = +[PLManagedAsset entityName];
  __int16 v20 = [v18 fetchRequestWithEntityName:v19];

  [v20 setPredicate:v17];
  [v20 setFetchLimit:1];
  id v21 = [v3 managedObjectContext];
  id v40 = 0;
  __int16 v22 = [v21 executeFetchRequest:v20 error:&v40];
  id v23 = v40;

  uint64_t v24 = [v22 firstObject];
  if (v24)
  {
    int v25 = PLSyndicationGetLog();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      uint64_t v26 = [v24 uuid];
      __int16 v27 = [v24 additionalAttributes];
      [v27 syndicationIdentifier];
      long long v36 = v17;
      id v28 = v23;
      v30 = __int16 v29 = v3;
      *(_DWORD *)int buf = 138543618;
      id v44 = v26;
      __int16 v45 = 2114;
      uint64_t v46 = (uint64_t)v30;
      _os_log_impl(&dword_19B3C7000, v25, OS_LOG_TYPE_INFO, "Found existing guest asset %{public}@ with syndication identifier %{public}@", buf, 0x16u);

      BOOL v3 = v29;
      id v23 = v28;
      id v17 = v36;
    }
    [(PLManagedAsset *)self _preserveRelationshipsOfDeletedGuestAsset:v24];
    uint64_t v31 = NSString;
    id v32 = [v24 uuid];
    BOOL v33 = [(PLManagedAsset *)self uuid];
    id v34 = [v31 stringWithFormat:@"Deleting guest asset (uuid: %@) because we just ingested it as a full asset (uuid: %@)", v32, v33];

    id v35 = +[PLAssetTransactionReason transactionReason:v34];
    [v24 deleteWithReason:v35];

    [(PLManagedAsset *)self setWasGuestAsset:1];
  }
  else
  {
    [(PLManagedAsset *)self setWasGuestAsset:0];
  }
  if (v38) {
    [(PLManagedAsset *)self updateMatchingAssetFromSyndicationLibraryWithSavedToLibrary:1];
  }
  [(PLManagedAsset *)self _updateDestinationAssetCopyStateOnCMMAsset];
}

- (BOOL)eligibleForGuestAssetPromotion
{
  [(PLManagedAsset *)self curationScore];
  if (v3 < 0.5) {
    return 0;
  }
  int v5 = [(PLManagedAsset *)self mediaAnalysisAttributes];
  BOOL v4 = ([v5 syndicationProcessingValue] & 0x7EF0) != 0;

  return v4;
}

- (BOOL)resetGuestAssetPromotion:(id *)a3
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  int v5 = [(PLManagedObject *)self photoLibrary];
  id v6 = [v5 libraryBundle];
  uint64_t v7 = [v6 libraryServicesManager];
  uint64_t v8 = [v7 wellKnownPhotoLibraryIdentifier];

  [MEMORY[0x1E4F8BA10] maskForAllowedToResetGuestAssetPromotion];
  [(PLManagedAsset *)self savedAssetType];
  int v9 = PLValidatedSavedAssetTypeApplies();
  if (v8 == 3) {
    BOOL v10 = v9;
  }
  else {
    BOOL v10 = 0;
  }
  uint64_t v11 = PLSyndicationGetLog();
  uint64_t v12 = v11;
  if (v10)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = [(PLManagedAsset *)self uuid];
      int v20 = 138543362;
      id v21 = v13;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_INFO, "resetting guest asset promotion for asset %{public}@", (uint8_t *)&v20, 0xCu);
    }
    -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", [MEMORY[0x1E4F8BA10] savedAssetTypeForInsertIntoSyndicationLibrary]);
  }
  else
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = [(PLManagedAsset *)self uuid];
      [(PLManagedAsset *)self savedAssetType];
      id v15 = PLValidatedSavedAssetTypeDescription();
      int v16 = PLStringFromWellKnownPhotoLibraryIdentifier();
      int v20 = 138543874;
      id v21 = v14;
      __int16 v22 = 2114;
      id v23 = v15;
      __int16 v24 = 2114;
      int v25 = v16;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "reset guest asset promotion is forbidden for asset %{public}@ %{public}@ in %{public}@", (uint8_t *)&v20, 0x20u);
    }
    id v17 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4F8C500] code:41005 userInfo:0];
    BOOL v18 = v17;
    if (a3) {
      *a3 = v17;
    }
  }
  return v10;
}

- (BOOL)promoteToGuestAsset:(id *)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if ([(PLManagedAsset *)self syndicationState])
  {
    BOOL v10 = PLSyndicationGetLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = [(PLManagedAsset *)self uuid];
      int v15 = 138543362;
      int v16 = v11;
      _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_ERROR, "promotion to guest asset %{public}@ is forbidden for self shared asset", (uint8_t *)&v15, 0xCu);
    }
    return 0;
  }
  [MEMORY[0x1E4F8BA10] maskForAllowedToPromoteToGuestAsset];
  [(PLManagedAsset *)self savedAssetType];
  int v5 = PLValidatedSavedAssetTypeApplies();
  id v6 = PLSyndicationGetLog();
  uint64_t v7 = v6;
  if (!v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = [(PLManagedAsset *)self uuid];
      int v15 = 138543618;
      int v16 = v12;
      __int16 v17 = 1024;
      int v18 = [(PLManagedAsset *)self savedAssetType];
      _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_ERROR, "promotion to guest asset %{public}@ is forbidden for savedAssetType %hd", (uint8_t *)&v15, 0x12u);
    }
    uint64_t v13 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4F8C500] code:41005 userInfo:0];
    uint64_t v14 = v13;
    if (a3) {
      *a3 = v13;
    }

    return 0;
  }
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = [(PLManagedAsset *)self uuid];
    int v15 = 138543362;
    int v16 = v8;
    _os_log_impl(&dword_19B3C7000, v7, OS_LOG_TYPE_INFO, "promoting asset %{public}@ to guest", (uint8_t *)&v15, 0xCu);
  }
  -[PLManagedAsset setSavedAssetType:](self, "setSavedAssetType:", [MEMORY[0x1E4F8BA10] savedAssetTypeForPromoteToGuestAsset]);
  return 1;
}

- (BOOL)syndicationOriginalResourcesAreLocal
{
  double v3 = [(PLManagedAsset *)self syndicationOriginalResource];
  BOOL v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 resourceType];
    uint64_t v6 = [v4 version];
    uint64_t v7 = [v4 recipeID];
    uint64_t v8 = [v4 uniformTypeIdentifier];
    int v9 = [v8 identifier];
    BOOL v10 = [(PLManagedAsset *)self syndicationResourceURLForResourceType:v5 version:v6 recipeID:v7 utiString:v9 error:0];

    if (v10)
    {
      uint64_t v11 = [MEMORY[0x1E4F28CB8] defaultManager];
      uint64_t v12 = [v10 path];
      int v13 = [v11 fileExistsAtPath:v12];
    }
    else
    {
      int v13 = 0;
    }
  }
  else
  {
    int v13 = 0;
  }

  if ([(PLManagedAsset *)self isPhotoIris])
  {
    BOOL v14 = 0;
    if (!v13) {
      return v13;
    }
  }
  else
  {
    int v15 = [(PLManagedAsset *)self filename];
    BOOL v14 = v15 != 0;

    if (!v13) {
      return v13;
    }
  }
  if (!v14)
  {
    int v16 = [(PLManagedAsset *)self syndicationOriginalVideoComplementResource];
    __int16 v17 = v16;
    if (v16)
    {
      uint64_t v18 = [v16 resourceType];
      uint64_t v19 = [v17 version];
      uint64_t v20 = [v17 recipeID];
      id v21 = [v17 uniformTypeIdentifier];
      __int16 v22 = [v21 identifier];
      id v23 = [(PLManagedAsset *)self syndicationResourceURLForResourceType:v18 version:v19 recipeID:v20 utiString:v22 error:0];

      if (!v23
        || ([MEMORY[0x1E4F28CB8] defaultManager],
            __int16 v24 = objc_claimAutoreleasedReturnValue(),
            [v23 path],
            int v25 = objc_claimAutoreleasedReturnValue(),
            char v26 = [v24 fileExistsAtPath:v25],
            v25,
            v24,
            (v26 & 1) == 0))
      {
        LOBYTE(v13) = 0;
      }
    }
    else
    {
      LOBYTE(v13) = 0;
    }
  }
  return v13;
}

- (id)syndicationOriginalVideoComplementResource
{
  return [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_124_104115];
}

BOOL __73__PLManagedAsset_Syndication__syndicationOriginalVideoComplementResource__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 resourceType] == 3
    && ![v2 version]
    && ([v2 recipeID] & 1) == 0;

  return v3;
}

- (id)syndicationOriginalResource
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  unsigned int v3 = [(PLManagedAsset *)self kind];
  if (v3 >= 3) {
    int v4 = 31;
  }
  else {
    int v4 = v3;
  }
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = __58__PLManagedAsset_Syndication__syndicationOriginalResource__block_invoke;
  void v12[3] = &__block_descriptor_36_e28_B16__0__PLInternalResource_8l;
  int v13 = v4;
  uint64_t v5 = [(PLManagedAsset *)self firstPersistedResourceMatching:v12];
  if (!v5)
  {
    uint64_t v5 = [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_104117];
    if (v5)
    {
      uint64_t v6 = PLSyndicationGetLog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
      {
        uint64_t v7 = [(PLManagedAsset *)self syndicationDescription];
        unsigned int v8 = [v5 resourceType];
        if (v8 > 0x1F) {
          int v9 = @"invalid";
        }
        else {
          int v9 = off_1E58641E0[v8];
        }
        BOOL v10 = v9;
        *(_DWORD *)int buf = 138543618;
        int v15 = v7;
        __int16 v16 = 2114;
        __int16 v17 = v10;
        _os_log_impl(&dword_19B3C7000, v6, OS_LOG_TYPE_FAULT, "Syndication asset (%{public}@) has possibly inconsistent original resource with type: %{public}@", buf, 0x16u);
      }
    }
  }
  return v5;
}

BOOL __58__PLManagedAsset_Syndication__syndicationOriginalResource__block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = *(_DWORD *)(a1 + 32);
  id v5 = v3;
  BOOL v6 = [v5 resourceType] == v4
    && ![v5 version]
    && ([v5 recipeID] & 1) == 0;

  return v6;
}

BOOL __58__PLManagedAsset_Syndication__syndicationOriginalResource__block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 dataStoreSubtype] == 1;
}

- (id)syndicationResourceURLForResourceType:(unsigned int)a3 version:(unsigned int)a4 recipeID:(unsigned int)a5 utiString:(id)a6 error:(id *)a7
{
  uint64_t v8 = *(void *)&a5;
  uint64_t v9 = *(void *)&a4;
  uint64_t v10 = *(void *)&a3;
  v30[1] = *MEMORY[0x1E4F143B8];
  id v12 = a6;
  int v13 = (void *)MEMORY[0x1E4F8B978];
  BOOL v14 = [(PLManagedAsset *)self uuid];
  int v15 = [(PLManagedAsset *)self originalFilename];
  LODWORD(v13) = [v13 isValidFileIdentifierParametersForUUID:v14 utiString:v12 originalFilename:v15];

  if (v13)
  {
    __int16 v16 = [(PLManagedObject *)self pathManager];
    __int16 v17 = [(PLManagedAsset *)self syndicationFileIdentifierForResourceType:v10 version:v9 recipeID:v8 utiString:v12];
    uint64_t v18 = [v16 readOnlyUrlWithIdentifier:v17];

    if (v18) {
      goto LABEL_8;
    }
    uint64_t v19 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v20 = *MEMORY[0x1E4F8C500];
    uint64_t v29 = *MEMORY[0x1E4F28568];
    v30[0] = @"Failed to create url from identifier";
    id v21 = (void *)MEMORY[0x1E4F1C9E8];
    __int16 v22 = (__CFString **)v30;
    id v23 = &v29;
  }
  else
  {
    uint64_t v19 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v20 = *MEMORY[0x1E4F8C500];
    uint64_t v27 = *MEMORY[0x1E4F28568];
    id v28 = @"Invalid file identifier parameters";
    id v21 = (void *)MEMORY[0x1E4F1C9E8];
    __int16 v22 = &v28;
    id v23 = &v27;
  }
  __int16 v24 = [v21 dictionaryWithObjects:v22 forKeys:v23 count:1];
  int v25 = [v19 errorWithDomain:v20 code:46801 userInfo:v24];

  if (a7) {
    *a7 = v25;
  }

  uint64_t v18 = 0;
LABEL_8:

  return v18;
}

- (id)syndicationFileIdentifierForResourceType:(unsigned int)a3 version:(unsigned int)a4 recipeID:(unsigned int)a5 utiString:(id)a6
{
  uint64_t v6 = *(void *)&a5;
  uint64_t v7 = *(void *)&a4;
  uint64_t v8 = *(void *)&a3;
  uint64_t v10 = (objc_class *)MEMORY[0x1E4F8B978];
  id v11 = a6;
  id v12 = [v10 alloc];
  int v13 = [(PLManagedAsset *)self uuid];
  BOOL v14 = [(PLManagedAsset *)self originalFilename];
  int v15 = (void *)[v12 initWithAssetUuid:v13 bundleScope:3 uti:v11 resourceVersion:v7 resourceType:v8 recipeID:v6 originalFilename:v14];

  return v15;
}

- (id)syndicationDescription
{
  id v3 = +[PLDescriptionBuilder plainDescriptionBuilder];
  int v4 = [(PLManagedAsset *)self uuid];
  [v3 appendName:@"uuid" object:v4];

  id v5 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v6 = [v5 syndicationIdentifier];
  [v3 appendName:@"syndicationIdentifier" object:v6];

  objc_msgSend(v3, "appendName:unsignedIntegerValue:", @"kind", (int)-[PLManagedAsset kind](self, "kind"));
  uint64_t v7 = [(PLManagedAsset *)self uniformTypeIdentifier];
  [v3 appendName:@"uti" object:v7];

  uint64_t v8 = [(PLManagedAsset *)self additionalAttributes];
  uint64_t v9 = [v8 importedByBundleIdentifier];
  [v3 appendName:@"importedBy" object:v9];

  uint64_t v10 = [(PLManagedAsset *)self syndicationResourcesDescription];
  [v3 appendName:@"resources" object:v10];

  id v11 = [v3 build];

  return v11;
}

- (id)syndicationResourcesDescription
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v3 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id obj = [(PLManagedAsset *)self modernResources];
  uint64_t v4 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v19 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v9 = +[PLDescriptionBuilder plainDescriptionBuilder];
        unsigned int v10 = [v8 resourceType];
        id v11 = @"invalid";
        if (v10 <= 0x1F) {
          id v11 = off_1E58641E0[v10];
        }
        id v12 = v11;
        [v9 appendName:@"type" object:v12];

        int v13 = [v8 dataStore];
        BOOL v14 = objc_msgSend(v13, "descriptionForSubtype:", objc_msgSend(v8, "dataStoreSubtype"));
        [v9 appendName:@"dataStoreSubtype" object:v14];

        int v15 = [v9 build];
        [v3 appendFormat:@"<%@>", v15];
      }
      uint64_t v5 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v5);
  }

  return v3;
}

- (BOOL)becomeSyndicationLivePhotoWithVideoComplementContentType:(id)a3
{
  uint64_t v4 = +[PLResourceInstaller onDemand_installOriginalVideoComplementForSyndicationAsset:self contentType:a3];
  if (v4) {
    [(PLManagedAsset *)self setKindSubtype:2];
  }

  return v4 != 0;
}

- (void)setSyndicationFilenameAndDirectoryWithOriginalFilename:(id)a3
{
  id v9 = a3;
  if (!v9)
  {
    uint64_t v8 = [MEMORY[0x1E4F28B00] currentHandler];
    [v8 handleFailureInMethod:a2, self, @"PLManagedAsset+Syndication.m", 489, @"Invalid parameter not satisfying: %@", @"originalFilename" object file lineNumber description];
  }
  uint64_t v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setOriginalFilename:v9];

  uint64_t v6 = [(PLManagedAsset *)self uniformTypeIdentifier];

  if (v6)
  {
    uint64_t v7 = [(PLManagedAsset *)self uniformTypeIdentifier];
    [(PLManagedAsset *)self setUBFFilenameAndDirectoryWithOriginalUniformTypeIdentifier:v7 originalFilename:v9];
  }
}

- (void)setSyndicationLivePhotoAttributesFromMainFileURL:(id)a3 metadata:(id)a4 videoComplementFileURL:(id)a5
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = v11;
  if (v9)
  {
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    __int16 v24 = [MEMORY[0x1E4F28B00] currentHandler];
    [v24 handleFailureInMethod:a2, self, @"PLManagedAsset+Syndication.m", 457, @"Invalid parameter not satisfying: %@", @"fileURL" object file lineNumber description];

    if (v12) {
      goto LABEL_3;
    }
  }
  int v25 = [MEMORY[0x1E4F28B00] currentHandler];
  [v25 handleFailureInMethod:a2, self, @"PLManagedAsset+Syndication.m", 458, @"Invalid parameter not satisfying: %@", @"videoComplementFileURL" object file lineNumber description];

LABEL_3:
  if (![v10 isSyndicationOriginated])
  {
    id v15 = objc_alloc(MEMORY[0x1E4F8CE20]);
    __int16 v16 = [v12 path];
    __int16 v17 = [v9 path];
    BOOL v14 = (void *)[v15 initWithPathToVideo:v16 pathToImage:v17];

    uint64_t v18 = [v14 pairingIdentifier];
    long long v19 = (void *)v18;
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    if (v14)
    {
      [v14 imageDisplayTime];
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      [v14 originalVideoDuration];
      if (!v19) {
        goto LABEL_19;
      }
    }
    else
    {
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      if (!v18)
      {
LABEL_19:

        goto LABEL_20;
      }
    }
    if (BYTE12(v30))
    {
      long long v28 = v30;
      uint64_t v29 = v31;
      long long v26 = v32;
      uint64_t v27 = v33;
      [(PLManagedAsset *)self becomePhotoIrisWithMediaGroupUUID:v19 mainFileMetadata:v10 videoURL:v12 videoDuration:&v28 stillDisplayTime:&v26 options:0];
    }
    goto LABEL_19;
  }
  uint64_t v13 = [v10 livePhotoPairingIdentifier];
  BOOL v14 = (void *)v13;
  long long v32 = 0uLL;
  uint64_t v33 = 0;
  if (v10)
  {
    [v10 stillImageDisplayTime];
    long long v30 = 0uLL;
    uint64_t v31 = 0;
    [v10 duration];
    if (!v14) {
      goto LABEL_20;
    }
  }
  else
  {
    long long v30 = 0uLL;
    uint64_t v31 = 0;
    if (!v13) {
      goto LABEL_20;
    }
  }
  if (BYTE12(v32) & 1) != 0 && (BYTE12(v30))
  {
    [(PLManagedAsset *)self setKindSubtype:2];
    long long v28 = v30;
    uint64_t v29 = v31;
    long long v26 = v32;
    uint64_t v27 = v33;
    [(PLManagedAsset *)self updatePhotoIrisMetadataWithMediaGroupUUID:v14 videoDuration:&v28 stillDisplayTime:&v26];
    if ([(PLManagedAsset *)self canPlayPhotoIris])
    {
      [(PLManagedAsset *)self setPlaybackStyle:3];
      [(PLManagedAsset *)self updatePlaybackVariationAndStyleFromOriginalMetadata:v10];
    }
    long long v20 = [(PLManagedAsset *)self syndicationOriginalVideoComplementResource];
    [v10 exifPixelSize];
    [v20 setUnorientedWidth:(uint64_t)v21];
    [v10 exifPixelSize];
    [v20 setUnorientedHeight:(uint64_t)v22];
    uint64_t v23 = [v10 firstVideoTrackCodecString];
    [v20 setCodecFourCharCodeName:v23];

    [v20 setLocalAvailability:1];
    objc_msgSend(v20, "setDataLength:", objc_msgSend(v10, "fileSize"));
  }
LABEL_20:
}

- (void)setSyndicationAttributesFromMainFileURL:(id)a3 metadata:(id)a4
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v6 = a4;
  id v7 = a3;
  [(PLManagedAsset *)self setDateCreated:0];
  uint64_t v8 = [(PLManagedAsset *)self additionalAttributes];
  id v9 = [v8 originalFilename];

  id v10 = [(PLManagedAsset *)self directory];
  id v11 = [(PLManagedAsset *)self filename];
  [(PLManagedAsset *)self setAttributesFromMainFileURL:v7 mainFileMetadata:v6 savedAssetType:[(PLManagedAsset *)self savedAssetType] bundleScope:3 isPlaceholder:0 placeholderFileURL:0 imageSource:0 imageData:0];

  id v12 = [(PLManagedAsset *)self additionalAttributes];
  [v12 setOriginalFilename:v9];

  [(PLManagedAsset *)self setDirectory:v10];
  [(PLManagedAsset *)self setFilename:v11];
  uint64_t v13 = [(PLManagedAsset *)self dateCreated];

  if (!v13)
  {
    BOOL v14 = [(PLManagedAsset *)self addedDate];
    [(PLManagedAsset *)self setDateCreated:v14];

    id v15 = PLSyndicationGetLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      __int16 v16 = [(PLManagedAsset *)self addedDate];
      *(_DWORD *)int buf = 138412290;
      uint64_t v18 = v16;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_INFO, "dateCreated is nil, falling back to addedDate %@", buf, 0xCu);
    }
  }
  [(PLManagedAsset *)self persistMetadataToFilesystem];
}

- (void)_updateModificationDateForSyndication
{
  id v3 = [MEMORY[0x1E4F1C9C8] now];
  [(PLManagedAsset *)self setModificationDate:v3];
}

- (void)_fixDistantPastContentCreationDateWithItem:(id)a3
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = [a3 attributeSet];
  uint64_t v5 = [v4 contentCreationDate];

  if (v5)
  {
    id v6 = [(PLManagedAsset *)self addedDate];
    char v7 = [v5 isEqualToDate:v6];

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = PLSyndicationGetLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v9 = [(PLManagedAsset *)self uuid];
        id v10 = [(PLManagedAsset *)self additionalAttributes];
        id v11 = [v10 syndicationIdentifier];
        id v12 = [(PLManagedAsset *)self addedDate];
        int v21 = 138544130;
        double v22 = v9;
        __int16 v23 = 2114;
        __int16 v24 = v11;
        __int16 v25 = 2114;
        long long v26 = v12;
        __int16 v27 = 2114;
        long long v28 = v5;
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_DEFAULT, "[sync] asset (%{public}@ / %{public}@) addedDate (%{public}@ does not match Spotlight content creation date: %{public}@, repairing date", (uint8_t *)&v21, 0x2Au);
      }
      [(PLManagedAsset *)self setAddedDate:v5];
      uint64_t v13 = [(PLManagedAsset *)self dateCreated];
      BOOL v14 = [MEMORY[0x1E4F1C9C8] distantPast];
      if ([v13 isEqualToDate:v14])
      {
        id v15 = [(PLManagedAsset *)self dateCreated];
        char v16 = [v5 isEqualToDate:v15];

        if ((v16 & 1) == 0)
        {
          __int16 v17 = PLSyndicationGetLog();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v18 = [(PLManagedAsset *)self uuid];
            uint64_t v19 = [(PLManagedAsset *)self additionalAttributes];
            long long v20 = [v19 syndicationIdentifier];
            int v21 = 138543618;
            double v22 = v18;
            __int16 v23 = 2114;
            __int16 v24 = v20;
            _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_DEFAULT, "[sync] asset (%{public}@ / %{public}@) dateCreated is distantPast, repairing date", (uint8_t *)&v21, 0x16u);
          }
          [(PLManagedAsset *)self setDateCreated:v5];
        }
      }
      else
      {
      }
      [(PLManagedAsset *)self _updateModificationDateForSyndication];
    }
  }
}

- (void)_updateConfirmedSpotlightSyncDateIfNeededForFullIndexSyncStartDate:(id)a3
{
  id v8 = a3;
  uint64_t v4 = [MEMORY[0x1E4F1C9C8] now];
  uint64_t v5 = [(PLManagedAsset *)self confirmedSpotlightSyncDate];

  if (!v5) {
    goto LABEL_6;
  }
  if (!v8) {
    goto LABEL_7;
  }
  id v6 = [(PLManagedAsset *)self confirmedSpotlightSyncDate];
  if ([v6 compare:v8] != -1)
  {

    goto LABEL_7;
  }
  uint64_t v7 = [v8 compare:v4];

  if (v7 == -1) {
LABEL_6:
  }
    [(PLManagedAsset *)self setConfirmedSpotlightSyncDate:v4];
LABEL_7:
}

- (void)_setSyndicationStateFromContentsOfSearchableItem:(id)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int v5 = [(PLManagedAsset *)self syndicationState];
  int v6 = v5 & 0xFFF6 | PLSearchableItemMessageIsFromMe(v4);
  if (PLSearchableItemMessagesIsSyndicatableMedia(v4)) {
    int v7 = 0;
  }
  else {
    int v7 = 8;
  }
  uint64_t v8 = v6 | v7;
  if (v5 != v8)
  {
    id v9 = PLSyndicationGetLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [v4 uniqueIdentifier];
      id v11 = PLManagedAssetSyndicationStateDescription(v5);
      id v12 = PLManagedAssetSyndicationStateDescription(v8);
      int v13 = 138543874;
      BOOL v14 = v10;
      __int16 v15 = 2114;
      char v16 = v11;
      __int16 v17 = 2114;
      uint64_t v18 = v12;
      _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_DEFAULT, "[sync] setting syndication state from spotlight item %{public}@, %{public}@ -> %{public}@", (uint8_t *)&v13, 0x20u);
    }
    [(PLManagedAsset *)self setSyndicationState:v8];
    [(PLManagedAsset *)self _updateModificationDateForSyndication];
  }
}

- (void)_populateSyndicationAssetWithAssetType:(signed __int16)a3 subtype:(signed __int16)a4 contentType:(id)a5 videoComplementContentType:(id)a6 originalFilename:(id)a7
{
  uint64_t v9 = a4;
  uint64_t v10 = a3;
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v12 = a6;
  id v13 = a7;
  id v14 = a5;
  [(PLManagedAsset *)self updateAssetKindAndPlaybackStyleIfNeededWithKind:v10];
  __int16 v15 = [v14 identifier];

  [(PLManagedAsset *)self setUniformTypeIdentifier:v15];
  if (v13) {
    [(PLManagedAsset *)self setSyndicationFilenameAndDirectoryWithOriginalFilename:v13];
  }
  id v16 = +[PLResourceInstaller onDemand_installOriginalResourceForSyndicationAsset:self];
  if (v9 == 2)
  {
    if (![(PLManagedAsset *)self becomeSyndicationLivePhotoWithVideoComplementContentType:v12])
    {
      __int16 v17 = PLSyndicationGetLog();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        uint64_t v18 = [(PLManagedAsset *)self uuid];
        uint64_t v19 = [v12 identifier];
        int v22 = 138543618;
        __int16 v23 = v18;
        __int16 v24 = 2114;
        __int16 v25 = v19;
        _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "[sync] failed to promote asset to live photo: %{public}@, content type: %{public}@", (uint8_t *)&v22, 0x16u);
      }
    }
  }
  else
  {
    [(PLManagedAsset *)self setKindSubtype:v9];
  }
  long long v20 = +[PLResourceRecipe recipeFromID:65741];
  int v21 = +[PLResourceInstaller onDemand_installPrimaryImageResourceWithRecipe:v20 version:0 forAsset:self requireFileToBePresent:0];
  [v21 setDataStoreClassID:3];
  [v21 setDataStoreSubtype:4];
  [v21 setLocalAvailability:4294934528];
  [v21 setSyndicationLocalAvailabilityWithAvailable:0 additionalFlags:2];
}

- (void)setConfirmedSpotlightSyncDate:(id)a3
{
  id v4 = a3;
  id v5 = [(PLManagedAsset *)self additionalAttributes];
  [v5 setLastUploadAttemptDate:v4];
}

- (NSDate)confirmedSpotlightSyncDate
{
  id v2 = [(PLManagedAsset *)self additionalAttributes];
  id v3 = [v2 lastUploadAttemptDate];

  return (NSDate *)v3;
}

- (BOOL)isBundleScopeSyndication
{
  return [(PLManagedAsset *)self bundleScope] == 3;
}

+ (void)performTransactionOnSyndicationLibraryWithSyndicationIdentifier:(id)a3 block:(id)a4
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v16 = 0;
  uint64_t v8 = (void *)PLCreateShortLivedWellKnownPhotoLibrary(3, (uint64_t)"+[PLManagedAsset(Syndication) performTransactionOnSyndicationLibraryWithSyndicationIdentifier:block:]", &v16);
  id v9 = v16;
  if (v8)
  {
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    void v11[2] = __101__PLManagedAsset_Syndication__performTransactionOnSyndicationLibraryWithSyndicationIdentifier_block___block_invoke;
    void v11[3] = &unk_1E5873510;
    id v15 = a1;
    id v12 = v6;
    id v13 = v8;
    id v14 = v7;
    [v13 performTransaction:v11];

    uint64_t v10 = v12;
  }
  else
  {
    uint64_t v10 = PLSyndicationGetLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 138412290;
      id v18 = v9;
      _os_log_impl(&dword_19B3C7000, v10, OS_LOG_TYPE_ERROR, "matchingAssetFromSyndicationLibrary: Unable to open syndication photo library: %@", buf, 0xCu);
    }
  }
}

void __101__PLManagedAsset_Syndication__performTransactionOnSyndicationLibraryWithSyndicationIdentifier_block___block_invoke(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v2 = [*(id *)(a1 + 56) assetWithSyndicationIdentifier:*(void *)(a1 + 32) inLibrary:*(void *)(a1 + 40)];
  id v3 = PLSyndicationGetLog();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v5 = [v2 uuid];
      uint64_t v6 = *(void *)(a1 + 32);
      int v8 = 138543618;
      id v9 = v5;
      __int16 v10 = 2114;
      uint64_t v11 = v6;
      _os_log_impl(&dword_19B3C7000, v4, OS_LOG_TYPE_INFO, "found matching asset %{public}@ in syndication library for %{public}@", (uint8_t *)&v8, 0x16u);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      id v7 = *(void **)(a1 + 32);
      int v8 = 138543362;
      id v9 = v7;
      _os_log_impl(&dword_19B3C7000, v4, OS_LOG_TYPE_ERROR, "unable to find matching asset in syndication library for %{public}@", (uint8_t *)&v8, 0xCu);
    }
  }
}

+ (id)predicateForShouldSyncToSPL
{
  void v8[2] = *MEMORY[0x1E4F143B8];
  id v2 = (void *)MEMORY[0x1E4F28BA0];
  id v3 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForIncludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForGuestAsset"), 0);
  v8[0] = v3;
  id v4 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %d", @"syndicationState", 0);
  v8[1] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:2];
  uint64_t v6 = [v2 andPredicateWithSubpredicates:v5];

  return v6;
}

+ (BOOL)shouldSyncAssetToSPLWithSavedAssetType:(signed __int16)a3 syndicationState:(unsigned __int16)a4
{
  int v4 = a4;
  [MEMORY[0x1E4F8BA10] maskForGuestAsset];
  BOOL result = PLValidatedSavedAssetTypeApplies();
  if (v4) {
    return 0;
  }
  return result;
}

+ (id)createOrUpdateObjectFromSearchableItem:(id)a3 library:(id)a4 fullIndexSyncStartDate:(id)a5 createIfNeeded:(BOOL)a6 didCreate:(BOOL *)a7 isSyndicatable:(BOOL *)a8 error:(id *)a9
{
  BOOL v9 = a6;
  uint64_t v12 = a9;
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  BOOL v83 = 0;
  id v16 = [v13 attributeSet];
  __int16 v17 = [v16 contentURL];

  IsHiddeuint64_t n = PLSearchableItemMessagesIsHidden(v13);
  int v19 = PLSearchableItemMessagesIsSyndicatableMedia(v13) & (IsHidden ^ 1);
  long long v20 = PLSyndicationGetLog();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    int v21 = [v13 uniqueIdentifier];
    int v22 = @"not syndicatable";
    *(_DWORD *)int buf = 138543874;
    uint64_t v85 = v21;
    if (v19) {
      int v22 = @"syndicatable";
    }
    __int16 v86 = 2114;
    uint64_t v87 = v22;
    __int16 v88 = 2112;
    long long v89 = v17;
    _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_DEFAULT, "[sync] considering spotlight item with ID: %{public}@ (%{public}@) for syndication asset with content URL: %@", buf, 0x20u);
  }
  if (v19)
  {
    id v81 = 0;
    id v82 = 0;
    uint64_t v23 = PLAssetTypeForSearchableItem(v13, &v82, &v81);
    id v24 = v82;
    __int16 v25 = (__CFString *)v81;
    if (v23 < 2)
    {
      id v80 = v25;
      uint64_t v26 = +[PLManagedAsset _syndicationAssetForSearchableItem:v13 inLibrary:v14 createIfNeeded:v9 didCreate:&v83 error:&v80];
      long long v76 = v80;

      if (!v83)
      {
        [v26 _fixDistantPastContentCreationDateWithItem:v13];
        long long v52 = [v13 attributeSet];
        int v53 = [v52 photosDonationState];
        if (![v53 integerValue])
        {
          int v54 = [v26 isEligibleForSearchIndexing];

          if (!v54)
          {
LABEL_44:
            [v26 _setSyndicationStateFromContentsOfSearchableItem:v13];
            [v26 _updateConfirmedSpotlightSyncDateIfNeededForFullIndexSyncStartDate:v15];
            __int16 v25 = v76;
            uint64_t v12 = a9;
            goto LABEL_45;
          }
          id v55 = PLSyndicationGetLog();
          if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
          {
            long long v56 = [v13 uniqueIdentifier];
            [v26 uuid];
            id v57 = v24;
            id v58 = v15;
            uint64_t v59 = (__CFString *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)int buf = 138543618;
            uint64_t v85 = v56;
            __int16 v86 = 2114;
            uint64_t v87 = v59;
            _os_log_impl(&dword_19B3C7000, v55, OS_LOG_TYPE_DEFAULT, "[sync] Spotlight record (id: %{public}@) matches existing asset in library but photos donation is missing, scheduling asset (%{public}@) for indexing", buf, 0x16u);

            id v15 = v58;
            id v24 = v57;
          }
          long long v52 = [v26 uuid];
          int v53 = [v14 managedObjectContext];
          id v60 = +[PLBackgroundJobWorkItem insertSearchIndexWorkItemIfNeededWithIdentifier:v52 flags:14 managedObjectContext:v53];
        }
LABEL_43:

        goto LABEL_44;
      }
      id v73 = v24;
      id v75 = v15;
      __int16 v27 = PLSyndicationGetLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        long long v28 = [v26 uuid];
        uint64_t v29 = [v26 additionalAttributes];
        long long v30 = [v29 syndicationIdentifier];
        *(_DWORD *)int buf = 138543618;
        uint64_t v85 = v28;
        __int16 v86 = 2114;
        uint64_t v87 = v30;
        _os_log_impl(&dword_19B3C7000, v27, OS_LOG_TYPE_DEFAULT, "[sync] created asset with uuid: %{public}@, syndication ID: %{public}@", buf, 0x16u);
      }
      uint64_t v71 = v17;

      uint64_t v31 = PLSearchableItemMessagesChatUniqueIdentifier(v13);
      if (v31) {
        [v26 setConversationAlbumWithConversationID:v31];
      }
      uint64_t v72 = (void *)v31;
      long long v32 = PLSearchableItemMessagesLivePhotoVideoURL(v13);
      uint64_t v33 = [v13 bundleID];
      int v34 = [v33 isEqualToString:@"com.apple.MobileSMS"];

      id v35 = 0;
      uint64_t v36 = 0;
      uint64_t v74 = v32;
      if (v34)
      {
        id v15 = v75;
        if (!v32)
        {
LABEL_42:
          __int16 v17 = v71;
          id v65 = [v71 lastPathComponent];
          uint64_t v66 = v36;
          id v24 = v73;
          [v26 _populateSyndicationAssetWithAssetType:v23 subtype:v66 contentType:v73 videoComplementContentType:v35 originalFilename:v65];

          long long v52 = v72;
          int v53 = v74;
          goto LABEL_43;
        }
        if (v23)
        {
          long long v37 = PLSyndicationGetLog();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
          {
            int v38 = [v26 uuid];
            long long v39 = [v13 bundleID];
            id v40 = [v26 additionalAttributes];
            uint64_t v41 = [v40 syndicationIdentifier];
            *(_DWORD *)int buf = 138543874;
            uint64_t v85 = v38;
            __int16 v86 = 2114;
            uint64_t v87 = v39;
            __int16 v88 = 2114;
            long long v89 = v41;
            _os_log_impl(&dword_19B3C7000, v37, OS_LOG_TYPE_ERROR, "[sync] ignoring video complement key for non-image asset: %{public}@, bundle ID: %{public}@, syndication ID: %{public}@", buf, 0x20u);

            id v15 = v75;
          }
          id v35 = 0;
LABEL_39:

          uint64_t v36 = 0;
          goto LABEL_42;
        }
        uint64_t v61 = (void *)MEMORY[0x1E4F442D8];
        uint64_t v62 = [v32 pathExtension];
        id v35 = [v61 typeWithFilenameExtension:v62 conformingToType:*MEMORY[0x1E4F44448]];

        if (!v35 || [v35 isDynamic])
        {
          long long v37 = PLSyndicationGetLog();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
          {
            int v70 = [v74 pathExtension];
            long long v68 = [v26 uuid];
            uint64_t v63 = [v13 bundleID];
            uint64_t v69 = [v26 additionalAttributes];
            id v64 = [v69 syndicationIdentifier];
            *(_DWORD *)int buf = 138544130;
            uint64_t v85 = v70;
            __int16 v86 = 2114;
            uint64_t v87 = v68;
            __int16 v88 = 2114;
            long long v89 = v63;
            __int16 v90 = 2114;
            id v91 = v64;
            _os_log_impl(&dword_19B3C7000, v37, OS_LOG_TYPE_ERROR, "[sync] unexpected video complement uti for file extension: %{public}@, storing as image only, asset: %{public}@, bundle ID: %{public}@, syndication ID: %{public}@", buf, 0x2Au);
          }
          id v15 = v75;
          goto LABEL_39;
        }
        uint64_t v36 = 2;
      }
      id v15 = v75;
      goto LABEL_42;
    }
    if ((unsigned __int16)v23 == 2)
    {
      id v43 = PLSyndicationGetLog();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEBUG))
      {
        [v13 uniqueIdentifier];
        id v44 = v24;
        id v45 = v15;
        v47 = uint64_t v46 = a9;
        *(_DWORD *)int buf = 138543362;
        uint64_t v85 = v47;
        uint64_t v48 = "[sync] skipping audio spotlight item with ID: %{public}@";
        uint64_t v49 = v43;
        os_log_type_t v50 = OS_LOG_TYPE_DEBUG;
        uint32_t v51 = 12;
LABEL_27:
        _os_log_impl(&dword_19B3C7000, v49, v50, v48, buf, v51);

        uint64_t v12 = v46;
        id v15 = v45;
        id v24 = v44;
      }
    }
    else
    {
      id v43 = PLSyndicationGetLog();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
      {
        [v13 uniqueIdentifier];
        id v44 = v24;
        id v45 = v15;
        v47 = uint64_t v46 = a9;
        *(_DWORD *)int buf = 138543618;
        uint64_t v85 = v47;
        __int16 v86 = 2112;
        uint64_t v87 = v25;
        uint64_t v48 = "[sync] unable to sync spotlight item (unknown asset type) with ID: %{public}@, error: %@";
        uint64_t v49 = v43;
        os_log_type_t v50 = OS_LOG_TYPE_ERROR;
        uint32_t v51 = 22;
        goto LABEL_27;
      }
    }

    uint64_t v26 = 0;
LABEL_45:

    goto LABEL_46;
  }
  id v79 = 0;
  uint64_t v26 = +[PLManagedAsset _syndicationAssetForSearchableItem:v13 inLibrary:v14 createIfNeeded:0 didCreate:0 error:&v79];
  __int16 v25 = (__CFString *)v79;
  if (v26)
  {
    if (IsHidden)
    {
      __int16 v42 = [v14 managedObjectContext];
      [v42 deleteObject:v26];

      uint64_t v12 = a9;
    }
    else
    {
      [v26 _setSyndicationStateFromContentsOfSearchableItem:v13];
      [v26 _updateConfirmedSpotlightSyncDateIfNeededForFullIndexSyncStartDate:v15];
    }
  }
LABEL_46:
  if (a7) {
    *a7 = v83;
  }
  if (a8) {
    *a8 = v19;
  }
  if (v12) {
    id *v12 = v25;
  }

  return v26;
}

+ (id)predicateForSyndicatedAssetIdentifiersSuffix:(id)a3
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  int v4 = [MEMORY[0x1E4F1CA48] array];
  id v5 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != nil", @"additionalAttributes.syndicationIdentifier");
  [v4 addObject:v5];

  uint64_t v6 = [MEMORY[0x1E4F1CA48] array];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v7 = v3;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K ENDSWITH %@", @"additionalAttributes.syndicationIdentifier", *(void *)(*((void *)&v16 + 1) + 8 * i), (void)v16];
        [v6 addObject:v12];
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v9);
  }

  id v13 = [MEMORY[0x1E4F28BA0] orPredicateWithSubpredicates:v6];
  [v4 addObject:v13];
  id v14 = [MEMORY[0x1E4F28BA0] andPredicateWithSubpredicates:v4];

  return v14;
}

+ (id)predicateForSyndicatedAssetIdentifiers:(id)a3 includeRejected:(BOOL)a4
{
  v18[2] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  if (v6)
  {
    id v7 = (void *)MEMORY[0x1E4F28BA0];
    uint64_t v8 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != nil", @"additionalAttributes.syndicationIdentifier");
    v18[0] = v8;
    uint64_t v9 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K IN %@", @"additionalAttributes.syndicationIdentifier", v6];
    v18[1] = v9;
    uint64_t v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v18 count:2];
    uint64_t v11 = [v7 andPredicateWithSubpredicates:v10];

    if (a4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v11 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != nil", @"additionalAttributes.syndicationIdentifier");
  if (!a4)
  {
LABEL_3:
    uint64_t v12 = (void *)MEMORY[0x1E4F28BA0];
    v17[0] = v11;
    id v13 = [a1 filterPredicateToExcludeNoSyndicationAssets];
    v17[1] = v13;
    id v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v17 count:2];
    uint64_t v15 = [v12 andPredicateWithSubpredicates:v14];

    uint64_t v11 = (void *)v15;
  }
LABEL_4:

  return v11;
}

+ (id)filterPredicateToExcludeNoSyndicationAssets
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K < %d", @"syndicationState", 4);
}

+ (id)filterPredicateToIncludeOnlyReceivedSyndicatedAssets
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(%K & %i) != %i", @"syndicationState", 1, 1);
}

+ (PLManagedAsset)assetWithSyndicationIdentifier:(id)a3 inLibrary:(id)a4
{
  void v30[2] = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if (v6)
  {
    uint64_t v8 = (void *)MEMORY[0x19F38D3B0]();
    uint64_t v9 = (void *)MEMORY[0x1E4F1C0D0];
    uint64_t v10 = +[PLManagedAsset entityName];
    uint64_t v11 = [v9 fetchRequestWithEntityName:v10];

    uint64_t v12 = (void *)MEMORY[0x1E4F28BA0];
    id v29 = v6;
    id v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v29 count:1];
    id v14 = [a1 predicateForSyndicatedAssetIdentifiers:v13 includeRejected:1];
    v30[0] = v14;
    uint64_t v15 = objc_msgSend(MEMORY[0x1E4F8BA10], "predicateForExcludeMask:useIndex:", objc_msgSend(MEMORY[0x1E4F8BA10], "maskForSyndicationIdentifierFetchExclusions"), 0);
    v30[1] = v15;
    long long v16 = [MEMORY[0x1E4F1C978] arrayWithObjects:v30 count:2];
    long long v17 = [v12 andPredicateWithSubpredicates:v16];

    [v11 setPredicate:v17];
    long long v18 = [v7 managedObjectContext];
    id v26 = 0;
    long long v19 = [v18 executeFetchRequest:v11 error:&v26];
    id v20 = v26;

    uint64_t v21 = [v19 count];
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = [v19 objectAtIndex:0];
      if (v22 != 1)
      {
        id v24 = PLSyndicationGetLog();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 138543362;
          id v28 = v6;
          _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_ERROR, "Found more than one asset with syndication identifier %{public}@", buf, 0xCu);
        }
      }
    }
    else
    {
      uint64_t v23 = 0;
    }
  }
  else
  {
    uint64_t v23 = 0;
  }

  return (PLManagedAsset *)v23;
}

+ (id)_syndicationAssetForSearchableItem:(id)a3 inLibrary:(id)a4 createIfNeeded:(BOOL)a5 didCreate:(BOOL *)a6 error:(id *)a7
{
  BOOL v33 = a5;
  void v38[2] = *MEMORY[0x1E4F143B8];
  id v9 = a4;
  id v10 = a3;
  uint64_t v11 = [v10 uniqueIdentifier];
  uint64_t v12 = [v10 attributeSet];
  id v13 = [v12 bundleID];

  id v14 = [v10 attributeSet];

  id v35 = [v14 contentCreationDate];

  uint64_t v15 = (void *)MEMORY[0x1E4F1C0D0];
  long long v16 = +[PLManagedAsset entityName];
  long long v17 = [v15 fetchRequestWithEntityName:v16];

  long long v18 = (void *)MEMORY[0x1E4F28BA0];
  long long v37 = v11;
  long long v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v37 count:1];
  id v20 = [a1 predicateForSyndicatedAssetIdentifiers:v19 includeRejected:1];
  v38[0] = v20;
  uint64_t v21 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K == %@", @"additionalAttributes.importedByBundleIdentifier", v13];
  v38[1] = v21;
  uint64_t v22 = [MEMORY[0x1E4F1C978] arrayWithObjects:v38 count:2];
  uint64_t v23 = [v18 andPredicateWithSubpredicates:v22];
  [v17 setPredicate:v23];

  id v24 = [v9 managedObjectContext];
  id v36 = 0;
  __int16 v25 = [v24 executeFetchRequest:v17 error:&v36];
  id v26 = v36;

  __int16 v27 = [v25 firstObject];
  if (!v27 && v33)
  {
    id v28 = [MEMORY[0x1E4F29128] UUID];
    id v29 = [v28 UUIDString];

    uint64_t v30 = [a1 _insertSyndicationAssetIntoPhotoLibrary:v9 uuid:v29 syndicationIdentifier:v11 bundleID:v13 addedDate:v35];
    __int16 v27 = (void *)v30;
    if (a6 && v30) {
      *a6 = 1;
    }
  }
  if (a7) {
    *a7 = v26;
  }

  return v27;
}

+ (id)_insertSyndicationAssetIntoPhotoLibrary:(id)a3 uuid:(id)a4 syndicationIdentifier:(id)a5 bundleID:(id)a6 addedDate:(id)a7
{
  uint64_t v11 = (void *)MEMORY[0x1E4F8BA10];
  id v12 = a7;
  id v13 = a6;
  id v14 = a5;
  id v15 = a4;
  id v16 = a3;
  LOWORD(v22) = 1;
  long long v17 = +[PLManagedAsset insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:](PLManagedAsset, "insertAssetIntoPhotoLibrary:mainFileURL:mainFileMetadata:savedAssetType:bundleScope:uuid:replacementUUID:imageSource:imageData:isPlaceholder:deleteFileOnFailure:", v16, 0, 0, [v11 savedAssetTypeForInsertIntoSyndicationLibrary], 3, v15, 0, 0, 0, v22);

  long long v18 = [v17 additionalAttributes];
  [v18 setSyndicationIdentifier:v14];

  [v17 setBundleScope:3];
  objc_msgSend(v17, "setSavedAssetType:", objc_msgSend(MEMORY[0x1E4F8BA10], "savedAssetTypeForInsertIntoSyndicationLibrary"));
  [v17 setImportedBy:12];
  long long v19 = [v17 additionalAttributes];
  [v19 setImportedByBundleIdentifier:v13];

  [v17 setAddedDate:v12];
  id v20 = [MEMORY[0x1E4F1C9C8] distantPast];
  [v17 setDateCreated:v20];

  return v17;
}

- (BOOL)anyInternalResourceIsLocal
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = [(PLManagedAsset *)self modernResources];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v2);
        }
        if ([*(id *)(*((void *)&v7 + 1) + 8 * i) isLocallyAvailable])
        {
          LOBYTE(v3) = 1;
          goto LABEL_11;
        }
      }
      uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v3;
}

- (id)allRequiredResourcesForCPLDisable
{
  BOOL v3 = [(PLManagedAsset *)self hasAdjustments];
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __59__PLManagedAsset_RM_CPL__allRequiredResourcesForCPLDisable__block_invoke;
  v6[3] = &__block_descriptor_33_e28_B16__0__PLInternalResource_8l;
  BOOL v7 = v3;
  uint64_t v4 = [(PLManagedAsset *)self persistedResourcesMatching:v6];
  return v4;
}

uint64_t __59__PLManagedAsset_RM_CPL__allRequiredResourcesForCPLDisable__block_invoke(uint64_t a1, void *a2)
{
  return [a2 isCPLOriginalResourceAssetHasAdjustments:*(unsigned __int8 *)(a1 + 32)];
}

- (BOOL)checkAllResourcesRequiredForCPLDisableWithReachableBlock:(id)a3
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (void (**)(id, void *, void *))a3;
  id v5 = [(PLManagedAsset *)self allRequiredResourcesForCPLDisable];
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v31 objects:v37 count:16];
  if (!v6)
  {
    uint64_t v9 = 0;
    goto LABEL_31;
  }
  uint64_t v8 = v6;
  uint64_t v9 = 0;
  uint64_t v10 = *(void *)v32;
  char v29 = 1;
  *(void *)&long long v7 = 67109378;
  long long v27 = v7;
  id v28 = v4;
  do
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if (*(void *)v32 != v10) {
        objc_enumerationMutation(v5);
      }
      uint64_t v12 = *(void **)(*((void *)&v31 + 1) + 8 * i);
      id v13 = objc_msgSend(v12, "cplFileURL", v27);
      id v14 = v13;
      if (v13)
      {
        id v30 = 0;
        char v15 = [v13 checkResourceIsReachableAndReturnError:&v30];
        id v16 = v30;
        if (v15)
        {
          if (v4) {
            v4[2](v4, v14, v12);
          }
          goto LABEL_25;
        }
        if (PLIsErrorFileNotFound())
        {
          if ([v12 cloudLocalState] == 3)
          {
            char v29 = 0;
          }
          else if (!*MEMORY[0x1E4F59AC0])
          {
            long long v19 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            {
              id v20 = v5;
              uint64_t v21 = v9;
              int v22 = [v12 cloudLocalState];
              uint64_t v23 = [v12 objectID];
              *(_DWORD *)int buf = v27;
              *(_DWORD *)id v36 = v22;
              uint64_t v9 = v21;
              id v5 = v20;
              uint64_t v4 = v28;
              *(_WORD *)&v36[4] = 2114;
              *(void *)&v36[6] = v23;
              _os_log_impl(&dword_19B3C7000, v19, OS_LOG_TYPE_ERROR, "Check resource availability for iCPL disable: unreachable resource with cloudLocalState %d, skipping: %{public}@", buf, 0x12u);
            }
          }
          ++v9;
          goto LABEL_25;
        }
        if (!*MEMORY[0x1E4F59AC0])
        {
          long long v17 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            long long v18 = [v12 objectID];
            *(_DWORD *)int buf = 138543618;
            *(void *)id v36 = v18;
            *(_WORD *)&v36[8] = 2112;
            *(void *)&v36[10] = v16;
            _os_log_impl(&dword_19B3C7000, v17, OS_LOG_TYPE_ERROR, "Check resource availability for iCPL disable: failed for resource: %{public}@, error: %@", buf, 0x16u);
          }
          goto LABEL_19;
        }
      }
      else
      {
        if (*MEMORY[0x1E4F59AC0]) {
          goto LABEL_26;
        }
        id v16 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          long long v17 = [v12 objectID];
          *(_DWORD *)int buf = 138543362;
          *(void *)id v36 = v17;
          _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_ERROR, "Check resource availability for iCPL disable: nil fileURL for CPL original resource: %{public}@", buf, 0xCu);
LABEL_19:
        }
      }
LABEL_25:

LABEL_26:
    }
    uint64_t v8 = [v5 countByEnumeratingWithState:&v31 objects:v37 count:16];
  }
  while (v8);
  if ((v29 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_31:
  if (v9 == [v5 count])
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v24 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_ERROR, "Check resource availability for iCPL disable: all original resources unavailable, returning NO", buf, 2u);
      }
    }
LABEL_36:
    BOOL v25 = 0;
  }
  else
  {
    BOOL v25 = 1;
  }

  return v25;
}

- (void)updateSpatialTypeFromAdjustmentRenderTypes:(unsigned int)a3 hasAdjustment:(BOOL)a4 adjustedMediaMetadata:(id)a5
{
  BOOL v5 = a4;
  __int16 v6 = a3;
  id v12 = a5;
  if ([(PLManagedAsset *)self isPhoto])
  {
    if (v5)
    {
      if ((v6 & 0x1000) == 0)
      {
        uint64_t v8 = self;
        uint64_t v9 = 0;
LABEL_11:
        [(PLManagedAsset *)v8 setSpatialType:v9];
        goto LABEL_12;
      }
      if (!v12)
      {
        uint64_t v8 = self;
        uint64_t v9 = 1;
        goto LABEL_11;
      }
      uint64_t v10 = [objc_alloc(MEMORY[0x1E4F8CC48]) initWithImageSourceProxyOrEncodedImagePropertyData:v12 contentType:0 timeZoneLookup:0];
    }
    else
    {
      if (![(PLManagedAsset *)self hasAdjustments]) {
        goto LABEL_12;
      }
      uint64_t v10 = [(PLManagedAsset *)self metadataFromMediaPropertiesOrOriginalResource];
    }
    uint64_t v11 = (void *)v10;
    [(PLManagedAsset *)self setSpatialTypeFromMetadata:v10];
  }
LABEL_12:
}

- (id)rm_applyResourcesFromAssetChange:(id)a3 inLibrary:(id)a4
{
  uint64_t v163 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  unsigned int v8 = [(PLManagedAsset *)self deferredProcessingNeeded];
  if (v8 > 0xA
    || ((0x5F6u >> v8) & 1) == 0
    || ![(PLManagedAsset *)self hasAdjustments]
    || ([(PLManagedAsset *)self adjustmentTimestamp],
        uint64_t v9 = objc_claimAutoreleasedReturnValue(),
        [v6 recordModificationDate],
        uint64_t v10 = objc_claimAutoreleasedReturnValue(),
        uint64_t v11 = [v9 compare:v10],
        v10,
        v9,
        v11 != 1))
  {
    id v131 = v7;
    id v133 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    long long v150 = 0u;
    long long v151 = 0u;
    long long v152 = 0u;
    long long v153 = 0u;
    char v15 = [(PLManagedAsset *)self allAssetCPLResources];
    uint64_t v16 = [v15 countByEnumeratingWithState:&v150 objects:v156 count:16];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = *(void *)v151;
      do
      {
        for (uint64_t i = 0; i != v17; ++i)
        {
          if (*(void *)v151 != v18) {
            objc_enumerationMutation(v15);
          }
          id v20 = *(void **)(*((void *)&v150 + 1) + 8 * i);
          uint64_t v21 = [v20 cplType];
          int v22 = [v6 resources];
          LOBYTE(v21) = [(PLManagedAsset *)self _isResourceType:v21 inResources:v22];

          if ((v21 & 1) == 0)
          {
            [(PLManagedAsset *)self removeLocalFileForResource:v20];
            [v20 deleteResource];
          }
        }
        uint64_t v17 = [v15 countByEnumeratingWithState:&v150 objects:v156 count:16];
      }
      while (v17);
    }

    unint64_t v138 = [(PLManagedAsset *)self bestResourceTypeForAdjustedFingerPrint];
    long long v146 = 0u;
    long long v147 = 0u;
    long long v148 = 0u;
    long long v149 = 0u;
    id obj = [v6 resources];
    uint64_t v23 = [obj countByEnumeratingWithState:&v146 objects:v155 count:16];
    BOOL v137 = v6;
    uint64_t v141 = self;
    if (v23)
    {
      uint64_t v24 = v23;
      id v140 = 0;
      uint64_t v25 = *(void *)v147;
      do
      {
        for (uint64_t j = 0; j != v24; ++j)
        {
          if (*(void *)v147 != v25) {
            objc_enumerationMutation(obj);
          }
          long long v27 = *(void **)(*((void *)&v146 + 1) + 8 * j);
          if (!*MEMORY[0x1E4F59AC0])
          {
            id v28 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)int buf = 138412290;
              *(void *)BOOL v158 = v27;
              _os_log_impl(&dword_19B3C7000, v28, OS_LOG_TYPE_DEBUG, "Asset resource: %@", buf, 0xCu);
            }
          }
          uint64_t v29 = [v27 resourceType];
          id v30 = [(PLManagedAsset *)self assetResourceForCPLType:v29];
          if (v30)
          {
            long long v31 = [v27 identity];
            long long v32 = [v31 fingerPrint];
            long long v33 = [v30 fingerprint];
            int v34 = [v32 isEqualToString:v33] ^ 1;

            self = v141;
            id v6 = v137;
          }
          else
          {
            int v34 = 0;
          }
          id v35 = [(PLManagedAsset *)self storedResourceForCPLResource:v27 asset:self adjusted:1];

          if (v35 && [v35 isLocallyAvailable])
          {
            if (v34)
            {
              if (!*MEMORY[0x1E4F59AC0])
              {
                id v36 = __CPLAssetsdOSLogDomain();
                if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
                {
                  long long v37 = [v35 singleLineDescription];
                  *(_DWORD *)int buf = 138412546;
                  *(void *)BOOL v158 = v37;
                  *(_WORD *)&v158[8] = 2112;
                  *(void *)&v158[10] = v27;
                  _os_log_impl(&dword_19B3C7000, v36, OS_LOG_TYPE_DEFAULT, "Removing local resource %@ that does not match cloud resource %@", buf, 0x16u);

                  self = v141;
                }
              }
              [(PLManagedAsset *)self removeLocalFileForResource:v35];
              [v35 markAsNotLocallyAvailable];
            }
            else
            {
              [v133 addObject:v35];
            }
          }
          if ([v35 cloudLocalState] != 3) {
            [v35 setCloudLocalState:3];
          }
          if (v29 == v138)
          {
            uint64_t v38 = [v27 identity];
            uint64_t v39 = [v38 fingerPrint];

            id v140 = (void *)v39;
          }
        }
        uint64_t v24 = [obj countByEnumeratingWithState:&v146 objects:v155 count:16];
      }
      while (v24);
    }
    else
    {
      id v140 = 0;
    }

    [(PLManagedAsset *)self persistedResourcesWithRecipeID:65937 andVersion:2];
    long long v142 = 0u;
    long long v143 = 0u;
    long long v144 = 0u;
    long long v145 = 0u;
    id v40 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v41 = [v40 countByEnumeratingWithState:&v142 objects:v154 count:16];
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v43 = *(void *)v143;
      do
      {
        for (uint64_t k = 0; k != v42; ++k)
        {
          if (*(void *)v143 != v43) {
            objc_enumerationMutation(v40);
          }
          id v45 = *(void **)(*((void *)&v142 + 1) + 8 * k);
          if (!*MEMORY[0x1E4F59AC0])
          {
            uint64_t v46 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)int buf = 138412290;
              *(void *)BOOL v158 = v45;
              _os_log_impl(&dword_19B3C7000, v46, OS_LOG_TYPE_DEFAULT, "Removing substandard resource %@", buf, 0xCu);
            }
          }
          [(PLManagedAsset *)v141 removeLocalFileForResource:v45];
          [v45 deleteResource];
        }
        uint64_t v42 = [v40 countByEnumeratingWithState:&v142 objects:v154 count:16];
      }
      while (v42);
    }

    if (!*MEMORY[0x1E4F59AC0])
    {
      __int16 v47 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
      {
        int v48 = [(PLManagedAsset *)v141 orientation];
        uint64_t v49 = [v6 orientation];
        *(_DWORD *)int buf = 67109376;
        *(_DWORD *)BOOL v158 = v48;
        *(_WORD *)&v158[4] = 2048;
        *(void *)&v158[6] = v49;
        _os_log_impl(&dword_19B3C7000, v47, OS_LOG_TYPE_DEBUG, "Current orientation: %d. AssetChange orientation: %ld", buf, 0x12u);
      }
    }
    int v50 = [(PLManagedAsset *)v141 orientation];
    if ([v6 orientation] != v50) {
      -[PLManagedAsset setOrientation:](v141, "setOrientation:", (__int16)[v6 orientation]);
    }
    [(PLManagedAsset *)v141 duration];
    uint64_t v52 = (uint64_t)(v51 * 1000.0);
    uint64_t v53 = [v6 duration];
    if (v53 != v52)
    {
      uint64_t v54 = v53;
      if (!*MEMORY[0x1E4F59AC0])
      {
        id v55 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)int buf = 134218240;
          *(void *)BOOL v158 = v52;
          *(_WORD *)&v158[8] = 2048;
          *(void *)&v158[10] = v54;
          _os_log_impl(&dword_19B3C7000, v55, OS_LOG_TYPE_DEBUG, "Current duration: %ld. AssetChange duration: %ld", buf, 0x16u);
        }
      }
      [(PLManagedAsset *)v141 setDuration:(double)v54 / 1000.0];
    }
    uint64_t v56 = [v6 originalChoice];
    if (v56 != [(PLManagedAsset *)v141 originalResourceChoice]) {
      [(PLManagedAsset *)v141 setOriginalResourceChoice:v56];
    }
    id v57 = [v6 adjustedMediaMetaDataType];
    uint64_t v58 = [v6 adjustedMediaMetaData];
    uint64_t v59 = [(PLManagedAsset *)v141 additionalAttributes];
    [v59 setMediaMetadataType:v57];

    id v60 = [(PLManagedAsset *)v141 additionalAttributes];
    id obja = (id)v58;
    [v60 setMediaMetadataData:v58];

    uint64_t v61 = [v6 adjustments];
    uint64_t v62 = v61;
    if (v61)
    {
      id v63 = [v61 adjustmentType];

      if (v63)
      {
        id v64 = [v62 simpleAdjustmentData];

        uint64_t v139 = [v62 adjustmentCompoundVersion];

        id v134 = [v62 adjustmentCreatorCode];

        id v132 = [v62 adjustmentTimestamp];

        uint64_t v65 = -[PLManagedAsset _plAdjustmentBaseVersionFromCPLAdjustmentSourceType:](v141, "_plAdjustmentBaseVersionFromCPLAdjustmentSourceType:", [v62 adjustmentSourceType]);
        uint64_t v66 = [v62 adjustmentRenderTypes];
        uint64_t v67 = 1;
        goto LABEL_78;
      }
      uint64_t v65 = 0;
      id v134 = 0;
      id v64 = 0;
    }
    else
    {
      uint64_t v65 = 0;
      id v134 = 0;
      id v64 = 0;
      id v63 = 0;
    }
    uint64_t v67 = 0;
    id v132 = 0;
    uint64_t v66 = 0;
    uint64_t v139 = @"0";
LABEL_78:
    [(PLManagedAsset *)v141 updateSpatialTypeFromAdjustmentRenderTypes:v66 hasAdjustment:v67 adjustedMediaMetadata:obja];
    if (!*MEMORY[0x1E4F59AC0])
    {
      long long v68 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v68, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v69 = @"NO";
        if (v67) {
          uint64_t v69 = @"YES";
        }
        *(_DWORD *)int buf = 138412290;
        *(void *)BOOL v158 = v69;
        _os_log_impl(&dword_19B3C7000, v68, OS_LOG_TYPE_DEBUG, "has adjustment: %@", buf, 0xCu);
      }

      if (*MEMORY[0x1E4F59AC0]) {
        int v70 = 0;
      }
      else {
        int v70 = v67;
      }
      if (v70 == 1)
      {
        uint64_t v71 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
        {
          [(PLManagedAsset *)v141 uuid];
          v73 = uint64_t v72 = v57;
          *(_DWORD *)int buf = 138543874;
          *(void *)BOOL v158 = v63;
          *(_WORD *)&v158[8] = 2114;
          *(void *)&v158[10] = v139;
          __int16 v159 = 2114;
          __int16 v160 = v73;
          _os_log_impl(&dword_19B3C7000, v71, OS_LOG_TYPE_DEFAULT, "Setting adjustment type: %{public}@ version: %{public}@ to asset %{public}@", buf, 0x20u);

          id v57 = v72;
        }
      }
    }
    if (v64) {
      int v74 = 0;
    }
    else {
      int v74 = v67;
    }
    if (v74 == 1)
    {
      id v75 = [(PLManagedAsset *)v141 assetResourceForCPLType:13];
      long long v76 = [v75 cplFileURL];
      if (v76 && [v75 isLocallyAvailable]) {
        id v64 = (id)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithContentsOfURL:v76];
      }
      else {
        id v64 = 0;
      }
    }
    uint64_t v77 = objc_msgSend(objc_alloc(MEMORY[0x1E4F8CBB8]), "initWithFormatIdentifier:formatVersion:data:baseVersion:editorBundleID:renderTypes:", v63, v139, v64, +[PLManagedAsset pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:](PLManagedAsset, "pfAdjustmentsBaseVersionFromAdjustmentBaseVersion:", v65), v134, v66);
    uint64_t v78 = +[PLAssetAdjustmentOptions assetAdjustmentOptionsForApplyingResourcesFromCPL];
    id v79 = v141;
    long long v130 = (void *)v77;
    [(PLManagedAsset *)v141 setAdjustments:v77 options:v78];

    id v80 = [(PLManagedAsset *)v141 additionalAttributes];
    id v81 = [v80 unmanagedAdjustment];

    if (v81)
    {
      if (v132) {
        objc_msgSend(v81, "setAdjustmentTimestamp:");
      }
      id v79 = v141;
      if ([(PLManagedAsset *)v141 isVideo] || [(PLManagedAsset *)v141 isPhotoIris]) {
        [(PLManagedAsset *)v141 setPlaybackVariationAndLoopingStyleFromAdjustmentRenderTypes:v66];
      }
      if ([(PLManagedAsset *)v141 isPhoto]) {
        [(PLManagedAsset *)v141 setDepthTypeFromAdjustmentRenderTypes:v66];
      }
      [(PLManagedAsset *)v141 setCameraProcessingAdjustmentStateFromAdjustmentRenderTypes:v66];
    }
    if ([(PLManagedAsset *)v79 hasAdjustments])
    {
      id v82 = [(PLManagedAsset *)v79 additionalAttributes];
      BOOL v83 = [v82 mediaMetadata];

      if (!v83)
      {
        uint64_t v84 = [(PLManagedAsset *)v79 additionalAttributes];
        [v84 setMediaMetadataData:obja];
      }
    }
    uint64_t v85 = [(PLManagedAsset *)v79 additionalAttributes];
    [v85 setAdjustedStableHash:v140];

    __int16 v86 = [v137 recordModificationDate];
    [(PLManagedAsset *)v79 setModificationDate:v86];

    if ([(PLManagedAsset *)v79 effectiveThumbnailIndex] == 0x7FFFFFFFFFFFFFFFLL) {
      [(PLManagedAsset *)v79 setCloudPlaceholderKind:2];
    }
    if (![(PLManagedAsset *)v79 hasNonSlomoAdjustments])
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v89 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v89, OS_LOG_TYPE_DEBUG))
        {
          id v90 = [(PLManagedAsset *)v79 _compactDebugDescription];
          *(_DWORD *)int buf = 138412290;
          *(void *)BOOL v158 = v90;
          _os_log_impl(&dword_19B3C7000, v89, OS_LOG_TYPE_DEBUG, "Setting original size for asset %@", buf, 0xCu);
        }
      }
      uint64_t v91 = [(PLManagedAsset *)v79 originalWidth];
      uint64_t v92 = [(PLManagedAsset *)v79 originalHeight];
      if (v91 >= 1 && v92 >= 1)
      {
        double v93 = (double)v92;
        unint64_t v94 = [(PLManagedAsset *)v79 originalOrientation] - 5;
        if (v94 >= 4) {
          double v95 = (double)v91;
        }
        else {
          double v95 = v93;
        }
        if (v94 < 4) {
          double v93 = (double)v91;
        }
        if (v95 != (double)[(PLManagedAsset *)v79 width]) {
          [(PLManagedAsset *)v79 setWidth:(uint64_t)v95];
        }
        if (v93 != (double)[(PLManagedAsset *)v79 height]) {
          [(PLManagedAsset *)v79 setHeight:(uint64_t)v93];
        }
      }
      __int16 v88 = [(PLManagedAsset *)v79 masterResourceForCPLType:1];
      id v96 = [v88 uniformTypeIdentifier];
      id v97 = [v96 identifier];

      if (v97)
      {
        if (!*MEMORY[0x1E4F59AC0])
        {
          id v98 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v98, OS_LOG_TYPE_DEBUG))
          {
            [v88 singleLineDescription];
            v100 = id v99 = v57;
            *(_DWORD *)int buf = 138412546;
            *(void *)BOOL v158 = v97;
            *(_WORD *)&v158[8] = 2112;
            *(void *)&v158[10] = v100;
            id v101 = "Setting uti to %@ from %@";
            id v102 = v98;
            os_log_type_t v103 = OS_LOG_TYPE_DEBUG;
LABEL_173:
            _os_log_impl(&dword_19B3C7000, v102, v103, v101, buf, 0x16u);

            id v57 = v99;
          }
LABEL_174:
        }
LABEL_175:
        [(PLManagedAsset *)v141 setUniformTypeIdentifier:v97];
        goto LABEL_181;
      }
      if (*MEMORY[0x1E4F59AC0])
      {
LABEL_181:

        goto LABEL_182;
      }
      long long v113 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v113, OS_LOG_TYPE_ERROR))
      {
        long long v114 = [v88 singleLineDescription];
        *(_DWORD *)int buf = 138412290;
        *(void *)BOOL v158 = v114;
        long long v115 = "Original resource %@ is missing uti";
LABEL_179:
        _os_log_impl(&dword_19B3C7000, v113, OS_LOG_TYPE_ERROR, v115, buf, 0xCu);
      }
LABEL_180:

      goto LABEL_181;
    }
    if ([(PLManagedAsset *)v79 isVideo])
    {
      uint64_t v87 = 16;
    }
    else
    {
      __int16 v88 = [(PLManagedAsset *)v79 assetResourceForCPLType:2];
      if (v88) {
        goto LABEL_141;
      }
      __int16 v88 = [(PLManagedAsset *)v141 assetResourceForCPLType:4];
      if (v88) {
        goto LABEL_141;
      }
      uint64_t v87 = 5;
      id v79 = v141;
    }
    __int16 v88 = [(PLManagedAsset *)v79 assetResourceForCPLType:v87];
    if (!v88)
    {
      if (*MEMORY[0x1E4F59AC0])
      {
LABEL_183:
        id v12 = v133;

        long long v125 = v12;
        id v6 = v137;
        id v7 = v131;
LABEL_184:

        goto LABEL_185;
      }
      __int16 v88 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v88, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl(&dword_19B3C7000, v88, OS_LOG_TYPE_ERROR, "Did not find derivative resource to update asset size with, asset dimensions may be incorrect", buf, 2u);
      }
LABEL_182:

      goto LABEL_183;
    }
LABEL_141:
    if (!*MEMORY[0x1E4F59AC0])
    {
      id v104 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v104, OS_LOG_TYPE_DEBUG))
      {
        id v105 = [v88 singleLineDescription];
        *(_DWORD *)int buf = 138412290;
        *(void *)BOOL v158 = v105;
        _os_log_impl(&dword_19B3C7000, v104, OS_LOG_TYPE_DEBUG, "Updating asset width/height from resource %@", buf, 0xCu);
      }
    }
    uint64_t v106 = [v88 unorientedWidth];
    if (v106 < 1)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        long long v116 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v116, OS_LOG_TYPE_ERROR))
        {
          [v88 singleLineDescription];
          long long v118 = v117 = v57;
          *(_DWORD *)int buf = 134218242;
          *(void *)BOOL v158 = v106;
          *(_WORD *)&v158[8] = 2112;
          *(void *)&v158[10] = v118;
          _os_log_impl(&dword_19B3C7000, v116, OS_LOG_TYPE_ERROR, "Invalid width %lld from resource %@", buf, 0x16u);

          id v57 = v117;
        }
      }
      uint64_t v119 = [v88 unorientedHeight];
      if (!*MEMORY[0x1E4F59AC0])
      {
        uint64_t v120 = v119;
        long long v121 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v121, OS_LOG_TYPE_ERROR))
        {
          [v88 singleLineDescription];
          v123 = long long v122 = v57;
          *(_DWORD *)int buf = 134218242;
          *(void *)BOOL v158 = v120;
          *(_WORD *)&v158[8] = 2112;
          *(void *)&v158[10] = v123;
          _os_log_impl(&dword_19B3C7000, v121, OS_LOG_TYPE_ERROR, "Invalid height %lld from resource %@", buf, 0x16u);

          id v57 = v122;
        }
      }
    }
    else
    {
      id v107 = v141;
      if ([(PLManagedAsset *)v141 width] != v106)
      {
        if (!*MEMORY[0x1E4F59AC0])
        {
          id v108 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v108, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v109 = [(PLManagedAsset *)v141 width];
            *(_DWORD *)int buf = 134218240;
            *(void *)BOOL v158 = v109;
            *(_WORD *)&v158[8] = 2048;
            *(void *)&v158[10] = v106;
            _os_log_impl(&dword_19B3C7000, v108, OS_LOG_TYPE_DEBUG, "Setting asset width from %lld to %lld", buf, 0x16u);
          }
        }
        id v107 = v141;
        [(PLManagedAsset *)v141 setWidth:v106];
      }
      uint64_t v110 = [v88 unorientedHeight];
      if ([(PLManagedAsset *)v107 height] != v110)
      {
        if (!*MEMORY[0x1E4F59AC0])
        {
          uint64_t v111 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v111, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v112 = [(PLManagedAsset *)v141 height];
            *(_DWORD *)int buf = 134218240;
            *(void *)BOOL v158 = v112;
            *(_WORD *)&v158[8] = 2048;
            *(void *)&v158[10] = v110;
            _os_log_impl(&dword_19B3C7000, v111, OS_LOG_TYPE_DEBUG, "Setting asset height from %lld to %lld", buf, 0x16u);
          }
        }
        [(PLManagedAsset *)v141 setHeight:v110];
      }
    }
    long long v124 = [v88 uniformTypeIdentifier];
    id v97 = [v124 identifier];

    if (v97)
    {
      if (!*MEMORY[0x1E4F59AC0])
      {
        id v98 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v98, OS_LOG_TYPE_DEFAULT))
        {
          [v88 singleLineDescription];
          v100 = id v99 = v57;
          *(_DWORD *)int buf = 138412546;
          *(void *)BOOL v158 = v97;
          *(_WORD *)&v158[8] = 2112;
          *(void *)&v158[10] = v100;
          id v101 = "Setting uti to %@ from %@ due to adjustment";
          id v102 = v98;
          os_log_type_t v103 = OS_LOG_TYPE_DEFAULT;
          goto LABEL_173;
        }
        goto LABEL_174;
      }
      goto LABEL_175;
    }
    if (*MEMORY[0x1E4F59AC0]) {
      goto LABEL_181;
    }
    long long v113 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v113, OS_LOG_TYPE_ERROR))
    {
      long long v114 = [v88 singleLineDescription];
      *(_DWORD *)int buf = 138412290;
      *(void *)BOOL v158 = v114;
      long long v115 = "Resource %@ is missing uti";
      goto LABEL_179;
    }
    goto LABEL_180;
  }
  if (!*MEMORY[0x1E4F59AC0])
  {
    id v12 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v13 = [(PLManagedAsset *)self deferredProcessingNeeded];
      if (v13 > 0xB) {
        id v14 = 0;
      }
      else {
        id v14 = off_1E5865890[v13];
      }
      long long v127 = v14;
      long long v128 = [(PLManagedAsset *)self adjustmentTimestamp];
      long long v129 = [v6 recordModificationDate];
      *(_DWORD *)int buf = 138413058;
      *(void *)BOOL v158 = v6;
      *(_WORD *)&v158[8] = 2112;
      *(void *)&v158[10] = v127;
      __int16 v159 = 2112;
      __int16 v160 = v128;
      __int16 v161 = 2112;
      __int16 v162 = v129;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_DEFAULT, "Skipping resources change for record %@ because deferred processing is %@, asset adj time %@, record modification time %@", buf, 0x2Au);
    }
    long long v125 = 0;
    goto LABEL_184;
  }
  long long v125 = 0;
LABEL_185:

  return v125;
}

- (void)rm_createAssetResourcesForCPLResources:(id)a3 inLibrary:(id)a4
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v23 = a4;
  unint64_t v7 = [(PLManagedAsset *)self bestResourceTypeForAdjustedFingerPrint];
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id obj = v6;
  uint64_t v26 = [obj countByEnumeratingWithState:&v27 objects:v37 count:16];
  unsigned int v8 = 0;
  if (v26)
  {
    uint64_t v9 = (unsigned char *)MEMORY[0x1E4F59AC0];
    uint64_t v25 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v26; ++i)
      {
        if (*(void *)v28 != v25) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        uint64_t v12 = [v11 resourceType];
        unsigned int v13 = [(PLManagedAsset *)self assetResourceForCPLType:v12];
        if (v13)
        {
          if (*v9) {
            goto LABEL_15;
          }
          id v14 = __CPLAssetsdOSLogDomain();
          if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_14;
          }
          [v13 singleLineDescription];
          char v15 = v8;
          v17 = unint64_t v16 = v7;
          uint64_t v18 = [(PLManagedAsset *)self cloudAssetGUID];
          *(_DWORD *)int buf = 138412802;
          long long v32 = v11;
          __int16 v33 = 2112;
          int v34 = v17;
          __int16 v35 = 2112;
          id v36 = v18;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_DEFAULT, "Applying properties from CPLResource %@ to local cloudResource %@ for asset %@", buf, 0x20u);

          unint64_t v7 = v16;
          unsigned int v8 = v15;
          uint64_t v9 = (unsigned char *)MEMORY[0x1E4F59AC0];
          goto LABEL_13;
        }
        if (*v9) {
          goto LABEL_15;
        }
        id v14 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v18 = [(PLManagedAsset *)self cloudAssetGUID];
          *(_DWORD *)int buf = 138412546;
          long long v32 = 0;
          __int16 v33 = 2112;
          int v34 = v18;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_DEBUG, "Created new cloudResource %@ for asset %@", buf, 0x16u);
LABEL_13:
        }
LABEL_14:

LABEL_15:
        id v19 = [(PLManagedAsset *)self storedResourceForCPLResource:v11 asset:self adjusted:1];
        if (v12 == v7)
        {
          id v20 = [v11 identity];
          uint64_t v21 = [v20 fingerPrint];

          unsigned int v8 = (void *)v21;
        }
      }
      uint64_t v26 = [obj countByEnumeratingWithState:&v27 objects:v37 count:16];
    }
    while (v26);
  }

  int v22 = [(PLManagedAsset *)self additionalAttributes];
  [v22 setAdjustedStableHash:v8];
}

- (id)rm_cplExpungeableMasterResourceStates
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v2 = [(PLManagedAsset *)self allMasterCPLResources];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    BOOL v5 = 0;
    uint64_t v6 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v2);
        }
        unsigned int v8 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v8 supportsTrashedState])
        {
          uint64_t v9 = [v8 expungeableResourceStateRepresentation];
          if (!v5)
          {
            BOOL v5 = [MEMORY[0x1E4F1CA48] array];
          }
          [v5 addObject:v9];
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v4);
  }
  else
  {
    BOOL v5 = 0;
  }
  uint64_t v10 = (void *)[v5 copy];

  return v10;
}

- (id)rm_cplMasterResourcesFromCloudMaster:(id)a3 addOriginalResourceMode:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  id v52 = a3;
  uint64_t v6 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v7 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  unsigned int v8 = [(PLManagedAsset *)self mainFileURL];
  __int16 v47 = self;
  uint64_t v9 = [(PLManagedAsset *)self master];
  uint64_t v10 = [v9 placeholderState];

  id v44 = v6;
  if (v10 == 1)
  {
    unsigned int v54 = 0;
  }
  else
  {
    uint64_t v11 = [v8 path];
    unsigned int v54 = [v6 fileExistsAtPath:v11];
  }
  uint64_t v43 = v8;
  long long v12 = (unsigned char *)MEMORY[0x1E4F59AC0];
  if (!*MEMORY[0x1E4F59AC0])
  {
    long long v13 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = [v52 allMasterResources];
      long long v15 = (void *)v14;
      unint64_t v16 = @"NO";
      if (v54) {
        unint64_t v16 = @"YES";
      }
      *(_DWORD *)int buf = 138412546;
      uint64_t v62 = v14;
      __int16 v63 = 2112;
      id v64 = v16;
      _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_DEFAULT, "Reusing existing cloud resources %@. canGenerateDerivative: %@", buf, 0x16u);
    }
  }
  uint64_t v49 = [v52 fingerprintScheme];
  long long v57 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  uint64_t v17 = [(PLManagedAsset *)v47 modernResources];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v57 objects:v67 count:16];
  if (v18)
  {
    uint64_t v20 = v18;
    uint64_t v21 = *(void *)v58;
    unsigned int v53 = v54 & ~v4;
    *(void *)&long long v19 = 138412802;
    long long v42 = v19;
    uint64_t v51 = *(void *)v58;
    do
    {
      uint64_t v22 = 0;
      uint64_t v55 = v20;
      do
      {
        if (*(void *)v58 != v21) {
          objc_enumerationMutation(v17);
        }
        id v23 = *(void **)(*((void *)&v57 + 1) + 8 * v22);
        if (objc_msgSend(v23, "isCPLMasterResource", v42))
        {
          if (v4
            && ![v23 cloudLocalState]
            && [v23 isCPLOriginalResource]
            && [v23 isLocallyAvailable])
          {
            if (!*v12)
            {
              uint64_t v24 = __CPLAssetsdOSLogDomain();
              if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)int buf = 138412290;
                uint64_t v62 = (uint64_t)v23;
                _os_log_impl(&dword_19B3C7000, v24, OS_LOG_TYPE_DEFAULT, "addOriginalResourceMode, including file for cplResource: %@", buf, 0xCu);
              }
            }
            uint64_t v25 = [v23 fingerprint];

            if (!v25)
            {
              uint64_t v26 = [v23 fileURL];
              id v56 = 0;
              long long v27 = [v49 fingerPrintForFileAtURL:v26 error:&v56];
              id v50 = v56;

              if (v27)
              {
                [v23 setFingerprint:v27];
              }
              else if (!*v12)
              {
                uint64_t v38 = __CPLAssetsdOSLogDomain();
                if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v46 = [v23 fileURL];
                  [v46 path];
                  uint64_t v39 = log = v38;
                  id v45 = [(PLManagedAsset *)v47 scopedIdentifier];
                  *(_DWORD *)int buf = v42;
                  uint64_t v62 = (uint64_t)v39;
                  __int16 v63 = 2112;
                  id v64 = v45;
                  __int16 v65 = 2112;
                  id v66 = v50;
                  _os_log_impl(&dword_19B3C7000, log, OS_LOG_TYPE_ERROR, "Failed to generate fingerprint for path %@ uuid %@. Error: %@", buf, 0x20u);

                  uint64_t v38 = log;
                }
              }
            }
            uint64_t v28 = 1;
          }
          else
          {
            uint64_t v28 = 0;
          }
          long long v29 = [v23 cplResourceIncludeFile:v28];
          long long v30 = v29;
          if (v29)
          {
            if (v28)
            {
              [v29 setCanGenerateDerivative:v54];
              [v23 setRemoteAvailability:1];
            }
            else
            {
              [v29 setCanGenerateDerivative:v53];
            }
            if (v10 == 1) {
              objc_msgSend(v30, "setSourceResourceType:", (int)objc_msgSend(v23, "cloudSourceType"));
            }
            [v7 addObject:v30];
          }
          else if (!*v12)
          {
            long long v31 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
            {
              [v52 scopedIdentifier];
              long long v32 = v17;
              __int16 v33 = v12;
              BOOL v34 = v4;
              uint64_t v35 = v10;
              id v36 = v7;
              long long v37 = (__CFString *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)int buf = 138412546;
              uint64_t v62 = (uint64_t)v23;
              __int16 v63 = 2112;
              id v64 = v37;
              _os_log_impl(&dword_19B3C7000, v31, OS_LOG_TYPE_ERROR, "Unable to create CPLResource from %@ with scopedIdentifier %@", buf, 0x16u);

              id v7 = v36;
              uint64_t v10 = v35;
              BOOL v4 = v34;
              long long v12 = v33;
              uint64_t v17 = v32;
              uint64_t v21 = v51;
            }
          }
          uint64_t v20 = v55;
        }
        ++v22;
      }
      while (v20 != v22);
      uint64_t v40 = [v17 countByEnumeratingWithState:&v57 objects:v67 count:16];
      uint64_t v20 = v40;
    }
    while (v40);
  }

  return v7;
}

- (id)rm_cplMasterResourceForResourceType:(unint64_t)a3
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  BOOL v5 = -[PLManagedAsset masterResourceForCPLType:](self, "masterResourceForCPLType:");
  uint64_t v6 = v5;
  if (v5)
  {
    id v7 = [v5 cplResourceIncludeFile:1];
  }
  else
  {
    if (!*MEMORY[0x1E4F59AC0])
    {
      unsigned int v8 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = [MEMORY[0x1E4F59940] descriptionForResourceType:a3];
        int v11 = 138412546;
        long long v12 = v9;
        __int16 v13 = 2112;
        uint64_t v14 = self;
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_DEBUG, "Unable to find master resource %@ in asset %@", (uint8_t *)&v11, 0x16u);
      }
    }
    id v7 = 0;
  }

  return v7;
}

- (id)rm_cplResourceForResourceType:(unint64_t)a3
{
  BOOL v5 = -[PLManagedAsset assetResourceForCPLType:](self, "assetResourceForCPLType:");
  uint64_t v6 = v5;
  if (v5) {
    [v5 cplResourceIncludeFile:1];
  }
  else {
  id v7 = [(PLManagedAsset *)self rm_cplMasterResourceForResourceType:a3];
  }

  return v7;
}

- (void)_rm_insertResource:(id)a3 forOtherDuplicatedAssetInMaster:(id)a4 inPhotoLibrary:(id)a5
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v24 = a4;
  id obj = [v24 assets];
  uint64_t v8 = [obj countByEnumeratingWithState:&v25 objects:v35 count:16];
  if (v8)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void *)v26;
    *(void *)&long long v9 = 138412802;
    long long v22 = v9;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v26 != v11) {
          objc_enumerationMutation(obj);
        }
        __int16 v13 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        uint64_t v14 = objc_msgSend(v13, "uuid", v22);
        uint64_t v15 = [(PLManagedAsset *)self uuid];
        char v16 = [v14 isEqualToString:v15];

        if ((v16 & 1) == 0)
        {
          uint64_t v17 = objc_msgSend(v13, "_rm_localResourceURLForResource:", v7);
          uint64_t v18 = [v7 validatedExternalResourceRepresentationUsingFileURL:v17];
          +[PLManagedAsset _rm_copyResourceFileFrom:v7 to:v18 forCloudMaster:v24 andAsset:v13];
          long long v19 = [(PLManagedAsset *)self storedResourceForExternalResource:v18 asset:v13];
          if (!*MEMORY[0x1E4F59AC0])
          {
            uint64_t v20 = __CPLAssetsdOSLogDomain();
            if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v21 = [v13 uuid];
              *(_DWORD *)int buf = v22;
              long long v30 = v19;
              __int16 v31 = 2112;
              id v32 = v24;
              __int16 v33 = 2112;
              BOOL v34 = v21;
              _os_log_impl(&dword_19B3C7000, v20, OS_LOG_TYPE_DEFAULT, "Creating new internalResource %@ for master %@ (asset: %@)", buf, 0x20u);
            }
          }
        }
      }
      uint64_t v10 = [obj countByEnumeratingWithState:&v25 objects:v35 count:16];
    }
    while (v10);
  }
}

- (id)_rm_localResourceURLForResource:(id)a3
{
  uint64_t v3 = [(PLManagedAsset *)self localResourcePathForMasterResource:a3];
  if (v3)
  {
    BOOL v4 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v3 isDirectory:0];
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

- (void)rm_createMasterResourcesForCPLResources:(id)a3 master:(id)a4 inLibrary:(id)a5
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  id v29 = a5;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  id obj = v7;
  uint64_t v9 = [obj countByEnumeratingWithState:&v40 objects:v45 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v41;
    uint64_t v30 = *(void *)v41;
    id v31 = v8;
    do
    {
      uint64_t v12 = 0;
      uint64_t v32 = v10;
      do
      {
        if (*(void *)v41 != v11) {
          objc_enumerationMutation(obj);
        }
        __int16 v13 = *(void **)(*((void *)&v40 + 1) + 8 * v12);
        uint64_t v14 = (void *)MEMORY[0x19F38D3B0]();
        uint64_t v15 = objc_msgSend(v8, "rm_cloudResourcesForResourceType:", objc_msgSend(v13, "resourceType"));
        if ([v15 count])
        {
          long long v38 = 0u;
          long long v39 = 0u;
          long long v36 = 0u;
          long long v37 = 0u;
          id v16 = v15;
          uint64_t v17 = [v16 countByEnumeratingWithState:&v36 objects:v44 count:16];
          if (v17)
          {
            uint64_t v18 = v17;
            uint64_t v19 = *(void *)v37;
            do
            {
              for (uint64_t i = 0; i != v18; ++i)
              {
                if (*(void *)v37 != v19) {
                  objc_enumerationMutation(v16);
                }
                uint64_t v21 = *(void **)(*((void *)&v36 + 1) + 8 * i);
                long long v22 = [v21 asset];

                if (v22)
                {
                  id v23 = [v21 asset];
                  id v24 = [v21 asset];
                  id v25 = (id)[v23 storedResourceForCPLResource:v13 asset:v24 adjusted:0];
                }
              }
              uint64_t v18 = [v16 countByEnumeratingWithState:&v36 objects:v44 count:16];
            }
            while (v18);
            uint64_t v11 = v30;
            id v8 = v31;
            uint64_t v10 = v32;
          }
        }
        else
        {
          id v16 = [(PLManagedAsset *)self storedResourceForCPLResource:v13 asset:self adjusted:0];
          [(PLManagedAsset *)self _rm_insertResource:v16 forOtherDuplicatedAssetInMaster:v8 inPhotoLibrary:v29];
        }

        ++v12;
      }
      while (v12 != v10);
      uint64_t v10 = [obj countByEnumeratingWithState:&v40 objects:v45 count:16];
    }
    while (v10);
  }

  long long v26 = objc_msgSend(v8, "rm_assetUUIDToCloudResources");
  v34[0] = MEMORY[0x1E4F143A8];
  v34[1] = 3221225472;
  void v34[2] = __83__PLManagedAsset_RM_CPL__rm_createMasterResourcesForCPLResources_master_inLibrary___block_invoke;
  v34[3] = &unk_1E5873F68;
  id v35 = v29;
  id v27 = v29;
  [v26 enumerateKeysAndObjectsUsingBlock:v34];
}

void __83__PLManagedAsset_RM_CPL__rm_createMasterResourcesForCPLResources_master_inLibrary___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v5 = [v4 indexOfObjectPassingTest:&__block_literal_global_108430];
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v6 = [v4 objectAtIndexedSubscript:v5];
    [v6 setRemoteAvailability:1];
    uint64_t v7 = [v4 indexOfObjectPassingTest:&__block_literal_global_33_108431];
    if (v7 != 0x7FFFFFFFFFFFFFFFLL)
    {
      id v8 = [v4 objectAtIndexedSubscript:v7];
      uint64_t v9 = [v8 fileURL];
      uint64_t v10 = (unsigned char *)MEMORY[0x1E4F59AC0];
      if (v9)
      {
        uint64_t v11 = [MEMORY[0x1E4F28CB8] defaultManager];
        id v16 = 0;
        [v11 removeItemAtURL:v9 error:&v16];
        id v12 = v16;

        if (!*v10)
        {
          __int16 v13 = __CPLAssetsdOSLogDomain();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)int buf = 138412546;
            uint64_t v18 = v9;
            __int16 v19 = 2112;
            id v20 = v12;
            _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Removing %@ error: %@", buf, 0x16u);
          }
        }
      }
      if (!*v10)
      {
        uint64_t v14 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int buf = 138412290;
          uint64_t v18 = v8;
          _os_log_impl(&dword_19B3C7000, v14, OS_LOG_TYPE_DEFAULT, "Deleting %@", buf, 0xCu);
        }
      }
      uint64_t v15 = [*(id *)(a1 + 32) managedObjectContext];
      [v15 deleteObject:v8];
    }
  }
}

BOOL __83__PLManagedAsset_RM_CPL__rm_createMasterResourcesForCPLResources_master_inLibrary___block_invoke_3(uint64_t a1, void *a2)
{
  return [a2 resourceType] == 8;
}

BOOL __83__PLManagedAsset_RM_CPL__rm_createMasterResourcesForCPLResources_master_inLibrary___block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 resourceType] == 5;
}

- (void)rm_createMasterResourcesIn:(id)a3 inManagedObjectContext:(id)a4
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  [(PLManagedAsset *)self rm_createNewResourcesIn:v6 inManagedObjectContext:a4];
  uint64_t v7 = [(PLManagedAsset *)self masterResourceForCPLType:1];
  id v8 = v7;
  if (v7)
  {
    double v9 = (double)[v7 unorientedWidth];
    double v10 = (double)[v8 unorientedHeight];
    [(PLManagedAsset *)self setOriginalWidth:(uint64_t)v9];
    [(PLManagedAsset *)self setOriginalHeight:(uint64_t)v10];
    if (![(PLManagedAsset *)self hasAdjustments]
      || ![(PLManagedAsset *)self width] && ![(PLManagedAsset *)self height])
    {
      unint64_t v11 = [(PLManagedAsset *)self originalOrientation] - 5;
      if (v11 >= 4) {
        double v12 = v9;
      }
      else {
        double v12 = v10;
      }
      if (v11 >= 4) {
        double v9 = v10;
      }
      if (v12 != (double)[(PLManagedAsset *)self width]) {
        [(PLManagedAsset *)self setWidth:(uint64_t)v12];
      }
      if (v9 != (double)[(PLManagedAsset *)self height]) {
        [(PLManagedAsset *)self setHeight:(uint64_t)v9];
      }
    }
    -[PLManagedAsset setOriginalFilesize:](self, "setOriginalFilesize:", [v8 dataLength]);
  }
  else if (!*MEMORY[0x1E4F59AC0])
  {
    __int16 v13 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      int v14 = 138412546;
      id v15 = v6;
      __int16 v16 = 2112;
      uint64_t v17 = self;
      _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_ERROR, "Unable to find original resource in cloudMaster %@ for asset %@", (uint8_t *)&v14, 0x16u);
    }
  }
}

- (BOOL)rm_createNewResourcesIn:(id)a3 inManagedObjectContext:(id)a4
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = [v5 transientModernResources];
  if (![v6 count])
  {
    id v18 = [(PLManagedAsset *)self uuid];
    id v24 = objc_msgSend(v5, "rm_assetUUIDToCloudResources");
    if (![v24 count])
    {
      if (*MEMORY[0x1E4F59AC0])
      {
        BOOL v23 = 0;
        goto LABEL_43;
      }
      id v27 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)int buf = 138412546;
        id v66 = v5;
        __int16 v67 = 2112;
        uint64_t v68 = self;
        _os_log_impl(&dword_19B3C7000, v27, OS_LOG_TYPE_ERROR, "No resources at all for cloudMaster %@, unable to create master resources for asset %@", buf, 0x16u);
      }
      BOOL v23 = 0;
LABEL_42:

LABEL_43:
      goto LABEL_44;
    }
    id v25 = objc_alloc(MEMORY[0x1E4F1CA80]);
    long long v26 = [v24 allKeys];
    id v27 = [v25 initWithArray:v26];

    [v27 removeObject:v18];
    long long v28 = [v27 anyObject];
    id v29 = [v24 objectForKey:v28];
    uint64_t v30 = [v29 count];
    BOOL v23 = v30 != 0;
    if (v30)
    {
      id v50 = v28;
      uint64_t v51 = v24;
      id v31 = v29;
      id v32 = v5;
      __int16 v33 = [v24 objectForKeyedSubscript:v18];
      unint64_t v34 = [v33 count];
      unint64_t v35 = [v31 count];

      if (v34 < v35)
      {
        long long v55 = 0u;
        long long v56 = 0u;
        long long v53 = 0u;
        long long v54 = 0u;
        uint64_t v49 = v31;
        id obj = v31;
        uint64_t v36 = [obj countByEnumeratingWithState:&v53 objects:v69 count:16];
        if (v36)
        {
          uint64_t v37 = v36;
          BOOL v47 = v23;
          int v48 = v27;
          uint64_t v38 = *(void *)v54;
          do
          {
            for (uint64_t i = 0; i != v37; ++i)
            {
              if (*(void *)v54 != v38) {
                objc_enumerationMutation(obj);
              }
              long long v40 = *(void **)(*((void *)&v53 + 1) + 8 * i);
              long long v41 = [(PLManagedAsset *)self _rm_localResourceURLForResource:v40];
              long long v42 = [v40 validatedExternalResourceRepresentationUsingFileURL:v41];
              +[PLManagedAsset _rm_copyResourceFileFrom:v40 to:v42 forCloudMaster:v32 andAsset:self];
              id v43 = [(PLManagedAsset *)self storedResourceForExternalResource:v42 asset:self];
            }
            uint64_t v37 = [obj countByEnumeratingWithState:&v53 objects:v69 count:16];
          }
          while (v37);
          id v5 = v32;
          id v27 = v48;
          id v24 = v51;
          BOOL v23 = v47;
        }
        else
        {
          id v5 = v32;
          id v24 = v51;
        }
        id v29 = v49;
        long long v28 = v50;
        id v44 = obj;
LABEL_40:

        goto LABEL_41;
      }
      id v5 = v32;
      long long v28 = v50;
      id v24 = v51;
      id v29 = v31;
      if (!*MEMORY[0x1E4F59AC0])
      {
        id v44 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
        {
          id v45 = [(PLManagedAsset *)self uuid];
          *(_DWORD *)int buf = 138412290;
          id v66 = v45;
          _os_log_impl(&dword_19B3C7000, v44, OS_LOG_TYPE_DEFAULT, "Already have master resources for asset %@", buf, 0xCu);
        }
        goto LABEL_40;
      }
    }
    else if (!*MEMORY[0x1E4F59AC0])
    {
      id v44 = __CPLAssetsdOSLogDomain();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)int buf = 138412546;
        id v66 = v5;
        __int16 v67 = 2112;
        uint64_t v68 = self;
        _os_log_impl(&dword_19B3C7000, v44, OS_LOG_TYPE_ERROR, "No resources on other assets for cloudMaster %@, unable to create master resources for asset %@", buf, 0x16u);
      }
      goto LABEL_40;
    }
LABEL_41:

    goto LABEL_42;
  }
  long long v63 = 0u;
  long long v64 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  id v7 = v6;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v61 objects:v71 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v62;
    do
    {
      for (uint64_t j = 0; j != v9; ++j)
      {
        if (*(void *)v62 != v10) {
          objc_enumerationMutation(v7);
        }
        double v12 = *(void **)(*((void *)&v61 + 1) + 8 * j);
        __int16 v13 = [(PLManagedAsset *)self _rm_localResourceURLForResource:v12];
        int v14 = [v12 validatedExternalResourceRepresentationUsingFileURL:v13];
        id v15 = [(PLManagedAsset *)self storedResourceForExternalResource:v14 asset:self];
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v61 objects:v71 count:16];
    }
    while (v9);
  }

  __int16 v16 = [v5 transientModernResources];
  uint64_t v17 = (void *)[v16 copy];

  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  id v18 = v17;
  uint64_t v19 = [v18 countByEnumeratingWithState:&v57 objects:v70 count:16];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)v58;
    do
    {
      for (uint64_t k = 0; k != v20; ++k)
      {
        if (*(void *)v58 != v21) {
          objc_enumerationMutation(v18);
        }
        [*(id *)(*((void *)&v57 + 1) + 8 * k) deleteResource];
      }
      uint64_t v20 = [v18 countByEnumeratingWithState:&v57 objects:v70 count:16];
    }
    while (v20);
  }
  BOOL v23 = 1;
  id v6 = v18;
LABEL_44:

  return v23;
}

- (id)storedResourceForExternalResource:(id)a3 asset:(id)a4
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  uint64_t v7 = [v6 assetID];
  uint64_t v8 = [(id)v7 libraryID];
  uint64_t v9 = +[PLResourceDataStoreManager storeForExternalResource:v5 inLibraryWithID:v8];

  id v14 = 0;
  id v15 = 0;
  LOBYTE(v7) = [v9 storeExternalResource:v5 forAsset:v6 options:0 error:&v15 resultingResource:&v14];

  id v10 = v15;
  id v11 = v14;
  if ((v7 & 1) == 0 && !*MEMORY[0x1E4F59AC0])
  {
    double v12 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 138412546;
      id v17 = v5;
      __int16 v18 = 2112;
      id v19 = v10;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_ERROR, "Failed to store external resource %@, reason: %@", buf, 0x16u);
    }
  }
  return v11;
}

- (id)storedResourceForCPLResource:(id)a3 asset:(id)a4 adjusted:(BOOL)a5
{
  BOOL v5 = a5;
  id v8 = a4;
  uint64_t v9 = +[PLResourceInstaller generateExternalResourceFromCPLResource:a3 asset:v8 fromAdjustedSet:v5];
  id v10 = [(PLManagedAsset *)self storedResourceForExternalResource:v9 asset:v8];

  return v10;
}

- (BOOL)hasAdjustedCPLThumbResource
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = [(PLManagedAsset *)self modernResources];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v2);
        }
        id v6 = *(void **)(*((void *)&v8 + 1) + 8 * i);
        if ([v6 cplType] == 5 && (objc_msgSend(v6, "isAdjustedResource") & 1) != 0)
        {
          LOBYTE(v3) = 1;
          goto LABEL_12;
        }
      }
      uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_12:

  return v3;
}

- (id)allCPLResourcesForPruning
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v4 = [(PLManagedAsset *)self modernResources];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        long long v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ((([v9 isCPLAssetResource] & 1) != 0 || objc_msgSend(v9, "isCPLMasterResource"))
          && (([v9 isLocallyAvailable] & 1) != 0 || objc_msgSend(v9, "cplType") == 5))
        {
          [v3 addObject:v9];
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }

  long long v10 = [v3 allObjects];

  return v10;
}

- (id)allMasterCPLResources
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v4 = [(PLManagedAsset *)self modernResources];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        long long v9 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if ([v9 isCPLMasterResource]) {
          [v3 addObject:v9];
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }

  return v3;
}

- (id)allAssetCPLResources
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v4 = [(PLManagedAsset *)self modernResources];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        long long v9 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if ([v9 isCPLAssetResource]) {
          [v3 addObject:v9];
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }

  return v3;
}

- (id)assetResourceForCPLType:(unint64_t)a3
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v4 = [(PLManagedAsset *)self modernResources];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        long long v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v9 cplType] == a3 && objc_msgSend(v9, "isCPLAssetResource"))
        {
          id v10 = v9;
          goto LABEL_12;
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  id v10 = 0;
LABEL_12:

  return v10;
}

- (id)masterResourceForCPLType:(unint64_t)a3
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v4 = [(PLManagedAsset *)self modernResources];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        long long v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v9 cplType] == a3 && objc_msgSend(v9, "isCPLMasterResource"))
        {
          id v10 = v9;
          goto LABEL_12;
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  id v10 = 0;
LABEL_12:

  return v10;
}

- (id)resourceForCPLType:(unint64_t)a3 version:(unsigned int)a4
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v6 = [(PLManagedAsset *)self modernResources];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v15;
    while (2)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        long long v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        if ([v11 cplType] == a3 && objc_msgSend(v11, "version") == a4)
        {
          id v12 = v11;
          goto LABEL_12;
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }
  id v12 = 0;
LABEL_12:

  return v12;
}

+ (void)rm_cplResourceWasUploaded:(id)a3 photoLibrary:(id)a4
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  id v7 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v8 = [v5 itemScopedIdentifier];
  uint64_t v9 = +[PLManagedAsset assetWithScopedIdentifier:v8 inLibrary:v6 prefetchResources:1];
  uint64_t v10 = [v5 resourceType];
  if (v9)
  {
    long long v11 = [v9 assetResourceForCPLType:v10];
    if (v11) {
      [v7 addObject:v11];
    }
  }
  else
  {
    id v12 = +[PLCloudMaster cloudMasterWithScopedIdentifier:v8 prefetchResources:1 inLibrary:v6];
    long long v11 = v12;
    if (v12)
    {
      long long v13 = objc_msgSend(v12, "rm_cloudResourcesForResourceType:", v10);
      [v7 addObjectsFromArray:v13];
    }
  }

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v14 = v7;
  uint64_t v15 = [v14 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        if (*(void *)v21 != v17) {
          objc_enumerationMutation(v14);
        }
        uint64_t v19 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        if (objc_msgSend(v19, "cloudLocalState", (void)v20) != 3) {
          [v19 setCloudLocalState:3];
        }
        if ([v19 remoteAvailability] != 1) {
          [v19 setRemoteAvailability:1];
        }
      }
      uint64_t v16 = [v14 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v16);
  }
}

+ (void)_rm_copyResourceFileFrom:(id)a3 to:(id)a4 forCloudMaster:(id)a5 andAsset:(id)a6
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v9 = a4;
  id v10 = a5;
  id v11 = a6;
  id v12 = (void *)MEMORY[0x1E4F28CB8];
  id v13 = a3;
  id v14 = [v12 defaultManager];
  uint64_t v15 = [v13 fileURL];

  uint64_t v16 = [v15 path];

  uint64_t v17 = [v9 fileURL];
  __int16 v18 = [v17 path];

  if (v16
    && v18
    && [v14 fileExistsAtPath:v16]
    && ([v14 fileExistsAtPath:v18] & 1) == 0)
  {
    uint64_t v19 = [v11 pathManager];
    int v35 = [v19 isUBF];
    if (v35)
    {
      long long v20 = [v11 assetID];
      uint64_t v38 = objc_msgSend(v10, "originalFilenameForResourceType:filePath:", objc_msgSend(v9, "cplTypeWithAssetID:", v20), v18);

      id v33 = objc_alloc(MEMORY[0x1E4F8B978]);
      long long v21 = [v11 uuid];
      unsigned int v31 = [v11 bundleScope];
      id v32 = [v9 uniformTypeIdentifier];
      long long v22 = [v32 identifier];
      long long v23 = objc_msgSend(v33, "initWithAssetUuid:bundleScope:uti:resourceVersion:resourceType:recipeID:originalFilename:", v21, v31, v22, 0, objc_msgSend(v9, "resourceType"), objc_msgSend(v9, "recipeID"), v38);
    }
    else
    {
      long long v23 = 0;
    }
    id v24 = [v18 stringByDeletingLastPathComponent];
    id v41 = 0;
    int v25 = [v14 createDirectoryIfNeededAtPath:v24 error:&v41];
    id v39 = v41;
    if (v25)
    {
      unint64_t v34 = v23;
      id v40 = 0;
      int v26 = [v14 copyItemAtPath:v16 toPath:v18 error:&v40];
      id v27 = v40;
      if (v26)
      {
        uint64_t v37 = v19;
        long long v28 = [v11 assetID];
        uint64_t v29 = [v9 cplTypeWithAssetID:v28];

        if (v29 == 1) {
          [v11 persistMetadataToFilesystem];
        }
        uint64_t v19 = v37;
        if (v35)
        {
          uint64_t v36 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v18 isDirectory:0];
          long long v23 = v34;
          [v37 setExtendedAttributesWithIdentifier:v34 andURL:v36];

          goto LABEL_24;
        }
        if (PLResourceIsOriginalNonDerivativeWithType(v9)) {
          [v9 persistResourceTypeToFileURL];
        }
      }
      else if (!*MEMORY[0x1E4F59AC0])
      {
        uint64_t v30 = __CPLAssetsdOSLogDomain();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 138412802;
          id v43 = v16;
          __int16 v44 = 2112;
          id v45 = v18;
          __int16 v46 = 2112;
          BOOL v47 = v27;
          _os_log_impl(&dword_19B3C7000, v30, OS_LOG_TYPE_ERROR, "Failed to copy master resource file from %@ to duplicated asset %@. Error: %@", buf, 0x20u);
        }
      }
      long long v23 = v34;
      goto LABEL_24;
    }
    if (*MEMORY[0x1E4F59AC0])
    {
LABEL_25:

      goto LABEL_26;
    }
    id v27 = __CPLAssetsdOSLogDomain();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 138412546;
      id v43 = v24;
      __int16 v44 = 2112;
      id v45 = v39;
      _os_log_impl(&dword_19B3C7000, v27, OS_LOG_TYPE_ERROR, "Failed to create directory for resource file at %@. Error: %@", buf, 0x16u);
    }
LABEL_24:

    goto LABEL_25;
  }
LABEL_26:
}

- (void)reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker
{
  v46[1] = *MEMORY[0x1E4F143B8];
  if (([(PLManagedAsset *)self isDeleted] & 1) == 0
    && ![(PLManagedAsset *)self isCloudSharedAsset])
  {
    id v3 = +[PLResourceRecipe recipeFromID:65944];
    uint64_t v4 = +[PLResourceGenerator expectedLocalResourceRecipesForAsset:self versions:&unk_1EEBF24F8];
    id v5 = [MEMORY[0x1E4F1CAD0] setWithObject:&unk_1EEBF0C38];
    id v6 = +[PLResourceGenerator locallyUnavailableRecipesFromRecipes:v4 versions:v5 asset:self];

    int v7 = [v6 containsObject:v3];
    uint64_t v8 = [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_234];

    if (v7 && !v8)
    {
      id v9 = [(PLManagedAsset *)self mainFileURL];
      id v10 = [v9 path];
      int64_t v11 = [(PLManagedAsset *)self width];
      int64_t v12 = [(PLManagedAsset *)self height];
      LOWORD(v40) = [(PLManagedAsset *)self kind];
      id v13 = +[PLResourceInstaller generateValidatedExternalImageResourceOfType:0 forFilePath:v10 requireFileToBePresent:0 version:0 basedOnFullSizeWidth:v11 andHeight:v12 recipe:v3 assetKind:v40 error:0];

      v46[0] = v13;
      id v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v46 count:1];
      uint64_t v15 = +[PLResourceDataStoreManager storeExternalResources:v14 forAsset:self forLifecycleEvent:2 error:0];

      uint64_t v16 = [v15 anyObject];
      uint64_t v17 = v16;
      if (v16)
      {
        [v16 setLocalAvailabilityTarget:1];
        __int16 v18 = PLImageManagerGetLog();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v19 = [(PLManagedAsset *)self uuid];
          *(_DWORD *)int buf = 138543618;
          id v43 = v3;
          __int16 v44 = 2114;
          id v45 = v19;
          _os_log_impl(&dword_19B3C7000, v18, OS_LOG_TYPE_DEFAULT, "[RM]: Scheduling generation of recipe: %{public}@ for asset uuid: %{public}@...", buf, 0x16u);
        }
      }
      long long v20 = [(PLManagedObject *)self photoLibrary];
      long long v21 = [v20 libraryServicesManager];
      long long v22 = [v21 backgroundJobService];
      [v22 signalBackgroundProcessingNeededOnLibrary:v20];
    }
    long long v23 = +[PLResourceRecipe recipeFromID:131280];
    id v24 = +[PLResourceGenerator expectedLocalResourceRecipesForAsset:self versions:&unk_1EEBF2510];
    int v25 = [MEMORY[0x1E4F1CAD0] setWithObject:&unk_1EEBF0C38];
    int v26 = +[PLResourceGenerator locallyUnavailableRecipesFromRecipes:v24 versions:v25 asset:self];

    int v27 = [v26 containsObject:v23];
    uint64_t v28 = [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_240];
    uint64_t v29 = (void *)v28;
    if (v27 && !v28)
    {
      uint64_t v30 = objc_alloc_init(PLValidatedExternalResource);
      [(PLValidatedExternalResource *)v30 setResourceType:3];
      [(PLValidatedExternalResource *)v30 setVersion:0];
      -[PLValidatedExternalResource setRecipeID:](v30, "setRecipeID:", [v23 recipeID]);
      id v41 = v30;
      unsigned int v31 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v41 count:1];
      id v32 = +[PLResourceDataStoreManager storeExternalResources:v31 forAsset:self forLifecycleEvent:2 error:0];

      id v33 = [v32 anyObject];
      unint64_t v34 = v33;
      if (v33)
      {
        [v33 setLocalAvailabilityTarget:1];
        int v35 = PLImageManagerGetLog();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v36 = [(PLManagedAsset *)self uuid];
          *(_DWORD *)int buf = 138543618;
          id v43 = v23;
          __int16 v44 = 2114;
          id v45 = v36;
          _os_log_impl(&dword_19B3C7000, v35, OS_LOG_TYPE_DEFAULT, "[RM]: Scheduling generation of recipe: %{public}@ for asset uuid: %{public}@...", buf, 0x16u);
        }
      }
      uint64_t v37 = [(PLManagedObject *)self photoLibrary];
      uint64_t v38 = [v37 libraryServicesManager];
      id v39 = [v38 backgroundJobService];
      [v39 signalBackgroundProcessingNeededOnLibrary:v37];
    }
  }
}

BOOL __98__PLManagedAsset_RM__reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker__block_invoke_238(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 recipeID]) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = [v2 resourceType] == 3;
  }

  return v3;
}

BOOL __98__PLManagedAsset_RM__reconsiderLocalAvailabilityTargetsForResourceGeneratableByAvailabilityWorker__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 recipeID]) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = [v2 resourceType] == 0;
  }

  return v3;
}

- (BOOL)repairAssetScopeValidationErrors:(id)a3
{
  uint64_t v71 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = +[PLResourceModelValidationError allPossibleErrorCodes];
  if (![v4 count])
  {
    id v6 = v5;

    id v4 = v6;
  }
  int v7 = (void *)[v4 mutableCopy];
  if ([v7 count])
  {
    char v53 = 0;
    uint64_t v49 = v5;
    id v50 = v4;
    uint64_t v48 = v7;
    while (1)
    {
      uint64_t v8 = [v7 anyObject];
      unint64_t v9 = [v8 integerValue];
      if (v9 <= 0xB) {
        break;
      }
LABEL_18:
      objc_msgSend(v7, "removeObject:", v8, v47);

      if (![v7 count]) {
        goto LABEL_66;
      }
    }
    if (((1 << v9) & 0xC14) != 0)
    {
      id v10 = v8;
      uint64_t v11 = [(PLManagedAsset *)self imageRequestHints];
      [(PLManagedAsset *)self recalculateImageRequestHints];
      int64_t v12 = [(PLManagedAsset *)self imageRequestHints];
      id v52 = (void *)v11;
      LOBYTE(v11) = [v12 isEqualToData:v11];

      if (v11)
      {
        if ([(PLManagedAsset *)self hasMasterThumb]
          || [(PLManagedAsset *)self thumbnailIndex] == -3)
        {
          id v13 = PLImageManagerGetLog();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            id v14 = [(PLManagedAsset *)self objectID];
            int v15 = [(PLManagedAsset *)self thumbnailIndex];
            *(_DWORD *)int buf = 138543874;
            uint64_t v64 = (uint64_t)v14;
            __int16 v65 = 2114;
            id v66 = v4;
            __int16 v67 = 1024;
            LODWORD(v68) = v15;
            _os_log_impl(&dword_19B3C7000, v13, OS_LOG_TYPE_DEFAULT, "[RM]: Repair: Attempting to correct broken thumbnailIndex by regenerating thumbnails for objectID: %{public}@ for error codes: %{public}@, current thumbnailIndex: %d...", buf, 0x1Cu);
          }
          [(PLManagedAsset *)self generateAndUpdateThumbnailsWithPreviewImage:0 thumbnailImage:0 fromImageSource:0 imageData:0 forceSRGBConversion:0];
          char v53 = [(PLManagedAsset *)self hasChanges];
        }
      }
      else
      {
        uint64_t v16 = PLImageManagerGetLog();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v17 = [(PLManagedAsset *)self objectID];
          int v18 = [(PLManagedAsset *)self thumbnailIndex];
          *(_DWORD *)int buf = 138543874;
          uint64_t v64 = (uint64_t)v17;
          __int16 v65 = 2114;
          id v66 = v4;
          __int16 v67 = 1024;
          LODWORD(v68) = v18;
          _os_log_impl(&dword_19B3C7000, v16, OS_LOG_TYPE_DEFAULT, "[RM]: Repair: Storing corrections to imageRequestHints for objectID: %{public}@ for error codes: %{public}@,  thumbnailIndex: %d...", buf, 0x1Cu);
        }
        char v53 = 1;
      }
      [v7 removeObject:&unk_1EEBF0BF0];
      [v7 removeObject:&unk_1EEBF0C08];
      [v7 removeObject:&unk_1EEBF0C20];
      uint64_t v8 = v10;
      goto LABEL_17;
    }
    if (v9 != 8) {
      goto LABEL_18;
    }
    id v52 = +[PLResourceGenerator expectedLocalResourceRecipesForAsset:self versions:&unk_1EEBF24E0];
    if ([v52 count])
    {
      uint64_t v19 = v8;
      id v20 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
      long long v59 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      long long v62 = 0u;
      long long v21 = [(PLManagedAsset *)self modernResources];
      uint64_t v22 = [v21 countByEnumeratingWithState:&v59 objects:v70 count:16];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = *(void *)v60;
        do
        {
          for (uint64_t i = 0; i != v23; ++i)
          {
            if (*(void *)v60 != v24) {
              objc_enumerationMutation(v21);
            }
            int v26 = +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", [*(id *)(*((void *)&v59 + 1) + 8 * i) recipeID]);
            if (v26) {
              [v20 addObject:v26];
            }
          }
          uint64_t v23 = [v21 countByEnumeratingWithState:&v59 objects:v70 count:16];
        }
        while (v23);
      }

      int v27 = (void *)MEMORY[0x1E4F1CA80];
      uint64_t v28 = [v52 set];
      uint64_t v29 = [v27 setWithSet:v28];

      [v29 minusSet:v20];
      id v5 = v49;
      id v4 = v50;
      int v7 = v48;
      uint64_t v8 = v19;
    }
    else
    {
      uint64_t v29 = 0;
    }
    uint64_t v51 = v29;
    if (![v29 count])
    {
LABEL_64:

LABEL_17:
      goto LABEL_18;
    }
    BOOL v47 = v8;
    long long v57 = 0u;
    long long v58 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    id v30 = v29;
    uint64_t v31 = [v30 countByEnumeratingWithState:&v55 objects:v69 count:16];
    if (!v31) {
      goto LABEL_63;
    }
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)v56;
LABEL_36:
    uint64_t v34 = 0;
    while (1)
    {
      if (*(void *)v56 != v33) {
        objc_enumerationMutation(v30);
      }
      int v35 = *(void **)(*((void *)&v55 + 1) + 8 * v34);
      int v36 = objc_msgSend(v35, "recipeID", v47);
      if (v36 == 131272) {
        break;
      }
      if (v36 == 0x20000)
      {
        uint64_t v37 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
        uint64_t v38 = 1;
        if (!v37) {
          goto LABEL_55;
        }
        goto LABEL_47;
      }
      if (v36 != 65938)
      {
        __int16 v44 = PLImageManagerGetLog();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 134218242;
          uint64_t v64 = 8;
          __int16 v65 = 2114;
          id v66 = v35;
          _os_log_impl(&dword_19B3C7000, v44, OS_LOG_TYPE_ERROR, "[RM]: Repair: %ld failed unsupported recipe: %{public}@", buf, 0x16u);
        }

        uint64_t v37 = 0;
        goto LABEL_55;
      }
      uint64_t v37 = [(PLManagedAsset *)self pathForFullsizeRenderImageFile];
      uint64_t v38 = 0;
      if (v37) {
        goto LABEL_47;
      }
LABEL_55:
      id v43 = PLImageManagerGetLog();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 134218242;
        uint64_t v64 = 8;
        __int16 v65 = 2114;
        id v66 = v35;
        _os_log_impl(&dword_19B3C7000, v43, OS_LOG_TYPE_DEFAULT, "[RM]: Repair: %ld failed file not found for recipeID: %{public}@", buf, 0x16u);
      }
LABEL_61:

      if (v32 == ++v34)
      {
        uint64_t v32 = [v30 countByEnumeratingWithState:&v55 objects:v69 count:16];
        if (!v32)
        {
LABEL_63:

          id v5 = v49;
          id v4 = v50;
          uint64_t v8 = v47;
          int v7 = v48;
          goto LABEL_64;
        }
        goto LABEL_36;
      }
    }
    uint64_t v37 = [(PLManagedAsset *)self pathForFullsizeRenderVideoFile];
    uint64_t v38 = 3;
    if (!v37) {
      goto LABEL_55;
    }
LABEL_47:
    id v39 = [MEMORY[0x1E4F28CB8] defaultManager];
    int v40 = [v39 fileExistsAtPath:v37];

    if (v40)
    {
      id v41 = PLImageManagerGetLog();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)int buf = 134218242;
        uint64_t v64 = 8;
        __int16 v65 = 2114;
        id v66 = v35;
        _os_log_impl(&dword_19B3C7000, v41, OS_LOG_TYPE_DEFAULT, "[RM]: Repair: %ld found file on disk for missing recipeID: %{public}@, attempting install", buf, 0x16u);
      }

      id v54 = 0;
      long long v42 = +[PLResourceInstaller onDemand_installExistingAdjustedResourceAtFilePath:v37 withType:v38 recipe:v35 forAsset:self error:&v54];
      id v43 = v54;
      if (v42)
      {
        char v53 = [(PLManagedAsset *)self hasChanges];
      }
      else
      {
        id v45 = PLImageManagerGetLog();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 134218498;
          uint64_t v64 = 8;
          __int16 v65 = 2114;
          id v66 = v35;
          __int16 v67 = 2112;
          uint64_t v68 = v43;
          _os_log_impl(&dword_19B3C7000, v45, OS_LOG_TYPE_ERROR, "[RM]: Repair: %ld failed to install resource with recipeID: %{public}@, error: %@", buf, 0x20u);
        }
      }
      goto LABEL_61;
    }
    goto LABEL_55;
  }
  char v53 = 0;
LABEL_66:

  return v53 & 1;
}

- (BOOL)_installExistingPurgeableResourceAtPath:(id)a3 dstPath:(id)a4 error:(id *)a5 installResourceHandler:(id)a6
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = (void (**)(void))a6;
  int64_t v12 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v48 = 0;
  char v13 = [v12 removeItemAtPath:v10 error:&v48];
  id v14 = v48;

  if ((v13 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
  {
    int v15 = PLBackendGetLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 138412546;
      id v50 = v10;
      __int16 v51 = 2112;
      id v52 = v14;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "Nonfatal error removing existing resource at path: '%@', error: %@", buf, 0x16u);
    }
  }
  uint64_t v16 = v11;
  uint64_t v17 = (void *)MEMORY[0x1E4F8B908];
  id v44 = v9;
  int v18 = objc_msgSend(MEMORY[0x1E4F1CB10], "fileURLWithPath:", v9, a5);
  uint64_t v19 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v10];
  id v20 = [(PLManagedObject *)self pathManager];
  long long v21 = [v20 capabilities];
  id v47 = 0;
  LODWORD(v17) = [v17 ingestItemAtURL:v18 toURL:v19 type:4 options:14 capabilities:v21 error:&v47];
  id v22 = v47;

  if (v17)
  {
    uint64_t v46 = 0;
    uint64_t v23 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v10];
    BOOL v24 = +[PLCacheDeleteSupport markPurgeableForFileAtURL:v23 withUrgency:0 outInode:&v46];

    if (!v24)
    {
      uint64_t v34 = PLBackendGetLog();
      int v25 = v16;
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)int buf = 138412290;
        id v50 = v10;
        _os_log_impl(&dword_19B3C7000, v34, OS_LOG_TYPE_ERROR, "Error marking purgeable at path: '%@'", buf, 0xCu);
      }

      int v35 = [MEMORY[0x1E4F28CB8] defaultManager];
      id v45 = 0;
      char v36 = [v35 removeItemAtPath:v10 error:&v45];
      id v37 = v45;

      uint64_t v38 = v43;
      uint64_t v31 = v44;
      if ((v36 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
      {
        id v39 = PLBackendGetLog();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int buf = 138412290;
          id v50 = v10;
          _os_log_impl(&dword_19B3C7000, v39, OS_LOG_TYPE_ERROR, "Error removing file at path: '%@'", buf, 0xCu);
        }
      }
      id v33 = [MEMORY[0x1E4F28C58] errorWithDomain:*MEMORY[0x1E4F8C500] code:47019 userInfo:0];

      goto LABEL_23;
    }
    int v25 = v16;
    int v26 = v16[2](v16);
    if ([v26 isSuccess])
    {
      uint64_t v27 = v46;
      uint64_t v28 = [v26 result];
      [v28 setFileID:v27];

      uint64_t v29 = 0;
      BOOL v30 = 1;
      uint64_t v31 = v44;
      goto LABEL_26;
    }
    id v33 = [v26 error];

    uint64_t v31 = v44;
  }
  else
  {
    uint64_t v32 = PLBackendGetLog();
    uint64_t v31 = v44;
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 138412802;
      id v50 = v44;
      __int16 v51 = 2112;
      id v52 = v10;
      __int16 v53 = 2112;
      id v54 = v22;
    }

    id v33 = v22;
    int v25 = v16;
  }
  uint64_t v38 = v43;
LABEL_23:
  id v40 = v33;
  uint64_t v29 = v40;
  if (v38) {
    *uint64_t v38 = v40;
  }

  BOOL v30 = 0;
LABEL_26:

  return v30;
}

- (BOOL)installExistingGenerativePlaygroundFaceResourcesFileAtPath:(id)a3 error:(id *)a4
{
  id v6 = a3;
  int v7 = [(PLManagedAsset *)self pathForGenerativePlaygroundFaceResourcesFile];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __87__PLManagedAsset_RM__installExistingGenerativePlaygroundFaceResourcesFileAtPath_error___block_invoke;
  void v10[3] = &unk_1E5875598;
  id v11 = v7;
  int64_t v12 = self;
  id v8 = v7;
  LOBYTE(a4) = [(PLManagedAsset *)self _installExistingPurgeableResourceAtPath:v6 dstPath:v8 error:a4 installResourceHandler:v10];

  return (char)a4;
}

id __87__PLManagedAsset_RM__installExistingGenerativePlaygroundFaceResourcesFileAtPath_error___block_invoke(uint64_t a1)
{
  id v2 = +[PLResourceRecipe recipeFromID:327693];
  BOOL v3 = +[PLResourceInstaller onDemand_installExistingComputeResourceAtFilePath:*(void *)(a1 + 32) recipe:v2 forAsset:*(void *)(a1 + 40)];

  return v3;
}

- (BOOL)installExistingAlchemistImageAtPath:(id)a3 error:(id *)a4
{
  id v6 = a3;
  int v7 = [(PLManagedAsset *)self pathForAlchemistImage];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __64__PLManagedAsset_RM__installExistingAlchemistImageAtPath_error___block_invoke;
  void v10[3] = &unk_1E5875598;
  id v11 = v7;
  int64_t v12 = self;
  id v8 = v7;
  LOBYTE(a4) = [(PLManagedAsset *)self _installExistingPurgeableResourceAtPath:v6 dstPath:v8 error:a4 installResourceHandler:v10];

  return (char)a4;
}

id __64__PLManagedAsset_RM__installExistingAlchemistImageAtPath_error___block_invoke(uint64_t a1)
{
  id v2 = +[PLResourceRecipe recipeFromID:66137];
  BOOL v3 = +[PLResourceInstaller onDemand_installExistingAdjustmentSuggestionResourceAtFilePath:*(void *)(a1 + 32) recipe:v2 forAsset:*(void *)(a1 + 40)];

  return v3;
}

- (BOOL)installExistingWallpaperComputeResourcesFileAtPath:(id)a3 error:(id *)a4
{
  id v6 = a3;
  int v7 = [(PLManagedAsset *)self pathForWallpaperComputeResourcesFile];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __79__PLManagedAsset_RM__installExistingWallpaperComputeResourcesFileAtPath_error___block_invoke;
  void v10[3] = &unk_1E5875598;
  id v11 = v7;
  int64_t v12 = self;
  id v8 = v7;
  LOBYTE(a4) = [(PLManagedAsset *)self _installExistingPurgeableResourceAtPath:v6 dstPath:v8 error:a4 installResourceHandler:v10];

  return (char)a4;
}

id __79__PLManagedAsset_RM__installExistingWallpaperComputeResourcesFileAtPath_error___block_invoke(uint64_t a1)
{
  id v2 = +[PLResourceRecipe recipeFromID:327687];
  BOOL v3 = +[PLResourceInstaller onDemand_installExistingComputeResourceAtFilePath:*(void *)(a1 + 32) recipe:v2 forAsset:*(void *)(a1 + 40)];

  return v3;
}

- (id)mediaMetadataForResourceVersion:(unsigned int)a3 mediaMetadataType:(id *)a4
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (a3 == 2)
  {
    id v11 = [(PLManagedAsset *)self additionalAttributes];
    int64_t v12 = [v11 mediaMetadata];
    id v9 = [v12 data];

    id v10 = [(PLManagedAsset *)self additionalAttributes];
  }
  else
  {
    if (a3)
    {
      int v15 = PLImageManagerGetLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        int v17 = 134217984;
        uint64_t v18 = a3;
        _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "[RM]: Invalid resource version for media metadata: %ld", (uint8_t *)&v17, 0xCu);
      }
      id v9 = 0;
      goto LABEL_12;
    }
    int v7 = [(PLManagedAsset *)self master];
    id v8 = [v7 mediaMetadata];
    id v9 = [v8 data];

    id v10 = [(PLManagedAsset *)self master];
  }
  char v13 = v10;
  id v14 = [v10 mediaMetadataType];

  if (v9 && !v14)
  {
    int v15 = PLImageManagerGetLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      int v17 = 134217984;
      uint64_t v18 = a3;
      _os_log_impl(&dword_19B3C7000, v15, OS_LOG_TYPE_ERROR, "[RM]: Media metadata with version: %ld has no type string", (uint8_t *)&v17, 0xCu);
    }
LABEL_12:

    id v14 = 0;
  }
  if (a4) {
    *a4 = v14;
  }

  return v9;
}

- (BOOL)isRAWPlusJPEGWithRAWOnTop
{
  if (![(PLManagedAsset *)self isRAWPlusJPEG]) {
    return 0;
  }
  BOOL v3 = [(PLManagedAsset *)self additionalAttributes];
  id v4 = [v3 originalResourceChoice];
  BOOL v5 = [v4 unsignedIntegerValue] == 1;

  return v5;
}

- (BOOL)isRAWPlusJPEG
{
  BOOL v3 = [(PLManagedAsset *)self primaryStoreOriginalResource];
  id v4 = [v3 uniformTypeIdentifier];

  if ([v4 isPrimaryImageFormat])
  {
    BOOL v5 = [(PLManagedAsset *)self _anyOriginalNonDerivativeAlternateImageResource];
    id v6 = [v5 uniformTypeIdentifier];
    char v7 = [v6 conformsToRawImage];
  }
  else
  {
    char v7 = 0;
  }

  return v7;
}

- (BOOL)isRAWOnly
{
  id v2 = [(PLManagedAsset *)self primaryStoreOriginalResource];
  BOOL v3 = [v2 uniformTypeIdentifier];
  char v4 = [v3 conformsToRawImage];

  return v4;
}

- (BOOL)pruneLocalVideoKeyFrameImage
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v3 = [(PLManagedAsset *)self isVideo];
  if (v3)
  {
    char v4 = [MEMORY[0x1E4F28CB8] defaultManager];
    BOOL v5 = [(PLManagedAsset *)self pathForLocalVideoKeyFrame];
    id v12 = 0;
    char v6 = [v4 removeItemAtPath:v5 error:&v12];
    id v7 = v12;

    if ((v6 & 1) == 0 && (PLIsErrorFileNotFound() & 1) == 0)
    {
      id v8 = PLBackendGetLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)int buf = 138412290;
        id v14 = v7;
        _os_log_impl(&dword_19B3C7000, v8, OS_LOG_TYPE_ERROR, "Error removing local video key frame: %@", buf, 0xCu);
      }
    }
    id v9 = [(PLManagedAsset *)self localVideoKeyFrameResource];
    int v10 = [v9 isLocallyAvailable];
    if (v10) {
      [v9 markAsNotLocallyAvailable];
    }

    LOBYTE(v3) = v6 | v10;
  }
  return v3;
}

- (BOOL)resetVideoKeyFrameTimeAndDeleteKeyFrameResource
{
  BOOL v3 = [(PLManagedAsset *)self resetVideoKeyFrameTime];
  BOOL v4 = [(PLManagedAsset *)self pruneLocalVideoKeyFrameImage];
  BOOL v5 = [(PLManagedAsset *)self localVideoKeyFrameResource];

  if (!v5) {
    return v4 || v3;
  }
  char v6 = [(PLManagedAsset *)self localVideoKeyFrameResource];
  [v6 deleteResource];

  return 1;
}

- (void)deleteResourceForSidecarRepresentation:(id)a3
{
  if (a3)
  {
    id v3 = [a3 resource];
    [v3 deleteResource];
  }
}

- (void)deleteResourcesWithRecipeID:(unsigned int)a3 andVersion:(unsigned int)a4
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  BOOL v4 = [(PLManagedAsset *)self persistedResourcesWithRecipeID:*(void *)&a3 andVersion:*(void *)&a4];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        [*(id *)(*((void *)&v9 + 1) + 8 * v8++) deleteResource];
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v6);
  }
}

- (void)deleteAdjustedResources
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v2 = [(PLManagedAsset *)self persistedAdjustedResources];
  if ([v2 count])
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v15 = v2;
    id v3 = v2;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v17 objects:v27 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v18 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = *(void **)(*((void *)&v17 + 1) + 8 * i);
          long long v9 = PLImageManagerGetLog();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          {
            long long v10 = [(PLManagedAsset *)self uuid];
            unsigned int v11 = [v8 resourceType];
            long long v12 = @"invalid";
            if (v11 <= 0x1F) {
              long long v12 = off_1E58641E0[v11];
            }
            char v13 = v12;
            uint64_t v14 = +[PLResourceRecipe recipeFromID:](PLResourceRecipe, "recipeFromID:", [v8 recipeID]);
            *(_DWORD *)int buf = 138412802;
            id v22 = v10;
            __int16 v23 = 2114;
            BOOL v24 = v13;
            __int16 v25 = 2114;
            int v26 = v14;
            _os_log_impl(&dword_19B3C7000, v9, OS_LOG_TYPE_DEFAULT, "Deleting adjusted resource row for asset %{pubic}@, type: %{public}@, recipe: %{public}@", buf, 0x20u);
          }
          [v8 deleteResource];
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v17 objects:v27 count:16];
      }
      while (v5);
    }

    id v2 = v15;
  }
}

- (id)localVideoKeyFrameResource
{
  id v2 = [(PLManagedAsset *)self persistedResourcesMatching:&__block_literal_global_206];
  id v3 = [v2 anyObject];

  return v3;
}

BOOL __48__PLManagedAsset_RM__localVideoKeyFrameResource__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 recipeID] == 65749
    && ![v2 resourceType]
    && [v2 version] == 3;

  return v3;
}

- (id)penultimateImageResource
{
  id v2 = [(PLManagedAsset *)self persistedResourcesMatching:&__block_literal_global_204];
  BOOL v3 = [v2 anyObject];

  return v3;
}

BOOL __46__PLManagedAsset_RM__penultimateImageResource__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 version] == 1 && objc_msgSend(v2, "resourceType") == 0;

  return v3;
}

- (id)overflowAdjustmentDataResource
{
  return [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_202];
}

BOOL __52__PLManagedAsset_RM__overflowAdjustmentDataResource__block_invoke(uint64_t a1, void *a2)
{
  return [a2 cplType] == 13;
}

- (id)adjustmentDataResource
{
  BOOL v3 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"%K == %@", @"resourceType", &unk_1EEBF0BD8];
  uint64_t v4 = [(PLManagedAsset *)self fetchResourcesForAssetVersions:&unk_1EEBF24C8 allowDerivatives:0 additionalPredicate:v3 relationshipKeyPathsForPrefetching:0 error:0];
  uint64_t v5 = [v4 firstObject];

  return v5;
}

- (id)primaryStoreOriginalResource
{
  return [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_191];
}

BOOL __50__PLManagedAsset_RM__primaryStoreOriginalResource__block_invoke(uint64_t a1, void *a2)
{
  return [a2 cplType] == 1;
}

- (id)persistedResourcesWithRecipeID:(unsigned int)a3 andVersion:(unsigned int)a4
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __64__PLManagedAsset_RM__persistedResourcesWithRecipeID_andVersion___block_invoke;
  v6[3] = &__block_descriptor_40_e28_B16__0__PLInternalResource_8l;
  unsigned int v7 = a3;
  unsigned int v8 = a4;
  uint64_t v4 = [(PLManagedAsset *)self persistedResourcesMatching:v6];
  return v4;
}

BOOL __64__PLManagedAsset_RM__persistedResourcesWithRecipeID_andVersion___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 recipeID] == *(_DWORD *)(a1 + 32)
    && [v3 version] == *(_DWORD *)(a1 + 36);

  return v4;
}

- (id)resourcesWithVersion:(unsigned int)a3
{
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = __43__PLManagedAsset_RM__resourcesWithVersion___block_invoke;
  v5[3] = &__block_descriptor_36_e28_B16__0__PLInternalResource_8l;
  unsigned int v6 = a3;
  id v3 = [(PLManagedAsset *)self persistedResourcesMatching:v5];
  return v3;
}

BOOL __43__PLManagedAsset_RM__resourcesWithVersion___block_invoke(uint64_t a1, void *a2)
{
  return [a2 version] == *(_DWORD *)(a1 + 32);
}

- (id)persistedAdjustedResources
{
  return [(PLManagedAsset *)self persistedResourcesMatching:&__block_literal_global_188];
}

uint64_t __48__PLManagedAsset_RM__persistedAdjustedResources__block_invoke(uint64_t a1, void *a2)
{
  return [a2 isAdjustedResource];
}

- (id)fetchOrCreateResourceWithIdentity:(id)a3
{
  id v5 = a3;
  if (!v5)
  {
    long long v10 = [MEMORY[0x1E4F28B00] currentHandler];
    [v10 handleFailureInMethod:a2, self, @"PLManagedAsset+RM.m", 1084, @"Invalid parameter not satisfying: %@", @"identity" object file lineNumber description];
  }
  unsigned int v6 = [(PLManagedAsset *)self fetchResourceWithIdentity:v5 error:0];
  if (!v6)
  {
    unsigned int v7 = [(PLManagedAsset *)self managedObjectContext];
    unsigned int v8 = [(PLManagedAsset *)self objectID];
    unsigned int v6 = +[PLInternalResource insertResourceForAssetObjectID:v8 resourceIdentity:v5 inManagedObjectContext:v7];
  }
  return v6;
}

- (id)fetchResourceWithIdentity:(id)a3 error:(id *)a4
{
  id v7 = a3;
  if (!v7)
  {
    long long v12 = [MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInMethod:a2, self, @"PLManagedAsset+RM.m", 1070, @"Invalid parameter not satisfying: %@", @"identity" object file lineNumber description];
  }
  id v13 = 0;
  unsigned int v8 = [(PLManagedAsset *)self _persistedResourceForResourceIdentity:v7 error:&v13];
  id v9 = v13;
  long long v10 = v9;
  if (a4 && !v8 && v9) {
    *a4 = v9;
  }

  return v8;
}

- (id)persistedOriginalVideoComplementResource
{
  return [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_186];
}

BOOL __62__PLManagedAsset_RM__persistedOriginalVideoComplementResource__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = ![v2 recipeID]
    && ![v2 version]
    && [v2 resourceType] == 3;

  return v3;
}

- (id)persistedOriginalVideoResource
{
  return [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_184_113665];
}

BOOL __52__PLManagedAsset_RM__persistedOriginalVideoResource__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = ![v2 recipeID]
    && ![v2 version]
    && [v2 resourceType] == 1;

  return v3;
}

- (id)persistedOriginalImageResource
{
  return [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_182_113667];
}

BOOL __52__PLManagedAsset_RM__persistedOriginalImageResource__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = ![v2 recipeID]
    && ![v2 version]
    && [v2 resourceType] == 0;

  return v3;
}

- (id)firstPersistedResourceMatching:(id)a3
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v5 = (unsigned int (**)(id, void *))a3;
  if (!v5)
  {
    long long v12 = [MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInMethod:a2, self, @"PLManagedAsset+RM.m", 1036, @"Invalid parameter not satisfying: %@", @"filterBlock" object file lineNumber description];
  }
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  unsigned int v6 = [(PLManagedAsset *)self modernResources];
  id v7 = (id)[v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v14;
    while (2)
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v6);
        }
        long long v10 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        if (v5[2](v5, v10))
        {
          id v7 = v10;
          goto LABEL_13;
        }
      }
      id v7 = (id)[v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }
LABEL_13:

  return v7;
}

- (id)persistedResourcesMatching:(id)a3
{
  id v5 = a3;
  if (!v5)
  {
    long long v12 = [MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInMethod:a2, self, @"PLManagedAsset+RM.m", 1025, @"Invalid parameter not satisfying: %@", @"filterBlock" object file lineNumber description];
  }
  unsigned int v6 = (void *)MEMORY[0x1E4F28F60];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  void v13[2] = __49__PLManagedAsset_RM__persistedResourcesMatching___block_invoke;
  void v13[3] = &unk_1E5875530;
  id v14 = v5;
  id v7 = v5;
  uint64_t v8 = [v6 predicateWithBlock:v13];
  id v9 = [(PLManagedAsset *)self modernResources];
  long long v10 = [v9 filteredSetUsingPredicate:v8];

  return v10;
}

uint64_t __49__PLManagedAsset_RM__persistedResourcesMatching___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (id)allFileBackedResources
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  BOOL v4 = [(PLManagedAsset *)self modernResources];
  id v5 = [v4 allObjects];
  [v3 addObjectsFromArray:v5];

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  unsigned int v6 = [(PLManagedAsset *)self nonPersistedResources];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        unsigned int v11 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        if ((~[v11 recipeID] & 0x30000) != 0) {
          [v3 addObject:v11];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }

  return v3;
}

- (id)fetchResourcesForAssetVersions:(id)a3 allowDerivatives:(BOOL)a4 additionalPredicate:(id)a5 relationshipKeyPathsForPrefetching:(id)a6 error:(id *)a7
{
  BOOL v9 = a4;
  id v12 = a6;
  id v13 = a5;
  id v14 = a3;
  long long v15 = objc_opt_class();
  long long v16 = [(PLManagedAsset *)self objectID];
  long long v17 = [(PLManagedAsset *)self managedObjectContext];
  uint64_t v18 = [v15 fetchResourcesForAssetWithObjectID:v16 inContext:v17 versions:v14 includeVirtualResources:1 allowDerivatives:v9 excludeDynamicCPLResources:0 additionalPredicate:v13 relationshipKeyPathsForPrefetching:v12 error:a7];

  return v18;
}

- (id)resourcesSortedByQuality
{
  if (resourcesSortedByQuality_s_onceToken != -1) {
    dispatch_once(&resourcesSortedByQuality_s_onceToken, &__block_literal_global_160_113673);
  }
  id v3 = [MEMORY[0x1E4F1CA48] array];
  BOOL v4 = [(PLManagedAsset *)self modernResources];
  id v5 = [v4 allObjects];
  [v3 addObjectsFromArray:v5];

  unsigned int v6 = [(PLManagedAsset *)self nonPersistedResources];
  [v3 addObjectsFromArray:v6];

  [v3 sortUsingDescriptors:resourcesSortedByQuality_s_sortDescriptors];
  return v3;
}

void __46__PLManagedAsset_RM__resourcesSortedByQuality__block_invoke()
{
  v3[1] = *MEMORY[0x1E4F143B8];
  dispatch_queue_t v0 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"qualitySortValue" ascending:1];
  v3[0] = v0;
  uint64_t v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v3 count:1];
  id v2 = (void *)resourcesSortedByQuality_s_sortDescriptors;
  resourcesSortedByQuality_s_sortDescriptors = v1;
}

- (id)masterThumbnailFileURLIfLocal
{
  id v2 = [(PLManagedAsset *)self masterThumbnailResource];
  id v3 = [v2 fileURL];

  return v3;
}

- (id)masterThumbnailResource
{
  id v2 = [(PLManagedAsset *)self nonPersistedResources];
  uint64_t v3 = [v2 indexOfObjectPassingTest:&__block_literal_global_157_113678];
  if (v3 == 0x7FFFFFFFFFFFFFFFLL)
  {
    BOOL v4 = 0;
  }
  else
  {
    BOOL v4 = [v2 objectAtIndex:v3];
  }

  return v4;
}

BOOL __45__PLManagedAsset_RM__masterThumbnailResource__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 recipeID];
  return +[PLResourceDataStore isMasterThumbRecipeID:v2];
}

- (id)nonPersistedResources
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:5];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  BOOL v4 = [(PLManagedAsset *)self assetID];
  id v5 = [v4 libraryID];
  unsigned int v6 = +[PLResourceDataStoreManager storesForLibraryID:v5];

  uint64_t v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        unsigned int v11 = [*(id *)(*((void *)&v13 + 1) + 8 * i) virtualResourcesForAsset:self];
        [v3 addObjectsFromArray:v11];
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }

  return v3;
}

- (id)mediaMetadataVirtualResources
{
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  BOOL v4 = [(PLManagedAsset *)self master];
  id v5 = [v4 mediaMetadata];
  unsigned int v6 = [v5 data];

  if (v6)
  {
    uint64_t v7 = [PLMediaMetadataVirtualResource alloc];
    uint64_t v8 = [(PLManagedAsset *)self master];
    uint64_t v9 = [v8 mediaMetadata];
    long long v10 = [v9 data];
    unsigned int v11 = -[PLMediaMetadataVirtualResource initWithAsset:resourceType:version:recipeID:dataLength:](v7, "initWithAsset:resourceType:version:recipeID:dataLength:", self, 9, 0, 327685, [v10 length]);

    [v3 addObject:v11];
  }
  if ([(PLManagedAsset *)self hasAdjustments])
  {
    id v12 = [(PLManagedAsset *)self additionalAttributes];
    long long v13 = [v12 mediaMetadata];
    long long v14 = [v13 data];

    if (v14)
    {
      long long v15 = [PLMediaMetadataVirtualResource alloc];
      long long v16 = [(PLManagedAsset *)self additionalAttributes];
      long long v17 = [v16 mediaMetadata];
      uint64_t v18 = [v17 data];
      long long v19 = -[PLMediaMetadataVirtualResource initWithAsset:resourceType:version:recipeID:dataLength:](v15, "initWithAsset:resourceType:version:recipeID:dataLength:", self, 9, 2, 327685, [v18 length]);

      [v3 addObject:v19];
    }
  }
  return v3;
}

- (void)recalculateImageRequestHintsForResource:(id)a3 afterLocalAvailabilityChangeFrom:(signed __int16)a4 previousDataStoreKey:(id)a5
{
  int v6 = a4;
  v51[1] = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  id v37 = a5;
  if (!v9)
  {
    uint64_t v34 = [MEMORY[0x1E4F28B00] currentHandler];
    [v34 handleFailureInMethod:a2, self, @"PLManagedAsset+RM.m", 766, @"Invalid parameter not satisfying: %@", @"resource" object file lineNumber description];
  }
  uint64_t v45 = 0;
  uint64_t v46 = &v45;
  uint64_t v47 = 0x2020000000;
  uint64_t v48 = 0;
  int v10 = [v9 localAvailability];
  if (v6 > 1 || v10 < 1)
  {
    int v13 = [v9 localAvailability];
    unsigned int v11 = v46;
    if (v6 < 1 || (v13 & 0x80000000) == 0)
    {
      if (!v46[3]) {
        goto LABEL_22;
      }
      goto LABEL_10;
    }
    uint64_t v12 = 2;
  }
  else
  {
    unsigned int v11 = v46;
    uint64_t v12 = 1;
  }
  void v11[3] = v12;
LABEL_10:
  id v14 = objc_alloc(MEMORY[0x1E4F1CA58]);
  long long v15 = [(PLManagedAsset *)self imageRequestHints];
  long long v16 = objc_msgSend(v14, "initWithCapacity:", objc_msgSend(v15, "length"));

  int64_t v17 = [(PLManagedAsset *)self width];
  if ([(PLManagedAsset *)self height] * v17 < 1)
  {
    float v21 = 0.0;
  }
  else
  {
    uint64_t v18 = [v9 unorientedWidth];
    uint64_t v19 = [v9 unorientedHeight];
    int64_t v20 = [(PLManagedAsset *)self width];
    float v21 = (float)(v19 * v18) / (float)([(PLManagedAsset *)self height] * v20);
  }
  if (PLCanIncludeResourceInHints(v9, self))
  {
    id v22 = objc_opt_class();
    v51[0] = v9;
    __int16 v23 = [MEMORY[0x1E4F1C978] arrayWithObjects:v51 count:1];
    BOOL v24 = [v22 calculateImageRequestHintsFromSortedResources:v23 asset:self];
  }
  else
  {
    BOOL v24 = 0;
  }
  char v36 = objc_opt_class();
  __int16 v25 = [(PLManagedAsset *)self imageRequestHints];
  int64_t v35 = [(PLManagedAsset *)self width];
  int64_t v26 = [(PLManagedAsset *)self height];
  uint64_t v27 = [(PLManagedAsset *)self assetID];
  uint64_t v28 = [v27 libraryID];
  uint64_t v29 = [(PLManagedAsset *)self assetID];
  v38[0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  void v38[2] = __116__PLManagedAsset_RM__recalculateImageRequestHintsForResource_afterLocalAvailabilityChangeFrom_previousDataStoreKey___block_invoke;
  void v38[3] = &unk_1E58754E8;
  float v44 = v21;
  id v39 = v9;
  id v43 = &v45;
  id v40 = v37;
  id v30 = v24;
  id v41 = v30;
  id v31 = v16;
  id v42 = v31;
  [v36 enumerateImageRequestHintData:v25 assetWidth:v35 assetHeight:v26 libraryID:v28 startingOffset:0 assetID:v29 block:v38];

  if (v46[3] == 1 && v30) {
    [v31 appendData:v30];
  }
  [(PLManagedAsset *)self setImageRequestHints:v31];
  uint64_t v32 = PLImageManagerGetLog();
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v33 = [v31 length];
    *(_DWORD *)int buf = 134217984;
    uint64_t v50 = v33;
    _os_log_impl(&dword_19B3C7000, v32, OS_LOG_TYPE_DEBUG, "[RM]: Inserted/removed imageRequestHint, length = %ld", buf, 0xCu);
  }

LABEL_22:
  _Block_object_dispose(&v45, 8);
}

void __116__PLManagedAsset_RM__recalculateImageRequestHintsForResource_afterLocalAvailabilityChangeFrom_previousDataStoreKey___block_invoke(uint64_t a1, uint64_t a2, int a3, float a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  id v25 = a6;
  id v16 = a7;
  float v17 = *(float *)(a1 + 72);
  if (v17 <= a4)
  {
    if (vabds_f32(a4, v17) >= 0.00000011921 || a3 == 0)
    {
      LOBYTE(v18) = 0;
    }
    else
    {
      int64_t v20 = [*(id *)(a1 + 32) uniformTypeIdentifier];
      int v18 = [v20 isPrimaryImageFormat] ^ 1;
    }
  }
  else
  {
    LOBYTE(v18) = 1;
  }
  uint64_t v21 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
  if (v21 == 2)
  {
    char v22 = [v16 isEqualToKey:*(void *)(a1 + 40)];
    __int16 v23 = (uint64_t *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
    if (v22)
    {
LABEL_24:
      *__int16 v23 = 0;
      goto LABEL_25;
    }
    uint64_t v21 = *v23;
  }
  if (v21 == 1) {
    char v24 = v18;
  }
  else {
    char v24 = 1;
  }
  if ((v24 & 1) == 0)
  {
    if (*(void *)(a1 + 48)) {
      objc_msgSend(*(id *)(a1 + 56), "appendData:");
    }
    [*(id *)(a1 + 56) appendBytes:a8 length:a9];
    goto LABEL_23;
  }
  [*(id *)(a1 + 56) appendBytes:a8 length:a9];
  if (a2 == 0x7FFFFFFFFFFFFFFFLL && v21 == 1)
  {
    if (*(void *)(a1 + 48)) {
      objc_msgSend(*(id *)(a1 + 56), "appendData:");
    }
LABEL_23:
    __int16 v23 = (uint64_t *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
    goto LABEL_24;
  }
LABEL_25:
}

- (void)insertTableThumbImageRequestHints
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = [(PLManagedObject *)self photoLibrary];
  BOOL v4 = [v3 libraryID];
  id v5 = PLDataStoreForClassIDAndLibraryID(1, v4);

  int v6 = [v5 virtualResourcesForAsset:self];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        [(PLManagedAsset *)self recalculateImageRequestHintsForResource:*(void *)(*((void *)&v11 + 1) + 8 * v10++) afterLocalAvailabilityChangeFrom:0xFFFFFFFFLL previousDataStoreKey:0];
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v8);
  }
}

- (void)recalculateImageRequestHints
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = PLImageManagerGetLog();
  os_signpost_id_t v4 = os_signpost_id_make_with_pointer(v3, self);
  id v5 = v3;
  int v6 = v5;
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v5))
  {
    LOWORD(v17) = 0;
    _os_signpost_emit_with_name_impl(&dword_19B3C7000, v6, OS_SIGNPOST_INTERVAL_BEGIN, v4, "ResourceModel", "RecalulateImageRequestHints", (uint8_t *)&v17, 2u);
  }

  uint64_t v7 = objc_opt_class();
  uint64_t v8 = [(PLManagedAsset *)self resourcesSortedByQuality];
  uint64_t v9 = [v7 calculateImageRequestHintsFromSortedResources:v8 asset:self];

  uint64_t v10 = [(PLManagedAsset *)self imageRequestHints];
  char v11 = [v9 isEqualToData:v10];

  if ((v11 & 1) == 0)
  {
    long long v12 = PLImageManagerGetLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      long long v13 = [(PLManagedAsset *)self uuid];
      uint64_t v14 = [v9 length];
      int v17 = 138412546;
      int v18 = v13;
      __int16 v19 = 2048;
      uint64_t v20 = v14;
      _os_log_impl(&dword_19B3C7000, v12, OS_LOG_TYPE_DEBUG, "[RM]: Recalculated image request hints for %@, length = %ld", (uint8_t *)&v17, 0x16u);
    }
    [(PLManagedAsset *)self setImageRequestHints:v9];
  }
  long long v15 = v6;
  uint64_t v16 = v15;
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v15))
  {
    LOWORD(v17) = 0;
    _os_signpost_emit_with_name_impl(&dword_19B3C7000, v16, OS_SIGNPOST_INTERVAL_END, v4, "ResourceModel", "RecalulateImageRequestHints", (uint8_t *)&v17, 2u);
  }
}

- (BOOL)imageRequestHintsContainsResource:(id)a3
{
  id v4 = a3;
  uint64_t v17 = 0;
  int v18 = &v17;
  uint64_t v19 = 0x2020000000;
  char v20 = 0;
  id v5 = objc_opt_class();
  int v6 = [(PLManagedAsset *)self imageRequestHints];
  int64_t v7 = [(PLManagedAsset *)self width];
  int64_t v8 = [(PLManagedAsset *)self height];
  uint64_t v9 = [(PLManagedObject *)self photoLibrary];
  uint64_t v10 = [v9 libraryID];
  char v11 = [(PLManagedAsset *)self assetID];
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  void v14[2] = __56__PLManagedAsset_RM__imageRequestHintsContainsResource___block_invoke;
  v14[3] = &unk_1E58754C0;
  void v14[4] = self;
  id v12 = v4;
  id v15 = v12;
  uint64_t v16 = &v17;
  [v5 enumerateImageRequestHintData:v6 assetWidth:v7 assetHeight:v8 libraryID:v10 startingOffset:0 assetID:v11 block:v14];

  LOBYTE(v6) = *((unsigned char *)v18 + 24);
  _Block_object_dispose(&v17, 8);

  return (char)v6;
}

void __56__PLManagedAsset_RM__imageRequestHintsContainsResource___block_invoke(uint64_t a1, float a2, uint64_t a3, int a4, int a5, void *a6, void *a7, uint64_t a8, uint64_t a9, int a10, unsigned char *a11)
{
  id v32 = a6;
  id v16 = a7;
  int v17 = [(id)objc_opt_class() storeClassID];
  int v18 = *(void **)(a1 + 32);
  if (v17 == 1)
  {
    uint64_t v19 = [v18 width];
    if ([*(id *)(a1 + 32) height] * v19 < 1)
    {
      float v23 = 0.0;
    }
    else
    {
      uint64_t v20 = [*(id *)(a1 + 40) unorientedWidth];
      float v21 = (float)([*(id *)(a1 + 40) unorientedHeight] * v20);
      uint64_t v22 = [*(id *)(a1 + 32) width];
      float v23 = v21 / (float)([*(id *)(a1 + 32) height] * v22);
    }
    if (vabds_f32(v23, a2) < 0.00000011921)
    {
      id v30 = [*(id *)(a1 + 40) uniformTypeIdentifier];
      if ([v30 isPrimaryImageFormat] == a4
        && [*(id *)(a1 + 40) isDefaultOrientation] == a5)
      {
        int v31 = [*(id *)(a1 + 40) recipeID];

        if (v31 == a10)
        {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
          *a11 = 1;
        }
      }
      else
      {
      }
    }
  }
  else
  {
    char v24 = [v18 assetID];
    id v25 = [v32 resourceURLForKey:v16 assetID:v24];

    int64_t v26 = [*(id *)(a1 + 40) dataStore];
    uint64_t v27 = [*(id *)(a1 + 40) dataStoreKey];
    uint64_t v28 = [*(id *)(a1 + 40) assetID];
    uint64_t v29 = [v26 resourceURLForKey:v27 assetID:v28];

    if (v25 && [v25 isEqual:v29])
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
      *a11 = 1;
    }
  }
}

- (id)validateForAssetID:(id)a3 resourceIdentity:(id)a4
{
  uint64_t v114 = *MEMORY[0x1E4F143B8];
  id v73 = a3;
  id v72 = a4;
  id v106 = 0;
  int v6 = [(PLManagedAsset *)self fetchResourcesForAssetVersions:0 allowDerivatives:1 additionalPredicate:0 relationshipKeyPathsForPrefetching:0 error:&v106];
  id v71 = v106;
  id v75 = objc_alloc_init(MEMORY[0x1E4F28BD0]);
  BOOL v84 = [(PLManagedAsset *)self isCloudSharedAsset];
  long long v102 = 0u;
  long long v103 = 0u;
  long long v104 = 0u;
  long long v105 = 0u;
  id v7 = v6;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v102 objects:v113 count:16];
  if (v8)
  {
    char v9 = 0;
    int v76 = 0;
    char obj = 0;
    char v82 = 0;
    char v10 = 0;
    uint64_t v11 = *(void *)v103;
    id v12 = (void *)MEMORY[0x1E4F1CBF0];
    while (1)
    {
      long long v13 = v7;
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v103 != v11) {
          objc_enumerationMutation(v13);
        }
        id v15 = *(void **)(*((void *)&v102 + 1) + 8 * i);
        if (v84)
        {
          if (-[PLManagedAsset isVideo](self, "isVideo") && [v15 dataStoreSubtype] == 5
            || !-[PLManagedAsset isVideo](self, "isVideo", v71) && [v15 dataStoreSubtype] == 3)
          {
            char v10 = 1;
          }
        }
        else
        {
          v10 |= objc_msgSend(v15, "cplType", v71) == 1;
        }
        if (!objc_msgSend(v15, "resourceType", v71)
          && (![v15 isDerivative] || -[PLManagedAsset kind](self, "kind")))
        {
          if ([v15 version] == 2 && !objc_msgSend(v15, "isDerivative"))
          {
            char obj = 1;
          }
          else if (![v15 version] {
                 && ([v15 recipeID] == 65943
          }
                  || [v15 recipeID] == 65951))
          {
            int v16 = [(PLManagedAsset *)self deferredProcessingNeeded];
            if (v16 == 10 || v16 == 1)
            {
              int v17 = +[PLResourceModelValidationError unexpectedLocalResourceError:v15];
              uint64_t v80 = [v12 arrayByAddingObject:v17];

              int v76 = 1;
              char v82 = 1;
              id v12 = (void *)v80;
              goto LABEL_28;
            }
            int v76 = 1;
          }
          char v82 = 1;
        }
LABEL_28:
        v9 |= [v15 resourceType] == 3;
        int v18 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v15, "cplType"));
        [v75 addObject:v18];
      }
      id v7 = v13;
      uint64_t v8 = [v13 countByEnumeratingWithState:&v102 objects:v113 count:16];
      if (!v8)
      {

        LODWORD(v8) = v76;
        char v19 = v82;
        if (v10) {
          goto LABEL_34;
        }
        goto LABEL_33;
      }
    }
  }

  char v19 = 0;
  char obj = 0;
  char v9 = 0;
  id v12 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_33:
  uint64_t v20 = +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:self, @"Missing original resource.", v71 message];
  uint64_t v21 = [v12 arrayByAddingObject:v20];

  id v12 = (void *)v21;
LABEL_34:
  if ([(PLManagedAsset *)self kind] == 1
    && !(([(PLManagedAsset *)self deferredProcessingNeeded] != 0) | v19 & 1))
  {
    uint64_t v22 = +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:self message:@"Video asset missing its image resource."];
    uint64_t v23 = [v12 arrayByAddingObject:v22];

    id v12 = (void *)v23;
  }
  if ([(PLManagedAsset *)self hasAdjustments]
    && ![(PLManagedAsset *)self deferredProcessingNeeded]
    && !(([(PLManagedAsset *)self kind] != 0) | obj & 1))
  {
    char v24 = +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:self message:@"Adjusted image asset missing its full size render resource."];
    uint64_t v25 = [v12 arrayByAddingObject:v24];

    id v12 = (void *)v25;
  }
  int v26 = [(PLManagedAsset *)self deferredProcessingNeeded];
  BOOL v28 = v26 != 10 && v26 != 1;
  if (((v28 | v8) & 1) == 0)
  {
    uint64_t v29 = +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:self message:@"Asset in deferred processing via capture pipline state missing its preview image resource."];
    uint64_t v30 = [v12 arrayByAddingObject:v29];

    id v12 = (void *)v30;
  }
  if (!(v9 & 1 | ![(PLManagedAsset *)self isPhotoIris]))
  {
    int v31 = +[PLResourceModelValidationError missingRequiredResourcesErrorForAsset:self message:@"Live photo with missing video complement resource."];
    uint64_t v32 = [v12 arrayByAddingObject:v31];

    id v12 = (void *)v32;
  }
  long long v100 = 0u;
  long long v101 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  id obja = v7;
  uint64_t v85 = self;
  uint64_t v77 = [obja countByEnumeratingWithState:&v98 objects:v112 count:16];
  if (v77)
  {
    uint64_t v74 = *(void *)v99;
    uint64_t v33 = (void *)MEMORY[0x1E4F1CBF0];
    do
    {
      uint64_t v34 = 0;
      do
      {
        if (*(void *)v99 != v74) {
          objc_enumerationMutation(obja);
        }
        uint64_t v81 = v34;
        int64_t v35 = *(void **)(*((void *)&v98 + 1) + 8 * v34);
        long long v94 = 0u;
        long long v95 = 0u;
        long long v96 = 0u;
        long long v97 = 0u;
        id v36 = obja;
        uint64_t v37 = [v36 countByEnumeratingWithState:&v94 objects:v111 count:16];
        if (v37)
        {
          uint64_t v38 = v37;
          uint64_t v39 = *(void *)v95;
          id v83 = v36;
          do
          {
            for (uint64_t j = 0; j != v38; ++j)
            {
              if (*(void *)v95 != v39) {
                objc_enumerationMutation(v36);
              }
              id v41 = *(void **)(*((void *)&v94 + 1) + 8 * j);
              if (v35 != v41
                && ([v33 containsObject:*(void *)(*((void *)&v94 + 1) + 8 * j)] & 1) == 0
                && PLResourceIdentityIsEqual(v35, v41))
              {
                v110[0] = v35;
                v110[1] = v41;
                id v42 = [MEMORY[0x1E4F1C978] arrayWithObjects:v110 count:2];
                id v43 = +[PLResourceModelValidationError duplicateResourceErrorAmongResources:v42 forAsset:v85];

                uint64_t v44 = [v12 arrayByAddingObject:v43];

                v109[0] = v35;
                v109[1] = v41;
                uint64_t v45 = [MEMORY[0x1E4F1C978] arrayWithObjects:v109 count:2];
                uint64_t v46 = [v33 arrayByAddingObjectsFromArray:v45];

                id v36 = v83;
                uint64_t v33 = (void *)v46;
                id v12 = (void *)v44;
              }
            }
            uint64_t v38 = [v36 countByEnumeratingWithState:&v94 objects:v111 count:16];
          }
          while (v38);
        }

        uint64_t v34 = v81 + 1;
      }
      while (v81 + 1 != v77);
      uint64_t v77 = [v36 countByEnumeratingWithState:&v98 objects:v112 count:16];
    }
    while (v77);
  }
  else
  {
    uint64_t v33 = (void *)MEMORY[0x1E4F1CBF0];
  }

  long long v92 = 0u;
  long long v93 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  id v47 = v75;
  uint64_t v48 = [v47 countByEnumeratingWithState:&v90 objects:v108 count:16];
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)v91;
    do
    {
      for (uint64_t k = 0; k != v49; ++k)
      {
        if (*(void *)v91 != v50) {
          objc_enumerationMutation(v47);
        }
        id v52 = *(void **)(*((void *)&v90 + 1) + 8 * k);
        uint64_t v53 = [v52 integerValue];
        if (v53)
        {
          unint64_t v54 = v53;
          unint64_t v55 = [v47 countForObject:v52];
          BOOL v56 = [(PLManagedAsset *)v85 hasAdjustments];
          BOOL v57 = v54 > 0x1C || ((1 << v54) & 0x102104FC) == 0;
          unint64_t v58 = 2;
          if (v57) {
            unint64_t v58 = 1;
          }
          if (!v56) {
            unint64_t v58 = 1;
          }
          if (v55 > v58)
          {
            long long v59 = +[PLResourceModelValidationError duplicatedCPLTypeAssetErrorForAsset:v85 cplType:v54];
            uint64_t v60 = [v12 arrayByAddingObject:v59];

            id v12 = (void *)v60;
          }
        }
      }
      uint64_t v49 = [v47 countByEnumeratingWithState:&v90 objects:v108 count:16];
    }
    while (v49);
  }

  long long v88 = 0u;
  long long v89 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  id v61 = obja;
  uint64_t v62 = [v61 countByEnumeratingWithState:&v86 objects:v107 count:16];
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = *(void *)v87;
    __int16 v65 = v73;
    do
    {
      uint64_t v66 = 0;
      __int16 v67 = v12;
      do
      {
        if (*(void *)v87 != v64) {
          objc_enumerationMutation(v61);
        }
        uint64_t v68 = [*(id *)(*((void *)&v86 + 1) + 8 * v66) validateForAssetID:v73 resourceIdentity:*(void *)(*((void *)&v86 + 1) + 8 * v66)];
        id v12 = [v67 arrayByAddingObjectsFromArray:v68];

        ++v66;
        __int16 v67 = v12;
      }
      while (v63 != v66);
      uint64_t v63 = [v61 countByEnumeratingWithState:&v86 objects:v107 count:16];
    }
    while (v63);
  }
  else
  {
    __int16 v65 = v73;
  }

  id v69 = v12;
  return v69;
}

- (id)virtualResourcesThatReplaceMissingPersistedResources:(id)a3
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  id v5 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  if ([(PLManagedAsset *)self hasAdjustments])
  {
    [MEMORY[0x1E4F8BA10] maskForAssetsAllowingVirtualFullSizeRender];
    [(PLManagedAsset *)self savedAssetType];
    if (PLValidatedSavedAssetTypeApplies())
    {
      char v19 = self;
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v6 = v4;
      uint64_t v7 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v7)
      {
        uint64_t v8 = v7;
        char v9 = 0;
        char v10 = 0;
        char v11 = 0;
        uint64_t v12 = *(void *)v21;
        do
        {
          for (uint64_t i = 0; i != v8; ++i)
          {
            if (*(void *)v21 != v12) {
              objc_enumerationMutation(v6);
            }
            uint64_t v14 = *(void **)(*((void *)&v20 + 1) + 8 * i);
            if ([v14 recipeID] == 65938)
            {
              char v11 = 1;
            }
            else if ([v14 recipeID] == 131272)
            {
              char v10 = 1;
            }
            else
            {
              v9 |= [v14 recipeID] == 0x20000;
            }
          }
          uint64_t v8 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
        }
        while (v8);
      }
      else
      {
        char v9 = 0;
        char v10 = 0;
        char v11 = 0;
      }

      if ([(PLManagedAsset *)v19 isPhoto] && (v11 & 1) == 0)
      {
        id v15 = [[PLFullSizeRenderImageVirtualResource alloc] initWithAsset:v19];
        [v5 addObject:v15];
      }
      if ([(PLManagedAsset *)v19 isPhotoIris]
        && !(([(PLManagedAsset *)v19 playbackStyle] == 1) | v10 & 1)
        && !+[PLManagedAsset isPhotoIrisPlaceholderWithPhotoIris:1 videoCpDuration:[(PLManagedAsset *)v19 videoCpDurationValue] isCloudShared:[(PLManagedAsset *)v19 isCloudSharedAsset] videoCpFilePath:0])
      {
        int v16 = [[PLFullSizeRenderVideoComplementVirtualResource alloc] initWithAsset:v19];
        [v5 addObject:v16];
      }
      if ([(PLManagedAsset *)v19 isVideo]
        && !(v9 & 1 | ![(PLManagedAsset *)v19 hasNonSlomoAdjustments]))
      {
        int v17 = [[PLFullSizeRenderVideoVirtualResource alloc] initWithAsset:v19];
        [v5 addObject:v17];
      }
    }
  }

  return v5;
}

- (id)_anyOriginalNonDerivativeAlternateImageResource
{
  return [(PLManagedAsset *)self firstPersistedResourceMatching:&__block_literal_global_110];
}

BOOL __69__PLManagedAsset_RM___anyOriginalNonDerivativeAlternateImageResource__block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 resourceType] == 4
    && ![v2 version]
    && ([v2 recipeID] & 1) == 0;

  return v3;
}

- (id)_persistedResourceForResourceIdentity:(id)a3 error:(id *)a4
{
  v41[5] = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  if (!v7)
  {
    uint64_t v32 = [MEMORY[0x1E4F28B00] currentHandler];
    [v32 handleFailureInMethod:a2, self, @"PLManagedAsset+RM.m", 143, @"Invalid parameter not satisfying: %@", @"identity" object file lineNumber description];
  }
  uint64_t v8 = [(PLManagedAsset *)self managedObjectContext];
  if (_persistedResourceForResourceIdentity_error__s_onceToken != -1) {
    dispatch_once(&_persistedResourceForResourceIdentity_error__s_onceToken, &__block_literal_global_78_113712);
  }
  char v9 = [v7 uniformTypeIdentifier];
  char v10 = [v9 identifier];
  int v11 = PLFileTypeFromIdentifier(v10);

  uint64_t v12 = (void *)MEMORY[0x1E4F1CA48];
  long long v13 = [v9 compactRepresentation];
  uint64_t v14 = [v12 arrayWithObject:v13];

  if (v11)
  {
    id v15 = [v9 identifier];
    int v16 = [@"_" stringByAppendingString:v15];

    [v14 addObject:v16];
  }
  v36[0] = MEMORY[0x1E4F143A8];
  v36[1] = 3221225472;
  v36[2] = __66__PLManagedAsset_RM___persistedResourceForResourceIdentity_error___block_invoke_2;
  v36[3] = &unk_1E5875428;
  id v17 = v7;
  id v37 = v17;
  id v18 = v14;
  id v38 = v18;
  uint64_t v39 = self;
  char v19 = (void (**)(void))MEMORY[0x19F38D650](v36);
  if ([(PLManagedAsset *)self isInserted])
  {
    long long v20 = v19[2](v19);
  }
  else if (([(PLManagedAsset *)self hasFaultForRelationshipNamed:@"modernResources"] & 1) != 0|| (v19[2](v19), (long long v20 = objc_claimAutoreleasedReturnValue()) == 0))
  {
    long long v21 = (void *)_persistedResourceForResourceIdentity_error__s_fetchPredicateTemplate;
    v40[0] = @"ASSET";
    uint64_t v33 = [(PLManagedAsset *)self objectID];
    v41[0] = v33;
    v40[1] = @"RESOURCE_TYPE";
    long long v22 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v17, "resourceType"));
    v41[1] = v22;
    void v40[2] = @"VERSION";
    uint64_t v34 = a4;
    long long v23 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v17, "version"));
    v41[2] = v23;
    v40[3] = @"RECIPEID";
    char v24 = v8;
    uint64_t v25 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v17, "recipeID"));
    v40[4] = @"UTIS";
    v41[3] = v25;
    v41[4] = v18;
    int v26 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v41 forKeys:v40 count:5];
    uint64_t v27 = [v21 predicateWithSubstitutionVariables:v26];

    uint64_t v8 = v24;
    BOOL v28 = +[PLInternalResource fetchRequest];
    [v28 setPredicate:v27];
    id v35 = 0;
    uint64_t v29 = [v8 executeFetchRequest:v28 error:&v35];
    id v30 = v35;
    long long v20 = [v29 firstObject];

    if (v34 && v30) {
      *uint64_t v34 = v30;
    }
  }
  return v20;
}

id __66__PLManagedAsset_RM___persistedResourceForResourceIdentity_error___block_invoke_2(uint64_t a1)
{
  void v14[4] = *MEMORY[0x1E4F143B8];
  id v2 = (void *)_persistedResourceForResourceIdentity_error__s_intraAssetPredicateTemplate;
  v13[0] = @"RESOURCE_TYPE";
  BOOL v3 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(*(id *)(a1 + 32), "resourceType"));
  v14[0] = v3;
  v13[1] = @"VERSION";
  id v4 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(*(id *)(a1 + 32), "version"));
  v14[1] = v4;
  void v13[2] = @"RECIPEID";
  id v5 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(*(id *)(a1 + 32), "recipeID"));
  void v13[3] = @"UTIS";
  uint64_t v6 = *(void *)(a1 + 40);
  void v14[2] = v5;
  v14[3] = v6;
  id v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v14 forKeys:v13 count:4];
  uint64_t v8 = [v2 predicateWithSubstitutionVariables:v7];

  char v9 = [*(id *)(a1 + 48) modernResources];
  char v10 = [v9 filteredSetUsingPredicate:v8];
  int v11 = [v10 anyObject];

  return v11;
}

void __66__PLManagedAsset_RM___persistedResourceForResourceIdentity_error___block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"asset == $ASSET AND resourceType == $RESOURCE_TYPE AND version == $VERSION AND recipeID == $RECIPEID and compactUTI IN $UTIS"];
  uint64_t v1 = (void *)_persistedResourceForResourceIdentity_error__s_fetchPredicateTemplate;
  _persistedResourceForResourceIdentity_error__s_fetchPredicateTemplate = v0;

  uint64_t v2 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"resourceType == $RESOURCE_TYPE AND version == $VERSION AND recipeID == $RECIPEID and compactUTI IN $UTIS"];
  BOOL v3 = (void *)_persistedResourceForResourceIdentity_error__s_intraAssetPredicateTemplate;
  _persistedResourceForResourceIdentity_error__s_intraAssetPredicateTemplate = v2;
}

+ (id)fetchResourcesForAssetWithObjectID:(id)a3 inContext:(id)a4 versions:(id)a5 includeVirtualResources:(BOOL)a6 allowDerivatives:(BOOL)a7 excludeDynamicCPLResources:(BOOL)a8 additionalPredicate:(id)a9 relationshipKeyPathsForPrefetching:(id)a10 error:(id *)a11
{
  BOOL v44 = a8;
  BOOL v11 = a7;
  BOOL v12 = a6;
  v49[1] = *MEMORY[0x1E4F143B8];
  id v16 = a3;
  id v17 = a4;
  id v18 = a5;
  id v19 = v16;
  id v20 = a9;
  id v48 = a10;
  if (v19)
  {
    if (v17) {
      goto LABEL_3;
    }
  }
  else
  {
    id v41 = [MEMORY[0x1E4F28B00] currentHandler];
    [v41 handleFailureInMethod:a2, a1, @"PLManagedAsset+RM.m", 954, @"Invalid parameter not satisfying: %@", @"assetObjectID" object file lineNumber description];

    if (v17) {
      goto LABEL_3;
    }
  }
  id v42 = [MEMORY[0x1E4F28B00] currentHandler];
  [v42 handleFailureInMethod:a2, a1, @"PLManagedAsset+RM.m", 955, @"Invalid parameter not satisfying: %@", @"context" object file lineNumber description];

LABEL_3:
  long long v21 = [MEMORY[0x1E4F1CA48] array];
  BOOL v45 = v12;
  if (v12)
  {
    long long v22 = [MEMORY[0x1E4F1CA48] array];
    if (v18)
    {
      long long v23 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"version IN %@", v18];
      [v22 addObject:v23];
    }
    if (!v11)
    {
      char v24 = [(id)objc_opt_class() predicateFilteringForNonDerivativeRecipeIDs];
      [v22 addObject:v24];
    }
    uint64_t v25 = v17;
    id v43 = v18;
    if (v20) {
      [v22 addObject:v20];
    }
    int v26 = [MEMORY[0x1E4F28BA0] andPredicateWithSubpredicates:v22];
    uint64_t v27 = +[PLManagedAsset assetWithObjectID:v19 inManagedObjectContext:v25];
    BOOL v28 = [v27 nonPersistedResources];
    uint64_t v29 = [v28 filteredArrayUsingPredicate:v26];

    [v21 addObjectsFromArray:v29];
    id v18 = v43;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v25 = v17;
    int v26 = 0;
  }
  id v30 = a1;
  id v47 = v19;
  id v31 = v19;
  uint64_t v32 = v18;
  uint64_t v33 = [v30 fetchRequestForResourcesWithObjectID:v31 versions:v18 allowDerivatives:v11 excludeDynamicCPLResources:v44 additionalPredicate:v20 relationshipKeyPathsForPrefetching:v48];
  uint64_t v34 = v25;
  id v35 = [v25 executeFetchRequest:v33 error:a11];
  [v21 addObjectsFromArray:v35];
  if (v45)
  {
    id v36 = [v27 virtualResourcesThatReplaceMissingPersistedResources:v35];
    id v37 = [v36 filteredArrayUsingPredicate:v26];

    [v21 addObjectsFromArray:v37];
  }
  id v38 = [MEMORY[0x1E4F29008] sortDescriptorWithKey:@"qualitySortValue" ascending:1];
  v49[0] = v38;
  uint64_t v39 = [MEMORY[0x1E4F1C978] arrayWithObjects:v49 count:1];
  [v21 sortUsingDescriptors:v39];

  return v21;
}

+ (id)fetchRequestForResourcesWithObjectID:(id)a3 versions:(id)a4 allowDerivatives:(BOOL)a5 excludeDynamicCPLResources:(BOOL)a6 additionalPredicate:(id)a7 relationshipKeyPathsForPrefetching:(id)a8
{
  BOOL v10 = a6;
  id v13 = a3;
  id v14 = a4;
  id v15 = a7;
  id v16 = (void *)MEMORY[0x1E4F1CA48];
  id v17 = a8;
  id v18 = [v16 array];
  if (v14)
  {
    id v19 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"version IN %@", v14];
    [v18 addObject:v19];
  }
  if (a5)
  {
    if (!v10) {
      goto LABEL_8;
    }
    uint64_t v20 = [(id)objc_opt_class() predicateExcludingLocallyUnavailableDynamicCPLResources];
  }
  else
  {
    uint64_t v20 = [(id)objc_opt_class() predicateFilteringForNonDerivativeRecipeIDs];
  }
  long long v21 = (void *)v20;
  [v18 addObject:v20];

LABEL_8:
  if (v15) {
    [v18 addObject:v15];
  }
  long long v22 = [MEMORY[0x1E4F28F60] predicateWithFormat:@"asset == %@", v13];
  [v18 addObject:v22];

  long long v23 = +[PLInternalResource fetchRequest];
  char v24 = [MEMORY[0x1E4F28BA0] andPredicateWithSubpredicates:v18];
  [v23 setPredicate:v24];

  [v23 setRelationshipKeyPathsForPrefetching:v17];
  [v23 setReturnsObjectsAsFaults:0];

  return v23;
}

+ (id)calculateImageRequestHintsFromSortedResources:(id)a3 asset:(id)a4
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = a4;
  id v40 = [MEMORY[0x1E4F1CA58] data];
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  id v7 = v5;
  unint64_t v8 = 0x1E4F1C000uLL;
  id obj = v7;
  uint64_t v9 = [v7 countByEnumeratingWithState:&v43 objects:v49 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v44;
    uint64_t v39 = *(void *)v44;
    do
    {
      uint64_t v12 = 0;
      uint64_t v41 = v10;
      do
      {
        if (*(void *)v44 != v11) {
          objc_enumerationMutation(obj);
        }
        id v13 = *(void **)(*((void *)&v43 + 1) + 8 * v12);
        if (PLCanIncludeResourceInHints(v13, v6))
        {
          uint64_t v14 = [v6 width];
          uint64_t v15 = [v6 height];
          id v16 = v13;
          id v17 = [*(id *)(v8 + 2648) dataWithCapacity:3];
          id v18 = [v16 dataStoreKey];
          id v19 = [v18 keyData];

          if (v19)
          {
            uint64_t v20 = [v16 dataStore];
            if (v20)
            {
              char v21 = [(id)objc_opt_class() storeClassID];
              uint64_t v22 = [v16 unorientedWidth];
              uint64_t v23 = [v16 unorientedHeight];
              _H0 = 5120;
              if (v15 * v14 >= 1)
              {
                _H0 = 5120;
                if (v23 * v22 >= 1)
                {
                  _S0 = 1.0 / (float)((float)(v23 * v22) / (float)(v15 * v14));
                  __asm { FCVT            H0, S0 }
                }
              }
              char v30 = v21 & 3;
              if (fabsl(*(short float *)&_H0) == COERCE_SHORT_FLOAT(31744)) {
                short float v31 = COERCE_SHORT_FLOAT(31743);
              }
              else {
                short float v31 = *(short float *)&_H0;
              }
              if (objc_msgSend(v16, "recipeID", v39) == 65749) {
                LOWORD(v32) = COERCE_UNSIGNED_INT(1.0);
              }
              else {
                short float v32 = v31;
              }
              short float v47 = v32;
              uint64_t v33 = [v16 uniformTypeIdentifier];
              if ([v33 isPrimaryImageFormat]) {
                char v34 = 4;
              }
              else {
                char v34 = 0;
              }
              char v35 = v34 | v30;

              if ([v16 isDefaultOrientation]) {
                char v36 = 8;
              }
              else {
                char v36 = 0;
              }
              char v48 = v35 | v36;
              [v17 appendBytes:&v47 length:3];
              [v17 appendData:v19];
              id v37 = v17;
              unint64_t v8 = 0x1E4F1C000;
            }
            else
            {
              id v37 = 0;
            }
            uint64_t v10 = v41;

            uint64_t v11 = v39;
          }
          else
          {
            id v37 = 0;
            uint64_t v10 = v41;
          }

          if ([v37 length]) {
            [v40 appendData:v37];
          }
        }
        ++v12;
      }
      while (v10 != v12);
      uint64_t v10 = [obj countByEnumeratingWithState:&v43 objects:v49 count:16];
    }
    while (v10);
  }

  return v40;
}

+ (id)debugDescriptionForHintData:(id)a3 assetWidth:(int64_t)a4 assetHeight:(int64_t)a5 assetID:(id)a6
{
  id v10 = a6;
  uint64_t v11 = (objc_class *)MEMORY[0x1E4F28E78];
  id v12 = a3;
  id v13 = objc_alloc_init(v11);
  uint64_t v14 = [v10 uuid];
  [v13 appendFormat:@"Image request hints for %@", v14];

  uint64_t v15 = [v10 libraryID];
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  void v21[2] = __81__PLManagedAsset_RM__debugDescriptionForHintData_assetWidth_assetHeight_assetID___block_invoke;
  _OWORD v21[3] = &unk_1E5875470;
  id v16 = v13;
  id v22 = v16;
  id v23 = v10;
  id v17 = v10;
  [a1 enumerateImageRequestHintData:v12 assetWidth:a4 assetHeight:a5 libraryID:v15 startingOffset:0 assetID:v17 block:v21];

  id v18 = v23;
  id v19 = v16;

  return v19;
}

void __81__PLManagedAsset_RM__debugDescriptionForHintData_assetWidth_assetHeight_assetID___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v7 = *(void **)(a1 + 32);
  id v8 = a6;
  DCIM_NSStringFromCGSize();
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v9 = [v8 fileURLForAssetID:*(void *)(a1 + 40)];

  id v10 = [v9 path];
  [v7 appendFormat:@"\n  %@ %@", v11, v10];
}

+ (id)predicateToFetchResourcesAwaitingLocalAvailabilityChange
{
  return (id)objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K == %d AND %K >= %d", @"localAvailability", 0xFFFFFFFFLL, @"localAvailabilityTarget", 1);
}

+ (id)predicateExcludingLocallyUnavailableDynamicCPLResources
{
  if (predicateExcludingLocallyUnavailableDynamicCPLResources_s_onceToken != -1) {
    dispatch_once(&predicateExcludingLocallyUnavailableDynamicCPLResources_s_onceToken, &__block_literal_global_36_113773);
  }
  uint64_t v2 = (void *)predicateExcludingLocallyUnavailableDynamicCPLResources_s_predicate;
  return v2;
}

void __77__PLManagedAsset_RM__predicateExcludingLocallyUnavailableDynamicCPLResources__block_invoke()
{
  void v9[4] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F28BA0];
  uint64_t v1 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K = %d", @"dataStoreClassID", 0);
  v9[0] = v1;
  uint64_t v2 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K != %d", @"dataStoreSubtype", 0);
  v9[1] = v2;
  BOOL v3 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"%K < %d", @"localAvailability", 1);
  void v9[2] = v3;
  id v4 = [MEMORY[0x1E4F59940] predicateMatchingDynamicFingerprintForKey:@"fingerprint"];
  void v9[3] = v4;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:4];
  id v6 = [v0 andPredicateWithSubpredicates:v5];
  uint64_t v7 = [v0 notPredicateWithSubpredicate:v6];
  id v8 = (void *)predicateExcludingLocallyUnavailableDynamicCPLResources_s_predicate;
  predicateExcludingLocallyUnavailableDynamicCPLResources_s_predicate = v7;
}

+ (id)predicateFilteringForNonDerivativeRecipeIDs
{
  if (predicateFilteringForNonDerivativeRecipeIDs_s_onceToken != -1) {
    dispatch_once(&predicateFilteringForNonDerivativeRecipeIDs_s_onceToken, &__block_literal_global_113793);
  }
  uint64_t v2 = (void *)predicateFilteringForNonDerivativeRecipeIDs_s_predicate;
  return v2;
}

void __65__PLManagedAsset_RM__predicateFilteringForNonDerivativeRecipeIDs__block_invoke()
{
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F28F60], "predicateWithFormat:", @"(%K == %d) || (%K & %d) != %d", @"recipeID", 0, @"recipeID", 1, 1);
  uint64_t v1 = (void *)predicateFilteringForNonDerivativeRecipeIDs_s_predicate;
  predicateFilteringForNonDerivativeRecipeIDs_s_predicate = v0;
}

@end