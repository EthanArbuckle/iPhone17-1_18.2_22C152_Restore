uint64_t sub_100003D54(uint64_t a1)
{
  uint64_t vars8;

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(a1 + 32) _applicationBackgroundModes];

  return _objc_release_x1();
}

void sub_100003E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100003E9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    value = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    if (value)
    {
      v5 = value;
      if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_endpoint)
      {
        xpc_connection_t v6 = xpc_connection_create_from_endpoint(v5);
        if (v6)
        {
          xpc_connection_t v7 = v6;
          [*(id *)(a1 + 40) _connectClient:a2 withOutputConnection:v6];
          xpc_release(v7);
        }
      }
    }
  }
}

void sub_100003F3C(uint64_t a1)
{
  v2 = [*(id *)(*(void *)(a1 + 32) + 96) objectForKey:*(void *)(a1 + 40)];
  v3 = v2;
  if (v2)
  {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v2 unsignedIntValue];
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (!*(void *)(v4 + 96))
    {
      id v5 = objc_alloc_init((Class)NSMutableDictionary);
      uint64_t v6 = *(void *)(a1 + 32);
      xpc_connection_t v7 = *(void **)(v6 + 96);
      *(void *)(v6 + 96) = v5;

      uint64_t v4 = *(void *)(a1 + 32);
    }
    v8 = *(NSObject **)(v4 + 88);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100135144;
    v9[3] = &unk_1003A3268;
    v9[4] = v4;
    id v10 = *(id *)(a1 + 40);
    dispatch_async(v8, v9);
  }
}

void sub_1000040E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  id v2 = [*(id *)(a1 + 32) _managerClientForConnection:*(void *)(a1 + 40)];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1000042BC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _applicationStateChanged:v3];
}

void sub_1000043FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000044C0(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 136);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_100004500(uint64_t a1)
{
  xpc_object_t message = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  uint64_t v2 = *(void *)(a1 + 56);
  id v3 = [*(id *)(a1 + 40) _managerClientForConnection:*(void *)(a1 + 48)];
  (*(void (**)(uint64_t, void *, xpc_object_t))(v2 + 16))(v2, v3, message);

  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), message);
}

void sub_10000480C(id a1, PurchaseManagerClient *a2, OS_xpc_object *a3)
{
  if (a2)
  {
    int64_t v4 = [(PurchaseManagerClient *)a2 uniqueIdentifier];
    if (v4)
    {
      int64_t v5 = v4;
      xpc_object_t v6 = xpc_array_create(0, 0);
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_10000BC94;
      v7[3] = &unk_1003A8940;
      v7[4] = v6;
      v7[5] = v5;
      objc_msgSend(+[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase"), "readUsingTransactionBlock:", v7);
      xpc_dictionary_set_value(a3, "2", v6);
      xpc_release(v6);
    }
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }
  else
  {
    SSError();
    SSXPCDictionarySetCFObject();
  }
}

void sub_10000493C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _applicationBackgroundModes];
  [*(id *)(a1 + 32) _applicationState];
  [*(id *)(a1 + 32) _clientType];
  [*(id *)(a1 + 32) _isNewsstandApp];
  [*(id *)(a1 + 32) _isBetaApp];
  if (*(void *)(a1 + 40))
  {
    id v3 = dispatch_queue_create("com.apple.itunesstored.XPCClient.block", 0);
    dispatch_async(v3, *(dispatch_block_t *)(a1 + 40));
  }
}

id sub_100004C84(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 152);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_100004E88(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (!v3)
  {
LABEL_14:

    return;
  }
  id v4 = v3;
  char v5 = 0;
  uint64_t v6 = *(void *)v13;
  do
  {
    for (i = 0; i != v4; i = (char *)i + 1)
    {
      if (*(void *)v13 != v6) {
        objc_enumerationMutation(v2);
      }
      uint64_t v8 = *(void *)(*((void *)&v12 + 1) + 8 * i);
      id v9 = objc_msgSend(*(id *)(*(void *)(a1 + 40) + 48), "countForObject:", v8, (void)v12);
      [*(id *)(*(void *)(a1 + 40) + 48) removeObject:v8];
      v5 |= v9 == (id)1;
    }
    id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  }
  while (v4);

  if ((v5 & 1) != 0 && !*(unsigned char *)(a1 + 48))
  {
    id v2 = [*(id *)(a1 + 40) _applicationStateMonitor];
    if ([*(id *)(*(void *)(a1 + 40) + 48) count]) {
      uint64_t v10 = BKSApplicationStateAll;
    }
    else {
      uint64_t v10 = 0;
    }
    v11 = [*(id *)(*(void *)(a1 + 40) + 48) allObjects];
    [v2 updateInterestedBundleIDs:v11 states:v10];

    goto LABEL_14;
  }
}

uint64_t sub_100005020(uint64_t a1, void *a2)
{
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"process_id" equalToValue:*(void *)(a1 + 32)];
  char v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"manager_id" equalToValue:*(void *)(a1 + 40)];
  v10[0] = v4;
  v10[1] = v5;
  uint64_t v6 = (PurchaseManagerEntity *)+[PurchaseManagerEntity anyInDatabase:predicate:](PurchaseManagerEntity, "anyInDatabase:predicate:", [a2 database], +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:](SSSQLiteCompoundPredicate, "predicateMatchingAllPredicates:", +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v10, 2)));
  if (!v6)
  {
    id v7 = objc_alloc_init((Class)NSMutableDictionary);
    [v7 setObject:*(void *)(a1 + 40) forKey:@"manager_id"];
    [v7 setObject:*(void *)(a1 + 32) forKey:@"process_id"];
    [*(id *)(a1 + 48) URLBagType];
    [v7 setObject:SSGetStringForURLBagType() forKey:@"url_bag_type"];
    id v8 = [*(id *)(a1 + 48) clientIdentifierHeader];
    if (v8) {
      [v7 setObject:v8 forKey:@"client_id_header"];
    }
    uint64_t v6 = -[PurchaseManagerEntity initWithPropertyValues:inDatabase:]([PurchaseManagerEntity alloc], "initWithPropertyValues:inDatabase:", v7, [a2 database]);
  }
  [*(id *)(a1 + 48) setFinishesPurchases:1];
  objc_msgSend(*(id *)(a1 + 48), "setUniqueIdentifier:", -[PurchaseManagerEntity persistentID](v6, "persistentID"));

  return 1;
}

void sub_1000052C4(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSNumber) initWithInteger:*(unsigned int *)(a1 + 48)];
  [*(id *)(*(void *)(a1 + 32) + 96) setObject:v2 forKey:*(void *)(a1 + 40)];
  id v3 = *(NSObject **)(*(void *)(a1 + 32) + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100007664;
  block[3] = &unk_1003A4298;
  id v6 = *(id *)(a1 + 40);
  id v7 = v2;
  uint64_t v8 = *(void *)(a1 + 32);
  id v4 = v2;
  dispatch_async(v3, block);
}

uint64_t sub_1000054F0(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 152) = SSXPCDictionaryCopyCFObject();
  *(void *)(*(void *)(a1 + 32) + 160) = SSXPCDictionaryCopyCFObject();

  uint64_t result = SSXPCDictionaryCopyCFObject();
  *(void *)(*(void *)(a1 + 32) + 168) = result;
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(void *)(v3 + 24) || *(unsigned char *)(v3 + 144))
  {
    uint64_t result = xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 40), "1");
    *(unsigned char *)(*(void *)(a1 + 32) + 176) = result;
  }
  else
  {
    *(unsigned char *)(v3 + 176) = 1;
  }
  return result;
}

void sub_100005740(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 40);
  if (v3 <= 0)
  {
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v4 = *(id *)(a1 + 40);
    id v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v17;
      do
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)v17 != v7) {
            objc_enumerationMutation(v4);
          }
          [*(id *)(*(void *)(a1 + 32) + 96) removeObjectForKey:*(void *)(*((void *)&v16 + 1) + 8 * (void)v8)];
          uint64_t v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v6);
    }

    uint64_t v2 = *(void *)(a1 + 32);
  }
  id v9 = *(NSObject **)(v2 + 88);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100004E88;
  block[3] = &unk_1003A7350;
  id v10 = *(id *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 32);
  id v13 = v10;
  uint64_t v14 = v11;
  BOOL v15 = v3 > 0;
  dispatch_async(v9, block);
}

void sub_100005A80(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (!v2[12])
  {
    id v3 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 96);
    *(void *)(v4 + 96) = v3;

    uint64_t v2 = *(void **)(a1 + 32);
  }
  BOOL v6 = v2[5] > 0;
  uint64_t v7 = v2[11];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000A93C;
  block[3] = &unk_1003A7350;
  void block[4] = v2;
  id v9 = *(id *)(a1 + 40);
  BOOL v10 = v6;
  dispatch_async(v7, block);
}

void sub_100005B58(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) userInfo];
  id v3 = [v2 objectForKey:BKSApplicationStateDisplayIDKey];
  uint64_t v4 = *(void **)(a1 + 40);
  if (v4[1])
  {
    if ([v4 _clientType] == (id)1)
    {
      if ([v3 hasPrefix:*(void *)(*(void *)(a1 + 40) + 8)])
      {
        id v5 = [v2 objectForKey:BKSApplicationStateKey];
        unsigned int v6 = [v5 unsignedIntValue];

        if (v6 != *(_DWORD *)(*(void *)(a1 + 40) + 52))
        {
          uint64_t v7 = +[SSLogConfig sharedDaemonConfig];
          if (!v7)
          {
            uint64_t v7 = +[SSLogConfig sharedConfig];
          }
          unsigned int v8 = [v7 shouldLog];
          if ([v7 shouldLogToDisk]) {
            int v9 = v8 | 2;
          }
          else {
            int v9 = v8;
          }
          BOOL v10 = [v7 OSLogObject];
          if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
            v9 &= 2u;
          }
          if (v9)
          {
            uint64_t v11 = objc_opt_class();
            id v12 = v11;
            int v17 = 138412802;
            long long v18 = v11;
            __int16 v19 = 2112;
            v20 = v3;
            __int16 v21 = 2112;
            uint64_t Description = SBApplicationStateGetDescription();
            LODWORD(v15) = 32;
            id v13 = (void *)_os_log_send_and_compose_impl();

            if (!v13)
            {
LABEL_16:

              *(_DWORD *)(*(void *)(a1 + 40) + 52) = v6;
              uint64_t v14 = dispatch_get_global_queue(0, 0);
              block[0] = _NSConcreteStackBlock;
              block[1] = 3221225472;
              block[2] = sub_10009F078;
              block[3] = &unk_1003A3140;
              void block[4] = *(void *)(a1 + 40);
              dispatch_async(v14, block);

              goto LABEL_17;
            }
            BOOL v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v17, v15);
            free(v13);
            SSFileLog();
          }

          goto LABEL_16;
        }
      }
    }
  }
LABEL_17:
}

void sub_100005E10(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v4 = [v3 objectForKey:BKSApplicationStateKey];
  id v5 = [v4 unsignedIntValue];
  unsigned int v6 = [v3 objectForKey:BKSApplicationStateDisplayIDKey];

  [WeakRetained _setApplicationState:v5 forClientID:v6];
}

void sub_10000621C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) applicationState];
  id v3 = [*(id *)(a1 + 32) copyApplicationBackgroundModes];
  id v4 = [*(id *)(a1 + 32) clientType];
  id v5 = +[DownloadsDatabase downloadsDatabase];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100008490;
  v9[3] = &unk_1003A7830;
  id v6 = *(id *)(a1 + 32);
  id v13 = v4;
  unsigned int v14 = v2;
  id v10 = v6;
  id v11 = v3;
  id v12 = *(id *)(a1 + 40);
  id v7 = v3;
  id v8 = [v5 modifyUsingTransactionBlock:v9];
}

void sub_10000632C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = +[DownloadsDatabase downloadsDatabase];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100008C94;
  v12[3] = &unk_1003A7768;
  uint64_t v8 = *(void *)(a1 + 32);
  int v9 = *(void **)(a1 + 40);
  id v13 = v5;
  uint64_t v14 = v8;
  id v15 = v9;
  id v16 = v6;
  id v10 = v6;
  id v11 = v5;
  [v7 readUsingTransactionBlock:v12];
}

void sub_100006418(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 40) setDisconnectBlock:0];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    id v3 = [objc_alloc((Class)SSXPCConnection) initWithXPCConnection:*(void *)(a1 + 40)];
  }
  else {
    id v3 = 0;
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), v3);
  if (v2) {

  }
  objc_initWeak(&location, *(id *)(a1 + 32));
  id v4 = *(void **)(*(void *)(a1 + 32) + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10009EEB8;
  v5[3] = &unk_1003A4248;
  objc_copyWeak(&v6, &location);
  [v4 setDisconnectBlock:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&location);
}

void sub_10000651C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100006AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100006C0C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _clientType];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_100006D08(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _applicationStateMonitor];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 mostElevatedApplicationStateForPID:*(unsigned int *)(a1 + 48)];
}

void sub_100006D68(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _applicationStateMonitor];
  uint64_t v2 = [v5 bundleInfoValueForKey:*(void *)(a1 + 40) PID:*(unsigned int *)(a1 + 56)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100006EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000071E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_connection_t v4 = xpc_connection_create_from_endpoint(*(xpc_endpoint_t *)(a1 + 32));
  if (!v4)
  {
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5)
    {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    id v10 = [v5 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      int v11 = v9;
    }
    else {
      int v11 = v9 & 2;
    }
    if (v11)
    {
      id v12 = objc_opt_class();
      id v13 = *(void **)(a1 + 48);
      int v34 = 138412546;
      v35 = v12;
      __int16 v36 = 2112;
      id v37 = v13;
      id v14 = v12;
      LODWORD(v29) = 22;
      id v15 = (void *)_os_log_send_and_compose_impl();

      if (!v15) {
        goto LABEL_30;
      }
      id v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v34, v29);
      free(v15);
      SSFileLog();
    }

    goto LABEL_30;
  }
  objc_opt_class();
  id v5 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  id v6 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 56), "3");
  [v3 setClientOptions:v6];

  [v3 setOutputConnectionWithConnection:v4];
  if (v5)
  {
    id v7 = +[NSSet setWithArray:v5];
    [v3 setDownloadKinds:v7];
  }
  else
  {
    [v3 setDownloadKinds:0];
  }
  id v16 = +[SSLogConfig sharedDaemonConfig];
  if (!v16)
  {
    id v16 = +[SSLogConfig sharedConfig];
  }
  unsigned int v17 = [v16 shouldLog];
  if ([v16 shouldLogToDisk]) {
    int v18 = v17 | 2;
  }
  else {
    int v18 = v17;
  }
  __int16 v19 = [v16 OSLogObject];
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
    int v20 = v18;
  }
  else {
    int v20 = v18 & 2;
  }
  if (v20)
  {
    __int16 v21 = v4;
    v22 = objc_opt_class();
    id v30 = v22;
    v23 = [v3 persistenceIdentifier];
    [v3 downloadKinds];
    int v34 = 138413058;
    v35 = v22;
    xpc_connection_t v4 = v21;
    __int16 v36 = 2112;
    id v37 = v3;
    __int16 v38 = 2112;
    v39 = v23;
    __int16 v40 = 2112;
    id v41 = (id)objc_claimAutoreleasedReturnValue();
    LODWORD(v29) = 42;
    v24 = (void *)_os_log_send_and_compose_impl();

    if (v24)
    {
      v25 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v34, v29);
      free(v24);
      SSFileLog();
    }
  }
  else
  {
  }
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_10000621C;
  v31[3] = &unk_1003A3268;
  id v26 = v3;
  id v32 = v26;
  id v33 = *(id *)(a1 + 48);
  [v26 loadSpringBoardStateWithCompletionBlock:v31];
  xpc_object_t v27 = xpc_dictionary_create(0, 0, 0);
  v28 = [v26 outputConnection];
  [v28 sendMessage:v27];

LABEL_30:
}

void sub_100007664(void *a1)
{
  id v3 = objc_alloc_init((Class)NSMutableDictionary);
  [v3 setObject:a1[4] forKey:BKSApplicationStateDisplayIDKey];
  [v3 setObject:a1[5] forKey:BKSApplicationStateKey];
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"SpringBoardUtilityApplicationStateChangeNotification" object:a1[6] userInfo:v3];
}

void sub_100007A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100008030(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (!v2[32])
  {
    [v2 _garbageCollectInflightPurchases];
    *(unsigned char *)(*(void *)(a1 + 32) + 32) = 1;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v3 = +[Daemon daemon];

  return [v3 releaseKeepAliveAssertion:@"com.apple.itunesstored.PurchaseController"];
}

void sub_1000080A0(uint64_t a1)
{
  [*(id *)(a1 + 32) _clientForMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48)];
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v3 = *(void **)(a1 + 48);

  xpc_release(v3);
}

uint64_t sub_100008490(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_connection_t v4 = *(void **)(a1 + 32);
  id v5 = [v3 database];
  [v4 reloadPersistenceStateInDatabase:v5];

  if (*(void *)(a1 + 56) == 1)
  {
    int v6 = *(_DWORD *)(a1 + 64);
    BOOL v7 = v6 == 32 || v6 == 8;
    if (v7 && [*(id *)(a1 + 40) containsObject:@"newsstand-content"]) {
      [v3 prioritizeDownloadsWithKind:SSDownloadKindNewsstandContent clientID:*(void *)(a1 + 48)];
    }
    unsigned int v8 = *(void **)(a1 + 32);
    int v9 = [v3 database];
    [v8 addClientEntityToDatabase:v9];
  }
  return 1;
}

uint64_t sub_1000085EC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newSessionDescription];
  id v3 = [[DownloadsSession alloc] initWithSessionDescriptor:v2];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

  return 1;
}

void sub_100008C94(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_object_t v32 = xpc_array_create(0, 0);
  int v34 = [v3 database];
  xpc_connection_t v4 = objc_opt_new();
  id v5 = [*(id *)(a1 + 32) prefetchedDownloadProperties];
  id v6 = [v5 mutableCopy];

  BOOL v7 = *(void **)(a1 + 40);
  v58[0] = _NSConcreteStackBlock;
  v58[1] = 3221225472;
  v58[2] = sub_10000BC28;
  v58[3] = &unk_1003A76F0;
  id v8 = v6;
  id v59 = v8;
  id v9 = v4;
  id v60 = v9;
  [v7 _filterAndTranslateProperties:v8 usingBlock:v58];
  id v10 = (char *)[v8 count];
  id v11 = objc_alloc((Class)NSMutableArray);
  id v12 = objc_msgSend(v11, "initWithObjects:", SSDownloadPropertyIsDiverted, SSDownloadPropertyDivertedJobID, 0);
  id v13 = *(void **)(a1 + 40);
  v55[0] = _NSConcreteStackBlock;
  v55[1] = 3221225472;
  v55[2] = sub_10000BBBC;
  v55[3] = &unk_1003A76F0;
  id v14 = v12;
  id v56 = v14;
  id v15 = v9;
  id v57 = v15;
  [v13 _filterAndTranslateProperties:v14 usingBlock:v55];
  id v16 = [v14 count];
  unsigned int v17 = [*(id *)(a1 + 32) prefetchedDownloadExternalProperties];
  id v18 = [v17 mutableCopy];

  uint64_t v19 = (uint64_t)&v10[(void)v16];
  v45[0] = _NSConcreteStackBlock;
  v45[1] = 3221225472;
  v45[2] = sub_10013DBF0;
  v45[3] = &unk_1003A7718;
  v51 = &v10[(void)v16];
  id v52 = [v18 count];
  id v20 = v32;
  id v46 = v20;
  v53 = v10;
  id v33 = v8;
  id v47 = v33;
  id v54 = v16;
  id v30 = v14;
  id v48 = v30;
  id v21 = v18;
  id v49 = v21;
  id v31 = v3;
  id v50 = v31;
  v22 = objc_retainBlock(v45);
  id v23 = v15;
  if (v19 < 1)
  {
    v25 = 0;
    v24 = 0;
  }
  else
  {
    v24 = malloc_type_malloc(8 * v19, 0x80040B8603338uLL);
    v25 = malloc_type_malloc(8 * v19, 0x80040B8603338uLL);
    objc_msgSend(v23, "getObjects:range:", v24, 0, v19);
  }
  id v26 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 48), "2");
  xpc_object_t v27 = v26;
  if (v26 && xpc_get_type(v26) == (xpc_type_t)&_xpc_type_array && xpc_array_get_count(v27))
  {
    unsigned __int8 v29 = [*(id *)(a1 + 32) hasEntitlements];
    applier[0] = _NSConcreteStackBlock;
    applier[1] = 3221225472;
    applier[2] = sub_10013DECC;
    applier[3] = &unk_1003A7740;
    id v36 = v34;
    unsigned __int8 v42 = v29;
    id v37 = *(id *)(a1 + 32);
    uint64_t v39 = v19;
    __int16 v40 = v25;
    id v41 = v24;
    __int16 v38 = v22;
    xpc_array_apply(v27, applier);

    v28 = v36;
  }
  else
  {
    v28 = [*(id *)(a1 + 32) downloadsQueryForMessage:*(void *)(a1 + 48) database:v34];
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_10013DEBC;
    v43[3] = &unk_1003A67F8;
    v44 = v22;
    [v28 enumeratePersistentIDsAndProperties:v24 count:v19 usingBlock:v43];
  }
  if (v24) {
    free(v24);
  }
  if (v25) {
    free(v25);
  }

  if (v23) {
    CFRelease(v23);
  }
  xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v20);
}

BOOL sub_100009980(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
    return 0;
  }
  id v2 = [*(id *)(a1 + 32) changeset];
  if (([v2 downloadChangeTypes] & 0x20) != 0)
  {
    id v3 = [v2 restorableDownloadIDs];
  }
  else
  {
    id v3 = 0;
  }
  id v5 = [v2 policyChangedDownloadIDs];
  if ([v5 count])
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    id v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      id v10 = objc_opt_class();
      id v11 = v10;
      int v35 = 138412546;
      id v36 = v10;
      __int16 v37 = 2048;
      id v38 = [v5 count];
      LODWORD(v33) = 22;
      id v31 = &v35;
      id v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_18:

        id v13 = [*(id *)(*(void *)(a1 + 40) + 40) restartDownloadsWithIdentifiers:v5];
        id v14 = [v13 mutableCopy];

        goto LABEL_20;
      }
      id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v35, v33);
      free(v12);
      id v31 = (int *)v9;
      SSFileLog();
    }

    goto LABEL_18;
  }
  id v14 = 0;
LABEL_20:
  id v15 = objc_msgSend(v2, "pipelineRestarts", v31);
  id v16 = [v15 mutableCopy];

  if ([v14 count]) {
    [v16 minusOrderedSet:v14];
  }
  if (![v16 count]) {
    goto LABEL_36;
  }
  unsigned int v17 = +[SSLogConfig sharedDaemonConfig];
  if (!v17)
  {
    unsigned int v17 = +[SSLogConfig sharedConfig];
  }
  unsigned int v18 = [v17 shouldLog];
  if ([v17 shouldLogToDisk]) {
    int v19 = v18 | 2;
  }
  else {
    int v19 = v18;
  }
  id v20 = [v17 OSLogObject];
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
    int v21 = v19;
  }
  else {
    int v21 = v19 & 2;
  }
  if (!v21) {
    goto LABEL_34;
  }
  v22 = v2;
  id v23 = v5;
  v24 = v3;
  v25 = objc_opt_class();
  id v34 = v25;
  id v26 = [v16 count];
  int v35 = 138412546;
  id v36 = v25;
  id v3 = v24;
  id v5 = v23;
  id v2 = v22;
  __int16 v37 = 2048;
  id v38 = v26;
  LODWORD(v33) = 22;
  xpc_object_t v32 = &v35;
  xpc_object_t v27 = (void *)_os_log_send_and_compose_impl();

  if (v27)
  {
    id v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, &v35, v33);
    free(v27);
    xpc_object_t v32 = (int *)v20;
    SSFileLog();
LABEL_34:
  }
  v28 = [*(id *)(*(void *)(a1 + 40) + 40) restartDownloadsWithIdentifiers:v16];
  [v14 unionOrderedSet:v28];

LABEL_36:
  if (objc_msgSend(v14, "count", v32) || objc_msgSend(v3, "count"))
  {
    unsigned __int8 v29 = [v2 pipelineAdditions];
    id v30 = [v29 mutableCopy];

    if ([v14 count]) {
      [v30 minusOrderedSet:v14];
    }
    if ([v3 count]) {
      [v30 minusOrderedSet:v3];
    }
  }
  else
  {
    id v30 = [v2 pipelineAdditions];
  }
  if ([v30 count]) {
    [*(id *)(*(void *)(a1 + 40) + 40) addDownloadsWithIdentifiers:v30];
  }

  return *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) != 0;
}

void sub_10000A178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000A93C(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 48))
  {
    id v2 = objc_alloc_init((Class)NSCountedSet);
    uint64_t v3 = *(void *)(a1 + 32);
    xpc_connection_t v4 = *(void **)(v3 + 48);
    *(void *)(v3 + 48) = v2;
  }
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v5 = *(id *)(a1 + 40);
  id v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (!v6) {
    goto LABEL_16;
  }
  id v7 = v6;
  LOBYTE(v8) = 0;
  uint64_t v9 = *(void *)v14;
  do
  {
    for (i = 0; i != v7; i = (char *)i + 1)
    {
      if (*(void *)v14 != v9) {
        objc_enumerationMutation(v5);
      }
      uint64_t v11 = *(void *)(*((void *)&v13 + 1) + 8 * i);
      objc_msgSend(*(id *)(*(void *)(a1 + 32) + 48), "addObject:", v11, (void)v13);
      BOOL v8 = v8 || [*(id *)(*(void *)(a1 + 32) + 48) countForObject:v11] == (id)1;
    }
    id v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  }
  while (v7);

  if (v8 && !*(unsigned char *)(a1 + 48))
  {
    id v5 = [*(id *)(a1 + 32) _applicationStateMonitor];
    id v12 = [*(id *)(*(void *)(a1 + 32) + 48) allObjects];
    [v5 updateInterestedBundleIDs:v12 states:BKSApplicationStateAll];

LABEL_16:
  }
}

void sub_10000AAE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 72);
  if (v3)
  {
    if (*(void *)(v2 + 80))
    {
      [v3 addObject:*(void *)(a1 + 40)];
      if ([*(id *)(*(void *)(a1 + 32) + 72) countForObject:*(void *)(a1 + 40)] == (id)1)
      {
        [*(id *)(a1 + 40) UTF8String];
        id v4 = (id)os_transaction_create();
        [*(id *)(*(void *)(a1 + 32) + 80) setObject:v4 forKeyedSubscript:*(void *)(a1 + 40)];
      }
    }
  }
}

void sub_10000AB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = +[DownloadEntity databasePropertyToGetClientProperty:a2];
  id v6 = (id)v5;
  if (v5) {
    [*(id *)(a1 + 32) addObject:v5];
  }
  else {
    [*(id *)(a1 + 40) addIndex:a3];
  }
}

void sub_10000B0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000B47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000B8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000B988(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.DownloadController"];
}

void sub_10000BAAC(uint64_t a1)
{
}

uint64_t sub_10000BAC0(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 152);
  return result;
}

void sub_10000BADC(uint64_t a1)
{
}

id sub_10000BB2C(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 160);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_10000BB6C(uint64_t a1, void *a2)
{
  id result = objc_msgSend(*(id *)(a1 + 32), "_newResponsesToPurchasesForClient:inDatabase:", *(void *)(a1 + 40), objc_msgSend(a2, "database"));
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

void sub_10000BBBC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 removeObjectsAtIndexes:a2];
  [*(id *)(a1 + 40) addObjectsFromArray:v6];
}

void sub_10000BC28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 removeObjectsAtIndexes:a2];
  [*(id *)(a1 + 40) addObjectsFromArray:v6];
}

id sub_10000BC94(uint64_t a1, void *a2)
{
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"client_id" equalToLongLong:*(void *)(a1 + 40)];
  CFStringRef v9 = @"order_id";
  id v5 = +[PurchaseEntity queryWithDatabase:predicate:orderingProperties:](PurchaseEntity, "queryWithDatabase:predicate:orderingProperties:", [a2 database], v4, +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001936FC;
  v7[3] = &unk_1003A32B8;
  v7[4] = *(void *)(a1 + 32);
  CFStringRef v8 = @"encoded_data";
  return [v5 enumeratePersistentIDsAndProperties:&v8 count:1 usingBlock:v7];
}

uint64_t sub_10000BDC8(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 176);
  return result;
}

id sub_10000BDE4(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 168);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

uint64_t sub_10000BE24(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 160) = *(unsigned char *)(result + 40);
  return result;
}

uint64_t sub_10000BE3C(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_10000BE74(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 136) = *(unsigned char *)(result + 40);
  return result;
}

uint64_t sub_10000BE8C(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 152) = *(void *)(result + 40);
  return result;
}

uint64_t sub_10000BEA0(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 136);
  return result;
}

void *sub_10000BEBC(void *result)
{
  id v1 = *(void **)(result[4] + 136);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    id result = [(id)v2[4] _copyFilteredKindsForKinds:v2[5]];
    *(void *)(v2[4] + 136) = result;
  }
  return result;
}

void sub_10000BF08(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
  [*(id *)(*(void *)(a1 + 32) + 40) sendMessage:v2];

  xpc_release(v2);
}

id sub_10000BF6C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _applicationState];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_10000BFA0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) object];
  [v1 _notifyProgressTickTimer];
}

uint64_t sub_10000C518(uint64_t a1)
{
  return 1;
}

void sub_10000C800(uint64_t a1)
{
  id v3 = objc_alloc_init((Class)NSFileManager);
  xpc_object_t v2 = [*(id *)(a1 + 32) stringByDeletingLastPathComponent];
  [v3 createDirectoryAtPath:v2 withIntermediateDirectories:1 attributes:0 error:0];
}

void sub_10000C878(id a1, SSSQLiteDatabase *a2)
{
}

uint64_t sub_10000C904()
{
  qword_100401BE0 = (uint64_t)objc_alloc_init((Class)objc_opt_class());

  return _objc_release_x1();
}

void sub_10000CA10(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.DownloadsDatabase"];
}

void sub_10000CB38(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.DownloadsDatabase"];
}

id sub_10000CC34(uint64_t a1)
{
  return [*(id *)(a1 + 32) modifyUsingPurchaseTransactionBlock:*(void *)(a1 + 40)];
}

id sub_10000CCF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) modifyUsingTransactionBlock:*(void *)(a1 + 40)];
}

id sub_10000CDAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) modifyExternalUsingTransactionBlock:*(void *)(a1 + 40)];
}

void sub_10000CF64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000CF80(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = result;
  return result;
}

id sub_10000D05C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) updateAfterSessionsChanged:*(void *)(a1 + 40)];
}

id sub_10000D06C(uint64_t a1)
{
  return (id)+[RestoreBackupOperation cancelApplicationRestoresWithBundleIDs:*(void *)(a1 + 32)];
}

id *sub_10000D52C(id *result, uint64_t a2, void *a3)
{
  if (*a3) {
    return (id *)objc_msgSend(result[4], "addObject:");
  }
  return result;
}

void sub_10000EEFC(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_10000F4D4(uint64_t a1, id a2, void *a3)
{
  if (*a3)
  {
    id v5 = objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
    if (v5)
    {
      if ([v5 longLongValue] != a2)
      {
        id v6 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
        [*(id *)(a1 + 40) addObject:v6];
      }
    }
  }
}

void sub_10000F728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000F748(uint64_t a1, uint64_t a2)
{
  CFStringRef v8 = [[DownloadEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  unsigned int v4 = objc_msgSend(*(id *)(a1 + 40), "_resetDownload:withValues:isUserIntiated:");
  if (v4)
  {
    id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
    [*(id *)(a1 + 48) addObject:v5];
  }
  uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(unsigned char *)(v6 + 24)) {
    char v7 = 1;
  }
  else {
    char v7 = v4;
  }
  *(unsigned char *)(v6 + 24) = v7;
}

void sub_1000101FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100010224(uint64_t a1, uint64_t a2)
{
}

void sub_100010234(uint64_t a1)
{
}

id sub_100010240(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, unsigned char *a5)
{
  id result = *a3;
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = result;
  *a5 = 1;
  return result;
}

void sub_10001081C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001083C(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, unsigned char *a5)
{
  id result = *a3;
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = result;
  *a5 = 1;
  return result;
}

uint64_t start()
{
  _set_user_dir_suffix();
  objc_msgSend(+[Daemon daemon](Daemon, "daemon"), "start");
  do
  {
    CFRunLoopRunResult v2 = CFRunLoopRunInMode(kCFRunLoopDefaultMode, 15.0, 1u);
  }
  while ((v2 - 3) < 0xFFFFFFFE);
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  if (os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_INFO)) {
    int v6 = v5;
  }
  else {
    int v6 = v5 & 2;
  }
  if (v6)
  {
    v11[0] = 0;
    LODWORD(v10) = 2;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      CFStringRef v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, v11, v10);
      free(v8);
      SSFileLog();
    }
  }
  return 0;
}

void sub_100013600(uint64_t a1)
{
  id v14 = [*(id *)(a1 + 32) _dictionary];
  id v2 = objc_msgSend(objc_msgSend(v14, "objectForKey:", @"assetOrdering"), "mutableCopy");
  if (!v2) {
    id v2 = objc_alloc_init((Class)NSMutableArray);
  }
  uint64_t v15 = a1;
  id v3 = [*(id *)(a1 + 40) manifestItemDictionary];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id obj = v2;
  id v4 = [v2 countByEnumeratingWithState:&v21 objects:v26 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v22;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v22 != v6) {
          objc_enumerationMutation(obj);
        }
        CFStringRef v8 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        id v9 = [v8 count];
        if (v9 == [v3 count])
        {
          long long v19 = 0u;
          long long v20 = 0u;
          long long v17 = 0u;
          long long v18 = 0u;
          id v10 = [v8 countByEnumeratingWithState:&v17 objects:v25 count:16];
          if (!v10) {
            goto LABEL_22;
          }
          id v11 = v10;
          uint64_t v12 = *(void *)v18;
LABEL_11:
          uint64_t v13 = 0;
          while (1)
          {
            if (*(void *)v18 != v12) {
              objc_enumerationMutation(v8);
            }
            if (!objc_msgSend(objc_msgSend(v8, "objectForKey:", *(void *)(*((void *)&v17 + 1) + 8 * v13)), "isEqual:", objc_msgSend(v3, "objectForKey:", *(void *)(*((void *)&v17 + 1) + 8 * v13))))break; {
            if (v11 == (id)++v13)
            }
            {
              id v11 = [v8 countByEnumeratingWithState:&v17 objects:v25 count:16];
              if (v11) {
                goto LABEL_11;
              }
              goto LABEL_22;
            }
          }
        }
      }
      id v5 = [obj countByEnumeratingWithState:&v21 objects:v26 count:16];
    }
    while (v5);
  }
  if (v3)
  {
    [obj addObject:v3];
    [v14 setObject:obj forKey:@"assetOrdering"];
    [*(id *)(v15 + 32) _writeToFile];
  }
LABEL_22:
}

void sub_1000138B0(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 8) = 0;
}

id sub_1000139A0(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_dictionary"), "objectForKey:", @"assetOrdering");
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id result = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v10;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = [[PurchaseManifestItem alloc] initWithManifestItemDictionary:*(void *)(*((void *)&v9 + 1) + 8 * (void)v6)];
        if (v7)
        {
          CFStringRef v8 = v7;
          [*(id *)(a1 + 40) addObject:v7];
        }
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id result = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
      id v4 = result;
    }
    while (result);
  }
  return result;
}

void sub_100013B3C(uint64_t a1)
{
  id v38 = [*(id *)(a1 + 32) _dictionary];
  id v1 = objc_msgSend(objc_msgSend(v38, "objectForKey:", @"assetOrdering"), "mutableCopy");
  if (!v1) {
    id v1 = objc_alloc_init((Class)NSMutableArray);
  }
  id v2 = objc_alloc_init((Class)NSMutableSet);
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  id v3 = [v1 countByEnumeratingWithState:&v51 objects:v60 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v52;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v52 != v5) {
          objc_enumerationMutation(v1);
        }
        uint64_t v7 = [[PurchaseManifestItem alloc] initWithManifestItemDictionary:*(void *)(*((void *)&v51 + 1) + 8 * i)];
        CFStringRef v8 = [(PurchaseManifestItem *)v7 relativeMetadataPath];
        if (v8) {
          [v2 addObject:v8];
        }
      }
      id v4 = [v1 countByEnumeratingWithState:&v51 objects:v60 count:16];
    }
    while (v4);
  }
  id v46 = [*(id *)(*(void *)(a1 + 32) + 24) stringByDeletingLastPathComponent];
  id v9 = +[SSLogConfig sharedDaemonConfig];
  if (!v9) {
    id v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  if (os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_INFO)) {
    int v12 = v11;
  }
  else {
    int v12 = v11 & 2;
  }
  if (v12)
  {
    uint64_t v13 = objc_opt_class();
    int v56 = 138412546;
    uint64_t v57 = v13;
    __int16 v58 = 2112;
    id v59 = v46;
    LODWORD(v36) = 22;
    int v35 = &v56;
    uint64_t v14 = _os_log_send_and_compose_impl();
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      long long v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v56, v36);
      free(v15);
      int v35 = (int *)v16;
      SSFileLog();
    }
  }
  id v37 = objc_alloc_init((Class)NSFileManager);
  id v17 = [v37 contentsOfDirectoryAtPath:v46 error:0];
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id v18 = [v17 countByEnumeratingWithState:&v47 objects:v55 count:16];
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = *(void *)v48;
    uint64_t v45 = SSDownloadMetadataKeyAdditionalInfo;
    uint64_t v42 = SSDownloadMetadataKeyArtworkFileName;
    uint64_t v41 = SSDownloadMetadataKeyMediaFileName;
    uint64_t v40 = SSDownloadMetadataKeyXMLFeedFileName;
    id v43 = v17;
    v44 = v1;
    do
    {
      for (j = 0; j != v19; j = (char *)j + 1)
      {
        if (*(void *)v48 != v20) {
          objc_enumerationMutation(v17);
        }
        long long v22 = *(void **)(*((void *)&v47 + 1) + 8 * (void)j);
        if (objc_msgSend(objc_msgSend(v22, "pathExtension", v35), "isEqualToString:", @"plist")
          && ([v2 containsObject:v22] & 1) == 0)
        {
          long long v23 = -[StoreDownload initWithContentsOfFile:]([StoreDownload alloc], "initWithContentsOfFile:", [v46 stringByAppendingPathComponent:v22]);
          id v24 = [(StoreDownload *)v23 valueForMetadataKey:v45];
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            v25 = objc_alloc_init(PurchaseManifestItem);
            [(PurchaseManifestItem *)v25 setRelativeMetadataPath:v22];
            id v26 = [v24 objectForKey:v42];
            objc_opt_class();
            if (objc_opt_isKindOfClass()) {
              [(PurchaseManifestItem *)v25 setRelativeArtworkPath:v26];
            }
            id v27 = [v24 objectForKey:v41];
            objc_opt_class();
            if (objc_opt_isKindOfClass()) {
              [(PurchaseManifestItem *)v25 setRelativeMediaAssetPath:v27];
            }
            id v28 = [v24 objectForKey:v40];
            objc_opt_class();
            if (objc_opt_isKindOfClass()) {
              [(PurchaseManifestItem *)v25 setRelativeFeedAssetPath:v28];
            }
            id v29 = +[SSLogConfig sharedDaemonConfig];
            if (!v29) {
              id v29 = +[SSLogConfig sharedConfig];
            }
            unsigned int v30 = [v29 shouldLog];
            if ([v29 shouldLogToDisk]) {
              v30 |= 2u;
            }
            if (!os_log_type_enabled((os_log_t)[v29 OSLogObject], OS_LOG_TYPE_INFO)) {
              v30 &= 2u;
            }
            if (v30)
            {
              uint64_t v31 = objc_opt_class();
              int v56 = 138412546;
              uint64_t v57 = v31;
              __int16 v58 = 2112;
              id v59 = v22;
              LODWORD(v36) = 22;
              int v35 = &v56;
              uint64_t v32 = _os_log_send_and_compose_impl();
              if (v32)
              {
                uint64_t v33 = (void *)v32;
                id v34 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v32, 4, &v56, v36);
                free(v33);
                int v35 = (int *)v34;
                SSFileLog();
              }
            }
            objc_msgSend(v2, "addObject:", v22, v35);
            id v1 = v44;
            objc_msgSend(v44, "addObject:", -[PurchaseManifestItem manifestItemDictionary](v25, "manifestItemDictionary"));

            id v17 = v43;
          }
        }
      }
      id v19 = [v17 countByEnumeratingWithState:&v47 objects:v55 count:16];
    }
    while (v19);
  }

  [v38 setObject:v1 forKey:@"assetOrdering"];
  [*(id *)(a1 + 32) _writeToFile];
}

void sub_100014978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
}

void sub_100014A08(uint64_t a1, uint64_t a2)
{
}

void sub_100014A18(uint64_t a1)
{
}

id sub_100014A24(uint64_t a1)
{
  id v30 = [*(id *)(a1 + 32) _dictionary];
  id v2 = [v30 objectForKey:@"assetOrdering"];
  uint64_t v3 = (uint64_t)[v2 count];
  if (v3 >= 1)
  {
    uint64_t v4 = v3;
    uint64_t v31 = v2;
    do
    {
      uint64_t v5 = v4--;
      id v6 = [v2 objectAtIndex:v4];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v7 = [v6 objectForKey:@"relativeMediaAssetPath"];
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if ([*(id *)(a1 + 40) containsObject:v7])
          {
            id v8 = +[SSLogConfig sharedDaemonConfig];
            if (!v8) {
              id v8 = +[SSLogConfig sharedConfig];
            }
            unsigned int v9 = [v8 shouldLog];
            if ([v8 shouldLogToDisk]) {
              int v10 = v9 | 2;
            }
            else {
              int v10 = v9;
            }
            if (!os_log_type_enabled((os_log_t)[v8 OSLogObject], OS_LOG_TYPE_INFO)) {
              v10 &= 2u;
            }
            if (v10)
            {
              uint64_t v11 = objc_opt_class();
              int v32 = 138412546;
              uint64_t v33 = v11;
              __int16 v34 = 2112;
              id v35 = v7;
              LODWORD(v29) = 22;
              id v28 = &v32;
              uint64_t v12 = _os_log_send_and_compose_impl();
              if (v12)
              {
                uint64_t v13 = (void *)v12;
                uint64_t v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v32, v29);
                free(v13);
                id v28 = (int *)v14;
                SSFileLog();
              }
            }
            objc_msgSend(*(id *)(a1 + 48), "addObject:", objc_msgSend(*(id *)(a1 + 56), "stringByAppendingPathComponent:", v7, v28));
            for (uint64_t i = 0; i != 3; ++i)
            {
              id v16 = [v6 objectForKey:off_1003A33C8[i]];
              objc_opt_class();
              if (objc_opt_isKindOfClass()) {
                objc_msgSend(*(id *)(a1 + 64), "addObject:", objc_msgSend(*(id *)(a1 + 56), "stringByAppendingPathComponent:", v16));
              }
            }
            id v2 = v31;
            [v31 removeObjectAtIndex:v4];
          }
        }
      }
    }
    while (v5 > 1);
  }
  if (v2) {
    [v30 setObject:v2 forKey:@"assetOrdering"];
  }
  id v17 = [*(id *)(a1 + 48) count];
  if (v17 != [*(id *)(a1 + 40) count])
  {
    id v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18) {
      id v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = [v18 shouldLog];
    if ([v18 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    if (!os_log_type_enabled((os_log_t)[v18 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v20 &= 2u;
    }
    if (v20)
    {
      uint64_t v21 = objc_opt_class();
      long long v22 = [*(id *)(a1 + 40) count];
      long long v23 = [*(id *)(a1 + 48) count];
      int v32 = 138412546;
      uint64_t v33 = v21;
      __int16 v34 = 2048;
      id v35 = (id)(v22 - v23);
      LODWORD(v29) = 22;
      id v28 = &v32;
      uint64_t v24 = _os_log_send_and_compose_impl();
      if (v24)
      {
        v25 = (void *)v24;
        id v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v32, v29);
        free(v25);
        id v28 = (int *)v26;
        SSFileLog();
      }
    }

    *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) = +[NSError errorWithDomain:SSErrorDomain code:600 userInfo:0];
  }
  id result = objc_msgSend(*(id *)(a1 + 32), "_writeToFile", v28);
  if ((result & 1) == 0) {
    return [*(id *)(a1 + 48) removeAllObjects];
  }
  return result;
}

void sub_100014EE0(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  if (SSXPCConnectionHasEntitlement())
  {
    int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1");
    int64_t v4 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "2");
    id v5 = [*(id *)(a1 + 48) _sharedManifestWithManifestType:int64];
    if (v5)
    {
      id v6 = v5;
      id v7 = [v5 purchaseManifestItems];
      long long v17 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      id v8 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = *(void *)v18;
        do
        {
          uint64_t v11 = 0;
          do
          {
            if (*(void *)v18 != v10) {
              objc_enumerationMutation(v7);
            }
            uint64_t v12 = *(void **)(*((void *)&v17 + 1) + 8 * (void)v11);
            switch(v4)
            {
              case 0:
                id v13 = [v12 relativeArtworkPath];
                goto LABEL_13;
              case 1:
                id v13 = [v12 relativeMediaAssetPath];
                goto LABEL_13;
              case 2:
                id v13 = [v12 relativeMetadataPath];
                goto LABEL_13;
              case 3:
                id v13 = [v12 relativeFeedAssetPath];
LABEL_13:
                id v14 = v13;
                break;
              default:
                id v14 = 0;
                break;
            }
            objc_opt_class();
            if (objc_opt_isKindOfClass()) {
              [v2 addObject:v14];
            }
            uint64_t v11 = (char *)v11 + 1;
          }
          while (v9 != v11);
          id v15 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
          id v9 = v15;
        }
        while (v15);
      }
      objc_msgSend(objc_msgSend(v6, "path"), "stringByDeletingLastPathComponent");
    }
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  SSXPCDictionarySetCFObject();
  SSXPCDictionarySetCFObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
  xpc_release(reply);
}

void sub_100015210(uint64_t a1)
{
  if (SSXPCConnectionHasEntitlement()) {
    objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "_sharedManifestWithManifestType:", xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1")), "rebuildManifest");
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);

  xpc_release(reply);
}

void sub_100015304(uint64_t a1)
{
  id v9 = 0;
  if (SSXPCConnectionHasEntitlement() & 1) != 0 || (SSIsDaemon())
  {
    id v2 = (void *)SSXPCDictionaryCopyCFObject();
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v3 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithObjects:", v2, 0, v9);
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_11;
      }
      id v3 = [objc_alloc((Class)NSMutableSet) initWithArray:v2];
    }
    int64_t v4 = v3;
    if (v3)
    {
      id v5 = objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "_sharedManifestWithManifestType:", xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1")), "removeItemsWithAssetPaths:error:", v3, &v9);
      id v6 = [v5 count];
      BOOL v7 = v6 == [v4 count];
      if (!v7)
      {
        [v4 minusSet:v5];
        [v4 allObjects];
      }

      goto LABEL_14;
    }
LABEL_11:
    BOOL v7 = 0;
LABEL_14:

    goto LABEL_15;
  }
  BOOL v7 = 0;
  id v9 = +[NSError errorWithDomain:SSErrorDomain code:107 userInfo:0];
LABEL_15:
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_dictionary_set_BOOL(reply, "0", v7);
  SSXPCDictionarySetCFObject();
  SSXPCDictionarySetCFObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
  xpc_release(reply);
}

id sub_1000155A8(uint64_t a1)
{
  return objc_msgSend(+[Daemon daemon](Daemon, "daemon"), "releaseKeepAliveAssertion:", @"PurchaseManifest");
}

void sub_100015610(_Unwind_Exception *a1)
{
}

id sub_100016A04(uint64_t a1, void *a2)
{
  id result = objc_msgSend(objc_msgSend(objc_msgSend(a2, "iCloudIdentifier"), "stringValue"), "isEqualToString:", *(void *)(a1 + 32));
  if (result)
  {
    id v5 = [a2 iTunesIdentifier];
    uint64_t v6 = *(void *)(a1 + 40);
    return [v5 isEqualToNumber:v6];
  }
  return result;
}

id sub_100016A68(uint64_t a1, void *a2)
{
  id v3 = [a2 iTunesIdentifier];
  uint64_t v4 = *(void *)(a1 + 32);

  return [v3 isEqualToNumber:v4];
}

int64_t sub_100016AA4(id a1, id a2, id a3)
{
  if ([a2 firstName] || (int64_t result = (int64_t)objc_msgSend(a3, "firstName")) != 0)
  {
    if (([a2 isMe] & 1) != 0 || !objc_msgSend(a3, "firstName"))
    {
      return -1;
    }
    else if (([a3 isMe] & 1) != 0 || !objc_msgSend(a2, "firstName"))
    {
      return 1;
    }
    else
    {
      id v6 = [a2 firstName];
      id v7 = [a3 firstName];
      return (int64_t)[v6 localizedCaseInsensitiveCompare:v7];
    }
  }
  return result;
}

uint64_t sub_1000178C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000178D0(uint64_t a1)
{
}

void sub_1000178D8(uint64_t a1)
{
}

void sub_10001799C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v5 = *(void **)(v2 + 32);
  uint64_t v4 = (id *)(v2 + 32);
  if (v5 != v3) {
    objc_storeStrong(v4, v3);
  }
}

uint64_t sub_100017A34(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 64) = *(unsigned char *)(result + 40);
  return result;
}

uint64_t sub_100017ABC(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 65) = *(unsigned char *)(result + 40);
  return result;
}

uint64_t sub_100017B78(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 64);
  return result;
}

uint64_t sub_100017C38(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 65);
  return result;
}

void sub_1000191D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location, uint64_t a20,char a21)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100019224(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100019234(uint64_t a1)
{
}

void sub_10001923C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!v6 || *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id v9 = +[SSLogConfig sharedDaemonConfig];
    if (!v9)
    {
      id v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v10 = [v9 shouldLog];
    if ([v9 shouldLogToDisk]) {
      int v11 = v10 | 2;
    }
    else {
      int v11 = v10;
    }
    uint64_t v12 = [v9 OSLogObject];
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
      int v13 = v11;
    }
    else {
      int v13 = v11 & 2;
    }
    if (v13)
    {
      uint64_t v14 = a1;
      id v15 = v6;
      id v16 = WeakRetained;
      long long v17 = v7;
      long long v18 = objc_opt_class();
      id v50 = v18;
      [v17 localizedDescription];
      int v51 = 138412546;
      id v52 = v18;
      id v7 = v17;
      id WeakRetained = v16;
      id v6 = v15;
      a1 = v14;
      __int16 v53 = 2112;
      id v54 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v49) = 22;
      long long v19 = (void *)_os_log_send_and_compose_impl();

      if (v19)
      {
        long long v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v51, v49);
        free(v19);
        SSFileLog();
      }
    }
    else
    {
    }
    uint64_t v21 = (id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    long long v22 = a3;
LABEL_16:
    objc_storeStrong(v21, v22);
    goto LABEL_17;
  }
  if ([v6 isUserAccepted])
  {
    long long v23 = +[SSLogConfig sharedDaemonConfig];
    if (!v23)
    {
      long long v23 = +[SSLogConfig sharedConfig];
    }
    unsigned int v24 = [v23 shouldLog];
    if ([v23 shouldLogToDisk]) {
      v24 |= 2u;
    }
    v25 = [v23 OSLogObject];
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
      int v26 = v24;
    }
    else {
      int v26 = v24 & 2;
    }
    if (v26)
    {
      int v51 = 138412290;
      id v52 = (id)objc_opt_class();
      id v27 = v52;
      LODWORD(v49) = 12;
      id v28 = (void *)_os_log_send_and_compose_impl();

      if (v28)
      {
        uint64_t v29 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v51, v49);
        free(v28);
        SSFileLog();
      }
    }
    else
    {
    }
    *(unsigned char *)(*(void *)(a1 + 32) + 129) = 1;
    *(unsigned char *)(*(void *)(a1 + 32) + 128) = 1;
  }
  else
  {
    id v30 = [v6 currentText];
    id v31 = [v30 length];

    uint64_t v32 = +[SSLogConfig sharedDaemonConfig];
    uint64_t v33 = (void *)v32;
    if (v31)
    {
      if (!v32)
      {
        uint64_t v33 = +[SSLogConfig sharedConfig];
      }
      unsigned int v34 = [v33 shouldLog];
      if ([v33 shouldLogToDisk]) {
        v34 |= 2u;
      }
      id v35 = [v33 OSLogObject];
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG)) {
        int v36 = v34;
      }
      else {
        int v36 = v34 & 2;
      }
      if (v36)
      {
        int v51 = 138412290;
        id v52 = (id)objc_opt_class();
        id v37 = v52;
        LODWORD(v49) = 12;
        id v38 = (void *)_os_log_send_and_compose_impl();

        if (v38)
        {
          uint64_t v39 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v38, 4, &v51, v49);
          free(v38);
          SSFileLog();
        }
      }
      else
      {
      }
      uint64_t v21 = (id *)(*(void *)(a1 + 32) + 120);
      long long v22 = a2;
      goto LABEL_16;
    }
    if (!v32)
    {
      uint64_t v33 = +[SSLogConfig sharedConfig];
    }
    unsigned int v40 = [v33 shouldLog];
    if ([v33 shouldLogToDisk]) {
      v40 |= 2u;
    }
    uint64_t v41 = [v33 OSLogObject];
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT)) {
      int v42 = v40;
    }
    else {
      int v42 = v40 & 2;
    }
    if (v42)
    {
      int v51 = 138412290;
      id v52 = (id)objc_opt_class();
      id v43 = v52;
      LODWORD(v49) = 12;
      v44 = (void *)_os_log_send_and_compose_impl();

      if (v44)
      {
        uint64_t v45 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v44, 4, &v51, v49);
        free(v44);
        SSFileLog();
      }
    }
    else
    {
    }
    uint64_t v46 = SSError();
    uint64_t v47 = *(void *)(*(void *)(a1 + 48) + 8);
    long long v48 = *(void **)(v47 + 40);
    *(void *)(v47 + 40) = v46;
  }
LABEL_17:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100019E30(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (v5 || (a2 & 1) == 0)
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    id v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      v8 &= 2u;
    }
    if (v8)
    {
      unsigned int v10 = objc_opt_class();
      int v11 = *(void **)(*(void *)(a1 + 32) + 120);
      id v12 = v10;
      id v13 = [v11 currentVersionIdentifier];
      [v5 localizedDescription];
      int v16 = 138412802;
      long long v17 = v10;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      id v21 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v15) = 32;
      uint64_t v14 = (void *)_os_log_send_and_compose_impl();

      if (!v14)
      {
LABEL_14:

        goto LABEL_15;
      }
      id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v16, v15);
      free(v14);
      SSFileLog();
    }

    goto LABEL_14;
  }
LABEL_15:
}

void sub_10001A6BC(_Unwind_Exception *a1)
{
}

void sub_10001A73C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (!v4)
  {
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5)
    {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    int v8 = [v5 OSLogObject];
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      v7 &= 2u;
    }
    if (v7)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      LODWORD(v13) = 138412290;
      *(void *)((char *)&v13 + 4) = objc_opt_class();
      id v10 = *(id *)((char *)&v13 + 4);
      LODWORD(v12) = 12;
      int v11 = (void *)_os_log_send_and_compose_impl();

      if (!v11)
      {
LABEL_14:

        dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 112));
        goto LABEL_15;
      }
      int v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v13, v12, v13);
      free(v11);
      SSFileLog();
    }

    goto LABEL_14;
  }
  [*(id *)(a1 + 32) lock];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 104), a2);
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 104), "setDelegate:");
  [*(id *)(a1 + 32) unlock];
LABEL_15:
}

NSURL *__cdecl sub_10001AB50(id a1, SSURLBagContext *a2)
{
  uint64_t v2 = a2;
  id v3 = +[ISURLBagCache sharedCache];
  id v4 = [v3 URLBagForContext:v2];

  id v5 = [v4 valueForKey:@"automatic-downloads2"];
  if (!v5)
  {
    id v5 = [v4 valueForKey:@"automatic-downloads"];
  }
  unsigned int v6 = [v5 objectForKey:@"downloads-url"];
  if (v6)
  {
    int v7 = +[NSURL URLWithString:v6];
  }
  else
  {
    int v7 = 0;
  }

  return (NSURL *)v7;
}

void sub_10001E780(uint64_t a1)
{
  uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    uint64_t v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  unsigned int v6 = objc_opt_class();
  int v7 = *(void **)(a1 + 32);
  id v8 = v6;
  [v7 logKey];
  int v11 = 138543618;
  uint64_t v12 = v6;
  __int16 v13 = 2114;
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  LODWORD(v10) = 22;
  id v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v11, v10);
    free(v9);
    SSFileLog();
LABEL_11:
  }
}

void sub_100022208(id a1)
{
  byte_100401BF8 = MGGetSInt32Answer() == 4;
}

void sub_10002223C(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  unsigned int v6 = [*(id *)(a1 + 32) objectForKey:v7];

  if (!v6) {
    [*(id *)(a1 + 32) setObject:v5 forKey:v7];
  }
}

void sub_100023E38(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  unsigned int v6 = v5;
  if (a3)
  {
    [*(id *)(a1 + 32) finishWithError:a3];
  }
  else
  {
    id v7 = [v5 request];

    uint64_t v8 = +[AMSLogConfig sharedConfig];
    id v9 = (void *)v8;
    if (v7)
    {
      if (!v8)
      {
        id v9 = +[AMSLogConfig sharedConfig];
      }
      uint64_t v10 = [v9 OSLogObject];
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = objc_opt_class();
        uint64_t v12 = AMSLogKey();
        *(_DWORD *)buf = 138543618;
        uint64_t v26 = v11;
        __int16 v27 = 2114;
        id v28 = v12;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] Handling engagement request asyncronously ", buf, 0x16u);
      }
      __int16 v13 = +[AMSSystemEngagementTask createBagForSubProfile];
      id v14 = objc_alloc((Class)AMSSystemEngagementTask);
      uint64_t v15 = [v6 request];
      id v16 = [v14 initWithRequest:v15 bag:v13];

      long long v17 = [v16 present];
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_1000240F8;
      v23[3] = &unk_1003A36B0;
      int8x16_t v22 = *(int8x16_t *)(a1 + 32);
      id v18 = (id)v22.i64[0];
      int8x16_t v24 = vextq_s8(v22, v22, 8uLL);
      [v17 addFinishBlock:v23];
    }
    else
    {
      if (!v8)
      {
        id v9 = +[AMSLogConfig sharedConfig];
      }
      id v19 = [v9 OSLogObject];
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v20 = objc_opt_class();
        id v21 = AMSLogKey();
        *(_DWORD *)buf = 138543618;
        uint64_t v26 = v20;
        __int16 v27 = 2114;
        id v28 = v21;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] No engagement request provided.", buf, 0x16u);
      }
      [*(id *)(a1 + 32) finishWithSuccess];
    }
  }
}

void sub_1000240F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (!v4)
  {
    id v5 = +[AMSLogConfig sharedConfig];
    if (!v5)
    {
      id v5 = +[AMSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = objc_opt_class();
      uint64_t v8 = AMSLogKey();
      int v9 = 138543618;
      uint64_t v10 = v7;
      __int16 v11 = 2114;
      uint64_t v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}@: [%{public}@] Engagement completed successfully", (uint8_t *)&v9, 0x16u);
    }
  }
  [*(id *)(a1 + 40) finishWithSuccess:v4 == 0 error:v4];
}

void sub_100024228(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = +[AMSLogConfig sharedConfig];
  if (!v3)
  {
    unsigned int v3 = +[AMSLogConfig sharedConfig];
  }
  id v4 = [v3 OSLogObject];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = AMSLogKey();
    uint64_t v7 = (void *)v6;
    CFStringRef v8 = &stru_1003B9B00;
    int v9 = 138543874;
    uint64_t v10 = v5;
    if (v2) {
      CFStringRef v8 = v2;
    }
    __int16 v11 = 2114;
    uint64_t v12 = v6;
    __int16 v13 = 2114;
    CFStringRef v14 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}@: [%{public}@] Engagement failed. %{public}@", (uint8_t *)&v9, 0x20u);
  }
}

void sub_100025624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

uint64_t sub_100025714(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100025724(uint64_t a1)
{
}

void sub_10002572C(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  id v8 = a5;
  int v9 = +[SSLogConfig sharedDaemonConfig];
  if (!v9)
  {
    int v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  uint64_t v12 = [v9 OSLogObject];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
    int v13 = v11;
  }
  else {
    int v13 = v11 & 2;
  }
  if (v13)
  {
    uint64_t v14 = a1[4];
    *(_DWORD *)int v36 = 138543362;
    *(void *)&v36[4] = v14;
    LODWORD(v35) = 12;
    unsigned int v34 = v36;
    uint64_t v15 = (void *)_os_log_send_and_compose_impl();

    if (!v15) {
      goto LABEL_13;
    }
    uint64_t v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, v36, v35);
    free(v15);
    unsigned int v34 = v12;
    SSFileLog();
  }

LABEL_13:
  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a5);
    id v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16)
    {
      id v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = objc_msgSend(v16, "shouldLog", v34);
    if ([v16 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    id v19 = [v16 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      int v20 = v18;
    }
    else {
      int v20 = v18 & 2;
    }
    if (!v20) {
      goto LABEL_47;
    }
    uint64_t v21 = a1[4];
    *(_DWORD *)int v36 = 138543618;
    *(void *)&v36[4] = v21;
    *(_WORD *)&v36[12] = 2112;
    *(void *)&v36[14] = v8;
    LODWORD(v35) = 22;
  }
  else if (a4)
  {
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = a4;
    id v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16)
    {
      id v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v22 = objc_msgSend(v16, "shouldLog", v34);
    if ([v16 shouldLogToDisk]) {
      int v23 = v22 | 2;
    }
    else {
      int v23 = v22;
    }
    id v19 = [v16 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      int v24 = v23;
    }
    else {
      int v24 = v23 & 2;
    }
    if (!v24) {
      goto LABEL_47;
    }
    uint64_t v25 = a1[4];
    *(_DWORD *)int v36 = 138543362;
    *(void *)&v36[4] = v25;
    LODWORD(v35) = 12;
  }
  else
  {
    uint64_t v26 = SSError();
    uint64_t v27 = *(void *)(a1[5] + 8);
    id v28 = *(void **)(v27 + 40);
    *(void *)(v27 + 40) = v26;

    id v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16)
    {
      id v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v29 = objc_msgSend(v16, "shouldLog", v34);
    if ([v16 shouldLogToDisk]) {
      int v30 = v29 | 2;
    }
    else {
      int v30 = v29;
    }
    id v19 = [v16 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      int v31 = v30;
    }
    else {
      int v31 = v30 & 2;
    }
    if (!v31) {
      goto LABEL_47;
    }
    uint64_t v32 = a1[4];
    *(_DWORD *)int v36 = 138543618;
    *(void *)&v36[4] = v32;
    *(_WORD *)&v36[12] = 2114;
    *(void *)&v36[14] = 0;
    LODWORD(v35) = 22;
  }
  uint64_t v33 = (void *)_os_log_send_and_compose_impl();

  if (v33)
  {
    id v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v33, 4, v36, v35, *(_OWORD *)v36);
    free(v33);
    SSFileLog();
LABEL_47:
  }
}

void sub_100025B90(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ([v7 actionType] == 3)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_100025C0C(uint64_t a1, void *a2)
{
  if (a2)
  {
    unsigned int v3 = *(void **)(a1 + 32);
    id v4 = a2;
    id v9 = [v3 buttons];
    id v5 = [v4 selectedButtonIndex];

    uint64_t v6 = [v9 objectAtIndex:v5];
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }
}

void sub_100027210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100027234(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v5 && !v6)
    {
      uint64_t v9 = OBJC_IVAR___ISOperation__lock;
      [*(id *)((char *)WeakRetained + OBJC_IVAR___ISOperation__lock) lock];
      id v10 = [v5 copy];
      int v11 = (void *)v8[41];
      v8[41] = v10;

      [*(id *)((char *)v8 + v9) unlock];
      goto LABEL_31;
    }
    uint64_t v12 = +[SSLogConfig sharedDaemonConfig];
    if (!v12)
    {
      uint64_t v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    uint64_t v15 = [v12 OSLogObject];
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      int v16 = v14;
    }
    else {
      int v16 = v14 & 2;
    }
    if (v16)
    {
      int v28 = 138543362;
      id v29 = v6;
      LODWORD(v27) = 12;
      uint64_t v26 = &v28;
      unsigned int v17 = (void *)_os_log_send_and_compose_impl();

      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v28, v27);
      free(v17);
      uint64_t v26 = (int *)v15;
      SSFileLog();
    }

LABEL_17:
    int v18 = [*(id *)(*(void *)(a1 + 32) + 176) context];
    id v19 = [v18 serverEndpoint];

    if (v19 != (id)2) {
      goto LABEL_31;
    }
    int v20 = +[SSLogConfig sharedDaemonConfig];
    if (!v20)
    {
      int v20 = +[SSLogConfig sharedConfig];
    }
    unsigned int v21 = objc_msgSend(v20, "shouldLog", v26);
    if ([v20 shouldLogToDisk]) {
      int v22 = v21 | 2;
    }
    else {
      int v22 = v21;
    }
    int v23 = [v20 OSLogObject];
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      int v24 = v22;
    }
    else {
      int v24 = v22 & 2;
    }
    if (v24)
    {
      LOWORD(v28) = 0;
      LODWORD(v27) = 2;
      uint64_t v25 = (void *)_os_log_send_and_compose_impl();

      if (!v25)
      {
LABEL_30:

        [v8 _scoreDeviceRetryFailedV2Score];
        goto LABEL_31;
      }
      int v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v28, v27);
      free(v25);
      SSFileLog();
    }

    goto LABEL_30;
  }
LABEL_31:
}

void sub_100027784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000277A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v5 && !v6)
    {
      uint64_t v9 = OBJC_IVAR___ISOperation__lock;
      [*(id *)((char *)WeakRetained + OBJC_IVAR___ISOperation__lock) lock];
      id v10 = [v5 copy];
      int v11 = (void *)v8[41];
      v8[41] = v10;

      [*(id *)((char *)v8 + v9) unlock];
      goto LABEL_18;
    }
    uint64_t v12 = +[SSLogConfig sharedDaemonConfig];
    if (!v12)
    {
      uint64_t v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    uint64_t v15 = [v12 OSLogObject];
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      int v16 = v14;
    }
    else {
      int v16 = v14 & 2;
    }
    if (v16)
    {
      int v19 = 138543362;
      id v20 = v6;
      LODWORD(v18) = 12;
      unsigned int v17 = (void *)_os_log_send_and_compose_impl();

      if (!v17)
      {
LABEL_17:

        goto LABEL_18;
      }
      uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v19, v18);
      free(v17);
      SSFileLog();
    }

    goto LABEL_17;
  }
LABEL_18:
}

void sub_100027DB8(id a1)
{
  uint64_t v1 = arc4random();

  srand48(v1);
}

void sub_100028C60(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 136)) {
    *(void *)(*(void *)(a1 + 32) + 136) = objc_alloc_init((Class)NSMutableSet);
  }
  id v2 = [*(id *)(a1 + 40) copy];
  [*(id *)(*(void *)(a1 + 32) + 136) addObject:v2];
}

void sub_100028DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100028DDC(uint64_t a1, uint64_t a2)
{
}

void sub_100028DEC(uint64_t a1)
{
}

id sub_100028DF8(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 136) copy];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_100028F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100028F34(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 144);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

uint64_t sub_10002902C(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 152);
  return result;
}

void sub_10002912C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100029144(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 136) copy];
  id v2 = *(void **)(*(void *)(a1 + 32) + 136);

  return [v2 removeAllObjects];
}

uint64_t sub_100029258(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 160);
  return result;
}

uint64_t sub_100029330(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 161);
  return result;
}

void *sub_1000293CC(void *result)
{
  uint64_t v1 = *(void **)(result[4] + 144);
  if (v1 != (void *)result[5])
  {
    id v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 144) = result;
  }
  return result;
}

uint64_t sub_100029498(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 152) = *(void *)(result + 40);
  return result;
}

uint64_t sub_100029530(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 160) = *(unsigned char *)(result + 40);
  return result;
}

uint64_t sub_1000295CC(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 161) = *(unsigned char *)(result + 40);
  return result;
}

void sub_1000296C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000296E0(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSString);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)DownloadHandlerClient;
  id result = [v2 initWithFormat:@"%@: Blocks: %d, Ignores: (%@)", objc_msgSendSuper2(&v4, "description"), *(unsigned __int8 *)(*(void *)(a1 + 32) + 161), *(void *)(*(void *)(a1 + 32) + 144)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

id sub_10002A508(uint64_t a1, float a2)
{
  uint64_t v3 = OBJC_IVAR___ISOperation__progress;
  [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___ISOperation__progress) setCurrentValue:(uint64_t)(float)(a2 * 100.0)];
  [*(id *)(*(void *)(a1 + 32) + v3) snapshot];
  objc_super v4 = *(void **)(a1 + 32);

  return [v4 sendProgressToDelegate];
}

uint64_t sub_10002A570()
{
  return ISWeakLinkedStringConstantForString();
}

uint64_t sub_10002A580()
{
  return ISWeakLinkedStringConstantForString();
}

uint64_t sub_10002A590()
{
  return ISWeakLinkedStringConstantForString();
}

uint64_t sub_10002A5A0()
{
  return ISWeakLinkedStringConstantForString();
}

uint64_t sub_10002A5B0()
{
  return ISWeakLinkedStringConstantForString();
}

uint64_t sub_10002A5C0()
{
  return ISWeakLinkedStringConstantForString();
}

uint64_t sub_10002A5D0()
{
  return ISWeakLinkedStringConstantForString();
}

uint64_t sub_10002A5E0()
{
  return ISWeakLinkedStringConstantForString();
}

id sub_10002CBC4(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 8) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      id v5 = (void *)SSSQLiteCopyFoundationValueForStatementColumn();
      [*(id *)(a1 + 40) addObject:v5];

      id result = [*(id *)(*(void *)(a1 + 32) + 8) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

uint64_t sub_10002CE6C(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 8);
  return result;
}

void sub_10002CF4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 32));
  [WeakRetained batterySaverWatcherDidChangeState:*(void *)(a1 + 32)];
}

void sub_10002D0D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10002D0F0(uint64_t a1, int a2)
{
  if (*(_DWORD *)(*(void *)(a1 + 32) + 24) == a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _updateStatus];
  }
}

id sub_10002D14C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _getState];
  *(unsigned char *)(*(void *)(a1 + 32) + 8) = result != 0;
  return result;
}

CFDataRef sub_10002D24C(uint64_t a1, uint64_t a2)
{
  int v16 = 0;
  unsigned int v15 = 0;
  uint64_t v4 = sub_10002ED84();
  sub_10022DB44(v4, a1, 0, a2, (uint64_t)&v16, (uint64_t)&v15);
  if (!v5) {
    return sub_10002D3F8(v16, v15);
  }
  int v6 = v5;
  id v7 = +[SSLogConfig sharedDaemonConfig];
  if (!v7) {
    id v7 = +[SSLogConfig sharedConfig];
  }
  unsigned int v8 = [v7 shouldLog];
  if ([v7 shouldLogToDisk]) {
    int v9 = v8 | 2;
  }
  else {
    int v9 = v8;
  }
  if (os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_ERROR)) {
    int v10 = v9;
  }
  else {
    int v10 = v9 & 2;
  }
  if (v10)
  {
    int v17 = 136315394;
    uint64_t v18 = "AOU264455_9";
    __int16 v19 = 2048;
    uint64_t v20 = v6;
    LODWORD(v14) = 22;
    uint64_t v11 = _os_log_send_and_compose_impl();
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v17, v14);
      free(v12);
      SSFileLog();
    }
  }
  CFDataRef result = (CFDataRef)v16;
  if (v16)
  {
    sub_1002E9918((uint64_t)v16);
    return 0;
  }
  return result;
}

CFDataRef sub_10002D3F8(const UInt8 *a1, unsigned int a2)
{
  *(_OWORD *)&v7.reallocate = unk_1003A3948;
  v7.preferredSize = 0;
  memset(&v7, 0, 48);
  CFAllocatorRef v4 = CFAllocatorCreate(0, &v7);
  CFDataRef v5 = CFDataCreateWithBytesNoCopy(0, a1, a2, v4);
  CFRelease(v4);
  return v5;
}

CFDataRef sub_10002D480(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v27 = 0;
  HIDWORD(v26) = 0;
  unsigned int v28 = 0;
  memset(v33, 0, sizeof(v33));
  int v6 = sub_10002DF3C((uint64_t)v33);
  if (a3)
  {
    if (v6)
    {
      int v7 = sub_1001F1B40(0, (uint64_t)v33, (uint64_t)[a3 UTF8String], (uint64_t)&v28);
      if (v7)
      {
        int v8 = v7;
        id v9 = +[SSLogConfig sharedDaemonConfig];
        if (!v9) {
          id v9 = +[SSLogConfig sharedConfig];
        }
        unsigned int v10 = [v9 shouldLog];
        if ([v9 shouldLogToDisk]) {
          int v11 = v10 | 2;
        }
        else {
          int v11 = v10;
        }
        if (os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_ERROR)) {
          int v12 = v11;
        }
        else {
          int v12 = v11 & 2;
        }
        if (v12)
        {
          int v29 = 136315394;
          int v30 = "AOU264455_107";
          __int16 v31 = 2048;
          uint64_t v32 = v8;
          LODWORD(v26) = 22;
          uint64_t v25 = &v29;
          uint64_t v13 = _os_log_send_and_compose_impl();
          if (v13)
          {
            uint64_t v14 = (void *)v13;
            unsigned int v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v29, v26);
            free(v14);
            uint64_t v25 = (int *)v15;
            SSFileLog();
          }
        }
      }
    }
  }
  sub_10022DB44(v28, a1, 0, a2, (uint64_t)&v27, (uint64_t)&v26 + 4);
  if (!v16) {
    return sub_10002D3F8(v27, HIDWORD(v26));
  }
  int v17 = v16;
  id v18 = +[SSLogConfig sharedDaemonConfig];
  if (!v18) {
    id v18 = +[SSLogConfig sharedConfig];
  }
  unsigned int v19 = objc_msgSend(v18, "shouldLog", v25);
  if ([v18 shouldLogToDisk]) {
    int v20 = v19 | 2;
  }
  else {
    int v20 = v19;
  }
  if (os_log_type_enabled((os_log_t)[v18 OSLogObject], OS_LOG_TYPE_ERROR)) {
    int v21 = v20;
  }
  else {
    int v21 = v20 & 2;
  }
  if (v21)
  {
    LODWORD(v33[0]) = 136315394;
    *(void *)((char *)v33 + 4) = "AOU264455_7";
    WORD2(v33[1]) = 2048;
    *(void *)((char *)&v33[1] + 6) = v17;
    LODWORD(v26) = 22;
    uint64_t v22 = _os_log_send_and_compose_impl();
    if (v22)
    {
      int v23 = (void *)v22;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, v33, v26);
      free(v23);
      SSFileLog();
    }
  }
  CFDataRef result = (CFDataRef)v27;
  if (v27)
  {
    sub_1002E9918((uint64_t)v27);
    return 0;
  }
  return result;
}

id sub_10002D778()
{
  uint64_t v18 = 0;
  unsigned int v17 = 0;
  uint64_t v0 = sub_10002ED84();
  sub_10028606C(v0, (uint64_t)&v18, (uint64_t)&v17);
  if (!v1)
  {
    id v7 = objc_alloc((Class)NSData);
    id v8 = [v7 initWithBytes:v18 length:v17];
    goto LABEL_27;
  }
  int v2 = v1;
  if (v1 == -42022)
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    if (os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      int v6 = v5;
    }
    else {
      int v6 = v5 & 2;
    }
    if (!v6) {
      goto LABEL_26;
    }
    int v19 = 136315394;
    int v20 = "AOU264455_1";
    __int16 v21 = 2048;
    uint64_t v22 = -42022;
    LODWORD(v16) = 22;
  }
  else
  {
    id v9 = +[SSLogConfig sharedDaemonConfig];
    if (!v9) {
      id v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v10 = [v9 shouldLog];
    if ([v9 shouldLogToDisk]) {
      int v11 = v10 | 2;
    }
    else {
      int v11 = v10;
    }
    if (os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      int v12 = v11;
    }
    else {
      int v12 = v11 & 2;
    }
    if (!v12) {
      goto LABEL_26;
    }
    int v19 = 136315394;
    int v20 = "AOU264455_1";
    __int16 v21 = 2048;
    uint64_t v22 = v2;
    LODWORD(v16) = 22;
  }
  uint64_t v13 = _os_log_send_and_compose_impl();
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v19, v16);
    free(v14);
    SSFileLog();
  }
LABEL_26:
  id v8 = 0;
LABEL_27:
  if (v18) {
    sub_1002E9918(v18);
  }
  return v8;
}

uint64_t sub_10002D9F0(void *a1, void *a2)
{
  memset(v29, 0, sizeof(v29));
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v4 = sub_10002ED84();
  sub_1002E44D0(v4, 0, 0, 0, (uint64_t)&v24, (uint64_t)&v23, (uint64_t)v29, (uint64_t)&v23 + 4);
  if (!v5)
  {
    id v12 = objc_alloc_init((Class)NSMutableArray);
    if (HIDWORD(v23))
    {
      unint64_t v13 = 0;
      do
      {
        id v14 = [objc_alloc((Class)NSNumber) initWithUnsignedInteger:*((unsigned int *)v29 + v13)];
        [v12 addObject:v14];

        ++v13;
      }
      while (v13 < HIDWORD(v23));
    }
    id v15 = objc_alloc((Class)NSData);
    id v11 = [v15 initWithBytes:v24 length:v23];
    goto LABEL_20;
  }
  int v6 = v5;
  if (v5 == -42022)
  {
    id v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7) {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    if (os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      int v10 = v9;
    }
    else {
      int v10 = v9 & 2;
    }
    if (v10)
    {
      int v25 = 136315394;
      uint64_t v26 = "AOU264455_2";
      __int16 v27 = 2048;
      uint64_t v28 = -42022;
      LODWORD(v22) = 22;
      id v11 = (id)_os_log_send_and_compose_impl();
      if (!v11)
      {
LABEL_15:
        id v12 = 0;
LABEL_20:
        uint64_t v16 = 1;
        goto LABEL_34;
      }
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v25, v22);
      free(v11);
      SSFileLog();
    }
    id v11 = 0;
    goto LABEL_15;
  }
  id v17 = +[SSLogConfig sharedDaemonConfig];
  if (!v17) {
    id v17 = +[SSLogConfig sharedConfig];
  }
  unsigned int v18 = [v17 shouldLog];
  if ([v17 shouldLogToDisk]) {
    int v19 = v18 | 2;
  }
  else {
    int v19 = v18;
  }
  if (os_log_type_enabled((os_log_t)[v17 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    int v20 = v19;
  }
  else {
    int v20 = v19 & 2;
  }
  if (!v20) {
    goto LABEL_32;
  }
  int v25 = 136315394;
  uint64_t v26 = "AOU264455_2";
  __int16 v27 = 2048;
  uint64_t v28 = v6;
  LODWORD(v22) = 22;
  id v11 = (id)_os_log_send_and_compose_impl();
  if (v11)
  {
    +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v25, v22);
    free(v11);
    SSFileLog();
LABEL_32:
    id v11 = 0;
  }
  id v12 = 0;
  uint64_t v16 = 0;
LABEL_34:
  if (v24) {
    sub_1002E9918(v24);
  }
  if (a1) {
    *a1 = v12;
  }
  if (a2) {
    *a2 = v11;
  }
  return v16;
}

ISFairPlayRentalInfo *sub_10002DD60(uint64_t a1, uint64_t a2)
{
  int v2 = 0;
  if (a1)
  {
    if (a2)
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v5 = sub_10002ED84();
      sub_100237F18(v5, a1, a2, (uint64_t)&v8);
      int v2 = 0;
      if (!v6)
      {
        int v2 = objc_alloc_init(ISFairPlayRentalInfo);
        [(ISFairPlayRentalInfo *)v2 setPlaybackDuration:HIDWORD(v9)];
        [(ISFairPlayRentalInfo *)v2 setPlaybackStartTime:v9];
        [(ISFairPlayRentalInfo *)v2 setRentalDuration:HIDWORD(v8)];
        [(ISFairPlayRentalInfo *)v2 setRentalStartTime:v8];
      }
    }
  }
  return v2;
}

CFDataRef sub_10002DE00(uint64_t a1, unsigned char *a2, NSError **a3)
{
  memset(v14, 0, sizeof(v14));
  int v6 = sub_10002DF3C((uint64_t)v14);
  CFDataRef result = 0;
  uint64_t v8 = 0;
  if (v6)
  {
    unint64_t v13 = 0;
    unsigned int v12 = 0;
    uint64_t v9 = sub_10002ED84();
    sub_1002E629C(v9, a1, (uint64_t)v14, 52428801, 0, (uint64_t)&v13, (uint64_t)&v12);
    int v11 = v10;
    if (v10 != -42052)
    {
      if (!v10)
      {
        CFDataRef result = sub_10002D3F8(v13, v12);
LABEL_9:
        uint64_t v8 = 0;
        goto LABEL_10;
      }
LABEL_14:
      uint64_t v8 = +[NSError errorWithDomain:@"FairPlayErrorDomain" code:v11 userInfo:0];
      CFDataRef result = 0;
      if (!a3) {
        return result;
      }
      goto LABEL_11;
    }
    if (v12)
    {
      CFDataRef result = sub_10002D3F8(v13, v12);
      if (!a2) {
        goto LABEL_8;
      }
    }
    else
    {
      CFDataRef result = 0;
      if (!a2)
      {
LABEL_8:
        if (result) {
          goto LABEL_9;
        }
        goto LABEL_14;
      }
    }
    *a2 = 1;
    goto LABEL_8;
  }
LABEL_10:
  if (!a3) {
    return result;
  }
LABEL_11:
  if (!result) {
    *a3 = v8;
  }
  return result;
}

uint64_t sub_10002DF3C(uint64_t a1)
{
  if (qword_100401C38 != -1) {
    dispatch_once(&qword_100401C38, &stru_1003A3960);
  }
  if (a1 && byte_100401C40)
  {
    long long v2 = xmmword_100401C20;
    *(void *)(a1 + 16) = qword_100401C30;
    *(_OWORD *)a1 = v2;
  }
  else
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    if (os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_ERROR)) {
      int v6 = v5;
    }
    else {
      int v6 = v5 & 2;
    }
    if (v6)
    {
      int v11 = 136315394;
      unsigned int v12 = "AOU264455_104";
      __int16 v13 = 2048;
      uint64_t v14 = -1;
      LODWORD(v10) = 22;
      uint64_t v7 = _os_log_send_and_compose_impl();
      if (v7)
      {
        uint64_t v8 = (void *)v7;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v11, v10);
        free(v8);
        SSFileLog();
      }
    }
  }
  return byte_100401C40;
}

BOOL sub_10002E0F0(void *a1, void *a2)
{
  sub_10002ED84();
  [a1 bytes];
  [a1 length];
  sub_100282BE4();
  if (a2) {
    *a2 = 0;
  }
  return v4 == 0;
}

BOOL sub_10002E180(uint64_t a1)
{
  return sub_1001F1D48(a1) == 0;
}

uint64_t sub_10002E1A0(uint64_t a1, void *a2, void *a3)
{
  int v5 = malloc_type_malloc((size_t)[a2 length], 0x100004077774924uLL);
  if (!v5) {
    return 0;
  }
  int v6 = v5;
  unsigned int v11 = [a2 length];
  [a2 getBytes:v6 length:v11];
  sub_1002E9308();
  if (v7
    || (uint64_t v8 = 1,
        id v9 = [objc_alloc((Class)NSData) initWithBytesNoCopy:v6 length:v11 freeWhenDone:1], (*a3 = v9) == 0))
  {
    free(v6);
    return 0;
  }
  return v8;
}

void sub_10002E284(void *a1, unint64_t a2, void *a3)
{
  if ([a1 length])
  {
    if (a2 <= 5)
    {
      uint64_t v6 = dword_10031F7B0[a2];
      uint64_t v8 = 0;
      sub_1002AB62C((uint64_t)[a1 bytes], (uint64_t)objc_msgSend(a1, "length"), v6, (uint64_t)&v8);
      if (a3)
      {
        if (!v7) {
          *a3 = v8;
        }
      }
    }
  }
}

uint64_t sub_10002E31C(void *a1)
{
  if (!a1) {
    return 1;
  }
  sub_10002ED84();
  [a1 bytes];
  [a1 length];
  sub_1002E1FB0();
  BOOL v3 = v2 == 0;
  if (v2)
  {
    int v4 = v2;
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_ERROR)) {
      int v8 = v7;
    }
    else {
      int v8 = v7 & 2;
    }
    if (v8)
    {
      int v13 = 136315394;
      uint64_t v14 = "AOU264455_4";
      __int16 v15 = 2048;
      uint64_t v16 = v4;
      LODWORD(v12) = 22;
      uint64_t v9 = _os_log_send_and_compose_impl();
      if (v9)
      {
        uint64_t v10 = (void *)v9;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v13, v12);
        free(v10);
        SSFileLog();
      }
    }
  }
  return v3;
}

BOOL sub_10002E5AC(void *a1)
{
  if (!a1) {
    return 1;
  }
  uint64_t v2 = sub_10002ED84();
  sub_10027FCB8(v2, (uint64_t)[a1 bytes], (uint64_t)objc_msgSend(a1, "length"), 0, 0, 0);
  return v3 == 0;
}

BOOL sub_10002E628(void *a1, void *a2)
{
  uint64_t v8 = 0;
  uint64_t v4 = sub_10002ED84();
  sub_10027FCB8(v4, (uint64_t)[a1 bytes], (uint64_t)objc_msgSend(a1, "length"), (uint64_t)objc_msgSend(a2, "bytes"), (uint64_t)objc_msgSend(a2, "length"), (uint64_t)&v8);
  int v6 = v5;
  if (!v5) {
    sub_1002E9918(v8);
  }
  return v6 == 0;
}

BOOL sub_10002E704(void *a1)
{
  if (!a1) {
    return 1;
  }
  sub_10002ED84();
  [a1 bytes];
  [a1 length];
  sub_100239174();
  return v2 == 0;
}

uint64_t sub_10002ED84()
{
  HIDWORD(v10) = 0;
  memset(v15, 0, sizeof(v15));
  if (sub_10002DF3C((uint64_t)v15))
  {
    uint64_t v0 = [(NSString *)NSHomeDirectory() stringByAppendingPathComponent:@"Media/iTunes_Control/iTunes/"];
    if (v0)
    {
      int v1 = sub_1001F1B40(0, (uint64_t)v15, (uint64_t)[(NSString *)v0 UTF8String], (uint64_t)&v10 + 4);
      if (v1)
      {
        int v2 = v1;
        id v3 = +[SSLogConfig sharedDaemonConfig];
        if (!v3) {
          id v3 = +[SSLogConfig sharedConfig];
        }
        unsigned int v4 = [v3 shouldLog];
        if ([v3 shouldLogToDisk]) {
          int v5 = v4 | 2;
        }
        else {
          int v5 = v4;
        }
        if (os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_ERROR)) {
          int v6 = v5;
        }
        else {
          int v6 = v5 & 2;
        }
        if (v6)
        {
          int v11 = 136315394;
          uint64_t v12 = "AOU264455_102";
          __int16 v13 = 2048;
          uint64_t v14 = v2;
          LODWORD(v10) = 22;
          uint64_t v7 = _os_log_send_and_compose_impl();
          if (v7)
          {
            uint64_t v8 = (void *)v7;
            +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v11, v10);
            free(v8);
            SSFileLog();
          }
        }
      }
    }
  }
  return HIDWORD(v10);
}

void sub_10002EF2C(id a1)
{
  if ((xmmword_100401C20 - 1) <= 0x13) {
    byte_100401C40 = 1;
  }
}

id *sub_10002F338(id *result, uint64_t a2, void *a3)
{
  if (*a3) {
    return (id *)objc_msgSend(result[4], "addObject:");
  }
  return result;
}

void sub_10002F508(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    id v4 = [objc_alloc((Class)NSURL) initWithString:*a3];
    if (v4)
    {
      int v5 = v4;
      int v6 = [*(id *)(a1 + 32) cookiesForURL:v4];
      long long v11 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      long long v14 = 0u;
      id v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v12;
        do
        {
          uint64_t v10 = 0;
          do
          {
            if (*(void *)v12 != v9) {
              objc_enumerationMutation(v6);
            }
            [*(id *)(a1 + 40) addObject:*(void *)(*((void *)&v11 + 1) + 8 * (void)v10)];
            uint64_t v10 = (char *)v10 + 1;
          }
          while (v8 != v10);
          id v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
        }
        while (v8);
      }
    }
  }
}

void sub_10002FB98(uint64_t a1, uint64_t a2)
{
  id v3 = [[DownloadAssetEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) addObject:v3];
}

void sub_100031228(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

uint64_t sub_100031428(uint64_t a1, void *a2)
{
  return 1;
}

void sub_10003188C(uint64_t a1, uint64_t a2)
{
  id v3 = [[DownloadAssetEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  [(DownloadAssetEntity *)v3 setValue:0 forProperty:*(void *)(a1 + 40)];
}

void sub_1000353B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000353EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000353FC(uint64_t a1)
{
}

void sub_100035404(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (void *)*((void *)WeakRetained + 1);
    uint64_t v5 = *(void *)(a1 + 32);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100035514;
    v9[3] = &unk_1003A3E60;
    void v9[4] = WeakRetained;
    long long v8 = *(_OWORD *)(a1 + 40);
    id v6 = (id)v8;
    long long v10 = v8;
    [v4 scoreWithScoreRequest:v5 completionHandler:v9];
  }
  else
  {
    id v7 = SSError();
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100035514(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    long long v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10)
    {
      long long v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v11 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v12 = v11 | 2;
    }
    else {
      int v12 = v11;
    }
    long long v13 = [v10 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      int v14 = v12;
    }
    else {
      int v14 = v12 & 2;
    }
    if (!v14) {
      goto LABEL_27;
    }
    LODWORD(v34) = 138543362;
    *(void *)((char *)&v34 + 4) = v9;
    LODWORD(v33) = 12;
    uint64_t v32 = &v34;
  }
  else
  {
    __int16 v15 = [*(id *)(a1 + 32) context];
    id v16 = [v15 serverEndpoint];

    if (v16 == (id)2)
    {
      id v17 = [objc_alloc((Class)NSString) initWithData:v8 encoding:4];
    }
    else
    {
      id v17 = +[DeviceScorer _hexEncodingForData:v8];
    }
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8);
    int v19 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v17;

    long long v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10)
    {
      long long v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v20 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v21 = v20 | 2;
    }
    else {
      int v21 = v20;
    }
    long long v13 = [v10 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      int v22 = v21;
    }
    else {
      int v22 = v21 & 2;
    }
    if (!v22) {
      goto LABEL_27;
    }
    uint64_t v23 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    LODWORD(v34) = 138412290;
    *(void *)((char *)&v34 + 4) = v23;
    LODWORD(v33) = 12;
    uint64_t v32 = &v34;
  }
  uint64_t v24 = (void *)_os_log_send_and_compose_impl();

  if (!v24) {
    goto LABEL_28;
  }
  long long v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v34, v33, v34);
  free(v24);
  uint64_t v32 = v13;
  SSFileLog();
LABEL_27:

LABEL_28:
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)) {
    goto LABEL_42;
  }
  int v25 = +[SSLogConfig sharedDaemonConfig];
  if (!v25)
  {
    int v25 = +[SSLogConfig sharedConfig];
  }
  unsigned int v26 = objc_msgSend(v25, "shouldLog", v32);
  if ([v25 shouldLogToDisk]) {
    int v27 = v26 | 2;
  }
  else {
    int v27 = v26;
  }
  uint64_t v28 = [v25 OSLogObject];
  if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
    int v29 = v27;
  }
  else {
    int v29 = v27 & 2;
  }
  if (!v29) {
    goto LABEL_40;
  }
  LOWORD(v34) = 0;
  LODWORD(v33) = 2;
  int v30 = (void *)_os_log_send_and_compose_impl();

  if (v30)
  {
    uint64_t v28 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v30, 4, &v34, v33);
    free(v30);
    SSFileLog();
LABEL_40:
  }
LABEL_42:
  uint64_t v31 = *(void *)(a1 + 40);
  if (v31) {
    (*(void (**)(uint64_t, void, id))(v31 + 16))(v31, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v9);
  }
}

void sub_100036D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_100036D68(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100037128(id a1)
{
  uint64_t v1 = arc4random();

  srand48(v1);
}

id sub_100037C88()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401C90 = (uint64_t)result;
  return result;
}

void sub_10003831C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) bagType];
  id v3 = [*(id *)(a1 + 40) _clients];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v24;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v24 != v6) {
        objc_enumerationMutation(v3);
      }
      id v8 = *(void **)(*((void *)&v23 + 1) + 8 * v7);
      if ((((v2 == (id)1) ^ [v8 isSandboxed]) & 1) == 0
        && (objc_msgSend(objc_msgSend(v8, "clientIdentifier"), "isEqualToString:", *(void *)(a1 + 48)) & 1) != 0)
      {
        break;
      }
      if (v5 == (id)++v7)
      {
        id v5 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
        if (v5) {
          goto LABEL_3;
        }
        goto LABEL_12;
      }
    }
    id v9 = v8;
    if (v9) {
      goto LABEL_16;
    }
  }
LABEL_12:
  BOOL v10 = v2 == (id)1;
  id v11 = [*(id *)(a1 + 40) _beginManagedContextSession];
  int v12 = [[MicroPaymentClient alloc] initWithEntity:+[MicroPaymentClient entityForContext:v11] insertIntoManagedObjectContext:v11];
  [(MicroPaymentClient *)v12 setIdentifier:*(void *)(a1 + 48)];
  [(MicroPaymentClient *)v12 setSandboxed:+[NSNumber numberWithBool:v10]];
  if (sub_10004BBA0(v11))
  {
    id v9 = [[StoreKitClient alloc] initWithMicroPaymentClientID:[(MicroPaymentClient *)v12 objectID]];
    [*(id *)(*(void *)(a1 + 40) + 32) addObject:v9];
  }
  else
  {
    id v9 = 0;
  }

  +[NSThread endManagedContextSession];
  if (v9)
  {
LABEL_16:
    id v13 = +[SSLogConfig sharedDaemonConfig];
    if (!v13) {
      id v13 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v13 shouldLog];
    if ([v13 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    if (!os_log_type_enabled((os_log_t)[v13 OSLogObject], OS_LOG_TYPE_INFO)) {
      v15 &= 2u;
    }
    if (v15)
    {
      uint64_t v16 = objc_opt_class();
      uint64_t v17 = *(void *)(a1 + 48);
      int v27 = 138412546;
      uint64_t v28 = v16;
      __int16 v29 = 2112;
      uint64_t v30 = v17;
      LODWORD(v22) = 22;
      int v21 = &v27;
      uint64_t v18 = _os_log_send_and_compose_impl();
      if (v18)
      {
        int v19 = (void *)v18;
        unsigned int v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v27, v22);
        free(v19);
        int v21 = (int *)v20;
        SSFileLog();
      }
    }
    -[StoreKitClient refreshFromServerWithReason:accountIdentifier:](v9, "refreshFromServerWithReason:accountIdentifier:", 2, objc_msgSend(*(id *)(a1 + 32), "userIdentifier", v21));
  }
}

id sub_1000386AC(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    id v6 = [*(id *)(a1 + 40) count];
    int v21 = 138412546;
    uint64_t v22 = v5;
    __int16 v23 = 2048;
    id v24 = v6;
    LODWORD(v18) = 22;
    uint64_t v17 = &v21;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      id v8 = (void *)v7;
      id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v21, v18);
      free(v8);
      uint64_t v17 = (int *)v9;
      SSFileLog();
    }
  }
  id v10 = objc_msgSend(*(id *)(a1 + 32), "_beginManagedContextSession", v17);
  id v11 = objc_alloc_init((Class)NSMutableDictionary);
  int v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_100038914;
  v20[3] = &unk_1003A3EF0;
  v20[4] = v11;
  [v12 _enumerateDownloadsForIdentifiers:v13 context:v10 usingBlock:v20];
  if ([v11 count])
  {
    id v14 = +[DownloadsDatabase downloadsDatabase];
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_1000389CC;
    v19[3] = &unk_1003A3F18;
    uint64_t v15 = *(void *)(a1 + 32);
    v19[4] = v11;
    v19[5] = v15;
    [v14 readUsingTransactionBlock:v19];
  }

  sub_10004BBA0(v10);
  return +[NSThread endManagedContextSession];
}

void sub_100038914(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_msgSend(a3, "payment"), "client");
  if (v5)
  {
    id v6 = [v5 objectID];
    id v7 = [*(id *)(a1 + 32) objectForKey:v6];
    if (!v7)
    {
      id v8 = objc_alloc_init((Class)NSMutableArray);
      [*(id *)(a1 + 32) setObject:v8 forKey:v6];
      id v7 = v8;
    }
    id v9 = v7;
    [v7 addObject:a3];
  }
}

id sub_1000389CC(uint64_t a1, void *a2)
{
  id v25 = [a2 database];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id obj = *(id *)(a1 + 32);
  id result = [obj countByEnumeratingWithState:&v30 objects:v35 count:16];
  id v21 = result;
  if (result)
  {
    uint64_t v19 = *(void *)v31;
    uint64_t v20 = a1;
    do
    {
      uint64_t v4 = 0;
      do
      {
        if (*(void *)v31 != v19) {
          objc_enumerationMutation(obj);
        }
        uint64_t v23 = v4;
        uint64_t v5 = *(void *)(*((void *)&v30 + 1) + 8 * v4);
        id v6 = objc_alloc_init((Class)NSMutableArray);
        uint64_t v22 = v5;
        id v7 = [*(id *)(a1 + 32) objectForKey:v5];
        long long v26 = 0u;
        long long v27 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        id v24 = v7;
        id v8 = [v7 countByEnumeratingWithState:&v26 objects:v34 count:16];
        if (v8)
        {
          id v9 = v8;
          uint64_t v10 = *(void *)v27;
          do
          {
            for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v27 != v10) {
                objc_enumerationMutation(v24);
              }
              int v12 = *(void **)(*((void *)&v26 + 1) + 8 * i);
              id v14 = [v12 downloadID];
              uint64_t v15 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [v14 longLongValue], v25);
              id ObjectWithArchivedData = [(DownloadEntity *)v15 valueForProperty:@"download_state.download_error"];
              [v12 setError:ObjectWithArchivedData];
              objc_msgSend(v12, "setState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 2));
              id v17 = objc_alloc_init((Class)sub_100174DD0());
              if (ObjectWithArchivedData)
              {
                objc_opt_class();
                id ObjectWithArchivedData = (id)SSCodingCreateObjectWithArchivedData();
              }
              [v17 setDownloadID:v14];
              objc_msgSend(v17, "setDownloadState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 4));
              [v17 setError:sub_100050134(ObjectWithArchivedData)];
              objc_msgSend(v17, "setProgress:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", 0.0));
              objc_msgSend(v17, "setTimeRemaining:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", -1.0));
              [v6 addObject:v17];
            }
            id v9 = [v24 countByEnumeratingWithState:&v26 objects:v34 count:16];
          }
          while (v9);
        }
        a1 = v20;
        objc_msgSend(objc_msgSend(*(id *)(v20 + 40), "_clientForObjectID:", v22), "sendDownloadChangesets:", v6);

        uint64_t v4 = v23 + 1;
      }
      while ((id)(v23 + 1) != v21);
      id result = [obj countByEnumeratingWithState:&v30 objects:v35 count:16];
      id v21 = result;
    }
    while (result);
  }
  return result;
}

void sub_100038D3C(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    id v6 = [*(id *)(a1 + 40) count];
    int v33 = 138412546;
    uint64_t v34 = v5;
    __int16 v35 = 2048;
    id v36 = v6;
    LODWORD(v29) = 22;
    long long v27 = &v33;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      id v8 = (void *)v7;
      id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v33, v29);
      free(v8);
      long long v27 = (int *)v9;
      SSFileLog();
    }
  }
  id v10 = objc_msgSend(*(id *)(a1 + 32), "_beginManagedContextSession", v27);
  id v11 = objc_alloc_init((Class)NSMutableOrderedSet);
  id v12 = objc_alloc_init((Class)NSMutableDictionary);
  id v13 = objc_alloc_init((Class)NSMutableOrderedSet);
  id v14 = *(void **)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_100039164;
  v32[3] = &unk_1003A3F40;
  v32[4] = v13;
  v32[5] = v12;
  v32[6] = v11;
  [v14 _enumerateDownloadsForIdentifiers:v15 context:v10 usingBlock:v32];
  if ([v12 count])
  {
    id v16 = +[DownloadsDatabase downloadsDatabase];
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472;
    v31[2] = sub_10003925C;
    v31[3] = &unk_1003A3F18;
    uint64_t v17 = *(void *)(a1 + 32);
    void v31[4] = v12;
    v31[5] = v17;
    [v16 readUsingTransactionBlock:v31];
  }

  sub_10004BBA0(v10);
  +[NSThread endManagedContextSession];
  if ([v11 count] || objc_msgSend(v13, "count"))
  {
    id v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18) {
      id v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = [v18 shouldLog];
    if ([v18 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    if (!os_log_type_enabled((os_log_t)[v18 OSLogObject], OS_LOG_TYPE_INFO)) {
      v20 &= 2u;
    }
    if (v20)
    {
      uint64_t v21 = objc_opt_class();
      id v22 = [v11 count];
      id v23 = [v13 count];
      int v33 = 138412802;
      uint64_t v34 = v21;
      __int16 v35 = 2048;
      id v36 = v22;
      __int16 v37 = 2048;
      id v38 = v23;
      LODWORD(v29) = 32;
      long long v28 = &v33;
      uint64_t v24 = _os_log_send_and_compose_impl();
      if (v24)
      {
        id v25 = (void *)v24;
        long long v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v33, v29);
        free(v25);
        long long v28 = (int *)v26;
        SSFileLog();
      }
    }
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_1000395C0;
    v30[3] = &unk_1003A3F68;
    v30[4] = v11;
    v30[5] = v13;
    objc_msgSend(+[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase", v28), "modifyUsingTransactionBlock:", v30);
  }
}

void sub_100039164(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_msgSend(objc_msgSend(a3, "payment"), "client");
  if (a3)
  {
    if (v6)
    {
      id v7 = [v6 objectID];
      id v8 = [*(id *)(a1 + 40) objectForKey:v7];
      if (!v8)
      {
        id v10 = objc_alloc_init((Class)NSMutableArray);
        [*(id *)(a1 + 40) setObject:v10 forKey:v7];
        id v8 = v10;
      }
      id v11 = v8;
      [v8 addObject:a3];
      [*(id *)(a1 + 48) addObject:a2];
    }
  }
  else
  {
    id v9 = *(void **)(a1 + 32);
    [v9 addObject:a2];
  }
}

id sub_10003925C(uint64_t a1, void *a2)
{
  id v31 = [a2 database];
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id obj = *(id *)(a1 + 32);
  id result = [obj countByEnumeratingWithState:&v37 objects:v42 count:16];
  id v26 = result;
  if (result)
  {
    uint64_t v24 = *(void *)v38;
    uint64_t v30 = SSDownloadAssetTypeMedia;
    uint64_t v25 = a1;
    do
    {
      uint64_t v4 = 0;
      do
      {
        if (*(void *)v38 != v24) {
          objc_enumerationMutation(obj);
        }
        uint64_t v28 = v4;
        uint64_t v5 = *(void *)(*((void *)&v37 + 1) + 8 * v4);
        id v32 = objc_alloc_init((Class)NSMutableArray);
        uint64_t v27 = v5;
        id v6 = [*(id *)(a1 + 32) objectForKey:v5];
        long long v33 = 0u;
        long long v34 = 0u;
        long long v35 = 0u;
        long long v36 = 0u;
        id v29 = v6;
        id v7 = [v6 countByEnumeratingWithState:&v33 objects:v41 count:16];
        if (v7)
        {
          id v8 = v7;
          uint64_t v9 = *(void *)v34;
          do
          {
            for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v34 != v9) {
                objc_enumerationMutation(v29);
              }
              id v11 = *(void **)(*((void *)&v33 + 1) + 8 * i);
              id v13 = [v11 downloadID];
              id v14 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [v13 longLongValue], v31);
              uint64_t v15 = sub_100172C40((uint64_t)[(DownloadEntity *)v14 valueForProperty:@"download_state.phase"]);
              objc_msgSend(v11, "setState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v15));
              id v16 = objc_msgSend(-[DownloadEntity anyAssetForAssetType:](v14, "anyAssetForAssetType:", v30), "valueForProperty:", @"destination_url");
              [v11 setLocalURL:v16];
              uint64_t v17 = sub_1001725C4(v15);
              id v18 = objc_alloc_init((Class)sub_100174DD0());
              [v18 setDownloadID:v13];
              objc_msgSend(v18, "setDownloadState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v17));
              if (v17 == 3)
              {
                double v20 = 0.0;
                float v21 = 1.0;
                if (v16)
                {
                  id v22 = [objc_alloc((Class)NSURL) initWithString:v16];
                  [v18 setContentURL:v22];
                }
              }
              else
              {
                double v20 = -1.0;
                float v21 = 0.0;
              }
              *(float *)&double v19 = v21;
              objc_msgSend(v18, "setProgress:", +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v19));
              objc_msgSend(v18, "setTimeRemaining:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v20));
              [v32 addObject:v18];
            }
            id v8 = [v29 countByEnumeratingWithState:&v33 objects:v41 count:16];
          }
          while (v8);
        }
        a1 = v25;
        objc_msgSend(objc_msgSend(*(id *)(v25 + 40), "_clientForObjectID:", v27), "sendDownloadChangesets:", v32);

        uint64_t v4 = v28 + 1;
      }
      while ((id)(v28 + 1) != v26);
      id result = [obj countByEnumeratingWithState:&v37 objects:v42 count:16];
      id v26 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_1000395C0(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v22 objects:v27 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [*(id *)(*((void *)&v22 + 1) + 8 * i) longLongValue], v3);
        [(DownloadEntity *)v9 deleteFromDatabase];
      }
      id v6 = [v4 countByEnumeratingWithState:&v22 objects:v27 count:16];
    }
    while (v6);
  }
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v10 = *(void **)(a1 + 40);
  id v11 = [v10 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v19;
    uint64_t v14 = SSDownloadKindInAppContent;
    do
    {
      for (j = 0; j != v12; j = (char *)j + 1)
      {
        if (*(void *)v19 != v13) {
          objc_enumerationMutation(v10);
        }
        id v16 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [*(id *)(*((void *)&v18 + 1) + 8 * (void)j) longLongValue], v3);
        if ([(NSString *)[(DownloadEntity *)v16 downloadKind] isEqualToString:v14]) {
          [(DownloadEntity *)v16 deleteFromDatabase];
        }
      }
      id v12 = [v10 countByEnumeratingWithState:&v18 objects:v26 count:16];
    }
    while (v12);
  }
  return 1;
}

id sub_1000398B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _beginManagedContextSession];
  id v3 = objc_alloc_init((Class)NSFetchRequest);
  objc_msgSend(v3, "setEntity:", +[MicroPaymentDownload downloadEntityFromContext:](MicroPaymentDownload, "downloadEntityFromContext:", v2));
  objc_msgSend(v3, "setPredicate:", +[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"downloadID=%lld", *(void *)(a1 + 64)));
  id v4 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", @"downloadID", @"payment", 0);
  [v3 setPropertiesToFetch:v4];

  id v5 = [v2 executeFetchRequest:v3 error:0];
  if ([v5 count] == (id)1)
  {
    id v6 = objc_msgSend(*(id *)(a1 + 32), "_clientForPayment:", objc_msgSend(objc_msgSend(v5, "objectAtIndex:", 0), "payment"));
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_alloc_init((Class)sub_100174DD0());
      uint64_t v9 = *(void *)(a1 + 40);
      if (v9)
      {
        uint64_t v10 = sub_100172C40(v9);
        objc_msgSend(v8, "setDownloadState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", sub_1001725C4(v10)));
      }
      objc_msgSend(v8, "setDownloadID:", +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", *(void *)(a1 + 64)));
      [v8 setProgress:*(void *)(a1 + 48)];
      [v8 setTimeRemaining:*(void *)(a1 + 56)];
      objc_msgSend(v7, "sendDownloadChangesets:", +[NSArray arrayWithObject:](NSArray, "arrayWithObject:", v8));
    }
  }

  return +[NSThread endManagedContextSession];
}

void *sub_100039D70(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[2]) {
    return [result _startFirstReadyPayment];
  }
  return result;
}

id sub_100039DF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startFirstReadyPayment];
}

id sub_100039E64(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "payments"), "firstObject"), "objectForKey:", @"offer-name");
  if (result)
  {
    id v3 = result;
    id v4 = [*(id *)(a1 + 40) _beginManagedContextSession];
    id v5 = objc_alloc_init((Class)NSFetchRequest);
    objc_msgSend(v5, "setEntity:", +[MicroPayment paymentEntityFromContext:](MicroPayment, "paymentEntityFromContext:", v4));
    [v5 setPredicate:+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"productIdentifier=%@", v3)];
    [v5 setPropertiesToFetch:&off_1003C9F38];
    id v6 = [v4 executeFetchRequest:v5 error:0];
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v24 objects:v32 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v25;
      while (2)
      {
        for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v25 != v9) {
            objc_enumerationMutation(v6);
          }
          id v11 = *(void **)(*((void *)&v24 + 1) + 8 * i);
          id v12 = objc_msgSend(objc_msgSend(v11, "state"), "integerValue");
          if (v12 == (id)8 || v12 == (id)1)
          {
            id v14 = [*(id *)(a1 + 40) _clientForPayment:v11];
            id v15 = +[SSLogConfig sharedDaemonConfig];
            if (!v15) {
              id v15 = +[SSLogConfig sharedConfig];
            }
            unsigned int v16 = [v15 shouldLog];
            if ([v15 shouldLogToDisk]) {
              int v17 = v16 | 2;
            }
            else {
              int v17 = v16;
            }
            if (!os_log_type_enabled((os_log_t)[v15 OSLogObject], OS_LOG_TYPE_INFO)) {
              v17 &= 2u;
            }
            if (v17)
            {
              uint64_t v18 = objc_opt_class();
              int v28 = 138412546;
              uint64_t v29 = v18;
              __int16 v30 = 2112;
              id v31 = v11;
              LODWORD(v23) = 22;
              long long v22 = &v28;
              uint64_t v19 = _os_log_send_and_compose_impl();
              if (v19)
              {
                long long v20 = (void *)v19;
                long long v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v28, v23);
                free(v20);
                long long v22 = (int *)v21;
                SSFileLog();
              }
            }
            objc_msgSend(v14, "updatePaymentWithObjectID:purchaseResponse:", objc_msgSend(v11, "objectID", v22), *(void *)(a1 + 32));
            goto LABEL_25;
          }
        }
        id v8 = [v6 countByEnumeratingWithState:&v24 objects:v32 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }
LABEL_25:

    return +[NSThread endManagedContextSession];
  }
  return result;
}

void sub_10003A1AC(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"3"];
  id v2 = objc_alloc((Class)sub_100174E0C());
  id v3 = objc_msgSend(v2, "initWithXPCEncoding:", xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "1"));
  id v4 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithObjectsAndKeys:", +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 40), "4")), @"StoreKitClientPaymentOptionGrandfatherRequestData", 0);
  if (xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 40), "2")) {
    [v4 setObject:&__kCFBooleanTrue forKey:@"StoreKitClientPaymentOptionSupportsDeferredPayment"];
  }
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v5), "addPaymentTransaction:withOptions:", v3, v4))objc_msgSend(*(id *)(a1 + 32), "_startFirstReadyPayment"); {
}
  }

void sub_10003A358(uint64_t a1)
{
  objc_opt_class();
  id v2 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  objc_opt_class();
  id v3 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  objc_opt_class();
  id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  objc_opt_class();
  id v5 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  [*(id *)(a1 + 40) addPurchaseIntentWithProductIdentifier:v3 productName:v5 appBundleId:v2 appName:v4];

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);

  xpc_release(reply);
}

void sub_10003A4E0(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _copyDownloadsIDsFromMessage:*(void *)(a1 + 40) key:"1"];
  if ([v3 count])
  {
    id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v2), "cancelDownloadsWithIDs:", v3);
  }
}

void sub_10003A6FC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v6 &= 2u;
  }
  if (v6)
  {
    int v12 = 138543618;
    uint64_t v13 = objc_opt_class();
    __int16 v14 = 2114;
    id v15 = [v3 clientIdentifier];
    LODWORD(v11) = 22;
    uint64_t v10 = &v12;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      id v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v12, v11);
      free(v8);
      uint64_t v10 = (int *)v9;
      SSFileLog();
    }
  }
  objc_msgSend(*(id *)(a1 + 32), "_sendPurchaseIntentsForApp:storeKitClient:force:", objc_msgSend(v3, "clientIdentifier", v10), v3, 0);
}

void sub_10003A930()
{
  if ((SSXPCConnectionHasEntitlement() & 1) != 0 || SSXPCConnectionHasEntitlement())
  {
    objc_opt_class();
    uint64_t v0 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
    objc_opt_class();
    id v1 = (id)SSXPCDictionaryCopyCFObjectWithClass();
    +[StoreKitClientIdentity forceSandboxForBundleIdentifier:v0 untilDate:v1];
  }
}

void sub_10003AA84(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48)), "finishPaymentWithMessage:", *(void *)(a1 + 40)))objc_msgSend(*(id *)(a1 + 32), "_startFirstReadyPayment"); {
}
  }

id sub_10003AB6C(uint64_t a1)
{
  +[ISLoadURLBagOperation incrementNetworkCounterForBagContext:](ISLoadURLBagOperation, "incrementNetworkCounterForBagContext:", +[SSURLBagContext contextWithBagType:0]);
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];
  if (xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1") == 1) {
    [v3 refreshFromServerWithReason:3];
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  sub_100174DCC(reply, "0", (__CFString *)[v3 openTransactions]);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);

  unsigned int v5 = +[SSURLBagContext contextWithBagType:0];

  return +[ISLoadURLBagOperation decrementNetworkCounterForBagContext:v5];
}

void sub_10003AD88(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _copyDownloadsIDsFromMessage:*(void *)(a1 + 40) key:"1"];
  if ([v3 count])
  {
    id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v2), "pauseDownloadsWithIDs:", v3);
  }
}

void sub_10003AED0(uint64_t a1)
{
  value = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  if (value
    && (id v3 = value, xpc_get_type(value) == (xpc_type_t)&_xpc_type_endpoint)
    && (xpc_connection_t v6 = xpc_connection_create_from_endpoint(v3)) != 0)
  {
    xpc_connection_t v7 = v6;
    id v8 = [*(id *)(a1 + 40) _newPaymentQueueClientWithMessage:*(void *)(a1 + 32) connection:*(void *)(a1 + 48) parameter:"2"];
    id v9 = [*(id *)(a1 + 40) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v8];
    id v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10) {
      id v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v11 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v12 = v11 | 2;
    }
    else {
      int v12 = v11;
    }
    if (!os_log_type_enabled((os_log_t)[v10 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v12 &= 2u;
    }
    if (v12)
    {
      int v18 = 138543618;
      uint64_t v19 = objc_opt_class();
      __int16 v20 = 2114;
      id v21 = [v9 clientIdentifier];
      LODWORD(v17) = 22;
      uint64_t v13 = _os_log_send_and_compose_impl();
      if (v13)
      {
        __int16 v14 = (void *)v13;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v18, v17);
        free(v14);
        SSFileLog();
      }
    }
    xpc_object_t v15 = xpc_dictionary_create(0, 0, 0);
    id v16 = [v9 XPCClient];
    [v16 setOutputConnectionWithConnection:v7];
    objc_msgSend(objc_msgSend(v16, "outputConnection"), "sendMessage:", v15);
    xpc_release(v15);
    [v9 createMicroPaymentClientIfNecessary];
    [v9 refreshFromServerWithReason:0];
    id v4 = (__CFString *)[v9 openTransactions];
    objc_msgSend(*(id *)(a1 + 40), "_sendPurchaseIntentsForApp:storeKitClient:force:", objc_msgSend(v9, "clientIdentifier"), v9, 0);

    xpc_release(v7);
  }
  else
  {
    id v4 = 0;
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  sub_100174DCC(reply, "0", v4);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);
}

void sub_10003B1E0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  objc_opt_class();
  CFDictionaryRef v4 = sub_100174DC8(v2, "1");
  id v3 = [*(id *)(a1 + 40) _newPaymentQueueClientWithMessage:*(void *)(a1 + 32) connection:*(void *)(a1 + 48) parameter:"2"];
  objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v3), "restoreCompletedTransactionsWithApplicationUsername:", v4);
}

void sub_10003B2E4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _copyDownloadsIDsFromMessage:*(void *)(a1 + 40) key:"1"];
  if ([v3 count])
  {
    id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v2), "resumeDownloadsWithIDs:", v3);
  }
}

void sub_10003B3E4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _copyDownloadsIDsFromMessage:*(void *)(a1 + 40) key:"1"];
  if ([v3 count])
  {
    id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v2), "startDownloadsWithIDs:", v3);
  }
}

void sub_10003B530(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = SSXPCDictionaryCopyCFObjectWithClass();
  if (v2)
  {
    id v3 = (void *)v2;
    id v4 = [*(id *)(a1 + 40) _beginManagedContextSession];
    id v5 = objc_alloc_init((Class)NSFetchRequest);
    objc_msgSend(v5, "setEntity:", +[MicroPayment paymentEntityFromContext:](MicroPayment, "paymentEntityFromContext:", v4));
    [v5 setPredicate:+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"state=%@ AND askPermissionRequestIdentifier=%@", &off_1003C8F58, v3)];
    uint64_t v69 = 0;
    id v6 = [v4 executeFetchRequest:v5 error:&v69];
    xpc_connection_t v7 = &syslog_ptr;
    if (v6)
    {
      id v8 = v6;
      id v56 = v5;
      id v57 = v4;
      __int16 v58 = v3;
      id v55 = objc_alloc_init((Class)NSMutableSet);
      int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
      long long v65 = 0u;
      long long v66 = 0u;
      long long v67 = 0u;
      long long v68 = 0u;
      id v9 = [v8 countByEnumeratingWithState:&v65 objects:v72 count:16];
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = *(void *)v66;
        unint64_t v12 = int64 - 1;
        do
        {
          uint64_t v13 = 0;
          id v60 = v10;
          do
          {
            if (*(void *)v66 != v11) {
              objc_enumerationMutation(v8);
            }
            __int16 v14 = *(void **)(*((void *)&v65 + 1) + 8 * (void)v13);
            id v15 = objc_msgSend(*(id *)(a1 + 40), "_clientForPayment:", v14, v52);
            if (v12 >= 2)
            {
              if (!int64)
              {
                id v27 = [v7[405] sharedDaemonConfig];
                if (!v27) {
                  id v27 = [v7[405] sharedConfig];
                }
                unsigned int v28 = [v27 shouldLog];
                if ([v27 shouldLogToDisk]) {
                  int v29 = v28 | 2;
                }
                else {
                  int v29 = v28;
                }
                if (!os_log_type_enabled((os_log_t)[v27 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
                  v29 &= 2u;
                }
                if (v29)
                {
                  uint64_t v30 = objc_opt_class();
                  int v73 = 138412546;
                  uint64_t v74 = v30;
                  __int16 v75 = 2112;
                  id v76 = v58;
                  LODWORD(v54) = 22;
                  id v52 = &v73;
                  uint64_t v31 = _os_log_send_and_compose_impl();
                  if (v31)
                  {
                    id v32 = (void *)v31;
                    long long v33 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v31, 4, &v73, v54);
                    free(v32);
                    id v52 = (int *)v33;
                    SSFileLog();
                  }
                }
              }
            }
            else
            {
              id v16 = v15;
              uint64_t v17 = v11;
              int v18 = v8;
              id v19 = [v7[405] sharedDaemonConfig];
              if (!v19) {
                id v19 = [v7[405] sharedConfig];
              }
              __int16 v20 = v7;
              unsigned int v21 = [v19 shouldLog];
              if ([v19 shouldLogToDisk]) {
                v21 |= 2u;
              }
              if (!os_log_type_enabled((os_log_t)[v19 OSLogObject], OS_LOG_TYPE_INFO)) {
                v21 &= 2u;
              }
              if (v21)
              {
                uint64_t v22 = objc_opt_class();
                int v73 = 138412546;
                uint64_t v74 = v22;
                __int16 v75 = 2112;
                id v76 = v14;
                LODWORD(v54) = 22;
                id v52 = &v73;
                uint64_t v23 = _os_log_send_and_compose_impl();
                if (v23)
                {
                  long long v24 = (void *)v23;
                  long long v25 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v73, v54);
                  free(v24);
                  id v52 = (int *)v25;
                  SSFileLog();
                }
              }
              id v26 = objc_msgSend(v14, "objectID", v52);
              [v14 setFailedWithError:0];
              xpc_connection_t v7 = v20;
              id v8 = v18;
              uint64_t v11 = v17;
              id v10 = v60;
              unint64_t v12 = int64 - 1;
              if (v26)
              {
                id v71 = v26;
                objc_msgSend(v16, "sendPaymentsUpdatedWithObjectIDs:", +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v71, 1));
              }
            }
            uint64_t v13 = (char *)v13 + 1;
          }
          while (v10 != v13);
          id v10 = [v8 countByEnumeratingWithState:&v65 objects:v72 count:16];
        }
        while (v10);
      }
      id v4 = v57;
      id v3 = v58;
      id v5 = v56;
      if (objc_msgSend(v55, "count", v52))
      {
        id v34 = [v7[405] sharedDaemonConfig];
        if (!v34) {
          id v34 = [v7[405] sharedConfig];
        }
        unsigned int v35 = [v34 shouldLog];
        if ([v34 shouldLogToDisk]) {
          int v36 = v35 | 2;
        }
        else {
          int v36 = v35;
        }
        if (!os_log_type_enabled((os_log_t)[v34 OSLogObject], OS_LOG_TYPE_INFO)) {
          v36 &= 2u;
        }
        if (v36)
        {
          uint64_t v37 = objc_opt_class();
          id v38 = [v55 count];
          int v73 = 138412546;
          uint64_t v74 = v37;
          __int16 v75 = 2048;
          id v76 = v38;
          LODWORD(v54) = 22;
          __int16 v53 = &v73;
          uint64_t v39 = _os_log_send_and_compose_impl();
          if (v39)
          {
            long long v40 = (void *)v39;
            uint64_t v41 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v39, 4, &v73, v54);
            free(v40);
            __int16 v53 = (int *)v41;
            SSFileLog();
          }
        }
        long long v63 = 0u;
        long long v64 = 0u;
        long long v61 = 0u;
        long long v62 = 0u;
        id v42 = objc_msgSend(v55, "countByEnumeratingWithState:objects:count:", &v61, v70, 16, v53);
        if (v42)
        {
          id v43 = v42;
          uint64_t v44 = *(void *)v62;
          do
          {
            for (uint64_t i = 0; i != v43; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v62 != v44) {
                objc_enumerationMutation(v55);
              }
              [*(id *)(*((void *)&v61 + 1) + 8 * i) refreshFromServerWithReason:2];
            }
            id v43 = [v55 countByEnumeratingWithState:&v61 objects:v70 count:16];
          }
          while (v43);
        }
      }
    }
    else
    {
      id v46 = +[SSLogConfig sharedDaemonConfig];
      if (!v46) {
        id v46 = +[SSLogConfig sharedConfig];
      }
      unsigned int v47 = [v46 shouldLog];
      if ([v46 shouldLogToDisk]) {
        int v48 = v47 | 2;
      }
      else {
        int v48 = v47;
      }
      if (!os_log_type_enabled((os_log_t)[v46 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
        v48 &= 2u;
      }
      if (v48)
      {
        uint64_t v49 = objc_opt_class();
        int v73 = 138412802;
        uint64_t v74 = v49;
        __int16 v75 = 2112;
        id v76 = v3;
        __int16 v77 = 2112;
        uint64_t v78 = v69;
        LODWORD(v54) = 32;
        uint64_t v50 = _os_log_send_and_compose_impl();
        if (v50)
        {
          int v51 = (void *)v50;
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v50, 4, &v73, v54);
          free(v51);
          SSFileLog();
        }
      }
    }

    sub_10004BBA0(v4);
    +[NSThread endManagedContextSession];
  }
}

void sub_10003BCE0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  if (!xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 40), "2"))
  {
    CFDictionaryRef v6 = (CFDictionaryRef)[v3 clientIdentifier];
    goto LABEL_5;
  }
  unsigned __int8 v4 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
  id v5 = *(void **)(a1 + 40);
  if (v4)
  {
    CFDictionaryRef v6 = sub_10010B088(v5, "3");
LABEL_5:
    CFDictionaryRef v7 = v6;
    id v8 = dispatch_semaphore_create(0);
    id v9 = +[PromotedIAPManager sharedInstance];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_10003C02C;
    v22[3] = &unk_1003A3FB8;
    v22[4] = *(void *)(a1 + 32);
    v22[5] = v7;
    long long v23 = *(_OWORD *)(a1 + 40);
    long long v24 = v8;
    [(PromotedIAPManager *)v9 getOrderForIAPsInApp:v7 completionHandler:v22];
    dispatch_time_t v10 = dispatch_time(0, 90000000000);
    if (dispatch_semaphore_wait(v8, v10))
    {
      id v11 = +[SSLogConfig sharedDaemonConfig];
      if (!v11) {
        id v11 = +[SSLogConfig sharedConfig];
      }
      unsigned int v12 = [v11 shouldLog];
      if ([v11 shouldLogToDisk]) {
        int v13 = v12 | 2;
      }
      else {
        int v13 = v12;
      }
      if (!os_log_type_enabled((os_log_t)[v11 OSLogObject], OS_LOG_TYPE_ERROR)) {
        v13 &= 2u;
      }
      if (v13)
      {
        uint64_t v14 = objc_opt_class();
        int v25 = 138543618;
        uint64_t v26 = v14;
        __int16 v27 = 2112;
        CFDictionaryRef v28 = v7;
        LODWORD(v21) = 22;
        uint64_t v15 = _os_log_send_and_compose_impl();
        if (v15)
        {
          id v16 = (void *)v15;
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v25, v21);
          free(v16);
          SSFileLog();
        }
      }
      sub_100174DB0();
      uint64_t v17 = (__CFString *)ISErrorWithDomain();
      xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
      sub_10010B10C(reply, "1", v17);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);
    }

    return;
  }
  xpc_object_t v19 = xpc_dictionary_create_reply(v5);
  sub_100174DB0();
  __int16 v20 = (__CFString *)ISErrorWithDomain();
  sub_10010B10C(v19, "1", v20);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v19);

  xpc_release(v19);
}

intptr_t sub_10003C02C(uint64_t a1, __CFString *a2)
{
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v6 &= 2u;
  }
  if (v6)
  {
    uint64_t v7 = objc_opt_class();
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138543874;
    uint64_t v15 = v7;
    __int16 v16 = 2112;
    uint64_t v17 = a2;
    __int16 v18 = 2114;
    uint64_t v19 = v8;
    LODWORD(v13) = 32;
    uint64_t v9 = _os_log_send_and_compose_impl();
    if (v9)
    {
      dispatch_time_t v10 = (void *)v9;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v14, v13);
      free(v10);
      SSFileLog();
    }
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 48));
  sub_10010B10C(reply, "0", a2);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 56), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
}

void sub_10003C24C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  uint64_t int64 = xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 40), "2");
  CFDictionaryRef v21 = sub_10010B088(*(void **)(a1 + 40), "3");
  if (!uint64)
  {
    CFDictionaryRef v7 = (CFDictionaryRef)[v3 clientIdentifier];
    goto LABEL_5;
  }
  unsigned __int8 v5 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
  int v6 = *(void **)(a1 + 40);
  if (v5)
  {
    CFDictionaryRef v7 = sub_10010B088(v6, "4");
LABEL_5:
    CFDictionaryRef v8 = v7;
    uint64_t v9 = dispatch_semaphore_create(0);
    -[PromotedIAPManager setOrderForIAPs:app:completionHandler:](+[PromotedIAPManager sharedInstance](PromotedIAPManager, "sharedInstance"), "setOrderForIAPs:app:completionHandler:");
    dispatch_time_t v10 = dispatch_time(0, 90000000000);
    if (dispatch_semaphore_wait(v9, v10))
    {
      id v11 = +[SSLogConfig sharedDaemonConfig];
      if (!v11) {
        id v11 = +[SSLogConfig sharedConfig];
      }
      unsigned int v12 = [v11 shouldLog];
      if ([v11 shouldLogToDisk]) {
        int v13 = v12 | 2;
      }
      else {
        int v13 = v12;
      }
      if (!os_log_type_enabled((os_log_t)[v11 OSLogObject], OS_LOG_TYPE_ERROR)) {
        v13 &= 2u;
      }
      if (v13)
      {
        int v22 = 138543874;
        uint64_t v23 = objc_opt_class();
        __int16 v24 = 2112;
        CFDictionaryRef v25 = v8;
        __int16 v26 = 2112;
        CFDictionaryRef v27 = v21;
        LODWORD(v20) = 32;
        uint64_t v14 = _os_log_send_and_compose_impl();
        if (v14)
        {
          uint64_t v15 = (void *)v14;
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v22, v20);
          free(v15);
          SSFileLog();
        }
      }
      sub_100174DB0();
      __int16 v16 = (__CFString *)ISErrorWithDomain();
      xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
      sub_100174DCC(reply, "0", v16);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);
    }

    return;
  }
  xpc_object_t v18 = xpc_dictionary_create_reply(v6);
  sub_100174DB0();
  uint64_t v19 = (__CFString *)ISErrorWithDomain();
  sub_100174DCC(v18, "0", v19);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v18);
  xpc_release(v18);
}

intptr_t sub_10003C5D0(uint64_t a1, char a2)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  if (a2)
  {
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v7 &= 2u;
    }
    if (!v7)
    {
      unsigned int v12 = 0;
      goto LABEL_23;
    }
    uint64_t v8 = objc_opt_class();
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(a1 + 56);
    int v21 = 138543874;
    uint64_t v22 = v8;
    __int16 v23 = 2112;
    uint64_t v24 = v9;
    __int16 v25 = 2114;
    uint64_t v26 = v10;
    LODWORD(v20) = 32;
    id v11 = (void *)_os_log_send_and_compose_impl();
    unsigned int v12 = 0;
    if (!v11) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  sub_100174DB0();
  unsigned int v12 = (__CFString *)ISErrorWithDomain();
  id v13 = +[SSLogConfig sharedDaemonConfig];
  if (!v13) {
    id v13 = +[SSLogConfig sharedConfig];
  }
  unsigned int v14 = [v13 shouldLog];
  if ([v13 shouldLogToDisk]) {
    int v15 = v14 | 2;
  }
  else {
    int v15 = v14;
  }
  if (!os_log_type_enabled((os_log_t)[v13 OSLogObject], OS_LOG_TYPE_ERROR)) {
    v15 &= 2u;
  }
  if (v15)
  {
    uint64_t v16 = objc_opt_class();
    uint64_t v17 = *(void *)(a1 + 48);
    uint64_t v18 = *(void *)(a1 + 56);
    int v21 = 138543874;
    uint64_t v22 = v16;
    __int16 v23 = 2112;
    uint64_t v24 = v17;
    __int16 v25 = 2114;
    uint64_t v26 = v18;
    LODWORD(v20) = 32;
    id v11 = (void *)_os_log_send_and_compose_impl();
    if (v11)
    {
LABEL_21:
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v21, v20);
      free(v11);
      SSFileLog();
    }
  }
LABEL_23:
  sub_100174DCC(reply, "0", v12);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 64), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 72));
}

void sub_10003C8FC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  uint64_t int64 = xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 40), "2");
  CFDictionaryRef v25 = sub_10010B088(*(void **)(a1 + 40), "3");
  if (!uint64)
  {
    CFDictionaryRef v7 = (CFDictionaryRef)[v3 clientIdentifier];
    goto LABEL_5;
  }
  unsigned __int8 v5 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
  unsigned int v6 = *(void **)(a1 + 40);
  if (v5)
  {
    CFDictionaryRef v7 = sub_10010B088(v6, "4");
LABEL_5:
    CFDictionaryRef v8 = v7;
    uint64_t v9 = dispatch_semaphore_create(0);
    uint64_t v10 = +[PromotedIAPManager sharedInstance];
    CFDictionaryRef v33 = v25;
    id v11 = +[NSArray arrayWithObjects:&v33 count:1];
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_10003CCA8;
    v26[3] = &unk_1003A4008;
    uint64_t v12 = *(void *)(a1 + 40);
    v26[4] = *(void *)(a1 + 32);
    v26[5] = v8;
    v26[6] = v12;
    v26[7] = v25;
    v26[8] = *(void *)(a1 + 48);
    v26[9] = v9;
    [(PromotedIAPManager *)v10 getVisibilityForIAPs:v11 app:v8 completionHandler:v26];
    dispatch_time_t v13 = dispatch_time(0, 90000000000);
    if (dispatch_semaphore_wait(v9, v13))
    {
      id v14 = +[SSLogConfig sharedDaemonConfig];
      if (!v14) {
        id v14 = +[SSLogConfig sharedConfig];
      }
      unsigned int v15 = [v14 shouldLog];
      if ([v14 shouldLogToDisk]) {
        int v16 = v15 | 2;
      }
      else {
        int v16 = v15;
      }
      if (!os_log_type_enabled((os_log_t)[v14 OSLogObject], OS_LOG_TYPE_ERROR)) {
        v16 &= 2u;
      }
      if (v16)
      {
        uint64_t v17 = objc_opt_class();
        int v27 = 138543874;
        uint64_t v28 = v17;
        __int16 v29 = 2114;
        CFDictionaryRef v30 = v8;
        __int16 v31 = 2112;
        CFDictionaryRef v32 = v25;
        LODWORD(v24) = 32;
        uint64_t v18 = _os_log_send_and_compose_impl();
        if (v18)
        {
          uint64_t v19 = (void *)v18;
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v27, v24);
          free(v19);
          SSFileLog();
        }
      }
      sub_100174DB0();
      uint64_t v20 = (__CFString *)ISErrorWithDomain();
      xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
      sub_100174DCC(reply, "1", v20);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);
    }

    return;
  }
  xpc_object_t v22 = xpc_dictionary_create_reply(v6);
  sub_100174DB0();
  __int16 v23 = (__CFString *)ISErrorWithDomain();
  sub_100174DCC(v22, "1", v23);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v22);
  xpc_release(v22);
}

intptr_t sub_10003CCA8(uint64_t a1, void *a2)
{
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v6 &= 2u;
  }
  if (v6)
  {
    uint64_t v7 = objc_opt_class();
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138543874;
    uint64_t v15 = v7;
    __int16 v16 = 2112;
    uint64_t v17 = a2;
    __int16 v18 = 2114;
    uint64_t v19 = v8;
    LODWORD(v13) = 32;
    uint64_t v9 = _os_log_send_and_compose_impl();
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v14, v13);
      free(v10);
      SSFileLog();
    }
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 48));
  xpc_dictionary_set_int64(reply, "0", (int64_t)objc_msgSend(objc_msgSend(a2, "objectForKey:", *(void *)(a1 + 56)), "integerValue"));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 64), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 72));
}

void sub_10003CEDC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  uint64_t int64 = xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 40), "2");
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "3");
  CFDictionaryRef v22 = sub_10010B088(*(void **)(a1 + 40), "4");
  if (!uint64)
  {
    CFDictionaryRef v8 = (CFDictionaryRef)[v3 clientIdentifier];
    goto LABEL_5;
  }
  unsigned __int8 v6 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
  uint64_t v7 = *(void **)(a1 + 40);
  if (v6)
  {
    CFDictionaryRef v8 = sub_10010B088(v7, "5");
LABEL_5:
    CFDictionaryRef v9 = v8;
    uint64_t v10 = dispatch_semaphore_create(0);
    -[PromotedIAPManager setVisibility:forIAP:app:completionHandler:](+[PromotedIAPManager sharedInstance](PromotedIAPManager, "sharedInstance"), "setVisibility:forIAP:app:completionHandler:", int64);
    dispatch_time_t v11 = dispatch_time(0, 90000000000);
    if (dispatch_semaphore_wait(v10, v11))
    {
      id v12 = +[SSLogConfig sharedDaemonConfig];
      if (!v12) {
        id v12 = +[SSLogConfig sharedConfig];
      }
      unsigned int v13 = [v12 shouldLog];
      if ([v12 shouldLogToDisk]) {
        int v14 = v13 | 2;
      }
      else {
        int v14 = v13;
      }
      if (!os_log_type_enabled((os_log_t)[v12 OSLogObject], OS_LOG_TYPE_ERROR)) {
        v14 &= 2u;
      }
      if (v14)
      {
        int v23 = 138543874;
        uint64_t v24 = objc_opt_class();
        __int16 v25 = 2112;
        CFDictionaryRef v26 = v22;
        __int16 v27 = 2114;
        CFDictionaryRef v28 = v9;
        LODWORD(v21) = 32;
        uint64_t v15 = _os_log_send_and_compose_impl();
        if (v15)
        {
          __int16 v16 = (void *)v15;
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v23, v21);
          free(v16);
          SSFileLog();
        }
      }
      xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
      sub_100174DB0();
      __int16 v18 = (__CFString *)ISErrorWithDomain();
      sub_100174DCC(reply, "0", v18);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);
    }

    return;
  }
  xpc_object_t v19 = xpc_dictionary_create_reply(v7);
  sub_100174DB0();
  uint64_t v20 = (__CFString *)ISErrorWithDomain();
  sub_100174DCC(v19, "0", v20);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v19);
  xpc_release(v19);
}

intptr_t sub_10003D280(uint64_t a1, char a2)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  if (a2)
  {
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v7 &= 2u;
    }
    if (!v7)
    {
      unsigned int v13 = 0;
      goto LABEL_23;
    }
    uint64_t v8 = objc_opt_class();
    uint64_t v9 = *(void *)(a1 + 80);
    uint64_t v10 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 56);
    int v23 = 138544130;
    uint64_t v24 = v8;
    __int16 v25 = 2050;
    uint64_t v26 = v9;
    __int16 v27 = 2112;
    uint64_t v28 = v10;
    __int16 v29 = 2114;
    uint64_t v30 = v11;
    LODWORD(v22) = 42;
    id v12 = (void *)_os_log_send_and_compose_impl();
    unsigned int v13 = 0;
    if (!v12) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  sub_100174DB0();
  unsigned int v13 = (__CFString *)ISErrorWithDomain();
  id v14 = +[SSLogConfig sharedDaemonConfig];
  if (!v14) {
    id v14 = +[SSLogConfig sharedConfig];
  }
  unsigned int v15 = [v14 shouldLog];
  if ([v14 shouldLogToDisk]) {
    int v16 = v15 | 2;
  }
  else {
    int v16 = v15;
  }
  if (!os_log_type_enabled((os_log_t)[v14 OSLogObject], OS_LOG_TYPE_ERROR)) {
    v16 &= 2u;
  }
  if (v16)
  {
    uint64_t v17 = objc_opt_class();
    uint64_t v18 = *(void *)(a1 + 80);
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v20 = *(void *)(a1 + 56);
    int v23 = 138544130;
    uint64_t v24 = v17;
    __int16 v25 = 2050;
    uint64_t v26 = v18;
    __int16 v27 = 2112;
    uint64_t v28 = v19;
    __int16 v29 = 2114;
    uint64_t v30 = v20;
    LODWORD(v22) = 42;
    id v12 = (void *)_os_log_send_and_compose_impl();
    if (v12)
    {
LABEL_21:
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v23, v22);
      free(v12);
      SSFileLog();
    }
  }
LABEL_23:
  sub_100174DCC(reply, "0", v13);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 64), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 72));
}

void sub_10003D5CC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  unsigned __int8 v4 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
  id v5 = *(void **)(a1 + 40);
  if (v4)
  {
    CFDictionaryRef v6 = sub_10010B088(v5, "2");
    int v7 = dispatch_semaphore_create(0);
    uint64_t v8 = +[PromotedIAPManager sharedInstance];
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_10003D8F4;
    v21[3] = &unk_1003A4058;
    v21[4] = *(void *)(a1 + 32);
    v21[5] = v6;
    long long v22 = *(_OWORD *)(a1 + 40);
    int v23 = v7;
    [(PromotedIAPManager *)v8 getInfoInternalForApp:v6 completionHandler:v21];
    dispatch_time_t v9 = dispatch_time(0, 90000000000);
    if (dispatch_semaphore_wait(v7, v9))
    {
      id v10 = +[SSLogConfig sharedDaemonConfig];
      if (!v10) {
        id v10 = +[SSLogConfig sharedConfig];
      }
      unsigned int v11 = [v10 shouldLog];
      if ([v10 shouldLogToDisk]) {
        int v12 = v11 | 2;
      }
      else {
        int v12 = v11;
      }
      if (!os_log_type_enabled((os_log_t)[v10 OSLogObject], OS_LOG_TYPE_ERROR)) {
        v12 &= 2u;
      }
      if (v12)
      {
        uint64_t v13 = objc_opt_class();
        int v24 = 138543618;
        uint64_t v25 = v13;
        __int16 v26 = 2112;
        CFDictionaryRef v27 = v6;
        LODWORD(v20) = 22;
        uint64_t v14 = _os_log_send_and_compose_impl();
        if (v14)
        {
          unsigned int v15 = (void *)v14;
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v24, v20);
          free(v15);
          SSFileLog();
        }
      }
      sub_100174DB0();
      int v16 = (__CFString *)ISErrorWithDomain();
      xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
      sub_100174DCC(reply, "3", v16);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);
    }
  }
  else
  {
    xpc_object_t v18 = xpc_dictionary_create_reply(v5);
    sub_100174DB0();
    uint64_t v19 = (__CFString *)ISErrorWithDomain();
    sub_100174DCC(v18, "3", v19);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v18);
    xpc_release(v18);
  }
}

intptr_t sub_10003D8F4(uint64_t a1, __CFString *a2, void *a3, void *a4)
{
  id v8 = +[SSLogConfig sharedDaemonConfig];
  if (!v8) {
    id v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  if (!os_log_type_enabled((os_log_t)[v8 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v10 &= 2u;
  }
  if (v10)
  {
    uint64_t v11 = objc_opt_class();
    uint64_t v12 = *(void *)(a1 + 40);
    int v20 = 138544386;
    uint64_t v21 = v11;
    __int16 v22 = 2114;
    uint64_t v23 = v12;
    __int16 v24 = 2112;
    uint64_t v25 = a2;
    __int16 v26 = 2112;
    CFDictionaryRef v27 = a3;
    __int16 v28 = 2112;
    __int16 v29 = a4;
    LODWORD(v19) = 52;
    uint64_t v13 = _os_log_send_and_compose_impl();
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v20, v19);
      free(v14);
      SSFileLog();
    }
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 48));
  int v16 = (__CFString *)[a3 allObjects];
  uint64_t v17 = (__CFString *)[a4 allObjects];
  sub_100174DCC(reply, "0", a2);
  sub_100174DCC(reply, "1", v16);
  sub_100174DCC(reply, "2", v17);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 56), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
}

void sub_10003DB78(uint64_t a1)
{
  id v2 = [[XPCClient alloc] initWithInputConnection:*(void *)(a1 + 32)];
  if (!v2) {
    goto LABEL_94;
  }
  uint64_t v77 = 0;
  id v3 = objc_msgSend(objc_alloc((Class)LSApplicationRecord), "initWithBundleIdentifier:allowPlaceholder:error:", -[XPCClient clientIdentifier](v2, "clientIdentifier"), 1, &v77);
  id v4 = [v3 typeForInstallMachinery];
  unsigned int v5 = [v4 isEqualToString:LSSystemApplicationType];

  unsigned int v6 = [(XPCClient *)v2 isBetaApp];
  unsigned int v7 = [(XPCClient *)v2 isAdHocCodeSigned];
  id v8 = +[SSLogConfig sharedDaemonConfig];
  if (!v8) {
    id v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  if (!os_log_type_enabled((os_log_t)[v8 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v10 &= 2u;
  }
  if (v10)
  {
    uint64_t v11 = objc_opt_class();
    CFStringRef v12 = @"NO";
    if (v6) {
      CFStringRef v13 = @"YES";
    }
    else {
      CFStringRef v13 = @"NO";
    }
    *(_DWORD *)v80 = 138544130;
    *(void *)&v80[4] = v11;
    if (v7) {
      CFStringRef v14 = @"YES";
    }
    else {
      CFStringRef v14 = @"NO";
    }
    __int16 v81 = 2114;
    if (v5) {
      CFStringRef v12 = @"YES";
    }
    CFStringRef v82 = v13;
    __int16 v83 = 2114;
    CFStringRef v84 = v14;
    __int16 v85 = 2114;
    CFStringRef v86 = v12;
    LODWORD(v68) = 42;
    long long v66 = (NSString *)v80;
    uint64_t v15 = _os_log_send_and_compose_impl();
    if (v15)
    {
      int v16 = (void *)v15;
      uint64_t v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, v80, v68);
      free(v16);
      long long v66 = v17;
      SSFileLog();
    }
  }
  if ((v6 ^ 1 | v5) != 1)
  {
    id v33 = +[SSLogConfig sharedDaemonConfig];
    if (!v33) {
      id v33 = +[SSLogConfig sharedConfig];
    }
    unsigned int v34 = objc_msgSend(v33, "shouldLog", v66);
    if ([v33 shouldLogToDisk]) {
      int v35 = v34 | 2;
    }
    else {
      int v35 = v34;
    }
    if (!os_log_type_enabled((os_log_t)[v33 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v35 &= 2u;
    }
    if (!v35) {
      goto LABEL_55;
    }
    goto LABEL_53;
  }
  unsigned int v18 = [+[NSUserDefaults standardUserDefaults] BOOLForKey:@"UseSandboxReviewPromptModeForSystemApps"] & v5;
  unsigned int v19 = ![(XPCClient *)v2 isAppleSigned] | v18;
  if (v5) {
    int v20 = v19;
  }
  else {
    int v20 = v19 | v7;
  }
  unsigned int v21 = objc_msgSend(*(id *)(a1 + 40), "_inAppReviewEnabled", v66);
  id v22 = +[SSLogConfig sharedDaemonConfig];
  if (!v22) {
    id v22 = +[SSLogConfig sharedConfig];
  }
  unsigned int v23 = [v22 shouldLog];
  if ([v22 shouldLogToDisk]) {
    int v24 = v23 | 2;
  }
  else {
    int v24 = v23;
  }
  if (!os_log_type_enabled((os_log_t)[v22 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v24 &= 2u;
  }
  if (v24)
  {
    uint64_t v25 = objc_opt_class();
    *(_DWORD *)v80 = 138544386;
    __int16 v26 = v18 ? @"YES" : @"NO";
    *(void *)&v80[4] = v25;
    CFDictionaryRef v27 = v20 ? @"YES" : @"NO";
    __int16 v81 = 2114;
    __int16 v28 = v21 ? @"YES" : @"NO";
    CFStringRef v82 = @"NO";
    __int16 v83 = 2114;
    CFStringRef v84 = v26;
    __int16 v85 = 2114;
    CFStringRef v86 = v27;
    __int16 v87 = 2114;
    v88 = v28;
    LODWORD(v68) = 52;
    long long v67 = (NSString *)v80;
    uint64_t v29 = _os_log_send_and_compose_impl();
    if (v29)
    {
      uint64_t v30 = (void *)v29;
      __int16 v31 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v29, 4, v80, v68);
      free(v30);
      long long v67 = v31;
      SSFileLog();
    }
  }
  if (!v20)
  {
    if (v21)
    {
      id v38 = [*(id *)(a1 + 40) _inAppReviewRequestConstants];
      id v39 = objc_msgSend(objc_msgSend(v38, "objectForKey:", @"inAppReviewRequestLimitWindow"), "integerValue");
      id v40 = objc_msgSend(objc_msgSend(v38, "objectForKey:", @"inAppReviewRequiredDaysAfterReview"), "integerValue");
      id v71 = objc_msgSend(objc_msgSend(v38, "objectForKey:", @"inAppReviewRequestsPerWindow"), "integerValue");
      unsigned int v72 = objc_msgSend(objc_msgSend(v38, "objectForKey:", @"inAppReviewRequireNewVersionAfterReview"), "BOOLValue");
      id v41 = [*(id *)(a1 + 40) _beginManagedContextSession];
      id v42 = +[InAppReviewRequest entityForContext:v41];
      id v43 = objc_alloc_init((Class)NSFetchRequest);
      id v69 = v42;
      [v43 setEntity:v42];
      [v43 setPredicate:+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"bundleIdentifier = %@", -[XPCClient clientIdentifier](v2, "clientIdentifier"))];
      v79 = +[NSSortDescriptor sortDescriptorWithKey:@"date" ascending:0];
      objc_msgSend(v43, "setSortDescriptors:", +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v79, 1));
      *(void *)v80 = 0;
      v70 = v41;
      id v44 = [v41 executeFetchRequest:v43 error:v80];

      uint64_t v45 = +[NSDate dateWithTimeIntervalSinceNow:(double)(-86400 * (uint64_t)v39)];
      id v46 = +[NSDate dateWithTimeIntervalSinceNow:(double)(-86400 * (uint64_t)v40)];
      long long v73 = 0u;
      long long v74 = 0u;
      long long v75 = 0u;
      long long v76 = 0u;
      unsigned int v47 = v44;
      id v48 = [v44 countByEnumeratingWithState:&v73 objects:v78 count:16];
      if (v48)
      {
        id v49 = v48;
        unint64_t v50 = 0;
        uint64_t v51 = *(void *)v74;
        while (2)
        {
          for (uint64_t i = 0; i != v49; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v74 != v51) {
              objc_enumerationMutation(v47);
            }
            __int16 v53 = *(void **)(*((void *)&v73 + 1) + 8 * i);
            if (objc_msgSend(objc_msgSend(v53, "date"), "compare:", v45) == (id)1
              && (++v50, v50 >= (unint64_t)v71)
              || objc_msgSend(objc_msgSend(v53, "date"), "compare:", v46) == (id)1
              && ([v53 rated] & 1) != 0
              || ([v53 rated] & v72) == 1
              && (objc_msgSend(objc_msgSend(v53, "bundleVersion"), "isEqualToString:", -[XPCClient clientVersion](v2, "clientVersion")) & 1) != 0)
            {
              id v32 = 0;
              goto LABEL_81;
            }
          }
          id v49 = [v47 countByEnumeratingWithState:&v73 objects:v78 count:16];
          if (v49) {
            continue;
          }
          break;
        }
      }
      uint64_t v54 = [[InAppReviewRequest alloc] initWithEntity:v69 insertIntoManagedObjectContext:v70];
      [(InAppReviewRequest *)v54 setBundleIdentifier:[(XPCClient *)v2 clientIdentifier]];
      [(InAppReviewRequest *)v54 setBundleVersion:[(XPCClient *)v2 clientVersion]];
      [(InAppReviewRequest *)v54 setDate:+[NSDate date]];
      id v32 = [(InAppReviewRequest *)v54 valueHash];
      sub_10004BBA0(v70);

      goto LABEL_81;
    }
    id v55 = +[SSLogConfig sharedDaemonConfig];
    if (!v55) {
      id v55 = +[SSLogConfig sharedConfig];
    }
    unsigned int v56 = objc_msgSend(v55, "shouldLog", v67);
    if ([v55 shouldLogToDisk]) {
      int v57 = v56 | 2;
    }
    else {
      int v57 = v56;
    }
    if (!os_log_type_enabled((os_log_t)[v55 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v57 &= 2u;
    }
    if (!v57) {
      goto LABEL_55;
    }
LABEL_53:
    uint64_t v36 = objc_opt_class();
    *(_DWORD *)v80 = 138543362;
    *(void *)&v80[4] = v36;
    LODWORD(v68) = 12;
    long long v67 = (NSString *)v80;
    id v32 = (id)_os_log_send_and_compose_impl();
    if (!v32) {
      goto LABEL_81;
    }
    uint64_t v37 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v32, 4, v80, v68);
    free(v32);
    long long v67 = v37;
    SSFileLog();
LABEL_55:
    id v32 = 0;
    goto LABEL_81;
  }
  id v32 = (id)SSXPCInAppReviewSandboxToken;
LABEL_81:
  id v58 = +[SSLogConfig sharedDaemonConfig];
  if (!v58) {
    id v58 = +[SSLogConfig sharedConfig];
  }
  unsigned int v59 = [v58 shouldLog];
  if ([v58 shouldLogToDisk]) {
    int v60 = v59 | 2;
  }
  else {
    int v60 = v59;
  }
  if (!os_log_type_enabled((os_log_t)[v58 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v60 &= 2u;
  }
  if (v60)
  {
    uint64_t v61 = objc_opt_class();
    CFStringRef v62 = @"NO";
    if (v32) {
      CFStringRef v62 = @"YES";
    }
    *(_DWORD *)v80 = 138543618;
    *(void *)&v80[4] = v61;
    __int16 v81 = 2114;
    CFStringRef v82 = v62;
    LODWORD(v68) = 22;
    uint64_t v63 = _os_log_send_and_compose_impl();
    if (v63)
    {
      long long v64 = (void *)v63;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v63, 4, v80, v68);
      free(v64);
      SSFileLog();
    }
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 48));
  xpc_dictionary_set_int64(reply, "0", 1011);
  SSXPCDictionarySetCFObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
  xpc_release(reply);
LABEL_94:
}

intptr_t sub_10003E694(uint64_t a1)
{
  if ([*(id *)(a1 + 32) success])
  {
    id v2 = [*(id *)(a1 + 32) URLBag];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    unsigned int v7 = sub_10003E784;
    id v8 = &unk_1003A4080;
    id v3 = *(void **)(a1 + 40);
    id v9 = v2;
    id v10 = v3;
    id v4 = objc_msgSend(v2, "valueForKey:", @"inAppReviewRequestLimitWindow", _NSConcreteStackBlock, 3221225472);
    if (v4) {
      [v10 setObject:v4 forKey:@"inAppReviewRequestLimitWindow"];
    }
    v7((uint64_t)v6, @"inAppReviewRequestsPerWindow");
    v7((uint64_t)v6, @"inAppReviewRequiredDaysAfterReview");
    v7((uint64_t)v6, @"inAppReviewRequireNewVersionAfterReview");
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

id sub_10003E784(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) valueForKey:a2];
  if (result)
  {
    id v5 = result;
    unsigned int v6 = *(void **)(a1 + 40);
    return [v6 setObject:v5 forKey:a2];
  }
  return result;
}

void sub_10003E850(uint64_t a1)
{
  id v2 = [[XPCClient alloc] initWithInputConnection:*(void *)(a1 + 32)];
  objc_opt_class();
  uint64_t v3 = SSXPCDictionaryCopyCFObjectWithClass();
  id v4 = (void *)v3;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    id v6 = [*(id *)(a1 + 48) _beginManagedContextSession];
    id v7 = +[InAppReviewRequest entityForContext:v6];
    id v8 = objc_alloc_init((Class)NSFetchRequest);
    [v8 setEntity:v7];
    [v8 setPredicate:+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"bundleIdentifier = %@", -[XPCClient clientIdentifier](v2, "clientIdentifier"))];
    unsigned int v21 = +[NSSortDescriptor sortDescriptorWithKey:@"date" ascending:0];
    objc_msgSend(v8, "setSortDescriptors:", +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v21, 1));
    uint64_t v19 = 0;
    id v9 = [v6 executeFetchRequest:v8 error:&v19];

    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v10 = [v9 countByEnumeratingWithState:&v15 objects:v20 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v16;
      while (2)
      {
        for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v16 != v12) {
            objc_enumerationMutation(v9);
          }
          CFStringRef v14 = *(void **)(*((void *)&v15 + 1) + 8 * i);
          if (objc_msgSend(objc_msgSend(v14, "valueHash"), "isEqualToString:", v4))
          {
            [v14 setRated:1];
            sub_10004BBA0(v6);
            goto LABEL_15;
          }
        }
        id v11 = [v9 countByEnumeratingWithState:&v15 objects:v20 count:16];
        if (v11) {
          continue;
        }
        break;
      }
    }
  }
LABEL_15:
}

void sub_10003EB30(uint64_t a1)
{
  id v2 = [[XPCClient alloc] initWithInputConnection:*(void *)(a1 + 32)];
  if (v2)
  {
    id v3 = [*(id *)(a1 + 40) _beginManagedContextSession];
    id v4 = +[InAppReviewRequest entityForContext:v3];
    id v5 = objc_alloc_init((Class)NSFetchRequest);
    [v5 setEntity:v4];
    uint64_t v15 = 0;
    id v6 = [v3 executeFetchRequest:v5 error:&v15];

    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v11 objects:v16 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v12;
      do
      {
        id v10 = 0;
        do
        {
          if (*(void *)v12 != v9) {
            objc_enumerationMutation(v6);
          }
          [v3 deleteObject:*(void *)(*((void *)&v11 + 1) + 8 * (void)v10)];
          id v10 = (char *)v10 + 1;
        }
        while (v8 != v10);
        id v8 = [v6 countByEnumeratingWithState:&v11 objects:v16 count:16];
      }
      while (v8);
    }
    if ([v3 hasChanges]) {
      sub_10004BBA0(v3);
    }
  }
}

id sub_10003ED7C(uint64_t a1)
{
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(void **)(*(void *)(a1 + 32) + 32);
  id result = [v2 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v19;
    while (2)
    {
      id v6 = 0;
      do
      {
        if (*(void *)v19 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v18 + 1) + 8 * (void)v6);
        if ([v7 XPCClient] == *(id *)(a1 + 40))
        {
          id v8 = +[SSLogConfig sharedDaemonConfig];
          if (!v8) {
            id v8 = +[SSLogConfig sharedConfig];
          }
          unsigned int v9 = [v8 shouldLog];
          if ([v8 shouldLogToDisk]) {
            int v10 = v9 | 2;
          }
          else {
            int v10 = v9;
          }
          if (!os_log_type_enabled((os_log_t)[v8 OSLogObject], OS_LOG_TYPE_INFO)) {
            v10 &= 2u;
          }
          if (v10)
          {
            uint64_t v11 = objc_opt_class();
            uint64_t v12 = *(void *)(a1 + 40);
            int v22 = 138412546;
            uint64_t v23 = v11;
            __int16 v24 = 2112;
            uint64_t v25 = v12;
            LODWORD(v17) = 22;
            long long v16 = &v22;
            uint64_t v13 = _os_log_send_and_compose_impl();
            if (v13)
            {
              long long v14 = (void *)v13;
              uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v22, v17);
              free(v14);
              long long v16 = (int *)v15;
              SSFileLog();
            }
          }
          return objc_msgSend(v7, "setXPCClient:", 0, v16);
        }
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id result = [v2 countByEnumeratingWithState:&v18 objects:v26 count:16];
      id v4 = result;
      if (result) {
        continue;
      }
      break;
    }
  }
  return result;
}

void *sub_10003F024(void *result)
{
  if (*(unsigned char *)(result[4] + 48))
  {
    id v1 = result;
    id v2 = +[NSNotificationCenter defaultCenter];
    [(NSNotificationCenter *)v2 removeObserver:v1[4] name:ISNetworkTypeChangedNotification object:0];
    *(unsigned char *)(v1[4] + 48) = 0;
    id v3 = (void *)v1[4];
    return [v3 _startFirstReadyPayment];
  }
  return result;
}

id sub_10003F108(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startFirstReadyPayment];
}

id sub_10003F1A4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _clients];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) firstReadyPaymentID];
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      id v3 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_10003FDE4(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:xpc_int64_get_value(object)];
    [*(id *)(a1 + 32) addObject:v5];
  }
  return 1;
}

id sub_10003FEFC(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];

  return [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.MicroPaymentQueue"];
}

void *sub_100040194(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  uint64_t v3 = result[1];
  if (!v3 || v3 == *(void *)(a1 + 40))
  {
    [result _setActivePaymentID:0];
    id result = [*(id *)(a1 + 32) _startFirstReadyPayment];
  }
  if (!*(unsigned char *)(a1 + 48) && !*(unsigned char *)(*(void *)(a1 + 32) + 48))
  {
    uint64_t v4 = +[NSNotificationCenter defaultCenter];
    id result = [(NSNotificationCenter *)v4 addObserver:*(void *)(a1 + 32) selector:"_networkTypeChanged:" name:ISNetworkTypeChangedNotification object:0];
    *(unsigned char *)(*(void *)(a1 + 32) + 48) = 1;
  }
  return result;
}

void sub_10004049C(uint64_t a1, void *a2)
{
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v6 &= 2u;
  }
  if (v6)
  {
    uint64_t v7 = objc_opt_class();
    uint64_t v8 = *(void *)(a1 + 40);
    int v38 = 138543874;
    uint64_t v39 = v7;
    __int16 v40 = 2114;
    uint64_t v41 = v8;
    __int16 v42 = 2114;
    id v43 = a2;
    LODWORD(v32) = 32;
    uint64_t v30 = &v38;
    uint64_t v9 = _os_log_send_and_compose_impl();
    if (v9)
    {
      int v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v38, v32);
      free(v10);
      uint64_t v30 = (int *)v11;
      SSFileLog();
    }
  }
  if (a2 && [a2 count])
  {
    uint64_t v12 = objc_opt_new();
    uint64_t v13 = +[NSDate dateWithTimeIntervalSinceNow:-900.0];
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id v14 = [a2 countByEnumeratingWithState:&v33 objects:v37 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v34;
      do
      {
        for (uint64_t i = 0; i != v15; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v34 != v16) {
            objc_enumerationMutation(a2);
          }
          long long v18 = *(void **)(*((void *)&v33 + 1) + 8 * i);
          objc_msgSend(objc_msgSend(v18, "timestamp", v30), "doubleValue");
          if ((id)-[NSDate compare:](+[NSDate dateWithTimeIntervalSince1970:](NSDate, "dateWithTimeIntervalSince1970:"), "compare:", v13) == (id)1)[v12 addObject:v18]; {
        }
          }
        id v15 = [a2 countByEnumeratingWithState:&v33 objects:v37 count:16];
      }
      while (v15);
    }
    id v19 = +[SSLogConfig sharedDaemonConfig];
    if (!v19) {
      id v19 = +[SSLogConfig sharedConfig];
    }
    unsigned int v20 = [v19 shouldLog];
    if ([v19 shouldLogToDisk]) {
      int v21 = v20 | 2;
    }
    else {
      int v21 = v20;
    }
    if (!os_log_type_enabled((os_log_t)[v19 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v21 &= 2u;
    }
    if (v21)
    {
      uint64_t v22 = objc_opt_class();
      uint64_t v23 = *(void *)(a1 + 40);
      int v38 = 138543874;
      uint64_t v39 = v22;
      __int16 v40 = 2114;
      uint64_t v41 = v23;
      __int16 v42 = 2114;
      id v43 = a2;
      LODWORD(v32) = 32;
      __int16 v31 = &v38;
      uint64_t v24 = _os_log_send_and_compose_impl();
      if (v24)
      {
        uint64_t v25 = (void *)v24;
        __int16 v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v38, v32);
        free(v25);
        __int16 v31 = (int *)v26;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 56), "sendPurchaseIntents:forApp:", v12, *(void *)(a1 + 40), v31);

    [+[PurchaseActionsManager sharedInstance] deletePurchaseIntentsForApp:*(void *)(a1 + 40)];
  }
  uint64_t v29 = *(NSObject **)(a1 + 48);
  __int16 v28 = (dispatch_object_t *)(a1 + 48);
  CFDictionaryRef v27 = v29;
  if (v29)
  {
    dispatch_semaphore_signal(v27);
    dispatch_release(*v28);
  }
}

id sub_100040B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [*(id *)(a1 + 32) object];
  uint64_t v7 = *(void *)(a1 + 40);

  return [v6 _finishPaymentOperationForPaymentID:v7 result:a2 error:a3];
}

uint64_t sub_10004605C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  unsigned int v5 = [[SKDownload alloc] initWithXPCEncoding:v4];

  if (v5) {
    [*(id *)(a1 + 32) addObject:v5];
  }

  return 1;
}

void sub_1000469F4(_Unwind_Exception *a1)
{
}

void sub_100046A14(void *a1)
{
}

void *sub_100047600()
{
  uint64_t v0 = (void *)MGCopyAnswer();
  id v1 = v0;
  if (v0)
  {
    memset(length, 0, sizeof(length));
    sub_10029E5E4((uint64_t)[v0 UTF8String], (uint64_t)objc_msgSend(v0, "length"), (uint64_t)length);
    if (v2)
    {
      CFRelease(v1);
    }
    else
    {
      CFDataRef v3 = CFDataCreate(0, (const UInt8 *)length + 4, LODWORD(length[0]));
      CFRelease(v1);
      if (v3)
      {
        id v1 = sub_1000476F0(0, v3);
        CFRelease(v3);
        return v1;
      }
    }
    return 0;
  }
  return v1;
}

void *sub_1000476F0(int a1, const void *a2)
{
  id v4 = malloc_type_calloc(1uLL, 0x18uLL, 0x1060040F76DDFE0uLL);
  if (a2 && CFDataGetLength((CFDataRef)a2))
  {
    *(_DWORD *)id v4 = a1;
    v4[1] = CFRetain(a2);
    *((_DWORD *)v4 + 4) = sub_100048060();
  }
  else
  {
    free(v4);
    return 0;
  }
  return v4;
}

void sub_100047778(void **a1)
{
  if (a1)
  {
    int v2 = *a1;
    if (*a1)
    {
      CFDataRef v3 = (const void *)v2[1];
      if (v3) {
        CFRelease(v3);
      }
      free(v2);
    }
    *a1 = 0;
  }
}

BOOL sub_1000477C0(int a1, CFReadStreamRef stream, CFDataRef theData, CFDataRef *a4, const __CFData *a5, void *a6)
{
  if (a6)
  {
    __int16 v31 = a6;
    uint64_t v12 = (uint64_t)a6;
  }
  else
  {
    uint64_t v12 = (uint64_t)sub_100047600();
    __int16 v31 = (void *)v12;
    if (!v12) {
      return v12;
    }
  }
  if (a4) {
    *a4 = 0;
  }
  if (stream)
  {
    CFReadStreamOpen(stream);
    if (!theData)
    {
      if (!CFReadStreamHasBytesAvailable(stream))
      {
LABEL_44:
        CFDataRef v26 = 0;
        goto LABEL_58;
      }
      memset(&c, 0, sizeof(c));
      CC_SHA1_Init(&c);
      goto LABEL_23;
    }
    if (!CFDataGetLength(theData) && !CFReadStreamHasBytesAvailable(stream)) {
      goto LABEL_44;
    }
LABEL_14:
    if (CFDataGetLength(theData))
    {
      if (CFDataGetLength(theData) != 20)
      {
        int v27 = -50;
        *(_DWORD *)(v12 + 20) = -50;
        __int16 v28 = "";
        goto LABEL_53;
      }
      v33.id location = 0;
      v33.length = 20;
      CFDataGetBytes(theData, v33, buffer);
LABEL_36:
      if (a1 == 1)
      {
        int v16 = *(_DWORD *)(v12 + 16);
        if (!v16)
        {
          int v16 = sub_100048060();
          *(_DWORD *)(v12 + 16) = v16;
        }
        sub_1000480E4(v16);
        CC_LONG v17 = __chkstk_darwin();
        id v19 = (const UInt8 *)&c - ((v18 + 15) & 0x1FFFFFFF0);
        c.h0 = v17;
        uint64_t v20 = *(unsigned int *)(v12 + 16);
        uint64_t v21 = *(unsigned int *)v12;
        BytePtr = CFDataGetBytePtr(*(CFDataRef *)(v12 + 8));
        CFDataRef v23 = *(const __CFData **)(v12 + 8);
        if (v23) {
          CFIndex Length = CFDataGetLength(v23);
        }
        else {
          CFIndex Length = 0;
        }
        sub_100221DA8(v20, v21, (uint64_t)BytePtr, Length, (uint64_t)buffer, 20, (uint64_t)v19, (uint64_t)&c);
        if (!v27)
        {
          CFDataRef v26 = CFDataCreate(0, v19, c.h0);
          if (!stream) {
            goto LABEL_59;
          }
          goto LABEL_58;
        }
LABEL_51:
        *(_DWORD *)(v12 + 20) = v27;
        __int16 v28 = ". missing entitlement?";
        if (v27 != -42180) {
          __int16 v28 = "";
        }
LABEL_53:
        fprintf(__stderrp, "cfdcb statusError = %d%s\n", v27, v28);
        uint64_t v12 = 0;
        if (!a4) {
          goto LABEL_62;
        }
LABEL_54:
        CFDataRef v26 = 0;
LABEL_61:
        *a4 = v26;
        goto LABEL_62;
      }
      CFDataGetBytePtr(*(CFDataRef *)(v12 + 8));
      CFDataRef v25 = *(const __CFData **)(v12 + 8);
      if (v25)
      {
        CFDataGetLength(v25);
        if (!a5) {
          goto LABEL_50;
        }
      }
      else if (!a5)
      {
LABEL_50:
        sub_1002DCEA4();
        if (!v27)
        {
          CFDataRef v26 = 0;
          if (!stream)
          {
LABEL_59:
            *(_DWORD *)(v12 + 20) = 0;
            if (!a4)
            {
              if (v26) {
                CFRelease(v26);
              }
              uint64_t v12 = 1;
              goto LABEL_62;
            }
            uint64_t v12 = 1;
            goto LABEL_61;
          }
LABEL_58:
          CFReadStreamClose(stream);
          goto LABEL_59;
        }
        goto LABEL_51;
      }
      CFDataGetBytePtr(a5);
      CFDataGetLength(a5);
      goto LABEL_50;
    }
    memset(&c, 0, sizeof(c));
    CC_SHA1_Init(&c);
    if (!stream)
    {
LABEL_25:
      if (CFReadStreamGetStatus(stream) != kCFStreamStatusAtEnd)
      {
        id v14 = 0;
        do
        {
          if (!v14) {
            id v14 = (UInt8 *)malloc_type_malloc(0x1000uLL, 0x4C1C57F4uLL);
          }
          CFIndex v15 = CFReadStreamRead(stream, v14, 4096);
          if (v15 >= 1)
          {
            if (v15 > 0x10000) {
              sub_1002E9B68();
            }
            CC_SHA1_Update(&c, v14, v15);
          }
        }
        while (CFReadStreamGetStatus(stream) != kCFStreamStatusAtEnd);
        if (v14) {
          free(v14);
        }
      }
      CC_SHA1_Final(buffer, &c);
      goto LABEL_36;
    }
LABEL_23:
    CFTypeRef v13 = CFReadStreamCopyProperty(stream, kCFStreamPropertyFileCurrentOffset);
    if (v13) {
      CFRelease(v13);
    }
    goto LABEL_25;
  }
  if (theData && CFDataGetLength(theData))
  {
    if (!CFDataGetLength(theData))
    {
      *(_DWORD *)(v12 + 20) = 0;
      uint64_t v12 = 1;
      if (!a4)
      {
LABEL_62:
        if (v31 != a6) {
          sub_100047778(&v31);
        }
        return v12;
      }
      goto LABEL_54;
    }
    goto LABEL_14;
  }
  if ((void *)v12 != a6) {
    sub_100047778(&v31);
  }
  return a5 == 0;
}

id sub_100047BF8(const __CFData *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  if (!CFDataGetLength(a1)) {
    return 0;
  }
  if (!CFDataGetLength(a1)) {
    return 0;
  }
  CFDataRef v4 = (const __CFData *)sub_100047F80(a1, 0);
  if (!v4) {
    return 0;
  }
  CFDataRef v5 = v4;
  if (!CFDataGetLength(v4))
  {
    CFRelease(v5);
    return 0;
  }
  int valuePtr = sub_100048060();
  CFNumberRef v6 = CFNumberCreate(0, kCFNumberIntType, &valuePtr);
  *(_OWORD *)keys = *(_OWORD *)off_1003A41A0;
  long long v17 = *(_OWORD *)&off_1003A41B0;
  values[0] = v5;
  values[1] = v6;
  values[2] = a1;
  values[3] = 0;
  CFDictionaryRef v7 = CFDictionaryCreate(0, (const void **)keys, (const void **)values, 3, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  if (v7)
  {
    CFDictionaryRef v8 = v7;
    uint64_t v9 = CFWriteStreamCreateWithAllocatedBuffers(kCFAllocatorDefault, kCFAllocatorDefault);
    if (v9)
    {
      int v10 = v9;
      if (CFWriteStreamOpen(v9))
      {
        if (CFPropertyListWrite(v8, v10, kCFPropertyListBinaryFormat_v1_0, 0, 0) < 1) {
          uint64_t v11 = 0;
        }
        else {
          uint64_t v11 = (void *)CFWriteStreamCopyProperty(v10, kCFStreamPropertyDataWritten);
        }
        CFWriteStreamClose(v10);
      }
      else
      {
        uint64_t v11 = 0;
      }
      CFRelease(v10);
    }
    else
    {
      uint64_t v11 = 0;
    }
    CFRelease(v8);
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v6) {
    CFRelease(v6);
  }
  CFRelease(v5);
  if (!v11) {
    return 0;
  }
  if (CFDataGetLength((CFDataRef)v11)) {
    id v12 = [v11 writeToFile:a2 options:1 error:0];
  }
  else {
    id v12 = 0;
  }
  CFRelease(v11);
  return v12;
}

CFDictionaryRef sub_100047DEC(uint64_t a1)
{
  CFDataRef v1 = (const __CFData *)[objc_alloc((Class)NSData) initWithContentsOfFile:a1 options:0 error:0];
  if (v1)
  {
    CFDataRef v2 = v1;
    if (CFDataGetLength(v1))
    {
      CFDictionaryRef v3 = (const __CFDictionary *)CFPropertyListCreateWithData(0, v2, 0, 0, 0);
      CFDictionaryRef v4 = v3;
      if (!v3)
      {
LABEL_15:
        CFRelease(v2);
        return v4;
      }
      Value = CFDictionaryGetValue(v3, @"cbk");
      CFNumberRef v6 = CFDictionaryGetValue(v4, @"data");
      if (Value) {
        BOOL v7 = v6 == 0;
      }
      else {
        BOOL v7 = 1;
      }
      if (v7)
      {
        CFRelease(v4);
      }
      else
      {
        CFDataRef v8 = (const __CFData *)CFRetain(v6);
        CFDataRef v9 = (const __CFData *)CFRetain(Value);
        CFRelease(v4);
        if (v8)
        {
          BytePtr = CFDataGetBytePtr(v8);
          CFIndex Length = CFDataGetLength(v8);
          id v12 = CFReadStreamCreateWithBytesNoCopy(0, BytePtr, Length, kCFAllocatorNull);
          id v14 = sub_100047600();
          if (sub_1000477C0(2, v12, 0, 0, v9, v14)) {
            CFDictionaryRef v4 = (const __CFDictionary *)CFRetain(v8);
          }
          else {
            CFDictionaryRef v4 = 0;
          }
          sub_100047778(&v14);
          if (v12) {
            CFRelease(v12);
          }
          if (v9) {
            CFRelease(v9);
          }
          CFRelease(v8);
          goto LABEL_15;
        }
      }
    }
    CFDictionaryRef v4 = 0;
    goto LABEL_15;
  }
  return 0;
}

CFTypeRef sub_100047F80(CFDataRef theData, void *a2)
{
  CFDictionaryRef v4 = a2;
  if (!a2) {
    CFDictionaryRef v4 = sub_100047600();
  }
  CFTypeRef cf = 0;
  int v10 = v4;
  BytePtr = CFDataGetBytePtr(theData);
  if (theData) {
    CFIndex Length = CFDataGetLength(theData);
  }
  else {
    CFIndex Length = 0;
  }
  BOOL v7 = CFReadStreamCreateWithBytesNoCopy(0, BytePtr, Length, kCFAllocatorNull);
  if (sub_1000477C0(1, v7, 0, (CFDataRef *)&cf, 0, v4))
  {
    if (!v7) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (cf) {
    CFRelease(cf);
  }
  CFTypeRef cf = 0;
  if (v7) {
LABEL_8:
  }
    CFRelease(v7);
LABEL_9:
  if (v4 != a2) {
    sub_100047778(&v10);
  }
  return cf;
}

uint64_t sub_100048060()
{
  uint64_t result = dword_100400868;
  if (dword_100400868 == -1)
  {
    unsigned int valuePtr = 0;
    CFNumberRef v1 = (const __CFNumber *)MCCopyCheckpointValue();
    if (v1)
    {
      CFNumberRef v2 = v1;
      CFNumberGetValue(v1, kCFNumberIntType, &valuePtr);
      if (valuePtr < 5) {
        int v3 = 2;
      }
      else {
        int v3 = 3;
      }
      dword_100400868 = v3;
      CFRelease(v2);
      return dword_100400868;
    }
    else
    {
      uint64_t result = 2;
      dword_100400868 = 2;
    }
  }
  return result;
}

uint64_t sub_1000480E4(int a1)
{
  if ((a1 - 1) < 3) {
    return dword_10031F7E0[a1 - 1];
  }
  fprintf(__stderrp, "ERROR: INVALID version number: %d\n", a1);
  return 46;
}

void sub_100048784(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (([*(id *)(a1 + 32) containsKey:v6] & 1) == 0) {
    [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:v6];
  }
}

uint64_t sub_100049A8C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_dictionary)
  {
    id v5 = [[SKProduct alloc] initWithXPCEncoding:v4];
    id v6 = v5;
    if (v5)
    {
      BOOL v7 = [(SKProduct *)v5 _localeIdentifier];
      if (v7)
      {
        id v8 = [*(id *)(a1 + 32) objectForKey:v7];
        if (!v8)
        {
          id v8 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:v7];
          if (v8) {
            [*(id *)(a1 + 32) setObject:v8 forKey:v7];
          }
        }
        [(SKProduct *)v6 _setPriceLocale:v8];
        [(SKProduct *)v6 _setLocaleIdentifier:0];
      }
      [*(id *)(a1 + 40) addObject:v6];
    }
  }

  return 1;
}

uint64_t sub_100049F6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [[SKProductDiscount alloc] initWithXPCEncoding:v4];

  [*(id *)(a1 + 32) addObject:v5];
  return 1;
}

void sub_10004B8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10004B944(void *a1, void *a2)
{
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  [v4 setObject:a1[4] forKey:@"bundle_id"];
  objc_msgSend(v4, "setObject:forKey:", +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a1[7]), @"download_id");
  [v4 setObject:a1[5] forKey:@"expected_phase"];
  [v4 setObject:&off_1003C8FE8 forKey:@"retry_count"];
  +[NSDate timeIntervalSinceReferenceDate];
  objc_msgSend(v4, "setObject:forKey:", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", (int)v5), @"time_updated");
  id v6 = -[ApplicationWorkspaceState initWithPropertyValues:inDatabase:]([ApplicationWorkspaceState alloc], "initWithPropertyValues:inDatabase:", v4, [a2 database]);
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = v6 != 0;

  return *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24);
}

uint64_t sub_10004BA8C(uint64_t a1)
{
  pthread_mutex_lock(&stru_100400870);
  uint64_t v2 = a1;
  if (!qword_100401CA0[a1])
  {
    int v3 = [[PersistentStoreConfiguration alloc] initWithStoreType:a1];
    qword_100401CA0[v2] = [[PersistentStore alloc] initWithConfiguration:v3 error:0];
  }
  pthread_mutex_unlock(&stru_100400870);
  return qword_100401CA0[v2];
}

uint64_t sub_10004BBA0(void *a1)
{
  id v37 = 0;
  unsigned int v30 = [a1 save:&v37];
  if ((v30 & 1) == 0)
  {
    id v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    if (os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      int v5 = v4;
    }
    else {
      int v5 = v4 & 2;
    }
    if (v5)
    {
      int v38 = 134218242;
      id v39 = a1;
      __int16 v40 = 2112;
      id v41 = v37;
      LODWORD(v29) = 22;
      int v27 = &v38;
      uint64_t v6 = _os_log_send_and_compose_impl();
      if (v6)
      {
        BOOL v7 = (void *)v6;
        id v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v6, 4, &v38, v29);
        free(v7);
        int v27 = (int *)v8;
        SSFileLog();
      }
    }
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id obj = objc_msgSend(objc_msgSend(v37, "userInfo", v27), "objectForKey:", NSDetailedErrorsKey);
    id v9 = [obj countByEnumeratingWithState:&v33 objects:v46 count:16];
    int v10 = &syslog_ptr;
    if (v9)
    {
      id v11 = v9;
      uint64_t v32 = *(void *)v34;
      do
      {
        for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v34 != v32) {
            objc_enumerationMutation(obj);
          }
          CFTypeRef v13 = *(void **)(*((void *)&v33 + 1) + 8 * i);
          id v14 = objc_msgSend(v13, "userInfo", v28, v29);
          id v15 = [v10[405] sharedDaemonConfig];
          if (!v15) {
            id v15 = [v10[405] sharedConfig];
          }
          unsigned int v16 = [v15 shouldLog];
          if ([v15 shouldLogToDisk]) {
            int v17 = v16 | 2;
          }
          else {
            int v17 = v16;
          }
          if (os_log_type_enabled((os_log_t)[v15 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
            int v18 = v17;
          }
          else {
            int v18 = v17 & 2;
          }
          if (v18)
          {
            id v19 = [v13 code];
            id v20 = [v14 objectForKey:NSValidationKeyErrorKey];
            id v21 = [v14 objectForKey:NSValidationValueErrorKey];
            id v22 = [v14 objectForKey:NSValidationObjectErrorKey];
            int v38 = 134218754;
            id v39 = v19;
            __int16 v40 = 2112;
            id v41 = v20;
            __int16 v42 = 2112;
            id v43 = v21;
            int v10 = &syslog_ptr;
            __int16 v44 = 2112;
            id v45 = v22;
            LODWORD(v29) = 42;
            __int16 v28 = &v38;
            uint64_t v23 = _os_log_send_and_compose_impl();
            if (v23)
            {
              uint64_t v24 = (void *)v23;
              CFDataRef v25 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v38, v29);
              free(v24);
              __int16 v28 = (int *)v25;
              SSFileLog();
            }
          }
        }
        id v11 = [obj countByEnumeratingWithState:&v33 objects:v46 count:16];
      }
      while (v11);
    }
  }
  return v30;
}

void sub_10004C1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004C1F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _disconnect];
}

void sub_10004C238(uint64_t a1, void *a2, void *a3)
{
  xpc_object_t xdict = a2;
  id v5 = a3;
  if (xpc_dictionary_get_int64(xdict, "0") != -1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _handleMessage:xdict connection:v5];
  }
}

uint64_t sub_10004C40C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10004C41C(uint64_t a1)
{
}

uint64_t sub_10004C424(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = WeakRetained;

  return _objc_release_x1(WeakRetained, v4);
}

id sub_10004C508(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 48) sendMessage:*(void *)(a1 + 40)];
}

id sub_10004C5AC(uint64_t a1)
{
  return objc_storeWeak((id *)(*(void *)(a1 + 32) + 8), *(id *)(a1 + 40));
}

void sub_10004C62C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  if (objc_opt_respondsToSelector())
  {
    uint64_t v3 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_10004C6EC;
    v6[3] = &unk_1003A3268;
    id v4 = WeakRetained;
    uint64_t v5 = *(void *)(a1 + 32);
    id v7 = v4;
    uint64_t v8 = v5;
    dispatch_async(v3, v6);
  }
}

id sub_10004C6EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) alertProxyDidCancel:*(void *)(a1 + 40)];
}

void sub_10004C7C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  if (objc_opt_respondsToSelector())
  {
    uint64_t v3 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10004C894;
    block[3] = &unk_1003A4298;
    id v4 = WeakRetained;
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(a1 + 40);
    id v8 = v4;
    uint64_t v9 = v5;
    id v10 = v6;
    dispatch_async(v3, block);
  }
}

id sub_10004C894(uint64_t a1)
{
  return [*(id *)(a1 + 32) alertProxy:*(void *)(a1 + 40) didReceiveMessage:*(void *)(a1 + 48)];
}

void sub_10004DA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10004DB38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10004DB48(uint64_t a1)
{
}

void sub_10004DB50(void *a1, uint64_t a2, void *a3, char a4, void *a5)
{
  id v9 = a3;
  id v10 = a5;
  id v11 = +[SSLogConfig sharedDaemonConfig];
  if (!v11)
  {
    id v11 = +[SSLogConfig sharedConfig];
  }
  unsigned int v12 = [v11 shouldLog];
  if ([v11 shouldLogToDisk]) {
    int v13 = v12 | 2;
  }
  else {
    int v13 = v12;
  }
  id v14 = [v11 OSLogObject];
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    int v15 = v13;
  }
  else {
    int v15 = v13 & 2;
  }
  if (v15)
  {
    uint64_t v16 = a1[4];
    *(_DWORD *)id v43 = 138543362;
    *(void *)&void v43[4] = v16;
    LODWORD(v42) = 12;
    id v41 = v43;
    int v17 = (void *)_os_log_send_and_compose_impl();

    if (!v17) {
      goto LABEL_13;
    }
    id v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, v43, v42);
    free(v17);
    id v41 = v14;
    SSFileLog();
  }

LABEL_13:
  if (v10)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a5);
    int v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18)
    {
      int v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = objc_msgSend(v18, "shouldLog", v41);
    if ([v18 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    id v21 = [v18 OSLogObject];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      int v22 = v20;
    }
    else {
      int v22 = v20 & 2;
    }
    if (!v22) {
      goto LABEL_49;
    }
    uint64_t v23 = a1[4];
    *(_DWORD *)id v43 = 138543618;
    *(void *)&void v43[4] = v23;
    *(_WORD *)&v43[12] = 2112;
    *(void *)&v43[14] = v10;
    LODWORD(v42) = 22;
  }
  else if (a4)
  {
    if (v9)
    {
      objc_storeStrong((id *)(*(void *)(a1[7] + 8) + 40), a3);
      int v18 = +[SSLogConfig sharedDaemonConfig];
      if (!v18)
      {
        int v18 = +[SSLogConfig sharedConfig];
      }
      unsigned int v24 = objc_msgSend(v18, "shouldLog", v41);
      if ([v18 shouldLogToDisk]) {
        int v25 = v24 | 2;
      }
      else {
        int v25 = v24;
      }
      id v21 = [v18 OSLogObject];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
        int v26 = v25;
      }
      else {
        int v26 = v25 & 2;
      }
      if (!v26) {
        goto LABEL_49;
      }
      uint64_t v27 = a1[4];
      *(_DWORD *)id v43 = 138543362;
      *(void *)&void v43[4] = v27;
      LODWORD(v42) = 12;
    }
    else
    {
      int v18 = +[SSLogConfig sharedDaemonConfig];
      if (!v18)
      {
        int v18 = +[SSLogConfig sharedConfig];
      }
      unsigned int v37 = objc_msgSend(v18, "shouldLog", v41);
      if ([v18 shouldLogToDisk]) {
        int v38 = v37 | 2;
      }
      else {
        int v38 = v37;
      }
      id v21 = [v18 OSLogObject];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        int v39 = v38;
      }
      else {
        int v39 = v38 & 2;
      }
      if (!v39) {
        goto LABEL_49;
      }
      uint64_t v40 = a1[4];
      *(_DWORD *)id v43 = 138543362;
      *(void *)&void v43[4] = v40;
      LODWORD(v42) = 12;
    }
  }
  else
  {
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    uint64_t v28 = ISError();
    uint64_t v29 = *(void *)(a1[5] + 8);
    unsigned int v30 = *(void **)(v29 + 40);
    *(void *)(v29 + 40) = v28;

    int v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18)
    {
      int v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v31 = objc_msgSend(v18, "shouldLog", v41);
    if ([v18 shouldLogToDisk]) {
      int v32 = v31 | 2;
    }
    else {
      int v32 = v31;
    }
    id v21 = [v18 OSLogObject];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      int v33 = v32;
    }
    else {
      int v33 = v32 & 2;
    }
    if (!v33) {
      goto LABEL_49;
    }
    uint64_t v34 = a1[4];
    *(_DWORD *)id v43 = 138543362;
    *(void *)&void v43[4] = v34;
    LODWORD(v42) = 12;
  }
  uint64_t v35 = (void *)_os_log_send_and_compose_impl();

  if (!v35) {
    goto LABEL_50;
  }
  id v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v35, 4, v43, v42, *(_OWORD *)v43);
  free(v35);
  SSFileLog();
LABEL_49:

LABEL_50:
  if (v9) {
    char v36 = a4;
  }
  else {
    char v36 = 0;
  }
  *(unsigned char *)(*(void *)(a1[8] + 8) + 24) = v36;
}

uint64_t sub_10004E2A8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100401CB0;
  qword_100401CB0 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_10004E740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *a12, id *location)
{
  objc_destroyWeak(v13);
  objc_destroyWeak(location);
  objc_destroyWeak(a12);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v14 - 168));
  _Unwind_Resume(a1);
}

id sub_10004E790(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = [WeakRetained _purgeable:v5 urgency:a2];

  id v8 = v7;
  return v8;
}

id sub_10004E7FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = [WeakRetained _purge:v5 urgency:a2];

  id v8 = v7;
  return v8;
}

void sub_10004E868(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _cancelPurge];
}

id sub_10004E8A8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = [WeakRetained _purge:v5 urgency:a2];

  id v8 = v7;
  return v8;
}

id sub_10004EA34(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pushUpdatedAvailableStorage];
}

void sub_10004F5B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10004F838(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10004FA74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10004FC58()
{
  if (qword_100401CD0 != -1) {
    dispatch_once(&qword_100401CD0, &stru_1003A4358);
  }
  return qword_100401CC8;
}

void sub_10004FEDC(uint64_t a1, void *a2)
{
  id v5 = (__CFString *)[*(id *)(a1 + 32) copyProductsResponse];
  sub_100174DCC(a2, "1", v5);
  id v4 = (__CFString *)sub_100174DC0((uint64_t)[*(id *)(a1 + 32) error]);
  sub_100174DCC(a2, "2", v4);
}

uint64_t sub_10004FFE0(uint64_t a1, xpc_object_t xdict)
{
  xpc_dictionary_set_int64(xdict, "0", 20003);
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

uint64_t sub_1000500CC(uint64_t a1, xpc_object_t xdict)
{
  xpc_dictionary_set_int64(xdict, "0", 20003);
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

uint64_t sub_100050134(void *a1)
{
  if (!a1)
  {
LABEL_6:
    sub_100174DB0();
    goto LABEL_7;
  }
  id v2 = [a1 domain];
  if (![v2 isEqualToString:ISErrorDomain])
  {
    id v3 = [a1 domain];
    if (![v3 isEqualToString:SSServerErrorDomain]) {
      return (uint64_t)a1;
    }
    [a1 code];
    goto LABEL_6;
  }
  [a1 code];
  sub_100174DB0();
LABEL_7:

  return ISErrorWithDomain();
}

void sub_100050250(id a1)
{
  qword_100401CC8 = (uint64_t)objc_alloc_init((Class)ISOperationQueue);
  [(id)qword_100401CC8 setMaxConcurrentOperationCount:3];
  [(id)qword_100401CC8 setAdjustsMaxConcurrentOperationCount:0];
  id v1 = +[Daemon daemon];
  uint64_t v2 = qword_100401CC8;

  [v1 addKeepAliveOperationQueue:v2];
}

void sub_1000521D8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_100052224(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 56));
  id v11 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v12 = WeakRetained[2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100052348;
    block[3] = &unk_1003A4380;
    id v19 = v7;
    int v13 = v11;
    uint64_t v14 = *(void *)(a1 + 32);
    int v20 = v13;
    uint64_t v21 = v14;
    id v15 = v8;
    uint64_t v16 = *(void *)(a1 + 40);
    int v17 = *(void **)(a1 + 48);
    id v22 = v15;
    uint64_t v23 = v16;
    id v24 = v17;
    id v25 = v9;
    dispatch_async(v12, block);
  }
}

id sub_100052348(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4)
    {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    id v7 = [v4 OSLogObject];
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      v6 &= 2u;
    }
    if (v6)
    {
      id v8 = objc_opt_class();
      uint64_t v9 = *(void *)(a1 + 72);
      uint64_t v10 = *(void *)(a1 + 80);
      *(_DWORD *)id v15 = 138412802;
      *(void *)&v15[4] = v8;
      *(_WORD *)&v15[12] = 2112;
      *(void *)&v15[14] = v9;
      *(_WORD *)&v15[22] = 2112;
      uint64_t v16 = v10;
      id v11 = v8;
      LODWORD(v14) = 32;
      unsigned int v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_16:

        return [*(id *)(a1 + 40) _failUploadWithDatabaseID:*(void *)(a1 + 72) error:*(void *)(a1 + 80)];
      }
      id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, v15, v14, *(_OWORD *)v15, *(void *)&v15[16], v16);
      free(v12);
      SSFileLog();
    }

    goto LABEL_16;
  }
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);

  return objc_msgSend(v2, "_addUploadTaskWithRequest:configuration:URLRequest:", v3);
}

void sub_1000525A8(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  int v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    int v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  uint64_t v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
    v8 &= 2u;
  }
  if (!v8) {
    goto LABEL_11;
  }
  uint64_t v10 = objc_opt_class();
  id v11 = v10;
  int v15 = 138412802;
  uint64_t v16 = v10;
  __int16 v17 = 2048;
  id v18 = [v4 taskIdentifier];
  __int16 v19 = 2112;
  id v20 = v5;
  LODWORD(v14) = 32;
  unsigned int v12 = (void *)_os_log_send_and_compose_impl();

  if (v12)
  {
    uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v15, v14);
    free(v12);
    SSFileLog();
LABEL_11:
  }
  id v13 = [objc_alloc((Class)NSNumber) initWithInteger:0];
  objc_setAssociatedObject(v4, "com.apple.itunesstored.upload.stop-reason", v13, (void *)1);
  [v4 cancel];
}

void sub_10005291C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  int v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    int v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  uint64_t v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
    v8 &= 2u;
  }
  if (!v8) {
    goto LABEL_11;
  }
  uint64_t v10 = objc_opt_class();
  id v11 = v10;
  int v15 = 138412802;
  uint64_t v16 = v10;
  __int16 v17 = 2048;
  id v18 = [v4 taskIdentifier];
  __int16 v19 = 2112;
  id v20 = v5;
  LODWORD(v14) = 32;
  unsigned int v12 = (void *)_os_log_send_and_compose_impl();

  if (v12)
  {
    uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v15, v14);
    free(v12);
    SSFileLog();
LABEL_11:
  }
  id v13 = [objc_alloc((Class)NSNumber) initWithInteger:1];
  objc_setAssociatedObject(v4, "com.apple.itunesstored.upload.stop-reason", v13, (void *)1);
  [v4 cancel];
}

void sub_100052FFC(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  if (!v2)
  {
    id v2 = [*(id *)(a1 + 40) error];
  }
  uint64_t v3 = objc_getAssociatedObject(*(id *)(a1 + 48), "com.apple.itunesstored.upload.stop-reason");
  if (!v3)
  {
    uint64_t v13 = +[SSLogConfig sharedDaemonConfig];
    uint64_t v14 = (void *)v13;
    if (v2)
    {
      if (!v13)
      {
        uint64_t v14 = +[SSLogConfig sharedConfig];
      }
      unsigned int v15 = [v14 shouldLog];
      if ([v14 shouldLogToDisk]) {
        int v16 = v15 | 2;
      }
      else {
        int v16 = v15;
      }
      __int16 v17 = [v14 OSLogObject];
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
        int v18 = v16;
      }
      else {
        int v18 = v16 & 2;
      }
      if (v18)
      {
        __int16 v19 = objc_opt_class();
        uint64_t v20 = *(void *)(a1 + 64);
        uint64_t v21 = *(void **)(a1 + 72);
        id v34 = v19;
        id v22 = [v21 configuration];
        [v22 identifier];
        int v36 = 138413058;
        unsigned int v37 = v19;
        __int16 v38 = 2112;
        uint64_t v39 = v20;
        __int16 v40 = 2112;
        id v41 = (id)objc_claimAutoreleasedReturnValue();
        __int16 v42 = 2112;
        id v43 = v2;
        LODWORD(v33) = 42;
        uint64_t v23 = (void *)_os_log_send_and_compose_impl();

        if (!v23)
        {
LABEL_31:

          [*(id *)(a1 + 56) _failUploadWithDatabaseID:*(void *)(a1 + 64) error:v2];
          goto LABEL_32;
        }
        __int16 v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v36, v33);
        free(v23);
        SSFileLog();
      }

      goto LABEL_31;
    }
    if (!v13)
    {
      uint64_t v14 = +[SSLogConfig sharedConfig];
    }
    unsigned int v24 = [v14 shouldLog];
    if ([v14 shouldLogToDisk]) {
      int v25 = v24 | 2;
    }
    else {
      int v25 = v24;
    }
    int v26 = [v14 OSLogObject];
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO)) {
      int v27 = v25;
    }
    else {
      int v27 = v25 & 2;
    }
    if (v27)
    {
      uint64_t v28 = objc_opt_class();
      uint64_t v29 = *(void *)(a1 + 64);
      unsigned int v30 = *(void **)(a1 + 72);
      id v35 = v28;
      unsigned int v31 = [v30 configuration];
      [v31 identifier];
      int v36 = 138412802;
      unsigned int v37 = v28;
      __int16 v38 = 2112;
      uint64_t v39 = v29;
      __int16 v40 = 2112;
      id v41 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v33) = 32;
      int v32 = (void *)_os_log_send_and_compose_impl();

      if (!v32) {
        goto LABEL_45;
      }
      int v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v32, 4, &v36, v33);
      free(v32);
      SSFileLog();
    }

LABEL_45:
    [*(id *)(a1 + 56) _cleanupForDatabaseID:*(void *)(a1 + 64)];
    unsigned int v12 = [*(id *)(a1 + 56) delegate];
    if (objc_opt_respondsToSelector()) {
      objc_msgSend(v12, "uploadSessionController:uploadDidFinishWithDatabaseID:response:", *(void *)(a1 + 56), objc_msgSend(*(id *)(a1 + 64), "longLongValue"), *(void *)(a1 + 40));
    }
    goto LABEL_17;
  }
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4)
  {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  unsigned int v7 = [v4 OSLogObject];
  if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    v6 &= 2u;
  }
  if (v6)
  {
    int v8 = objc_opt_class();
    uint64_t v9 = *(void *)(a1 + 64);
    int v36 = 138412546;
    unsigned int v37 = v8;
    __int16 v38 = 2112;
    uint64_t v39 = v9;
    id v10 = v8;
    LODWORD(v33) = 22;
    id v11 = (void *)_os_log_send_and_compose_impl();

    if (!v11) {
      goto LABEL_15;
    }
    unsigned int v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v36, v33);
    free(v11);
    SSFileLog();
  }

LABEL_15:
  [*(id *)(a1 + 56) _cleanupForDatabaseID:*(void *)(a1 + 64)];
  unsigned int v12 = [*(id *)(a1 + 56) delegate];
  if (objc_opt_respondsToSelector()) {
    objc_msgSend(v12, "uploadSessionController:taskDidStopWithDatabaseID:", *(void *)(a1 + 56), objc_msgSend(*(id *)(a1 + 64), "longLongValue"));
  }
LABEL_17:

LABEL_32:
}

void sub_1000535F8(uint64_t a1)
{
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  int v25 = sub_100053878;
  int v26 = sub_100053888;
  id v27 = 0;
  id v2 = [*(id *)(a1 + 32) longLongValue];
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 32);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100053890;
  v21[3] = &unk_1003A4420;
  v21[4] = &v22;
  v21[5] = v2;
  [v3 enumerateObjectsUsingBlock:v21];
  id v4 = (void *)v23[5];
  if (!v4)
  {
    unsigned int v5 = objc_alloc_init(DirectUploadProgress);
    int v6 = (void *)v23[5];
    v23[5] = (uint64_t)v5;

    [(id)v23[5] setUploadDatabaseIdentifier:v2];
    unsigned int v7 = *(void **)(*(void *)(a1 + 40) + 32);
    if (!v7)
    {
      id v8 = objc_alloc_init((Class)NSMutableArray);
      uint64_t v9 = *(void *)(a1 + 40);
      id v10 = *(void **)(v9 + 32);
      *(void *)(v9 + 32) = v8;

      unsigned int v7 = *(void **)(*(void *)(a1 + 40) + 32);
    }
    [v7 addObject:v23[5]];
    id v4 = (void *)v23[5];
  }
  [v4 setCountOfBytesExpectedToSend:*(void *)(a1 + 48)];
  [(id)v23[5] setCountOfBytesSent:*(void *)(a1 + 56)];
  uint64_t v11 = *(void *)(a1 + 40);
  if (!*(void *)(v11 + 40))
  {
    dispatch_source_t v12 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, *(dispatch_queue_t *)(v11 + 16));
    uint64_t v13 = *(void *)(a1 + 40);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    unsigned int v15 = *(NSObject **)(*(void *)(a1 + 40) + 40);
    dispatch_time_t v16 = dispatch_time(0, 500000000);
    dispatch_source_set_timer(v15, v16, 0, 0);
    objc_initWeak(&location, *(id *)(a1 + 40));
    __int16 v17 = *(NSObject **)(*(void *)(a1 + 40) + 40);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100053910;
    v18[3] = &unk_1003A4248;
    objc_copyWeak(&v19, &location);
    dispatch_source_set_event_handler(v17, v18);
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 40) + 40));
    objc_destroyWeak(&v19);
    objc_destroyWeak(&location);
  }
  _Block_object_dispose(&v22, 8);
}

void sub_100053860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100053878(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100053888(uint64_t a1)
{
}

void sub_100053890(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ([v7 uploadDatabaseIdentifier] == *(id *)(a1 + 40))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_100053910(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _flushProgress];
}

void sub_100053A44(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  if (objc_opt_respondsToSelector()) {
    objc_msgSend(v2, "uploadSessionController:uploadDidBeginTransferWithDatabaseID:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "longLongValue"));
  }
}

void sub_100053FE4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v21 = v7;
  v27[0] = v21;
  id v20 = v8;
  v27[1] = v20;
  uint64_t v10 = 0;
  id v19 = v9;
  v27[2] = v19;
  do
  {
    uint64_t v11 = (void *)v27[v10];
    if (v11)
    {
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      id v12 = v11;
      id v13 = [v12 countByEnumeratingWithState:&v22 objects:v26 count:16];
      if (v13)
      {
        id v14 = v13;
        uint64_t v15 = *(void *)v23;
        do
        {
          dispatch_time_t v16 = 0;
          do
          {
            if (*(void *)v23 != v15) {
              objc_enumerationMutation(v12);
            }
            __int16 v17 = objc_getAssociatedObject(*(id *)(*((void *)&v22 + 1) + 8 * (void)v16), "com.apple.itunesstored.upload.id");
            if (v17 && [*(id *)(a1 + 32) containsObject:v17]) {
              (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
            }

            dispatch_time_t v16 = (char *)v16 + 1;
          }
          while (v14 != v16);
          id v14 = [v12 countByEnumeratingWithState:&v22 objects:v26 count:16];
        }
        while (v14);
      }
    }
    ++v10;
  }
  while (v10 != 3);
  for (uint64_t i = 2; i != -1; --i)
}

void sub_100055070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000550BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000550CC(uint64_t a1)
{
}

void sub_1000550D4(uint64_t a1, int a2, void *a3, void *a4)
{
  id v12 = a3;
  id v8 = a4;
  if (a2) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a3);
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
  id v11 = v8;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_1000557E4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100401CD8;
  qword_100401CD8 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_1000558E4(id *a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v29 = 0;
  unsigned int v30 = &v29;
  uint64_t v31 = 0x3032000000;
  int v32 = sub_100055BE8;
  uint64_t v33 = sub_100055BF8;
  id v34 = 0;
  uint64_t v3 = [a1[4] clientIdentifier];
  if (v3) {
    id v4 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", v3, @"source_app", 0);
  }
  else {
    id v4 = 0;
  }
  unsigned int v5 = [a1[5] _database];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100055C00;
  v21[3] = &unk_1003A44E8;
  id v22 = a1[6];
  id v6 = v3;
  id v23 = v6;
  id v7 = v5;
  id v24 = v7;
  id v8 = v4;
  id v25 = v8;
  id v9 = v2;
  id v10 = a1[5];
  id v26 = v9;
  id v27 = v10;
  uint64_t v28 = &v29;
  [v7 performTransactionWithBlock:v21];
  if ([v9 count])
  {
    id v11 = [a1[5] _sessionController];
    [v11 addUploadTasksWithRequests:v9];
  }
  if (v30[5])
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v12 = *((id *)a1[5] + 3);
    id v13 = [v12 countByEnumeratingWithState:&v17 objects:v35 count:16];
    if (v13)
    {
      uint64_t v14 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v13; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v14) {
            objc_enumerationMutation(v12);
          }
          dispatch_time_t v16 = [*(id *)(*((void *)&v17 + 1) + 8 * i) outputConnection];
          [v16 sendMessage:v30[5]];
        }
        id v13 = [v12 countByEnumeratingWithState:&v17 objects:v35 count:16];
      }
      while (v13);
    }
  }
  _Block_object_dispose(&v29, 8);
}

void sub_100055BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

uint64_t sub_100055BE8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100055BF8(uint64_t a1)
{
}

uint64_t sub_100055C00(uint64_t a1)
{
  id v2 = +[MediaSocialPostEntity newEntityValuesWithMediaSocialPost:*(void *)(a1 + 32)];
  uint64_t v3 = +[NSNumber numberWithDouble:CFAbsoluteTimeGetCurrent()];
  [v2 setObject:v3 forKey:@"creation_time"];

  id v4 = [*(id *)(a1 + 32) sourceApplicationIdentifier];
  unsigned int v5 = v4;
  if (v4 || (unsigned int v5 = *(void **)(a1 + 40)) != 0) {
    [v2 setObject:v5 forKey:@"source_app"];
  }
  id v6 = [[MediaSocialPostEntity alloc] initWithPropertyValues:v2 inDatabase:*(void *)(a1 + 48)];
  id v7 = [*(id *)(a1 + 32) contentItems];
  id v8 = [(MediaSocialPostEntity *)v6 insertEntitiesForContentItems:v7];

  id v9 = [*(id *)(a1 + 32) externalServiceDestinations];
  id v10 = [(MediaSocialPostEntity *)v6 insertEntitiesForExternalDestinations:v9];

  id v11 = objc_alloc_init((Class)NSMutableArray);
  id v12 = [*(id *)(a1 + 32) attachments];
  id v34 = v6;
  id v13 = [(MediaSocialPostEntity *)v6 insertEntitiesForAttachments:v12 withProperties:*(void *)(a1 + 56)];

  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472;
  v35[2] = sub_100055FEC;
  v35[3] = &unk_1003A44C0;
  id v36 = *(id *)(a1 + 32);
  id v37 = *(id *)(a1 + 64);
  id v14 = v11;
  id v38 = v14;
  uint64_t v33 = v13;
  [v13 enumerateObjectsUsingBlock:v35];
  uint64_t v15 = +[SSLogConfig sharedDaemonConfig];
  if (!v15)
  {
    uint64_t v15 = +[SSLogConfig sharedConfig];
  }
  unsigned int v16 = [v15 shouldLog];
  if ([v15 shouldLogToDisk]) {
    int v17 = v16 | 2;
  }
  else {
    int v17 = v16;
  }
  long long v18 = [v15 OSLogObject];
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO)) {
    int v19 = v17;
  }
  else {
    int v19 = v17 & 2;
  }
  if (v19)
  {
    id v20 = v2;
    id v21 = objc_opt_class();
    id v22 = v21;
    id v23 = [(MediaSocialPostEntity *)v34 persistentID];
    id v24 = [v33 count];
    int v39 = 138412802;
    __int16 v40 = v21;
    id v2 = v20;
    __int16 v41 = 2048;
    id v42 = v23;
    __int16 v43 = 2048;
    id v44 = v24;
    LODWORD(v32) = 32;
    id v25 = (void *)_os_log_send_and_compose_impl();

    if (!v25) {
      goto LABEL_16;
    }
    long long v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v39, v32);
    free(v25);
    SSFileLog();
  }

LABEL_16:
  id v26 = [v14 count];
  id v27 = *(id **)(a1 + 72);
  if (v26)
  {
    if ([v27[3] count])
    {
      id v28 = [*(id *)(a1 + 72) _newAddUploadsMessageWithDatabase:*(void *)(a1 + 48) hydratedUploadIDs:v14];
      uint64_t v29 = *(void *)(*(void *)(a1 + 80) + 8);
      unsigned int v30 = *(void **)(v29 + 40);
      *(void *)(v29 + 40) = v28;
    }
  }
  else
  {
    [v27 _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 48)];
  }

  return 1;
}

void sub_100055FEC(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [DirectUploadRequest alloc];
  unsigned int v5 = [a1[4] accountIdentifier];
  id v9 = [(DirectUploadRequest *)v4 initWithEntity:v3 accountIdentifier:v5];

  [a1[5] addObject:v9];
  id v6 = objc_alloc((Class)NSNumber);
  id v7 = [v3 persistentID];

  id v8 = [v6 initWithLongLong:v7];
  [a1[6] addObject:v8];
}

void sub_1000561F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100056214(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[5];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000562B0;
    block[3] = &unk_1003A3140;
    unsigned int v5 = WeakRetained;
    dispatch_async(v3, block);
  }
}

id sub_1000562B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _retryFailedEntities];
}

void sub_1000562B8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _databaseIfExists];
  id v3 = v2;
  if (v2)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10005635C;
    v4[3] = &unk_1003A4538;
    v4[4] = *(void *)(a1 + 32);
    id v5 = v2;
    [v5 performTransactionWithBlock:v4];
  }
}

uint64_t sub_10005635C(uint64_t a1)
{
  uint64_t v2 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:2];
  [*(id *)(a1 + 32) _cleanupPendingUploads:v2 database:*(void *)(a1 + 40)];
  id v3 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:1];
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:0];
  v8[0] = v3;
  v8[1] = v4;
  id v5 = +[NSArray arrayWithObjects:v8 count:2];
  id v6 = +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:v5];

  [*(id *)(a1 + 32) _resumeUploadsWithPredicate:v6 clientIdentifier:0 resetFailureCount:0 error:0];
  [*(id *)(a1 + 32) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 40)];

  return 1;
}

void sub_1000565C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:6];
  id v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:4];
  id v6 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:3];
  id v7 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:1];
  id v8 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:0];
  v24[0] = v4;
  v24[1] = v5;
  v24[2] = v6;
  v24[3] = v7;
  v24[4] = v8;
  id v9 = +[NSArray arrayWithObjects:v24 count:5];
  id v10 = +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:v9];

  id v11 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v12 = v11;
  if (v11 && xpc_get_type(v11) == (xpc_type_t)&_xpc_type_array)
  {
    id v20 = [*(id *)(a1 + 56) _copyPersistentIdentifiersArrayWithXPCArray:v12];
    +[SSSQLiteContainsPredicate containsPredicateWithProperty:SSSQLEntityPropertyPersistentID values:v20];
    id v13 = v21 = v4;
    v23[0] = v10;
    v23[1] = v13;
    id v14 = +[NSArray arrayWithObjects:v23 count:2];
    uint64_t v19 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v14];

    id v4 = v21;
    id v10 = (void *)v19;
  }
  uint64_t v15 = *(void **)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  id v22 = 0;
  unsigned __int8 v17 = objc_msgSend(v15, "_cancelUploadsWithPredicate:clientIdentifier:error:", v10, v16, &v22, v19);
  id v18 = v22;
  SSXPCDictionarySetObject();
  xpc_dictionary_set_BOOL(v3, "2", v17);
}

void sub_10005692C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)NSMutableArray);
  id v5 = [*(id *)(a1 + 32) _databaseIfExists];
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  id v11 = sub_100056A3C;
  id v12 = &unk_1003A45B0;
  id v6 = *(void **)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  id v13 = v5;
  id v14 = v6;
  id v7 = v4;
  id v15 = v7;
  id v8 = v5;
  [v8 performTransactionWithBlock:&v9];
  if (objc_msgSend(v7, "count", v9, v10, v11, v12)) {
    SSXPCDictionarySetObject();
  }
}

uint64_t sub_100056A3C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 56) _orderedUploadQueryWithDatabase:*(void *)(a1 + 32) predicate:0];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100056AF4;
  v5[3] = &unk_1003A4588;
  id v3 = *(void **)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  [v3 _enumerateSSVDirectUploadsWithQuery:v2 block:v5];

  return 1;
}

id sub_100056AF4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_100056CE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:1];
  id v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:0];
  v20[0] = v4;
  v20[1] = v5;
  id v6 = +[NSArray arrayWithObjects:v20 count:2];
  id v7 = +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:v6];

  id v8 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v9 = v8;
  if (v8 && xpc_get_type(v8) == (xpc_type_t)&_xpc_type_array)
  {
    id v10 = [*(id *)(a1 + 56) _copyPersistentIdentifiersArrayWithXPCArray:v9];
    id v11 = +[SSSQLiteContainsPredicate containsPredicateWithProperty:SSSQLEntityPropertyPersistentID values:v10];
    v19[0] = v7;
    v19[1] = v11;
    id v12 = +[NSArray arrayWithObjects:v19 count:2];
    uint64_t v13 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v12];

    id v7 = (void *)v13;
  }
  id v14 = *(void **)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  id v18 = 0;
  unsigned __int8 v16 = [v14 _pauseUploadsWithPredicate:v7 clientIdentifier:v15 error:&v18];
  id v17 = v18;
  SSXPCDictionarySetObject();
  xpc_dictionary_set_BOOL(v3, "2", v16);
}

id sub_100057018(uint64_t a1)
{
  return [*(id *)(a1 + 32) _registerObserverWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48)];
}

void sub_100057154(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:4];
  id v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:3];
  v20[0] = v4;
  v20[1] = v5;
  id v6 = +[NSArray arrayWithObjects:v20 count:2];
  id v7 = +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:v6];

  id v8 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v9 = v8;
  if (v8 && xpc_get_type(v8) == (xpc_type_t)&_xpc_type_array)
  {
    id v10 = [*(id *)(a1 + 56) _copyPersistentIdentifiersArrayWithXPCArray:v9];
    id v11 = +[SSSQLiteContainsPredicate containsPredicateWithProperty:SSSQLEntityPropertyPersistentID values:v10];
    v19[0] = v7;
    v19[1] = v11;
    id v12 = +[NSArray arrayWithObjects:v19 count:2];
    uint64_t v13 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v12];

    id v7 = (void *)v13;
  }
  id v14 = *(void **)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  id v18 = 0;
  unsigned __int8 v16 = [v14 _resumeUploadsWithPredicate:v7 clientIdentifier:v15 resetFailureCount:1 error:&v18];
  id v17 = v18;
  SSXPCDictionarySetObject();
  xpc_dictionary_set_BOOL(v3, "2", v16);
}

uint64_t sub_1000574A8(uint64_t a1)
{
  id v1 = [[DirectUploadEntity alloc] initWithPersistentID:*(void *)(a1 + 40) inDatabase:*(void *)(a1 + 32)];
  [(DirectUploadEntity *)v1 setValue:&off_1003C9000 forProperty:@"state"];

  return 1;
}

void sub_100057770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000577A8(uint64_t a1)
{
  uint64_t v2 = [[DirectUploadEntity alloc] initWithPersistentID:*(void *)(a1 + 72) inDatabase:*(void *)(a1 + 32)];
  id v3 = v2;
  if (v2)
  {
    uint64_t v4 = [(DirectUploadEntity *)v2 setFailedWithError:*(void *)(a1 + 40)];
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5)
    {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    id v8 = [v5 OSLogObject];
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      v7 &= 2u;
    }
    if (v7)
    {
      id v9 = objc_opt_class();
      uint64_t v10 = *(void *)(a1 + 72);
      *(_DWORD *)id v20 = 138412802;
      *(void *)&v20[4] = v9;
      *(_WORD *)&v20[12] = 2048;
      *(void *)&v20[14] = v4;
      *(_WORD *)&v20[22] = 2048;
      uint64_t v21 = v10;
      id v11 = v9;
      LODWORD(v19) = 32;
      id v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12) {
        goto LABEL_13;
      }
      id v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, v20, v19, *(_OWORD *)v20, *(void *)&v20[16], v21);
      free(v12);
      SSFileLog();
    }

LABEL_13:
    if (*(unsigned char *)(a1 + 80))
    {
      uint64_t v13 = [(DirectUploadEntity *)v3 postEntity];
      uint64_t v14 = [v13 valueForProperty:@"account_id"];
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      unsigned __int8 v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;
    }
    else if (v4 > 2)
    {
      id v17 = [*(id *)(a1 + 48) _errorCoordinator];
      [v17 addDialogForUpload:v3];
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
    }
  }

  return 1;
}

uint64_t sub_100057BA0(uint64_t a1)
{
  uint64_t v2 = [[DirectUploadEntity alloc] initWithPersistentID:*(void *)(a1 + 56) inDatabase:*(void *)(a1 + 32)];
  id v3 = v2;
  if (v2)
  {
    [(DirectUploadEntity *)v2 setProcessingWithResponse:*(void *)(a1 + 40)];
    [*(id *)(a1 + 48) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 32)];
  }

  return 1;
}

void sub_100057F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100057F80(uint64_t a1)
{
  uint64_t v32 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"account_id" equalToValue:*(void *)(a1 + 32)];
  uint64_t v2 = +[MediaSocialPostEntity queryWithDatabase:*(void *)(a1 + 40) predicate:v32];
  id v3 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"error_code" equalToLongLong:139];
  uint64_t v4 = +[SSSQLiteContainsPredicate containsPredicateWithProperty:@"post_id" query:v2 queryProperty:SSSQLEntityPropertyPersistentID];
  id v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:4];
  v44[0] = v3;
  v44[1] = v5;
  v44[2] = v4;
  unsigned int v6 = +[NSArray arrayWithObjects:v44 count:3];
  int v7 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v6];

  if (![*(id *)(a1 + 48) isEqual:*(void *)(a1 + 32)])
  {
    if ([*(id *)(a1 + 64) authenticateResponseType] == (id)2)
    {
      uint64_t v15 = +[SSLogConfig sharedDaemonConfig];
      if (!v15)
      {
        uint64_t v15 = +[SSLogConfig sharedConfig];
      }
      unsigned int v16 = [v15 shouldLog];
      if ([v15 shouldLogToDisk]) {
        int v17 = v16 | 2;
      }
      else {
        int v17 = v16;
      }
      id v18 = [v15 OSLogObject];
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
        int v19 = v17;
      }
      else {
        int v19 = v17 & 2;
      }
      if (v19)
      {
        LODWORD(v39) = 138412290;
        *(void *)((char *)&v39 + 4) = objc_opt_class();
        id v20 = *(id *)((char *)&v39 + 4);
        LODWORD(v31) = 12;
        uint64_t v21 = (void *)_os_log_send_and_compose_impl();

        if (!v21)
        {
LABEL_28:

          [*(id *)(a1 + 56) _cancelUploadsWithPredicate:v7 clientIdentifier:0 error:0];
          goto LABEL_35;
        }
        id v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v39, v31);
        free(v21);
        SSFileLog();
      }

      goto LABEL_28;
    }
    id v22 = [*(id *)(a1 + 64) error];
    id v23 = objc_alloc_init((Class)NSMutableArray);
    *(void *)&long long v39 = 0;
    *((void *)&v39 + 1) = &v39;
    uint64_t v40 = 0x3032000000;
    __int16 v41 = sub_100055BE8;
    id v42 = sub_100055BF8;
    id v43 = 0;
    id v24 = +[DirectUploadEntity queryWithDatabase:*(void *)(a1 + 40) predicate:v7];
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_10005853C;
    void v33[3] = &unk_1003A4650;
    id v34 = *(id *)(a1 + 40);
    id v25 = v22;
    uint64_t v26 = *(void *)(a1 + 72);
    id v35 = v25;
    uint64_t v37 = v26;
    id v38 = &v39;
    id v27 = v23;
    id v36 = v27;
    [v24 enumeratePersistentIDsUsingBlock:v33];
    uint64_t v28 = (uint64_t)[v27 count];
    if (v28 == 1)
    {
      uint64_t v29 = [*(id *)(a1 + 56) _errorCoordinator];
      [v29 addDialogForUpload:*(void *)(*((void *)&v39 + 1) + 40)];
    }
    else
    {
      if (v28 < 2)
      {
LABEL_34:

        _Block_object_dispose(&v39, 8);
        goto LABEL_35;
      }
      uint64_t v29 = [*(id *)(a1 + 56) _errorCoordinator];
      [v29 addDialogForUploadIdentifiers:v27];
    }

    goto LABEL_34;
  }
  id v8 = +[SSLogConfig sharedDaemonConfig];
  if (!v8)
  {
    id v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  id v11 = [v8 OSLogObject];
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    int v12 = v10;
  }
  else {
    int v12 = v10 & 2;
  }
  if (!v12) {
    goto LABEL_13;
  }
  LODWORD(v39) = 138412290;
  *(void *)((char *)&v39 + 4) = objc_opt_class();
  id v13 = *(id *)((char *)&v39 + 4);
  LODWORD(v31) = 12;
  uint64_t v14 = (void *)_os_log_send_and_compose_impl();

  if (v14)
  {
    id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v39, v31);
    free(v14);
    SSFileLog();
LABEL_13:
  }
  [*(id *)(a1 + 56) _resumeUploadsWithPredicate:v7 clientIdentifier:0 resetFailureCount:1 error:0];
LABEL_35:

  return 1;
}

void sub_100058518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005853C(uint64_t a1, uint64_t a2)
{
  id obj = [[DirectUploadEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  if ([(DirectUploadEntity *)obj setFailedWithError:*(void *)(a1 + 40)] > 2)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v6 = *(void *)(v4 + 40);
    id v5 = (id *)(v4 + 40);
    if (!v6) {
      objc_storeStrong(v5, obj);
    }
    id v7 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
    [*(id *)(a1 + 48) addObject:v7];
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
}

uint64_t sub_1000587B8(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  id obj = *(id *)(a1 + 32);
  id v3 = [obj countByEnumeratingWithState:&v49 objects:v58 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v43 = *(void *)v50;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v50 != v43) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v49 + 1) + 8 * i);
        id v7 = +[SSLogConfig sharedDaemonConfig];
        if (!v7)
        {
          id v7 = +[SSLogConfig sharedConfig];
        }
        unsigned int v8 = [v7 shouldLog];
        if ([v7 shouldLogToDisk]) {
          int v9 = v8 | 2;
        }
        else {
          int v9 = v8;
        }
        int v10 = [v7 OSLogObject];
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          int v11 = v9;
        }
        else {
          int v11 = v9 & 2;
        }
        if (v11)
        {
          int v12 = objc_opt_class();
          int v54 = 138412546;
          id v55 = v12;
          __int16 v56 = 2112;
          int v57 = v6;
          id v13 = v12;
          LODWORD(v39) = 22;
          id v38 = &v54;
          uint64_t v14 = (void *)_os_log_send_and_compose_impl();

          if (!v14) {
            goto LABEL_18;
          }
          int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v54, v39);
          free(v14);
          id v38 = (int *)v10;
          SSFileLog();
        }

LABEL_18:
        uint64_t v15 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]([MediaSocialPostEntity alloc], "initWithPersistentID:inDatabase:", [v6 longLongValue], *(void *)(a1 + 48));
        unsigned int v16 = [(MediaSocialPostEntity *)v15 allUploadPersistentIdentifiers];
        [v2 addObjectsFromArray:v16];

        [(MediaSocialPostEntity *)v15 deleteFromDatabase];
      }
      id v4 = [obj countByEnumeratingWithState:&v49 objects:v58 count:16];
    }
    while (v4);
  }

  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  id v40 = *(id *)(a1 + 56);
  id v44 = [v40 countByEnumeratingWithState:&v45 objects:v53 count:16];
  if (v44)
  {
    uint64_t v42 = *(void *)v46;
    do
    {
      for (j = 0; j != v44; j = (char *)j + 1)
      {
        if (*(void *)v46 != v42) {
          objc_enumerationMutation(v40);
        }
        id v18 = *(void **)(*((void *)&v45 + 1) + 8 * (void)j);
        int v19 = -[DirectUploadEntity initWithPersistentID:inDatabase:]([DirectUploadEntity alloc], "initWithPersistentID:inDatabase:", [v18 longLongValue], *(void *)(a1 + 48));
        id v20 = [(DirectUploadEntity *)v19 valueForProperty:@"post_id"];
        id v21 = [v20 longLongValue];
        uint64_t v22 = +[SSLogConfig sharedDaemonConfig];
        id v23 = (void *)v22;
        if (v21)
        {
          if (!v22)
          {
            id v23 = +[SSLogConfig sharedConfig];
          }
          unsigned int v24 = objc_msgSend(v23, "shouldLog", v38);
          if ([v23 shouldLogToDisk]) {
            v24 |= 2u;
          }
          id v25 = [v23 OSLogObject];
          if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO)) {
            int v26 = v24;
          }
          else {
            int v26 = v24 & 2;
          }
          if (v26)
          {
            id v27 = objc_opt_class();
            int v54 = 138412546;
            id v55 = v27;
            __int16 v56 = 2112;
            int v57 = v20;
            id v28 = v27;
            LODWORD(v39) = 22;
            id v38 = &v54;
            uint64_t v29 = (void *)_os_log_send_and_compose_impl();

            if (v29)
            {
              id v25 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v29, 4, &v54, v39);
              free(v29);
              id v38 = (int *)v25;
              SSFileLog();
              goto LABEL_36;
            }
          }
          else
          {
LABEL_36:
          }
          unsigned int v30 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]([MediaSocialPostEntity alloc], "initWithPersistentID:inDatabase:", [v20 longLongValue], *(void *)(a1 + 48));
          uint64_t v31 = [(MediaSocialPostEntity *)v30 allUploadPersistentIdentifiers];
          [v2 addObjectsFromArray:v31];

          [(MediaSocialPostEntity *)v30 deleteFromDatabase];
          goto LABEL_49;
        }
        if (!v22)
        {
          id v23 = +[SSLogConfig sharedConfig];
        }
        unsigned int v32 = objc_msgSend(v23, "shouldLog", v38);
        if ([v23 shouldLogToDisk]) {
          v32 |= 2u;
        }
        uint64_t v33 = [v23 OSLogObject];
        if (!os_log_type_enabled(v33, OS_LOG_TYPE_INFO)) {
          v32 &= 2u;
        }
        if (!v32) {
          goto LABEL_47;
        }
        id v34 = objc_opt_class();
        int v54 = 138412546;
        id v55 = v34;
        __int16 v56 = 2112;
        int v57 = v20;
        id v35 = v34;
        LODWORD(v39) = 22;
        id v38 = &v54;
        id v36 = (void *)_os_log_send_and_compose_impl();

        if (v36)
        {
          uint64_t v33 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v36, 4, &v54, v39);
          free(v36);
          id v38 = (int *)v33;
          SSFileLog();
LABEL_47:
        }
        [v2 addObject:v18];
        [(DirectUploadEntity *)v19 deleteFromDatabase];
LABEL_49:
      }
      id v44 = [v40 countByEnumeratingWithState:&v45 objects:v53 count:16];
    }
    while (v44);
  }

  [*(id *)(a1 + 40) _sendRemoveUploadsMessageWithUploadIdentifiers:v2];
  [*(id *)(a1 + 40) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 48)];

  return 1;
}

uint64_t sub_100058E30(uint64_t a1)
{
  uint64_t v1 = a1;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v32 objects:v40 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v31 = *(void *)v33;
    do
    {
      for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v31) {
          objc_enumerationMutation(obj);
        }
        uint64_t v5 = v1;
        uint64_t v6 = *(void **)(*((void *)&v32 + 1) + 8 * i);
        id v7 = +[SSLogConfig sharedDaemonConfig];
        if (!v7)
        {
          id v7 = +[SSLogConfig sharedConfig];
        }
        unsigned int v8 = [v7 shouldLog];
        if ([v7 shouldLogToDisk]) {
          int v9 = v8 | 2;
        }
        else {
          int v9 = v8;
        }
        int v10 = [v7 OSLogObject];
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          int v11 = v9;
        }
        else {
          int v11 = v9 & 2;
        }
        if (v11)
        {
          int v12 = objc_opt_class();
          int v36 = 138412546;
          uint64_t v37 = v12;
          __int16 v38 = 2112;
          id v39 = v6;
          id v13 = v12;
          LODWORD(v29) = 22;
          id v28 = &v36;
          uint64_t v14 = (void *)_os_log_send_and_compose_impl();

          if (!v14) {
            goto LABEL_18;
          }
          int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v36, v29);
          free(v14);
          id v28 = (int *)v10;
          SSFileLog();
        }

LABEL_18:
        uint64_t v1 = v5;
        uint64_t v15 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]([MediaSocialPostEntity alloc], "initWithPersistentID:inDatabase:", [v6 longLongValue], *(void *)(v5 + 48));
        [(MediaSocialPostEntity *)v15 setValue:&off_1003C9018 forKey:@"is_failed"];
        [(MediaSocialPostEntity *)v15 setValue:&off_1003C9018 forProperty:@"failure_count"];
      }
      id v3 = [obj countByEnumeratingWithState:&v32 objects:v40 count:16];
    }
    while (v3);
  }

  if ([*(id *)(v1 + 32) count]) {
    [*(id *)(v1 + 40) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(v1 + 48)];
  }
  if (objc_msgSend(*(id *)(v1 + 56), "count", v28))
  {
    unsigned int v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16)
    {
      unsigned int v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = [v16 shouldLog];
    if ([v16 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    int v19 = [v16 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
      int v20 = v18;
    }
    else {
      int v20 = v18 & 2;
    }
    if (v20)
    {
      id v21 = objc_opt_class();
      uint64_t v22 = *(void **)(v1 + 56);
      id v23 = v21;
      id v24 = [v22 count];
      int v36 = 138412546;
      uint64_t v37 = v21;
      __int16 v38 = 2048;
      id v39 = v24;
      LODWORD(v29) = 22;
      id v25 = (void *)_os_log_send_and_compose_impl();

      if (!v25)
      {
LABEL_35:

        int v26 = +[SSSQLiteContainsPredicate containsPredicateWithProperty:SSSQLEntityPropertyPersistentID values:*(void *)(v1 + 56)];
        [*(id *)(v1 + 40) _resumeUploadsWithPredicate:v26 clientIdentifier:0 resetFailureCount:1 error:0];

        return 1;
      }
      int v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v36, v29);
      free(v25);
      SSFileLog();
    }

    goto LABEL_35;
  }
  return 1;
}

uint64_t sub_10005947C(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        if (objc_msgSend(v7, "result", (void)v10) == (id)4 || objc_msgSend(v7, "result") == (id)5)
        {
          [*(id *)(a1 + 40) addObject:v7];
        }
        else
        {
          unsigned int v8 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]([MediaSocialPostEntity alloc], "initWithPersistentID:inDatabase:", [v7 postIdentifier], *(void *)(a1 + 48));
          [(MediaSocialPostEntity *)v8 updateWithPollingResponse:v7];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }

  return 1;
}

void sub_100059684(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 24) count])
  {
    id v2 = [*(id *)(*(void *)(a1 + 32) + 24) indexOfObjectIdenticalTo:*(void *)(a1 + 40)];
    if (v2 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      id v3 = v2;
      id v4 = +[SSLogConfig sharedDaemonConfig];
      if (!v4)
      {
        id v4 = +[SSLogConfig sharedConfig];
      }
      unsigned int v5 = [v4 shouldLog];
      if ([v4 shouldLogToDisk]) {
        int v6 = v5 | 2;
      }
      else {
        int v6 = v5;
      }
      id v7 = [v4 OSLogObject];
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
        v6 &= 2u;
      }
      if (v6)
      {
        unsigned int v8 = objc_opt_class();
        int v9 = *(void **)(a1 + 40);
        id v10 = v8;
        [v9 clientIdentifier];
        int v16 = 138412546;
        unsigned int v17 = v8;
        __int16 v18 = 2112;
        id v19 = (id)objc_claimAutoreleasedReturnValue();
        LODWORD(v15) = 22;
        long long v11 = (void *)_os_log_send_and_compose_impl();

        if (!v11) {
          goto LABEL_14;
        }
        id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v16, v15);
        free(v11);
        SSFileLog();
      }

LABEL_14:
      [*(id *)(a1 + 40) setOutputConnectionWithConnection:0];
      [*(id *)(*(void *)(a1 + 32) + 24) removeObjectAtIndex:v3];
      if (![*(id *)(*(void *)(a1 + 32) + 24) count])
      {
        long long v12 = +[NSNotificationCenter defaultCenter];
        [v12 removeObserver:*(void *)(a1 + 32) name:@"XPCClientDisconnectNotification" object:0];
        uint64_t v13 = *(void *)(a1 + 32);
        uint64_t v14 = *(void **)(v13 + 24);
        *(void *)(v13 + 24) = 0;
      }
    }
  }
}

uint64_t sub_100059974(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:xpc_int64_get_value(v4)];
    [*(id *)(a1 + 32) addObject:v5];
  }
  return 1;
}

uint64_t sub_100059EA8(uint64_t a1)
{
  id v2 = objc_alloc_init(DirectUploadDatabaseSchema);
  [(DirectUploadDatabaseSchema *)v2 createSchemaInDatabase:*(void *)(a1 + 32)];

  return 1;
}

uint64_t sub_10005A168(uint64_t a1)
{
  long long v12 = @"post_id";
  id v2 = +[DirectUploadEntity queryWithDatabase:*(void *)(a1 + 32) predicate:*(void *)(a1 + 40)];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10005A28C;
  v7[3] = &unk_1003A46F0;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  id v5 = *(void **)(a1 + 56);
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = v5;
  id v11 = *(id *)(a1 + 64);
  [v2 enumeratePersistentIDsAndProperties:&v12 count:1 usingBlock:v7];

  return 1;
}

void sub_10005A28C(uint64_t a1, uint64_t a2, id *a3)
{
  int v6 = [[DirectUploadEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  id v7 = [*a3 longLongValue];
  if (!v7)
  {
    uint64_t v9 = (MediaSocialPostEntity *)[objc_alloc((Class)NSNumber) initWithLongLong:a2];
    int v20 = +[SSLogConfig sharedDaemonConfig];
    if (!v20)
    {
      int v20 = +[SSLogConfig sharedConfig];
    }
    unsigned int v21 = [v20 shouldLog];
    if ([v20 shouldLogToDisk]) {
      int v22 = v21 | 2;
    }
    else {
      int v22 = v21;
    }
    id v23 = [v20 OSLogObject];
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_INFO)) {
      v22 &= 2u;
    }
    if (v22)
    {
      id v24 = objc_opt_class();
      uint64_t v25 = *(void *)(a1 + 48);
      *(_DWORD *)uint64_t v29 = 138412802;
      *(void *)&v29[4] = v24;
      *(_WORD *)&v29[12] = 2112;
      *(void *)&v29[14] = v9;
      *(_WORD *)&v29[22] = 2112;
      uint64_t v30 = v25;
      id v26 = v24;
      LODWORD(v28) = 32;
      id v27 = (void *)_os_log_send_and_compose_impl();

      if (!v27)
      {
LABEL_25:

        [(DirectUploadEntity *)v6 deleteFromDatabase];
        [*(id *)(a1 + 56) addObject:v9];
        goto LABEL_26;
      }
      id v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, v29, v28, *(void *)v29, *(_OWORD *)&v29[8], v30);
      free(v27);
      SSFileLog();
    }

    goto LABEL_25;
  }
  id v8 = v7;
  uint64_t v9 = [[MediaSocialPostEntity alloc] initWithPersistentID:v7 inDatabase:*(void *)(a1 + 32)];
  id v10 = +[SSLogConfig sharedDaemonConfig];
  if (!v10)
  {
    id v10 = +[SSLogConfig sharedConfig];
  }
  unsigned int v11 = [v10 shouldLog];
  if ([v10 shouldLogToDisk]) {
    int v12 = v11 | 2;
  }
  else {
    int v12 = v11;
  }
  uint64_t v13 = [v10 OSLogObject];
  if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
    v12 &= 2u;
  }
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v14 = objc_opt_class();
  uint64_t v15 = *(void *)(a1 + 48);
  *(_DWORD *)uint64_t v29 = 138412802;
  *(void *)&v29[4] = v14;
  *(_WORD *)&v29[12] = 2048;
  *(void *)&v29[14] = v8;
  *(_WORD *)&v29[22] = 2112;
  uint64_t v30 = v15;
  id v16 = v14;
  LODWORD(v28) = 32;
  unsigned int v17 = (void *)_os_log_send_and_compose_impl();

  if (v17)
  {
    uint64_t v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, v29, v28, *(_OWORD *)v29, *(void *)&v29[16], v30);
    free(v17);
    SSFileLog();
LABEL_12:
  }
  __int16 v18 = *(void **)(a1 + 56);
  id v19 = [(MediaSocialPostEntity *)v9 allUploadPersistentIdentifiers];
  [v18 addObjectsFromArray:v19];

  [(MediaSocialPostEntity *)v9 deleteFromDatabase];
LABEL_26:
}

void sub_10005ABC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [[DirectUploadEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  id v22 = 0;
  id v23 = @"post_id";
  [(DirectUploadEntity *)v4 getValues:&v22 forProperties:&v23 count:1];
  id v5 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]([MediaSocialPostEntity alloc], "initWithPersistentID:inDatabase:", [v22 longLongValue], *(void *)(a1 + 32));
  int v6 = v5;
  if (!v5)
  {
LABEL_4:
    id v7 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
    [*(id *)(a1 + 40) addObject:v7];
    [(DirectUploadEntity *)v4 deleteFromDatabase];
    id v8 = +[SSLogConfig sharedDaemonConfig];
    if (!v8)
    {
      id v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v9 = [v8 shouldLog];
    if ([v8 shouldLogToDisk]) {
      int v10 = v9 | 2;
    }
    else {
      int v10 = v9;
    }
    unsigned int v11 = [v8 OSLogObject];
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      v10 &= 2u;
    }
    if (v10)
    {
      *(_DWORD *)unsigned int v21 = 138412546;
      *(void *)&void v21[4] = objc_opt_class();
      *(_WORD *)&v21[12] = 2048;
      *(void *)&v21[14] = a2;
      id v12 = *(id *)&v21[4];
      LODWORD(v20) = 22;
      uint64_t v13 = (void *)_os_log_send_and_compose_impl();

      if (!v13)
      {
LABEL_15:

        goto LABEL_29;
      }
      unsigned int v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, v21, v20, *(_OWORD *)v21, *(void *)&v21[16]);
      free(v13);
      SSFileLog();
    }

    goto LABEL_15;
  }
  if ([(MediaSocialPostEntity *)v5 isOverPollDuration])
  {
    [(MediaSocialPostEntity *)v6 deleteFromDatabase];
    goto LABEL_4;
  }
  uint64_t v14 = +[SSLogConfig sharedDaemonConfig];
  if (!v14)
  {
    uint64_t v14 = +[SSLogConfig sharedConfig];
  }
  unsigned int v15 = [v14 shouldLog];
  if ([v14 shouldLogToDisk]) {
    int v16 = v15 | 2;
  }
  else {
    int v16 = v15;
  }
  unsigned int v17 = [v14 OSLogObject];
  if (!os_log_type_enabled(v17, OS_LOG_TYPE_INFO)) {
    v16 &= 2u;
  }
  if (v16)
  {
    *(_DWORD *)unsigned int v21 = 138412546;
    *(void *)&void v21[4] = objc_opt_class();
    *(_WORD *)&v21[12] = 2048;
    *(void *)&v21[14] = a2;
    id v18 = *(id *)&v21[4];
    LODWORD(v20) = 22;
    id v19 = (void *)_os_log_send_and_compose_impl();

    if (!v19) {
      goto LABEL_27;
    }
    unsigned int v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, v21, v20, *(void *)v21, *(_OWORD *)&v21[8]);
    free(v19);
    SSFileLog();
  }

LABEL_27:
  id v7 = [(MediaSocialPostEntity *)v6 statusPollRequest];
  if (v7) {
    [*(id *)(a1 + 56) addObject:v7];
  }
LABEL_29:
}

void sub_10005B064(id a1, SSSQLiteDatabase *a2)
{
}

void sub_10005B4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_10005B524(uint64_t a1, uint64_t a2)
{
  id v3 = [[MediaSocialPostEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  if ([(MediaSocialPostEntity *)v3 isReadyToSend]) {
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v3];
  }
}

void sub_10005B59C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    int v6 = WeakRetained[5];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10005B660;
    block[3] = &unk_1003A47B0;
    uint64_t v7 = *(void *)(a1 + 48);
    void block[4] = *(void *)(a1 + 32);
    uint64_t v10 = v7;
    id v9 = v3;
    dispatch_async(v6, block);
  }
}

id sub_10005B660(uint64_t a1)
{
  return [*(id *)(a1 + 32) _operationDidFinishForPostIdentifier:*(void *)(a1 + 48) response:*(void *)(a1 + 40)];
}

void sub_10005B708(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(v6, "persistentIdentifier"));
  uint64_t v4 = [*(id *)(*(void *)(a1 + 32) + 72) objectForKey:v3];
  id v5 = v4;
  if (v4)
  {
    objc_msgSend(v6, "setCountOfBytesExpectedToSend:", objc_msgSend(v4, "countOfBytesExpectedToSend"));
    objc_msgSend(v6, "setCountOfBytesSent:", objc_msgSend(v5, "countOfBytesSent"));
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10005BC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t sub_10005BC90(uint64_t a1)
{
  id v2 = [[MediaSocialPostEntity alloc] initWithPersistentID:*(void *)(a1 + 56) inDatabase:*(void *)(a1 + 32)];
  uint64_t v3 = [(MediaSocialPostEntity *)v2 allUploadPersistentIdentifiers];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  [(MediaSocialPostEntity *)v2 deleteFromDatabase];
  [*(id *)(a1 + 40) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 32)];

  return 1;
}

void sub_10005BDC8(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];
  [v1 releaseKeepAliveAssertion:@"DirectUploadController"];
}

void sub_10005BF3C(uint64_t a1)
{
  xpc_object_t message = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), message);
  id v2 = +[Daemon daemon];
  [v2 releaseKeepAliveAssertion:@"DirectUploadController"];
}

void sub_10005C278(uint64_t a1, int64_t value)
{
}

void sub_10005C288(uint64_t a1, void *a2)
{
  id v3 = [a2 copyXPCEncoding];
  xpc_array_append_value(*(xpc_object_t *)(a1 + 32), v3);
}

void sub_10005C6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005C6F4(uint64_t a1)
{
  id v2 = [[MediaSocialPostEntity alloc] initWithPersistentID:*(void *)(a1 + 56) inDatabase:*(void *)(a1 + 32)];
  [(MediaSocialPostEntity *)v2 setValue:&off_1003C9030 forProperty:@"is_failed"];
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  id v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v7 = objc_opt_class();
  id v8 = *(void **)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  id v10 = v7;
  [v8 status];
  int v16 = 138412802;
  unsigned int v17 = v7;
  __int16 v18 = 2048;
  uint64_t v19 = v9;
  __int16 v20 = 2112;
  id v21 = (id)objc_claimAutoreleasedReturnValue();
  LODWORD(v15) = 32;
  unsigned int v11 = (void *)_os_log_send_and_compose_impl();

  if (v11)
  {
    id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v16, v15);
    free(v11);
    SSFileLog();
LABEL_11:
  }
  id v12 = [*(id *)(a1 + 40) _errorCoordinator];
  uint64_t v13 = [*(id *)(a1 + 48) serviceErrorMessage];
  [v12 addDialogForPost:v2 errorMessage:v13 canRetry:0];

  return 1;
}

uint64_t sub_10005C930(uint64_t a1)
{
  id v2 = [[MediaSocialPostEntity alloc] initWithPersistentID:*(void *)(a1 + 56) inDatabase:*(void *)(a1 + 32)];
  [(MediaSocialPostEntity *)v2 setValue:&off_1003C9030 forProperty:@"is_failed"];
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  id v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v7 = objc_opt_class();
  id v8 = *(void **)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  id v10 = v7;
  [v8 status];
  int v16 = 138412802;
  unsigned int v17 = v7;
  __int16 v18 = 2048;
  uint64_t v19 = v9;
  __int16 v20 = 2112;
  id v21 = (id)objc_claimAutoreleasedReturnValue();
  LODWORD(v15) = 32;
  unsigned int v11 = (void *)_os_log_send_and_compose_impl();

  if (v11)
  {
    id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v16, v15);
    free(v11);
    SSFileLog();
LABEL_11:
  }
  id v12 = [*(id *)(a1 + 40) _errorCoordinator];
  uint64_t v13 = [*(id *)(a1 + 48) serviceErrorMessage];
  [v12 addDialogForPost:v2 errorMessage:v13 canRetry:1];

  return 1;
}

uint64_t sub_10005CB6C(uint64_t a1)
{
  id v2 = [[MediaSocialPostEntity alloc] initWithPersistentID:*(void *)(a1 + 64) inDatabase:*(void *)(a1 + 32)];
  id v3 = [(MediaSocialPostEntity *)v2 valueForProperty:@"failure_count"];
  uint64_t v4 = (uint64_t)[v3 integerValue];

  [(MediaSocialPostEntity *)v2 setValue:&off_1003C9030 forProperty:@"is_failed"];
  int v5 = +[NSNumber numberWithInteger:v4 + 1];
  [(MediaSocialPostEntity *)v2 setValue:v5 forProperty:@"failure_count"];

  id v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    id v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  uint64_t v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    v8 &= 2u;
  }
  if (v8)
  {
    id v10 = objc_opt_class();
    uint64_t v11 = *(void *)(a1 + 64);
    id v12 = *(void **)(a1 + 48);
    id v17 = v10;
    [v12 error];
    int v18 = 138413058;
    uint64_t v19 = v10;
    __int16 v20 = 2048;
    uint64_t v21 = v11;
    __int16 v22 = 2048;
    uint64_t v23 = v4 + 1;
    __int16 v24 = 2112;
    id v25 = (id)objc_claimAutoreleasedReturnValue();
    LODWORD(v16) = 42;
    uint64_t v13 = (void *)_os_log_send_and_compose_impl();

    if (!v13) {
      goto LABEL_12;
    }
    uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v18, v16);
    free(v13);
    SSFileLog();
  }

LABEL_12:
  if (v4 > 1)
  {
    uint64_t v14 = [*(id *)(a1 + 40) _errorCoordinator];
    [v14 addDialogForPost:v2];
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }

  return 1;
}

uint64_t sub_10005CE10(uint64_t a1)
{
  id v2 = [[MediaSocialPostEntity alloc] initWithPersistentID:*(void *)(a1 + 56) inDatabase:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) pollingInterval];
  id v3 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  [(MediaSocialPostEntity *)v2 setValue:v3 forProperty:@"poll_interval"];

  [*(id *)(a1 + 40) pollDuration];
  uint64_t v4 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  [(MediaSocialPostEntity *)v2 setValue:v4 forProperty:@"poll_duration"];

  int v5 = [*(id *)(a1 + 40) activityIdentifier];
  [(MediaSocialPostEntity *)v2 setValue:v5 forProperty:@"activity_id"];

  uint64_t v6 = [(MediaSocialPostEntity *)v2 statusPollRequest];
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  int v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  return 1;
}

uint64_t sub_10005D0A8(uint64_t a1)
{
  id v2 = [(id)objc_opt_class() _orderedUploadQueryWithDatabase:*(void *)(a1 + 40) predicate:*(void *)(a1 + 48)];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_10005D194;
  v6[3] = &unk_1003A48C8;
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 56);
  id v3 = *(id *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 32);
  id v9 = v3;
  uint64_t v10 = v4;
  id v11 = *(id *)(a1 + 72);
  [v2 enumeratePersistentIDsUsingBlock:v6];

  return 1;
}

void sub_10005D194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [[DirectUploadEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  [(DirectUploadEntity *)v4 setValue:&off_1003C9048 forProperty:@"state"];
  id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
  [*(id *)(a1 + 40) addObject:v5];
  if (*(void *)(a1 + 48))
  {
    uint64_t v6 = [*(id *)(*(void *)(a1 + 56) + 72) objectForKey:v5];
    id v7 = [*(id *)(a1 + 56) _newSSVDirectUploadWithProgress:v6 state:3];
    [v7 setPersistentIdentifier:a2];
    [*(id *)(a1 + 48) addObject:v7];
  }
  id v8 = +[SSLogConfig sharedDaemonConfig];
  if (!v8)
  {
    id v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  id v11 = [v8 OSLogObject];
  if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    v10 &= 2u;
  }
  if (v10)
  {
    id v12 = objc_opt_class();
    uint64_t v13 = *(void *)(a1 + 64);
    *(_DWORD *)int v18 = 138412802;
    *(void *)&void v18[4] = v12;
    *(_WORD *)&v18[12] = 2048;
    *(void *)&v18[14] = a2;
    *(_WORD *)&v18[22] = 2112;
    uint64_t v19 = v13;
    id v14 = v12;
    LODWORD(v17) = 32;
    uint64_t v15 = (void *)_os_log_send_and_compose_impl();

    if (v15)
    {
      uint64_t v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, v18, v17, *(_OWORD *)v18, *(void *)&v18[16], v19);
      free(v15);
      SSFileLog();
    }
  }
  else
  {
  }
}

uint64_t sub_10005DA54(uint64_t a1)
{
  id v2 = [(id)objc_opt_class() _orderedUploadQueryWithDatabase:*(void *)(a1 + 40) predicate:*(void *)(a1 + 48)];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_10005DB48;
  v6[3] = &unk_1003A4918;
  id v7 = *(id *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 80);
  id v8 = *(id *)(a1 + 56);
  id v3 = *(id *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 32);
  id v9 = v3;
  uint64_t v10 = v4;
  id v11 = *(id *)(a1 + 72);
  [v2 enumeratePersistentIDsUsingBlock:v6];

  return 1;
}

void sub_10005DB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [[DirectUploadEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  [(DirectUploadEntity *)v4 resetStatusProperties];
  if (*(unsigned char *)(a1 + 72)) {
    [(DirectUploadEntity *)v4 setValue:&off_1003C9018 forProperty:@"failure_count"];
  }
  id v5 = [[DirectUploadRequest alloc] initWithEntity:v4 accountIdentifier:0];
  if (v5) {
    [*(id *)(a1 + 40) addObject:v5];
  }
  if (*(void *)(a1 + 48))
  {
    id v6 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
    id v7 = [*(id *)(*(void *)(a1 + 56) + 72) objectForKey:v6];
    id v8 = [*(id *)(a1 + 56) _newSSVDirectUploadWithProgress:v7 state:0];
    [v8 setPersistentIdentifier:a2];
    [*(id *)(a1 + 48) addObject:v8];
  }
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = +[SSLogConfig sharedDaemonConfig];
  id v11 = (void *)v10;
  if (v9)
  {
    if (!v10)
    {
      id v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v12 = [v11 shouldLog];
    if ([v11 shouldLogToDisk]) {
      int v13 = v12 | 2;
    }
    else {
      int v13 = v12;
    }
    id v14 = [v11 OSLogObject];
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
      v13 &= 2u;
    }
    if (v13)
    {
      uint64_t v15 = objc_opt_class();
      uint64_t v16 = *(void *)(a1 + 64);
      *(_DWORD *)uint64_t v23 = 138412802;
      *(void *)&void v23[4] = v15;
      *(_WORD *)&v23[12] = 2048;
      *(void *)&v23[14] = a2;
      *(_WORD *)&v23[22] = 2112;
      uint64_t v24 = v16;
      id v17 = v15;
      LODWORD(v22) = 32;
      goto LABEL_26;
    }
LABEL_28:

    goto LABEL_29;
  }
  if (!v10)
  {
    id v11 = +[SSLogConfig sharedConfig];
  }
  unsigned int v18 = [v11 shouldLog];
  if ([v11 shouldLogToDisk]) {
    int v19 = v18 | 2;
  }
  else {
    int v19 = v18;
  }
  id v14 = [v11 OSLogObject];
  if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
    v19 &= 2u;
  }
  if (!v19) {
    goto LABEL_28;
  }
  *(_DWORD *)uint64_t v23 = 138412546;
  *(void *)&void v23[4] = objc_opt_class();
  *(_WORD *)&v23[12] = 2048;
  *(void *)&v23[14] = a2;
  id v17 = *(id *)&v23[4];
  LODWORD(v22) = 22;
LABEL_26:
  __int16 v20 = (void *)_os_log_send_and_compose_impl();

  if (v20)
  {
    uint64_t v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v20, 4, v23, v22, *(_OWORD *)v23, *(void *)&v23[16]);
    free(v20);
    SSFileLog();
  }
LABEL_29:
}

uint64_t sub_10005DF48(uint64_t a1)
{
  id v2 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"failure_count" value:&off_1003C9018 comparisonType:5];
  id v3 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"failure_count" value:&off_1003C9060 comparisonType:3];
  uint64_t v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"state" equalToLongLong:4];
  v26[0] = v4;
  v26[1] = v2;
  v26[2] = v3;
  id v5 = +[NSArray arrayWithObjects:v26 count:3];
  id v6 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v5];

  [*(id *)(a1 + 32) _resumeUploadsWithPredicate:v6 clientIdentifier:0 resetFailureCount:0 error:0];
  id v7 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"failure_count" value:&off_1003C9018 comparisonType:5];
  id v8 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"failure_count" value:&off_1003C9060 comparisonType:3];
  uint64_t v9 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"is_failed" equalToLongLong:1];
  v25[0] = v9;
  v25[1] = v7;
  v25[2] = v8;
  uint64_t v10 = +[NSArray arrayWithObjects:v25 count:3];
  id v11 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v10];

  unsigned int v12 = [(id)objc_opt_class() _orderedPostQueryWithDatabase:*(void *)(a1 + 40) predicate:v11];
  uint64_t v21 = 0;
  uint64_t v22 = &v21;
  uint64_t v23 = 0x2020000000;
  uint64_t v24 = 0;
  id v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472;
  uint64_t v16 = sub_10005E240;
  id v17 = &unk_1003A4968;
  uint64_t v18 = *(void *)(a1 + 32);
  id v19 = *(id *)(a1 + 40);
  __int16 v20 = &v21;
  [v12 enumeratePersistentIDsUsingBlock:&v14];
  if (v22[3] >= 1) {
    objc_msgSend(*(id *)(a1 + 32), "_enqueueNextReadyMediaSocialPostOperationWithDatabase:", *(void *)(a1 + 40), v14, v15, v16, v17, v18);
  }

  _Block_object_dispose(&v21, 8);
  return 1;
}

void sub_10005E220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005E240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4)
  {
    uint64_t v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  id v7 = [v4 OSLogObject];
  if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    v6 &= 2u;
  }
  if (!v6) {
    goto LABEL_11;
  }
  *(_DWORD *)unsigned int v12 = 138412546;
  *(void *)&void v12[4] = objc_opt_class();
  *(_WORD *)&v12[12] = 2048;
  *(void *)&v12[14] = a2;
  id v8 = *(id *)&v12[4];
  LODWORD(v11) = 22;
  uint64_t v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, v12, v11, *(_OWORD *)v12, *(void *)&v12[16]);
    free(v9);
    SSFileLog();
LABEL_11:
  }
  uint64_t v10 = [[MediaSocialPostEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 40)];
  [(MediaSocialPostEntity *)v10 setValue:&off_1003C9018 forProperty:@"is_failed"];
  ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
}

void sub_10005FD50(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_10005FF64(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_alloc_init((Class)SSVMediaSocialPostItem);
  [v5 setIdentifier:*a3];
  [v5 setType:a3[1]];
  [*(id *)(a1 + 32) addObject:v5];
}

void sub_1000601AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_alloc_init((Class)SSVMediaSocialPostExternalDestination);
  [v6 setAccessToken:*(void *)a3];
  [v6 setPageAccessToken:*(void *)(a3 + 8)];
  [v6 setPageIdentifier:*(void *)(a3 + 16)];
  id v5 = sub_1000A0C08((uint64_t)[*(id *)(a3 + 24) integerValue]);
  [v6 setServiceIdentifier:v5];

  [*(id *)(a1 + 32) addObject:v6];
}

void sub_100060414(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1[4] _insertUploadWithAttachment:v3 properties:a1[5] database:a1[6]];
  if (v4)
  {
    [a1[7] addObject:v4];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10006051C;
    v7[3] = &unk_1003A49B8;
    id v8 = a1[5];
    id v5 = v4;
    id v6 = a1[4];
    id v9 = v5;
    id v10 = v6;
    id v11 = a1[6];
    id v12 = a1[7];
    [v3 enumerateChildAttachmentsUsingBlock:v7];
  }
}

void sub_10006051C(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  id v10 = [v5 mutableCopy];
  [v10 setObject:v6 forKey:@"parent_relationship_type"];

  id v8 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 40) persistentID]);
  [v10 setObject:v8 forKey:@"parent_upload_id"];

  id v9 = [*(id *)(a1 + 48) _insertUploadWithAttachment:v7 properties:v10 database:*(void *)(a1 + 56)];

  if (v9) {
    [*(id *)(a1 + 64) addObject:v9];
  }
}

void sub_100060744(uint64_t a1, uint64_t a2)
{
  id v4 = +[MediaSocialContentItemEntity newEntityValuesWithMediaSocialPostItem:a2];
  [v4 setObject:*(void *)(a1 + 32) forKey:@"post_id"];
  id v3 = [[MediaSocialContentItemEntity alloc] initWithPropertyValues:v4 inDatabase:*(void *)(a1 + 40)];
  if (v3) {
    [*(id *)(a1 + 48) addObject:v3];
  }
}

void sub_10006090C(uint64_t a1, uint64_t a2)
{
  id v4 = +[MediaSocialExternalTargetEntity newEntityValuesWithMediaSocialExternalDestination:a2];
  [v4 setObject:*(void *)(a1 + 32) forKey:@"post_id"];
  id v3 = [[MediaSocialExternalTargetEntity alloc] initWithPropertyValues:v4 inDatabase:*(void *)(a1 + 40)];
  if (v3) {
    [*(id *)(a1 + 48) addObject:v3];
  }
}

void sub_1000612F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 8)) {
    return;
  }
  id v9 = objc_alloc_init(MediaSocialPostAttachment);
  [(MediaSocialPostAttachment *)v9 setAlbumIdentifier:*(void *)a3];
  [(MediaSocialPostAttachment *)v9 setAssetToken:*(void *)(a3 + 8)];
  [(MediaSocialPostAttachment *)v9 setAssetTokenType:*(void *)(a3 + 16)];
  [(MediaSocialPostAttachment *)v9 setAttachmentDescription:*(void *)(a3 + 32)];
  [(MediaSocialPostAttachment *)v9 setCategoryName:*(void *)(a3 + 24)];
  -[MediaSocialPostAttachment setExplicitContent:](v9, "setExplicitContent:", [*(id *)(a3 + 40) BOOLValue]);
  [*(id *)(a3 + 64) doubleValue];
  -[MediaSocialPostAttachment setPreviewFrameTimestamp:](v9, "setPreviewFrameTimestamp:");
  [(MediaSocialPostAttachment *)v9 setTitle:*(void *)(a3 + 72)];
  [*(id *)(a3 + 80) doubleValue];
  -[MediaSocialPostAttachment setUploadTime:](v9, "setUploadTime:");
  [(MediaSocialPostAttachment *)v9 setUTI:*(void *)(a3 + 88)];
  id v6 = [[DirectUploadEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
  id v7 = [(DirectUploadEntity *)v6 artists];
  [(MediaSocialPostAttachment *)v9 setArtists:v7];

  if (![*(id *)(a3 + 48) longLongValue])
  {
    id v8 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
    [*(id *)(a1 + 40) setObject:v9 forKey:v8];
    [*(id *)(a1 + 48) addObject:v9];
    goto LABEL_7;
  }
  if (*(void *)(a3 + 56))
  {
    id v8 = [*(id *)(a1 + 40) objectForKey:*(void *)(a3 + 48)];
    [v8 setChildAttachment:v9 forRelationship:*(void *)(a3 + 56)];
LABEL_7:
  }
}

id sub_1000616A4(void *a1)
{
  id v2 = objc_alloc_init((Class)NSMutableDictionary);
  id v3 = [a1 bundleIdentifier];
  if (v3)
  {
    id v4 = [v3 copyUTF8StringOfLength:256];
    if (v4)
    {
      id v5 = v4;
      [v2 setObject:v4 forKey:@"bid"];
    }
  }
  id v6 = [a1 bundleVersion];
  if (v6)
  {
    id v7 = [v6 copyUTF8StringOfLength:100];
    if (v7)
    {
      id v8 = v7;
      [v2 setObject:v7 forKey:@"bvrs"];
    }
  }
  id v9 = [a1 storeIdentifier];
  if (v9) {
    objc_msgSend(v2, "setObject:forKey:", objc_msgSend(v9, "stringValue"), @"appAdamId");
  }
  id v10 = [a1 storeVersion];
  if (v10) {
    objc_msgSend(v2, "setObject:forKey:", objc_msgSend(v10, "stringValue"), @"appExtVrsId");
  }
  id v11 = [a1 vendorIdentifier];
  if (v11) {
    [v2 setObject:v11 forKey:@"vid"];
  }
  return v2;
}

void sub_1000637E0(_Unwind_Exception *a1)
{
}

void sub_10006381C(void *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100063790);
  }
  JUMPOUT(0x100063804);
}

void sub_1000638AC(_Unwind_Exception *a1)
{
}

void sub_1000638CC(void *a1)
{
}

void sub_100063A58(_Unwind_Exception *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100063A0CLL);
  }
  _Unwind_Resume(exc_buf);
}

void sub_100063C04(_Unwind_Exception *a1)
{
}

void sub_100063C30(void *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100063BB4);
  }
  JUMPOUT(0x100063C24);
}

void sub_100063CC4(_Unwind_Exception *a1)
{
}

void sub_100063CE4(void *a1)
{
}

void sub_100063FC0(_Unwind_Exception *a1)
{
}

void sub_100063FEC(void *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100063F6CLL);
  }
  JUMPOUT(0x100063FE0);
}

id sub_1000650E8(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 16);
  if (!v2) {
    id v2 = +[ISOperationQueue mainQueue];
  }
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 addOperation:v3];
}

void sub_1000651E4(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, xpc_object_t))(v3 + 16))(v3, v2);
  }
  objc_msgSend(objc_msgSend(objc_getAssociatedObject(*(id *)(a1 + 32), "com.apple.itunesstored.RequestQueue.client"), "outputConnection"), "sendMessage:", v2);
  [*(id *)(a1 + 32) setCompletionBlock:0];
  objc_setAssociatedObject(*(id *)(a1 + 32), "com.apple.itunesstored.RequestQueue.client", 0, (void *)0x301);

  xpc_release(v2);
}

void sub_10006537C(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
    uint64_t v3 = *(void *)(a1 + 56);
    if (v3) {
      (*(void (**)(uint64_t, xpc_object_t))(v3 + 16))(v3, reply);
    }
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
    xpc_release(reply);
  }
  [*(id *)(a1 + 32) setCompletionBlock:0];
  objc_setAssociatedObject(*(id *)(a1 + 32), "com.apple.itunesstored.RequestQueue.client", 0, (void *)0x301);
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v4 = *(void **)(a1 + 48);

  xpc_release(v4);
}

void sub_1000659AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000659C4(uint64_t a1, uint64_t a2)
{
}

void sub_1000659D4(uint64_t a1)
{
}

id sub_1000659E0(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 16);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void *sub_100065AA0(void *result)
{
  id v1 = *(void **)(result[4] + 16);
  if (v1 != (void *)result[5])
  {
    xpc_object_t v2 = result;

    id result = (id)v2[5];
    *(void *)(v2[4] + 16) = result;
  }
  return result;
}

void sub_100066E50(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = +[SSLogConfig sharedDaemonConfig];
  id v7 = (void *)v6;
  if (a2)
  {
    if (!v6)
    {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    id v10 = [v7 OSLogObject];
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      v9 &= 2u;
    }
    if (!v9)
    {

      goto LABEL_24;
    }
    uint64_t v11 = *(void *)(a1 + 32);
    +[NSNumber numberWithInteger:a2];
    int v18 = 138412802;
    uint64_t v19 = v11;
    __int16 v20 = 2112;
    id v21 = (id)objc_claimAutoreleasedReturnValue();
    __int16 v22 = 2112;
    id v23 = v5;
    LODWORD(v17) = 32;
    id v12 = (void *)_os_log_send_and_compose_impl();

    if (!v12) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
  if (!v6)
  {
    id v7 = +[SSLogConfig sharedConfig];
  }
  unsigned int v13 = [v7 shouldLog];
  if ([v7 shouldLogToDisk]) {
    int v14 = v13 | 2;
  }
  else {
    int v14 = v13;
  }
  uint64_t v15 = [v7 OSLogObject];
  if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
    v14 &= 2u;
  }
  if (!v14) {
    goto LABEL_22;
  }
  uint64_t v16 = *(void *)(a1 + 32);
  +[NSNumber numberWithInteger:0];
  int v18 = 138412546;
  uint64_t v19 = v16;
  __int16 v20 = 2112;
  id v21 = (id)objc_claimAutoreleasedReturnValue();
  LODWORD(v17) = 22;
  id v12 = (void *)_os_log_send_and_compose_impl();

  if (v12)
  {
LABEL_21:
    uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v18, v17);
    free(v12);
    SSFileLog();
LABEL_22:
  }
LABEL_24:
}

uint64_t sub_1000682BC(void *a1)
{
  id v1 = a1;
  xpc_object_t v2 = [v1 domain];
  unsigned int v3 = [v2 isEqualToString:@"MBErrorDomain"];

  if (v3 && (id v4 = [v1 code], (v5 = (uint64_t (*)(id))ISWeakLinkedSymbolForString()) != 0)) {
    uint64_t v6 = v5(v4);
  }
  else {
    uint64_t v6 = 0;
  }

  return v6;
}

uint64_t sub_100068A2C(uint64_t a1)
{
  [*(id *)(a1 + 32) manifestResponse];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_100068E88(uint64_t a1)
{
  [*(id *)(a1 + 32) response];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_100069144(uint64_t a1, void *a2)
{
  if (![*(id *)(a1 + 32) error] && (objc_msgSend(*(id *)(a1 + 32), "success") & 1) == 0) {
    SSError();
  }
  xpc_dictionary_set_int64(a2, "0", 1011);
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) URLResponse];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_1000695C0(uint64_t a1, void *a2)
{
  if (![*(id *)(a1 + 32) error] && (objc_msgSend(*(id *)(a1 + 32), "success") & 1) == 0) {
    SSError();
  }
  xpc_dictionary_set_int64(a2, "0", 1011);
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) URLResponse];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_1000697B0(uint64_t a1, void *a2)
{
  xpc_dictionary_set_BOOL(a2, "1", (BOOL)[*(id *)(a1 + 32) success]);
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetObject();
}

uint64_t sub_100069B00(uint64_t a1)
{
  [*(id *)(a1 + 32) purchasedItems];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

void sub_100069C5C(uint64_t a1)
{
  objc_opt_class();
  id v4 = (id)SSXPCDictionaryCopyCFObjectWithClass();
  objc_opt_class();
  xpc_object_t v2 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if (v2)
  {
    if (v4) {
      +[ISSoftwareMap applicationForBundleIdentifier:v2 applicationType:v4];
    }
    else {
      +[ISSoftwareMap applicationForBundleIdentifier:v2];
    }
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  SSXPCDictionarySetCFObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
}

void sub_100069E30(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48)];
  id v3 = objc_msgSend(objc_alloc((Class)SSVApplicationCapabilitiesRequest), "initWithXPCEncoding:", xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "1"));
  id v10 = v3;
  if (*(unsigned char *)(a1 + 56))
  {
    id v4 = [v3 bundleID];
    if (v4)
    {
      id v5 = v4;
LABEL_5:
      id v7 = +[LSApplicationProxy applicationProxyForIdentifier:v5];
      goto LABEL_7;
    }
  }
  id v5 = [v2 clientIdentifier];
  if (v5) {
    goto LABEL_5;
  }
  id v7 = 0;
LABEL_7:
  char v8 = [v7 hasMIDBasedSINF] ^ 1;
  xpc_object_t v9 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_BOOL(v9, "1", v8);
  objc_msgSend(objc_msgSend(v2, "outputConnection"), "sendMessage:", v9);
  xpc_release(v9);
}

id sub_10006A0E4(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "URLBag"), "availableStorefrontItemKinds");
  if (result)
  {
    [result allObjects];
    return (id)SSXPCDictionarySetCFObject();
  }
  return result;
}

uint64_t sub_10006A3AC(uint64_t a1)
{
  [*(id *)(a1 + 32) familyCircle];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

void sub_10006A4F0(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  if (int64)
  {
    uint64_t v3 = int64;
    int64_t v4 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
    if ((unint64_t)(v4 - 1) >= 0xC) {
      uint64_t v5 = 100;
    }
    else {
      uint64_t v5 = (v4 - 1);
    }
    CFDataRef v8 = sub_10002D24C(v3, v5);
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = (void *)SSError();
    CFDataRef v8 = 0;
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  SSXPCDictionarySetCFObject();
  SSXPCDictionarySetCFObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
}

uint64_t sub_10006A8CC(uint64_t a1)
{
  [*(id *)(a1 + 32) playInfoResponse];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006ACCC(uint64_t a1)
{
  [*(id *)(a1 + 32) softwareLibraryItems];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006AF4C(uint64_t a1)
{
  [*(id *)(a1 + 32) softwareLibraryItems];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

void sub_10006B0A8(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  objc_msgSend(+[ISSoftwareMap loadedMap](ISSoftwareMap, "loadedMap"), "applications");
  SSXPCDictionarySetCFObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);

  xpc_release(reply);
}

uint64_t sub_10006B354(uint64_t a1)
{
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006B5B4(uint64_t a1, void *a2)
{
  xpc_dictionary_set_BOOL(a2, "1", (BOOL)[*(id *)(a1 + 32) hasDemotedApplications]);
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

void sub_10006B7FC(uint64_t a1, void *a2)
{
  xpc_dictionary_set_BOOL(a2, "1", (BOOL)[*(id *)(a1 + 32) success]);

  xpc_dictionary_set_BOOL(a2, "2", 1);
}

void sub_10006B94C(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  objc_opt_class();
  uint64_t v3 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if (v3)
  {
    int64_t v4 = v3;
    uint64_t v7 = 0;
    CFDataRef v8 = &v7;
    uint64_t v9 = 0x2020000000;
    char v10 = 0;
    if ([v3 isEqualToString:LSSystemApplicationType])
    {
      uint64_t v5 = 1;
    }
    else if ([v4 isEqualToString:LSInternalApplicationType])
    {
      uint64_t v5 = 2;
    }
    else
    {
      uint64_t v5 = 0;
    }
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_10006BAC0;
    v6[3] = &unk_1003A4B88;
    void v6[4] = &v7;
    objc_msgSend(+[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"), "enumerateApplicationsOfType:block:", v5, v6);
    xpc_dictionary_set_BOOL(reply, "0", *((unsigned char *)v8 + 24));

    _Block_object_dispose(&v7, 8);
  }
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
}

void sub_10006BAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10006BAC0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }
}

uint64_t sub_10006C69C(uint64_t a1, void *a2)
{
  xpc_dictionary_set_BOOL(a2, "1", (BOOL)[*(id *)(a1 + 32) success]);
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006C988(uint64_t a1)
{
  [*(id *)(a1 + 32) response];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006CF84(uint64_t a1)
{
  [*(id *)(a1 + 32) URLResponse];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006D2AC(uint64_t a1)
{
  [*(id *)(a1 + 32) redeemResponse];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006D5F0(uint64_t a1, void *a2)
{
  if (![*(id *)(a1 + 32) error] && (objc_msgSend(*(id *)(a1 + 32), "success") & 1) == 0) {
    SSError();
  }
  xpc_dictionary_set_int64(a2, "0", 1011);
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) URLResponse];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006D91C(uint64_t a1)
{
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

void sub_10006DBCC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) URLBag];
  id v2 = [v1 valueForKey:@"storefrontCountryCode"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v3 = [v1 valueForKey:@"advancedSearch"];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      return;
    }
    id v4 = objc_msgSend(objc_alloc((Class)NSURLComponents), "initWithURL:resolvingAgainstBaseURL:", +[NSURL URLWithString:](NSURL, "URLWithString:", v3), 0);
    id v5 = [v4 queryItems];
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v12;
      while (2)
      {
        for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v12 != v8) {
            objc_enumerationMutation(v5);
          }
          char v10 = *(void **)(*((void *)&v11 + 1) + 8 * i);
          if (objc_msgSend(objc_msgSend(v10, "name"), "isEqualToString:", @"cc"))
          {
            id v2 = [v10 value];
            goto LABEL_13;
          }
        }
        id v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
        if (v7) {
          continue;
        }
        break;
      }
    }
    id v2 = 0;
LABEL_13:
  }
  if (v2) {
    SSXPCDictionarySetCFObject();
  }
}

uint64_t sub_10006DFE8(uint64_t a1)
{
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006E3A0(uint64_t a1)
{
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006E678(uint64_t a1)
{
  [*(id *)(a1 + 32) dialogResponse];
  SSXPCDictionarySetCFObject();
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006E910(uint64_t a1)
{
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

uint64_t sub_10006EBB4(uint64_t a1, void *a2)
{
  xpc_dictionary_set_BOOL(a2, "1", (BOOL)[*(id *)(a1 + 32) success]);
  [*(id *)(a1 + 32) error];

  return SSXPCDictionarySetCFObject();
}

void sub_10006EE04(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  id v3 = objc_msgSend(objc_msgSend(+[SSURLSessionManager sharedManager](SSURLSessionManager, "sharedManager"), "_saveHTTPArchiveBufferToDiskDecompressed:", 1), "copy");
  SSXPCDictionarySetObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);

  xpc_release(reply);
}

uint64_t sub_10006EF10(uint64_t a1, xpc_object_t xdict)
{
  xpc_dictionary_set_int64(xdict, "0", 1011);
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

uint64_t sub_10006EFFC(uint64_t a1, xpc_object_t xdict)
{
  xpc_dictionary_set_int64(xdict, "0", 1011);
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

id sub_10006FFC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _postMetricsWithDialogEvent:*(void *)(a1 + 40)];
}

void sub_100072904(uint64_t a1, void *a2)
{
  id v3 = a2;
  HIDWORD(v44) = 0;
  if ([v3 isServerSupplied])
  {
    id v4 = [v3 urlString];
    id v5 = +[NSURL URLWithString:v4];

    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    uint64_t v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      v8 &= 2u;
    }
    if (v8)
    {
      *(_DWORD *)long long v45 = 138543618;
      *(void *)&void v45[4] = objc_opt_class();
      *(_WORD *)&v45[12] = 2114;
      *(void *)&v45[14] = v5;
      id v10 = *(id *)&v45[4];
      LODWORD(v44) = 22;
      long long v11 = (void *)_os_log_send_and_compose_impl();

      if (!v11)
      {
LABEL_13:

        long long v12 = *(void **)(a1 + 32);
        long long v13 = [v12 paymentSheet];
        long long v14 = [v13 designVersion];
        id v15 = [v12 _createImageRefWithURL:v5 adornmentStyle:0 designVersion:v14];

        goto LABEL_54;
      }
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v45, v44, *(_OWORD *)v45, *(void *)&v45[16]);
      free(v11);
      SSFileLog();
    }

    goto LABEL_13;
  }
  id v16 = [v3 ratingType];
  if (!v16)
  {
    id v25 = +[SSLogConfig sharedDaemonConfig];
    if (!v25)
    {
      id v25 = +[SSLogConfig sharedConfig];
    }
    unsigned int v26 = [v25 shouldLog];
    if ([v25 shouldLogToDisk]) {
      int v27 = v26 | 2;
    }
    else {
      int v27 = v26;
    }
    uint64_t v28 = [v25 OSLogObject];
    if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      v27 &= 2u;
    }
    if (v27)
    {
      *(_DWORD *)long long v45 = 138543362;
      *(void *)&void v45[4] = objc_opt_class();
      id v29 = *(id *)&v45[4];
      LODWORD(v44) = 12;
      uint64_t v30 = (void *)_os_log_send_and_compose_impl();

      if (!v30)
      {
LABEL_39:

        goto LABEL_58;
      }
      uint64_t v28 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v30, 4, v45, v44, *(void *)v45, *(void *)&v45[8]);
      free(v30);
      SSFileLog();
    }

    goto LABEL_39;
  }
  id v17 = v16;
  if (v16 == (id)2)
  {
    id v5 = [v3 value];
    int v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18)
    {
      int v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = [v18 shouldLog];
    if ([v18 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    id v21 = [v18 OSLogObject];
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      v20 &= 2u;
    }
    if (v20)
    {
      *(_DWORD *)long long v45 = 138543618;
      *(void *)&void v45[4] = objc_opt_class();
      *(_WORD *)&v45[12] = 2114;
      *(void *)&v45[14] = v5;
      id v22 = *(id *)&v45[4];
      LODWORD(v44) = 22;
      id v23 = (void *)_os_log_send_and_compose_impl();

      if (!v23)
      {
LABEL_27:

        id ImageForResourceName = [*(id *)(a1 + 32) _createRatingImageWithStringValue:v5 assetScale:(char *)&v44 + 4];
LABEL_53:
        id v15 = ImageForResourceName;
        goto LABEL_54;
      }
      id v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, v45, v44, *(void *)v45, *(_OWORD *)&v45[8]);
      free(v23);
      SSFileLog();
    }

    goto LABEL_27;
  }
  id v5 = [v3 localAssetName];
  uint64_t v31 = +[SSLogConfig sharedDaemonConfig];
  if (!v31)
  {
    uint64_t v31 = +[SSLogConfig sharedConfig];
  }
  unsigned int v32 = [v31 shouldLog];
  if ([v31 shouldLogToDisk]) {
    int v33 = v32 | 2;
  }
  else {
    int v33 = v32;
  }
  long long v34 = [v31 OSLogObject];
  if (!os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT)) {
    v33 &= 2u;
  }
  if (v33)
  {
    long long v35 = objc_opt_class();
    id v36 = v35;
    +[NSNumber numberWithInteger:v17];
    *(_DWORD *)long long v45 = 138543874;
    *(void *)&void v45[4] = v35;
    *(void *)&v45[14] = *(_WORD *)&v45[12] = 2114;
    *(_WORD *)&v45[22] = 2114;
    long long v46 = v5;
    LODWORD(v44) = 32;
    uint64_t v37 = (void *)_os_log_send_and_compose_impl();

    if (!v37) {
      goto LABEL_51;
    }
    long long v34 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v37, 4, v45, v44);
    free(v37);
    SSFileLog();
  }

LABEL_51:
  if (v5)
  {
    id ImageForResourceName = (id)ISImageResourceCreateImageForResourceName();
    goto LABEL_53;
  }
  id v15 = 0;
LABEL_54:

  if (v15)
  {
    CFArrayAppendValue(*(CFMutableArrayRef *)(*(void *)(a1 + 32) + 144), v15);
    ++*(void *)(*(void *)(a1 + 32) + 136);
    CGImageRelease((CGImageRef)v15);
    __int16 v38 = *(__CFArray **)(*(void *)(a1 + 32) + 104);
    LODWORD(v39) = HIDWORD(v44);
    id v40 = +[NSNumber numberWithFloat:v39];
    CFArrayAppendValue(v38, v40);

    ++*(void *)(*(void *)(a1 + 32) + 96);
    __int16 v41 = *(__CFArray **)(*(void *)(a1 + 32) + 160);
    unsigned int v42 = [v3 tint];
    uint64_t v43 = (const void **)&kCFBooleanTrue;
    if (!v42) {
      uint64_t v43 = (const void **)&kCFBooleanFalse;
    }
    CFArrayAppendValue(v41, *v43);
    ++*(void *)(*(void *)(a1 + 32) + 152);
  }
LABEL_58:
}

void sub_100073010(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) paymentSheet];
  id v5 = [v4 designVersion];
  unsigned int v6 = [v5 isEqualToNumber:AMSPaymentSheetDesignVersion_2_0];

  uint64_t v7 = [v3 valueForKey:@"value"];
  int v8 = (void *)v7;
  if (!v6)
  {
    id v9 = [v3 valueForKey:@"header"];
    uint64_t v12 = [v3 valueForKey:@"headerIcon"];
    long long v13 = (void *)v12;
    if (v9 && v8)
    {
      id v14 = objc_alloc_init(*(Class *)(a1 + 48));
      [v14 setTitle:v9];
      [v14 setLabel:v8];
      [*(id *)(a1 + 40) addObject:v14];
LABEL_24:

LABEL_25:
      goto LABEL_26;
    }
    if (!v12 || !v8) {
      goto LABEL_25;
    }
    id v14 = objc_alloc_init(*(Class *)(a1 + 48));
    id v15 = [v13 string];
    id v16 = +[NSURL URLWithString:v15];

    id v17 = *(void **)(a1 + 32);
    int v18 = [v17 paymentSheet];
    unsigned int v19 = [v18 designVersion];
    id v20 = [v17 _createImageRefWithURL:v16 adornmentStyle:0 designVersion:v19];

    if (v20)
    {
      CFArrayAppendValue(*(CFMutableArrayRef *)(*(void *)(a1 + 32) + 128), v20);
      objc_msgSend(v14, "setImage:", CFArrayGetValueAtIndex(*(CFArrayRef *)(*(void *)(a1 + 32) + 128), ++*(void *)(*(void *)(a1 + 32) + 120)));
      CGImageRelease((CGImageRef)v20);
LABEL_23:
      id v26 = [objc_alloc((Class)NSAttributedString) initWithString:&stru_1003B9B00];
      [v14 setTitle:v26];

      [v14 setLabel:v8];
      [*(id *)(a1 + 40) addObject:v14];

      goto LABEL_24;
    }
    id v21 = +[SSLogConfig sharedDaemonConfig];
    if (!v21)
    {
      id v21 = +[SSLogConfig sharedConfig];
    }
    unsigned int v22 = [v21 shouldLog];
    if ([v21 shouldLogToDisk]) {
      int v23 = v22 | 2;
    }
    else {
      int v23 = v22;
    }
    uint64_t v24 = [v21 OSLogObject];
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      v23 &= 2u;
    }
    if (v23)
    {
      int v29 = 138543618;
      id v30 = (id)objc_opt_class();
      __int16 v31 = 2114;
      unsigned int v32 = v16;
      id v28 = v30;
      LODWORD(v27) = 22;
      id v25 = (void *)_os_log_send_and_compose_impl();

      if (!v25)
      {
LABEL_22:

        goto LABEL_23;
      }
      uint64_t v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v29, v27);
      free(v25);
      SSFileLog();
    }

    goto LABEL_22;
  }
  if (v7)
  {
    id v9 = objc_alloc_init(*(Class *)(a1 + 48));
    id v10 = [objc_alloc((Class)NSAttributedString) initWithAttributedString:v8];
    [v9 setLabel:v10];

    id v11 = [objc_alloc((Class)NSAttributedString) initWithString:&stru_1003B9B00];
    [v9 setTitle:v11];

    [*(id *)(a1 + 40) addObject:v9];
LABEL_26:
  }
}

void sub_100073420(uint64_t a1, void *a2)
{
  id v3 = [a2 objectForKeyedSubscript:@"value"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_1000734F0;
    v6[3] = &unk_1003A4C90;
    long long v5 = *(_OWORD *)(a1 + 32);
    id v4 = (id)v5;
    long long v7 = v5;
    [v3 enumerateObjectsUsingBlock:v6];
  }
}

void sub_1000734F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 objectForKeyedSubscript:@"value"];
  uint64_t v5 = [v3 objectForKeyedSubscript:@"header"];
  unsigned int v6 = (void *)v5;
  if (v4 && v5)
  {
    v18[0] = 0;
    v18[1] = v18;
    v18[2] = 0x2020000000;
    v18[3] = 0;
    id v7 = [v4 length];
    int v8 = [v4 string];
    id v9 = [v8 componentsSeparatedByString:@"\n"];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100073684;
    v10[3] = &unk_1003A4C68;
    uint64_t v15 = *(void *)(a1 + 40);
    id v11 = v6;
    id v14 = v18;
    id v12 = v4;
    uint64_t v16 = 0;
    id v17 = v7;
    id v13 = *(id *)(a1 + 32);
    [v9 enumerateObjectsUsingBlock:v10];

    _Block_object_dispose(v18, 8);
  }
}

void sub_10007366C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100073684(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  unsigned int v6 = *(void **)(a1 + 64);
  id v7 = +[NSDecimalNumber decimalNumberWithString:@"0.0"];
  int v8 = [v6 summaryItemWithLabel:v5 amount:v7 type:0];

  [v8 setLocalizedAmount:&stru_1003B9B00];
  if (a3)
  {
    [v8 setLocalizedTitle:&stru_1003B9B00];
  }
  else
  {
    id v9 = [*(id *)(a1 + 32) string];
    [v8 setLocalizedTitle:v9];
  }
  [v8 setUseDarkColor:1];
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  id v11 = [v5 length];
  [v8 setUseLargeFont:0];
  id v12 = *(void **)(a1 + 40);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100073838;
  v16[3] = &unk_1003A4C40;
  uint64_t v18 = v10;
  id v19 = v11;
  id v17 = v8;
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  id v15 = v8;
  objc_msgSend(v12, "enumerateAttribute:inRange:options:usingBlock:", @"useLargeSize", v13, v14, 0, v16);
  [*(id *)(a1 + 48) addObject:v15];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) += (char *)[v5 length] + 1;
}

void sub_100073838(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v9 = a2;
  if (a3 == *(void *)(a1 + 40) && a4 == *(void *)(a1 + 48))
  {
    id v10 = v9;
    [*(id *)(a1 + 32) setUseLargeFont:1];
    id v9 = v10;
    *a5 = 1;
  }
}

void sub_1000738BC(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 40);
  id v4 = a2;
  id v5 = [v4 label];
  unsigned int v6 = +[NSDecimalNumber zero];
  id v8 = [v3 summaryItemWithLabel:v5 amount:v6];

  id v7 = [v4 price];

  [v8 setLocalizedAmount:v7];
  [v8 setUseDarkColor:1];
  [*(id *)(a1 + 32) addObject:v8];
}

void sub_100073F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100073F40(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = *(NSObject **)(*(void *)(a1 + 32) + 184);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100073FF0;
  v7[3] = &unk_1003A3518;
  char v9 = a2;
  id v8 = WeakRetained;
  id v6 = WeakRetained;
  dispatch_async(v5, v7);
}

void sub_100073FF0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40))
  {
    id v2 = SSError();
    id v8 = +[SSLogConfig sharedDaemonConfig];
    if (!v8)
    {
      id v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v9 = [v8 shouldLog];
    if ([v8 shouldLogToDisk]) {
      int v10 = v9 | 2;
    }
    else {
      int v10 = v9;
    }
    id v11 = [v8 OSLogObject];
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      v10 &= 2u;
    }
    if (v10)
    {
      LODWORD(v15) = 138543362;
      *(void *)((char *)&v15 + 4) = objc_opt_class();
      id v12 = *(id *)((char *)&v15 + 4);
      LODWORD(v14) = 12;
      uint64_t v13 = (void *)_os_log_send_and_compose_impl();

      if (!v13)
      {
LABEL_24:

        [*(id *)(a1 + 32) _completeWithSuccess:0 error:v2];
        goto LABEL_25;
      }
      id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v15, v14, v15);
      free(v13);
      SSFileLog();
    }

    goto LABEL_24;
  }
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_12;
  }
  LODWORD(v15) = 138543362;
  *(void *)((char *)&v15 + 4) = objc_opt_class();
  id v6 = *(id *)((char *)&v15 + 4);
  LODWORD(v14) = 12;
  id v7 = (void *)_os_log_send_and_compose_impl();

  if (v7)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v15, v14, v15);
    free(v7);
    SSFileLog();
LABEL_12:
  }
LABEL_25:
}

void sub_100074F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100074F60(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4)
    {
      int v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    id v7 = [v4 OSLogObject];
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      v6 &= 2u;
    }
    if (v6)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)id v12 = 138543618;
      *(void *)&void v12[4] = objc_opt_class();
      *(_WORD *)&v12[12] = 2114;
      *(void *)&v12[14] = v3;
      id v9 = *(id *)&v12[4];
      LODWORD(v11) = 22;
      int v10 = (void *)_os_log_send_and_compose_impl();

      if (!v10)
      {
LABEL_13:

        goto LABEL_14;
      }
      id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, v12, v11, *(_OWORD *)v12, *(void *)&v12[16]);
      free(v10);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
}

void sub_100075110(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4)
    {
      int v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    id v7 = [v4 OSLogObject];
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      v6 &= 2u;
    }
    if (v6)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)id v12 = 138543618;
      *(void *)&void v12[4] = objc_opt_class();
      *(_WORD *)&v12[12] = 2114;
      *(void *)&v12[14] = v3;
      id v9 = *(id *)&v12[4];
      LODWORD(v11) = 22;
      int v10 = (void *)_os_log_send_and_compose_impl();

      if (!v10)
      {
LABEL_13:

        goto LABEL_14;
      }
      id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, v12, v11, *(_OWORD *)v12, *(void *)&v12[16]);
      free(v10);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
}

void sub_10007798C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v2 + 172))
  {
    *(unsigned char *)(v2 + 168) = 1;
    id v10 = [*(id *)(a1 + 40) copy];
    uint64_t v11 = *(void *)(a1 + 32);
    id v12 = *(void **)(v11 + 224);
    *(void *)(v11 + 224) = v10;

    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3)
    {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    long long v15 = [v3 OSLogObject];
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      v14 &= 2u;
    }
    if (v14)
    {
      LODWORD(v20) = 138543362;
      *(void *)((char *)&v20 + 4) = objc_opt_class();
      id v16 = *(id *)((char *)&v20 + 4);
      LODWORD(v19) = 12;
      id v17 = (void *)_os_log_send_and_compose_impl();

      if (!v17)
      {
LABEL_25:
        uint64_t v9 = 0;
        goto LABEL_26;
      }
      long long v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v20, v19, v20);
      free(v17);
      SSFileLog();
    }

    goto LABEL_25;
  }
  *(unsigned char *)(v2 + 168) = 0;
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  int v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_12;
  }
  LODWORD(v20) = 138543362;
  *(void *)((char *)&v20 + 4) = objc_opt_class();
  id v7 = *(id *)((char *)&v20 + 4);
  LODWORD(v19) = 12;
  id v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    int v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v20, v19, v20);
    free(v8);
    SSFileLog();
LABEL_12:
  }
  uint64_t v9 = 1;
LABEL_26:

  id v18 = [objc_alloc((Class)ISWeakLinkedClassForString()) initWithStatus:v9 errors:&__NSArray0__struct];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_100077EB8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) error];
  objc_msgSend(*(id *)(a1 + 32), "_completeWithSuccess:error:", v2 == 0);
}

uint64_t sub_1000797E0(id *a1, void *a2)
{
  id v18 = a2;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v3 = a1[4];
  id v4 = [v3 countByEnumeratingWithState:&v19 objects:v24 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        uint64_t v9 = [v8 valueForProperty:@"kind"];
        int IsSoftwareKind = SSDownloadKindIsSoftwareKind();

        if (IsSoftwareKind)
        {
          CFUUIDRef v11 = CFUUIDCreate(0);
          uint64_t v12 = *(_OWORD *)&CFUUIDGetUUIDBytes(v11);
          CFRelease(v11);
          id v13 = a1[5];
          int v14 = +[NSNumber numberWithLongLong:v12];
          [v13 addObject:v14];

          [v8 setDatabaseID:v12];
          [a1[6] addObject:v8];
        }
        else
        {
          int v23 = v8;
          long long v15 = +[NSArray arrayWithObjects:&v23 count:1];
          id v16 = [v18 addDownloads:v15];

          if (v16) {
            [a1[5] unionOrderedSet:v16];
          }
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v19 objects:v24 count:16];
    }
    while (v5);
  }

  return 1;
}

void sub_10007B304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007B340(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10007B350(uint64_t a1)
{
}

void sub_10007B358(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v4 = [v10 valueForProperty:@"asset_type"];
  if ([v4 isEqualToString:SSDownloadAssetTypeMedia])
  {
    uint64_t v5 = *(void *)(a1 + 48);
  }
  else
  {
    if (![v4 isEqualToString:SSDownloadAssetTypeDeltaPackage])
    {
      [*(id *)(a1 + 32) addObject:v10];
      goto LABEL_8;
    }
    uint64_t v5 = *(void *)(a1 + 56);
  }
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v8 = *(void *)(v6 + 40);
  id v7 = (id *)(v6 + 40);
  if (!v8) {
    objc_storeStrong(v7, a2);
  }
LABEL_8:
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v9 = [*(id *)(a1 + 40) downloadKind];
    [v10 setDownloadKind:v9];
  }
}

id sub_10007C510(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = objc_alloc_init((Class)NSFileManager);
  uint64_t v5 = +[PromotedIAPDatabaseSchema databasePath_11_0];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = [&off_1003C9F50 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v14;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(&off_1003C9F50);
        }
        id v10 = [v5 stringByAppendingString:*(void *)(*((void *)&v13 + 1) + 8 * (void)v9)];
        [v4 removeItemAtPath:v10 error:0];

        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [&off_1003C9F50 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v7);
  }
  if ([v3 executeSQL:@"PRAGMA legacy_file_format = 0;"]
    && [v3 executeSQL:@"CREATE TABLE IF NOT EXISTS promoted_iaps_visibility_table (product_id TEXT, bundle_id TEXT, visibility INTEGER, pid INTEGER PRIMARY KEY);"]
    && [v3 executeSQL:@"CREATE TABLE IF NOT EXISTS promoted_iaps_order_table (product_id TEXT, bundle_id TEXT, iap_order INTEGER, pid INTEGER PRIMARY KEY);"])
  {
    [v3 executeSQL:@"PRAGMA journal_mode = WAL;"];
    *a2 = 11001;
    id v11 = [v3 setUserVersion:11001];
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

void sub_10007C72C(id a1)
{
  id v4 = [(id)CPSharedResourcesDirectory() stringByAppendingPathComponent:@"Library"];
  id v1 = [v4 stringByAppendingPathComponent:@"com.apple.itunesstored"];
  uint64_t v2 = [v1 stringByAppendingPathComponent:@"promoted_iaps.sqlitedb"];
  id v3 = (void *)qword_100401CF0;
  qword_100401CF0 = v2;
}

void sub_10007DAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a5)
  {
    uint64_t v8 = (void *)BOMCopierUserData();
    [v8 _copierFinishedFileWithPath:a2 size:a4];
  }
}

uint64_t sub_10007DB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return 0;
}

id sub_10007DB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)BOMCopierUserData();

  return [v5 _copierUpdatedFileWithPath:a2 size:a3];
}

uint64_t sub_10007DBA4(uint64_t a1, uint64_t a2)
{
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  uint64_t result = os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT);
  if (!result) {
    v5 &= 2u;
  }
  if (v5)
  {
    BOMCopierUserData();
    int v9 = 138412546;
    uint64_t v10 = objc_opt_class();
    __int16 v11 = 2080;
    uint64_t v12 = a2;
    LODWORD(v8) = 22;
    uint64_t result = _os_log_send_and_compose_impl();
    if (result)
    {
      id v7 = (void *)result;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", result, 4, &v9, v8);
      free(v7);
      return SSFileLog();
    }
  }
  return result;
}

uint64_t sub_10007DD10(uint64_t a1, uint64_t a2, int a3)
{
  id v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5) {
    id v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  uint64_t result = os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_DEFAULT);
  if (!result) {
    v7 &= 2u;
  }
  if (v7)
  {
    BOMCopierUserData();
    int v11 = 138412802;
    uint64_t v12 = objc_opt_class();
    __int16 v13 = 1024;
    int v14 = a3;
    __int16 v15 = 2080;
    uint64_t v16 = a2;
    LODWORD(v10) = 28;
    uint64_t result = _os_log_send_and_compose_impl();
    if (result)
    {
      int v9 = (void *)result;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", result, 4, &v11, v10);
      free(v9);
      return SSFileLog();
    }
  }
  return result;
}

uint64_t sub_10007DE8C(uint64_t a1, uint64_t a2)
{
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  if (!os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v5 &= 2u;
  }
  if (v5)
  {
    BOMCopierUserData();
    int v10 = 138412546;
    uint64_t v11 = objc_opt_class();
    __int16 v12 = 2080;
    uint64_t v13 = a2;
    LODWORD(v9) = 22;
    uint64_t v6 = _os_log_send_and_compose_impl();
    if (v6)
    {
      int v7 = (void *)v6;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v6, 4, &v10, v9);
      free(v7);
      SSFileLog();
    }
  }
  return 0;
}

uint64_t sub_10007DFFC(uint64_t a1, uint64_t a2, int a3)
{
  id v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5) {
    id v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v7 &= 2u;
  }
  if (v7)
  {
    BOMCopierUserData();
    int v12 = 138412802;
    uint64_t v13 = objc_opt_class();
    __int16 v14 = 1024;
    int v15 = a3;
    __int16 v16 = 2080;
    uint64_t v17 = a2;
    LODWORD(v11) = 28;
    uint64_t v8 = _os_log_send_and_compose_impl();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v12, v11);
      free(v9);
      SSFileLog();
    }
  }
  return 2;
}

uint64_t sub_10007EEB4(uint64_t a1, void *a2)
{
  id v7 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v4 = v7;
  if (isKindOfClass)
  {
    id v5 = v7;
    if ([v5 installType] == (id)7) {
      [*(id *)(a1 + 32) addObject:v5];
    }

    id v4 = v7;
  }

  return _objc_release_x1(isKindOfClass, v4);
}

void sub_10007EF3C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [*(id *)(a1 + 32) accountWithUniqueIdentifier:v5];
  uint64_t v8 = [[RestoreDownloadItemsOperation alloc] initWithDownloadItems:v6 account:v7];
  [(RestoreDownloadItemsOperation *)v8 setDelegate:*(void *)(a1 + 40)];
  [(RestoreDownloadItemsOperation *)v8 setShouldShowTermsAndConditionsDialog:0];
  uint64_t v9 = &syslog_ptr;
  int v10 = +[SSLogConfig sharedDaemonConfig];
  if (!v10)
  {
    int v10 = +[SSLogConfig sharedConfig];
  }
  unsigned int v11 = [v10 shouldLog];
  if ([v10 shouldLogToDisk]) {
    int v12 = v11 | 2;
  }
  else {
    int v12 = v11;
  }
  uint64_t v13 = [v10 OSLogObject];
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
    int v14 = v12;
  }
  else {
    int v14 = v12 & 2;
  }
  if (v14)
  {
    int v15 = objc_opt_class();
    id v16 = v15;
    int v33 = 138412802;
    long long v34 = v15;
    uint64_t v9 = &syslog_ptr;
    __int16 v35 = 2048;
    id v36 = [v6 count];
    __int16 v37 = 2112;
    id v38 = v5;
    LODWORD(v30) = 32;
    int v29 = &v33;
    uint64_t v17 = (void *)_os_log_send_and_compose_impl();

    if (v17)
    {
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v33, v30);
      id v18 = (int *)objc_claimAutoreleasedReturnValue();
      free(v17);
      int v29 = v18;
      SSFileLog();
    }
  }
  else
  {
  }
  long long v19 = *(void **)(a1 + 40);
  id v32 = 0;
  unsigned __int8 v20 = [v19 runSubOperation:v8 returningError:&v32];
  id v21 = v32;
  if ((v20 & 1) == 0)
  {
    long long v22 = [v9[405] sharedDaemonConfig];
    if (!v22)
    {
      long long v22 = [v9[405] sharedConfig];
    }
    unsigned int v23 = objc_msgSend(v22, "shouldLog", v29);
    if ([v22 shouldLogToDisk]) {
      v23 |= 2u;
    }
    uint64_t v24 = [v22 OSLogObject];
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
      int v25 = v23;
    }
    else {
      int v25 = v23 & 2;
    }
    if (v25)
    {
      id v26 = objc_opt_class();
      int v33 = 138412802;
      long long v34 = v26;
      __int16 v35 = 2112;
      id v36 = v5;
      __int16 v37 = 2112;
      id v38 = v21;
      id v27 = v26;
      LODWORD(v30) = 32;
      int v29 = &v33;
      id v28 = (void *)_os_log_send_and_compose_impl();

      if (!v28)
      {
LABEL_25:

        goto LABEL_26;
      }
      uint64_t v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v33, v30);
      free(v28);
      int v29 = (int *)v24;
      SSFileLog();
    }

    goto LABEL_25;
  }
LABEL_26:
  -[RestoreDownloadItemsOperation setDelegate:](v8, "setDelegate:", 0, v29);
}

void sub_10007F610(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(v3, "itemIdentifier"));
  [*(id *)(a1 + 32) setObject:v3 forKey:v4];
}

uint64_t sub_10007F69C(uint64_t a1, void *a2)
{
  id v37 = a2;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  id obj = *(id *)(a1 + 32);
  id v40 = [obj countByEnumeratingWithState:&v41 objects:v51 count:16];
  if (v40)
  {
    uint64_t v39 = *(void *)v42;
    uint64_t v34 = a1;
    do
    {
      id v3 = 0;
      do
      {
        if (*(void *)v42 != v39) {
          objc_enumerationMutation(obj);
        }
        id v4 = *(void **)(*((void *)&v41 + 1) + 8 * (void)v3);
        id v5 = objc_msgSend(v4, "storeItemID", v30);
        id v6 = [*(id *)(a1 + 40) objectForKey:v5];
        if (v6)
        {
          id v7 = [[Download alloc] initWithStoreDownload:v6];
          uint64_t v8 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", v7, 0);
          uint64_t v9 = [v37 addDownloads:v8];
          if ([v9 count] == (id)1)
          {
            id v38 = v4;
            id v36 = v5;
            int v10 = [v9 firstObject];
            id v35 = [v10 longLongValue];

            unsigned int v11 = +[SSLogConfig sharedDaemonConfig];
            if (!v11)
            {
              unsigned int v11 = +[SSLogConfig sharedConfig];
            }
            unsigned int v12 = [v11 shouldLog];
            if ([v11 shouldLogToDisk]) {
              v12 |= 2u;
            }
            uint64_t v13 = [v11 OSLogObject];
            if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
              v12 &= 2u;
            }
            if (v12)
            {
              int v14 = objc_opt_class();
              id v32 = v14;
              int v15 = [v38 bundleID];
              int v45 = 138412802;
              long long v46 = v14;
              __int16 v47 = 2048;
              id v16 = v35;
              id v48 = v35;
              __int16 v49 = 2112;
              long long v50 = v15;
              LODWORD(v31) = 32;
              uint64_t v30 = &v45;
              uint64_t v17 = (void *)_os_log_send_and_compose_impl();

              if (v17)
              {
                uint64_t v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v45, v31);
                free(v17);
                uint64_t v30 = (int *)v13;
                SSFileLog();
                goto LABEL_27;
              }
            }
            else
            {
              id v16 = v35;
LABEL_27:
            }
            int v25 = [v38 downloadKind];
            id v26 = +[ScratchManager directoryPathForDownloadID:v16 kind:v25 createIfNeeded:1];
            id v27 = [v26 stringByAppendingPathComponent:@"iTunesMetadata.plist"];

            [v6 writeToFile:v27 options:0 error:0];
            a1 = v34;
            id v5 = v36;
          }

          goto LABEL_30;
        }
        id v7 = +[SSLogConfig sharedDaemonConfig];
        if (!v7)
        {
          id v7 = +[SSLogConfig sharedConfig];
        }
        unsigned int v18 = [(Download *)v7 shouldLog];
        if ([(Download *)v7 shouldLogToDisk]) {
          v18 |= 2u;
        }
        uint64_t v8 = [(Download *)v7 OSLogObject];
        if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
          v18 &= 2u;
        }
        if (!v18) {
          goto LABEL_30;
        }
        long long v19 = objc_opt_class();
        uint64_t v20 = a1;
        id v21 = v19;
        long long v22 = [v4 bundleID];
        unsigned int v23 = [*(id *)(v20 + 56) errorForItemIdentifier:v5];
        int v45 = 138412802;
        long long v46 = v19;
        __int16 v47 = 2112;
        id v48 = v22;
        __int16 v49 = 2112;
        long long v50 = v23;
        LODWORD(v31) = 32;
        uint64_t v30 = &v45;
        uint64_t v24 = (void *)_os_log_send_and_compose_impl();

        if (v24)
        {
          uint64_t v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v45, v31);
          free(v24);
          uint64_t v30 = (int *)v8;
          SSFileLog();
          a1 = v34;
LABEL_30:

          goto LABEL_31;
        }
        a1 = v34;
LABEL_31:

        id v3 = (char *)v3 + 1;
      }
      while (v40 != v3);
      id v28 = [obj countByEnumeratingWithState:&v41 objects:v51 count:16];
      id v40 = v28;
    }
    while (v28);
  }

  return 1;
}

void sub_10007FD44(id a1)
{
}

intptr_t sub_1000806C0(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100080FE8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  unsigned int v4 = [v2 shouldLogToDisk];
  id v5 = [v2 OSLogObject];
  if (v4) {
    v3 |= 2u;
  }
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v3 &= 2u;
  }
  if (v3)
  {
    uint64_t v6 = objc_opt_class();
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 112);
    *(_DWORD *)int v14 = 138412546;
    *(void *)&v14[4] = v6;
    __int16 v15 = 2112;
    uint64_t v16 = v7;
    LODWORD(v13) = 22;
    unsigned int v12 = (NSString *)v14;
    uint64_t v8 = _os_log_send_and_compose_impl();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v14, v13);
      free(v9);
      unsigned int v12 = v10;
      SSFileLog();
    }
  }
  *(void *)int v14 = 0;
  id v11 = objc_msgSend(*(id *)(a1 + 32), "_decryptWithSession:error:", *(void *)(a1 + 40), v14, v12);
  [*(id *)(a1 + 32) setError:*(void *)v14];
  [*(id *)(a1 + 32) setSuccess:v11];
}

void sub_1000811A4(_Unwind_Exception *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x10008115CLL);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1000814D4()
{
}

void sub_1000816B0(uint64_t a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x1000816D0);
  }
  JUMPOUT(0x100081504);
}

void sub_100088230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100088254(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100088264(uint64_t a1)
{
}

void sub_10008826C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000884A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1000884CC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v4 = ISWeakLinkedStringConstantForString();
  if (v5 && (ISErrorIsEqual() & 1) == 0)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t sub_100088690(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_100088848(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(a1 + 32) + 49) = a2;
  return [*(id *)(a1 + 40) finishWithResult:&__kCFBooleanTrue];
}

void sub_10008C754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008C780(uint64_t a1)
{
  [*(id *)(a1 + 32) _updatePushEnabledState];
  id v2 = +[NSThread beginPrivateManagedContextSession];
  [*(id *)(a1 + 32) _loadConnectionsInContext:v2];
  [*(id *)(a1 + 32) _postTokensIfNecessaryInContext:v2];
  +[NSThread endPrivateManagedContextSession];
}

void sub_10008C7F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _deviceNameChanged];
}

uint64_t sub_10008CABC()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = qword_100401D00;
  qword_100401D00 = (uint64_t)v0;

  return _objc_release_x1(v0, v1);
}

void sub_10008CC48(uint64_t a1)
{
  id v2 = +[NSThread beginPrivateManagedContextSession];
  unsigned int v3 = [*(id *)(a1 + 32) objectForKey:SSRemoteNotificationKeyClientIdentifier];
  id v4 = [*(id *)(a1 + 40) _clientForIdentifier:v3 createIfNeeded:0 inContext:v2];
  uint64_t v5 = +[SSLogConfig sharedDaemonConfig];
  uint64_t v6 = (void *)v5;
  if (v4)
  {
    if (!v5)
    {
      uint64_t v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    uint64_t v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      int v34 = 138412546;
      id v35 = (id)objc_opt_class();
      __int16 v36 = 2112;
      id v37 = v3;
      id v10 = v35;
      LODWORD(v28) = 22;
      id v27 = &v34;
      id v11 = (void *)_os_log_send_and_compose_impl();

      if (!v11) {
        goto LABEL_13;
      }
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v34, v28);
      free(v11);
      id v27 = (int *)v9;
      SSFileLog();
    }

LABEL_13:
    [*(id *)(a1 + 40) _addNotificationWithUserInfo:*(void *)(a1 + 32) client:v4 context:v2];
    sub_10004BBA0(v2);
    uint64_t v32 = FBSOpenApplicationOptionKeyPayloadOptions;
    uint64_t v30 = SSApplicationLaunchOptionsHasRemoteNotificationsKey;
    uint64_t v31 = &__kCFBooleanTrue;
    unsigned int v12 = +[NSDictionary dictionaryWithObjects:&v31 forKeys:&v30 count:1];
    int v33 = v12;
    uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];

    uint64_t v13 = +[SpringBoardUtility sharedInstance];
    id v29 = 0;
    unsigned __int8 v14 = [v13 launchApplicationWithIdentifier:v3 options:v6 error:&v29];
    __int16 v15 = v29;

    if (v14)
    {
LABEL_26:
      notify_post(kSSNotificationReceivedPushNotification);
      goto LABEL_27;
    }
    uint64_t v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16)
    {
      uint64_t v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = objc_msgSend(v16, "shouldLog", v27);
    if ([v16 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    long long v19 = [v16 OSLogObject];
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      v18 &= 2u;
    }
    if (v18)
    {
      uint64_t v20 = objc_opt_class();
      int v34 = 138412546;
      id v35 = v20;
      __int16 v36 = 2112;
      id v37 = v15;
      id v21 = v20;
      LODWORD(v28) = 22;
      long long v22 = (void *)_os_log_send_and_compose_impl();

      if (!v22)
      {
LABEL_25:

        goto LABEL_26;
      }
      long long v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, &v34, v28);
      free(v22);
      SSFileLog();
    }

    goto LABEL_25;
  }
  if (!v5)
  {
    uint64_t v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v23 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v24 = v23 | 2;
  }
  else {
    int v24 = v23;
  }
  __int16 v15 = [v6 OSLogObject];
  if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
    v24 &= 2u;
  }
  if (v24)
  {
    int v34 = 138412546;
    id v35 = (id)objc_opt_class();
    __int16 v36 = 2112;
    id v37 = v3;
    id v25 = v35;
    LODWORD(v28) = 22;
    id v26 = (void *)_os_log_send_and_compose_impl();

    if (!v26) {
      goto LABEL_28;
    }
    __int16 v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v26, 4, &v34, v28);
    free(v26);
    SSFileLog();
  }
LABEL_27:

LABEL_28:
  +[NSThread endPrivateManagedContextSession];
}

void sub_10008D1D4(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  uint64_t v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  LODWORD(v10) = 138543362;
  *(void *)((char *)&v10 + 4) = objc_opt_class();
  id v6 = *(id *)((char *)&v10 + 4);
  LODWORD(v9) = 12;
  unsigned int v7 = (void *)_os_log_send_and_compose_impl();

  if (v7)
  {
    uint64_t v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v10, v9, v10);
    free(v7);
    SSFileLog();
LABEL_11:
  }
  int v8 = +[NSThread beginPrivateManagedContextSession];
  [*(id *)(a1 + 32) _postTokensInContext:v8 force:1];
  +[NSThread endPrivateManagedContextSession];
}

void sub_10008D468(uint64_t a1)
{
  id v2 = &syslog_ptr;
  unsigned int v3 = +[NSThread beginPrivateManagedContextSession];
  int v4 = [*(id *)(a1 + 32) _environmentForName:*(void *)(a1 + 40) createIfNeeded:1 inContext:v3];
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = [v4 lastAccountIdentifier];
    unsigned int v7 = [v6 isEqualToNumber:*(void *)(a1 + 48)];

    if (v7)
    {
      int v8 = *(void **)(a1 + 56);
      if (v8) {
        dispatch_async(*(dispatch_queue_t *)(*(void *)(a1 + 32) + 40), v8);
      }
      goto LABEL_27;
    }
    char v20 = 1;
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v9 = *(id *)(*(void *)(a1 + 32) + 72);
    id v10 = [v9 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v26;
      while (2)
      {
        for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v26 != v12) {
            objc_enumerationMutation(v9);
          }
          unsigned __int8 v14 = *(void **)(*((void *)&v25 + 1) + 8 * i);
          __int16 v15 = objc_msgSend(v14, "environmentName", (void)v25);
          unsigned int v16 = [v15 isEqualToString:*(void *)(a1 + 40)];

          if (v16)
          {
            unsigned int v17 = *(void **)(a1 + 48);
            int v18 = [v14 authenticationContext];
            long long v19 = [v18 requiredUniqueIdentifier];
            LOBYTE(v17) = [v17 isEqualToNumber:v19];

            if (v17)
            {
              char v20 = 0;
              goto LABEL_17;
            }
          }
        }
        id v11 = [v9 countByEnumeratingWithState:&v25 objects:v29 count:16];
        if (v11) {
          continue;
        }
        break;
      }
      char v20 = 1;
LABEL_17:
      id v2 = &syslog_ptr;
    }
    else
    {
      char v20 = 1;
    }
  }
  if (*(void *)(a1 + 56))
  {
    if (!*(void *)(*(void *)(a1 + 32) + 64))
    {
      id v21 = objc_alloc_init((Class)NSMutableArray);
      uint64_t v22 = *(void *)(a1 + 32);
      unsigned int v23 = *(void **)(v22 + 64);
      *(void *)(v22 + 64) = v21;
    }
    int v24 = objc_alloc_init(PushNotificationRegisterBlock);
    [(PushNotificationRegisterBlock *)v24 setAccountIdentifier:*(void *)(a1 + 48)];
    [(PushNotificationRegisterBlock *)v24 setBlock:*(void *)(a1 + 56)];
    [(PushNotificationRegisterBlock *)v24 setEnvironmentName:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 64) addObject:v24];
  }
  if ((v20 & 1) != 0 || [*(id *)(a1 + 32) _shouldAggressivelySendToken]) {
    objc_msgSend(*(id *)(a1 + 32), "_postTokenForEnvironment:", v5, (void)v25);
  }
LABEL_27:
  objc_msgSend(v2[348], "endManagedContextSession", (void)v25);
}

void sub_10008D860(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v21 = objc_alloc_init((Class)NSMutableArray);
  int v4 = +[NSThread beginPrivateManagedContextSession];
  uint64_t v19 = a1;
  char v20 = v3;
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [v3 clientIdentifier];
  unsigned int v7 = [v5 _clientForIdentifier:v6 createIfNeeded:0 inContext:v4];

  int v18 = v7;
  int v8 = [v7 notifications];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v9 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        unsigned __int8 v14 = [v13 userInfo];
        __int16 v15 = +[NSPropertyListSerialization propertyListWithData:v14 options:0 format:0 error:0];

        if (v15)
        {
          id v16 = [objc_alloc((Class)SSRemoteNotification) initWithNotificationUserInfo:v15];
          if (v16) {
            [v21 addObject:v16];
          }
        }
        [v4 deleteObject:v13];
      }
      id v10 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v10);
  }
  sub_10004BBA0(v4);
  +[NSThread endPrivateManagedContextSession];
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v19 + 40));
  SSXPCDictionarySetObject();
  xpc_connection_send_message(*(xpc_connection_t *)(v19 + 48), reply);
}

void sub_10008DB6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[NSThread beginPrivateManagedContextSession];
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [v3 clientIdentifier];

  unsigned int v7 = [v5 _clientForIdentifier:v6 createIfNeeded:1 inContext:v4];

  int v8 = +[SSLogConfig sharedDaemonConfig];
  if (!v8)
  {
    int v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  uint64_t v11 = [v8 OSLogObject];
  if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    v10 &= 2u;
  }
  if (!v10) {
    goto LABEL_11;
  }
  *(_DWORD *)id v16 = 138412546;
  *(void *)&void v16[4] = objc_opt_class();
  *(_WORD *)&v16[12] = 2112;
  *(void *)&v16[14] = v7;
  id v12 = *(id *)&v16[4];
  LODWORD(v15) = 22;
  uint64_t v13 = (void *)_os_log_send_and_compose_impl();

  if (v13)
  {
    uint64_t v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, v16, v15, *(_OWORD *)v16, *(void *)&v16[16]);
    free(v13);
    SSFileLog();
LABEL_11:
  }
  [*(id *)(a1 + 32) _reloadActiveEnvironmentInContext:v4];
  [*(id *)(a1 + 32) _postNotificationsAvailableForClient:v7 inContext:v4];
  sub_10004BBA0(v4);
  +[NSThread endPrivateManagedContextSession];
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
}

void sub_10008DF28(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[NSThread beginPrivateManagedContextSession];
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [v3 clientIdentifier];
  unsigned int v7 = [v5 _clientForIdentifier:v6 createIfNeeded:0 inContext:v4];

  uint64_t v8 = +[SSLogConfig sharedDaemonConfig];
  unsigned int v9 = (void *)v8;
  if (!v7)
  {
    if (!v8)
    {
      unsigned int v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v15 = [v9 shouldLog];
    if ([v9 shouldLogToDisk]) {
      int v16 = v15 | 2;
    }
    else {
      int v16 = v15;
    }
    unsigned int v17 = [v9 OSLogObject];
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
      v16 &= 2u;
    }
    if (v16)
    {
      int v18 = objc_opt_class();
      id v19 = v18;
      char v20 = [v3 clientIdentifier];
      *(_DWORD *)long long v25 = 138412546;
      *(void *)&v25[4] = v18;
      *(_WORD *)&v25[12] = 2112;
      *(void *)&v25[14] = v20;
      LODWORD(v24) = 22;
      long long v23 = v25;
      id v21 = (void *)_os_log_send_and_compose_impl();

      if (!v21)
      {
LABEL_25:

        goto LABEL_26;
      }
      unsigned int v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, v25, v24);
      free(v21);
      long long v23 = v17;
      SSFileLog();
    }

    goto LABEL_25;
  }
  if (!v8)
  {
    unsigned int v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  id v12 = [v9 OSLogObject];
  if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    v11 &= 2u;
  }
  if (!v11) {
    goto LABEL_12;
  }
  *(_DWORD *)long long v25 = 138412546;
  *(void *)&v25[4] = objc_opt_class();
  *(_WORD *)&v25[12] = 2112;
  *(void *)&v25[14] = v7;
  id v13 = *(id *)&v25[4];
  LODWORD(v24) = 22;
  long long v23 = v25;
  unsigned __int8 v14 = (void *)_os_log_send_and_compose_impl();

  if (v14)
  {
    id v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, v25, v24, *(_OWORD *)v25, *(void *)&v25[16]);
    free(v14);
    long long v23 = v12;
    SSFileLog();
LABEL_12:
  }
  [v4 deleteObject:v7];
  [*(id *)(a1 + 32) _reloadActiveEnvironmentInContext:v4];
  sub_10004BBA0(v4);
LABEL_26:
  +[NSThread endPrivateManagedContextSession];
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
}

void sub_10008E360(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _environmentNameForConnection:*(void *)(a1 + 40)];
  id v3 = +[NSThread beginPrivateManagedContextSession];
  int v4 = [*(id *)(a1 + 32) _environmentForName:v2 createIfNeeded:0 inContext:v3];
  uint64_t v5 = *(void **)(a1 + 48);
  id v6 = [v4 tokenData];
  unsigned int v7 = [v5 isEqual:v6];

  if (v4 && (!v7 || [*(id *)(a1 + 32) _shouldAggressivelySendToken]))
  {
    uint64_t v8 = +[SSLogConfig sharedDaemonConfig];
    if (!v8)
    {
      uint64_t v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v9 = [v8 shouldLog];
    if ([v8 shouldLogToDisk]) {
      int v10 = v9 | 2;
    }
    else {
      int v10 = v9;
    }
    int v11 = [v8 OSLogObject];
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      v10 &= 2u;
    }
    if (v10)
    {
      *(_DWORD *)unsigned int v17 = 138412546;
      *(void *)&v17[4] = objc_opt_class();
      *(_WORD *)&v17[12] = 2112;
      *(void *)&v17[14] = v2;
      id v12 = *(id *)&v17[4];
      LODWORD(v16) = 22;
      unsigned int v15 = v17;
      id v13 = (void *)_os_log_send_and_compose_impl();

      if (!v13)
      {
LABEL_15:

        unsigned __int8 v14 = +[NSNumber numberWithInteger:0];
        [v4 setLastAccountIdentifier:v14];

        [v4 setTokenData:*(void *)(a1 + 48)];
        sub_10004BBA0(v3);
        [*(id *)(a1 + 32) _postTokenForEnvironment:v4];
        goto LABEL_16;
      }
      int v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, v17, v16, *(_OWORD *)v17, *(void *)&v17[16]);
      free(v13);
      unsigned int v15 = v11;
      SSFileLog();
    }

    goto LABEL_15;
  }
LABEL_16:
  +[NSThread endPrivateManagedContextSession];
}

void sub_10008E698(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  uint64_t v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    v4 &= 2u;
  }
  if (v4)
  {
    id v6 = objc_opt_class();
    unsigned int v7 = *(NSObject **)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 48);
    int v43 = 138412802;
    long long v44 = v6;
    __int16 v45 = 2112;
    long long v46 = v7;
    __int16 v47 = 2112;
    uint64_t v48 = v8;
    id v9 = v6;
    LODWORD(v41) = 32;
    id v40 = &v43;
    int v10 = (void *)_os_log_send_and_compose_impl();

    if (!v10) {
      goto LABEL_12;
    }
    uint64_t v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v43, v41);
    free(v10);
    id v40 = (int *)v5;
    SSFileLog();
  }

LABEL_12:
  if ([*(id *)(a1 + 32) _isPushEnabled])
  {
    uint64_t v11 = objc_opt_class();
    uint64_t v12 = *(void *)(a1 + 48);
    id v13 = [*(id *)(a1 + 32) _bag];
    LOBYTE(v11) = [(id)v11 _amsHandleNotification:v12 urlBag:v13];

    if (v11) {
      return;
    }
    unsigned __int8 v14 = +[SSAccountStore defaultStore];
    unsigned int v15 = [v14 activeAccount];

    uint64_t v16 = [*(id *)(a1 + 48) objectForKey:SSRemoteNotificationKeyAccountIdentifier];
    if (!v16
      || ([v15 uniqueIdentifier],
          unsigned int v17 = objc_claimAutoreleasedReturnValue(),
          unsigned __int8 v18 = [v16 isEqual:v17],
          v17,
          (v18 & 1) != 0))
    {
      id v19 = [[PushNotificationDisplayOperation alloc] initWithNotificationUserInfo:*(void *)(a1 + 48)];
      if (![(PushNotificationDisplayOperation *)v19 requiresClientIdentifier]) {
        goto LABEL_31;
      }
      char v20 = +[NSThread beginPrivateManagedContextSession];
      id v21 = [*(id *)(a1 + 48) objectForKey:SSRemoteNotificationKeyClientIdentifier];
      long long v22 = [*(id *)(a1 + 32) _clientForIdentifier:v21 createIfNeeded:0 inContext:v20];
      if (v22)
      {
LABEL_30:
        +[NSThread endPrivateManagedContextSession];

LABEL_31:
        if (v19) {
          [*(id *)(*(void *)(a1 + 32) + 48) addOperation:v19];
        }
        goto LABEL_54;
      }
      long long v23 = +[SSLogConfig sharedDaemonConfig];
      if (!v23)
      {
        long long v23 = +[SSLogConfig sharedConfig];
      }
      unsigned int v24 = objc_msgSend(v23, "shouldLog", v40);
      if ([v23 shouldLogToDisk]) {
        int v25 = v24 | 2;
      }
      else {
        int v25 = v24;
      }
      long long v26 = [v23 OSLogObject];
      if (!os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
        v25 &= 2u;
      }
      if (v25)
      {
        long long v27 = objc_opt_class();
        int v43 = 138412546;
        long long v44 = v27;
        __int16 v45 = 2112;
        long long v46 = v21;
        id v42 = v27;
        LODWORD(v41) = 22;
        id v40 = &v43;
        long long v28 = (void *)_os_log_send_and_compose_impl();

        if (!v28)
        {
LABEL_29:

          id v19 = 0;
          goto LABEL_30;
        }
        long long v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v43, v41);
        free(v28);
        id v40 = (int *)v26;
        SSFileLog();
      }

      goto LABEL_29;
    }
    id v19 = +[SSLogConfig sharedDaemonConfig];
    if (!v19)
    {
      id v19 = +[SSLogConfig sharedConfig];
    }
    unsigned int v34 = [(PushNotificationDisplayOperation *)v19 shouldLog];
    if ([(PushNotificationDisplayOperation *)v19 shouldLogToDisk]) {
      int v35 = v34 | 2;
    }
    else {
      int v35 = v34;
    }
    __int16 v36 = [(PushNotificationDisplayOperation *)v19 OSLogObject];
    if (!os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT)) {
      v35 &= 2u;
    }
    if (v35)
    {
      id v37 = objc_opt_class();
      int v43 = 138412546;
      long long v44 = v37;
      __int16 v45 = 2112;
      long long v46 = v16;
      id v38 = v37;
      LODWORD(v41) = 22;
      uint64_t v39 = (void *)_os_log_send_and_compose_impl();

      if (!v39)
      {
LABEL_54:

        goto LABEL_55;
      }
      __int16 v36 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v39, 4, &v43, v41);
      free(v39);
      SSFileLog();
    }

    goto LABEL_54;
  }
  unsigned int v15 = +[SSLogConfig sharedDaemonConfig];
  if (!v15)
  {
    unsigned int v15 = +[SSLogConfig sharedConfig];
  }
  unsigned int v29 = objc_msgSend(v15, "shouldLog", v40);
  if ([v15 shouldLogToDisk]) {
    int v30 = v29 | 2;
  }
  else {
    int v30 = v29;
  }
  uint64_t v16 = [v15 OSLogObject];
  if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
    v30 &= 2u;
  }
  if (!v30) {
    goto LABEL_55;
  }
  uint64_t v31 = objc_opt_class();
  int v43 = 138412290;
  long long v44 = v31;
  id v32 = v31;
  LODWORD(v41) = 12;
  int v33 = (void *)_os_log_send_and_compose_impl();

  if (v33)
  {
    uint64_t v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v33, 4, &v43, v41);
    free(v33);
    SSFileLog();
LABEL_55:
  }
}

void sub_10008ED78(uint64_t a1)
{
  id v2 = +[NSThread beginPrivateManagedContextSession];
  [*(id *)(a1 + 32) _resetLastRegisterAttemptTime];
  [*(id *)(a1 + 32) _reloadPushStateInContext:v2];
  sub_10004BBA0(v2);
  +[NSThread endPrivateManagedContextSession];
}

void sub_10008EE60(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  uint64_t v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  LODWORD(v10) = 138412290;
  *(void *)((char *)&v10 + 4) = objc_opt_class();
  id v6 = *(id *)((char *)&v10 + 4);
  LODWORD(v9) = 12;
  unsigned int v7 = (void *)_os_log_send_and_compose_impl();

  if (v7)
  {
    uint64_t v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v10, v9, v10);
    free(v7);
    SSFileLog();
LABEL_11:
  }
  uint64_t v8 = +[NSThread beginPrivateManagedContextSession];
  [*(id *)(a1 + 32) _postTokensInContext:v8 force:1];
  +[NSThread endPrivateManagedContextSession];
}

void sub_10008F0B8(uint64_t a1)
{
  if (CFAbsoluteTimeGetCurrent() - *(double *)(*(void *)(a1 + 32) + 32) > 3600.0)
  {
    id v2 = +[NSThread beginPrivateManagedContextSession];
    [*(id *)(a1 + 32) _postTokensIfNecessaryInContext:v2];
    +[NSThread endPrivateManagedContextSession];
  }
}

void sub_10008F1C0(uint64_t a1)
{
  id v2 = +[NSThread beginPrivateManagedContextSession];
  [*(id *)(a1 + 32) _resetLastRegisterAttemptTime];
  [*(id *)(a1 + 32) _reloadPushStateInContext:v2];
  sub_10004BBA0(v2);
  +[NSThread endPrivateManagedContextSession];
}

void sub_10008F2E4(uint64_t a1)
{
  id v2 = +[NSThread beginPrivateManagedContextSession];
  [*(id *)(a1 + 32) _reloadPushStateInContext:v2];
  sub_10004BBA0(v2);
  +[NSThread endPrivateManagedContextSession];
}

void sub_1000905B8(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_1000907EC(uint64_t a1)
{
  (*(void (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
  id v1 = +[Daemon daemon];
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstore.PushNotificationController"];
}

void sub_100091B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100091B2C(uint64_t a1)
{
  id v2 = *(NSObject **)(*(void *)(a1 + 32) + 24);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100091BD4;
  v3[3] = &unk_1003A4FE8;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  v3[4] = *(void *)(a1 + 32);
  dispatch_async(v2, v3);
  objc_destroyWeak(&v4);
}

void sub_100091BD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained success])
  {
    [*(id *)(a1 + 32) _setShouldAggressivelySendToken:0];
    [*(id *)(a1 + 32) _updateEnvironmentAfterTokenPost:WeakRetained];
  }
  [WeakRetained setCompletionBlock:0];
  [*(id *)(*(void *)(a1 + 32) + 72) removeObjectIdenticalTo:WeakRetained];
  *(CFAbsoluteTime *)(*(void *)(a1 + 32) + 32) = CFAbsoluteTimeGetCurrent();
  [*(id *)(a1 + 32) _fireRegisterBlocksAfterOperation:WeakRetained];
}

intptr_t sub_100093E74(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_100094034(uint64_t a1)
{
  return [*(id *)(a1 + 32) _persistKeys];
}

void sub_1000944C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  id v3 = +[ISURLBagLoadingController sharedBagLoadingController];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000945DC;
  v7[3] = &unk_1003A5060;
  char v15 = *(unsigned char *)(a1 + 88);
  id v8 = *(id *)(a1 + 32);
  id v9 = *(id *)(a1 + 40);
  id v4 = *(id *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  long long v6 = *(void **)(a1 + 64);
  id v10 = v4;
  uint64_t v11 = v5;
  id v12 = WeakRetained;
  id v13 = v6;
  id v14 = *(id *)(a1 + 72);
  [v3 requestAccessToBagUsingBlock:v7];
}

void sub_1000945DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = objc_alloc_init((Class)SSVSecureKeyDeliveryRequestOperation);
  [v7 configureWithURLBagDictionary:v5];
  [v7 setITunesStoreRequest:1];
  if (*(unsigned char *)(a1 + 88)) {
    [v7 setOffline:1];
  }
  [v7 setShouldIncludeGUID:1];
  [v7 setResourceLoadingRequest:*(void *)(a1 + 32)];
  [v7 setCertificateURL:*(void *)(a1 + 40)];
  [v7 setKeyServerURL:*(void *)(a1 + 48)];
  if ([*(id *)(a1 + 56) rentalIdentifier])
  {
    id v8 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 64) rentalIdentifier]);
    [v7 setRentalId:v8];
  }
  objc_initWeak(&location, v7);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000947CC;
  v9[3] = &unk_1003A5038;
  id v10 = *(id *)(a1 + 32);
  char v15 = *(unsigned char *)(a1 + 88);
  id v11 = *(id *)(a1 + 72);
  id v12 = *(id *)(a1 + 80);
  objc_copyWeak(&v14, &location);
  uint64_t v13 = *(void *)(a1 + 64);
  [v7 setResponseBlock:v9];
  [v7 main];
  objc_destroyWeak(&v14);

  objc_destroyWeak(&location);
}

void sub_1000947AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000947CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) contentInformationRequest];

  if (v4)
  {
    uint64_t v5 = 40;
    if (!*(unsigned char *)(a1 + 72)) {
      uint64_t v5 = 48;
    }
    id v6 = *(void **)(a1 + 32);
    id v7 = *(id *)(a1 + v5);
    id v8 = [v6 contentInformationRequest];
    [v8 setContentType:v7];
  }
  if (!v3)
  {
    unsigned int v24 = [*(id *)(a1 + 32) request];
    int v25 = [v24 URL];
    uint64_t v16 = [v25 absoluteString];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    id v19 = [WeakRetained persistentContentKeyContext];

    if (v16 && v19 && *(unsigned char *)(a1 + 72)) {
      [*(id *)(a1 + 56) _persistURI:v16 persistentContentKey:v19];
    }
    long long v27 = +[SSLogConfig sharedDaemonConfig];
    if (!v27)
    {
      long long v27 = +[SSLogConfig sharedConfig];
    }
    unsigned int v28 = [v27 shouldLog];
    if ([v27 shouldLogToDisk]) {
      int v29 = v28 | 2;
    }
    else {
      int v29 = v28;
    }
    int v30 = [v27 OSLogObject];
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT)) {
      int v31 = v29;
    }
    else {
      int v31 = v29 & 2;
    }
    if (v31)
    {
      uint64_t v32 = *(void *)(a1 + 32);
      int v36 = 138412290;
      uint64_t v37 = v32;
      LODWORD(v35) = 12;
      int v33 = (void *)_os_log_send_and_compose_impl();

      if (!v33)
      {
LABEL_46:

        [*(id *)(a1 + 32) finishLoading];
        goto LABEL_50;
      }
      int v30 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v33, 4, &v36, v35);
      free(v33);
      SSFileLog();
    }

    goto LABEL_46;
  }
  id v9 = +[SSLogConfig sharedDaemonConfig];
  if (!v9)
  {
    id v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  id v12 = [v9 OSLogObject];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
    int v13 = v11;
  }
  else {
    int v13 = v11 & 2;
  }
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    int v36 = 138412546;
    uint64_t v37 = v14;
    __int16 v38 = 2112;
    id v39 = v3;
    LODWORD(v35) = 22;
    unsigned int v34 = &v36;
    char v15 = (void *)_os_log_send_and_compose_impl();

    if (!v15) {
      goto LABEL_18;
    }
    id v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v36, v35);
    free(v15);
    unsigned int v34 = (int *)v12;
    SSFileLog();
  }

LABEL_18:
  [*(id *)(a1 + 32) finishLoadingWithError:v3];
  SSVAVFoundationFramework();
  uint64_t v16 = SSVWeakLinkedStringConstantForString();
  unsigned int v17 = [v3 domain];
  if (![v17 isEqualToString:v16])
  {

    goto LABEL_48;
  }
  id v18 = [v3 code];

  if (v18 != (id)-11879)
  {
LABEL_48:
    id v19 = SSErrorWithUnderlyingError();
    id v21 = [*(id *)(a1 + 56) delegate];
    [v21 downloadAssetFairPlayStreamingKeyLoader:*(void *)(a1 + 56) didFailWithError:v19];
    goto LABEL_49;
  }
  id v19 = +[SSLogConfig sharedDaemonConfig];
  if (!v19)
  {
    id v19 = +[SSLogConfig sharedConfig];
  }
  unsigned int v20 = objc_msgSend(v19, "shouldLog", v34);
  if ([v19 shouldLogToDisk]) {
    v20 |= 2u;
  }
  id v21 = [v19 OSLogObject];
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
    int v22 = v20;
  }
  else {
    int v22 = v20 & 2;
  }
  if (!v22) {
    goto LABEL_49;
  }
  LOWORD(v36) = 0;
  LODWORD(v35) = 2;
  long long v23 = (void *)_os_log_send_and_compose_impl();

  if (v23)
  {
    id v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v36, v35);
    free(v23);
    SSFileLog();
LABEL_49:
  }
LABEL_50:
}

unint64_t sub_100094EFC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    uint64_t v3 = ML3TrackPropertyHLSOfflinePlaybackKeys;
    uint64_t v58 = ML3TrackPropertyHLSOfflinePlaybackKeys;
    id v4 = +[NSArray arrayWithObjects:&v58 count:1];
    uint64_t v5 = [v2 getValuesForProperties:v4];

    uint64_t v6 = [v5 objectForKeyedSubscript:v3];
    objc_opt_class();
    long long v51 = (void *)v6;
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
LABEL_18:
      id v22 = +[NSMutableDictionary dictionary];
LABEL_19:
      [v22 addEntriesFromDictionary:*(void *)(*(void *)(a1 + 40) + 24)];
      id v52 = 0;
      long long v23 = +[NSKeyedArchiver archivedDataWithRootObject:v22 requiringSecureCoding:1 error:&v52];
      id v24 = v52;
      if (!v24) {
        goto LABEL_32;
      }
      uint64_t v50 = v3;
      int v25 = +[SSLogConfig sharediTunesStoreConfig];
      if (!v25)
      {
        int v25 = +[SSLogConfig sharedConfig];
      }
      unsigned int v26 = [v25 shouldLog];
      if ([v25 shouldLogToDisk]) {
        v26 |= 2u;
      }
      long long v27 = [v25 OSLogObject];
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG)) {
        int v28 = v26;
      }
      else {
        int v28 = v26 & 2;
      }
      if (v28)
      {
        int v29 = objc_opt_class();
        id v30 = v29;
        id v31 = [v24 code];
        int v54 = 138412546;
        id v55 = v29;
        __int16 v56 = 2048;
        id v57 = v31;
        LODWORD(v49) = 22;
        __int16 v47 = &v54;
        uint64_t v32 = (void *)_os_log_send_and_compose_impl();

        if (!v32)
        {
LABEL_31:

          uint64_t v3 = v50;
LABEL_32:
          unint64_t v33 = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "setValue:forProperty:", v23, v3, v47);
          unsigned int v34 = +[SSLogConfig sharediTunesStoreConfig];
          if (!v34)
          {
            unsigned int v34 = +[SSLogConfig sharedConfig];
          }
          unsigned int v35 = [v34 shouldLog];
          if ([v34 shouldLogToDisk]) {
            v35 |= 2u;
          }
          int v36 = [v34 OSLogObject];
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG)) {
            int v37 = v35;
          }
          else {
            int v37 = v35 & 2;
          }
          if (v37)
          {
            __int16 v38 = objc_opt_class();
            int v54 = 138412546;
            id v55 = v38;
            __int16 v56 = 1024;
            LODWORD(v57) = v33;
            id v39 = v38;
            LODWORD(v49) = 18;
            id v40 = (void *)_os_log_send_and_compose_impl();

            if (!v40)
            {
LABEL_43:

              goto LABEL_57;
            }
            int v36 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v40, 4, &v54, v49);
            free(v40);
            SSFileLog();
          }

          goto LABEL_43;
        }
        long long v27 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v32, 4, &v54, v49);
        free(v32);
        __int16 v47 = (int *)v27;
        SSFileLog();
      }

      goto LABEL_31;
    }
    uint64_t v7 = objc_opt_class();
    uint64_t v8 = objc_opt_class();
    id v9 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v7, v8, objc_opt_class(), 0);
    id v53 = 0;
    unsigned int v10 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:v9 fromData:v6 error:&v53];
    id v11 = v53;

    if (!v11)
    {
LABEL_17:
      id v22 = objc_msgSend(v10, "mutableCopy", v48);

      if (v22) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    id v12 = +[SSLogConfig sharediTunesStoreConfig];
    if (!v12)
    {
      id v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    char v15 = [v12 OSLogObject];
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
      int v16 = v14;
    }
    else {
      int v16 = v14 & 2;
    }
    if (v16)
    {
      uint64_t v17 = v3;
      id v18 = objc_opt_class();
      id v19 = v18;
      id v20 = [v11 code];
      int v54 = 138412546;
      id v55 = v18;
      uint64_t v3 = v17;
      __int16 v56 = 2048;
      id v57 = v20;
      LODWORD(v49) = 22;
      uint64_t v48 = &v54;
      id v21 = (void *)_os_log_send_and_compose_impl();

      if (!v21)
      {
LABEL_16:

        goto LABEL_17;
      }
      char v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v54, v49);
      free(v21);
      uint64_t v48 = (int *)v15;
      SSFileLog();
    }

    goto LABEL_16;
  }
  uint64_t v5 = +[SSLogConfig sharediTunesStoreConfig];
  if (!v5)
  {
    uint64_t v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v41 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    LODWORD(v33) = v41 | 2;
  }
  else {
    LODWORD(v33) = v41;
  }
  id v42 = [v5 OSLogObject];
  if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
    unint64_t v33 = v33;
  }
  else {
    v33 &= 2u;
  }
  if (v33)
  {
    int v54 = 138412290;
    id v55 = (id)objc_opt_class();
    id v43 = v55;
    LODWORD(v49) = 12;
    long long v44 = (void *)_os_log_send_and_compose_impl();

    if (v44)
    {
      __int16 v45 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v44, 4, &v54, v49);
      free(v44);
      SSFileLog();
    }
    unint64_t v33 = 0;
  }
  else
  {
  }
LABEL_57:

  return v33;
}

id sub_1000956A8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];
  uint64_t v2 = +[SSLogConfig sharediTunesStoreConfig];
  if (!v2)
  {
    uint64_t v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  uint64_t v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = *(void *)(a1 + 48);
  *(_DWORD *)id v12 = 138412546;
  *(void *)&void v12[4] = v6;
  *(_WORD *)&v12[12] = 2112;
  *(void *)&v12[14] = v7;
  id v8 = v6;
  LODWORD(v11) = 22;
  id v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    uint64_t v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, v12, v11, *(_OWORD *)v12, *(void *)&v12[16]);
    free(v9);
    SSFileLog();
LABEL_11:
  }
  return [*(id *)(a1 + 32) _persistKeys];
}

void sub_100098010(uint64_t a1, int a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5)
  {
    uint64_t v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  id v8 = [v5 OSLogObject];
  if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
    v7 &= 2u;
  }
  if (!v7) {
    goto LABEL_11;
  }
  *(_DWORD *)id v12 = 138412802;
  *(void *)&void v12[4] = objc_opt_class();
  *(_WORD *)&v12[12] = 1024;
  *(_DWORD *)&v12[14] = a2;
  *(_WORD *)&v12[18] = 2112;
  *(void *)&v12[20] = v4;
  id v9 = *(id *)&v12[4];
  LODWORD(v11) = 28;
  unsigned int v10 = (void *)_os_log_send_and_compose_impl();

  if (v10)
  {
    id v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, v12, v11, *(_OWORD *)v12, *(_OWORD *)&v12[16]);
    free(v10);
    SSFileLog();
LABEL_11:
  }
}

id *sub_1000981B8(id *result, uint64_t a2)
{
  if (!a2) {
    return (id *)[result[4] _performNotificationAction:1];
  }
  return result;
}

void sub_100099370(uint64_t a1, void *a2, int a3)
{
  if (a3)
  {
    id v4 = a2;
    +[SSVSubscriptionStatusCoordinator sendChangeNotification];
    id v5 = [v4 accountStatus];

    if (v5 == (id)3)
    {
      id v7 = +[PushNotificationController sharedInstance];
      unsigned int v6 = [*(id *)(*(void *)(a1 + 32) + 96) notificationUserInfo];
      [v7 postClientNotificationWithUserInfo:v6];
    }
  }
}

NSURL *__cdecl sub_10009A74C(id a1, SSURLBagContext *a2)
{
  id v2 = objc_msgSend(+[ISURLBagCache sharedCache](ISURLBagCache, "sharedCache"), "URLBagForContext:", a2);
  id v3 = [v2 valueForKey:@"automatic-downloads2"];
  if (!v3) {
    id v3 = [v2 valueForKey:@"automatic-downloads"];
  }
  uint64_t result = (NSURL *)[v3 objectForKey:@"register-media-types"];
  if (result)
  {
    return +[NSURL URLWithString:result];
  }
  return result;
}

NSURL *__cdecl sub_10009B640(id a1, SSURLBagContext *a2)
{
  id v2 = objc_msgSend(+[ISURLBagCache sharedCache](ISURLBagCache, "sharedCache"), "URLBagForContext:", a2);
  id v3 = [v2 valueForKey:@"automatic-downloads2"];
  if (!v3) {
    id v3 = [v2 valueForKey:@"automatic-downloads"];
  }
  uint64_t result = (NSURL *)[v3 objectForKey:@"discovery-prompt"];
  if (result)
  {
    return +[NSURL URLWithString:result];
  }
  return result;
}

void sub_10009BB70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10009BD78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10009C104(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10009E1A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009E1BC(uint64_t a1)
{
  id v2 = [[XPCClientBackgroundTask alloc] initWithProcessAssertion:*(void *)(a1 + 32) invalidationBlock:*(void *)(a1 + 56)];
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  unsigned int v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    v5 &= 2u;
  }
  if (v5)
  {
    id v7 = objc_opt_class();
    int v8 = *(_DWORD *)(a1 + 64);
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
    *(_DWORD *)id v18 = 138413058;
    *(void *)&void v18[4] = v7;
    *(_WORD *)&v18[12] = 1024;
    *(_DWORD *)&v18[14] = v8;
    *(_WORD *)&v18[18] = 2112;
    *(void *)&v18[20] = v9;
    *(_WORD *)&v18[28] = 2112;
    *(void *)&v18[30] = v2;
    id v10 = v7;
    LODWORD(v17) = 38;
    int v16 = v18;
    uint64_t v11 = (void *)_os_log_send_and_compose_impl();

    if (!v11) {
      goto LABEL_12;
    }
    unsigned int v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v18, v17, *(_OWORD *)v18, *(_OWORD *)&v18[16], *(void *)&v18[32]);
    free(v11);
    int v16 = v6;
    SSFileLog();
  }

LABEL_12:
  id v12 = *(void **)(*(void *)(a1 + 40) + 72);
  if (!v12)
  {
    id v13 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v14 = *(void *)(a1 + 40);
    char v15 = *(void **)(v14 + 72);
    *(void *)(v14 + 72) = v13;

    id v12 = *(void **)(*(void *)(a1 + 40) + 72);
  }
  objc_msgSend(v12, "setObject:forKey:", v2, *(void *)(a1 + 48), v16);
}

void sub_10009E3C4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v1 _invalidateBackgroundTaskAssertion:WeakRetained];
}

id sub_10009E4C8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _clientType];
  if (result == (id)1)
  {
    id result = [*(id *)(a1 + 32) _applicationState];
    HIDWORD(v3) = result;
    LODWORD(v3) = result - 4;
    unint64_t v4 = 0x100000001000101uLL >> (8 * (v3 >> 2));
    if ((v3 >> 2) >= 8) {
      char v5 = 0;
    }
    else {
      char v5 = v4;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v5;
  }
  return result;
}

uint64_t sub_10009E580(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10009E590(uint64_t a1)
{
}

void sub_10009E640(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 72) objectForKey:*(void *)(a1 + 40)];
  if (v2)
  {
    unint64_t v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3)
    {
      unint64_t v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    unsigned int v6 = [v3 OSLogObject];
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
      v5 &= 2u;
    }
    if (v5)
    {
      *(_DWORD *)uint64_t v11 = 138412546;
      *(void *)&v11[4] = objc_opt_class();
      *(_WORD *)&v11[12] = 2112;
      *(void *)&v11[14] = v2;
      id v7 = *(id *)&v11[4];
      LODWORD(v10) = 22;
      int v8 = (void *)_os_log_send_and_compose_impl();

      if (!v8)
      {
LABEL_13:

        uint64_t v9 = [v2 processAssertion];
        [v9 setInvalidationHandler:0];

        [*(id *)(*(void *)(a1 + 32) + 72) removeObjectForKey:*(void *)(a1 + 40)];
        goto LABEL_14;
      }
      unsigned int v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v11, v10, *(_OWORD *)v11, *(void *)&v11[16]);
      free(v8);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
}

void sub_10009E8CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned __int8 *)(v2 + 48) == 255)
  {
    *(unsigned char *)(v2 + 48) = 0;
    id v3 = [*(id *)(a1 + 32) _clientType];
    if (v3 == (id)3)
    {
LABEL_5:
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
      goto LABEL_13;
    }
    if (v3 == (id)1)
    {
      if (*(void *)(*(void *)(a1 + 32) + 8))
      {
        unsigned int v4 = +[LSApplicationProxy applicationProxyForIdentifier:](LSApplicationProxy, "applicationProxyForIdentifier:");
        int v5 = [v4 appState];
        unsigned int v6 = [v5 isValid];

        if (v6)
        {
          *(unsigned char *)(*(void *)(a1 + 32) + 48) = [v4 profileValidated] ^ 1;
        }
        else
        {
          id v7 = +[LSPlugInKitProxy pluginKitProxyForIdentifier:*(void *)(*(void *)(a1 + 32) + 8)];
          int v8 = [v7 containingBundle];
          uint64_t v9 = [v8 bundleType];
          unsigned int v10 = [v9 isEqualToString:LSUserApplicationType];

          if (v10) {
            *(unsigned char *)(*(void *)(a1 + 32) + 48) = [v7 profileValidated] ^ 1;
          }
        }
      }
    }
    else if (!v3)
    {
      goto LABEL_5;
    }
  }
LABEL_13:
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = *(unsigned char *)(*(void *)(a1 + 32) + 48) != 0;
}

id sub_10009EAC8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isNewsstandApp];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_10009EBA8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isBetaApp];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_10009EC88(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isAdHocCodeSigned];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_10009ED38(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 96);
  if (!v2)
  {
    id v3 = objc_alloc_init((Class)NSMutableIndexSet);
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = *(void **)(v4 + 96);
    *(void *)(v4 + 96) = v3;

    uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 96);
  }
  if (([v2 containsIndex:*(void *)(a1 + 40)] & 1) == 0)
  {
    [*(id *)(*(void *)(a1 + 32) + 96) addIndex:*(void *)(a1 + 40)];
    xpc_object_t v6 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v6, "0", *(void *)(a1 + 40));
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = *(void **)(v7 + 40);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_10009EE30;
    v10[3] = &unk_1003A45D8;
    uint64_t v9 = *(void *)(a1 + 40);
    void v10[4] = v7;
    v10[5] = v9;
    [v8 sendMessage:v6 withReply:v10];
  }
}

void sub_10009EE30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10009EEAC;
  v4[3] = &unk_1003A5220;
  uint64_t v3 = *(void *)(a1 + 40);
  v4[4] = v1;
  void v4[5] = v3;
  dispatch_async(v2, v4);
}

id sub_10009EEAC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 96) removeIndex:*(void *)(a1 + 40)];
}

void sub_10009EEB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleOutputConnectionDisconnect];
}

void sub_10009F078(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"XPCClientApplicationStateDidChangeNotification" object:*(void *)(a1 + 32)];
}

void sub_10009F14C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 96) removeAllIndexes];
  id v2 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009F1EC;
  block[3] = &unk_1003A3140;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v2, block);
}

void sub_10009F1EC(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"XPCClientDisconnectNotification" object:*(void *)(a1 + 32)];
}

void sub_10009F2E4(uint64_t a1)
{
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 72);
  id v3 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v15;
LABEL_3:
    uint64_t v5 = 0;
    while (1)
    {
      if (*(void *)v15 != v4) {
        objc_enumerationMutation(v2);
      }
      xpc_object_t v6 = *(void **)(*((void *)&v14 + 1) + 8 * v5);
      id v7 = [*(id *)(*(void *)(a1 + 32) + 72) objectForKey:v6];
      int v8 = [v7 processAssertion];
      uint64_t v9 = *(void **)(a1 + 40);

      if (v8 == v9) {
        break;
      }

      if (v3 == (id)++v5)
      {
        id v3 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
        if (v3) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }
    id v3 = v6;

    if (!v3) {
      goto LABEL_13;
    }
    unsigned int v10 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10009F4E0;
    block[3] = &unk_1003A3140;
    id v7 = v7;
    id v13 = v7;
    dispatch_async(v10, block);

    uint64_t v11 = [v7 processAssertion];
    [v11 setInvalidationHandler:0];

    [*(id *)(*(void *)(a1 + 32) + 72) removeObjectForKey:v3];
    id v2 = v13;
  }
  else
  {
LABEL_9:
    id v7 = 0;
  }

LABEL_13:
}

void sub_10009F4E0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) invalidationBlock];
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

uint64_t sub_1000A02D8(uint64_t a1, void *a2)
{
  return 1;
}

void sub_1000A094C(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  sqlite3_int64 v5 = sqlite3_value_int64(*a3);
  CFStringRef v6 = +[ScratchManager directoryPathForDownloadID:v5 assetID:sqlite3_value_int64(a3[1]) createIfNeeded:1];
  if (v6
    && (CFStringRef v7 = v6,
        CFIndex Length = CFStringGetLength(v6),
        CFIndex usedBufLen = 0,
        CFIndex MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(Length, 0x8000100u),
        (unsigned int v10 = (UInt8 *)malloc_type_malloc(MaximumSizeForEncoding + 1, 0x51D7B978uLL)) != 0))
  {
    uint64_t v11 = (const char *)v10;
    v14.id location = 0;
    v14.length = Length;
    CFStringGetBytes(v7, v14, 0x8000100u, 0, 0, v10, MaximumSizeForEncoding, &usedBufLen);
    v11[usedBufLen] = 0;
    sqlite3_result_text(a1, v11, -1, (void (__cdecl *)(void *))&_free);
  }
  else
  {
    sqlite3_result_null(a1);
  }
}

uint64_t sub_1000A0B94(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:SSVMediaSocialPostExternalServiceFacebook])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:SSVMediaSocialPostExternalServiceTwitter])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

CFStringRef sub_1000A0C08(uint64_t a1)
{
  CFStringRef v1 = @"twitter";
  if (a1 != 2) {
    CFStringRef v1 = 0;
  }
  if (a1 == 1) {
    return @"facebook";
  }
  else {
    return v1;
  }
}

void sub_1000A0DA8(uint64_t a1, uint64_t a2)
{
}

void sub_1000A0DB8(uint64_t a1)
{
}

void sub_1000A10A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1000A10D8(uint64_t a1)
{
  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v3 = value;
  if (!value) {
    goto LABEL_4;
  }
  if (xpc_get_type(value) != (xpc_type_t)&_xpc_type_dictionary)
  {
    id v3 = 0;
LABEL_4:
    uint64_t v4 = 400;
LABEL_5:
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_ERROR)) {
      v7 &= 2u;
    }
    if (v7)
    {
      uint64_t v8 = objc_opt_class();
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
      int v28 = 138412802;
      uint64_t v29 = v8;
      __int16 v30 = 2112;
      uint64_t v31 = v9;
      __int16 v32 = 2112;
      unint64_t v33 = v3;
      LODWORD(v27) = 32;
      unsigned int v26 = &v28;
      uint64_t v10 = _os_log_send_and_compose_impl();
      if (v10)
      {
        uint64_t v11 = (void *)v10;
        uint64_t v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v28, v27);
        free(v11);
        unsigned int v26 = (int *)v12;
        SSFileLog();
      }
    }
    id v13 = objc_alloc((Class)NSError);
    uint64_t v14 = SSErrorDomain;
    uint64_t v15 = v4;
LABEL_16:
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = objc_msgSend(v13, "initWithDomain:code:userInfo:", v14, v15, 0, v26);
    goto LABEL_17;
  }
  [SSDownloadPropertyKind UTF8String];
  objc_opt_class();
  id v3 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if (!v3) {
    goto LABEL_4;
  }
  if (([*(id *)(a1 + 40) _supportsDownloadKind:v3] & 1) == 0)
  {
    uint64_t v4 = 107;
    goto LABEL_5;
  }
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) = [[Download alloc] initWithClientXPCDownload:*(void *)(a1 + 32)];
  uint64_t v16 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  if (!v16)
  {
    id v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18) {
      id v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = [v18 shouldLog];
    if ([v18 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    if (!os_log_type_enabled((os_log_t)[v18 OSLogObject], OS_LOG_TYPE_ERROR)) {
      v20 &= 2u;
    }
    if (v20)
    {
      uint64_t v21 = objc_opt_class();
      uint64_t v22 = *(void *)(*(void *)(a1 + 40) + 8);
      int v28 = 138412546;
      uint64_t v29 = v21;
      __int16 v30 = 2112;
      uint64_t v31 = v22;
      LODWORD(v27) = 22;
      unsigned int v26 = &v28;
      uint64_t v23 = _os_log_send_and_compose_impl();
      if (v23)
      {
        id v24 = (void *)v23;
        int v25 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v28, v27);
        free(v24);
        unsigned int v26 = (int *)v25;
        SSFileLog();
      }
    }
    id v13 = objc_alloc((Class)NSError);
    uint64_t v14 = SSErrorDomain;
    uint64_t v15 = 400;
    goto LABEL_16;
  }
  [v16 setValue:*(void *)(*(void *)(a1 + 40) + 8) forProperty:@"client_id"];
  if ([v3 isEqualToString:SSDownloadKindNewsstandContent])
  {
    if ([*(id *)(a1 + 40) _isBackgroundApp])
    {
      id v17 = objc_alloc_init((Class)SSNetworkConstraints);
      [v17 disableCellularNetworkTypes];
      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) unionNetworkConstraints:v17];
    }
    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "setValue:forProperty:", +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", 1), @"suppress_error_dialogs");
    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "setValue:forProperty:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", -1), @"priority");
  }
LABEL_17:
}

void *sub_1000A1A20(void *result)
{
  CFStringRef v1 = *(void **)(result[4] + 152);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 152) = result;
  }
  return result;
}

void *sub_1000A1AEC(void *result)
{
  CFStringRef v1 = *(void **)(result[4] + 168);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 168) = result;
  }
  return result;
}

void *sub_1000A1BB8(void *result)
{
  CFStringRef v1 = *(void **)(result[4] + 160);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 160) = result;
  }
  return result;
}

uint64_t sub_1000A1C88(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 176) = *(unsigned char *)(result + 40);
  return result;
}

id sub_1000A1D5C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _supportsDownloadKind:*(void *)(a1 + 40)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000A2578(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) object];
  [v1 _retryCanceledRestoreDownloads];
}

void sub_1000A25BC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) object];
  [v1 _retrySoftFailedRestoreDownloads];
}

void sub_1000A2600(uint64_t a1, uint64_t a2)
{
  CFPreferencesAppSynchronize(kITunesStoreDaemonDefaultsID);
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"StoreAutomaticDownloadConstraintsChangedNotification" object:a2];
}

void sub_1000A2670(uint64_t a1, void *a2)
{
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  unsigned int v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_11;
  }
  LODWORD(v13) = 138412290;
  *(void *)((char *)&v13 + 4) = objc_opt_class();
  id v7 = *(id *)((char *)&v13 + 4);
  LODWORD(v12) = 12;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    unsigned int v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v13, v12, v13);
    free(v8);
    SSFileLog();
LABEL_11:
  }
  uint64_t v9 = +[SSAccountStore defaultStore];
  uint64_t v10 = [v9 activeAccount];
  uint64_t v11 = [v10 uniqueIdentifier];

  [a2 checkQueuesWithReason:@"trigger-download" accountID:v11];
}

void sub_1000A29C8(id a1)
{
  id v1 = objc_alloc_init(StoreDownloadQueue);
  uint64_t v2 = qword_100401D28;
  qword_100401D28 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1000A2B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A2B80(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"is_automatic" equalToLongLong:1];
  int v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"is_redownload" equalToLongLong:1];
  unsigned int v6 = +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v4, v5, 0);
  id v7 = +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:v6];

  uint64_t v8 = [v3 database];
  uint64_t v9 = +[DownloadEntity queryWithDatabase:v8 predicate:v7];

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1000A2D08;
  void v14[3] = &unk_1003A5508;
  uint64_t v10 = *(void *)(a1 + 32);
  id v15 = v3;
  uint64_t v16 = v10;
  id v11 = v3;
  [v9 enumeratePersistentIDsUsingBlock:v14];
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);

  return v12;
}

id sub_1000A2D08(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = [*(id *)(a1 + 32) finishDownloadWithID:a2 finalPhase:SSDownloadPhaseCanceled];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

void sub_1000A2DD4(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 40))
  {
    uint64_t v2 = +[SSAccountStore defaultStore];
    id v3 = [v2 activeAccount];
    unsigned int v4 = [v3 uniqueIdentifier];

    if (v4)
    {
      int v5 = *(unsigned char **)(a1 + 32);
      if (v5[16])
      {
        unsigned int v6 = +[SSLogConfig sharedDaemonConfig];
        if (!v6)
        {
          unsigned int v6 = +[SSLogConfig sharedConfig];
        }
        unsigned int v7 = [v6 shouldLog];
        if ([v6 shouldLogToDisk]) {
          int v8 = v7 | 2;
        }
        else {
          int v8 = v7;
        }
        uint64_t v9 = [v6 OSLogObject];
        if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
          v8 &= 2u;
        }
        if (v8)
        {
          int v39 = 138412290;
          id v40 = (id)objc_opt_class();
          id v10 = v40;
          LODWORD(v36) = 12;
          id v11 = (void *)_os_log_send_and_compose_impl();

          if (!v11)
          {
LABEL_15:

            *(unsigned char *)(*(void *)(a1 + 32) + 17) = 1;
LABEL_28:

            return;
          }
          uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v39, v36);
          free(v11);
          SSFileLog();
        }

        goto LABEL_15;
      }
      id v18 = [v5 automaticDownloadKinds];
      id v19 = [v18 count];

      if (v19)
      {
        int v20 = [*(id *)(a1 + 32) automaticDownloadKinds];
        id v21 = [v20 count];

        if (!v21) {
          goto LABEL_28;
        }
        uint64_t v22 = [*(id *)(a1 + 32) enabledDownloadKinds];
        id v23 = [v22 count];

        if (v23) {
          [*(id *)(a1 + 32) _checkAutomaticDownloadQueue:v4];
        }
        id v24 = [*(id *)(a1 + 32) automaticDownloadKinds];
        unsigned int v25 = [v24 containsObject:SSDownloadKindSoftwareApplication];

        if (v25) {
          +[AppStoreUtility checkDownloadQueue];
        }
        if (!_os_feature_enabled_impl()) {
          goto LABEL_28;
        }
        unsigned int v26 = [*(id *)(a1 + 32) automaticDownloadKinds];
        if ([v26 containsObject:SSDownloadKindEBook])
        {
        }
        else
        {
          unsigned int v34 = [*(id *)(a1 + 32) automaticDownloadKinds];
          unsigned int v35 = [v34 containsObject:SSDownloadKindAudiobook];

          if (!v35) {
            goto LABEL_28;
          }
        }
        +[BookAssetDaemonUtility checkAutomaticDownloads];
        goto LABEL_28;
      }
      uint64_t v27 = +[SSLogConfig sharedDaemonConfig];
      if (!v27)
      {
        uint64_t v27 = +[SSLogConfig sharedConfig];
      }
      unsigned int v28 = [v27 shouldLog];
      if ([v27 shouldLogToDisk]) {
        int v29 = v28 | 2;
      }
      else {
        int v29 = v28;
      }
      __int16 v30 = [v27 OSLogObject];
      if (!os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT)) {
        v29 &= 2u;
      }
      if (v29)
      {
        int v39 = 138412290;
        id v40 = (id)objc_opt_class();
        id v31 = v40;
        LODWORD(v36) = 12;
        __int16 v32 = (void *)_os_log_send_and_compose_impl();

        if (!v32)
        {
LABEL_50:

          unint64_t v33 = *(void **)(a1 + 32);
          v37[0] = _NSConcreteStackBlock;
          v37[1] = 3221225472;
          v37[2] = sub_1000A3380;
          v37[3] = &unk_1003A3268;
          v37[4] = v33;
          id v38 = v4;
          [v33 _synchronizeAutomaticDownloadKinds:v37];

          goto LABEL_28;
        }
        __int16 v30 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v32, 4, &v39, v36);
        free(v32);
        SSFileLog();
      }

      goto LABEL_50;
    }
    uint64_t v12 = +[SSLogConfig sharedDaemonConfig];
    if (!v12)
    {
      uint64_t v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    id v15 = [v12 OSLogObject];
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      v14 &= 2u;
    }
    if (v14)
    {
      int v39 = 138412290;
      id v40 = (id)objc_opt_class();
      id v16 = v40;
      LODWORD(v36) = 12;
      id v17 = (void *)_os_log_send_and_compose_impl();

      if (!v17)
      {
LABEL_27:

        goto LABEL_28;
      }
      id v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v39, v36);
      free(v17);
      SSFileLog();
    }

    goto LABEL_27;
  }
}

void sub_1000A3380(uint64_t a1)
{
  uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    uint64_t v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  int v5 = [v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    int v6 = v4;
  }
  else {
    int v6 = v4 & 2;
  }
  if (!v6) {
    goto LABEL_12;
  }
  unsigned int v7 = objc_opt_class();
  int v8 = *(void **)(a1 + 32);
  id v9 = v7;
  id v10 = [v8 automaticDownloadKinds];
  id v11 = [v10 allObjects];
  [v11 componentsJoinedByString:@", "];
  int v18 = 138412546;
  id v19 = v7;
  __int16 v20 = 2112;
  id v21 = (id)objc_claimAutoreleasedReturnValue();
  LODWORD(v15) = 22;
  uint64_t v12 = (void *)_os_log_send_and_compose_impl();

  if (v12)
  {
    int v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v18, v15);
    free(v12);
    SSFileLog();
LABEL_12:
  }
  uint64_t v13 = *(void *)(a1 + 32);
  int v14 = *(NSObject **)(v13 + 24);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A35D0;
  block[3] = &unk_1003A3268;
  void block[4] = v13;
  id v17 = *(id *)(a1 + 40);
  dispatch_async(v14, block);
}

void sub_1000A35D0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) automaticDownloadKinds];
  id v3 = [v2 count];

  if (v3)
  {
    int v4 = [*(id *)(a1 + 32) enabledDownloadKinds];
    id v5 = [v4 count];

    if (v5) {
      [*(id *)(a1 + 32) _checkAutomaticDownloadQueue:*(void *)(a1 + 40)];
    }
    int v6 = [*(id *)(a1 + 32) automaticDownloadKinds];
    unsigned int v7 = [v6 containsObject:SSDownloadKindSoftwareApplication];

    if (v7) {
      +[AppStoreUtility checkDownloadQueue];
    }
    if (_os_feature_enabled_impl())
    {
      int v8 = [*(id *)(a1 + 32) automaticDownloadKinds];
      if ([v8 containsObject:SSDownloadKindEBook])
      {
      }
      else
      {
        id v9 = [*(id *)(a1 + 32) automaticDownloadKinds];
        unsigned int v10 = [v9 containsObject:SSDownloadKindAudiobook];

        if (!v10) {
          return;
        }
      }
      +[BookAssetDaemonUtility checkAutomaticDownloads];
    }
  }
}

void sub_1000A38D0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A38E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000A38F8(uint64_t a1)
{
}

uint64_t sub_1000A3900(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) _newQueueRequestsWithReason:*(void *)(a1 + 40) accountID:*(void *)(a1 + 48) session:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v5 = *(void *)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return _objc_release_x1(v3, v5);
}

id sub_1000A3950(uint64_t a1)
{
  return [*(id *)(a1 + 32) _addOperationsForRequests:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) reason:*(void *)(a1 + 40)];
}

void sub_1000A3A00(uint64_t a1)
{
  id v4 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithObjects:", *(void *)(a1 + 32), 0);
  uint64_t v2 = *(void **)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) reason];
  [v2 _addOperationsForRequests:v4 reason:v3];
}

void sub_1000A4048(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 64);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      int v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        unsigned int v7 = objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * (void)v6), "queueIdentifier", (void)v9);
        int v8 = sub_1000AAD90((uint64_t)v7);

        if (v8) {
          [*(id *)(a1 + 40) addObjectsFromArray:v8];
        }

        int v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }
}

void sub_1000A4208(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  uint64_t v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  int v6 = objc_opt_class();
  uint64_t v7 = *(void *)(a1 + 40);
  *(_DWORD *)long long v11 = 138412546;
  *(void *)&v11[4] = v6;
  *(_WORD *)&v11[12] = 2112;
  *(void *)&v11[14] = v7;
  id v8 = v6;
  LODWORD(v10) = 22;
  long long v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    uint64_t v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, v11, v10, *(_OWORD *)v11, *(void *)&v11[16]);
    free(v9);
    SSFileLog();
LABEL_11:
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 16) = 1;
}

void sub_1000A443C(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  uint64_t v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    int v6 = objc_opt_class();
    uint64_t v7 = *(void *)(a1 + 40);
    *(_DWORD *)long long v12 = 138412546;
    *(void *)&void v12[4] = v6;
    *(_WORD *)&v12[12] = 2112;
    *(void *)&v12[14] = v7;
    id v8 = v6;
    LODWORD(v11) = 22;
    long long v9 = (void *)_os_log_send_and_compose_impl();

    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, v12, v11, *(_OWORD *)v12, *(void *)&v12[16]);
    free(v9);
    SSFileLog();
  }

LABEL_12:
  *(unsigned char *)(*(void *)(a1 + 32) + 16) = 0;
  uint64_t v10 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v10 + 17))
  {
    *(unsigned char *)(v10 + 17) = 0;
    [*(id *)(a1 + 32) checkAutomaticDownloadQueue];
  }
}

void sub_1000A486C(uint64_t a1, void *a2)
{
  unsigned int v3 = *(void **)(a1 + 32);
  int v4 = [a2 database];
  uint64_t v5 = [v3 _restorableDownloadsQueryInDatabase:v4];

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1000A4930;
  v6[3] = &unk_1003A3A80;
  id v7 = *(id *)(a1 + 40);
  [v5 enumeratePersistentIDsUsingBlock:v6];
}

void sub_1000A4930(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_1000A4A58(uint64_t a1)
{
  id v2 = objc_opt_new();
  if (SSDebugShouldUseAppstored())
  {
    id v3 = +[DownloadsDatabase downloadsDatabase];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1000A4C20;
    v10[3] = &unk_1003A55D0;
    id v4 = *(id *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    id v11 = v4;
    uint64_t v12 = v5;
    id v13 = v2;
    [v3 readUsingTransactionBlock:v10];
  }
  id v6 = [*(id *)(a1 + 32) mutableCopy];
  if (SSDebugShouldUseAppstored()) {
    [v6 minusOrderedSet:v2];
  }
  [v6 minusOrderedSet:*(void *)(*(void *)(a1 + 40) + 8)];
  [*(id *)(*(void *)(a1 + 40) + 8) unionOrderedSet:v6];
  if ([v6 count])
  {
    id v7 = [[RestoreDownloadsOperation alloc] initWithDownloadIdentifiers:v6 restoreReason:*(void *)(a1 + 48)];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1000A4F18;
    v8[3] = &unk_1003A3268;
    v8[4] = *(void *)(a1 + 40);
    id v9 = v6;
    [(RestoreDownloadsOperation *)v7 setCompletionBlock:v8];
    [*(id *)(*(void *)(a1 + 40) + 56) addOperation:v7];
  }
}

void sub_1000A4C20(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  uint64_t v25 = a1;
  id obj = *(id *)(a1 + 32);
  id v26 = [obj countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v26)
  {
    uint64_t v4 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v26; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v4) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        id v7 = [DownloadEntity alloc];
        id v8 = [v6 longLongValue];
        id v9 = [v3 database];
        uint64_t v10 = [(DownloadEntity *)v7 initWithPersistentID:v8 inDatabase:v9];

        id v11 = [(DownloadEntity *)v10 valueForProperty:@"kind"];
        if (SSDownloadKindIsSoftwareKind())
        {
          uint64_t v12 = v4;
          id v13 = v3;
          int v14 = +[SSLogConfig sharedDaemonConfig];
          if (!v14)
          {
            int v14 = +[SSLogConfig sharedConfig];
          }
          unsigned int v15 = objc_msgSend(v14, "shouldLog", v22);
          if ([v14 shouldLogToDisk]) {
            int v16 = v15 | 2;
          }
          else {
            int v16 = v15;
          }
          id v17 = [v14 OSLogObject];
          if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO)) {
            int v18 = v16;
          }
          else {
            int v18 = v16 & 2;
          }
          if (v18)
          {
            id v19 = objc_opt_class();
            int v31 = 138412546;
            __int16 v32 = v19;
            __int16 v33 = 2112;
            unsigned int v34 = v6;
            id v20 = v19;
            LODWORD(v23) = 22;
            uint64_t v22 = &v31;
            id v21 = (void *)_os_log_send_and_compose_impl();

            id v3 = v13;
            uint64_t v4 = v12;
            if (v21)
            {
              id v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v31, v23);
              free(v21);
              uint64_t v22 = (int *)v17;
              SSFileLog();
              goto LABEL_19;
            }
          }
          else
          {
            id v3 = v13;
            uint64_t v4 = v12;
LABEL_19:
          }
          [*(id *)(v25 + 48) addObject:v6];
        }
      }
      id v26 = [obj countByEnumeratingWithState:&v27 objects:v35 count:16];
    }
    while (v26);
  }
}

void sub_1000A4F18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(NSObject **)(v1 + 24);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1000A4FAC;
  v3[3] = &unk_1003A3268;
  v3[4] = v1;
  id v4 = *(id *)(a1 + 40);
  dispatch_async(v2, v3);
}

id sub_1000A4FAC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) minusOrderedSet:*(void *)(a1 + 40)];
}

id sub_1000A5174(uint64_t a1)
{
  return [*(id *)(a1 + 32) cancelAllRedownloads];
}

void sub_1000A526C(uint64_t a1)
{
  xpc_object_t message = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  id v2 = [*(id *)(a1 + 40) automaticDownloadKinds];
  [v2 allObjects];
  SSXPCDictionarySetCFObject();

  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), message);
}

void sub_1000A54DC(uint64_t a1)
{
  id v2 = +[DownloadsDatabase downloadsDatabase];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000A559C;
  v4[3] = &unk_1003A55F8;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v3 = [v2 modifyUsingTransactionBlock:v4];
}

uint64_t sub_1000A559C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4)
  {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  id v7 = [v4 OSLogObject];
  if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    v6 &= 2u;
  }
  if (v6)
  {
    LODWORD(v13) = 138412290;
    *(void *)((char *)&v13 + 4) = objc_opt_class();
    id v8 = *(id *)((char *)&v13 + 4);
    LODWORD(v12) = 12;
    id v9 = (void *)_os_log_send_and_compose_impl();

    if (!v9) {
      goto LABEL_12;
    }
    id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v13, v12, v13);
    free(v9);
    SSFileLog();
  }

LABEL_12:
  id v10 = [*(id *)(a1 + 32) _newQueueRequestsWithReason:@"other" accountID:*(void *)(a1 + 40) session:v3];

  if (v10) {
    [*(id *)(a1 + 32) _addOperationsForRequests:v10 reason:@"other"];
  }

  return 1;
}

void sub_1000A5854(uint64_t a1)
{
  objc_opt_class();
  id v2 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if (![v2 isEqualToString:@"all"])
  {
    unsigned int v5 = [*(id *)(a1 + 40) automaticDownloadKinds];
    id v6 = [v5 mutableCopy];

    objc_opt_class();
    id v7 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
    if (!v2 || [v2 isEqualToString:@"set"])
    {
      [v6 removeAllObjects];
      if (!v7) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    if (v7)
    {
      if ([v2 isEqualToString:@"union"])
      {
LABEL_7:
        [v6 addObjectsFromArray:v7];
        goto LABEL_8;
      }
      if ([v2 isEqualToString:@"minus"])
      {
        int v14 = +[NSSet setWithArray:v7];
        [v6 minusSet:v14];
      }
    }
LABEL_8:
    id v8 = +[SSAccountStore defaultStore];
    id v9 = [v8 activeAccount];

    id v3 = (EnableAllAutomaticDownloadKindsOperation *)[*(id *)(a1 + 40) _newOperationByCommitingAutomaticDownloadKinds:v6 account:v9];
    if (v3)
    {
      id v10 = [[XPCClient alloc] initWithInputConnection:*(void *)(a1 + 48)];
      id v11 = [(XPCClient *)v10 clientIdentifierHeader];
      [(EnableAllAutomaticDownloadKindsOperation *)v3 setClientIdentifierHeader:v11];

      uint64_t v12 = v3;
    }

    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
    xpc_dictionary_set_BOOL(reply, "0", 1);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);

    goto LABEL_12;
  }
  id v3 = objc_alloc_init(EnableAllAutomaticDownloadKindsOperation);
  if (!v3) {
    goto LABEL_11;
  }
LABEL_3:
  objc_initWeak(&location, v3);
  unsigned int v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472;
  id v17 = sub_1000A5B54;
  int v18 = &unk_1003A5620;
  objc_copyWeak(&v21, &location);
  id v19 = *(id *)(a1 + 32);
  id v20 = *(id *)(a1 + 48);
  [(EnableAllAutomaticDownloadKindsOperation *)v3 setCompletionBlock:&v15];
  id v4 = +[ISOperationQueue mainQueue];
  [v4 addOperation:v3];

  objc_destroyWeak(&v21);
  objc_destroyWeak(&location);
LABEL_12:
}

void sub_1000A5B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A5B54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned __int8 v2 = [WeakRetained success];
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_dictionary_set_BOOL(reply, "0", v2);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
}

void sub_1000A60D8(uint64_t a1)
{
  unsigned __int8 v2 = +[SSAccountStore defaultStore];
  id v3 = [v2 activeAccount];
  id v4 = [v3 uniqueIdentifier];

  if (v4 && ([v4 isEqual:*(void *)(*(void *)(a1 + 32) + 32)] & 1) == 0)
  {
    long long v13 = +[SSLogConfig sharedDaemonConfig];
    if (!v13)
    {
      long long v13 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v13 shouldLog];
    if ([v13 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    uint64_t v16 = [v13 OSLogObject];
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      v15 &= 2u;
    }
    if (v15)
    {
      int v23 = 138412546;
      id v24 = (id)objc_opt_class();
      __int16 v25 = 2114;
      id v26 = v4;
      id v17 = v24;
      LODWORD(v20) = 22;
      int v18 = (void *)_os_log_send_and_compose_impl();

      if (!v18)
      {
LABEL_26:

        objc_storeStrong((id *)(*(void *)(a1 + 32) + 32), v4);
        id v19 = dispatch_get_global_queue(0, 0);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000A6480;
        block[3] = &unk_1003A3268;
        void block[4] = *(void *)(a1 + 32);
        id v22 = v4;
        dispatch_async(v19, block);

        goto LABEL_27;
      }
      uint64_t v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v23, v20);
      free(v18);
      SSFileLog();
    }

    goto LABEL_26;
  }
  unsigned int v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5)
  {
    unsigned int v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  id v8 = [v5 OSLogObject];
  if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    v7 &= 2u;
  }
  if (!v7) {
    goto LABEL_13;
  }
  id v9 = objc_opt_class();
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 32);
  int v23 = 138412802;
  id v24 = v9;
  __int16 v25 = 2114;
  id v26 = v4;
  __int16 v27 = 2114;
  uint64_t v28 = v10;
  id v11 = v9;
  LODWORD(v20) = 32;
  uint64_t v12 = (void *)_os_log_send_and_compose_impl();

  if (v12)
  {
    id v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v23, v20);
    free(v12);
    SSFileLog();
LABEL_13:
  }
LABEL_27:
}

id sub_1000A6480(uint64_t a1)
{
  return [*(id *)(a1 + 32) checkQueuesWithReason:@"account-change" accountID:*(void *)(a1 + 40)];
}

uint64_t sub_1000A6568(uint64_t a1)
{
  return 1;
}

void sub_1000A6F38(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstore.StoreDownloadQueue"];
}

void sub_1000A71F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A7220(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 40) setCompletionBlock:0];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained success])
  {
    uint64_t v5 = *(void *)(a1 + 32);
    unsigned int v6 = *(NSObject **)(v5 + 24);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000A7308;
    block[3] = &unk_1003A4298;
    void block[4] = v5;
    id v8 = WeakRetained;
    id v9 = *(id *)(a1 + 40);
    dispatch_async(v6, block);
  }
}

void sub_1000A7308(id *a1)
{
  id v1 = a1;
  unsigned int v40 = [a1[4] _ignoreVideos];
  id v37 = objc_alloc_init((Class)NSMutableArray);
  id v39 = objc_alloc_init((Class)NSMutableOrderedSet);
  uint64_t v2 = [v1[4] enabledDownloadKinds];
  [v1[5] downloads];
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v3 = [obj countByEnumeratingWithState:&v47 objects:v55 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v48;
    id v38 = v1;
    uint64_t v41 = *(void *)v48;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v48 != v5) {
          objc_enumerationMutation(obj);
        }
        int v7 = *(void **)(*((void *)&v47 + 1) + 8 * i);
        if (objc_msgSend(v7, "isSoftwareKind", v35, v36))
        {
          id v8 = +[SSLogConfig sharedDaemonConfig];
          if (!v8)
          {
            id v8 = +[SSLogConfig sharedConfig];
          }
          unsigned int v9 = [v8 shouldLog];
          if ([v8 shouldLogToDisk]) {
            int v10 = v9 | 2;
          }
          else {
            int v10 = v9;
          }
          id v11 = [v8 OSLogObject];
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
            int v12 = v10;
          }
          else {
            int v12 = v10 & 2;
          }
          if (!v12) {
            goto LABEL_18;
          }
          long long v13 = objc_opt_class();
          id v14 = v13;
          int v15 = [v7 bundleIdentifier];
          int v51 = 138412546;
          id v52 = v13;
          __int16 v53 = 2112;
          int v54 = v15;
          LODWORD(v36) = 22;
          unsigned int v35 = &v51;
          uint64_t v16 = (void *)_os_log_send_and_compose_impl();

          if (v16)
          {
            id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v51, v36);
            free(v16);
            unsigned int v35 = (int *)v11;
            SSFileLog();
            uint64_t v5 = v41;
LABEL_18:

            goto LABEL_38;
          }
          goto LABEL_34;
        }
        id v8 = [v7 cancelDownloadURL];
        if (v8
          && ([v7 kind],
              id v17 = objc_claimAutoreleasedReturnValue(),
              unsigned int v18 = [v2 containsObject:v17],
              v17,
              !v18))
        {
          uint64_t v28 = v37;
          long long v29 = v8;
        }
        else
        {
          if (([v7 isVideosKind] & v40) == 1)
          {
            id v19 = +[SSLogConfig sharedDaemonConfig];
            if (!v19)
            {
              id v19 = +[SSLogConfig sharedConfig];
            }
            unsigned int v20 = [v19 shouldLog];
            if ([v19 shouldLogToDisk]) {
              v20 |= 2u;
            }
            id v21 = [v19 OSLogObject];
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG)) {
              int v22 = v20;
            }
            else {
              int v22 = v20 & 2;
            }
            if (v22)
            {
              int v23 = objc_opt_class();
              id v24 = v2;
              id v25 = v23;
              id v26 = [v7 title];
              int v51 = 138412546;
              id v52 = v23;
              __int16 v53 = 2112;
              int v54 = v26;
              LODWORD(v36) = 22;
              unsigned int v35 = &v51;
              __int16 v27 = (void *)_os_log_send_and_compose_impl();

              uint64_t v2 = v24;
              if (v27)
              {
                id v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, &v51, v36);
                free(v27);
                unsigned int v35 = (int *)v21;
                SSFileLog();
                goto LABEL_32;
              }
            }
            else
            {
LABEL_32:
            }
            id v1 = v38;
LABEL_34:
            uint64_t v5 = v41;
            goto LABEL_38;
          }
          uint64_t v28 = v39;
          long long v29 = v7;
        }
        [v28 addObject:v29];
LABEL_38:
      }
      id v4 = [obj countByEnumeratingWithState:&v47 objects:v55 count:16];
    }
    while (v4);
  }
  long long v30 = +[DownloadsDatabase downloadsDatabase];
  v43[0] = _NSConcreteStackBlock;
  v43[1] = 3221225472;
  v43[2] = sub_1000A7868;
  v43[3] = &unk_1003A5670;
  void v43[4] = v1[4];
  id v44 = v1[6];
  id v31 = v39;
  id v45 = v31;
  id v32 = v37;
  id v46 = v32;
  id v33 = [v30 modifyUsingPurchaseTransactionBlock:v43];

  if ([v32 count])
  {
    unsigned int v34 = objc_alloc_init(FinishDownloadsOperation);
    [*((id *)v1[4] + 6) addOperation:v34];
  }
}

unint64_t sub_1000A7868(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  uint64_t v5 = [*(id *)(a1 + 32) _automaticDownloadsQueryWithDatabase:v4 accountID:*(void *)(a1 + 40)];
  unint64_t v6 = (unint64_t)[v3 replaceDownloadsInQuery:v5 withStoreDownloads:*(void *)(a1 + 48) accountID:*(void *)(a1 + 40)];
  if (v6 && [*(id *)(a1 + 56) count])
  {
    id v16 = v3;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id obj = *(id *)(a1 + 56);
    id v7 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v19;
      do
      {
        for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v9) {
            objc_enumerationMutation(obj);
          }
          id v11 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          id v12 = objc_alloc((Class)NSDictionary);
          long long v13 = [v11 absoluteString];
          id v14 = objc_msgSend(v12, "initWithObjectsAndKeys:", v13, @"finish_url", *(void *)(a1 + 40), @"store_account_id", 0);
        }
        id v8 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v8);
    }

    id v3 = v16;
    unint64_t v6 = v6;
  }

  return v6;
}

void sub_1000A7BEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000A7C08(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (![WeakRetained success]) {
    goto LABEL_10;
  }
  id v3 = [a1[4] accountIdentifier];
  if (v3) {
    [a1[5] _setLastCheckedAccountID:v3];
  }
  id v4 = [WeakRetained numberOfAvailableDownloads];
  if (!v4)
  {
    int v10 = +[DownloadsDatabase downloadsDatabase];
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_1000A7EA8;
    void v27[3] = &unk_1003A55F8;
    id v11 = a1[4];
    id v12 = a1[5];
    id v28 = v11;
    id v29 = v12;
    id v13 = [v10 modifyUsingTransactionBlock:v27];

LABEL_9:
LABEL_10:
    id v14 = a1[5];
    int v15 = *((void *)v14 + 3);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000A86B4;
    block[3] = &unk_1003A3268;
    void block[4] = v14;
    id v18 = a1[4];
    dispatch_async(v15, block);

    goto LABEL_11;
  }
  id v5 = v4;
  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x2020000000;
  char v26 = 0;
  unint64_t v6 = +[DownloadsDatabase downloadsDatabase];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  void v19[2] = sub_1000A8244;
  v19[3] = &unk_1003A56C0;
  int8x16_t v16 = *((int8x16_t *)a1 + 2);
  id v7 = (id)v16.i64[0];
  int8x16_t v20 = vextq_s8(v16, v16, 8uLL);
  long long v21 = &v23;
  id v22 = v5;
  id v8 = [v6 modifyUsingTransactionBlock:v19];

  if (!*((unsigned char *)v24 + 24))
  {

    _Block_object_dispose(&v23, 8);
    goto LABEL_9;
  }
  id v9 = [a1[5] _newLoadQueueOperationForQueueRequest:a1[4]];
  [*((id *)a1[5] + 6) addOperation:v9];

  _Block_object_dispose(&v23, 8);
LABEL_11:
}

void sub_1000A7E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A7EA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) purchaseIdentifier];
  if (v4)
  {
    uint64_t v5 = [v3 placeholderDownloadForPurchaseIdentifier:v4];
    if (v5)
    {
      unint64_t v6 = (void *)v5;
      id v7 = +[SSLogConfig sharedDaemonConfig];
      if (!v7)
      {
        id v7 = +[SSLogConfig sharedConfig];
      }
      unsigned int v8 = [v7 shouldLog];
      if ([v7 shouldLogToDisk]) {
        int v9 = v8 | 2;
      }
      else {
        int v9 = v8;
      }
      int v10 = [v7 OSLogObject];
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
        v9 &= 2u;
      }
      if (v9)
      {
        id v11 = objc_opt_class();
        id v12 = v11;
        int v32 = 138412546;
        id v33 = v11;
        __int16 v34 = 2048;
        id v35 = [v6 persistentID];
        LODWORD(v31) = 22;
        long long v30 = &v32;
        id v13 = (void *)_os_log_send_and_compose_impl();

        if (!v13)
        {
LABEL_14:

          id v14 = [v6 persistentID];
          [v3 finishDownloadWithID:v14 finalPhase:SSDownloadPhaseCanceled];

          goto LABEL_15;
        }
        int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v32, v31);
        free(v13);
        long long v30 = (int *)v10;
        SSFileLog();
      }

      goto LABEL_14;
    }
  }
LABEL_15:
  uint64_t v16 = *(void *)(a1 + 32);
  int v15 = *(void **)(a1 + 40);
  id v17 = objc_msgSend(v3, "database", v30);
  id v18 = [v15 _downloadQueryWithQueueRequest:v16 database:v17];

  id v19 = [v18 copyEntityIdentifiers];
  if ([v19 count])
  {
    int8x16_t v20 = +[SSLogConfig sharedDaemonConfig];
    if (!v20)
    {
      int8x16_t v20 = +[SSLogConfig sharedConfig];
    }
    unsigned int v21 = [v20 shouldLog];
    if ([v20 shouldLogToDisk]) {
      int v22 = v21 | 2;
    }
    else {
      int v22 = v21;
    }
    uint64_t v23 = [v20 OSLogObject];
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_INFO)) {
      v22 &= 2u;
    }
    if (v22)
    {
      id v24 = objc_opt_class();
      id v25 = v24;
      id v26 = [v19 count];
      uint64_t v27 = *(void *)(a1 + 32);
      int v32 = 138412802;
      id v33 = v24;
      __int16 v34 = 2048;
      id v35 = v26;
      __int16 v36 = 2112;
      uint64_t v37 = v27;
      LODWORD(v31) = 32;
      id v28 = (void *)_os_log_send_and_compose_impl();

      if (!v28)
      {
LABEL_27:

        [v3 finishDownloadsWithIdentifiers:v19 finalPhase:SSDownloadPhaseCanceled];
        goto LABEL_28;
      }
      uint64_t v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v32, v31);
      free(v28);
      SSFileLog();
    }

    goto LABEL_27;
  }
LABEL_28:

  return 1;
}

uint64_t sub_1000A8244(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)a1[4];
  uint64_t v5 = a1[5];
  unint64_t v6 = [v3 database];
  id v7 = [v4 _downloadQueryWithQueueRequest:v5 database:v6];
  id v8 = [v7 countOfEntities];

  id v9 = (id)a1[7];
  uint64_t v10 = +[SSLogConfig sharedDaemonConfig];
  id v11 = (void *)v10;
  if (v9 != v8)
  {
    if (!v10)
    {
      id v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v29 = [v11 shouldLog];
    if ([v11 shouldLogToDisk]) {
      int v30 = v29 | 2;
    }
    else {
      int v30 = v29;
    }
    uint64_t v31 = [v11 OSLogObject];
    if (!os_log_type_enabled(v31, OS_LOG_TYPE_INFO)) {
      v30 &= 2u;
    }
    if (v30)
    {
      *(_DWORD *)uint64_t v37 = 138412290;
      *(void *)&v37[4] = objc_opt_class();
      id v32 = *(id *)&v37[4];
      LODWORD(v36) = 12;
      id v33 = (void *)_os_log_send_and_compose_impl();

      if (!v33)
      {
LABEL_38:

        *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
        goto LABEL_39;
      }
      uint64_t v31 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v33, 4, v37, v36, *(void *)v37, *(void *)&v37[8]);
      free(v33);
      SSFileLog();
    }

    goto LABEL_38;
  }
  if (!v10)
  {
    id v11 = +[SSLogConfig sharedConfig];
  }
  unsigned int v12 = [v11 shouldLog];
  if ([v11 shouldLogToDisk]) {
    int v13 = v12 | 2;
  }
  else {
    int v13 = v12;
  }
  id v14 = [v11 OSLogObject];
  if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
    v13 &= 2u;
  }
  if (!v13) {
    goto LABEL_12;
  }
  *(_DWORD *)uint64_t v37 = 138412290;
  *(void *)&v37[4] = objc_opt_class();
  id v15 = *(id *)&v37[4];
  LODWORD(v36) = 12;
  id v35 = v37;
  uint64_t v16 = (void *)_os_log_send_and_compose_impl();

  if (v16)
  {
    id v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, v37, v36, *(_OWORD *)v37);
    free(v16);
    id v35 = v14;
    SSFileLog();
LABEL_12:
  }
  id v17 = [(id)a1[5] purchaseIdentifier];
  if (v17)
  {
    uint64_t v18 = [v3 placeholderDownloadForPurchaseIdentifier:v17];
    if (v18)
    {
      id v19 = (void *)v18;
      int8x16_t v20 = +[SSLogConfig sharedDaemonConfig];
      if (!v20)
      {
        int8x16_t v20 = +[SSLogConfig sharedConfig];
      }
      unsigned int v21 = objc_msgSend(v20, "shouldLog", v35);
      if ([v20 shouldLogToDisk]) {
        int v22 = v21 | 2;
      }
      else {
        int v22 = v21;
      }
      uint64_t v23 = [v20 OSLogObject];
      if (!os_log_type_enabled(v23, OS_LOG_TYPE_INFO)) {
        v22 &= 2u;
      }
      if (v22)
      {
        id v24 = objc_opt_class();
        id v25 = v24;
        id v26 = [v19 persistentID];
        *(_DWORD *)uint64_t v37 = 138412546;
        *(void *)&v37[4] = v24;
        *(_WORD *)&v37[12] = 2048;
        *(void *)&v37[14] = v26;
        LODWORD(v36) = 22;
        uint64_t v27 = (void *)_os_log_send_and_compose_impl();

        if (!v27)
        {
LABEL_26:

          id v28 = [v19 persistentID];
          [v3 finishDownloadWithID:v28 finalPhase:SSDownloadPhaseCanceled];

          goto LABEL_39;
        }
        uint64_t v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, v37, v36);
        free(v27);
        SSFileLog();
      }

      goto LABEL_26;
    }
  }
LABEL_39:

  return 1;
}

id sub_1000A86B4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) removeObject:*(void *)(a1 + 40)];
}

void sub_1000A8814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A8830(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(NSObject **)(v2 + 24);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A8984;
  block[3] = &unk_1003A3268;
  void block[4] = v2;
  id v13 = *(id *)(a1 + 40);
  dispatch_async(v3, block);
  id v4 = +[DownloadsDatabase downloadsDatabase];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000A8990;
  v8[3] = &unk_1003A5710;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v9 = v5;
  uint64_t v10 = v6;
  objc_copyWeak(&v11, (id *)(a1 + 48));
  id v7 = [v4 modifyUsingPurchaseTransactionBlock:v8];

  objc_destroyWeak(&v11);
}

void sub_1000A8970(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_1000A8984(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) removeObject:*(void *)(a1 + 40)];
}

uint64_t sub_1000A8990(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1[4] purchaseIdentifier];
  if (v4)
  {
    uint64_t v5 = [v3 placeholderDownloadForPurchaseIdentifier:v4];
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      id v7 = +[SSLogConfig sharedDaemonConfig];
      if (!v7)
      {
        id v7 = +[SSLogConfig sharedConfig];
      }
      unsigned int v8 = [v7 shouldLog];
      if ([v7 shouldLogToDisk]) {
        int v9 = v8 | 2;
      }
      else {
        int v9 = v8;
      }
      uint64_t v10 = [v7 OSLogObject];
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
        int v11 = v9;
      }
      else {
        int v11 = v9 & 2;
      }
      if (v11)
      {
        unsigned int v12 = objc_opt_class();
        id v13 = v12;
        int v48 = 138412546;
        long long v49 = v12;
        __int16 v50 = 2048;
        id v51 = [v6 persistentID];
        LODWORD(v37) = 22;
        uint64_t v36 = &v48;
        id v14 = (void *)_os_log_send_and_compose_impl();

        if (!v14)
        {
LABEL_15:

          id v15 = [v6 persistentID];
          [v3 finishDownloadWithID:v15 finalPhase:SSDownloadPhaseCanceled];

          goto LABEL_16;
        }
        uint64_t v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v48, v37);
        free(v14);
        uint64_t v36 = (int *)v10;
        SSFileLog();
      }

      goto LABEL_15;
    }
  }
LABEL_16:
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if ([WeakRetained success])
  {
    id v17 = [WeakRetained downloads];
    id v18 = [v17 mutableCopy];

    LOBYTE(v17) = [a1[5] _ignoreVideos];
    id v19 = objc_opt_new();
    int8x16_t v20 = objc_opt_new();
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_1000A8DC8;
    v43[3] = &unk_1003A56E8;
    char v46 = (char)v17;
    void v43[4] = a1[5];
    id v21 = v19;
    id v44 = v21;
    id v22 = v20;
    id v45 = v22;
    [v18 enumerateObjectsUsingBlock:v43];
    [v18 removeObjectsAtIndexes:v21];
    if ([a1[4] cancelsDuplicateDownloads])
    {
      id v38 = v21;
      long long v41 = 0u;
      long long v42 = 0u;
      long long v39 = 0u;
      long long v40 = 0u;
      id v23 = v18;
      id v24 = [v23 countByEnumeratingWithState:&v39 objects:v47 count:16];
      if (v24)
      {
        id v25 = v24;
        uint64_t v26 = *(void *)v40;
        uint64_t v27 = SSDownloadMetadataKeyCancelIfDuplicate;
        do
        {
          for (uint64_t i = 0; i != v25; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v40 != v26) {
              objc_enumerationMutation(v23);
            }
            objc_msgSend(*(id *)(*((void *)&v39 + 1) + 8 * i), "setValue:forMetadataKey:", &__kCFBooleanTrue, v27, v36);
          }
          id v25 = [v23 countByEnumeratingWithState:&v39 objects:v47 count:16];
        }
        while (v25);
      }

      id v21 = v38;
    }
    +[BookAssetDaemonUtility sendBookStoreDownloads:v22, @"auto download queue", v36 withReason];
    id v30 = a1[4];
    id v29 = a1[5];
    uint64_t v31 = [v3 database];
    id v32 = [v29 _downloadQueryWithQueueRequest:v30 database:v31];

    id v33 = [a1[4] accountIdentifier];
    uint64_t v34 = (uint64_t)[v3 replaceDownloadsInQuery:v32 withStoreDownloads:v18 accountID:v33];
  }
  else
  {
    uint64_t v34 = 1;
  }

  return v34;
}

void sub_1000A8DC8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if ([v5 isVideosKind] && *(unsigned char *)(a1 + 56))
  {
    uint64_t v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      uint64_t v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    int v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
      v8 &= 2u;
    }
    if (v8)
    {
      uint64_t v10 = objc_opt_class();
      id v11 = v10;
      [v5 title];
      int v23 = 138412546;
      id v24 = v10;
      __int16 v25 = 2112;
      id v26 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v22) = 22;
      unsigned int v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_14:

        goto LABEL_30;
      }
      int v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v23, v22);
      free(v12);
      SSFileLog();
    }

    goto LABEL_14;
  }
  if ([v5 isSoftwareKind])
  {
    id v13 = +[SSLogConfig sharedDaemonConfig];
    if (!v13)
    {
      id v13 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v13 shouldLog];
    if ([v13 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    uint64_t v16 = [v13 OSLogObject];
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG)) {
      v15 &= 2u;
    }
    if (v15)
    {
      id v17 = objc_opt_class();
      id v18 = v17;
      [v5 bundleIdentifier];
      int v23 = 138412546;
      id v24 = v17;
      __int16 v25 = 2112;
      id v26 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v22) = 22;
      id v19 = (void *)_os_log_send_and_compose_impl();

      if (!v19)
      {
LABEL_27:

        [*(id *)(a1 + 40) addIndex:a3];
        goto LABEL_30;
      }
      uint64_t v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v23, v22);
      free(v19);
      SSFileLog();
    }

    goto LABEL_27;
  }
  int8x16_t v20 = [v5 kind];
  int IsBookToShimKind = SSDownloadKindIsBookToShimKind();

  if (IsBookToShimKind)
  {
    [*(id *)(a1 + 40) addIndex:a3];
    [*(id *)(a1 + 48) addObject:v5];
  }
LABEL_30:
}

void sub_1000A95A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a3[1])
  {
    sub_1000AAFC0(*a3);
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(a1 + 32), "containsObject:"))
    {
      id v5 = objc_alloc_init(StoreDownloadQueueRequest);
      [(StoreDownloadQueueRequest *)v5 setAccountIdentifier:a3[1]];
      [(StoreDownloadQueueRequest *)v5 setQueueIdentifier:v6];
      [(StoreDownloadQueueRequest *)v5 setReason:*(void *)(a1 + 40)];
      [*(id *)(a1 + 48) addObject:v5];
    }
  }
}

BOOL sub_1000A98A8(id a1, DownloadsTransaction *a2)
{
  uint64_t v2 = a2;
  id v3 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"download_state.restore_state" equalToLongLong:3];
  unsigned int v4 = [(DownloadsTransaction *)v2 resetDownloadsMatchingPredicate:v3];
  if (v4)
  {
    [(DownloadsExternalTransaction *)v2 addDownloadChangeTypes:128];
    [(DownloadsExternalTransaction *)v2 setRestoreReason:@"cancel-retry"];
  }

  return v4;
}

BOOL sub_1000A9AEC(id a1, DownloadsTransaction *a2)
{
  uint64_t v2 = a2;
  id v3 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"download_state.restore_state" equalToLongLong:2];
  unsigned int v4 = [(DownloadsTransaction *)v2 resetDownloadsMatchingPredicate:v3];
  if (v4) {
    [(DownloadsExternalTransaction *)v2 addDownloadChangeTypes:128];
  }

  return v4;
}

void sub_1000A9DD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v5 = *(void **)(v2 + 32);
  unsigned int v4 = (id *)(v2 + 32);
  if (v5 != v3) {
    objc_storeStrong(v4, v3);
  }
}

void sub_1000A9F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A9F70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v2 = [WeakRetained success];
  id v3 = WeakRetained;
  if (v2)
  {
    unsigned int v4 = [WeakRetained enabledDownloadKinds];
    id v5 = *(void **)(a1 + 32);
    if (v4)
    {
      id v6 = +[NSSet setWithArray:v4];
      [v5 commitAutomaticDownloadKinds:v6 markAsDirty:0];
    }
    else
    {
      [*(id *)(a1 + 32) commitAutomaticDownloadKinds:0 markAsDirty:0];
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7) {
      (*(void (**)(void))(v7 + 16))();
    }

    id v3 = WeakRetained;
  }

  return _objc_release_x1(v2, v3);
}

id sub_1000AAD90(uint64_t a1)
{
  id v2 = +[NSMutableArray array];
  if (qword_100401D48 != -1) {
    dispatch_once_f(&qword_100401D48, 0, (dispatch_function_t)sub_1000AAE58);
  }
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000AAF64;
  v4[3] = &unk_1003A5808;
  void v4[4] = a1;
  void v4[5] = v2;
  [(id)qword_100401D50 enumerateKeysAndObjectsUsingBlock:v4];
  return v2;
}

id sub_1000AAE58()
{
  id v0 = objc_alloc((Class)NSDictionary);
  id result = objc_msgSend(v0, "initWithObjectsAndKeys:", SSDownloadKindAudiobook, @"media", SSDownloadKindCoachedAudio, @"books", SSDownloadKindEBook, @"media", SSDownloadKindMovie, @"media", SSDownloadKindMusic, @"media", SSDownloadKindMusicVideo, @"media", SSDownloadKindPodcast, @"media", SSDownloadKindRingtone, @"apps", SSDownloadKindSoftwareApplication,
             @"media",
             SSDownloadKindTelevisionEpisode,
             @"media",
             SSDownloadKindTone,
             @"media",
             SSDownloadKindVideoPodcast,
             0);
  qword_100401D50 = (uint64_t)result;
  return result;
}

id sub_1000AAF64(uint64_t a1, uint64_t a2, void *a3)
{
  id result = [a3 isEqualToString:*(void *)(a1 + 32)];
  if (result)
  {
    id v6 = *(void **)(a1 + 40);
    return [v6 addObject:a2];
  }
  return result;
}

id sub_1000AAFC0(uint64_t a1)
{
  if (qword_100401D48 != -1) {
    dispatch_once_f(&qword_100401D48, 0, (dispatch_function_t)sub_1000AAE58);
  }
  id v2 = (void *)qword_100401D50;

  return [v2 objectForKey:a1];
}

uint64_t sub_1000AB0D0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100401D58;
  qword_100401D58 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_1000ABDF8(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 24);
  [*(id *)(*(void *)(a1 + 32) + 24) setCompletionBlock:0];
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned int v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = 0;

  id v5 = [v2 error];
  if (v5)
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    int v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      *(_DWORD *)unsigned int v14 = 138412546;
      *(void *)&void v14[4] = objc_opt_class();
      *(_WORD *)&unsigned char v14[12] = 2112;
      *(void *)&v14[14] = v5;
      id v10 = *(id *)&v14[4];
      LODWORD(v13) = 22;
      unsigned int v12 = v14;
      id v11 = (void *)_os_log_send_and_compose_impl();

      if (!v11)
      {
LABEL_13:

        goto LABEL_14;
      }
      int v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v14, v13, *(_OWORD *)v14, *(void *)&v14[16]);
      free(v11);
      unsigned int v12 = v9;
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
  objc_msgSend(*(id *)(a1 + 32), "_performMigration", v12);
}

void sub_1000AC054(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 32) copy];
  [*(id *)(*(void *)(a1 + 32) + 32) removeAllObjects];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      unsigned int v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * (void)v7), "performMigration", (void)v8);
        unsigned int v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

void sub_1000AC1F8(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 32);
  if (!v2)
  {
    id v3 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 32);
    *(void *)(v4 + 32) = v3;

    id v2 = *(void **)(*(void *)(a1 + 32) + 32);
  }
  id v6 = [v2 count];
  [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
  uint64_t v7 = +[SSLogConfig sharedDaemonConfig];
  long long v8 = (void *)v7;
  if (!v6)
  {
    if (!v7)
    {
      long long v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v8 shouldLog];
    if ([v8 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    uint64_t v16 = [v8 OSLogObject];
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG)) {
      v15 &= 2u;
    }
    if (v15)
    {
      LODWORD(v33) = 138412290;
      *(void *)((char *)&v33 + 4) = objc_opt_class();
      id v17 = *(id *)((char *)&v33 + 4);
      LODWORD(v32) = 12;
      uint64_t v31 = &v33;
      id v18 = (void *)_os_log_send_and_compose_impl();

      if (!v18) {
        goto LABEL_26;
      }
      uint64_t v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v33, v32, v33);
      free(v18);
      uint64_t v31 = v16;
      SSFileLog();
    }

LABEL_26:
    id v19 = +[ISNetworkObserver sharedInstance];
    id v20 = [v19 networkType];

    if (v20)
    {
      [*(id *)(a1 + 32) _loadBagAndPerformMigration];
      return;
    }
    id v21 = +[SSLogConfig sharedDaemonConfig];
    if (!v21)
    {
      id v21 = +[SSLogConfig sharedConfig];
    }
    unsigned int v22 = objc_msgSend(v21, "shouldLog", v31);
    if ([v21 shouldLogToDisk]) {
      int v23 = v22 | 2;
    }
    else {
      int v23 = v22;
    }
    id v24 = [v21 OSLogObject];
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_INFO)) {
      v23 &= 2u;
    }
    if (v23)
    {
      __int16 v25 = objc_opt_class();
      LODWORD(v33) = 138412290;
      *(void *)((char *)&v33 + 4) = v25;
      id v26 = v25;
      LODWORD(v32) = 12;
      uint64_t v27 = (void *)_os_log_send_and_compose_impl();

      if (!v27)
      {
LABEL_39:

        long long v8 = +[NSNotificationCenter defaultCenter];
        uint64_t v28 = *(void *)(a1 + 32);
        uint64_t v29 = ISNetworkTypeChangedNotification;
        id v30 = +[ISNetworkObserver sharedInstance];
        [v8 addObserver:v28 selector:"_networkTypeChangedNotification:" name:v29 object:v30];

        goto LABEL_40;
      }
      id v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, &v33, v32);
      free(v27);
      SSFileLog();
    }

    goto LABEL_39;
  }
  if (!v7)
  {
    long long v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  long long v11 = [v8 OSLogObject];
  if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
    v10 &= 2u;
  }
  if (!v10) {
    goto LABEL_14;
  }
  LODWORD(v33) = 138412290;
  *(void *)((char *)&v33 + 4) = objc_opt_class();
  id v12 = *(id *)((char *)&v33 + 4);
  LODWORD(v32) = 12;
  uint64_t v13 = (void *)_os_log_send_and_compose_impl();

  if (v13)
  {
    long long v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v33, v32, v33);
    free(v13);
    SSFileLog();
LABEL_14:
  }
LABEL_40:
}

intptr_t sub_1000ACAEC(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1000AD7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setSubscriptionStatus:a3 forAccountUniqueIdentifier:a2];
}

void sub_1000AE7BC(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x1000AE710);
  }
  _Unwind_Resume(exception_object);
}

id sub_1000AEB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

NSURL *sub_1000AFDA4(uint64_t a1)
{
  return +[NSURL URLWithString:a1];
}

NSDate *sub_1000AFDB4(void *a1)
{
  [a1 doubleValue];

  return +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
}

void sub_1000B2A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v10 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B2AE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000B2AF4(uint64_t a1)
{
}

void sub_1000B2AFC(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v6 = a3;
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(a1[4] + 8) + 40), a3);
  }
  else
  {
    uint64_t v7 = [*(id *)(*(void *)(a1[5] + 8) + 40) error];

    long long v8 = (id *)(*(void *)(a1[5] + 8) + 40);
    if (v7)
    {
      uint64_t v9 = [*v8 error];
      uint64_t v10 = *(void *)(a1[4] + 8);
      long long v11 = *(void **)(v10 + 40);
      *(void *)(v10 + 40) = v9;
    }
    else
    {
      objc_storeStrong(v8, a2);
      *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    }
  }
}

void sub_1000B3C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_1000B3CDC(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v6)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
    id v9 = v6;
    uint64_t v10 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v9;
  }
  else
  {
    long long v11 = [v15 error];

    if (v11)
    {
      uint64_t v12 = [v15 error];
      uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 8);
      uint64_t v10 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;
    }
    else
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 8);
      uint64_t v10 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = 0;
    }
  }
}

void sub_1000B4994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1000B4A0C(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v6)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
    id v9 = v6;
    uint64_t v10 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v9;
  }
  else
  {
    long long v11 = [v15 error];

    if (v11)
    {
      uint64_t v12 = [v15 error];
      uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 8);
      uint64_t v10 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;
    }
    else
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 8);
      uint64_t v10 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = 0;
    }
  }
}

void sub_1000B4F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

id sub_1000B4FA8(uint64_t a1, void *a2)
{
  id v3 = +[FinishedDownloadEntity queryWithDatabase:predicate:](FinishedDownloadEntity, "queryWithDatabase:predicate:", [a2 database], *(void *)(*(void *)(a1 + 32) + 96));
  v7[0] = @"finish_url";
  v7[1] = @"store_account_id";
  v7[2] = @"store_item_id";
  v7[3] = @"store_transaction_id";
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000B50BC;
  v5[3] = &unk_1003A3308;
  long long v6 = *(_OWORD *)(a1 + 40);
  return [v3 enumeratePersistentIDsAndProperties:v7 count:4 usingBlock:v5];
}

void sub_1000B50BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v11 = objc_alloc_init((Class)ISStoreURLOperation);
  objc_msgSend(v11, "setDataProvider:", +[DaemonProtocolDataProvider provider](DaemonProtocolDataProvider, "provider"));
  [v11 setUseUserSpecificURLBag:1];
  id v6 = [objc_alloc((Class)SSAuthenticationContext) initWithAccountIdentifier:a3[1]];
  [v11 setAuthenticationContext:v6];

  id v7 = objc_alloc_init((Class)SSMutableURLRequestProperties);
  uint64_t v8 = v7;
  if (*a3)
  {
    objc_msgSend(v7, "setURL:", +[NSURL URLWithString:](NSURL, "URLWithString:"));
  }
  else
  {
    [v7 setURLBagKey:@"songDownloadDone"];
    [v8 setValue:+[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", SSGetItemIdentifierFromValue()), @"songId" forRequestParameter];
    [v8 setValue:a3[3] forRequestParameter:@"download-id"];
  }
  id v9 = +[LSApplicationProxy applicationProxyForItemID:](LSApplicationProxy, "applicationProxyForItemID:", +[NSNumber numberWithLongLong:SSGetItemIdentifierFromValue()]);
  if (v9)
  {
    if ([v9 hasMIDBasedSINF])
    {
      id v10 = [+[ISDevice sharedInstance] serialNumber];
      if (v10) {
        [v8 setValue:v10 forRequestParameter:@"serialNumber"];
      }
    }
  }
  [v11 setRequestProperties:v8];

  objc_msgSend(*(id *)(a1 + 32), "addObject:", +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a2));
  [*(id *)(a1 + 40) addObject:v11];
}

uint64_t sub_1000B5294(uint64_t a1, void *a2)
{
  id v3 = -[FinishedDownloadEntity initWithPersistentID:inDatabase:]([FinishedDownloadEntity alloc], "initWithPersistentID:inDatabase:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(void *)(a1 + 48)), "longLongValue"), objc_msgSend(a2, "database"));
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [(FinishedDownloadEntity *)v3 deleteFromDatabase];

  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

void sub_1000B5534(id a1, SSSQLiteDatabase *a2)
{
}

uint64_t sub_1000B55DC(uint64_t a1)
{
  id v3 = [[PurchaseActionsDatabaseTransaction alloc] initWithDatabase:*(void *)(*(void *)(a1 + 32) + 8)];
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();

  return v4;
}

id sub_1000B56E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) readUsingTransactionBlock:*(void *)(a1 + 40)];
}

uint64_t sub_1000B578C(uint64_t a1)
{
  id v3 = [[PurchaseActionsDatabaseTransaction alloc] initWithDatabase:*(void *)(*(void *)(a1 + 32) + 8)];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

  return 1;
}

uint64_t sub_1000B58A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 database];
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000B59B8;
  v8[3] = &unk_1003A5970;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM purchase_intents_table WHERE app_bundle_id = ?;",
    0,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000B59A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B59B8(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1000B5AFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 database];
  id v5 = +[NSString stringWithFormat:@"SELECT * FROM purchase_intents_table WHERE app_bundle_id = ?"];;
  v16[0] = 0;
  v16[1] = v16;
  v16[2] = 0x3032000000;
  v16[3] = sub_1000B5CE4;
  void v16[4] = sub_1000B5CF4;
  id v17 = (id)objc_opt_new();
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000B5CFC;
  v12[3] = &unk_1003A59C0;
  id v13 = *(id *)(a1 + 32);
  id v6 = v4;
  id v14 = v6;
  char v15 = v16;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v12];
  id v7 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000B5EB0;
  block[3] = &unk_1003A59E8;
  id v10 = *(id *)(a1 + 40);
  id v11 = v16;
  dispatch_async(v7, block);

  _Block_object_dispose(v16, 8);
  return 1;
}

void sub_1000B5CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B5CE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000B5CF4(uint64_t a1)
{
}

id sub_1000B5CFC(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      id v5 = objc_alloc_init(PurchaseIntent);
      id v6 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 0)];
      [(PurchaseIntent *)v5 setProductIdentifier:v6];
      id v7 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 1)];
      [(PurchaseIntent *)v5 setAppBundleId:v7];
      uint64_t v8 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 2)];
      [(PurchaseIntent *)v5 setTimestamp:v8];

      id v9 = sqlite3_column_text(a2, 4);
      if (v9)
      {
        id v10 = +[NSString stringWithUTF8String:v9];
        [(PurchaseIntent *)v5 setProductName:v10];
      }
      id v11 = sqlite3_column_text(a2, 5);
      if (v11)
      {
        uint64_t v12 = +[NSString stringWithUTF8String:v11];
        [(PurchaseIntent *)v5 setAppName:v12];
      }
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v5];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

uint64_t sub_1000B5EB0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

uint64_t sub_1000B5F64(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 database];
  uint64_t v17 = 0;
  id v18 = &v17;
  uint64_t v19 = 0x2020000000;
  char v20 = 0;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000B6100;
  v13[3] = &unk_1003A5970;
  id v14 = *(id *)(a1 + 32);
  uint64_t v16 = &v17;
  id v5 = v4;
  id v15 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM purchase_intents_table WHERE app_bundle_id = ?;",
    0,
    v13);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000B6178;
  v9[3] = &unk_1003A5970;
  id v10 = *(id *)(a1 + 32);
  uint64_t v12 = &v17;
  id v6 = v5;
  id v11 = v6;
  objc_msgSend(v6, "prepareStatementForSQL:cache:usingBlock:", @"INSERT OR REPLACE INTO purchase_intents_table (product_identifier, app_bundle_id, timestamp, product_name, app_name) VALUES (?, ?, ?, ?, ?);",
    0,
    v9);
  uint64_t v7 = *((unsigned __int8 *)v18 + 24);

  _Block_object_dispose(&v17, 8);
  return v7;
}

void sub_1000B60E8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_1000B6100(uint64_t a1, sqlite3_stmt *a2)
{
  id v4 = [*(id *)(a1 + 32) appBundleId];
  sqlite3_bind_text(a2, 1, (const char *)[v4 UTF8String], -1, 0);

  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_1000B6178(uint64_t a1, sqlite3_stmt *a2)
{
  id v4 = [*(id *)(a1 + 32) productIdentifier];
  sqlite3_bind_text(a2, 1, (const char *)[v4 UTF8String], -1, 0);

  id v5 = [*(id *)(a1 + 32) appBundleId];
  sqlite3_bind_text(a2, 2, (const char *)[v5 UTF8String], -1, 0);

  id v6 = [*(id *)(a1 + 32) timestamp];
  sqlite3_bind_int(a2, 3, (int)[v6 intValue]);

  id v7 = [*(id *)(a1 + 32) productName];
  sqlite3_bind_text(a2, 4, (const char *)[v7 UTF8String], -1, 0);

  id v8 = [*(id *)(a1 + 32) appName];
  sqlite3_bind_text(a2, 5, (const char *)[v8 UTF8String], -1, 0);

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(unsigned char *)(v9 + 24))
  {
    id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
    uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  }
  else
  {
    id result = 0;
  }
  *(unsigned char *)(v9 + 24) = (_BYTE)result;
  return result;
}

BOOL sub_1000B63B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  id v5 = +[NSString stringWithFormat:@"SELECT * FROM purchase_intents_table WHERE app_bundle_id = ?"];;
  uint64_t v25 = 0;
  id v26 = &v25;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = sub_1000B5CE4;
  uint64_t v29 = sub_1000B5CF4;
  id v30 = (id)objc_opt_new();
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_1000B6698;
  v20[3] = &unk_1003A5A38;
  id v21 = *(id *)(a1 + 32);
  id v6 = v4;
  id v22 = v6;
  id v23 = *(id *)(a1 + 40);
  id v24 = &v25;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v20];
  if ([(id)v26[5] count])
  {
    id v7 = objc_opt_new();
    for (unint64_t i = 0; i < (unint64_t)[(id)v26[5] count]; ++i)
      [v7 appendFormat:@"(?, ?, ?, ?, ?, ?), "];
    objc_msgSend(v7, "deleteCharactersInRange:", (char *)objc_msgSend(v7, "length") - 2, 2);
    uint64_t v16 = 0;
    uint64_t v17 = &v16;
    uint64_t v18 = 0x2020000000;
    char v19 = 0;
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"INSERT OR REPLACE INTO purchase_intents_table (product_identifier, app_bundle_id, timestamp, pid, product_name, app_name) VALUES %@;",
    uint64_t v9 = v7);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1000B6824;
    v12[3] = &unk_1003A5A60;
    id v14 = &v25;
    id v15 = &v16;
    id v13 = v6;
    [v13 prepareStatementForSQL:v9 cache:0 usingBlock:v12];

    BOOL v10 = *((unsigned char *)v17 + 24) != 0;
    _Block_object_dispose(&v16, 8);
  }
  else
  {
    BOOL v10 = 1;
  }

  _Block_object_dispose(&v25, 8);
  return v10;
}

void sub_1000B6664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_1000B6698(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      id v5 = objc_alloc_init(PurchaseIntentDatabaseRow);
      [(PurchaseIntentDatabaseRow *)v5 setAppBundleId:*(void *)(a1 + 32)];
      [(PurchaseIntentDatabaseRow *)v5 setTimestamp:*(void *)(a1 + 48)];
      id v6 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 0)];
      [(PurchaseIntentDatabaseRow *)v5 setProductIdentifier:v6];
      id v7 = +[NSNumber numberWithInt:sqlite3_column_int(a2, 3)];
      [(PurchaseIntentDatabaseRow *)v5 setPid:v7];

      id v8 = sqlite3_column_text(a2, 4);
      if (v8)
      {
        uint64_t v9 = +[NSString stringWithUTF8String:v8];
        [(PurchaseIntentDatabaseRow *)v5 setProductName:v9];
      }
      BOOL v10 = sqlite3_column_text(a2, 5);
      if (v10)
      {
        id v11 = +[NSString stringWithUTF8String:v10];
        [(PurchaseIntentDatabaseRow *)v5 setAppName:v11];
      }
      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObject:v5];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

id sub_1000B6824(uint64_t a1, sqlite3_stmt *a2)
{
  if ([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count])
  {
    unint64_t v4 = 0;
    int v5 = 6;
    do
    {
      id v6 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) objectAtIndex:v4];
      id v7 = [v6 productIdentifier];
      sqlite3_bind_text(a2, v5 - 5, (const char *)[v7 UTF8String], -1, 0);

      id v8 = [v6 appBundleId];
      sqlite3_bind_text(a2, v5 - 4, (const char *)[v8 UTF8String], -1, 0);

      uint64_t v9 = [v6 timestamp];
      sqlite3_bind_int(a2, v5 - 3, (int)[v9 intValue]);

      BOOL v10 = [v6 pid];
      sqlite3_bind_int(a2, v5 - 2, (int)[v10 intValue]);

      id v11 = [v6 productName];

      if (v11)
      {
        id v12 = [v6 productName];
        sqlite3_bind_text(a2, v5 - 1, (const char *)[v12 UTF8String], -1, 0);
      }
      id v13 = [v6 appName];

      if (v13)
      {
        id v14 = [v6 appName];
        sqlite3_bind_text(a2, v5, (const char *)[v14 UTF8String], -1, 0);
      }
      ++v4;
      v5 += 6;
    }
    while (v4 < (unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count]);
  }
  id result = [*(id *)(a1 + 32) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000B6C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B6C9C(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000B6D6C;
  v9[3] = &unk_1003A5970;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v11 = v3;
  uint64_t v12 = v5;
  id v10 = v4;
  id v6 = v3;
  objc_msgSend(v6, "prepareStatementForSQL:cache:usingBlock:", @"INSERT OR REPLACE INTO install_attribution_params_table (app_adam_id, ad_network_id, campaign_id, impression_id, timestamp, attribution_signature, local_timestamp) VALUES (?, ?, ?, ?, ?, ?, ?);",
    0,
    v9);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

  return v7;
}

id sub_1000B6D6C(uint64_t a1, sqlite3_stmt *a2)
{
  id v4 = [*(id *)(a1 + 32) appAdamId];
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[v4 longLongValue]);

  id v5 = [*(id *)(a1 + 32) adNetworkId];
  sqlite3_bind_text(a2, 2, (const char *)[v5 UTF8String], -1, 0);

  id v6 = [*(id *)(a1 + 32) campaignId];
  sqlite3_bind_int64(a2, 3, (sqlite3_int64)[v6 longLongValue]);

  id v7 = [*(id *)(a1 + 32) impressionId];
  sqlite3_bind_text(a2, 4, (const char *)[v7 UTF8String], -1, 0);

  id v8 = [*(id *)(a1 + 32) timestamp];
  sqlite3_bind_int64(a2, 5, (sqlite3_int64)[v8 longLongValue]);

  id v9 = [*(id *)(a1 + 32) attributionSignature];
  sqlite3_bind_text(a2, 6, (const char *)[v9 UTF8String], -1, 0);

  id v10 = [*(id *)(a1 + 32) localTimestamp];
  sqlite3_bind_int64(a2, 7, (sqlite3_int64)[v10 longLongValue]);

  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1000B711C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  id v5 = +[NSString stringWithFormat:@"SELECT * FROM install_attribution_params_table WHERE app_adam_id = ?"];;
  v16[0] = 0;
  v16[1] = v16;
  v16[2] = 0x3032000000;
  v16[3] = sub_1000B5CE4;
  void v16[4] = sub_1000B5CF4;
  id v17 = 0;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000B72F4;
  v12[3] = &unk_1003A59C0;
  id v13 = *(id *)(a1 + 32);
  id v6 = v4;
  id v14 = v6;
  id v15 = v16;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v12];
  id v7 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000B7540;
  block[3] = &unk_1003A59E8;
  id v10 = *(id *)(a1 + 40);
  id v11 = v16;
  dispatch_async(v7, block);

  _Block_object_dispose(v16, 8);
  return 1;
}

void sub_1000B72DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B72F4(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[*(id *)(a1 + 32) longLongValue]);
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      id v5 = objc_alloc_init(InstallAttributionParams);
      uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
      id v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v5;

      id v8 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      id v9 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 0)];
      [v8 setAppAdamId:v9];

      id v10 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 1)];
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setAdNetworkId:v10];
      id v11 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      uint64_t v12 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 2)];
      [v11 setCampaignId:v12];

      id v13 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 3)];
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setImpressionId:v13];
      id v14 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      id v15 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 4)];
      [v14 setTimestamp:v15];

      uint64_t v16 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 5)];
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setAttributionSignature:v16];
      id v17 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      uint64_t v18 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 6)];
      [v17 setLocalTimestamp:v18];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

uint64_t sub_1000B7540(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
  return result;
}

uint64_t sub_1000B7758(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000B7870;
  v8[3] = &unk_1003A5970;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM install_attribution_params_table WHERE app_adam_id = ?;",
    0,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000B7858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B7870(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[*(id *)(a1 + 32) longLongValue]);
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1000B7AB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000B7BCC;
  v8[3] = &unk_1003A5970;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM install_attribution_params_table WHERE local_timestamp < ?;",
    0,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000B7BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B7BCC(uint64_t a1, sqlite3_stmt *a2)
{
  [*(id *)(a1 + 32) timeIntervalSince1970];
  sqlite3_bind_int64(a2, 1, (uint64_t)(v4 * 1000.0));
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1000B7E1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 database];
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000B7F34;
  v8[3] = &unk_1003A5970;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"INSERT INTO install_attribution_pingback_table (app_adam_id, ad_network_id, campaign_id, transaction_id, attribution_signature, pingback_url, pending, retry_count, local_timestamp) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);",
    0,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000B7F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B7F34(uint64_t a1, sqlite3_stmt *a2)
{
  double v4 = [*(id *)(a1 + 32) appAdamId];
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[v4 longLongValue]);

  id v5 = [*(id *)(a1 + 32) adNetworkId];
  sqlite3_bind_text(a2, 2, (const char *)[v5 UTF8String], -1, 0);

  uint64_t v6 = [*(id *)(a1 + 32) campaignId];
  sqlite3_bind_int64(a2, 3, (sqlite3_int64)[v6 longLongValue]);

  id v7 = [*(id *)(a1 + 32) transactionId];
  sqlite3_bind_text(a2, 4, (const char *)[v7 UTF8String], -1, 0);

  id v8 = [*(id *)(a1 + 32) attributionSignature];
  sqlite3_bind_text(a2, 5, (const char *)[v8 UTF8String], -1, 0);

  id v9 = [*(id *)(a1 + 32) pingbackUrl];
  id v10 = [v9 absoluteString];
  sqlite3_bind_text(a2, 6, (const char *)[v10 UTF8String], -1, 0);

  sqlite3_bind_int64(a2, 7, 0);
  sqlite3_bind_int64(a2, 8, (sqlite3_int64)[*(id *)(a1 + 32) retryCount]);
  id v11 = [*(id *)(a1 + 32) localTimestamp];
  sqlite3_bind_int64(a2, 9, (sqlite3_int64)[v11 longLongValue]);

  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1000B8328(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 database];
  id v5 = +[NSString stringWithFormat:@"SELECT * FROM install_attribution_pingback_table WHERE app_adam_id = ?"];;
  v16[0] = 0;
  v16[1] = v16;
  v16[2] = 0x3032000000;
  v16[3] = sub_1000B5CE4;
  void v16[4] = sub_1000B5CF4;
  id v17 = 0;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000B8500;
  v12[3] = &unk_1003A59C0;
  id v13 = *(id *)(a1 + 32);
  id v6 = v4;
  id v14 = v6;
  char v15 = v16;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v12];
  id v7 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000B8730;
  block[3] = &unk_1003A59E8;
  id v10 = *(id *)(a1 + 40);
  id v11 = v16;
  dispatch_async(v7, block);

  _Block_object_dispose(v16, 8);
  return 1;
}

void sub_1000B84E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B8500(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v3 = a1;
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[*(id *)(a1 + 32) longLongValue]);
  id result = [*(id *)(v3 + 40) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      id v5 = objc_alloc_init(InstallAttributionPingback);
      uint64_t v6 = *(void *)(*(void *)(v3 + 48) + 8);
      id v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v5;

      id v22 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 0)];
      id v21 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 1)];
      id v8 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 2)];
      id v9 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 3)];
      id v10 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 4)];
      id v11 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 5)];
      sqlite3_int64 v12 = sqlite3_column_int64(a2, 7);
      id v13 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 8)];
      uint64_t v14 = v3;
      char v15 = [InstallAttributionPingback alloc];
      uint64_t v16 = +[NSURL URLWithString:v11];
      id v17 = v15;
      uint64_t v3 = v14;
      uint64_t v18 = [(InstallAttributionPingback *)v17 initWithAppAdamId:v22 transactionId:v9 campaignId:v8 adNetworkId:v21 attributionSignature:v10 pingbackUrl:v16 retryCount:v12 localTimestamp:v13];
      uint64_t v19 = *(void *)(*(void *)(v14 + 48) + 8);
      char v20 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;

      id result = [*(id *)(v14 + 40) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

uint64_t sub_1000B8730(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
  return result;
}

uint64_t sub_1000B8948(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 database];
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000B8A60;
  v8[3] = &unk_1003A5970;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"UPDATE install_attribution_pingback_table SET pending = 1 WHERE app_adam_id = ?;",
    0,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000B8A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B8A60(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[*(id *)(a1 + 32) longLongValue]);
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1000B8B48(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 database];
  id v5 = +[NSString stringWithFormat:@"SELECT * FROM install_attribution_pingback_table WHERE pending = 1"];;
  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x3032000000;
  void v15[3] = sub_1000B5CE4;
  v15[4] = sub_1000B5CF4;
  id v16 = (id)objc_opt_new();
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000B8D1C;
  v12[3] = &unk_1003A5AD8;
  id v6 = v4;
  id v13 = v6;
  uint64_t v14 = v15;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v12];
  id v7 = dispatch_get_global_queue(0, 0);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000B8F34;
  v9[3] = &unk_1003A59E8;
  id v10 = *(id *)(a1 + 32);
  id v11 = v15;
  dispatch_async(v7, v9);

  _Block_object_dispose(v15, 8);
  return 1;
}

void sub_1000B8D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B8D1C(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 32) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      char v15 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 0)];
      double v4 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 1)];
      id v5 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 2)];
      id v6 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 3)];
      uint64_t v14 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 4)];
      id v7 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 5)];
      sqlite3_int64 v8 = sqlite3_column_int64(a2, 7);
      id v9 = +[NSNumber numberWithLongLong:sqlite3_column_int64(a2, 8)];
      id v10 = [InstallAttributionPingback alloc];
      id v11 = +[NSURL URLWithString:v7];
      uint64_t v12 = [(InstallAttributionPingback *)v10 initWithAppAdamId:v15 transactionId:v6 campaignId:v5 adNetworkId:v4 attributionSignature:v14 pingbackUrl:v11 retryCount:v8 localTimestamp:v9];

      if (v12) {
        [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v12];
      }

      id result = [*(id *)(a1 + 32) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

uint64_t sub_1000B8F34(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
  return result;
}

uint64_t sub_1000B914C(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 database];
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000B9264;
  v8[3] = &unk_1003A5970;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM install_attribution_pingback_table WHERE app_adam_id = ?;",
    0,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000B924C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B9264(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[*(id *)(a1 + 32) longLongValue]);
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1000B94A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 database];
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000B95C0;
  v8[3] = &unk_1003A5970;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM install_attribution_pingback_table WHERE local_timestamp < ? AND pending = 0;",
    0,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000B95A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B95C0(uint64_t a1, sqlite3_stmt *a2)
{
  [*(id *)(a1 + 32) timeIntervalSince1970];
  sqlite3_bind_int64(a2, 1, (uint64_t)(v4 * 1000.0));
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1000B9810(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 database];
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1000B9928;
  v8[3] = &unk_1003A5970;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"UPDATE install_attribution_pingback_table SET retry_count = retry_count + 1 WHERE app_adam_id = ?;",
    0,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000B9910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B9928(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[*(id *)(a1 + 32) longLongValue]);
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000B9A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B9A54(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = +[PurchaseActionsDatabaseSchema createOrUpdateSchemaInDatabase:*(void *)(a1 + 32)];
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

void sub_1000BA4D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 96));
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1000BA508(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = objc_loadWeakRetained((id *)(a1 + 64));
  unsigned int v4 = [v3 success];

  if (v4)
  {
    id v5 = &syslog_ptr;
    uint64_t v6 = +[SSAccountStore defaultStore];
    id v7 = [v6 accountWithUniqueIdentifier:*(void *)(a1 + 32)];

    [v7 setFreeDownloadsPasswordSetting:*(void *)(a1 + 72)];
    [v7 setPaidPurchasesPasswordSetting:*(void *)(a1 + 80)];
    sqlite3_int64 v8 = +[SSLogConfig sharedAccountsConfig];
    if (!v8)
    {
      sqlite3_int64 v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v9 = [v8 shouldLog];
    if ([v8 shouldLogToDisk]) {
      int v10 = v9 | 2;
    }
    else {
      int v10 = v9;
    }
    id v11 = [v8 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
      int v12 = v10;
    }
    else {
      int v12 = v10 & 2;
    }
    if (v12)
    {
      id v13 = WeakRetained;
      uint64_t v14 = objc_opt_class();
      id v24 = v14;
      char v15 = [v7 accountName];
      SSHashIfNeeded();
      int v25 = 138543618;
      id v26 = v14;
      id WeakRetained = v13;
      id v5 = &syslog_ptr;
      __int16 v27 = 2114;
      id v28 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v23) = 22;
      id v16 = (void *)_os_log_send_and_compose_impl();

      if (v16)
      {
        id v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v25, v23);
        free(v16);
        SSFileLog();
      }
    }
    else
    {
    }
    uint64_t v18 = [v5[371] defaultStore];
    [v18 saveAccount:v7 verifyCredentials:0 completion:0];
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  id v20 = objc_loadWeakRetained((id *)(a1 + 64));
  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v20 success]);
  SSXPCDictionarySetCFObject();

  id v21 = objc_loadWeakRetained((id *)(a1 + 64));
  [v21 error];
  SSXPCDictionarySetCFObject();

  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  id v22 = +[Daemon daemon];
  [v22 releaseKeepAliveAssertion:@"com.apple.itunesstored.AccountPasswordSettings"];
}

void sub_1000BBEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BBF24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000BBF34(uint64_t a1)
{
}

void sub_1000BBF3C(void *a1, void *a2)
{
  if (a2)
  {
    id v3 = (void *)a1[4];
    id v4 = a2;
    id v5 = [v3 buttons];
    id v6 = [v4 selectedButtonIndex];

    uint64_t v7 = [v5 objectAtIndex:v6];
    uint64_t v8 = *(void *)(a1[5] + 8);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
  }
}

id sub_1000BD16C(uint64_t a1, void *a2, id *a3)
{
  id v6 = objc_alloc_init((Class)NSAutoreleasePool);
  if (*a3)
  {
    uint64_t v7 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [*a3 longLongValue], *(void *)(a1 + 32));
    if ((objc_msgSend(-[DownloadEntity valueForProperty:](v7, "valueForProperty:", @"client_id"), "isEqualToString:", *(void *)(a1 + 40)) & 1) == 0)
    {
      uint64_t v8 = [[PersistentDownloadEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
      [(PersistentDownloadEntity *)v8 deleteFromDatabase];
      id v9 = +[SSLogConfig sharedDaemonConfig];
      if (!v9) {
        id v9 = +[SSLogConfig sharedConfig];
      }
      unsigned int v10 = [v9 shouldLog];
      if ([v9 shouldLogToDisk]) {
        int v11 = v10 | 2;
      }
      else {
        int v11 = v10;
      }
      if (!os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
        v11 &= 2u;
      }
      if (v11)
      {
        uint64_t v12 = objc_opt_class();
        id v13 = *a3;
        uint64_t v14 = *(void *)(a1 + 40);
        int v30 = 138413058;
        uint64_t v31 = v12;
        __int16 v32 = 2048;
        id v33 = a2;
        __int16 v34 = 2112;
        id v35 = v13;
        __int16 v36 = 2112;
        uint64_t v37 = v14;
        LODWORD(v29) = 42;
        __int16 v27 = &v30;
        uint64_t v15 = _os_log_send_and_compose_impl();
        if (v15)
        {
          id v16 = (void *)v15;
          id v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v30, v29);
          free(v16);
          __int16 v27 = (int *)v17;
          SSFileLog();
        }
      }
      if (!+[PersistentDownloadEntity anyInDatabase:predicate:](PersistentDownloadEntity, "anyInDatabase:predicate:", *(void *)(a1 + 32), +[SSSQLiteComparisonPredicate predicateWithProperty:@"download_id", *a3, v27 equalToValue]))
      {
        id v18 = +[SSLogConfig sharedDaemonConfig];
        if (!v18) {
          id v18 = +[SSLogConfig sharedConfig];
        }
        unsigned int v19 = [v18 shouldLog];
        if ([v18 shouldLogToDisk]) {
          int v20 = v19 | 2;
        }
        else {
          int v20 = v19;
        }
        if (!os_log_type_enabled((os_log_t)[v18 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
          v20 &= 2u;
        }
        if (v20)
        {
          uint64_t v21 = objc_opt_class();
          id v22 = *a3;
          int v30 = 138412546;
          uint64_t v31 = v21;
          __int16 v32 = 2112;
          id v33 = v22;
          LODWORD(v29) = 22;
          id v28 = &v30;
          uint64_t v23 = _os_log_send_and_compose_impl();
          if (v23)
          {
            id v24 = (void *)v23;
            int v25 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v30, v29);
            free(v24);
            id v28 = (int *)v25;
            SSFileLog();
          }
        }
        [(DownloadEntity *)v7 deleteFromDatabase];
      }
    }
  }
  return [v6 drain];
}

uint64_t sub_1000BD6B0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100401D78;
  qword_100401D78 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_1000BDD4C(uint64_t a1, BOOL a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v10 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_BOOL(v10, "1", a2);
  SSXPCDictionarySetObject();

  SSXPCDictionarySetObject();
  id v9 = [*(id *)(a1 + 32) outputConnection];
  [v9 sendMessage:v10];
}

void sub_1000BDE18(uint64_t a1, BOOL a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v10 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_BOOL(v10, "1", a2);
  SSXPCDictionarySetObject();

  SSXPCDictionarySetObject();
  id v9 = [*(id *)(a1 + 32) outputConnection];
  [v9 sendMessage:v10];
}

void sub_1000BE1C4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 error];
  SSXPCDictionarySetObject();
}

void sub_1000BE540(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  xpc_dictionary_set_int64(v4, "0", (int64_t)[v3 matchStatus]);
  id v5 = [*(id *)(a1 + 32) error];
  SSXPCDictionarySetObject();
}

void sub_1000BE97C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BE9A4(id *a1, void *a2, BOOL a3, void *a4)
{
  id v7 = a4;
  id v8 = a2;
  xpc_object_t xdict = xpc_dictionary_create(0, 0, 0);
  SSXPCDictionarySetObject();

  xpc_dictionary_set_BOOL(xdict, "3", a3);
  SSXPCDictionarySetObject();

  id v9 = [a1[4] outputConnection];
  [v9 sendMessage:xdict];

  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained && a3) {
    [a1[5] _dequeueSubscriptionStatusOperation:WeakRetained];
  }
}

void sub_1000BEE90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BEEB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    xpc_object_t v3 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v3, "0", 1011);
    xpc_dictionary_set_BOOL(v3, "1", (BOOL)[WeakRetained success]);
    id v4 = [WeakRetained error];
    SSXPCDictionarySetObject();

    id v5 = [WeakRetained downloads];
    id v6 = objc_opt_new();
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v7 = v5;
    id v8 = [v7 countByEnumeratingWithState:&v19 objects:v25 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v20;
      do
      {
        int v11 = 0;
        do
        {
          if (*(void *)v20 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = objc_msgSend(*(id *)(*((void *)&v19 + 1) + 8 * (void)v11), "dictionary", (void)v19);
          id v13 = [v12 copy];

          [v6 addObject:v13];
          int v11 = (char *)v11 + 1;
        }
        while (v9 != v11);
        id v9 = [v7 countByEnumeratingWithState:&v19 objects:v25 count:16];
      }
      while (v9);
    }

    v23[0] = @"result";
    unsigned int v14 = [WeakRetained success];
    uint64_t v15 = &__kCFBooleanFalse;
    if (v14) {
      uint64_t v15 = &__kCFBooleanTrue;
    }
    v24[0] = v15;
    v23[1] = @"count";
    id v16 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v7, "count", (void)v19));
    void v23[2] = @"downloads";
    v24[1] = v16;
    v24[2] = v6;
    id v17 = +[NSDictionary dictionaryWithObjects:v24 forKeys:v23 count:3];

    SSXPCDictionarySetObject();
    id v18 = [*(id *)(a1 + 32) outputConnection];
    [v18 sendMessage:v3];

    [WeakRetained setCompletionBlock:0];
  }
}

void sub_1000BF63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BF664(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
    id v4 = reply;
    if (reply)
    {
      xpc_dictionary_set_int64(reply, "0", 1011);
      xpc_dictionary_set_BOOL(v4, "1", (BOOL)[v6 success]);
      id v5 = [v6 error];
      SSXPCDictionarySetObject();

      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), v4);
    }
    [*(id *)(a1 + 48) setClient:0 forOperation:v6];

    id WeakRetained = v6;
  }
}

void sub_1000BFADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BFB04(id *a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
    SSXPCDictionarySetObject();
    SSXPCDictionarySetObject();
    id v8 = [a1[4] outputConnection];
    [v8 sendMessage:v7];

    [a1[5] setClient:0 forOperation:WeakRetained];
  }
}

void sub_1000BFF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BFF38(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
    SSXPCDictionarySetObject();
    SSXPCDictionarySetObject();
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
    [*(id *)(a1 + 48) setClient:0 forOperation:WeakRetained];
  }
}

void sub_1000C0580(uint64_t a1, int a2, void *a3, uint64_t a4, void *a5)
{
  LODWORD(v7) = a2;
  id v9 = a3;
  id v10 = a5;
  int v11 = +[SSLogConfig sharedDaemonConfig];
  if (!v11)
  {
    int v11 = +[SSLogConfig sharedConfig];
  }
  unsigned int v12 = [v11 shouldLog];
  if ([v11 shouldLogToDisk]) {
    int v13 = v12 | 2;
  }
  else {
    int v13 = v12;
  }
  unsigned int v14 = [v11 OSLogObject];
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    int v15 = v13;
  }
  else {
    int v15 = v13 & 2;
  }
  if (v15)
  {
    BOOL v16 = v7;
    BOOL v7 = (BOOL)v9;
    uint64_t v17 = a4;
    id v18 = objc_opt_class();
    uint64_t v19 = a1;
    long long v20 = *(void **)(a1 + 40);
    id v29 = v18;
    long long v21 = [v20 itemIdentifier];
    int v30 = 138413058;
    uint64_t v31 = v18;
    a4 = v17;
    id v9 = (id)v7;
    LOBYTE(v7) = v16;
    __int16 v32 = 2112;
    id v33 = v21;
    __int16 v34 = 1024;
    BOOL v35 = v16;
    __int16 v36 = 2048;
    uint64_t v37 = a4;
    LODWORD(v28) = 38;
    __int16 v27 = &v30;
    long long v22 = (void *)_os_log_send_and_compose_impl();

    a1 = v19;
    if (v22)
    {
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, &v30, v28);
      uint64_t v23 = (int *)objc_claimAutoreleasedReturnValue();
      free(v22);
      __int16 v27 = v23;
      SSFileLog();
    }
  }
  else
  {
  }
  xpc_object_t v24 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v24, "0", 1011);
  xpc_dictionary_set_BOOL(v24, "1", v7);
  SSXPCDictionarySetObject();

  if (*(unsigned char *)(a1 + 56))
  {
    int v25 = +[NSNumber numberWithInt:a4];
    SSXPCDictionarySetObject();

    SSXPCDictionarySetObject();
  }
  id v26 = objc_msgSend(*(id *)(a1 + 48), "outputConnection", v27);
  [v26 sendMessage:v24];
}

void sub_1000C0B24(uint64_t a1, void *a2)
{
  xpc_object_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  xpc_dictionary_set_BOOL(v4, "1", (BOOL)[v3 success]);
  id v5 = [*(id *)(a1 + 32) error];
  SSXPCDictionarySetObject();
}

void sub_1000C0EEC(uint64_t a1, void *a2)
{
  xpc_object_t xdict = a2;
  unsigned __int8 v3 = [*(id *)(a1 + 32) success];
  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    id v5 = [v4 URLBag];
    id v6 = v5;
    if (v5)
    {
      BOOL v7 = [v5 URLBagDictionary];
      SSXPCDictionarySetObject();

      [v6 invalidationTime];
      xpc_dictionary_set_double(xdict, "1", v8);
      id v9 = [v6 storeFrontIdentifier];
      SSXPCDictionarySetObject();
    }
  }
  else
  {
    id v6 = [v4 error];
    SSXPCDictionarySetObject();
  }
}

void sub_1000C137C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C13A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v13 = WeakRetained;
    xpc_object_t v3 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v3, "0", 1011);
    if ([v13 success])
    {
      id v4 = objc_alloc((Class)SSProtocolConditionalEvaluator);
      id v5 = [v13 dataProvider];
      id v6 = [v5 output];
      id v7 = [v4 initWithDictionary:v6];

      double v8 = [v7 dictionaryByEvaluatingConditions];
      SSXPCDictionarySetObject();

      id v9 = [v13 response];
      id v10 = objc_msgSend(v9, "itunes_expirationDate");

      if (v10) {
        SSXPCDictionarySetObject();
      }
    }
    int v11 = [v13 error];
    SSXPCDictionarySetObject();

    unsigned int v12 = [*(id *)(a1 + 32) outputConnection];
    [v12 sendMessage:v3];

    [v13 setCompletionBlock:0];
    id WeakRetained = v13;
  }
}

void sub_1000C1930(uint64_t a1, void *a2)
{
  xpc_object_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 lookupResponse];
  SSXPCDictionarySetObject();

  id v6 = [*(id *)(a1 + 32) error];
  SSXPCDictionarySetObject();
}

void sub_1000C1E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000C1E9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4)
  {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  id v7 = [v4 OSLogObject];
  if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    v6 &= 2u;
  }
  if (!v6) {
    goto LABEL_11;
  }
  *(_DWORD *)int v11 = 138412546;
  *(void *)&v11[4] = objc_opt_class();
  *(_WORD *)&v11[12] = 2112;
  *(void *)&v11[14] = v3;
  id v8 = *(id *)&v11[4];
  LODWORD(v10) = 22;
  id v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, v11, v10, *(_OWORD *)v11, *(void *)&v11[16]);
    free(v9);
    SSFileLog();
LABEL_11:
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3 == 0;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000C2644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C266C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    xpc_object_t v3 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v3, "0", 1011);
    xpc_dictionary_set_BOOL(v3, "1", (BOOL)[v7 success]);
    id v4 = [v7 error];
    SSXPCDictionarySetObject();

    unsigned int v5 = [v7 rentalInformation];
    if (v5) {
      SSXPCDictionarySetObject();
    }
    int v6 = [*(id *)(a1 + 32) outputConnection];
    [v6 sendMessage:v3];

    [v7 setCompletionBlock:0];
    id WeakRetained = v7;
  }
}

void sub_1000C2BC8(uint64_t a1, int a2, void *a3, void *a4)
{
  LODWORD(v5) = a2;
  id v7 = a3;
  id v8 = a4;
  id v9 = +[SSLogConfig sharedDaemonConfig];
  if (!v9)
  {
    id v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  unsigned int v12 = [v9 OSLogObject];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    int v13 = v11;
  }
  else {
    int v13 = v11 & 2;
  }
  if (v13)
  {
    int v14 = (int)v5;
    unsigned int v5 = objc_opt_class();
    int v15 = *(void **)(a1 + 32);
    uint64_t v23 = a1;
    id v16 = v5;
    uint64_t v17 = [v15 bundleID];
    [v7 componentsJoinedByString:@", "];
    int v24 = 138413058;
    int v25 = v5;
    LOBYTE(v5) = v14;
    __int16 v26 = 2112;
    __int16 v27 = v17;
    __int16 v28 = 1024;
    int v29 = v14;
    __int16 v30 = 2112;
    id v31 = (id)objc_claimAutoreleasedReturnValue();
    LODWORD(v22) = 38;
    id v18 = (void *)_os_log_send_and_compose_impl();

    a1 = v23;
    if (v18)
    {
      uint64_t v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v24, v22);
      free(v18);
      SSFileLog();
    }
  }
  else
  {
  }
  xpc_object_t v20 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_BOOL(v20, "1", (BOOL)v5);
  SSXPCDictionarySetObject();

  SSXPCDictionarySetObject();
  long long v21 = [*(id *)(a1 + 40) outputConnection];
  [v21 sendMessage:v20];
}

void sub_1000C32AC(uint64_t a1, void *a2)
{
  xpc_object_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  unsigned int v5 = [v3 URLResponse];
  SSXPCDictionarySetObject();

  id v6 = [*(id *)(a1 + 32) error];
  SSXPCDictionarySetObject();
}

uint64_t sub_1000C36E8(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_string)
  {
    id v4 = (void *)SSXPCCreateCFObjectFromXPCObject();
    [*(id *)(a1 + 40) addObject:v4];
  }
  return 1;
}

void sub_1000C3A58(uint64_t a1, void *a2)
{
  id v8 = a2;
  unsigned __int8 v3 = [*(id *)(a1 + 32) success];
  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    unsigned int v5 = [v4 URLBag];
    id v6 = v5;
    if (v5)
    {
      id v7 = [v5 storeFrontIdentifier];
      SSXPCDictionarySetObject();
    }
  }
  else
  {
    id v6 = [v4 error];
    SSXPCDictionarySetObject();
  }
}

void sub_1000C3EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C3F18(id *a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    xpc_object_t v4 = xpc_dictionary_create(0, 0, 0);
    SSXPCDictionarySetObject();
    unsigned int v5 = [a1[4] outputConnection];
    [v5 sendMessage:v4];

    [a1[5] setClient:0 forOperation:WeakRetained];
  }
}

void sub_1000C4538(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1000C4560(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    xpc_object_t v3 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v3, "0", 1011);
    xpc_dictionary_set_BOOL(v3, "1", (BOOL)[WeakRetained success]);
    xpc_object_t v4 = [WeakRetained error];
    SSXPCDictionarySetObject();

    unsigned int v5 = [WeakRetained dataProvider];
    id v6 = [v5 output];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      SSXPCDictionarySetObject();
LABEL_17:
      int v13 = objc_msgSend(*(id *)(a1 + 32), "outputConnection", v14);
      [v13 sendMessage:v3];

      goto LABEL_18;
    }
    id v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7)
    {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    unsigned int v10 = [v7 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      int v11 = v9;
    }
    else {
      int v11 = v9 & 2;
    }
    if (v11)
    {
      v16[0] = 0;
      LODWORD(v15) = 2;
      int v14 = v16;
      unsigned int v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_16:

        goto LABEL_17;
      }
      unsigned int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, v16, v15);
      free(v12);
      int v14 = v10;
      SSFileLog();
    }

    goto LABEL_16;
  }
LABEL_18:
}

void sub_1000C4D3C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1000C4D64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    xpc_object_t v3 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v3, "0", 1011);
    xpc_dictionary_set_BOOL(v3, "1", (BOOL)[WeakRetained success]);
    xpc_object_t v4 = [WeakRetained error];
    SSXPCDictionarySetObject();

    unsigned int v5 = [WeakRetained dataProvider];
    id v6 = [v5 output];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      SSXPCDictionarySetObject();
LABEL_17:
      int v13 = objc_msgSend(*(id *)(a1 + 32), "outputConnection", v14);
      [v13 sendMessage:v3];

      goto LABEL_18;
    }
    id v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7)
    {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    unsigned int v10 = [v7 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      int v11 = v9;
    }
    else {
      int v11 = v9 & 2;
    }
    if (v11)
    {
      v16[0] = 0;
      LODWORD(v15) = 2;
      int v14 = v16;
      unsigned int v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_16:

        goto LABEL_17;
      }
      unsigned int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, v16, v15);
      free(v12);
      int v14 = v10;
      SSFileLog();
    }

    goto LABEL_16;
  }
LABEL_18:
}

void sub_1000C5230(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  xpc_object_t v6 = xpc_dictionary_create(0, 0, 0);
  id v7 = [v5 copyXPCEncoding];

  if (v7) {
    xpc_dictionary_set_value(v6, "1", v7);
  }
  SSXPCDictionarySetObject();
  unsigned int v8 = [*(id *)(a1 + 32) outputConnection];
  [v8 sendMessage:v6];

  +[SSVSubscriptionStatusCoordinator endSuspendingSubscriptionStatusChangeNotifications];
}

void sub_1000C564C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v10 = objc_alloc_init((Class)SSVServerAuthenticateResponse);
  xpc_object_t v4 = [*(id *)(a1 + 32) authenticatedAccountDSID];
  [v10 setAuthenticatedAccountIdentifier:v4];

  id v5 = [*(id *)(a1 + 32) redirectURL];
  [v10 setRedirectURL:v5];

  xpc_object_t v6 = [*(id *)(a1 + 40) buttons];
  id v7 = [*(id *)(a1 + 32) performedButton];
  objc_msgSend(v10, "setPerformedButtonIndex:", objc_msgSend(v6, "indexOfObject:", v7));

  unsigned int v8 = [*(id *)(a1 + 32) selectedButton];
  objc_msgSend(v10, "setSelectedButtonIndex:", objc_msgSend(v6, "indexOfObject:", v8));

  SSXPCDictionarySetObject();
  id v9 = [*(id *)(a1 + 32) error];
  SSXPCDictionarySetObject();
}

void sub_1000C5F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C5F30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v2, "0", 166);
    if ([WeakRetained success])
    {
      id v3 = [WeakRetained dataProvider];
      xpc_object_t v4 = [v3 output];
      SSXPCDictionarySetObject();
    }
    id v5 = [WeakRetained error];
    SSXPCDictionarySetObject();

    xpc_object_t v6 = [*(id *)(a1 + 32) outputConnection];
    [v6 sendMessage:v2];

    [WeakRetained setCompletionBlock:0];
  }
}

void sub_1000C6408(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  xpc_dictionary_set_BOOL(v4, "1", (BOOL)[v3 success]);
  id v5 = [*(id *)(a1 + 32) error];
  SSXPCDictionarySetObject();

  id v6 = [*(id *)(a1 + 32) response];
  SSXPCDictionarySetObject();
}

void sub_1000C6D60(id *a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if ([a1[4] length] || !objc_msgSend(v7, "isEqualToString:", @"action"))
  {
    if ([v7 isEqualToString:@"code"])
    {
      [a1[5] addObject:v5];
    }
    else if ([v7 isEqualToString:@"url"])
    {
      id v6 = [objc_alloc((Class)NSURL) initWithString:v5];
      if (v6) {
        [a1[6] addObject:v6];
      }
    }
  }
  else
  {
    [a1[4] setString:v5];
  }
}

id sub_1000C72E8(uint64_t a1)
{
  [*(id *)(a1 + 32) setClient:*(void *)(a1 + 40) forOperation:*(void *)(a1 + 48)];
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 40))
  {
    id v3 = *(void **)(v2 + 48);
    if (!v3)
    {
      id v4 = objc_alloc_init((Class)NSMutableArray);
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = *(void **)(v5 + 48);
      *(void *)(v5 + 48) = v4;

      id v3 = *(void **)(*(void *)(a1 + 32) + 48);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    return [v3 addObject:v7];
  }
  else
  {
    objc_storeStrong((id *)(v2 + 40), *(id *)(a1 + 48));
    id v9 = *(void **)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 48);
    return [v9 addOperation:v10];
  }
}

void sub_1000C7440(uint64_t a1)
{
  [*(id *)(a1 + 32) setClient:0 forOperation:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 40);
  if (v3 != *(void **)(a1 + 40))
  {
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4)
    {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    uint64_t v7 = [v4 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      int v8 = v6;
    }
    else {
      int v8 = v6 & 2;
    }
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 40);
      int v16 = 138412546;
      uint64_t v17 = v9;
      __int16 v18 = 2112;
      uint64_t v19 = v10;
      LODWORD(v15) = 22;
      int v11 = (void *)_os_log_send_and_compose_impl();

      if (!v11)
      {
LABEL_14:

        uint64_t v2 = *(void *)(a1 + 32);
        id v3 = *(void **)(v2 + 40);
        goto LABEL_15;
      }
      uint64_t v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v16, v15);
      free(v11);
      SSFileLog();
    }

    goto LABEL_14;
  }
LABEL_15:
  *(void *)(v2 + 40) = 0;

  if ([*(id *)(*(void *)(a1 + 32) + 48) count])
  {
    unsigned int v12 = [*(id *)(*(void *)(a1 + 32) + 48) firstObject];
    [*(id *)(*(void *)(a1 + 32) + 48) removeObjectAtIndex:0];
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), v12);
    [*(id *)(a1 + 32) addOperation:v12];
    if (![*(id *)(*(void *)(a1 + 32) + 48) count])
    {
      uint64_t v13 = *(void *)(a1 + 32);
      int v14 = *(void **)(v13 + 48);
      *(void *)(v13 + 48) = 0;
    }
  }
}

void sub_1000C7B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1000C7B38(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained(a1 + 6);
    id v4 = [v3 authenticateResponse];

    unsigned int v5 = WeakRetained[2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000C7C24;
    block[3] = &unk_1003A4298;
    id v8 = a1[4];
    id v9 = v4;
    uint64_t v10 = WeakRetained;
    id v6 = v4;
    dispatch_async(v5, block);
  }
}

id sub_1000C7C24(uint64_t a1)
{
  [*(id *)(a1 + 32) setAuthenticateResponse:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 _finishResponse:v3];
}

id sub_1000C8368()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401D88 = (uint64_t)result;
  return result;
}

id sub_1000C8500(uint64_t a1)
{
  return [*(id *)(a1 + 32) _commitScheduledLibraryItems];
}

void sub_1000C8668(id a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_1000C86E0;
  v1[3] = &unk_1003A5EC0;
  objc_msgSend(+[ML3MusicLibrary sharedLibrary](ML3MusicLibrary, "sharedLibrary"), "performDatabaseTransactionWithBlock:", v1);
}

id sub_1000C86E0(uint64_t a1)
{
  id v1 = +[ML3Track queryWithLibrary:predicate:](ML3Track, "queryWithLibrary:predicate:", *(void *)(a1 + 32), +[ML3ComparisonPredicate predicateWithProperty:ML3TrackPropertyIsOTAPurchased equalToInteger:1]);

  return [v1 deleteAllEntitiesFromLibrary];
}

id sub_1000C87B0(uint64_t a1)
{
  id v2 = +[ML3MusicLibrary sharedLibrary];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000C8844;
  v4[3] = &unk_1003A5EE8;
  long long v5 = *(_OWORD *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 48);
  id v6 = v2;
  return [v2 performDatabaseTransactionWithBlock:v4];
}

uint64_t sub_1000C8844(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        char v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        objc_msgSend(*(id *)(a1 + 40), "_removeDownloadWithIdentifier:canceled:inLibrary:", objc_msgSend(v7, "longLongValue"), *(unsigned __int8 *)(a1 + 56), *(void *)(a1 + 48));
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
  return 1;
}

id sub_1000C89DC(uint64_t a1)
{
  id v2 = +[ML3MusicLibrary sharedLibrary];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1000C8A70;
  v6[3] = &unk_1003A5F10;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  void v6[5] = v2;
  v6[6] = v4;
  char v7 = *(unsigned char *)(a1 + 48);
  void v6[4] = v3;
  return [v2 performDatabaseTransactionWithBlock:v6];
}

id sub_1000C8A70(uint64_t a1)
{
  return [*(id *)(a1 + 32) _removeDownloadWithIdentifier:*(void *)(a1 + 48) canceled:*(unsigned __int8 *)(a1 + 56) inLibrary:*(void *)(a1 + 40)];
}

void sub_1000C8CC0(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  if (!v2)
  {
    *(void *)(*(void *)(a1 + 32) + 24) = objc_alloc_init((Class)NSMutableArray);
    id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  }
  if (![v2 count]) {
    objc_msgSend(+[Daemon daemon](Daemon, "daemon"), "takeKeepAliveAssertion:", @"com.apple.itunesstored.IPodLibrary");
  }
  [*(id *)(*(void *)(a1 + 32) + 24) addObjectsFromArray:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(a1 + 32);
  if (!*(void *)(v3 + 32))
  {
    *(void *)(*(void *)(a1 + 32) + 32) = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, *(dispatch_queue_t *)(v3 + 8));
    uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 32);
    dispatch_time_t v5 = dispatch_time(0, 5000000000);
    dispatch_source_set_timer(v4, v5, 0, 0);
    uint64_t v6 = *(void *)(a1 + 32);
    char v7 = *(NSObject **)(v6 + 32);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_1000C8DFC;
    handler[3] = &unk_1003A33A8;
    handler[4] = v6;
    dispatch_source_set_event_handler(v7, handler);
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 32));
  }
}

id sub_1000C8DFC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _commitScheduledLibraryItems];
}

id sub_1000C8E70(uint64_t a1)
{
  id v2 = objc_msgSend(+[ML3MusicLibrary sharedLibrary](ML3MusicLibrary, "sharedLibrary"), "accountCacheDatabase");
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);

  return [v2 setAppleID:v3 forDSID:v4];
}

id sub_1000CA1B4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];

  return [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.IPodLibrary"];
}

uint64_t sub_1000CC850(uint64_t a1, uint64_t a2)
{
  return 1;
}

uint64_t sub_1000CC920(uint64_t a1, uint64_t a2)
{
  return 1;
}

uint64_t sub_1000CC9D0(uint64_t a1, void *a2)
{
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  id v5 = objc_alloc_init((Class)NSMutableDictionary);
  id v50 = [a2 database];
  id v46 = +[DownloadHandlerManager handlerManager];
  uint64_t v51 = a1;
  id v6 = [*(id *)(a1 + 32) responseDownloads];
  long long v56 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v56 objects:v65 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v57;
    do
    {
      for (unint64_t i = 0; i != v8; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v57 != v9) {
          objc_enumerationMutation(v6);
        }
        long long v11 = *(void **)(*((void *)&v56 + 1) + 8 * i);
        id v12 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithItemIdentifier:", objc_msgSend(v11, "itemIdentifier"));
        [v5 setObject:v11 forKey:v12];

        id v13 = [v11 podcastEpisodeGUID];
        if (v13) {
          [v4 setObject:v11 forKey:v13];
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v56 objects:v65 count:16];
    }
    while (v8);
  }
  long long v47 = v4;
  id v45 = [*(id *)(v51 + 32) responseError];
  id v49 = objc_msgSend(*(id *)(v51 + 40), "_downloadRestoreStateForError:");
  id v14 = [*(id *)(v51 + 32) requestItems];
  long long v52 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  id obj = v14;
  id v15 = [v14 countByEnumeratingWithState:&v52 objects:v64 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v53;
    id v44 = a2;
    do
    {
      for (j = 0; j != v16; j = (char *)j + 1)
      {
        if (*(void *)v53 != v17) {
          objc_enumerationMutation(obj);
        }
        uint64_t v19 = *(void **)(*((void *)&v52 + 1) + 8 * (void)j);
        xpc_object_t v20 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [v19 downloadIdentifier], v50);
        id v21 = [v19 storeItemID];
        id v22 = v21;
        if (v21 && [v21 longLongValue] && (id v23 = objc_msgSend(v5, "objectForKey:", v22)) != 0
          || (id v24 = objc_msgSend(v19, "podcastEpisodeGUID", v42)) != 0
          && (id v23 = [v47 objectForKey:v24]) != 0)
        {
          objc_msgSend(*(id *)(v51 + 40), "_updateDownloadEntity:withTransaction:storeDownload:accountID:", v20, a2, v23, 0, v42);
        }
        else if (v49)
        {
          id v25 = objc_msgSend(*(id *)(v51 + 40), "_copyDownloadSessionPropertiesForItem:download:", v19, v20, v23);
          if ([v46 canOpenSessionWithProperties:v25])
          {
            id v26 = +[SSLogConfig sharedDaemonConfig];
            if (!v26) {
              id v26 = +[SSLogConfig sharedConfig];
            }
            unsigned int v27 = [v26 shouldLog];
            if ([v26 shouldLogToDisk]) {
              int v28 = v27 | 2;
            }
            else {
              int v28 = v27;
            }
            if (!os_log_type_enabled((os_log_t)[v26 OSLogObject], OS_LOG_TYPE_ERROR)) {
              v28 &= 2u;
            }
            if (v28)
            {
              uint64_t v29 = objc_opt_class();
              int v60 = 138543618;
              uint64_t v61 = v29;
              __int16 v62 = 2114;
              uint64_t v63 = v19;
              LODWORD(v43) = 22;
              long long v42 = &v60;
              uint64_t v30 = _os_log_send_and_compose_impl();
              if (v30)
              {
                id v31 = (void *)v30;
                __int16 v32 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v30, 4, &v60, v43);
                free(v31);
                long long v42 = (int *)v32;
                SSFileLog();
              }
            }
            [(DownloadEntity *)v20 setValue:+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v49, v42) forProperty:@"download_state.restore_state"];
            a2 = v44;
          }
          else if (v49 == (id)1)
          {
            id v39 = [v19 error];
            if (v22 && !v39) {
              id v39 = [*(id *)(v51 + 32) errorForItemIdentifier:v22];
            }
            if (v39) {
              id v40 = v39;
            }
            else {
              id v40 = v45;
            }
            [*(id *)(v51 + 40) _hardFailRestoreItem:v19 download:v20 transaction:a2 error:v40];
          }
          else
          {
            objc_msgSend(a2, "unionChangeset:", objc_msgSend(*(id *)(v51 + 40), "_softFailRestoreItem:download:withRestoreState:error:", v19, v20, v49, v45));
          }
        }
        else
        {
          id v33 = +[SSLogConfig sharedDaemonConfig];
          if (!v33) {
            id v33 = +[SSLogConfig sharedConfig];
          }
          unsigned int v34 = [v33 shouldLog];
          if ([v33 shouldLogToDisk]) {
            v34 |= 2u;
          }
          if (!os_log_type_enabled((os_log_t)[v33 OSLogObject], OS_LOG_TYPE_ERROR)) {
            v34 &= 2u;
          }
          if (v34)
          {
            uint64_t v35 = objc_opt_class();
            int v60 = 138543618;
            uint64_t v61 = v35;
            __int16 v62 = 2114;
            uint64_t v63 = v19;
            LODWORD(v43) = 22;
            long long v42 = &v60;
            uint64_t v36 = _os_log_send_and_compose_impl();
            if (v36)
            {
              uint64_t v37 = (void *)v36;
              id v38 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v36, 4, &v60, v43);
              free(v37);
              long long v42 = (int *)v38;
              SSFileLog();
            }
          }
        }
      }
      id v16 = [obj countByEnumeratingWithState:&v52 objects:v64 count:16];
    }
    while (v16);
  }

  return 1;
}

id sub_1000CEC30(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v4 = *(void **)(a1 + 32);
  id result = [v4 countByEnumeratingWithState:&v36 objects:v63 count:16];
  id v35 = result;
  if (result)
  {
    uint64_t v34 = *(void *)v37;
    uint64_t v33 = SSDownloadPropertyBundleIdentifier;
    uint64_t v32 = SSDownloadPropertyIsRestore;
    uint64_t v31 = SSDownloadPropertyIsStoreDownload;
    uint64_t v30 = SSDownloadPropertyKind;
    uint64_t v29 = SSDownloadPropertyPodcastEpisodeGUID;
    uint64_t v28 = SSDownloadPropertyStoreAccountIdentifier;
    uint64_t v27 = SSDownloadPropertyStoreAccountAppleID;
    uint64_t v26 = SSDownloadPropertyStoreCollectionIdentifier;
    uint64_t v25 = SSDownloadPropertyStoreFrontIdentifier;
    uint64_t v24 = SSDownloadPropertyStoreItemIdentifier;
    uint64_t v23 = SSDownloadPropertyStoreMatchStatus;
    uint64_t v22 = SSDownloadPropertyStoreSagaIdentifier;
    uint64_t v21 = SSDownloadPropertyStoreSoftwareVersionIdentifier;
    uint64_t v20 = SSDownloadPropertyTitle;
    uint64_t v18 = SSDownloadAssetTypeMedia;
    uint64_t v17 = SSDownloadAssetPropertyIsDRMFree;
    uint64_t v16 = SSDownloadAssetPropertyStoreFlavor;
    uint64_t v15 = SSDownloadAssetPropertyVideoDimensions;
    uint64_t v19 = v4;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v37 != v34) {
          objc_enumerationMutation(v4);
        }
        id v7 = *(void **)(*((void *)&v36 + 1) + 8 * (void)v6);
        uint64_t v9 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [v7 longLongValue], v3);
        v62[0] = @"client_id";
        v62[1] = @"handler_id";
        v62[2] = @"IFNULL(download_state.has_restore_data, -1)";
        v62[3] = @"IFNULL(download_state.restore_data_size, 0)";
        v62[4] = @"bundle_id";
        v62[5] = @"is_restore";
        v62[6] = @"is_from_store";
        v62[7] = @"kind";
        v62[8] = @"podcast_episode_guid";
        v62[9] = @"store_account_id";
        v62[10] = @"store_account_name";
        v62[11] = @"store_collection_id";
        v62[12] = @"store_front_id";
        v62[13] = @"store_item_id";
        v62[14] = @"store_match_status";
        v62[15] = @"store_saga_id";
        v62[16] = @"store_software_version_id";
        v62[17] = @"title";
        memset(v47, 0, sizeof(v47));
        uint64_t v48 = v33;
        uint64_t v49 = v32;
        uint64_t v50 = v31;
        uint64_t v51 = v30;
        uint64_t v52 = v29;
        uint64_t v53 = v28;
        uint64_t v54 = v27;
        uint64_t v55 = v26;
        uint64_t v56 = v25;
        uint64_t v57 = v24;
        uint64_t v58 = v23;
        uint64_t v59 = v22;
        uint64_t v60 = v21;
        uint64_t v61 = v20;
        [(DownloadEntity *)v9 getValues:&v43 forProperties:v62 count:18];
        if ([v45 BOOLValue] && (objc_msgSend(v46, "BOOLValue") & 1) == 0)
        {
          id v10 = v3;
          long long v11 = -[RestoreDownloadItem initWithDownloadIdentifier:]([RestoreDownloadItem alloc], "initWithDownloadIdentifier:", [v7 longLongValue]);
          for (uint64_t i = 32; i != 144; i += 8)
            [(RestoreDownloadItem *)v11 setValue:*(uint64_t *)((char *)&v43 + i) forDownloadProperty:*(void *)((char *)v47 + i)];
          if (v44) {
            -[RestoreDownloadItem setHandlerIdentifier:](v11, "setHandlerIdentifier:", [v44 longLongValue]);
          }
          [(RestoreDownloadItem *)v11 setClientIdentifier:v43];
          id v13 = [(DownloadEntity *)v9 anyAssetForAssetType:v18];
          if (v13)
          {
            v42[0] = @"is_drm_free";
            v42[1] = @"store_flavor";
            v42[2] = @"video_dimensions";
            v41[0] = v17;
            v41[1] = v16;
            v41[2] = v15;
            [v13 getValues:v40 forProperties:v42 count:3];
            for (uint64_t j = 0; j != 3; ++j)
              [(RestoreDownloadItem *)v11 setValue:*(void *)&v40[j * 8] forAssetProperty:v41[j]];
          }
          [*(id *)(a1 + 40) addObject:v11];

          id v3 = v10;
          id v4 = v19;
        }

        id v6 = (char *)v6 + 1;
      }
      while (v6 != v35);
      id result = [v4 countByEnumeratingWithState:&v36 objects:v63 count:16];
      id v35 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_1000CF228(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id obj = *(id *)(a1 + 32);
  id v4 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        id v9 = objc_alloc_init((Class)NSMutableDictionary);
        objc_msgSend(v9, "setObject:forKey:", +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(v8, "hasRestoreData")), @"download_state.has_restore_data");
        objc_msgSend(v9, "setObject:forKey:", +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v8, "restoreDataSize")), @"download_state.restore_data_size");
        id v10 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [v8 downloadIdentifier], v3);
        [(DownloadEntity *)v10 setValuesWithDictionary:v9];
      }
      id v5 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }
  return 1;
}

void sub_1000CF87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1000CF8D8(uint64_t a1, uint64_t a2)
{
}

void sub_1000CF8E8(uint64_t a1)
{
}

intptr_t sub_1000CF8F4(void *a1, void *a2, void *a3)
{
  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = [a2 authenticatedAccount] != 0;
  *(void *)(*(void *)(a1[6] + 8) + 40) = [a2 error];
  if (!*(void *)(*(void *)(a1[6] + 8) + 40)) {
    *(void *)(*(void *)(a1[6] + 8) + 40) = a3;
  }
  uint64_t v6 = a1[4];

  return dispatch_semaphore_signal(v6);
}

uint64_t sub_1000D0554(uint64_t a1, void *a2, void *a3)
{
  if (objc_msgSend(a2, "isEqual:")) {
    return 0;
  }
  if (!*(void *)(a1 + 32)) {
    goto LABEL_9;
  }
  if (objc_msgSend(a2, "isEqual:")) {
    return -1;
  }
  if (*(void *)(a1 + 32) && (objc_msgSend(a3, "isEqual:") & 1) != 0) {
    return 1;
  }
LABEL_9:
  id v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "objectForKey:", a2), "count");
  id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "objectForKey:", a3), "count");
  if (v7 == v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = -1;
  }
  if ((uint64_t)v7 < (uint64_t)v8) {
    return 1;
  }
  else {
    return v9;
  }
}

uint64_t sub_1000D07BC()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = qword_100401D98;
  qword_100401D98 = (uint64_t)v0;

  return _objc_release_x1(v0, v1);
}

void sub_1000D0BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t sub_1000D0C10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000D0C20(uint64_t a1)
{
}

intptr_t sub_1000D0C28(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(*(void *)(a1 + 64) + 8);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = [v2 _createAttestationDataForAccountIdentifier:v3 purpose:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
  {
    uint64_t v9 = ISWeakLinkedStringConstantForString();
    id v10 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) domain];
    if ([v10 isEqualToString:v9])
    {
      id v11 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) code];

      if (v11 != (id)-3)
      {
LABEL_30:

        return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
      }
      uint64_t v12 = *(void **)(a1 + 32);
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(a1 + 72);
      id v40 = 0;
      unsigned int v15 = [v12 _generateKeychainTokensForAccountIdentifier:v13 purpose:v14 error:&v40];
      id v16 = v40;
      id v17 = v40;
      id v10 = v17;
      if (v15)
      {
        uint64_t v18 = *(void **)(a1 + 32);
        uint64_t v19 = *(void *)(a1 + 40);
        uint64_t v20 = *(void *)(a1 + 72);
        id v39 = v10;
        uint64_t v21 = [v18 _createAttestationDataForAccountIdentifier:v19 purpose:v20 error:&v39];
        id v22 = v39;

        uint64_t v23 = *(void *)(*(void *)(a1 + 56) + 8);
        uint64_t v24 = *(NSObject **)(v23 + 40);
        *(void *)(v23 + 40) = v21;
        id v10 = v22;
LABEL_28:

        goto LABEL_29;
      }
      if (v17)
      {
        objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v16);
        uint64_t v24 = +[SSLogConfig sharedDaemonConfig];
        if (!v24)
        {
          uint64_t v24 = +[SSLogConfig sharedConfig];
        }
        unsigned int v25 = [v24 shouldLog];
        if ([v24 shouldLogToDisk]) {
          int v26 = v25 | 2;
        }
        else {
          int v26 = v25;
        }
        uint64_t v27 = [v24 OSLogObject];
        if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
          v26 &= 2u;
        }
        if (v26)
        {
          uint64_t v28 = objc_opt_class();
          uint64_t v29 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
          int v42 = 138543618;
          uint64_t v43 = v28;
          __int16 v44 = 2114;
          uint64_t v45 = v29;
          id v30 = v28;
          LODWORD(v38) = 22;
          uint64_t v31 = (void *)_os_log_send_and_compose_impl();

          if (!v31) {
            goto LABEL_28;
          }
          uint64_t v27 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v31, 4, &v42, v38);
          free(v31);
          SSFileLog();
        }

        goto LABEL_28;
      }
      id v10 = +[SSLogConfig sharedDaemonConfig];
      if (!v10)
      {
        id v10 = +[SSLogConfig sharedConfig];
      }
      unsigned int v32 = [v10 shouldLog];
      if ([v10 shouldLogToDisk]) {
        int v33 = v32 | 2;
      }
      else {
        int v33 = v32;
      }
      uint64_t v24 = [v10 OSLogObject];
      if (!os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
        v33 &= 2u;
      }
      if (!v33) {
        goto LABEL_28;
      }
      uint64_t v34 = objc_opt_class();
      int v42 = 138543362;
      uint64_t v43 = v34;
      id v35 = v34;
      LODWORD(v38) = 12;
      long long v36 = (void *)_os_log_send_and_compose_impl();

      if (v36)
      {
        uint64_t v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v36, 4, &v42, v38);
        free(v36);
        SSFileLog();
        goto LABEL_28;
      }
    }
LABEL_29:

    goto LABEL_30;
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000D13A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

intptr_t sub_1000D13E0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(*(void *)(a1 + 64) + 8);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = [v2 _createX509CertChainDataForAccountIdentifier:v3 purpose:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

intptr_t sub_1000D15FC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8);
  id obj = *(id *)(v4 + 40);
  unsigned __int8 v5 = [v2 _deleteKeychainTokensForAccountIdentifier:v3 error:&obj];
  objc_storeStrong((id *)(v4 + 40), obj);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v5;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000D1A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

intptr_t sub_1000D1A64(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(*(void *)(a1 + 64) + 8);
  id obj = *(id *)(v6 + 40);
  uint64_t v7 = [v2 _publicKeyDataForAccountIdentifier:v3 purpose:v5 regenerateKeys:v4 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000D1E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

intptr_t sub_1000D1EC8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(*(void *)(a1 + 72) + 8);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = [v2 _signData:v3 context:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

void sub_1000D3524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1000D3570(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  uint64_t v7 = v6;
  if (a2 && !v6)
  {
    uint64_t v8 = *(void *)(a1 + 96);
    CFTypeRef result = 0;
    uint64_t v136 = v8;
    +[ISBiometricStore keychainLabelForKeyWithAccountID:purpose:](ISBiometricStore, "keychainLabelForKeyWithAccountID:purpose:", *(void *)(a1 + 32));
    v156[0] = kSecClass;
    v156[1] = kSecAttrKeyClass;
    v157[0] = kSecClassKey;
    v157[1] = kSecAttrKeyClassPrivate;
    v156[2] = kSecAttrLabel;
    v137 = v156[3] = kSecReturnRef;
    v157[2] = v137;
    v157[3] = &__kCFBooleanTrue;
    v156[4] = kSecUseAuthenticationContext;
    v157[4] = *(void *)(a1 + 40);
    CFDictionaryRef v9 = +[NSDictionary dictionaryWithObjects:v157 forKeys:v156 count:5];
    CFDictionaryRef v10 = v9;
    CFDictionaryRef v138 = v9;
    if (!v9) {
      goto LABEL_47;
    }
    uint64_t v11 = SecItemCopyMatching(v9, &result);
    if (v11 == -25300)
    {
      id v12 = [(__CFDictionary *)v10 mutableCopy];
      uint64_t v13 = [*(id *)(a1 + 48) _amsKeychainLabelForPurpose:v136];
      [v12 setObject:v13 forKeyedSubscript:kSecAttrLabel];

      uint64_t v11 = SecItemCopyMatching((CFDictionaryRef)v12, &result);
    }
    if (v11)
    {
      uint64_t v14 = SSError();
      uint64_t v15 = *(void *)(*(void *)(a1 + 72) + 8);
      id v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;

      id v17 = +[NSNumber numberWithInt:v11];
      uint64_t v18 = SSErrorBySettingUserInfoValue();
      uint64_t v19 = *(void *)(*(void *)(a1 + 72) + 8);
      uint64_t v20 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;

      uint64_t v21 = +[SSLogConfig sharedDaemonConfig];
      if (!v21)
      {
        uint64_t v21 = +[SSLogConfig sharedConfig];
      }
      unsigned int v22 = [v21 shouldLog];
      if ([v21 shouldLogToDisk]) {
        v22 |= 2u;
      }
      uint64_t v23 = [v21 OSLogObject];
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
        int v24 = v22;
      }
      else {
        int v24 = v22 & 2;
      }
      if (!v24)
      {
        uint64_t v7 = 0;
        goto LABEL_43;
      }
      unsigned int v25 = objc_opt_class();
      uint64_t v26 = *(void *)(a1 + 32);
      uint64_t v27 = *(void *)(a1 + 96);
      id v134 = v25;
      uint64_t v28 = +[NSNumber numberWithInteger:v27];
      uint64_t v29 = +[NSNumber numberWithInt:v11];
      int v148 = 138544130;
      v149 = v25;
      __int16 v150 = 2112;
      uint64_t v151 = v26;
      __int16 v152 = 2114;
      id v153 = v28;
      __int16 v154 = 2114;
      v155 = v29;
      LODWORD(v132) = 42;
      v129 = &v148;
      id v30 = (void *)_os_log_send_and_compose_impl();

      if (v30)
      {
        uint64_t v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v30, 4, &v148, v132);
        free(v30);
        v129 = (int *)v23;
        SSFileLog();
        uint64_t v7 = 0;
LABEL_17:
        CFDictionaryRef v10 = v138;
LABEL_43:

LABEL_46:
LABEL_47:
        long long v41 = (__SecKey *)result;
        if (result) {
          goto LABEL_48;
        }
        long long v75 = +[SSLogConfig sharedDaemonConfig];
        if (!v75)
        {
          long long v75 = +[SSLogConfig sharedConfig];
        }
        unsigned int v76 = objc_msgSend(v75, "shouldLog", v129);
        if ([v75 shouldLogToDisk]) {
          v76 |= 2u;
        }
        uint64_t v77 = [v75 OSLogObject];
        if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR)) {
          int v78 = v76;
        }
        else {
          int v78 = v76 & 2;
        }
        if (v78)
        {
          v79 = objc_opt_class();
          uint64_t v80 = *(void *)(a1 + 32);
          uint64_t v81 = *(void *)(a1 + 96);
          id v82 = v79;
          __int16 v83 = +[NSNumber numberWithInteger:v81];
          int v148 = 138543874;
          v149 = v79;
          __int16 v150 = 2112;
          uint64_t v151 = v80;
          CFDictionaryRef v10 = v138;
          __int16 v152 = 2114;
          id v153 = v83;
          LODWORD(v132) = 32;
          CFStringRef v84 = (void *)_os_log_send_and_compose_impl();

          if (!v84)
          {
LABEL_85:

            uint64_t v85 = *(void *)(a1 + 48);
            CFStringRef v86 = *(NSObject **)(v85 + 8);
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472;
            block[2] = sub_1000D48BC;
            block[3] = &unk_1003A4448;
            void block[4] = v85;
            id v87 = *(id *)(a1 + 32);
            uint64_t v88 = *(void *)(a1 + 96);
            id v140 = v87;
            uint64_t v141 = v88;
            uint64_t v142 = v136;
            dispatch_async(v86, block);
            uint64_t v89 = SSError();
            uint64_t v90 = *(void *)(*(void *)(a1 + 72) + 8);
            v91 = *(void **)(v90 + 40);
            *(void *)(v90 + 40) = v89;

            uint64_t v92 = SSErrorBySettingUserInfoValue();
            uint64_t v93 = *(void *)(*(void *)(a1 + 72) + 8);
            v94 = *(void **)(v93 + 40);
            *(void *)(v93 + 40) = v92;

            CFDataRef Signature = 0;
            goto LABEL_119;
          }
          uint64_t v77 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v84, 4, &v148, v132);
          free(v84);
          SSFileLog();
        }

        goto LABEL_85;
      }
      uint64_t v7 = 0;
    }
    else
    {
      long long v41 = (__SecKey *)result;
      if (result)
      {
LABEL_48:
        CFDataRef Signature = SecKeyCreateSignature(v41, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, *(CFDataRef *)(a1 + 56), (CFErrorRef *)(*(void *)(*(void *)(a1 + 80) + 8) + 24));
        uint64_t v55 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 24);
        if (!Signature || v55)
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v55);
          uint64_t v56 = +[SSLogConfig sharedDaemonConfig];
          if (!v56)
          {
            uint64_t v56 = +[SSLogConfig sharedConfig];
          }
          unsigned int v67 = objc_msgSend(v56, "shouldLog", v129);
          if ([v56 shouldLogToDisk]) {
            int v68 = v67 | 2;
          }
          else {
            int v68 = v67;
          }
          uint64_t v59 = [v56 OSLogObject];
          if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT)) {
            int v69 = v68;
          }
          else {
            int v69 = v68 & 2;
          }
          if (!v69)
          {
LABEL_72:
            CFDictionaryRef v10 = v138;
LABEL_73:

            goto LABEL_87;
          }
          v70 = objc_opt_class();
          uint64_t v71 = *(void *)(a1 + 32);
          uint64_t v72 = *(void *)(a1 + 96);
          id v64 = v70;
          long long v73 = +[NSNumber numberWithInteger:v72];
          long long v74 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 24);
          int v148 = 138544130;
          v149 = v70;
          __int16 v150 = 2112;
          uint64_t v151 = v71;
          __int16 v152 = 2114;
          id v153 = v73;
          __int16 v154 = 2114;
          v155 = v74;
          LODWORD(v132) = 42;
          v130 = &v148;
          long long v66 = (void *)_os_log_send_and_compose_impl();
        }
        else
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40), Signature);
          uint64_t v56 = +[SSLogConfig sharedDaemonConfig];
          if (!v56)
          {
            uint64_t v56 = +[SSLogConfig sharedConfig];
          }
          unsigned int v57 = objc_msgSend(v56, "shouldLog", v129);
          if ([v56 shouldLogToDisk]) {
            int v58 = v57 | 2;
          }
          else {
            int v58 = v57;
          }
          uint64_t v59 = [v56 OSLogObject];
          if (os_log_type_enabled(v59, OS_LOG_TYPE_DEBUG)) {
            int v60 = v58;
          }
          else {
            int v60 = v58 & 2;
          }
          if (!v60) {
            goto LABEL_73;
          }
          uint64_t v61 = objc_opt_class();
          uint64_t v62 = *(void *)(a1 + 32);
          uint64_t v63 = *(void *)(a1 + 96);
          id v64 = v61;
          long long v65 = +[NSNumber numberWithInteger:v63];
          int v148 = 138543874;
          v149 = v61;
          __int16 v150 = 2112;
          uint64_t v151 = v62;
          __int16 v152 = 2114;
          id v153 = v65;
          LODWORD(v132) = 32;
          v130 = &v148;
          long long v66 = (void *)_os_log_send_and_compose_impl();
        }
        if (!v66)
        {
          uint64_t v7 = 0;
          CFDictionaryRef v10 = v138;
LABEL_87:

          if (*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40))
          {
            v95 = +[SSLogConfig sharedDaemonConfig];
            if (!v95)
            {
              v95 = +[SSLogConfig sharedConfig];
            }
            unsigned int v96 = objc_msgSend(v95, "shouldLog", v130);
            if ([v95 shouldLogToDisk]) {
              v96 |= 2u;
            }
            v97 = [v95 OSLogObject];
            if (!os_log_type_enabled(v97, OS_LOG_TYPE_ERROR)) {
              v96 &= 2u;
            }
            if (v96)
            {
              v98 = objc_opt_class();
              uint64_t v99 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
              int v148 = 138543618;
              v149 = v98;
              __int16 v150 = 2114;
              uint64_t v151 = v99;
              id v100 = v98;
              LODWORD(v132) = 22;
              v131 = &v148;
              v101 = (void *)_os_log_send_and_compose_impl();

              if (!v101) {
                goto LABEL_98;
              }
              v97 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v101, 4, &v148, v132);
              free(v101);
              v131 = (int *)v97;
              SSFileLog();
            }

LABEL_98:
            v102 = ISWeakLinkedStringConstantForString();
            v103 = ISWeakLinkedStringConstantForString();
            v104 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) domain];
            if ([v104 isEqualToString:v102]) {
              BOOL v105 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) code] != (id)-2;
            }
            else {
              BOOL v105 = 0;
            }

            v106 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) domain];
            if ([v106 isEqualToString:v103]) {
              BOOL v107 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) code] == (id)-3;
            }
            else {
              BOOL v107 = 0;
            }

            if (!v105 && !v107) {
              goto LABEL_118;
            }
            v108 = +[SSLogConfig sharedDaemonConfig];
            if (!v108)
            {
              v108 = +[SSLogConfig sharedConfig];
            }
            unsigned int v109 = objc_msgSend(v108, "shouldLog", v131);
            if ([v108 shouldLogToDisk]) {
              int v110 = v109 | 2;
            }
            else {
              int v110 = v109;
            }
            v111 = [v108 OSLogObject];
            if (os_log_type_enabled(v111, OS_LOG_TYPE_DEFAULT)) {
              int v112 = v110;
            }
            else {
              int v112 = v110 & 2;
            }
            if (v112)
            {
              v113 = objc_opt_class();
              CFDataRef v135 = Signature;
              v114 = v103;
              v115 = v102;
              uint64_t v116 = *(void *)(a1 + 32);
              uint64_t v117 = *(void *)(a1 + 96);
              id v133 = v113;
              v118 = +[NSNumber numberWithInteger:v117];
              v119 = *(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
              int v148 = 138544130;
              v149 = v113;
              __int16 v150 = 2112;
              uint64_t v151 = v116;
              v102 = v115;
              v103 = v114;
              CFDataRef Signature = v135;
              __int16 v152 = 2114;
              id v153 = v118;
              __int16 v154 = 2114;
              v155 = v119;
              LODWORD(v132) = 42;
              v120 = (void *)_os_log_send_and_compose_impl();

              if (!v120)
              {
LABEL_117:

                uint64_t v121 = *(void *)(a1 + 48);
                v122 = *(NSObject **)(v121 + 8);
                v143[0] = _NSConcreteStackBlock;
                v143[1] = 3221225472;
                v143[2] = sub_1000D46B4;
                v143[3] = &unk_1003A4448;
                v143[4] = v121;
                id v144 = *(id *)(a1 + 32);
                uint64_t v145 = v136;
                uint64_t v146 = *(void *)(a1 + 96);
                dispatch_async(v122, v143);
                uint64_t v123 = SSError();
                uint64_t v124 = *(void *)(*(void *)(a1 + 72) + 8);
                v125 = *(void **)(v124 + 40);
                *(void *)(v124 + 40) = v123;

                uint64_t v126 = SSErrorBySettingUserInfoValue();
                uint64_t v127 = *(void *)(*(void *)(a1 + 72) + 8);
                v128 = *(void **)(v127 + 40);
                *(void *)(v127 + 40) = v126;

                uint64_t v7 = 0;
                CFDictionaryRef v10 = v138;
LABEL_118:

                goto LABEL_119;
              }
              v111 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v120, 4, &v148, v132);
              free(v120);
              SSFileLog();
            }

            goto LABEL_117;
          }
LABEL_119:
          if (result) {
            CFRelease(result);
          }
          if (Signature) {
            CFRelease(Signature);
          }

          goto LABEL_124;
        }
        uint64_t v59 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v66, 4, &v148, v132);
        free(v66);
        v130 = (int *)v59;
        SSFileLog();
        uint64_t v7 = 0;
        goto LABEL_72;
      }
      uint64_t v42 = SSError();
      uint64_t v43 = *(void *)(*(void *)(a1 + 72) + 8);
      __int16 v44 = *(void **)(v43 + 40);
      *(void *)(v43 + 40) = v42;

      uint64_t v21 = +[SSLogConfig sharedDaemonConfig];
      if (!v21)
      {
        uint64_t v21 = +[SSLogConfig sharedConfig];
      }
      unsigned int v45 = [v21 shouldLog];
      if ([v21 shouldLogToDisk]) {
        int v46 = v45 | 2;
      }
      else {
        int v46 = v45;
      }
      uint64_t v23 = [v21 OSLogObject];
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
        int v47 = v46;
      }
      else {
        int v47 = v46 & 2;
      }
      if (!v47) {
        goto LABEL_43;
      }
      uint64_t v48 = objc_opt_class();
      uint64_t v49 = *(void *)(a1 + 32);
      uint64_t v50 = *(void *)(a1 + 96);
      id v51 = v48;
      uint64_t v52 = +[NSNumber numberWithInteger:v50];
      int v148 = 138543874;
      v149 = v48;
      __int16 v150 = 2112;
      uint64_t v151 = v49;
      __int16 v152 = 2114;
      id v153 = v52;
      LODWORD(v132) = 32;
      v129 = &v148;
      uint64_t v53 = (void *)_os_log_send_and_compose_impl();

      if (v53)
      {
        uint64_t v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v53, 4, &v148, v132);
        free(v53);
        v129 = (int *)v23;
        SSFileLog();
        goto LABEL_17;
      }
    }
    CFDictionaryRef v10 = v138;
    goto LABEL_46;
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), a3);
  uint64_t v31 = +[SSLogConfig sharedDaemonConfig];
  if (!v31)
  {
    uint64_t v31 = +[SSLogConfig sharedConfig];
  }
  unsigned int v32 = [v31 shouldLog];
  if ([v31 shouldLogToDisk]) {
    v32 |= 2u;
  }
  uint64_t v33 = [v31 OSLogObject];
  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT)) {
    int v34 = v32;
  }
  else {
    int v34 = v32 & 2;
  }
  if (v34)
  {
    id v35 = objc_opt_class();
    uint64_t v36 = *(void *)(a1 + 32);
    uint64_t v37 = *(void *)(a1 + 96);
    id v38 = v35;
    +[NSNumber numberWithInteger:v37];
    int v148 = 138544130;
    v149 = v35;
    __int16 v150 = 2112;
    uint64_t v151 = v36;
    __int16 v152 = 2114;
    id v153 = (id)objc_claimAutoreleasedReturnValue();
    __int16 v154 = 2114;
    v155 = v7;
    LODWORD(v132) = 42;
    id v39 = (void *)_os_log_send_and_compose_impl();

    if (v39)
    {
      id v40 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v39, 4, &v148, v132);
      free(v39);
      SSFileLog();
    }
  }
  else
  {
  }
LABEL_124:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
}

void sub_1000D46B4(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  id v18 = 0;
  unsigned __int8 v5 = [v2 _generateKeychainTokensForAccountIdentifier:v3 purpose:v4 error:&v18];
  id v6 = v18;
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7)
    {
      uint64_t v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    CFDictionaryRef v10 = [v7 OSLogObject];
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      v9 &= 2u;
    }
    if (v9)
    {
      uint64_t v11 = objc_opt_class();
      uint64_t v12 = a1[5];
      uint64_t v13 = a1[7];
      id v14 = v11;
      uint64_t v15 = +[NSNumber numberWithInteger:v13];
      int v19 = 138544130;
      uint64_t v20 = v11;
      __int16 v21 = 2112;
      uint64_t v22 = v12;
      __int16 v23 = 2114;
      int v24 = v15;
      __int16 v25 = 2114;
      id v26 = v6;
      LODWORD(v17) = 42;
      id v16 = (void *)_os_log_send_and_compose_impl();

      if (!v16)
      {
LABEL_13:

        goto LABEL_14;
      }
      CFDictionaryRef v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v19, v17);
      free(v16);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
}

void sub_1000D48BC(void *a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  unsigned __int8 v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    v4 &= 2u;
  }
  if (v4)
  {
    id v6 = objc_opt_class();
    uint64_t v8 = a1[5];
    uint64_t v7 = a1[6];
    id v9 = v6;
    +[NSNumber numberWithInteger:v7];
    int v49 = 138543874;
    uint64_t v50 = v6;
    __int16 v51 = 2112;
    uint64_t v52 = v8;
    __int16 v53 = 2114;
    id v54 = (id)objc_claimAutoreleasedReturnValue();
    LODWORD(v43) = 32;
    CFDictionaryRef v10 = (void *)_os_log_send_and_compose_impl();

    if (!v10) {
      goto LABEL_12;
    }
    unsigned __int8 v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v49, v43);
    free(v10);
    SSFileLog();
  }

LABEL_12:
  uint64_t v11 = +[NSString stringWithFormat:@"mt-tid-%@", a1[5]];
  NSHTTPCookiePropertyKey v57 = NSHTTPCookieName;
  int v58 = v11;
  uint64_t v12 = +[NSDictionary dictionaryWithObjects:&v58 forKeys:&v57 count:1];
  uint64_t v13 = +[ACAccountStore ams_sharedAccountStore];
  id v48 = 0;
  objc_msgSend(v13, "ams_removeCookiesMatchingProperties:error:", v12, &v48);
  id v14 = v48;

  if (!v14) {
    goto LABEL_26;
  }
  uint64_t v15 = +[SSLogConfig sharedDaemonConfig];
  if (!v15)
  {
    uint64_t v15 = +[SSLogConfig sharedConfig];
  }
  unsigned int v16 = [v15 shouldLog];
  if ([v15 shouldLogToDisk]) {
    int v17 = v16 | 2;
  }
  else {
    int v17 = v16;
  }
  id v18 = [v15 OSLogObject];
  if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
    int v19 = v17;
  }
  else {
    int v19 = v17 & 2;
  }
  if (!v19) {
    goto LABEL_24;
  }
  uint64_t v20 = objc_opt_class();
  unsigned int v45 = v12;
  __int16 v21 = v11;
  uint64_t v22 = a1[5];
  uint64_t v23 = a1[6];
  id v44 = v20;
  uint64_t v24 = v23;
  uint64_t v11 = v21;
  __int16 v25 = +[NSNumber numberWithInteger:v24];
  int v49 = 138544130;
  uint64_t v50 = v20;
  __int16 v51 = 2112;
  uint64_t v52 = v22;
  uint64_t v12 = v45;
  __int16 v53 = 2114;
  id v54 = v25;
  __int16 v55 = 2114;
  id v56 = v14;
  LODWORD(v43) = 42;
  uint64_t v42 = &v49;
  id v26 = (void *)_os_log_send_and_compose_impl();

  if (v26)
  {
    id v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v26, 4, &v49, v43);
    free(v26);
    uint64_t v42 = (int *)v18;
    SSFileLog();
LABEL_24:
  }
LABEL_26:
  uint64_t v27 = (void *)a1[4];
  uint64_t v28 = a1[5];
  uint64_t v29 = a1[7];
  id v47 = v14;
  unsigned __int8 v30 = objc_msgSend(v27, "_generateKeychainTokensForAccountIdentifier:purpose:error:", v28, v29, &v47, v42);
  id v31 = v47;

  if ((v30 & 1) == 0)
  {
    unsigned int v32 = +[SSLogConfig sharedDaemonConfig];
    if (!v32)
    {
      unsigned int v32 = +[SSLogConfig sharedConfig];
    }
    unsigned int v33 = [v32 shouldLog];
    if ([v32 shouldLogToDisk]) {
      v33 |= 2u;
    }
    int v34 = [v32 OSLogObject];
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      int v35 = v33;
    }
    else {
      int v35 = v33 & 2;
    }
    if (v35)
    {
      uint64_t v36 = objc_opt_class();
      uint64_t v37 = v12;
      uint64_t v39 = a1[5];
      uint64_t v38 = a1[6];
      id v46 = v36;
      id v40 = +[NSNumber numberWithInteger:v38];
      int v49 = 138544130;
      uint64_t v50 = v36;
      __int16 v51 = 2112;
      uint64_t v52 = v39;
      uint64_t v12 = v37;
      __int16 v53 = 2114;
      id v54 = v40;
      __int16 v55 = 2114;
      id v56 = v31;
      LODWORD(v43) = 42;
      long long v41 = (void *)_os_log_send_and_compose_impl();

      if (!v41)
      {
LABEL_38:

        goto LABEL_39;
      }
      int v34 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v41, 4, &v49, v43);
      free(v41);
      SSFileLog();
    }

    goto LABEL_38;
  }
LABEL_39:
}

void sub_1000D4FD4(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    objc_opt_class();
    uint64_t v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    id v8 = [v7 integerValue];

    id v9 = [*(id *)(a1 + 40) sharedInstance];
    id v13 = 0;
    CFDictionaryRef v10 = objc_msgSend(v9, "createAttestationDataForAccountIdentifier_:purpose:error:", v6, v8, &v13);
    id v11 = v13;
  }
  else
  {
    id v12 = a3;
    SSError();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    CFDictionaryRef v10 = 0;
  }
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_1000D51C4(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    objc_opt_class();
    uint64_t v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    id v8 = [v7 integerValue];

    id v9 = [*(id *)(a1 + 40) sharedInstance];
    id v13 = 0;
    CFDictionaryRef v10 = objc_msgSend(v9, "createX509CertChainDataForAccountIdentifier_:purpose:error:", v6, v8, &v13);
    id v11 = v13;
  }
  else
  {
    id v12 = a3;
    SSError();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    CFDictionaryRef v10 = 0;
  }
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_1000D53B4(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    uint64_t v7 = [*(id *)(a1 + 40) sharedInstance];
    id v10 = 0;
    objc_msgSend(v7, "deleteKeychainTokensForAccountIdentifier_:error:", v6, &v10);
    id v8 = v10;
  }
  else
  {
    id v9 = a3;
    SSError();
    id v8 = (id)objc_claimAutoreleasedReturnValue();
  }
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_1000D5580(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    objc_opt_class();
    uint64_t v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    id v8 = [v7 integerValue];

    id v9 = [*(id *)(a1 + 40) sharedInstance];
    id v13 = 0;
    id v10 = objc_msgSend(v9, "publicKeyDataForAccountIdentifier_:purpose:error:", v6, v8, &v13);
    id v11 = v13;
  }
  else
  {
    id v12 = a3;
    SSError();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    id v10 = 0;
  }
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_1000D5790(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    objc_opt_class();
    uint64_t v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    objc_opt_class();
    id v8 = (void *)SSXPCDictionaryCopyObjectWithClass();
    uint64_t pid = xpc_connection_get_pid(*(xpc_connection_t *)(a1 + 40));
    uint64_t v10 = +[SSLogConfig sharedDaemonConfig];
    id v11 = (void *)v10;
    if (v6)
    {
      if (!v10)
      {
        id v11 = +[SSLogConfig sharedConfig];
      }
      unsigned int v12 = [v11 shouldLog];
      if ([v11 shouldLogToDisk]) {
        int v13 = v12 | 2;
      }
      else {
        int v13 = v12;
      }
      id v14 = [v11 OSLogObject];
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
        v13 &= 2u;
      }
      if (v13)
      {
        +[NSNumber numberWithInt:pid];
        int v28 = 138412546;
        uint64_t v29 = v8;
        __int16 v30 = 2114;
        id v31 = (id)objc_claimAutoreleasedReturnValue();
        LODWORD(v26) = 22;
        uint64_t v15 = (void *)_os_log_send_and_compose_impl();

        if (!v15)
        {
LABEL_14:

          id v16 = objc_alloc_init((Class)SSBiometricAuthenticationContext);
          [v16 setAccountIdentifier:v8];
          id v17 = objc_alloc_init((Class)SSConsolidatedDialog);
          [v17 setReason:v7];
          [v16 setConsolidatedDialog:v17];
          id v18 = [*(id *)(a1 + 48) sharedInstance];
          id v27 = 0;
          int v19 = objc_msgSend(v18, "signData_:context:error:", v6, v16, &v27);
          id v20 = v27;

LABEL_28:
          goto LABEL_29;
        }
        id v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v28, v26);
        free(v15);
        SSFileLog();
      }

      goto LABEL_14;
    }
    if (!v10)
    {
      id v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v22 = [v11 shouldLog];
    if ([v11 shouldLogToDisk]) {
      int v23 = v22 | 2;
    }
    else {
      int v23 = v22;
    }
    uint64_t v24 = [v11 OSLogObject];
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      v23 &= 2u;
    }
    if (v23)
    {
      +[NSNumber numberWithInt:pid];
      int v28 = 138412546;
      uint64_t v29 = v8;
      __int16 v30 = 2114;
      id v31 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v26) = 22;
      __int16 v25 = (void *)_os_log_send_and_compose_impl();

      if (!v25)
      {
LABEL_27:

        SSError();
        id v20 = (id)objc_claimAutoreleasedReturnValue();
        int v19 = 0;
        goto LABEL_28;
      }
      uint64_t v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v28, v26);
      free(v25);
      SSFileLog();
    }

    goto LABEL_27;
  }
  id v21 = a3;
  SSError();
  id v20 = (id)objc_claimAutoreleasedReturnValue();
  int v19 = 0;
LABEL_29:
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_1000D5CC8(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    id v7 = objc_alloc((Class)SSBiometricAuthenticationContext);
    id v8 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    id v9 = [v7 initWithXPCEncoding:v8];

    uint64_t pid = xpc_connection_get_pid(*(xpc_connection_t *)(a1 + 40));
    uint64_t v11 = +[SSLogConfig sharedDaemonConfig];
    unsigned int v12 = (void *)v11;
    if (v6)
    {
      if (!v11)
      {
        unsigned int v12 = +[SSLogConfig sharedConfig];
      }
      unsigned int v13 = [v12 shouldLog];
      if ([v12 shouldLogToDisk]) {
        int v14 = v13 | 2;
      }
      else {
        int v14 = v13;
      }
      uint64_t v15 = [v12 OSLogObject];
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
        v14 &= 2u;
      }
      if (v14)
      {
        id v16 = [v9 accountIdentifier];
        +[NSNumber numberWithInt:pid];
        int v29 = 138412546;
        __int16 v30 = v16;
        __int16 v31 = 2114;
        id v32 = (id)objc_claimAutoreleasedReturnValue();
        LODWORD(v27) = 22;
        id v17 = (void *)_os_log_send_and_compose_impl();

        if (!v17)
        {
LABEL_14:

          id v18 = [*(id *)(a1 + 48) sharedInstance];
          id v28 = 0;
          int v19 = objc_msgSend(v18, "signData_:context:error:", v6, v9, &v28);
          id v20 = v28;

LABEL_28:
          goto LABEL_29;
        }
        uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v29, v27);
        free(v17);
        SSFileLog();
      }

      goto LABEL_14;
    }
    if (!v11)
    {
      unsigned int v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v22 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v23 = v22 | 2;
    }
    else {
      int v23 = v22;
    }
    uint64_t v24 = [v12 OSLogObject];
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      v23 &= 2u;
    }
    if (v23)
    {
      __int16 v25 = [v9 accountIdentifier];
      +[NSNumber numberWithInt:pid];
      int v29 = 138412546;
      __int16 v30 = v25;
      __int16 v31 = 2114;
      id v32 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v27) = 22;
      uint64_t v26 = (void *)_os_log_send_and_compose_impl();

      if (!v26)
      {
LABEL_27:

        SSError();
        id v20 = (id)objc_claimAutoreleasedReturnValue();
        int v19 = 0;
        goto LABEL_28;
      }
      uint64_t v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v26, 4, &v29, v27);
      free(v26);
      SSFileLog();
    }

    goto LABEL_27;
  }
  id v21 = a3;
  SSError();
  id v20 = (id)objc_claimAutoreleasedReturnValue();
  int v19 = 0;
LABEL_29:
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_1000D61B4(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    objc_opt_class();
    id v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    id v8 = [v7 integerValue];

    objc_opt_class();
    id v9 = (void *)SSXPCDictionaryCopyObjectWithClass();
    id v10 = [v9 BOOLValue];

    uint64_t v11 = [*(id *)(a1 + 40) sharedInstance];
    id v15 = 0;
    unsigned int v12 = objc_msgSend(v11, "x509CertChainDataForAccountIdentifier_:purpose:regenerateCerts:error:", v6, v8, v10, &v15);
    id v13 = v15;
  }
  else
  {
    id v14 = a3;
    SSError();
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    unsigned int v12 = 0;
  }
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_1000D64E0(uint64_t a1)
{
  if ((SSXPCConnectionHasEntitlement() & 1) == 0 && (SSXPCConnectionHasEntitlement() & 1) == 0)
  {
    id v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2)
    {
      id v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    id v5 = [v2 OSLogObject];
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      v4 &= 2u;
    }
    if (v4)
    {
      LODWORD(v10) = 138543362;
      *(void *)((char *)&v10 + 4) = objc_opt_class();
      id v6 = *(id *)((char *)&v10 + 4);
      LODWORD(v9) = 12;
      id v7 = (void *)_os_log_send_and_compose_impl();

      if (!v7)
      {
LABEL_15:

        goto LABEL_16;
      }
      id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v10, v9, v10);
      free(v7);
      SSFileLog();
    }

    goto LABEL_15;
  }
LABEL_16:
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
}

void sub_1000DADD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a38);
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose((const void *)(v49 - 256), 8);
  _Block_object_dispose((const void *)(v49 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_1000DAFC8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  uint64_t v10 = +[SSLogConfig sharedDaemonConfig];
  uint64_t v11 = (void *)v10;
  if (v8)
  {
    if (!v10)
    {
      uint64_t v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v12 = [v11 shouldLog];
    if ([v11 shouldLogToDisk]) {
      int v13 = v12 | 2;
    }
    else {
      int v13 = v12;
    }
    id v14 = [v11 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      int v15 = v13;
    }
    else {
      int v15 = v13 & 2;
    }
    if (v15)
    {
      id v16 = objc_opt_class();
      uint64_t v17 = *(void *)(a1 + 88);
      id v33 = v7;
      id v18 = v16;
      +[NSNumber numberWithInteger:v17];
      int v38 = 138543874;
      uint64_t v39 = v16;
      __int16 v40 = 2114;
      id v41 = v8;
      __int16 v42 = 2114;
      id v43 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v32) = 32;
      int v19 = (void *)_os_log_send_and_compose_impl();

      id v7 = v33;
      if (v19)
      {
        id v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v38, v32);
        free(v19);
        SSFileLog();
      }
    }
    else
    {
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a4);
  }
  else
  {
    if (!v10)
    {
      uint64_t v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v21 = [v11 shouldLog];
    if ([v11 shouldLogToDisk]) {
      v21 |= 2u;
    }
    unsigned int v22 = [v11 OSLogObject];
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
      int v23 = v21;
    }
    else {
      int v23 = v21 & 2;
    }
    if (v23)
    {
      uint64_t v24 = objc_opt_class();
      id v25 = v7;
      id v34 = v24;
      uint64_t v26 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v7 count]);
      +[NSNumber numberWithInteger:*(void *)(a1 + 88)];
      int v38 = 138543874;
      uint64_t v39 = v24;
      __int16 v40 = 2114;
      id v41 = v26;
      __int16 v42 = 2114;
      id v43 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v32) = 32;
      uint64_t v27 = (void *)_os_log_send_and_compose_impl();

      id v8 = 0;
      id v7 = v25;

      if (v27)
      {
        id v28 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, &v38, v32);
        free(v27);
        SSFileLog();
      }
    }
    else
    {
    }
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = a2;
    id v29 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v30 = *(void *)(*(void *)(a1 + 56) + 8);
    __int16 v31 = *(void **)(v30 + 40);
    *(void *)(v30 + 40) = v29;

    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472;
    v35[2] = sub_1000DB410;
    v35[3] = &unk_1003A6138;
    long long v36 = *(_OWORD *)(a1 + 56);
    uint64_t v37 = *(void *)(a1 + 72);
    [v7 enumerateObjectsUsingBlock:v35];
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000DB410(void *a1, void *a2, uint64_t a3)
{
  uint64_t v9 = a2;
  CFDataRef v5 = SecCertificateCopyData(v9);
  [*(id *)(*(void *)(a1[4] + 8) + 40) addObject:v5];
  if (a3 == 1)
  {
    id v8 = v9;
    uint64_t v7 = a1[6];
  }
  else
  {
    if (a3) {
      goto LABEL_6;
    }
    id v6 = v9;
    uint64_t v7 = a1[5];
  }
  *(void *)(*(void *)(v7 + 8) + 24) = v9;
LABEL_6:
}

void sub_1000DE4B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose((const void *)(v41 - 208), 8);
  _Block_object_dispose((const void *)(v41 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1000DE524(void *a1, void *a2, void *a3, char a4, void *a5, void *a6, void *a7)
{
  id v12 = a2;
  id v60 = a3;
  id v13 = a3;
  id obj = a5;
  id v14 = a5;
  uint64_t v63 = a6;
  id v15 = a6;
  id v16 = a7;
  uint64_t v17 = +[SSLogConfig sharedDaemonConfig];
  if (!v17)
  {
    uint64_t v17 = +[SSLogConfig sharedConfig];
  }
  unsigned int v18 = [v17 shouldLog];
  if ([v17 shouldLogToDisk]) {
    int v19 = v18 | 2;
  }
  else {
    int v19 = v18;
  }
  id v20 = [v17 OSLogObject];
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
    int v21 = v19;
  }
  else {
    int v21 = v19 & 2;
  }
  if (v21)
  {
    uint64_t v22 = a1[4];
    int v65 = 138543362;
    uint64_t v66 = v22;
    LODWORD(v59) = 12;
    int v58 = &v65;
    int v23 = (void *)_os_log_send_and_compose_impl();

    if (!v23) {
      goto LABEL_13;
    }
    id v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v65, v59);
    free(v23);
    int v58 = (int *)v20;
    SSFileLog();
  }

LABEL_13:
  uint64_t v24 = v16;
  if (v16)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a7);
    id v25 = +[SSLogConfig sharedDaemonConfig];
    uint64_t v26 = v15;
    if (!v25)
    {
      id v25 = +[SSLogConfig sharedConfig];
    }
    unsigned int v27 = objc_msgSend(v25, "shouldLog", v58);
    if ([v25 shouldLogToDisk]) {
      v27 |= 2u;
    }
    id v28 = [v25 OSLogObject];
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      int v29 = v27;
    }
    else {
      int v29 = v27 & 2;
    }
    if (!v29) {
      goto LABEL_45;
    }
    uint64_t v30 = a1[4];
    int v65 = 138543618;
    uint64_t v66 = v30;
    __int16 v67 = 2114;
    int v68 = v24;
    LODWORD(v59) = 22;
    int v58 = &v65;
LABEL_43:
    __int16 v40 = (void *)_os_log_send_and_compose_impl();

    if (!v40)
    {
LABEL_46:

      goto LABEL_47;
    }
    id v28 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v40, 4, &v65, v59);
    free(v40);
    int v58 = (int *)v28;
    SSFileLog();
LABEL_45:

    goto LABEL_46;
  }
  uint64_t v26 = v15;
  if ((a4 & 1) == 0)
  {
    uint64_t v34 = ISError();
    uint64_t v35 = *(void *)(a1[5] + 8);
    long long v36 = *(void **)(v35 + 40);
    *(void *)(v35 + 40) = v34;

    id v25 = +[SSLogConfig sharedDaemonConfig];
    if (!v25)
    {
      id v25 = +[SSLogConfig sharedConfig];
    }
    unsigned int v37 = objc_msgSend(v25, "shouldLog", v58);
    if ([v25 shouldLogToDisk]) {
      v37 |= 2u;
    }
    id v28 = [v25 OSLogObject];
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT)) {
      int v38 = v37;
    }
    else {
      int v38 = v37 & 2;
    }
    if (!v38) {
      goto LABEL_45;
    }
    uint64_t v39 = a1[4];
    int v65 = 138543362;
    uint64_t v66 = v39;
    LODWORD(v59) = 12;
    int v58 = &v65;
    goto LABEL_43;
  }
  if (v12)
  {
    objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), a2);
    id v25 = +[SSLogConfig sharedDaemonConfig];
    if (!v25)
    {
      id v25 = +[SSLogConfig sharedConfig];
    }
    unsigned int v31 = objc_msgSend(v25, "shouldLog", v58);
    if ([v25 shouldLogToDisk]) {
      v31 |= 2u;
    }
    id v28 = [v25 OSLogObject];
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT)) {
      int v32 = v31;
    }
    else {
      int v32 = v31 & 2;
    }
    if (!v32) {
      goto LABEL_45;
    }
    uint64_t v33 = a1[4];
    int v65 = 138543362;
    uint64_t v66 = v33;
    LODWORD(v59) = 12;
    int v58 = &v65;
    goto LABEL_43;
  }
  if (v13)
  {
    objc_storeStrong((id *)(*(void *)(a1[7] + 8) + 40), v60);
    id v25 = +[SSLogConfig sharedDaemonConfig];
    if (!v25)
    {
      id v25 = +[SSLogConfig sharedConfig];
    }
    unsigned int v55 = objc_msgSend(v25, "shouldLog", v58);
    if ([v25 shouldLogToDisk]) {
      v55 |= 2u;
    }
    id v28 = [v25 OSLogObject];
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT)) {
      int v56 = v55;
    }
    else {
      int v56 = v55 & 2;
    }
    if (!v56) {
      goto LABEL_45;
    }
    uint64_t v57 = a1[4];
    int v65 = 138543362;
    uint64_t v66 = v57;
    LODWORD(v59) = 12;
    int v58 = &v65;
    goto LABEL_43;
  }
LABEL_47:
  if (!v14) {
    goto LABEL_61;
  }
  objc_storeStrong((id *)(*(void *)(a1[8] + 8) + 40), obj);
  uint64_t v41 = +[SSLogConfig sharedDaemonConfig];
  if (!v41)
  {
    uint64_t v41 = +[SSLogConfig sharedConfig];
  }
  unsigned int v42 = objc_msgSend(v41, "shouldLog", v58);
  if ([v41 shouldLogToDisk]) {
    int v43 = v42 | 2;
  }
  else {
    int v43 = v42;
  }
  id v44 = [v41 OSLogObject];
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT)) {
    int v45 = v43;
  }
  else {
    int v45 = v43 & 2;
  }
  if (!v45) {
    goto LABEL_59;
  }
  uint64_t v46 = a1[4];
  int v65 = 138543362;
  uint64_t v66 = v46;
  LODWORD(v59) = 12;
  int v58 = &v65;
  id v47 = (void *)_os_log_send_and_compose_impl();

  if (v47)
  {
    id v44 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v47, 4, &v65, v59);
    free(v47);
    int v58 = (int *)v44;
    SSFileLog();
LABEL_59:
  }
LABEL_61:
  if (v26)
  {
    objc_storeStrong((id *)(*(void *)(a1[9] + 8) + 40), v63);
    id v48 = +[SSLogConfig sharedDaemonConfig];
    if (!v48)
    {
      id v48 = +[SSLogConfig sharedConfig];
    }
    unsigned int v49 = objc_msgSend(v48, "shouldLog", v58);
    if ([v48 shouldLogToDisk]) {
      int v50 = v49 | 2;
    }
    else {
      int v50 = v49;
    }
    __int16 v51 = [v48 OSLogObject];
    if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT)) {
      int v52 = v50;
    }
    else {
      int v52 = v50 & 2;
    }
    if (v52)
    {
      uint64_t v53 = a1[4];
      int v65 = 138543362;
      uint64_t v66 = v53;
      LODWORD(v59) = 12;
      id v54 = (void *)_os_log_send_and_compose_impl();

      if (!v54)
      {
LABEL_74:

        goto LABEL_75;
      }
      __int16 v51 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v54, 4, &v65, v59);
      free(v54);
      SSFileLog();
    }

    goto LABEL_74;
  }
LABEL_75:
}

void sub_1000DFB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

intptr_t sub_1000DFB78(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(*(void *)(a1 + 72) + 8);
  id obj = *(id *)(v5 + 40);
  id v6 = [v2 _copyPublicKeyDataForAccountIdentifier:v3 purpose:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
  {
    uint64_t v9 = +[SSLogConfig sharedDaemonConfig];
    if (!v9)
    {
      uint64_t v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v10 = [v9 shouldLog];
    if ([v9 shouldLogToDisk]) {
      int v11 = v10 | 2;
    }
    else {
      int v11 = v10;
    }
    id v12 = [v9 OSLogObject];
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      v11 &= 2u;
    }
    if (!v11) {
      goto LABEL_13;
    }
    id v13 = objc_opt_class();
    id v14 = v13;
    id v15 = SSHashIfNeeded();
    int v47 = 138543618;
    id v48 = v13;
    __int16 v49 = 2112;
    int v50 = v15;
    LODWORD(v43) = 22;
LABEL_11:
    id v16 = (void *)_os_log_send_and_compose_impl();

    if (!v16)
    {
LABEL_14:

      return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
    }
    id v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v47, v43);
    free(v16);
    SSFileLog();
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v17 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) domain];
  unsigned int v18 = [v17 isEqualToString:SSErrorDomain];

  if (v18)
  {
    int v19 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) userInfo];
    id v20 = [v19 objectForKey:SSErrorKeychainStatusCodeKey];
    id v21 = [v20 integerValue];

    if (v21 == (id)-25300)
    {
      if ([*(id *)(a1 + 32) _isDeviceUnlocked])
      {
        uint64_t v22 = *(void **)(a1 + 32);
        uint64_t v23 = *(void *)(a1 + 40);
        uint64_t v24 = *(void *)(a1 + 80);
        uint64_t v25 = *(void *)(*(void *)(a1 + 72) + 8);
        id v45 = *(id *)(v25 + 40);
        [v22 _generateKeychainTokensForAccountIdentifier:v23 purpose:v24 error:&v45];
        objc_storeStrong((id *)(v25 + 40), v45);
        uint64_t v26 = *(void *)(*(void *)(a1 + 72) + 8);
        uint64_t v28 = *(void *)(v26 + 40);
        unsigned int v27 = (id *)(v26 + 40);
        if (v28)
        {
          uint64_t v9 = +[SSLogConfig sharedDaemonConfig];
          if (!v9)
          {
            uint64_t v9 = +[SSLogConfig sharedConfig];
          }
          unsigned int v29 = [v9 shouldLog];
          if ([v9 shouldLogToDisk]) {
            int v30 = v29 | 2;
          }
          else {
            int v30 = v29;
          }
          id v12 = [v9 OSLogObject];
          if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
            v30 &= 2u;
          }
          if (!v30) {
            goto LABEL_13;
          }
          unsigned int v31 = objc_opt_class();
          id v14 = v31;
          id v15 = SSHashIfNeeded();
          uint64_t v32 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
          int v47 = 138543874;
          id v48 = v31;
          __int16 v49 = 2112;
          int v50 = v15;
          __int16 v51 = 2114;
          uint64_t v52 = v32;
          LODWORD(v43) = 32;
        }
        else
        {
          uint64_t v33 = *(void **)(a1 + 32);
          uint64_t v34 = *(void *)(a1 + 40);
          uint64_t v35 = *(void *)(a1 + 80);
          id v44 = 0;
          id v36 = [v33 _copyPublicKeyDataForAccountIdentifier:v34 purpose:v35 error:&v44];
          objc_storeStrong(v27, v44);
          uint64_t v37 = *(void *)(*(void *)(a1 + 64) + 8);
          int v38 = *(void **)(v37 + 40);
          *(void *)(v37 + 40) = v36;

          if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)) {
            return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
          }
          uint64_t v9 = +[SSLogConfig sharedDaemonConfig];
          if (!v9)
          {
            uint64_t v9 = +[SSLogConfig sharedConfig];
          }
          unsigned int v40 = [v9 shouldLog];
          if ([v9 shouldLogToDisk]) {
            int v41 = v40 | 2;
          }
          else {
            int v41 = v40;
          }
          id v12 = [v9 OSLogObject];
          if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
            v41 &= 2u;
          }
          if (!v41) {
            goto LABEL_13;
          }
          unsigned int v42 = objc_opt_class();
          id v14 = v42;
          id v15 = SSHashIfNeeded();
          int v47 = 138543618;
          id v48 = v42;
          __int16 v49 = 2112;
          int v50 = v15;
          LODWORD(v43) = 22;
        }
        goto LABEL_11;
      }
    }
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

int64_t sub_1000E5D38(id a1, id a2, id a3)
{
  id v4 = a3;
  unint64_t v5 = sub_1000E5D94(a2);
  unint64_t v6 = sub_1000E5D94(v4);

  int64_t v7 = -1;
  if (v5 >= v6) {
    int64_t v7 = 1;
  }
  if (v5 == v6) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_1000E5D94(void *a1)
{
  id v1 = a1;
  if (SSDownloadKindIsSoftwareKind())
  {
    uint64_t v2 = 1;
  }
  else if (SSDownloadKindIsEBookKind())
  {
    uint64_t v2 = 2;
  }
  else if (SSDownloadKindIsVideoKind())
  {
    uint64_t v2 = 5;
  }
  else if (SSDownloadKindIsToneKind())
  {
    uint64_t v2 = 4;
  }
  else if (SSDownloadKindIsMediaKind())
  {
    uint64_t v2 = 3;
  }
  else
  {
    uint64_t v2 = 6;
  }

  return v2;
}

void sub_1000E6914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E6938(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int64_t v7 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _attemptFireForJob:v5 withName:v8];
  }
}

uint64_t sub_1000E7544(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 40) + 16))();
}

uint64_t sub_1000E7CCC()
{
  return ISWeakLinkedClassForString();
}

void sub_1000E7EA0()
{
}

void sub_1000E8548(_Unwind_Exception *a1)
{
}

void sub_1000E9174(_Unwind_Exception *a1)
{
}

void sub_1000E918C(uint64_t a1, int a2)
{
  if (a2) {
    objc_terminate();
  }
  JUMPOUT(0x1000E9198);
}

uint64_t sub_1000E9E94(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100401DA8;
  qword_100401DA8 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

id sub_1000EA3D8(uint64_t a1)
{
  [*(id *)(a1 + 32) _decrementPendingInstallsForDownloadIdentifier:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 _fireWaitBlocksIfNecessaryForDownloadWithIdentifier:v3];
}

void sub_1000EA508(uint64_t a1)
{
  [*(id *)(a1 + 32) _performNextOperation];
  [*(id *)(*(void *)(a1 + 32) + 32) lock];
  id v2 = [*(id *)(*(void *)(a1 + 32) + 48) count];
  [*(id *)(*(void *)(a1 + 32) + 32) unlock];
  uint64_t v3 = +[UMUserManager sharedManager];
  unsigned int v4 = [v3 isMultiUser];

  if (v4) {
    BOOL v5 = v2 == 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    unint64_t v6 = +[UMUserManager sharedManager];
    [v6 resumeSync];

    int64_t v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7)
    {
      int64_t v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    unsigned int v10 = [v7 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
      int v11 = v9;
    }
    else {
      int v11 = v9 & 2;
    }
    if (v11)
    {
      v14[0] = 0;
      LODWORD(v13) = 2;
      id v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_18:

        return;
      }
      unsigned int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, v14, v13);
      free(v12);
      SSFileLog();
    }

    goto LABEL_18;
  }
}

void sub_1000EAC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1000EAC68(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"is_from_store" equalToLongLong:1];
  BOOL v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"kind" equalToValue:SSDownloadKindSoftwareApplication];
  unint64_t v6 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"store_item_id" equalToValue:*(void *)(a1 + 32)];
  int64_t v7 = +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v5, v4, v6, 0);
  unsigned int v8 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v7];

  int v9 = [v3 database];

  unsigned int v10 = +[DownloadEntity queryWithDatabase:v9 predicate:v8];

  id v16 = @"download_state.phase";
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000EAE84;
  v13[3] = &unk_1003A6208;
  id v14 = *(id *)(a1 + 32);
  long long v12 = *(_OWORD *)(a1 + 40);
  id v11 = (id)v12;
  long long v15 = v12;
  [v10 enumeratePersistentIDsAndProperties:&v16 count:1 usingBlock:v13];
}

void sub_1000EAE84(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, unsigned char *a5)
{
  id v8 = *a3;
  int v9 = v8;
  if (v8)
  {
    if (([v8 isEqualToString:SSDownloadPhaseDownloading] & 1) == 0
      && ([v9 isEqualToString:SSDownloadPhaseInstalling] & 1) == 0
      && ([v9 isEqualToString:SSDownloadPhaseProcessing] & 1) == 0
      && ![v9 isEqualToString:SSDownloadPhaseWaiting])
    {
      uint64_t v17 = +[NSNumber numberWithLongLong:a2];
      [*(id *)(a1 + 40) addObject:v17];

      goto LABEL_19;
    }
    unsigned int v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10)
    {
      unsigned int v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v11 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v12 = v11 | 2;
    }
    else {
      int v12 = v11;
    }
    uint64_t v13 = [v10 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
      int v14 = v12;
    }
    else {
      int v14 = v12 & 2;
    }
    if (v14)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      int v19 = 138412546;
      uint64_t v20 = v15;
      __int16 v21 = 2112;
      uint64_t v22 = v9;
      LODWORD(v18) = 22;
      id v16 = (void *)_os_log_send_and_compose_impl();

      if (!v16)
      {
LABEL_18:

        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
        *a5 = 1;
        goto LABEL_19;
      }
      uint64_t v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v19, v18);
      free(v16);
      SSFileLog();
    }

    goto LABEL_18;
  }
LABEL_19:
}

id sub_1000EB348(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

id sub_1000EB62C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

uint64_t sub_1000EB868(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v5 = [v3 database];
  id v6 = objc_alloc_init((Class)SSSQLiteQueryDescriptor);
  int64_t v7 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"time_updated" value:*(void *)(a1 + 32) comparisonType:3];
  [v6 setEntityClass:objc_opt_class()];
  CFStringRef v22 = @"time_updated";
  id v8 = +[NSArray arrayWithObjects:&v22 count:1];
  [v6 setOrderingProperties:v8];

  uint64_t v21 = SSSQLiteOrderAscending;
  int v9 = +[NSArray arrayWithObjects:&v21 count:1];
  [v6 setOrderingDirections:v9];

  [v6 setPredicate:v7];
  id v10 = [objc_alloc((Class)SSSQLiteQuery) initWithDatabase:v5 descriptor:v6];
  v20[0] = @"bundle_id";
  v20[1] = @"download_id";
  void v20[2] = @"expected_phase";
  v20[3] = @"retry_count";
  unsigned int v11 = +[NSArray arrayWithObjects:v20 count:4];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1000EBACC;
  v16[3] = &unk_1003A6258;
  id v12 = v3;
  id v17 = v12;
  id v13 = *(id *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  id v18 = v13;
  uint64_t v19 = v14;
  [v10 enumerateMemoryEntitiesWithProperties:v11 usingBlock:v16];

  return 1;
}

void sub_1000EBACC(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v5 = [v3 valueForProperty:@"bundle_id"];
  if ([v5 length])
  {
    uint64_t v52 = v4;
    uint64_t v6 = [v3 valueForProperty:@"download_id"];
    int64_t v7 = [v3 valueForProperty:@"transaction_id"];
    id v8 = [v3 valueForProperty:@"expected_phase"];
    __int16 v51 = [v3 valueForProperty:@"retry_count"];
    int v9 = [v51 intValue];
    uint64_t v53 = (void *)v6;
    if (v9 > 1)
    {
      uint64_t v24 = +[SSLogConfig sharedDaemonConfig];
      if (!v24)
      {
        uint64_t v24 = +[SSLogConfig sharedConfig];
      }
      unsigned int v25 = [v24 shouldLog];
      if ([v24 shouldLogToDisk]) {
        v25 |= 2u;
      }
      uint64_t v26 = [v24 OSLogObject];
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
        int v27 = v25;
      }
      else {
        int v27 = v25 & 2;
      }
      if (v27)
      {
        int v54 = 138412802;
        unsigned int v55 = v8;
        __int16 v56 = 2112;
        uint64_t v57 = v5;
        __int16 v58 = 2112;
        uint64_t v59 = v6;
        LODWORD(v46) = 32;
        uint64_t v28 = (void *)_os_log_send_and_compose_impl();

        if (v28)
        {
          unsigned int v29 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v54, v46);
          free(v28);
          SSFileLog();
        }
      }
      else
      {
      }
      +[ApplicationWorkspaceState deleteIncompleteNotification:v8 forBundleIdentifier:v5];
      goto LABEL_69;
    }
    int v10 = v9;
    unsigned int v11 = [ApplicationWorkspaceState alloc];
    id v12 = [v3 databaseID];
    id v13 = [*(id *)(a1 + 32) database];
    uint64_t v14 = [(ApplicationWorkspaceState *)v11 initWithPersistentID:v12 inDatabase:v13];

    v60[0] = @"retry_count";
    uint64_t v15 = +[NSNumber numberWithInt:(v10 + 1)];
    v60[1] = @"time_updated";
    uint64_t v16 = *(void *)(a1 + 40);
    v61[0] = v15;
    v61[1] = v16;
    id v17 = +[NSDictionary dictionaryWithObjects:v61 forKeys:v60 count:2];
    int v50 = v14;
    [(ApplicationWorkspaceState *)v14 setValuesWithDictionary:v17];

    id v18 = -[ApplicationHandle initWithTransactionIdentifier:downloadIdentifier:bundleIdentifier:]([ApplicationHandle alloc], "initWithTransactionIdentifier:downloadIdentifier:bundleIdentifier:", [v7 longLongValue], objc_msgSend(v53, "longLongValue"), v5);
    if ([v8 isEqualToString:SSDownloadPhaseFailed])
    {
      int v47 = v18;
      uint64_t v19 = +[SSLogConfig sharedDaemonConfig];
      unsigned int v4 = v52;
      if (!v19)
      {
        uint64_t v19 = +[SSLogConfig sharedConfig];
      }
      unsigned int v20 = [v19 shouldLog];
      if ([v19 shouldLogToDisk]) {
        v20 |= 2u;
      }
      uint64_t v21 = [v19 OSLogObject];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
        int v22 = v20;
      }
      else {
        int v22 = v20 & 2;
      }
      if (v22)
      {
        int v54 = 138412802;
        unsigned int v55 = v8;
        __int16 v56 = 2112;
        uint64_t v57 = v5;
        __int16 v58 = 2112;
        uint64_t v59 = (uint64_t)v53;
        LODWORD(v46) = 32;
        uint64_t v23 = (void *)_os_log_send_and_compose_impl();

        if (!v23)
        {
LABEL_15:

          id v18 = v47;
          [*(id *)(a1 + 48) markFailedPlaceholderForApplicationHandle:v47];
LABEL_68:

LABEL_69:
          goto LABEL_70;
        }
        uint64_t v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v54, v46);
        free(v23);
        SSFileLog();
      }

      goto LABEL_15;
    }
    if ([v8 isEqualToString:SSDownloadPhaseInstalling])
    {
      id v48 = v18;
      int v30 = +[SSLogConfig sharedDaemonConfig];
      unsigned int v4 = v52;
      if (!v30)
      {
        int v30 = +[SSLogConfig sharedConfig];
      }
      unsigned int v31 = [v30 shouldLog];
      if ([v30 shouldLogToDisk]) {
        v31 |= 2u;
      }
      uint64_t v32 = [v30 OSLogObject];
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT)) {
        int v33 = v31;
      }
      else {
        int v33 = v31 & 2;
      }
      if (v33)
      {
        int v54 = 138412802;
        unsigned int v55 = v8;
        __int16 v56 = 2112;
        uint64_t v57 = v5;
        __int16 v58 = 2112;
        uint64_t v59 = (uint64_t)v53;
        LODWORD(v46) = 32;
        uint64_t v34 = (void *)_os_log_send_and_compose_impl();

        if (!v34)
        {
LABEL_38:

          id v18 = v48;
          [*(id *)(a1 + 48) installPlaceholderForApplicationHandle:v48];
          goto LABEL_68;
        }
        uint64_t v32 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v34, 4, &v54, v46);
        free(v34);
        SSFileLog();
      }

      goto LABEL_38;
    }
    unsigned int v35 = [v8 isEqualToString:SSDownloadPhaseCanceled];
    uint64_t v36 = +[SSLogConfig sharedDaemonConfig];
    uint64_t v37 = (void *)v36;
    if (v35)
    {
      __int16 v49 = v18;
      if (!v36)
      {
        uint64_t v37 = +[SSLogConfig sharedConfig];
      }
      unsigned int v38 = [v37 shouldLog];
      if ([v37 shouldLogToDisk]) {
        v38 |= 2u;
      }
      uint64_t v39 = [v37 OSLogObject];
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT)) {
        int v40 = v38;
      }
      else {
        int v40 = v38 & 2;
      }
      if (v40)
      {
        int v54 = 138412802;
        unsigned int v55 = v8;
        __int16 v56 = 2112;
        uint64_t v57 = v5;
        __int16 v58 = 2112;
        uint64_t v59 = (uint64_t)v53;
        LODWORD(v46) = 32;
        int v41 = (void *)_os_log_send_and_compose_impl();

        unsigned int v4 = v52;
        if (!v41)
        {
LABEL_64:

          id v18 = v49;
          [*(id *)(a1 + 48) uninstallPlaceholderForApplicationHandle:v49];
          goto LABEL_68;
        }
        uint64_t v39 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v41, 4, &v54, v46);
        free(v41);
        SSFileLog();
      }
      else
      {
        unsigned int v4 = v52;
      }

      goto LABEL_64;
    }
    if (!v36)
    {
      uint64_t v37 = +[SSLogConfig sharedConfig];
    }
    unsigned int v42 = [v37 shouldLog];
    if ([v37 shouldLogToDisk]) {
      v42 |= 2u;
    }
    uint64_t v43 = [v37 OSLogObject];
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT)) {
      int v44 = v42;
    }
    else {
      int v44 = v42 & 2;
    }
    if (v44)
    {
      int v54 = 138412802;
      unsigned int v55 = v8;
      __int16 v56 = 2112;
      uint64_t v57 = v5;
      __int16 v58 = 2112;
      uint64_t v59 = (uint64_t)v53;
      LODWORD(v46) = 32;
      id v45 = (void *)_os_log_send_and_compose_impl();

      unsigned int v4 = v52;
      if (!v45)
      {
LABEL_67:

        goto LABEL_68;
      }
      uint64_t v43 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v45, 4, &v54, v46);
      free(v45);
      SSFileLog();
    }
    else
    {
      unsigned int v4 = v52;
    }

    goto LABEL_67;
  }
LABEL_70:
}

id sub_1000EC450(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

id sub_1000EC528(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

void sub_1000EC9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000EC9FC(uint64_t a1, void *a2)
{
  uint64_t v3 = SSDownloadKindDocument;
  id v4 = a2;
  BOOL v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"kind" equalToValue:v3];
  uint64_t v6 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"kind" equalToValue:SSDownloadKindEBook];
  v14[0] = v5;
  v14[1] = v6;
  int64_t v7 = +[NSArray arrayWithObjects:v14 count:2];
  id v8 = +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:v7];

  int v9 = [v4 database];

  int v10 = +[DownloadEntity queryWithDatabase:v9 predicate:v8];

  id v13 = @"download_state.phase";
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000ECBCC;
  v11[3] = &unk_1003A6280;
  long long v12 = *(_OWORD *)(a1 + 32);
  [v10 enumeratePersistentIDsAndProperties:&v13 count:1 usingBlock:v11];
}

void sub_1000ECBCC(uint64_t a1, uint64_t a2, id *a3)
{
  id v5 = *a3;
  uint64_t v6 = v5;
  if (v5
    && (([v5 isEqualToString:SSDownloadPhaseDownloading] & 1) != 0
     || ([v6 isEqualToString:SSDownloadPhaseInstalling] & 1) != 0
     || ([v6 isEqualToString:SSDownloadPhaseProcessing] & 1) != 0
     || [v6 isEqualToString:SSDownloadPhaseWaiting]))
  {
    int64_t v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7)
    {
      int64_t v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    int v10 = [v7 OSLogObject];
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
      v9 &= 2u;
    }
    if (v9)
    {
      *(_DWORD *)uint64_t v14 = 138412802;
      *(void *)&void v14[4] = objc_opt_class();
      *(_WORD *)&unsigned char v14[12] = 2048;
      *(void *)&v14[14] = a2;
      *(_WORD *)&v14[22] = 2112;
      uint64_t v15 = v6;
      id v11 = *(id *)&v14[4];
      LODWORD(v13) = 32;
      long long v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_17:

        ++*(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
        goto LABEL_18;
      }
      int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, v14, v13, *(_OWORD *)v14, *(void *)&v14[16], v15);
      free(v12);
      SSFileLog();
    }

    goto LABEL_17;
  }
LABEL_18:
}

id sub_1000ED010(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

void sub_1000ED268(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    uint64_t v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  uint64_t v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_11;
  }
  *(_DWORD *)int v10 = 138412546;
  *(void *)&void v10[4] = objc_opt_class();
  *(_WORD *)&v10[12] = 2112;
  *(void *)&v10[14] = v2;
  id v7 = *(id *)&v10[4];
  LODWORD(v9) = 22;
  unsigned int v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    uint64_t v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v10, v9, *(_OWORD *)v10, *(void *)&v10[16]);
    free(v8);
    SSFileLog();
LABEL_11:
  }
}

id sub_1000ED4E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

id sub_1000ED5BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

uint64_t sub_1000ED970(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1000EDA88(uint64_t a1)
{
  return [*(id *)(a1 + 32) _fireWaitBlocksForSyncTermination];
}

BOOL sub_1000EE314(id a1, DownloadsTransaction *a2)
{
  id v2 = a2;
  uint64_t v3 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"is_from_store" equalToLongLong:1];
  unsigned int v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"kind" equalToValue:SSDownloadKindSoftwareApplication];
  int v5 = +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v4, v3, 0);
  uint64_t v6 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v5];

  id v7 = [(DownloadsSession *)v2 database];
  unsigned int v8 = +[DownloadEntity queryWithDatabase:v7 predicate:v6];

  v14[0] = @"download_state.phase";
  v14[1] = @"bundle_id";
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000EE508;
  v12[3] = &unk_1003A3988;
  uint64_t v9 = v2;
  uint64_t v13 = v9;
  [v8 enumeratePersistentIDsAndProperties:v14 count:2 usingBlock:v12];

  for (uint64_t i = 1; i != -1; --i)
  return 1;
}

void sub_1000EE508(uint64_t a1, uint64_t a2, id *a3)
{
  id v6 = *a3;
  id v7 = a3[1];
  if (v6
    && (([v6 isEqualToString:SSDownloadPhaseDownloading] & 1) != 0
     || [v6 isEqualToString:SSDownloadPhaseWaiting]))
  {
    unsigned int v8 = [*(id *)(a1 + 32) finishDownloadWithID:a2 finalPhase:SSDownloadPhaseCanceled];
    uint64_t v9 = +[SSLogConfig sharedDaemonConfig];
    int v10 = (void *)v9;
    if (!v8)
    {
      if (!v9)
      {
        int v10 = +[SSLogConfig sharedConfig];
      }
      unsigned int v20 = [v10 shouldLog];
      if ([v10 shouldLogToDisk]) {
        int v21 = v20 | 2;
      }
      else {
        int v21 = v20;
      }
      id v18 = [v10 OSLogObject];
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
        int v22 = v21;
      }
      else {
        int v22 = v21 & 2;
      }
      if (!v22) {
        goto LABEL_39;
      }
      *(_DWORD *)uint64_t v26 = 134218498;
      *(void *)&v26[4] = a2;
      *(_WORD *)&v26[12] = 2112;
      *(void *)&v26[14] = v6;
      *(_WORD *)&v26[22] = 2112;
      id v27 = v7;
      LODWORD(v25) = 32;
      goto LABEL_37;
    }
    if (!v9)
    {
      int v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v11 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v12 = v11 | 2;
    }
    else {
      int v12 = v11;
    }
    uint64_t v13 = [v10 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
      int v14 = v12;
    }
    else {
      int v14 = v12 & 2;
    }
    if (v14)
    {
      *(_DWORD *)uint64_t v26 = 134218498;
      *(void *)&v26[4] = a2;
      *(_WORD *)&v26[12] = 2112;
      *(void *)&v26[14] = v7;
      *(_WORD *)&v26[22] = 2112;
      id v27 = v6;
      LODWORD(v25) = 32;
      uint64_t v24 = v26;
      uint64_t v15 = (void *)_os_log_send_and_compose_impl();

      if (!v15)
      {
LABEL_17:

        int v10 = +[SSLogConfig sharedDaemonConfig];
        if (!v10)
        {
          int v10 = +[SSLogConfig sharedConfig];
        }
        unsigned int v16 = objc_msgSend(v10, "shouldLog", v24);
        if ([v10 shouldLogToDisk]) {
          int v17 = v16 | 2;
        }
        else {
          int v17 = v16;
        }
        id v18 = [v10 OSLogObject];
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
          int v19 = v17;
        }
        else {
          int v19 = v17 & 2;
        }
        if (!v19) {
          goto LABEL_39;
        }
        *(_DWORD *)uint64_t v26 = 134218242;
        *(void *)&v26[4] = a2;
        *(_WORD *)&v26[12] = 2112;
        *(void *)&v26[14] = v7;
        LODWORD(v25) = 22;
LABEL_37:
        uint64_t v23 = (void *)_os_log_send_and_compose_impl();

        if (!v23)
        {
LABEL_40:

          goto LABEL_41;
        }
        id v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, v26, v25, *(_OWORD *)v26, *(void *)&v26[16]);
        free(v23);
        SSFileLog();
LABEL_39:

        goto LABEL_40;
      }
      uint64_t v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, v26, v25);
      free(v15);
      uint64_t v24 = v13;
      SSFileLog();
    }

    goto LABEL_17;
  }
LABEL_41:
}

intptr_t sub_1000EE8B8(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

BOOL sub_1000EEB68(uint64_t a1, void *a2)
{
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [a2 applicationHandle];
  BOOL v4 = v2 == [v3 downloadID];

  return v4;
}

id sub_1000EEBAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

void sub_1000EEEF4(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      int v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        int v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_1000EF0A8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id v2 = *(NSObject **)(*(void *)(a1 + 40) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000EF148;
    block[3] = &unk_1003A3140;
    id v4 = *(id *)(a1 + 32);
    dispatch_async(v2, block);
  }
}

void sub_1000EF148(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      int v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        int v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_1000EF5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EF5F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000EF600(uint64_t a1)
{
}

void sub_1000EF608(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
  id v5 = obj;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000EFCE4(id a1, sqlite3 *a2)
{
}

void sub_1000EFF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000EFF80(uint64_t a1, uint64_t a2)
{
  id result = +[SSSQLiteDatabase statementHasRowAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000EFFBC(void *a1)
{
  for (uint64_t i = 0; i != 80; i += 16)
  {
    id v3 = [objc_alloc((Class)NSString) initWithFormat:@"INSERT INTO application_id (effective_client_id, bundle_id) VALUES (%ld, \"%@\")", *(__CFString **)((char *)&off_1003A6398 + i + 8), *(__CFString **)((char *)&off_1003A6398 + i)];
    [a1 executeSQL:v3];
  }
}

void sub_1000F0B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000F0C5C(uint64_t a1, uint64_t a2)
{
  if (+[SSSQLiteDatabase statementHasRowAfterStepping:a2])
  {
    id v3 = (id)SSSQLiteCopyFoundationValueForStatementColumn();
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 intValue];
  }
}

id sub_1000F0CE0(void *a1, const char *a2)
{
  *(_DWORD *)a2 = 5000;
  return [a1 setUserVersion:5000];
}

id sub_1000F0CF0(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN store_account_name TEXT;"];
  *a2 = 5001;

  return [a1 setUserVersion:5001];
}

id sub_1000F0D40(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN suppress_error_dialogs SchemaUserVersionEGER NOT NULL DEFAULT 0;"];
  *a2 = 5002;

  return [a1 setUserVersion:5002];
}

id sub_1000F0D90(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN blocked_reason INTEGER NOT NULL DEFAULT 0;"];
  *a2 = 5003;

  return [a1 setUserVersion:5003];
}

id sub_1000F0DE0(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN store_match_status INTEGER NOT NULL DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN store_redownload_status INTEGER NOT NULL DEFAULT 0;"];
  *a2 = 5004;

  return [a1 setUserVersion:5004];
}

id sub_1000F0E40(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_store_queued INTEGER DEFAULT 0;"];
  *a2 = 5005;

  return [a1 setUserVersion:5005];
}

id sub_1000F0E90(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN store_redownload_parameters TEXT;"];
  *a2 = 5006;

  return [a1 setUserVersion:5006];
}

id sub_1000F0EE0(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN thumbnail_newsstand_binding_edge TEXT;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN thumbnail_newsstand_binding_type TEXT;"];
  *a2 = 5007;

  return [a1 setUserVersion:5007];
}

id sub_1000F0F40(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_cellular_restricted INTEGER DEFAULT 0;"];
  *a2 = 5008;

  return [a1 setUserVersion:5008];
}

id sub_1000F0F90(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN requires_device_plugged_in INTEGER DEFAULT 0;"];
  *a2 = 5009;

  return [a1 setUserVersion:5009];
}

id sub_1000F0FE0(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN cancel_on_failure INTEGER DEFAULT 0;"];
  *a2 = 5010;

  return [a1 setUserVersion:5010];
}

id sub_1000F1030(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN size_limit_4G INTEGER;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN size_limit_5G INTEGER;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN size_limit_6G INTEGER;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN size_limit_7G INTEGER;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN size_limit_8G INTEGER;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN size_limit_9G INTEGER;"];
  *a2 = 5100;

  return [a1 setUserVersion:5100];
}

id sub_1000F10D0(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE persistent_manager ADD COLUMN migration_version INTEGER DEFAULT 0;"];
  *a2 = 5101;

  return [a1 setUserVersion:5101];
}

id sub_1000F1120(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN download_token INTEGER DEFAULT 0;"];
  *a2 = 6000;

  return [a1 setUserVersion:6000];
}

id sub_1000F1170(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN policy_id INTEGER DEFAULT 0;"];
  id v3 = objc_alloc_init((Class)NSMutableDictionary);
  v40[2] = *(_OWORD *)off_1003A6408;
  v40[3] = *(_OWORD *)off_1003A6418;
  CFStringRef v41 = @"size_limit_WiFi";
  v40[0] = *(_OWORD *)off_1003A63E8;
  v40[1] = *(_OWORD *)off_1003A63F8;
  id v4 = objc_alloc_init((Class)NSMutableArray);
  for (uint64_t i = 0; i != 72; i += 8)
    objc_msgSend(v4, "addObject:", +[SSSQLiteNullPredicate isNotNullPredicateWithProperty:](SSSQLiteNullPredicate, "isNotNullPredicateWithProperty:", *(void *)((char *)v40 + i)));
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_1000F2BF8;
  void v33[3] = &unk_1003A6438;
  void v33[4] = v3;
  v33[5] = 9;
  objc_msgSend(+[DownloadEntity queryWithDatabase:predicate:](DownloadEntity, "queryWithDatabase:predicate:", a1, +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:](SSSQLiteCompoundPredicate, "predicateMatchingAnyPredicates:", v4)), "enumeratePersistentIDsAndProperties:count:usingBlock:", v40, 9, v33);

  id v6 = +[DownloadAssetEntity queryWithDatabase:predicate:](DownloadAssetEntity, "queryWithDatabase:predicate:", a1, +[SSSQLiteComparisonPredicate predicateWithProperty:@"requires_device_plugged_in" equalToLongLong:1]);
  CFStringRef v39 = @"download_id";
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_1000F2E60;
  v32[3] = &unk_1003A32B8;
  v32[4] = v3;
  [v6 enumeratePersistentIDsAndProperties:&v39 count:1 usingBlock:v32];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v7 = [v3 countByEnumeratingWithState:&v28 objects:v38 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v29;
    do
    {
      for (uint64_t j = 0; j != v8; uint64_t j = (char *)j + 1)
      {
        if (*(void *)v29 != v9) {
          objc_enumerationMutation(v3);
        }
        unsigned int v11 = *(void **)(*((void *)&v28 + 1) + 8 * (void)j);
        uint64_t v27 = 0;
        int v12 = +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:](NSKeyedArchiver, "archivedDataWithRootObject:requiringSecureCoding:error:", objc_msgSend(v3, "objectForKey:", v11, v24, v25), 1, &v27);
        if (v27)
        {
          id v13 = +[SSLogConfig sharedStoreServicesConfig];
          if (!v13) {
            id v13 = +[SSLogConfig sharedConfig];
          }
          unsigned int v14 = [v13 shouldLog];
          if ([v13 shouldLogToDisk]) {
            int v15 = v14 | 2;
          }
          else {
            int v15 = v14;
          }
          if (os_log_type_enabled((os_log_t)[v13 OSLogObject], OS_LOG_TYPE_ERROR)) {
            int v16 = v15;
          }
          else {
            int v16 = v15 & 2;
          }
          if (v16)
          {
            int v34 = 136446466;
            unsigned int v35 = "void ConvertConstraintsToPolicies(SSSQLiteDatabase *)";
            __int16 v36 = 2114;
            uint64_t v37 = v27;
            LODWORD(v25) = 22;
            uint64_t v24 = &v34;
            uint64_t v17 = _os_log_send_and_compose_impl();
            if (v17)
            {
              id v18 = (void *)v17;
              int v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v34, v25);
              free(v18);
              uint64_t v24 = (int *)v19;
              SSFileLog();
            }
          }
        }
        if (v12)
        {
          uint64_t v24 = (int *)@"policy_data";
          uint64_t v25 = 0;
          id v20 = [objc_alloc((Class)NSDictionary) initWithObjectsAndKeys:v12];
          int v21 = [[DownloadPolicyEntity alloc] initWithPropertyValues:v20 inDatabase:a1];
          int v22 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [v11 longLongValue], a1);
          [(DownloadEntity *)v22 setValue:+[NSNumber numberWithLongLong:[(DownloadPolicyEntity *)v21 persistentID]] forProperty:@"policy_id"];
        }
      }
      id v8 = [v3 countByEnumeratingWithState:&v28 objects:v38 count:16];
    }
    while (v8);
  }

  *a2 = 6001;
  return [a1 setUserVersion:6001];
}

id sub_1000F1624(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN preferred_asset_flavor TEXT;"];
  *a2 = 6002;

  return [a1 setUserVersion:6002];
}

id sub_1000F1674(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN cancel_if_duplicate INTEGER DEFAULT 0;"];
  *a2 = 6003;

  return [a1 setUserVersion:6003];
}

id sub_1000F16C4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN sinfs_data BLOB;"];
  *a2 = 6004;

  return [a1 setUserVersion:6004];
}

id sub_1000F1714(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN etag TEXT;"];
  *a2 = 6005;

  return [a1 setUserVersion:6005];
}

id sub_1000F1764(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN blocked_reason INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN store_download_key TEXT;"];
  *a2 = 6006;

  return [a1 setUserVersion:6006];
}

id sub_1000F17C4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN is_server_finished INTEGER DEFAULT 0;"];
  *a2 = 6007;

  return [a1 setUserVersion:6007];
}

id sub_1000F1814(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN service_type INTEGER DEFAULT 0;"];
  *a2 = 6008;

  return [a1 setUserVersion:6008];
}

id sub_1000F1864(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN is_hash_verified INTEGER DEFAULT 0;"];
  *a2 = 6009;

  return [a1 setUserVersion:6009];
}

id sub_1000F18B4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN store_url TEXT;"];
  *a2 = 6010;

  return [a1 setUserVersion:6010];
}

id sub_1000F1904(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN has_restore_data INTEGER DEFAULT -1;"];
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN restore_data_size INTEGER DEFAULT 0;"];
  *a2 = 6011;

  return [a1 setUserVersion:6011];
}

id sub_1000F1964(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN store_queue_refresh_count INTEGER DEFAULT 0;"];
  *a2 = 6012;

  return [a1 setUserVersion:6012];
}

id sub_1000F19B4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN did_restore_data INTEGER DEFAULT 0;"];
  *a2 = 6013;

  return [a1 setUserVersion:6013];
}

id sub_1000F1A04(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_explicit INTEGER DEFAULT 0;"];
  *a2 = 6014;

  return [a1 setUserVersion:6014];
}

id sub_1000F1A54(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN page_progression_direction TEXT;"];
  *a2 = 6100;

  return [a1 setUserVersion:6100];
}

id sub_1000F1AA4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN asset_order INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN is_local_cache_server INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN server_guid TEXT;"];
  *a2 = 7000;

  return [a1 setUserVersion:7000];
}

id sub_1000F1B14(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN purchase_id INTEGER DEFAULT 0;"];
  *a2 = 7002;

  return [a1 setUserVersion:7002];
}

id sub_1000F1B64(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN page_progression_direction TEXT;"];
  *a2 = 7002;

  return [a1 setUserVersion:7002];
}

id sub_1000F1BB4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN auto_update_time INTEGER;"];
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN auto_update_state INTEGER NOT NULL DEFAULT 0;"];
  *a2 = 7003;

  return [a1 setUserVersion:7003];
}

id sub_1000F1C14(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_hd INTEGER DEFAULT 0;"];
  *a2 = 7004;

  return [a1 setUserVersion:7004];
}

id sub_1000F1C64(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN is_zip_streamable INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN uncompressed_size INTEGER DEFAULT 0;"];
  *a2 = 7005;

  return [a1 setUserVersion:7005];
}

id sub_1000F1CC4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE client ADD COLUMN audit_token_data BLOB;"];
  *a2 = 7006;

  return [a1 setUserVersion:7006];
}

id sub_1000F1D14(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN body_data_file_path TEXT;"];
  *a2 = 7008;

  return [a1 setUserVersion:7008];
}

id sub_1000F1D64(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN body_data_file_path TEXT;"];
  *a2 = 7008;

  return [a1 setUserVersion:7008];
}

id sub_1000F1DB4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN can_cancel INTEGER DEFAULT 1;"];
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN can_prioritize INTEGER DEFAULT 1;"];
  *a2 = 7009;

  return [a1 setUserVersion:7009];
}

id sub_1000F1E14(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN override_audit_token_data BLOB;"];
  *a2 = 7010;

  return [a1 setUserVersion:7010];
}

id sub_1000F1E64(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"CREATE TABLE IF NOT EXISTS application_workspace_state (pid INTEGER, bundle_id TEXT NOT NULL, download_id INTEGER, expected_phase TEXT NOT NULL DEFAULT 0, retry_count INTEGER NOT NULL DEFAULT 0, time_updated INTEGER NOT NULL DEFAULT 0, transaction_id INTEGER, PRIMARY KEY (pid), UNIQUE (bundle_id));"];
  [a1 executeSQL:@"CREATE INDEX IF NOT EXISTS application_workspace_state_bundle_id ON application_workspace_state (bundle_id);"];
  *a2 = 7011;

  return [a1 setUserVersion:7011];
}

id sub_1000F1EC4(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN effective_client_id INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN order_seed INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"UPDATE download SET priority=1 WHERE priority>1;"];
  [a1 executeSQL:@"UPDATE download SET priority=-1 WHERE priority<0;"];
  [a1 executeSQL:@"UPDATE download SET priority=-2 WHERE is_restore=1;"];
  sub_1000EFFBC(a1);
  *a2 = 7012;

  return [a1 setUserVersion:7012];
}

id sub_1000F1F5C(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN is_downloaded INTEGER DEFAULT 0;"];
  *a2 = 7013;

  return [a1 setUserVersion:7013];
}

id sub_1000F1FAC(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN duet_transfer_type INTEGER DEFAULT 0;"];
  *a2 = 7014;

  return [a1 setUserVersion:7014];
}

id sub_1000F1FFC(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN airplay_content_type TEXT;"];
  *a2 = 7015;

  return [a1 setUserVersion:7015];
}

id sub_1000F204C(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN hash_type INTEGER DEFAULT 0;"];
  *a2 = 7100;

  return [a1 setUserVersion:7100];
}

id sub_1000F209C(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN url_session_task_id INTEGER DEFAULT -1;"];
  *a2 = 8000;

  return [a1 setUserVersion:8000];
}

id sub_1000F20EC(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN processing_types INTEGER DEFAULT 0;"];
  *a2 = 8001;

  return [a1 setUserVersion:8001];
}

id sub_1000F213C(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN dpinfo_data BLOB;"];
  *a2 = 8002;

  return [a1 setUserVersion:8002];
}

id sub_1000F218C(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN file_protection TEXT;"];
  *a2 = 8003;

  return [a1 setUserVersion:8003];
}

id sub_1000F21DC(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN is_discretionary INTEGER DEFAULT 0;"];
  *a2 = 8004;

  return [a1 setUserVersion:8004];
}

id sub_1000F222C(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN avfoundation_blocked INTEGER DEFAULT 0;"];
  *a2 = 8005;

  return [a1 setUserVersion:8005];
}

id sub_1000F227C(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN store_cohort TEXT;"];
  *a2 = 8006;

  return [a1 setUserVersion:8006];
}

id sub_1000F22CC(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN ref_app TEXT;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN ref_url TEXT;"];
  *a2 = 8300;

  return [a1 setUserVersion:8300];
}

id sub_1000F232C(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN reason INTEGER DEFAULT 0;"];
  *a2 = 8301;

  return [a1 setUserVersion:8301];
}

id sub_1000F237C(void *a1, _DWORD *a2)
{
  objc_msgSend(a1, "executeSQL:", +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"UPDATE application_id SET effective_client_id=%ld WHERE bundle_id=\"com.apple.Music\";",
      4));
  *a2 = 8302;

  return [a1 setUserVersion:8302];
}

id sub_1000F23F0(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN protection_type INTEGER DEFAULT 0;"];
  *a2 = 8303;

  return [a1 setUserVersion:8303];
}

id sub_1000F2440(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN variant_id TEXT;"];
  *a2 = 9003;

  return [a1 setUserVersion:9003];
}

id sub_1000F2490(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN reason INTEGER DEFAULT 0;"];
  objc_msgSend(a1, "executeSQL:", +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"UPDATE application_id SET effective_client_id=%ld WHERE bundle_id=\"com.apple.Music\";",
      4));
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN protection_type INTEGER DEFAULT 0;"];
  *a2 = 9003;

  return [a1 setUserVersion:9003];
}

id sub_1000F2528(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN loading_priority REAL;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN rate_limit INTEGER;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN timeout_interval REAL;"];
  *a2 = 9004;

  return [a1 setUserVersion:9004];
}

id sub_1000F2598(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN variant_id TEXT;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN beta_external_version_identifier INTEGER DEFAULT 0;"];
  *a2 = 9005;

  return [a1 setUserVersion:9005];
}

id sub_1000F25F8(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download_state ADD COLUMN last_odr_action INTEGER DEFAULT 0;"];
  *a2 = 9006;

  return [a1 setUserVersion:9006];
}

id sub_1000F2648(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN initial_odr_size INTEGER;"];
  *a2 = 9007;

  return [a1 setUserVersion:9007];
}

id sub_1000F2698(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_tv_template INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_device_based_vpp INTEGER DEFAULT 0;"];
  *a2 = 9008;

  return [a1 setUserVersion:9008];
}

id sub_1000F26F8(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_shared INTEGER DEFAULT 0;"];
  *a2 = 9300;

  return [a1 setUserVersion:9300];
}

id sub_1000F2748(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN transaction_id INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE application_workspace_state ADD COLUMN transaction_id INTEGER;"];
  *a2 = 9301;

  return [a1 setUserVersion:9301];
}

id sub_1000F27A8(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN store_publication_version INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN download_permalink TEXT;"];
  *a2 = 9302;

  return [a1 setUserVersion:9302];
}

id sub_1000F2808(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_diverted INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN diverted_job_id INTEGER;"];
  *a2 = 10000;

  return [a1 setUserVersion:10000];
}

id sub_1000F2868(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN rental_id INTEGER;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN hls_playlist_url TEXT;"];
  *a2 = 10001;

  return [a1 setUserVersion:10001];
}

id sub_1000F28C8(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN has_messages_extension INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN launch_prohibited INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN messages_artwork_url TEXT;"];
  *a2 = 10002;

  return [a1 setUserVersion:10002];
}

id sub_1000F2938(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN enable_extensions INTEGER DEFAULT 0;"];
  *a2 = 10003;

  return [a1 setUserVersion:10003];
}

id sub_1000F2988(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN launch_prohibited INTEGER DEFAULT 0;"];
  *a2 = 10004;

  return [a1 setUserVersion:10004];
}

id sub_1000F29D8(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download RENAME TO _download;"];
  [a1 executeSQL:@"CREATE TABLE IF NOT EXISTS download (pid INTEGER, airplay_content_type TEXT, artist_name TEXT, artwork_is_prerendered INTEGER DEFAULT 0, artwork_template_name TEXT, auto_update_time INTEGER, beta_external_version_identifier INTEGER DEFAULT 0, bundle_id TEXT, bundle_version TEXT, cancel_if_duplicate INTEGER DEFAULT 0, cancel_on_failure INTEGER DEFAULT 0, cancel_url TEXT, client_id TEXT, collection_artist_name TEXT, collection_group_count INTEGER, collection_item_count INTEGER, collection_name TEXT, composer_name TEXT, diverted_job_id INTEGER, document_target_id TEXT, download_permalink TEXT, duet_transfer_type INTEGER DEFAULT 0, duration_in_ms INTEGER DEFAULT 0, effective_client_id INTEGER DEFAULT 0, enable_extensions INTEGER DEFAULT 0, episode_id TEXT, episode_sort_id INTEGER, handler_id INTEGER DEFAULT 0, has_4k INTEGER DEFAULT 0, has_dolby_vision INTEGER DEFAULT 0, has_hdr INTEGER DEFAULT 0, has_messages_extension INTEGER DEFAULT 0, hls_playlist_url TEXT, genre_name TEXT, index_in_collection INTEGER DEFAULT 0, index_in_collection_group INTEGER, is_automatic INTEGER DEFAULT 0, is_compilation INTEGER DEFAULT 0, is_device_based_vpp INTEGER DEFAULT 0, is_diverted INTEGER DEFAULT 0, is_explicit INTEGER DEFAULT 0, is_from_store INTEGER DEFAULT 0, is_hd INTEGER DEFAULT 0, is_hls INTEGER DEFAULT 0, is_premium INTEGER DEFAULT 0, is_private INTEGER DEFAULT 0, is_purchase INTEGER DEFAULT 0, is_redownload INTEGER DEFAULT 0, is_restore INTEGER DEFAULT 0, is_rental INTEGER DEFAULT 0, is_sample INTEGER DEFAULT 0, is_shared INTEGER DEFAULT 0, is_store_queued INTEGER DEFAULT 0, is_tv_template INTEGER DEFAULT 0, is_music_show INTEGER DEFAULT 0, kind TEXT, launch_prohibited INTEGER DEFAULT 0, library_id TEXT, loading_priority REAL, long_description TEXT, long_season_description TEXT, messages_artwork_url TEXT, network_name TEXT, order_key DOUBLE DEFAULT 0, order_seed INTEGER DEFAULT 0, override_audit_token_data BLOB, page_progression_direction TEXT, podcast_episode_guid TEXT, podcast_feed_url TEXT, podcast_type TEXT, policy_id INTEGER DEFAULT 0, priority INTEGER DEFAULT 0, preferred_asset_flavor TEXT, purchase_id INTEGER DEFAULT 0, rate_limit INTEGER, reason INTEGER DEFAULT 0,ref_app TEXT, ref_url TEXT, release_date INTEGER, release_year INTEGER, rental_id INTEGER, resource_timeout_interval REAL, season_number INTEGER, series_name TEXT, software_type TEXT, short_description TEXT, show_composer INTEGER DEFAULT 0, suppress_error_dialogs INTEGER NOT NULL DEFAULT 0, store_account_id INTEGER, store_account_name TEXT, store_artist_id INTEGER, store_cohort TEXT, store_collection_id INTEGER, store_composer_id INTEGER, store_download_key TEXT, store_front_id TEXT, store_genre_id INTEGER, store_item_id INTEGER, store_match_status INTEGER NOT NULL DEFAULT 0, store_publication_version INTEGER DEFAULT 0, store_preorder_id INTEGER, store_purchase_date INTEGER, store_redownload_parameters TEXT, store_redownload_status INTEGER NOT NULL DEFAULT 0, store_saga_id INTEGER, store_software_version_id INTEGER, store_transaction_id TEXT, store_url TEXT, store_xid TEXT, thumbnail_newsstand_binding_edge TEXT, thumbnail_newsstand_binding_type TEXT, thumbnail_url TEXT, timeout_interval REAL, timestamp INTEGER DEFAULT (strftime('%s', 'now')), title TEXT, transaction_id INTEGER DEFAULT 0, variant_id TEXT, work_name TEXT, PRIMARY KEY (pid));"];
  [a1 executeSQL:@"INSERT INTO download (pid, airplay_content_type, artist_name, artwork_is_prerendered, artwork_template_name, auto_update_time, beta_external_version_identifier, bundle_id, bundle_version, cancel_if_duplicate, cancel_on_failure, cancel_url, client_id, collection_artist_name, collection_group_count, collection_item_count, collection_name, composer_name, diverted_job_id, document_target_id, download_permalink, duet_transfer_type, duration_in_ms, effective_client_id, enable_extensions, episode_id, episode_sort_id, handler_id, has_messages_extension, hls_playlist_url, genre_name, index_in_collection, index_in_collection_group, is_automatic, is_compilation, is_device_based_vpp, is_diverted, is_explicit, is_from_store, is_hd, is_private, is_purchase, is_redownload, is_restore, is_rental, is_sample, is_shared, is_store_queued, is_tv_template, kind, launch_prohibited, library_id, loading_priority, long_description, long_season_description, messages_artwork_url, network_name, order_key, order_seed, override_audit_token_data, page_progression_direction, podcast_episode_guid, podcast_feed_url, podcast_type, policy_id, priority, preferred_asset_flavor, purchase_id, rate_limit, reason, ref_app, ref_url, release_date, release_year, rental_id, season_number, series_name, software_type, short_description, suppress_error_dialogs, store_account_id, store_account_name, store_artist_id, store_cohort, store_collection_id, store_composer_id, store_download_key, store_front_id, store_genre_id, store_item_id, store_match_status, store_publication_version, store_preorder_id, store_purchase_date, store_redownload_parameters, store_redownload_status, store_saga_id, store_software_version_id, store_transaction_id, store_url, store_xid, thumbnail_newsstand_binding_edge, thumbnail_newsstand_binding_type, thumbnail_url, timeout_interval, title, transaction_id, variant_id) SELECT pid, airplay_content_type, artist_name, artwork_is_prerendered, artwork_template_name, auto_update_time, beta_external_version_identifier, bundle_id, bundle_version, cancel_if_duplicate, cancel_on_failure, cancel_url, client_id, collection_artist_name, collection_group_count, collection_item_count, collection_name, composer_name, diverted_job_id, document_target_id, download_permalink, duet_transfer_type, duration_in_ms, effective_client_id, enable_extensions, episode_id, episode_sort_id, handler_id, has_messages_extension, hls_playlist_url, genre_name, index_in_collection, index_in_collection_group, is_automatic, is_compilation, is_device_based_vpp, is_diverted, is_explicit, is_from_store, is_hd, is_private, is_purchase, is_redownload, is_restore, is_rental, is_sample, is_shared, is_store_queued, is_tv_template, kind, launch_prohibited, library_id, loading_priority, long_description, long_season_description, messages_artwork_url, network_name, order_key, order_seed, override_audit_token_data, page_progression_direction, podcast_episode_guid, podcast_feed_url, podcast_type, policy_id, priority, preferred_asset_flavor, purchase_id, rate_limit, reason, ref_app, ref_url, release_date, release_year, rental_id, season_number, series_name, software_type, short_description, suppress_error_dialogs, store_account_id, store_account_name, store_artist_id, store_cohort, store_collection_id, store_composer_id, store_download_key, store_front_id, store_genre_id, store_item_id, store_match_status, store_publication_version, store_preorder_id, store_purchase_date, store_redownload_parameters, store_redownload_status, store_saga_id, store_software_version_id, store_transaction_id, store_url, store_xid, thumbnail_newsstand_binding_edge, thumbnail_newsstand_binding_type, thumbnail_url, timeout_interval, title, transaction_id, variant_id FROM _download;"];
  [a1 executeSQL:@"DROP TABLE _download;"];
  *a2 = 10100;

  return [a1 setUserVersion:10100];
}

id sub_1000F2A58(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_music_show INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN show_composer INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN work_name TEXT;"];
  *a2 = 10300;

  return [a1 setUserVersion:10300];
}

id sub_1000F2AC8(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN is_hls INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_hls INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN is_premium INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN has_hdr INTEGER DEFAULT 0;"];
  *a2 = 11000;

  return [a1 setUserVersion:11000];
}

id sub_1000F2B48(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN has_4k INTEGER DEFAULT 0;"];
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN has_dolby_vision INTEGER DEFAULT 0;"];
  *a2 = 11200;

  return [a1 setUserVersion:11200];
}

id sub_1000F2BA8(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"ALTER TABLE download ADD COLUMN resource_timeout_interval REAL;"];
  *a2 = 13000;

  return [a1 setUserVersion:13000];
}

void sub_1000F2BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
  id v6 = objc_alloc_init((Class)NSMutableDictionary);
  if (*(void *)(a1 + 40))
  {
    unint64_t v7 = 0;
    do
    {
      id v8 = *(id *)(a3 + 8 * v7);
      if (!v8) {
        id v8 = [objc_alloc((Class)NSNumber) initWithLongLong:0];
      }
      id v9 = [v6 objectForKey:v8];
      if (!v9)
      {
        id v9 = objc_alloc_init((Class)NSMutableArray);
        [v6 setObject:v9 forKey:v8];
      }
      objc_msgSend(v9, "addObject:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_10031F960[v7]));

      ++v7;
    }
    while (v7 < *(void *)(a1 + 40));
  }
  if ([v6 count])
  {
    id v18 = v5;
    id v10 = objc_alloc_init((Class)SSDownloadPolicy);
    id v11 = objc_alloc_init((Class)NSMutableArray);
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v12 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v20;
      do
      {
        int v15 = 0;
        do
        {
          if (*(void *)v20 != v14) {
            objc_enumerationMutation(v6);
          }
          int v16 = *(void **)(*((void *)&v19 + 1) + 8 * (void)v15);
          id v17 = objc_alloc_init((Class)SSDownloadPolicyRule);
          objc_msgSend(v17, "setDownloadSizeLimit:", objc_msgSend(v16, "longLongValue"));
          objc_msgSend(v17, "setNetworkTypes:", objc_msgSend(v6, "objectForKey:", v16));
          [v10 setPolicyRule:v17];
          [v11 addObject:v17];

          int v15 = (char *)v15 + 1;
        }
        while (v13 != v15);
        id v13 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
      }
      while (v13);
    }
    id v5 = v18;
    [*(id *)(a1 + 32) setObject:v10 forKey:v18];
  }
}

void sub_1000F2E60(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    id v5 = objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
    if (!v5)
    {
      id v5 = objc_alloc_init((Class)SSDownloadPolicy);
      objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:");
    }
    id v4 = objc_alloc_init((Class)SSDownloadPolicyRule);
    [v4 setPowerStates:2];
    [v5 unionPolicyRule:v4];
  }
}

void sub_1000F38A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F38F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000F3904(uint64_t a1)
{
}

void sub_1000F390C(uint64_t a1, void *a2)
{
}

id sub_1000F3B40(void *a1)
{
  *(void *)(a1[4] + 8) = [*(id *)(a1[5] + 8) mutableCopyWithZone:a1[6]];
  *(void *)(a1[4] + 24) = [*(id *)(a1[5] + 24) copyWithZone:a1[6]];
  *(void *)(a1[4] + 16) = *(void *)(a1[5] + 16);
  *(void *)(a1[4] + 32) = [*(id *)(a1[5] + 32) copyWithZone:a1[6]];
  *(void *)(a1[4] + 48) = [*(id *)(a1[5] + 48) copyWithZone:a1[6]];
  *(void *)(a1[4] + 56) = *(void *)(a1[5] + 56);
  *(void *)(a1[4] + 64) = *(void *)(a1[5] + 64);
  *(void *)(a1[4] + 72) = *(void *)(a1[5] + 72);
  *(void *)(a1[4] + 80) = [*(id *)(a1[5] + 80) copyWithZone:a1[6]];
  id result = [*(id *)(a1[5] + 88) copyWithZone:a1[6]];
  *(void *)(a1[4] + 88) = result;
  *(void *)(a1[4] + 96) = *(void *)(a1[5] + 96);
  *(void *)(a1[4] + 104) = *(void *)(a1[5] + 104);
  return result;
}

void sub_1000F3E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000F3E2C(uint64_t a1, uint64_t a2)
{
}

void sub_1000F3E3C(uint64_t a1)
{
}

id sub_1000F3E48(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 8) copy];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

uint64_t sub_1000F3F2C(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 16);
  return result;
}

void sub_1000F4018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000F4030(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 32) copy];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

uint64_t sub_1000F4114(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 56);
  return result;
}

double sub_1000F41D4(uint64_t a1)
{
  double result = *(double *)(*(void *)(a1 + 32) + 64);
  *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

id sub_1000F42D4(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 24);
  if (result)
  {
    id result = [result length];
    if (result) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    }
  }
  return result;
}

void sub_1000F43F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000F4408(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 24);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_1000F4518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000F4530(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 48);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_1000F4640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000F4658(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 80);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_1000F4768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000F4780(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 88) copy];
  double v2 = *(double *)(*(void *)(a1 + 32) + 64);
  if (v2 > 0.00000011920929)
  {
    double v3 = v2 * 1000.0;
    if (v3 < 4294967300.0) {
      objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), "setDurationInMilliseconds:", +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (unint64_t)v3));
    }
  }
  id v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) kind];
  uint64_t v5 = SSDownloadKindPodcast;
  id result = [v4 isEqualToString:SSDownloadKindPodcast];
  if ((result & 1) != 0
    || (id result = [v4 isEqualToString:SSDownloadKindVideoPodcast], result))
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 16);
    if (v7 != 1)
    {
      if (v7 != 2) {
        return result;
      }
      uint64_t v5 = SSDownloadKindVideoPodcast;
    }
    id v8 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    return [v8 setKind:v5];
  }
  return result;
}

uint64_t sub_1000F4960(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 72);
  return result;
}

intptr_t sub_1000F4BC4(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1000F4BCC(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 16) = *(void *)(a1 + 48);
  *(void *)(*(void *)(a1 + 32) + 64) = *(void *)(a1 + 56);

  id result = [*(id *)(a1 + 40) copy];
  *(void *)(*(void *)(a1 + 32) + 32) = result;
  return result;
}

uint64_t sub_1000F4CCC(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 96);
  return result;
}

void *sub_1000F4D54(void *result)
{
  id v1 = *(void **)(result[4] + 8);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    id result = [(id)v2[5] mutableCopy];
    *(void *)(v2[4] + 8) = result;
  }
  return result;
}

uint64_t sub_1000F4E0C(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 16) = *(void *)(result + 40);
  return result;
}

void *sub_1000F4E8C(void *result)
{
  id v1 = *(void **)(result[4] + 32);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 32) = result;
  }
  return result;
}

uint64_t sub_1000F4F44(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 56) = *(void *)(result + 40);
  return result;
}

double sub_1000F4FC8(uint64_t a1)
{
  double result = *(double *)(a1 + 40);
  *(double *)(*(void *)(a1 + 32) + 64) = result;
  return result;
}

void *sub_1000F504C(void *result)
{
  id v1 = *(void **)(result[4] + 24);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    double result = [(id)v2[5] copy];
    *(void *)(v2[4] + 24) = result;
  }
  return result;
}

void *sub_1000F5104(void *result)
{
  id v1 = *(void **)(result[4] + 48);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    double result = [(id)v2[5] copy];
    *(void *)(v2[4] + 48) = result;
  }
  return result;
}

void *sub_1000F51BC(void *result)
{
  id v1 = *(void **)(result[4] + 80);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    double result = [(id)v2[5] copy];
    *(void *)(v2[4] + 80) = result;
  }
  return result;
}

void *sub_1000F5274(void *result)
{
  id v1 = *(void **)(result[4] + 88);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    double result = [(id)v2[5] copy];
    *(void *)(v2[4] + 88) = result;
  }
  return result;
}

uint64_t sub_1000F532C(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 72) = *(void *)(result + 40);
  return result;
}

uint64_t sub_1000F53AC(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 96) = *(void *)(result + 40);
  return result;
}

uint64_t sub_1000F542C(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 104) = *(void *)(result + 40);
  return result;
}

id sub_1000F54B0(void *a1)
{
  uint64_t v2 = a1[4];
  double v3 = *(void **)(a1[5] + 8);
  if (v2)
  {
    if (!v3)
    {
      *(void *)(a1[5] + 8) = objc_alloc_init((Class)NSMutableDictionary);
      uint64_t v2 = a1[4];
      double v3 = *(void **)(a1[5] + 8);
    }
    uint64_t v4 = a1[6];
    return [v3 setObject:v2 forKey:v4];
  }
  else
  {
    uint64_t v6 = a1[6];
    return [v3 removeObjectForKey:v6];
  }
}

uint64_t sub_1000F55DC(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 104);
  return result;
}

void sub_1000F6014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F60C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000F60D0(uint64_t a1)
{
}

void sub_1000F60D8(void *a1, uint64_t a2, void *a3, char a4, void *a5)
{
  id v9 = a3;
  id v10 = a5;
  id v11 = +[SSLogConfig sharedDaemonConfig];
  if (!v11)
  {
    id v11 = +[SSLogConfig sharedConfig];
  }
  unsigned int v12 = [v11 shouldLog];
  if ([v11 shouldLogToDisk]) {
    int v13 = v12 | 2;
  }
  else {
    int v13 = v12;
  }
  uint64_t v14 = [v11 OSLogObject];
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    int v15 = v13;
  }
  else {
    int v15 = v13 & 2;
  }
  if (v15)
  {
    uint64_t v16 = a1[4];
    *(_DWORD *)uint64_t v43 = 138543362;
    *(void *)&void v43[4] = v16;
    LODWORD(v42) = 12;
    CFStringRef v41 = v43;
    id v17 = (void *)_os_log_send_and_compose_impl();

    if (!v17) {
      goto LABEL_13;
    }
    uint64_t v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, v43, v42);
    free(v17);
    CFStringRef v41 = v14;
    SSFileLog();
  }

LABEL_13:
  if (v10)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a5);
    id v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18)
    {
      id v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = objc_msgSend(v18, "shouldLog", v41);
    if ([v18 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    long long v21 = [v18 OSLogObject];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      int v22 = v20;
    }
    else {
      int v22 = v20 & 2;
    }
    if (!v22) {
      goto LABEL_49;
    }
    uint64_t v23 = a1[4];
    *(_DWORD *)uint64_t v43 = 138543618;
    *(void *)&void v43[4] = v23;
    *(_WORD *)&v43[12] = 2112;
    *(void *)&v43[14] = v10;
    LODWORD(v42) = 22;
  }
  else if (a4)
  {
    if (v9)
    {
      objc_storeStrong((id *)(*(void *)(a1[7] + 8) + 40), a3);
      id v18 = +[SSLogConfig sharedDaemonConfig];
      if (!v18)
      {
        id v18 = +[SSLogConfig sharedConfig];
      }
      unsigned int v24 = objc_msgSend(v18, "shouldLog", v41);
      if ([v18 shouldLogToDisk]) {
        int v25 = v24 | 2;
      }
      else {
        int v25 = v24;
      }
      long long v21 = [v18 OSLogObject];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
        int v26 = v25;
      }
      else {
        int v26 = v25 & 2;
      }
      if (!v26) {
        goto LABEL_49;
      }
      uint64_t v27 = a1[4];
      *(_DWORD *)uint64_t v43 = 138543362;
      *(void *)&void v43[4] = v27;
      LODWORD(v42) = 12;
    }
    else
    {
      id v18 = +[SSLogConfig sharedDaemonConfig];
      if (!v18)
      {
        id v18 = +[SSLogConfig sharedConfig];
      }
      unsigned int v37 = objc_msgSend(v18, "shouldLog", v41);
      if ([v18 shouldLogToDisk]) {
        int v38 = v37 | 2;
      }
      else {
        int v38 = v37;
      }
      long long v21 = [v18 OSLogObject];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        int v39 = v38;
      }
      else {
        int v39 = v38 & 2;
      }
      if (!v39) {
        goto LABEL_49;
      }
      uint64_t v40 = a1[4];
      *(_DWORD *)uint64_t v43 = 138543362;
      *(void *)&void v43[4] = v40;
      LODWORD(v42) = 12;
    }
  }
  else
  {
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    uint64_t v28 = ISError();
    uint64_t v29 = *(void *)(a1[5] + 8);
    long long v30 = *(void **)(v29 + 40);
    *(void *)(v29 + 40) = v28;

    id v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18)
    {
      id v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v31 = objc_msgSend(v18, "shouldLog", v41);
    if ([v18 shouldLogToDisk]) {
      int v32 = v31 | 2;
    }
    else {
      int v32 = v31;
    }
    long long v21 = [v18 OSLogObject];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      int v33 = v32;
    }
    else {
      int v33 = v32 & 2;
    }
    if (!v33) {
      goto LABEL_49;
    }
    uint64_t v34 = a1[4];
    *(_DWORD *)uint64_t v43 = 138543362;
    *(void *)&void v43[4] = v34;
    LODWORD(v42) = 12;
  }
  uint64_t v35 = (void *)_os_log_send_and_compose_impl();

  if (!v35) {
    goto LABEL_50;
  }
  long long v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v35, 4, v43, v42, *(_OWORD *)v43);
  free(v35);
  SSFileLog();
LABEL_49:

LABEL_50:
  if (v9) {
    char v36 = a4;
  }
  else {
    char v36 = 0;
  }
  *(unsigned char *)(*(void *)(a1[8] + 8) + 24) = v36;
}

id sub_1000F6638(void *a1)
{
  id v1 = a1;

  return v1;
}

id sub_1000F799C()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401DB8 = (uint64_t)result;
  return result;
}

uint64_t sub_1000F7A5C(void *a1, void *a2)
{
  id v27 = [a2 database];
  id v25 = objc_alloc_init((Class)NSMutableSet);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id obj = (id)a1[4];
  id v28 = [obj countByEnumeratingWithState:&v31 objects:v39 count:16];
  if (v28)
  {
    uint64_t v26 = *(void *)v32;
    p_vtable = &OBJC_METACLASS___DownloadArtworkCacheOperation.vtable;
    uint64_t v4 = &syslog_ptr;
    do
    {
      for (uint64_t i = 0; i != v28; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v32 != v26) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        id v7 = [p_vtable + 247 newValueDictionaryWithItem:v6];
        id v8 = v7;
        uint64_t v9 = a1[5];
        if (v9) {
          [v7 setObject:v9 forKey:@"store_account_id"];
        }
        id v29 = [objc_alloc((Class)(p_vtable + 247)) initWithPropertyValues:v8 inDatabase:v27];
        id v10 = [v4[405] sharedDaemonConfig];
        if (!v10) {
          id v10 = [v4[405] sharedConfig];
        }
        unsigned int v11 = [v10 shouldLog];
        if ([v10 shouldLogToDisk]) {
          v11 |= 2u;
        }
        if (!os_log_type_enabled((os_log_t)[v10 OSLogObject], OS_LOG_TYPE_INFO)) {
          v11 &= 2u;
        }
        if (v11)
        {
          unsigned int v12 = v4;
          int v13 = p_vtable;
          uint64_t v14 = objc_opt_class();
          id v15 = [v29 persistentID];
          int v35 = 138412546;
          uint64_t v36 = v14;
          p_vtable = v13;
          uint64_t v4 = v12;
          __int16 v37 = 2048;
          id v38 = v15;
          LODWORD(v23) = 22;
          int v22 = &v35;
          uint64_t v16 = _os_log_send_and_compose_impl();
          if (v16)
          {
            id v17 = (void *)v16;
            id v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v35, v23);
            free(v17);
            int v22 = (int *)v18;
            SSFileLog();
          }
        }
        if (objc_msgSend(v6, "itemKind", v22)) {
          objc_msgSend(v25, "addObject:", objc_msgSend(v6, "itemKind"));
        }
      }
      id v28 = [obj countByEnumeratingWithState:&v31 objects:v39 count:16];
    }
    while (v28);
  }
  uint64_t v19 = a1[6];
  int v20 = *(NSObject **)(v19 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F7D7C;
  block[3] = &unk_1003A3380;
  void block[4] = v19;
  void block[5] = v25;
  dispatch_async(v20, block);

  return 1;
}

id sub_1000F7D7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendChangeNotificationForKinds:*(void *)(a1 + 40)];
}

id sub_1000F8054(uint64_t a1)
{
  [*(id *)(a1 + 32) _handleCheckQueueFinish:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 setCompletionBlock:0];
}

void sub_1000F81D8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F81F0(void *a1, void *a2)
{
  id v3 = [a2 database];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id obj = (id)a1[4];
  id v4 = [obj countByEnumeratingWithState:&v13 objects:v18 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v14;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v14 != v6) {
        objc_enumerationMutation(obj);
      }
      id v8 = +[PreorderEntity queryWithDatabase:predicate:](PreorderEntity, "queryWithDatabase:predicate:", v3, +[SSSQLiteComparisonPredicate predicateWithProperty:@"store_preorder_id" equalToValue:*(void *)(*((void *)&v13 + 1) + 8 * v7)]);
      CFStringRef v17 = @"kind";
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_1000F83B8;
      v12[3] = &unk_1003A6578;
      uint64_t v9 = a1[6];
      void v12[4] = a1[5];
      v12[5] = v3;
      v12[6] = v9;
      [v8 enumeratePersistentIDsAndProperties:&v17 count:1 usingBlock:v12];
      if (!*(unsigned char *)(*(void *)(a1[6] + 8) + 24)) {
        break;
      }
      if (v5 == (id)++v7)
      {
        id v5 = [obj countByEnumeratingWithState:&v13 objects:v18 count:16];
        if (v5) {
          goto LABEL_3;
        }
        return *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24);
      }
    }
  }
  return *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24);
}

void sub_1000F83B8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unsigned char *a5)
{
  if (*a3) {
    objc_msgSend(*(id *)(a1 + 32), "addObject:");
  }
  id v8 = [[PreorderEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 40)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [(PreorderEntity *)v8 deleteFromDatabase];
  *a5 = *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) ^ 1;
}

id sub_1000F8454(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendChangeNotificationForKinds:*(void *)(a1 + 40)];
}

void sub_1000F84F0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if ([a2 hasEntitlements])
  {
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "1");
    xpc_object_t v7 = value;
    if (value && xpc_get_type(value) == (xpc_type_t)&_xpc_type_array)
    {
      id v8 = objc_alloc_init((Class)NSMutableSet);
      id v9 = +[DownloadsDatabase downloadsDatabase];
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_1000F87E4;
      v21[3] = &unk_1003A65C8;
      uint64_t v10 = *(void *)(a1 + 32);
      void v21[4] = v7;
      v21[5] = v10;
      void v21[6] = v8;
      v21[7] = &v22;
      [v9 modifyUsingTransactionBlock:v21];
      if (*((unsigned char *)v23 + 24))
      {
        unsigned int v11 = objc_alloc_init(CancelPreordersOperation);
        objc_msgSend(+[ISOperationQueue mainQueue](ISOperationQueue, "mainQueue"), "addOperation:", v11);
        [*(id *)(a1 + 32) _sendChangeNotificationForKinds:v8];
      }
    }
  }
  else
  {
    id v12 = +[SSLogConfig sharedDaemonConfig];
    if (!v12) {
      id v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    unsigned int v14 = [v12 shouldLogToDisk];
    long long v15 = [v12 OSLogObject];
    if (v14) {
      v13 |= 2u;
    }
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      v13 &= 2u;
    }
    if (v13)
    {
      uint64_t v16 = objc_opt_class();
      id v17 = [a2 clientIdentifier];
      int v26 = 138412546;
      uint64_t v27 = v16;
      __int16 v28 = 2112;
      id v29 = v17;
      LODWORD(v20) = 22;
      uint64_t v18 = _os_log_send_and_compose_impl();
      if (v18)
      {
        uint64_t v19 = (void *)v18;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v26, v20);
        free(v19);
        SSFileLog();
      }
    }
  }
  xpc_dictionary_set_BOOL(a3, "0", *((unsigned char *)v23 + 24));
  _Block_object_dispose(&v22, 8);
}

void sub_1000F87AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F87E4(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  int64_t count = xpc_array_get_count(*(xpc_object_t *)(a1 + 32));
  id v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5) {
    id v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_INFO)) {
    v7 &= 2u;
  }
  if (v7)
  {
    *(_DWORD *)long long v21 = 138412546;
    *(void *)&void v21[4] = objc_opt_class();
    *(_WORD *)&v21[12] = 2048;
    *(void *)&v21[14] = count;
    LODWORD(v18) = 22;
    uint64_t v8 = _os_log_send_and_compose_impl();
    if (v8)
    {
      id v9 = (void *)v8;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v21, v18);
      free(v9);
      SSFileLog();
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = count > 0;
  if (count >= 1)
  {
    for (size_t i = 0; i != count; ++i)
    {
      if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
        break;
      }
      unsigned int v11 = [[PreorderEntity alloc] initWithPersistentID:xpc_array_get_int64(*(xpc_object_t *)(a1 + 32), i) inDatabase:v3];
      *(void *)long long v21 = @"store_account_id";
      *(void *)&void v21[8] = @"kind";
      *(void *)&v21[16] = @"store_preorder_id";
      [(PreorderEntity *)v11 getValues:v19 forProperties:v21 count:3];
      if (v19[0] && v20)
      {
        id v12 = objc_alloc((Class)NSDictionary);
        id v13 = objc_msgSend(v12, "initWithObjectsAndKeys:", v19[0], @"store_account_id", v20, @"store_item_id", 0);
        unsigned int v14 = [[CanceledPreorderEntity alloc] initWithPropertyValues:v13 inDatabase:v3];
        *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v14 != 0;
      }
      if (v19[1]) {
        objc_msgSend(*(id *)(a1 + 48), "addObject:");
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      if (*(unsigned char *)(v15 + 24))
      {
        unsigned __int8 v16 = [(PreorderEntity *)v11 deleteFromDatabase];
        uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      }
      else
      {
        unsigned __int8 v16 = 0;
      }
      *(unsigned char *)(v15 + 24) = v16;
    }
  }
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
}

id sub_1000F8B80(uint64_t a1, void *a2)
{
  id result = [a2 hasEntitlements];
  if (result)
  {
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_INFO)) {
      v7 &= 2u;
    }
    if (v7)
    {
      int v13 = 138412546;
      uint64_t v14 = objc_opt_class();
      __int16 v15 = 2112;
      id v16 = [a2 clientIdentifier];
      LODWORD(v12) = 22;
      unsigned int v11 = &v13;
      uint64_t v8 = _os_log_send_and_compose_impl();
      if (v8)
      {
        id v9 = (void *)v8;
        uint64_t v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v13, v12);
        free(v9);
        unsigned int v11 = (int *)v10;
        SSFileLog();
      }
    }
    return objc_msgSend(*(id *)(a1 + 32), "checkPreorderQueue", v11);
  }
  return result;
}

void sub_1000F8D98(uint64_t a1, void *a2, void *a3)
{
  xpc_object_t v5 = xpc_array_create(0, 0);
  if ([a2 hasEntitlements])
  {
    id v6 = objc_msgSend(objc_msgSend(a2, "itemKinds"), "allObjects");
    if ([v6 count])
    {
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_1000F900C;
      v13[3] = &unk_1003A5900;
      void v13[4] = +[SSSQLiteCompoundPredicate predicateWithProperty:@"kind" values:v6 comparisonType:1];
      v13[5] = +[NSArray arrayWithObject:@"release_date"];
      v13[6] = v5;
      objc_msgSend(+[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase"), "readUsingTransactionBlock:", v13);
    }
  }
  else
  {
    id v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7) {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    if (!os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v9 &= 2u;
    }
    if (v9)
    {
      int v14 = 138412546;
      uint64_t v15 = objc_opt_class();
      __int16 v16 = 2112;
      id v17 = [a2 clientIdentifier];
      LODWORD(v12) = 22;
      uint64_t v10 = _os_log_send_and_compose_impl();
      if (v10)
      {
        unsigned int v11 = (void *)v10;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v14, v12);
        free(v11);
        SSFileLog();
      }
    }
  }
  xpc_dictionary_set_value(a3, "0", v5);
  xpc_release(v5);
}

void sub_1000F900C(void *a1, void *a2)
{
  id v3 = +[PreorderEntity queryWithDatabase:predicate:orderingProperties:](PreorderEntity, "queryWithDatabase:predicate:orderingProperties:", [a2 database], a1[4], a1[5]);
  id v4 = +[PreorderEntity allProperties];
  xpc_object_t v5 = malloc_type_malloc(8 * (void)[v4 count], 0x80040B8603338uLL);
  objc_msgSend(v4, "getObjects:range:", v5, 0, objc_msgSend(v4, "count"));
  id v6 = [v4 count];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000F9118;
  v7[3] = &unk_1003A32B8;
  void v7[4] = a1[6];
  [v3 enumeratePersistentIDsAndProperties:v5 count:v6 usingBlock:v7];
  free(v5);
}

void sub_1000F9118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = +[PreorderEntity newClientPreorderWithPersistentID:a2 allValues:a3];
  id v4 = [v6 copyXPCEncoding];
  if (v4)
  {
    xpc_object_t v5 = v4;
    xpc_array_append_value(*(xpc_object_t *)(a1 + 32), v4);
    xpc_release(v5);
  }
}

void sub_1000F92AC(uint64_t a1, void *a2)
{
  if ([a2 hasEntitlements])
  {
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "1");
    if (value && xpc_get_type(value) == (xpc_type_t)&_xpc_type_array)
    {
      xpc_object_t v5 = (void *)SSXPCCreateCFObjectFromXPCObject();
      id v6 = +[SSLogConfig sharedDaemonConfig];
      if (!v6) {
        id v6 = +[SSLogConfig sharedConfig];
      }
      unsigned int v7 = [v6 shouldLog];
      if ([v6 shouldLogToDisk]) {
        int v8 = v7 | 2;
      }
      else {
        int v8 = v7;
      }
      if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
        v8 &= 2u;
      }
      if (v8)
      {
        int v23 = 138412802;
        uint64_t v24 = objc_opt_class();
        __int16 v25 = 2112;
        id v26 = [a2 clientIdentifier];
        __int16 v27 = 2112;
        __int16 v28 = v5;
        LODWORD(v22) = 32;
        long long v21 = &v23;
        uint64_t v9 = _os_log_send_and_compose_impl();
        if (v9)
        {
          uint64_t v10 = (void *)v9;
          unsigned int v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v23, v22);
          free(v10);
          long long v21 = (int *)v11;
          SSFileLog();
        }
      }
      objc_msgSend(a2, "setItemKinds:", +[NSSet setWithArray:](NSSet, "setWithArray:", v5, v21));
    }
    uint64_t v12 = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "2");
    if (v12)
    {
      int v13 = v12;
      if (xpc_get_type(v12) == (xpc_type_t)&_xpc_type_endpoint)
      {
        xpc_connection_t v14 = xpc_connection_create_from_endpoint(v13);
        [a2 setOutputConnectionWithConnection:v14];
        xpc_object_t v15 = xpc_dictionary_create(0, 0, 0);
        objc_msgSend(objc_msgSend(a2, "outputConnection"), "sendMessage:", v15);
        xpc_release(v15);
        xpc_release(v14);
      }
    }
  }
  else
  {
    id v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16) {
      id v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = [v16 shouldLog];
    if ([v16 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    if (!os_log_type_enabled((os_log_t)[v16 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v18 &= 2u;
    }
    if (v18)
    {
      int v23 = 138412546;
      uint64_t v24 = objc_opt_class();
      __int16 v25 = 2112;
      id v26 = [a2 clientIdentifier];
      LODWORD(v22) = 22;
      uint64_t v19 = _os_log_send_and_compose_impl();
      if (v19)
      {
        uint64_t v20 = (void *)v19;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v23, v22);
        free(v20);
        SSFileLog();
      }
    }
  }
}

id sub_1000F9690(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  id result = [*(id *)(*(void *)(a1 + 40) + 8) count];
  uint64_t v4 = (uint64_t)result;
  while (v4-- >= 1)
  {
    id result = [*(id *)(*(void *)(a1 + 40) + 8) objectAtIndex:v4];
    if (result == v2)
    {
      id v6 = +[SSLogConfig sharedDaemonConfig];
      if (!v6) {
        id v6 = +[SSLogConfig sharedConfig];
      }
      unsigned int v7 = [v6 shouldLog];
      if ([v6 shouldLogToDisk]) {
        int v8 = v7 | 2;
      }
      else {
        int v8 = v7;
      }
      if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_DEBUG)) {
        v8 &= 2u;
      }
      if (v8)
      {
        int v14 = 138412546;
        uint64_t v15 = objc_opt_class();
        __int16 v16 = 2112;
        id v17 = v2;
        LODWORD(v13) = 22;
        uint64_t v12 = &v14;
        uint64_t v9 = _os_log_send_and_compose_impl();
        if (v9)
        {
          uint64_t v10 = (void *)v9;
          unsigned int v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v14, v13);
          free(v10);
          uint64_t v12 = (int *)v11;
          SSFileLog();
        }
      }
      objc_msgSend(v2, "setOutputConnectionWithConnection:", 0, v12);
      return [*(id *)(*(void *)(a1 + 40) + 8) removeObjectAtIndex:v4];
    }
  }
  return result;
}

void sub_1000F9A50(uint64_t a1, void *a2)
{
  id v4 = objc_alloc_init((Class)SSSQLiteQueryDescriptor);
  [v4 setEntityClass:objc_opt_class()];
  [v4 setReturnsDistinctEntities:1];
  id v5 = objc_msgSend(objc_alloc((Class)SSSQLiteQuery), "initWithDatabase:descriptor:", objc_msgSend(a2, "database"), v4);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1000F9B80;
  v6[3] = &unk_1003A32B8;
  void v6[4] = *(void *)(a1 + 32);
  CFStringRef v7 = @"store_account_id";
  [v5 enumeratePersistentIDsAndProperties:&v7 count:1 usingBlock:v6];
}

id *sub_1000F9B80(id *result, uint64_t a2, void *a3)
{
  if (*a3) {
    return (id *)objc_msgSend(result[4], "addObject:");
  }
  return result;
}

void sub_1000F9EC4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1000F9EE8(uint64_t a1, void *a2)
{
  return 1;
}

id sub_1000F9F28(uint64_t a1, void *a2)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_preorderQueryWithAccountID:database:", *(void *)(a1 + 40), objc_msgSend(a2, "database")), "countOfEntities");
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = result != *(id *)(a1 + 56);
  return result;
}

id sub_1000F9F84(uint64_t a1)
{
  [*(id *)(a1 + 32) _handleLoadQueueFinish:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 40);

  return [v2 setCompletionBlock:0];
}

uint64_t sub_1000FA05C(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  id v4 = [*(id *)(a1 + 32) accountIdentifier];
  id v5 = objc_alloc_init((Class)NSMutableSet);
  id v6 = objc_alloc_init((Class)NSMutableSet);
  id v7 = objc_alloc_init((Class)NSMutableDictionary);
  id v55 = v4;
  id v59 = v3;
  id v8 = [*(id *)(a1 + 40) _preorderQueryWithAccountID:v4 database:v3];
  v76[0] = @"kind";
  v76[1] = @"store_preorder_id";
  v69[0] = _NSConcreteStackBlock;
  v69[1] = 3221225472;
  v69[2] = sub_1000FA788;
  v69[3] = &unk_1003A5BD8;
  id obj = v6;
  v69[4] = v6;
  v69[5] = v5;
  uint64_t v53 = v5;
  v69[6] = v7;
  [v8 enumeratePersistentIDsAndProperties:v76 count:2 usingBlock:v69];
  uint64_t v58 = a1;
  id v9 = [*(id *)(a1 + 32) preorderItems];
  long long v65 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  id v10 = [v9 countByEnumeratingWithState:&v65 objects:v75 count:16];
  __int16 v56 = v7;
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v66;
    uint64_t v54 = *(void *)v66;
    do
    {
      for (size_t i = 0; i != v11; size_t i = (char *)i + 1)
      {
        if (*(void *)v66 != v12) {
          objc_enumerationMutation(v9);
        }
        int v14 = *(void **)(*((void *)&v65 + 1) + 8 * i);
        id v15 = objc_msgSend(v14, "preOrderIdentifier", v50);
        if (v15)
        {
          id v16 = [v7 objectForKey:v15];
          if (v16)
          {
            id v17 = v16;
            id v18 = +[SSLogConfig sharedDaemonConfig];
            if (!v18) {
              id v18 = +[SSLogConfig sharedConfig];
            }
            unsigned int v19 = [v18 shouldLog];
            if ([v18 shouldLogToDisk]) {
              v19 |= 2u;
            }
            if (!os_log_type_enabled((os_log_t)[v18 OSLogObject], OS_LOG_TYPE_INFO)) {
              v19 &= 2u;
            }
            if (v19)
            {
              uint64_t v20 = objc_opt_class();
              int v71 = 138412546;
              uint64_t v72 = v20;
              __int16 v73 = 2112;
              id v74 = v17;
              LODWORD(v52) = 22;
              int v50 = &v71;
              uint64_t v21 = _os_log_send_and_compose_impl();
              if (v21)
              {
                uint64_t v22 = (void *)v21;
                int v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v71, v52);
                free(v22);
                int v50 = (int *)v23;
                SSFileLog();
              }
            }
            uint64_t v24 = -[PreorderEntity initWithPersistentID:inDatabase:]([PreorderEntity alloc], "initWithPersistentID:inDatabase:", [v17 longLongValue], v59);
            [(PreorderEntity *)v24 setValuesWithItem:v14];
            [obj removeObject:v17];
          }
          else
          {
            id v25 = v9;
            uint64_t v24 = +[PreorderEntity newValueDictionaryWithItem:v14];
            [(PreorderEntity *)v24 setObject:v55 forKey:@"store_account_id"];
            id v26 = [[PreorderEntity alloc] initWithPropertyValues:v24 inDatabase:v59];
            id v27 = +[SSLogConfig sharedDaemonConfig];
            if (!v27) {
              id v27 = +[SSLogConfig sharedConfig];
            }
            unsigned int v28 = [v27 shouldLog];
            if ([v27 shouldLogToDisk]) {
              v28 |= 2u;
            }
            if (os_log_type_enabled((os_log_t)[v27 OSLogObject], OS_LOG_TYPE_INFO)) {
              int v29 = v28;
            }
            else {
              int v29 = v28 & 2;
            }
            if (v29)
            {
              uint64_t v30 = objc_opt_class();
              id v31 = [(PreorderEntity *)v26 persistentID];
              int v71 = 138412546;
              uint64_t v72 = v30;
              __int16 v73 = 2048;
              id v74 = v31;
              LODWORD(v52) = 22;
              int v50 = &v71;
              uint64_t v32 = _os_log_send_and_compose_impl();
              if (v32)
              {
                long long v33 = (void *)v32;
                long long v34 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v32, 4, &v71, v52);
                free(v33);
                int v50 = (int *)v34;
                SSFileLog();
              }
            }
            if (objc_msgSend(v14, "itemKind", v50)) {
              objc_msgSend(v53, "addObject:", objc_msgSend(v14, "itemKind"));
            }

            id v7 = v56;
            id v9 = v25;
            uint64_t v12 = v54;
          }
        }
      }
      id v11 = [v9 countByEnumeratingWithState:&v65 objects:v75 count:16];
    }
    while (v11);
  }
  long long v63 = 0u;
  long long v64 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  id v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v61, v70, 16, v50);
  if (v35)
  {
    id v36 = v35;
    uint64_t v37 = *(void *)v62;
    do
    {
      for (uint64_t j = 0; j != v36; uint64_t j = (char *)j + 1)
      {
        if (*(void *)v62 != v37) {
          objc_enumerationMutation(obj);
        }
        int v39 = *(void **)(*((void *)&v61 + 1) + 8 * (void)j);
        uint64_t v40 = -[PreorderEntity initWithPersistentID:inDatabase:]([PreorderEntity alloc], "initWithPersistentID:inDatabase:", [v39 longLongValue], v59);
        id v41 = +[SSLogConfig sharedDaemonConfig];
        if (!v41) {
          id v41 = +[SSLogConfig sharedConfig];
        }
        unsigned int v42 = [v41 shouldLog];
        if ([v41 shouldLogToDisk]) {
          v42 |= 2u;
        }
        if (!os_log_type_enabled((os_log_t)[v41 OSLogObject], OS_LOG_TYPE_INFO)) {
          v42 &= 2u;
        }
        if (v42)
        {
          uint64_t v43 = objc_opt_class();
          int v71 = 138412546;
          uint64_t v72 = v43;
          __int16 v73 = 2112;
          id v74 = v39;
          LODWORD(v52) = 22;
          __int16 v51 = &v71;
          uint64_t v44 = _os_log_send_and_compose_impl();
          if (v44)
          {
            id v45 = (void *)v44;
            uint64_t v46 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v44, 4, &v71, v52);
            free(v45);
            __int16 v51 = (int *)v46;
            SSFileLog();
          }
        }
        [(PreorderEntity *)v40 deleteFromDatabase];
      }
      id v36 = [obj countByEnumeratingWithState:&v61 objects:v70 count:16];
    }
    while (v36);
  }
  uint64_t v47 = *(void *)(v58 + 40);
  id v48 = *(NSObject **)(v47 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000FA820;
  block[3] = &unk_1003A3380;
  void block[4] = v47;
  void block[5] = v53;
  dispatch_async(v48, block);

  return 1;
}

uint64_t sub_1000FA788(id *a1, uint64_t a2, void *a3)
{
  id v8 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
  id v5 = objc_msgSend(a1[4], "addObject:");
  if (*a3) {
    id v5 = objc_msgSend(a1[5], "addObject:");
  }
  id v6 = v8;
  if (a3[1])
  {
    id v5 = objc_msgSend(a1[6], "setObject:forKey:", v8);
    id v6 = v8;
  }

  return _objc_release_x1(v5, v6);
}

id sub_1000FA820(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendChangeNotificationForKinds:*(void *)(a1 + 40)];
}

void sub_1000FA8D0(uint64_t a1)
{
  (*(void (**)(void, id))(*(void *)(a1 + 56) + 16))(*(void *)(a1 + 56), [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 40)]);
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v2 = *(void **)(a1 + 48);

  xpc_release(v2);
}

void sub_1000FA9D4(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  (*(void (**)(void, id, xpc_object_t))(*(void *)(a1 + 56) + 16))(*(void *)(a1 + 56), [*(id *)(a1 + 40) _clientForConnection:*(void *)(a1 + 48)], reply);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);
  xpc_release(*(xpc_object_t *)(a1 + 48));
  id v3 = *(void **)(a1 + 32);

  xpc_release(v3);
}

void sub_1000FAFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000FAFE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  id v6 = [v5 appState];
  if ([v6 isInstalled])
  {
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

    if (v8 < v7)
    {
      uint64_t v9 = (int)+[SSPurchaseReceipt vppStateFlagsWithProxy:v5];
      id v10 = [*(id *)(a1 + 32) _optionsWithVPPState:v9];
      if (v10)
      {
        [*(id *)(a1 + 32) _refreshReceiptForApplication:v5 withOptions:v10 vppState:v9 error:0];
        ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      }
      goto LABEL_18;
    }
  }
  else
  {
  }
  id v11 = [v5 appState];
  unsigned __int8 v12 = [v11 isInstalled];

  if ((v12 & 1) == 0)
  {
    id v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10)
    {
      id v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    id v15 = [v10 OSLogObject];
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      v14 &= 2u;
    }
    if (v14)
    {
      id v16 = objc_opt_class();
      id v17 = v16;
      [v5 bundleIdentifier];
      int v20 = 138543618;
      uint64_t v21 = v16;
      __int16 v22 = 2114;
      id v23 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v19) = 22;
      id v18 = (void *)_os_log_send_and_compose_impl();

      if (!v18)
      {
LABEL_18:

        goto LABEL_19;
      }
      id v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v20, v19);
      free(v18);
      SSFileLog();
    }

    goto LABEL_18;
  }
LABEL_19:
}

id sub_1000FE3C4(uint64_t a1, void *a2)
{
  id v3 = +[CanceledPreorderEntity queryWithDatabase:predicate:](CanceledPreorderEntity, "queryWithDatabase:predicate:", [a2 database], 0);
  v7[0] = @"store_account_id";
  v7[1] = @"store_item_id";
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000FE4B0;
  v5[3] = &unk_1003A3308;
  long long v6 = *(_OWORD *)(a1 + 32);
  return [v3 enumeratePersistentIDsAndProperties:v7 count:2 usingBlock:v5];
}

void sub_1000FE4B0(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 && a3[1])
  {
    id v6 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
    id v5 = [*(id *)(a1 + 32) _newURLOperationWithItemID:a3[1] accountID:*a3];
    [*(id *)(a1 + 40) setObject:v5 forKey:v6];
  }
}

uint64_t sub_1000FE55C(uint64_t a1, void *a2)
{
  id v2 = -[CanceledPreorderEntity initWithPersistentID:inDatabase:]([CanceledPreorderEntity alloc], "initWithPersistentID:inDatabase:", [*(id *)(a1 + 32) longLongValue], objc_msgSend(a2, "database"));
  [(CanceledPreorderEntity *)v2 deleteFromDatabase];

  return 1;
}

void sub_1001000BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(NSObject **)(v2 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100100130;
  v4[3] = &unk_1003A5220;
  void v4[4] = v2;
  void v4[5] = a2;
  dispatch_async(v3, v4);
}

id sub_100100130(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = 0;

  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);

  return [v4 _sendDidFinishWithResponseFlags:v5];
}

void sub_100100360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100100378(uint64_t a1, uint64_t a2)
{
}

void sub_100100388(uint64_t a1)
{
}

id sub_100100394(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 136);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void *sub_100100454(void *result)
{
  uint64_t v1 = *(void **)(result[4] + 136);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 136) = result;
  }
  return result;
}

id sub_10010055C(void *a1)
{
  id result = [*(id *)(a1[4] + 136) containsObject:a1[5]];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1001009CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_alloc_init((Class)SSVMediaSocialPostArtist);
  [v5 setIdentifier:*a3];
  [v5 setName:a3[1]];
  [*(id *)(a1 + 32) addObject:v5];
}

void sub_100100DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = +[DirectUploadArtistEntity newEntityValuesWithMediaSocialArtist:a2];
  [v7 setObject:*(void *)(a1 + 32) forKey:@"upload_id"];
  id v5 = [objc_alloc((Class)NSNumber) initWithUnsignedInteger:a3];
  [v7 setObject:v5 forKey:@"order_index"];
  if (*(void *)(a1 + 40)) {
    [v7 addEntriesFromDictionary:v7];
  }
  id v6 = [[DirectUploadArtistEntity alloc] initWithPropertyValues:v7 inDatabase:*(void *)(a1 + 48)];
  if (v6) {
    [*(id *)(a1 + 56) addObject:v6];
  }
}

void sub_100101540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_alloc_init((Class)SSVDirectUpload);
  if (*(void *)(a3 + 16))
  {
    if (*(void *)(a3 + 24)) {
      id v8 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", *(void *)(a3 + 24), NSLocalizedDescriptionKey, 0);
    }
    else {
      id v8 = 0;
    }
    id v9 = objc_msgSend(objc_alloc((Class)NSError), "initWithDomain:code:userInfo:", *(void *)(a3 + 16), objc_msgSend(*(id *)(a3 + 8), "integerValue"), v8);
    [v7 setError:v9];
  }
  [v7 setCategoryName:*(void *)a3];
  objc_msgSend(v7, "setExplicitContent:", objc_msgSend(*(id *)(a3 + 32), "BOOLValue"));
  [v7 setPersistentIdentifier:a2];
  id v10 = [*(id *)(a3 + 40) integerValue];
  if ((unint64_t)v10 >= 6) {
    uint64_t v11 = 6;
  }
  else {
    uint64_t v11 = (uint64_t)v10;
  }
  [v7 setState:v11];
  [v7 setSubtitle:*(void *)(a3 + 48)];
  if (*(void *)(a3 + 56))
  {
    id v12 = [objc_alloc((Class)NSURL) initWithString:*(void *)(a3 + 56)];
    [v7 setThumbnailImageURL:v12];
  }
  [v7 setTitle:*(void *)(a3 + 64)];
  [v7 _setUploadKind:*(void *)(a3 + 72)];
  [v7 setUTI:*(void *)(a3 + 80)];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001025AC()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401DD0 = (uint64_t)result;
  return result;
}

id sub_100102648(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001026BC;
  v3[3] = &unk_1003A6838;
  uint64_t v1 = *(void **)(a1 + 32);
  v3[4] = *(void *)(a1 + 40);
  return [v1 _cancelErrorsPassingTest:v3];
}

id sub_1001026BC(uint64_t a1, void *a2)
{
  return [a2 representsDownloadWithIdentifier:*(void *)(a1 + 32)];
}

void sub_100102754(uint64_t a1)
{
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(*(void *)(a1 + 40) + 16);
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    while (2)
    {
      for (size_t i = 0; i != v5; size_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if ([v8 canCoalesceWithError:v2])
        {
          objc_msgSend(v8, "addDownloadIdentifiers:", objc_msgSend(v2, "downloadIdentifiers"));
          uint64_t v2 = v8;
          goto LABEL_11;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_11:
  id v9 = [v2 copyUserNotification];
  if (v9)
  {
    id v10 = v9;
    if (v2 == *(void **)(a1 + 32))
    {
      [*(id *)(*(void *)(a1 + 40) + 16) addObject:v2];
    }
    else
    {
      id v11 = [v2 _notification];
      if (v11)
      {
        objc_msgSend(+[UserNotificationCenter defaultCenter](UserNotificationCenter, "defaultCenter"), "updateUserNotification:withUserNotification:", v11, v10);
LABEL_17:

        return;
      }
    }
    [*(id *)(a1 + 40) _scheduleErrorDisplay:v2];
    goto LABEL_17;
  }
}

id sub_10010296C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cancelErrorsPassingTest:&stru_1003A6878];
}

BOOL sub_10010297C(id a1, DownloadError *a2)
{
  return ![(DownloadError *)a2 isValidError];
}

void sub_100102C48(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) performActionForResponseFlags:a2];
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = *(NSObject **)(v3 + 8);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_100102CD8;
  v6[3] = &unk_1003A3380;
  uint64_t v5 = *(void *)(a1 + 32);
  void v6[4] = v3;
  void v6[5] = v5;
  dispatch_async(v4, v6);
}

id sub_100102CD8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) removeObjectIdenticalTo:*(void *)(a1 + 40)];
}

id sub_100102DE8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _displayScheduledErrors];
}

id sub_10010399C(uint64_t a1, void *a2)
{
  return [a2 resetDownloadsWithIdentifiers:*(void *)(*(void *)(a1 + 32) + 8)];
}

uint64_t sub_1001039AC(uint64_t a1, void *a2)
{
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 8);
  uint64_t result = (uint64_t)[v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (result)
  {
    id v5 = (id)result;
    uint64_t v6 = *(void *)v12;
    uint64_t v7 = SSDownloadPhaseCanceled;
    while (2)
    {
      for (size_t i = 0; i != v5; size_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        LODWORD(v9) = objc_msgSend(a2, "finishDownloadWithID:finalPhase:updatePipeline:", objc_msgSend(v9, "longLongValue"), v7, 0);
        if (!v9) {
          return 0;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v5) {
        continue;
      }
      break;
    }
    return 1;
  }
  return result;
}

id sub_100104E50()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401DE0 = (uint64_t)result;
  return result;
}

void sub_100104F6C(uint64_t a1)
{
  uint64_t v2 = (uint64_t)[*(id *)(*(void *)(a1 + 32) + 16) count];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v3 = *(void **)(a1 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    do
    {
      for (size_t i = 0; i != v5; size_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = [*(id *)(*(void *)(a1 + 32) + 16) indexOfObjectIdenticalTo:*(void *)(*((void *)&v12 + 1) + 8 * i)];
        if (v8 != (id)0x7FFFFFFFFFFFFFFFLL) {
          [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v8];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v5);
  }
  if (v2 >= 1 && ![*(id *)(*(void *)(a1 + 32) + 16) count]) {
    objc_msgSend(+[Daemon daemon](Daemon, "daemon"), "releaseKeepAliveAssertion:", @"com.apple.itunesstored.UserNotificationCenter");
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100105174;
  block[3] = &unk_1003A33A8;
  void block[4] = *(void *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  global_queue = dispatch_get_global_queue(0, 0);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100105184;
  v10[3] = &unk_1003A33A8;
  void v10[4] = *(void *)(a1 + 40);
  dispatch_async(global_queue, v10);
}

id sub_100105174(uint64_t a1)
{
  return [*(id *)(a1 + 32) makeObjectsPerformSelector:"cancel"];
}

id sub_100105184(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v1 = *(void **)(a1 + 32);
  id result = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v8;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = (void (**)(id, uint64_t))[*(id *)(*((void *)&v7 + 1) + 8 * (void)v5) completionBlock];
        if (v6) {
          v6[2](v6, 1431196227);
        }
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
      id v3 = result;
    }
    while (result);
  }
  return result;
}

id sub_1001053D0(uint64_t a1)
{
  [*(id *)(a1 + 32) setCompletionBlock:*(void *)(a1 + 48)];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 _showPreparedNotification:v3];
}

void sub_100105554(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_10010556C(uint64_t a1, uint64_t a2)
{
}

void sub_10010557C(uint64_t a1)
{
}

id sub_100105588(void *a1)
{
  *(void *)(*(void *)(a1[6] + 8) + 40) = [[UserNotification alloc] initWithDictionary:a1[7] options:a1[8] completionBlock:a1[5]];
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = *(void *)(*(void *)(a1[6] + 8) + 40);

  return [v2 _showPreparedNotification:v3];
}

void sub_1001056E4(uint64_t a1)
{
  [*(id *)(a1 + 32) updateWithDictionary:*(void *)(a1 + 40) options:*(void *)(a1 + 48)];
  uint64_t v2 = *(const void **)(a1 + 40);

  CFRelease(v2);
}

id sub_100105800(uint64_t a1)
{
  uint64_t v2 = (uint64_t)[*(id *)(*(void *)(a1 + 32) + 16) count];
  uint64_t v3 = v2;
  while (v3-- >= 1)
  {
    id v5 = [*(id *)(*(void *)(a1 + 32) + 16) objectAtIndex:v3];
    if ([v5 userNotification] == *(id *)(a1 + 40))
    {
      id v6 = v5;
      [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v3];
      if (v6)
      {
        id v7 = [v6 completionBlock];
        if (v7)
        {
          id v8 = v7;
          global_queue = dispatch_get_global_queue(0, 0);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_100105998;
          block[3] = &unk_1003A6940;
          uint64_t v10 = *(void *)(a1 + 48);
          void block[4] = v8;
          void block[5] = v10;
          dispatch_async(global_queue, block);
        }
        v13[0] = _NSConcreteStackBlock;
        v13[1] = 3221225472;
        v13[2] = sub_1001059AC;
        v13[3] = &unk_1003A33A8;
        void v13[4] = v6;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);
      }
      break;
    }
  }
  id v11 = +[Daemon daemon];
  id result = [v11 endShowingDialog];
  if (v2 >= 1)
  {
    id result = [*(id *)(*(void *)(a1 + 32) + 16) count];
    if (!result) {
      return [v11 releaseKeepAliveAssertion:@"com.apple.itunesstored.UserNotificationCenter"];
    }
  }
  return result;
}

uint64_t sub_100105998(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

id sub_1001059AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) cancel];
}

uint64_t sub_100105AF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100105B0C(uint64_t a1)
{
  [*(id *)(a1 + 32) beginShowingDialog];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 show];
}

id sub_100105D48(uint64_t a1, uint64_t a2)
{
  id v4 = +[UserNotificationCenter defaultCenter];

  return [v4 _finishUserNotification:a1 withResponseFlags:a2];
}

void sub_1001081D0(id a1)
{
  id v3 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", CPSharedResourcesDirectory(), @"Media", @"Downloads", 0);
  uint64_t v1 = +[NSString pathWithComponents:v3];
  uint64_t v2 = (void *)qword_100401DF0;
  qword_100401DF0 = v1;
}

void sub_100108308()
{
  id v27 = 0;
  uint64_t v0 = container_system_path_for_identifier();
  if (v0)
  {
    id v5 = (void *)v0;
    id v6 = [objc_alloc((Class)NSString) initWithCString:v0 encoding:4];
    id v7 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", v6, @"Library", @"Caches", @"Scratch", 0);
    uint64_t v8 = +[NSString pathWithComponents:v7];
    long long v9 = (void *)qword_100401E00;
    qword_100401E00 = v8;

    if (![(id)qword_100401E00 length]) {
      goto LABEL_30;
    }
    uint64_t v10 = objc_opt_new();
    [v10 createDirectoryAtPath:qword_100401E00 withIntermediateDirectories:1 attributes:0 error:0];

    int v11 = open((const char *)[(id)qword_100401E00 UTF8String], 0x1000000);
    if (v11)
    {
      int v12 = v11;
      fcntl(v11, 64, 4);
      close(v12);
    }
    long long v13 = +[NSURL fileURLWithPath:qword_100401E00 isDirectory:1];
    long long v14 = +[NSNumber numberWithBool:1];
    id v26 = 0;
    unsigned __int8 v15 = [v13 setResourceValue:v14 forKey:NSURLIsExcludedFromBackupKey error:&v26];
    id v16 = v26;

    if (v15)
    {
LABEL_29:

LABEL_30:
      free(v5);
      goto LABEL_31;
    }
    id v17 = +[SSLogConfig sharedDaemonConfig];
    if (!v17)
    {
      id v17 = +[SSLogConfig sharedConfig];
    }
    unsigned int v18 = [v17 shouldLog];
    if ([v17 shouldLogToDisk]) {
      int v19 = v18 | 2;
    }
    else {
      int v19 = v18;
    }
    int v20 = [v17 OSLogObject];
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      v19 &= 2u;
    }
    if (v19)
    {
      uint64_t v21 = objc_opt_class();
      int v28 = 138412546;
      id v29 = v21;
      __int16 v30 = 2112;
      id v31 = v16;
      id v22 = v21;
      LODWORD(v25) = 22;
      id v23 = (void *)_os_log_send_and_compose_impl();

      if (!v23)
      {
LABEL_28:

        goto LABEL_29;
      }
      int v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v28, v25);
      free(v23);
      SSFileLog();
    }

    goto LABEL_28;
  }
  id v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    id v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v1 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v2 = v1 | 2;
  }
  else {
    int v2 = v1;
  }
  id v7 = [v6 OSLogObject];
  if (!os_log_type_enabled(v7, OS_LOG_TYPE_FAULT)) {
    v2 &= 2u;
  }
  if (!v2) {
    goto LABEL_31;
  }
  int v28 = 138412546;
  id v29 = (id)objc_opt_class();
  __int16 v30 = 2048;
  id v31 = v27;
  id v3 = v29;
  LODWORD(v24) = 22;
  id v4 = (void *)_os_log_send_and_compose_impl();

  if (v4)
  {
    id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v4, 4, &v28, v24);
    free(v4);
    SSFileLog();
LABEL_31:
  }
}

void sub_100109174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001091B8(uint64_t a1, void *a2)
{
  id v3 = [a2 info];
  id v4 = [v3 objectForSetting:1];

  id v5 = v4;
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v5 UTF8String];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 112));
}

void sub_1001094BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001094D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001094E4(uint64_t a1)
{
}

void sub_1001094EC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v14 = a2;
  if (SSIsDaemon())
  {
    id v7 = +[LSPlugInKitProxy pluginKitProxyForIdentifier:*(void *)(a1 + 32)];
    if (!v14
      || ([v7 protocol],
          id v4 = objc_claimAutoreleasedReturnValue(),
          [v4 isEqualToString:v14]))
    {
      uint64_t v8 = [v7 containingBundle];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        long long v9 = [v7 containingBundle];
        uint64_t v10 = [v9 bundleType];
        unsigned int v11 = [v10 isEqualToString:LSUserApplicationType];

        if (v14)
        {

          if ((v11 & 1) == 0) {
            goto LABEL_13;
          }
        }
        else if (!v11)
        {
LABEL_13:

          goto LABEL_14;
        }
        uint64_t v12 = [v7 containingBundle];
        uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
        id v4 = *(void **)(v13 + 40);
        *(void *)(v13 + 40) = v12;
      }
      else
      {

        if (!v14) {
          goto LABEL_13;
        }
      }
    }

    goto LABEL_13;
  }
LABEL_14:
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)) {
    *a4 = 1;
  }
}

uint64_t sub_100109E58(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_dictionary)
  {
    id v5 = [[SKProduct alloc] initWithXPCEncoding:v4];
    id v6 = v5;
    if (v5)
    {
      id v7 = [(SKProduct *)v5 _localeIdentifier];
      if (v7)
      {
        id v8 = [*(id *)(a1 + 32) objectForKey:v7];
        if (!v8)
        {
          id v8 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:v7];
          if (v8) {
            [*(id *)(a1 + 32) setObject:v8 forKey:v7];
          }
        }
        [(SKProduct *)v6 _setPriceLocale:v8];
        [(SKProduct *)v6 _setLocaleIdentifier:0];
      }
      [*(id *)(a1 + 40) addObject:v6];
    }
  }

  return 1;
}

id sub_10010A20C(uint64_t a1)
{
  unsigned int v1 = sub_10010A2A0(a1);
  int v2 = v1;
  if (v1)
  {
    CFDictionaryRef v3 = sub_10010A338(v1);
    if (v3)
    {
      id v4 = +[NSPropertyListSerialization dataWithPropertyList:v3 format:200 options:0 error:0];
    }
    else
    {
      id v4 = 0;
    }
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id sub_10010A2A0(uint64_t a1)
{
  unsigned int v1 = +[NSKeyedArchiver archivedDataWithRootObject:a1 requiringSecureCoding:1 error:0];
  if ([v1 length])
  {
    id v2 = v1;
    xpc_object_t v3 = xpc_data_create([v2 bytes], (size_t)objc_msgSend(v2, "length"));
  }
  else
  {
    xpc_object_t v3 = 0;
  }

  return v3;
}

CFDictionaryRef sub_10010A338(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (!v1) {
    goto LABEL_12;
  }
  xpc_type_t type = xpc_get_type(v1);
  if (type == (xpc_type_t)&_xpc_type_BOOL)
  {
    BOOL value = xpc_BOOL_get_value(v2);
    id v6 = (CFTypeRef *)&kCFBooleanTrue;
    if (!value) {
      id v6 = (CFTypeRef *)&kCFBooleanFalse;
    }
    goto LABEL_15;
  }
  if (type == (xpc_type_t)&_xpc_type_data)
  {
    bytes_ptr = (const UInt8 *)xpc_data_get_bytes_ptr(v2);
    size_t length = xpc_data_get_length(v2);
    CFDictionaryRef v7 = CFDataCreate(kCFAllocatorSystemDefault, bytes_ptr, length);
    goto LABEL_24;
  }
  if (type == (xpc_type_t)&_xpc_type_date)
  {
    int64_t v10 = xpc_date_get_value(v2);
    CFDictionaryRef v7 = CFDateCreate(kCFAllocatorSystemDefault, (double)v10 / 1000000000.0 - kCFAbsoluteTimeIntervalSince1970);
    goto LABEL_24;
  }
  if (type == (xpc_type_t)&_xpc_type_double)
  {
    *(void *)&valuePtr[0] = xpc_double_get_value(v2);
    CFDictionaryRef v7 = CFNumberCreate(kCFAllocatorSystemDefault, kCFNumberDoubleType, valuePtr);
    goto LABEL_24;
  }
  if (type == (xpc_type_t)&_xpc_type_int64)
  {
    *(void *)&valuePtr[0] = xpc_int64_get_value(v2);
    CFDictionaryRef v7 = CFNumberCreate(kCFAllocatorSystemDefault, kCFNumberSInt64Type, valuePtr);
    goto LABEL_24;
  }
  if (type == (xpc_type_t)&_xpc_type_null)
  {
    id v6 = (CFTypeRef *)&kCFNull;
LABEL_15:
    CFDictionaryRef v7 = (const __CFDictionary *)CFRetain(*v6);
LABEL_24:
    CFDictionaryRef v4 = v7;
    goto LABEL_25;
  }
  if (type == (xpc_type_t)&_xpc_type_string)
  {
    string_ptr = xpc_string_get_string_ptr(v2);
    CFDictionaryRef v7 = (const __CFDictionary *)CFStringCreateWithCString(kCFAllocatorSystemDefault, string_ptr, 0x8000100u);
    goto LABEL_24;
  }
  if (type == (xpc_type_t)&_xpc_type_uuid)
  {
    CFUUIDBytes v26 = *(CFUUIDBytes *)xpc_uuid_get_bytes(v2);
    CFDictionaryRef v7 = CFUUIDCreateFromUUIDBytes(kCFAllocatorSystemDefault, v26);
    goto LABEL_24;
  }
  if (type == (xpc_type_t)&_xpc_type_array)
  {
    CFDictionaryRef v7 = sub_10010AD94(v2);
    goto LABEL_24;
  }
  if (type != (xpc_type_t)&_xpc_type_dictionary)
  {
LABEL_12:
    CFDictionaryRef v4 = 0;
    goto LABEL_25;
  }
  size_t count = xpc_dictionary_get_count(v2);
  CFIndex v14 = count;
  size_t v15 = 16 * count;
  memset(valuePtr, 0, 512);
  if (2 * count > 0x100)
  {
    id v16 = malloc_type_malloc(16 * count, 0x8F1F86C1uLL);
    bzero(v16, v15);
    if (!v16) {
      goto LABEL_12;
    }
  }
  else
  {
    id v16 = valuePtr;
    __memset_chk();
  }
  uint64_t v21 = 0;
  id v22 = &v21;
  uint64_t v23 = 0x2020000000;
  uint64_t v24 = 0;
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_10010AFE8;
  applier[3] = &unk_1003A6AF8;
  void applier[4] = &v21;
  applier[5] = v16;
  applier[6] = v14;
  xpc_dictionary_apply(v2, applier);
  uint64_t v17 = v22[3];
  if (v14 == v17)
  {
    CFDictionaryRef v4 = CFDictionaryCreate(kCFAllocatorSystemDefault, (const void **)v16, (const void **)v16 + v14, v14, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
    uint64_t v17 = v22[3];
  }
  else
  {
    CFDictionaryRef v4 = 0;
  }
  if (v17 >= 1)
  {
    uint64_t v18 = 0;
    int v19 = (char *)v16 + 8 * v14;
    do
    {
      CFRelease(*((CFTypeRef *)v16 + v18));
      CFRelease(*(CFTypeRef *)&v19[8 * v18++]);
    }
    while (v18 < v22[3]);
  }
  if (v16 != valuePtr) {
    free(v16);
  }
  _Block_object_dispose(&v21, 8);
LABEL_25:

  return v4;
}

void sub_10010A768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10010A78C(uint64_t a1)
{
  if (a1)
  {
    id v1 = +[NSPropertyListSerialization propertyListWithData:a1 options:0 format:0 error:0];
    id v2 = v1;
    if (v1)
    {
      xpc_object_t v3 = sub_10010A844(v1);
      if (v3)
      {
        uint64_t v4 = objc_opt_class();
        id v5 = sub_10010ACC4(v3, v4);
      }
      else
      {
        id v5 = 0;
      }
    }
    else
    {
      id v5 = 0;
    }
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

id sub_10010A844(__CFString *a1)
{
  if (!a1) {
    goto LABEL_59;
  }
  CFTypeID v2 = CFGetTypeID(a1);
  if (v2 == CFNullGetTypeID())
  {
    xpc_object_t v3 = xpc_null_create();
LABEL_8:
    xpc_object_t v7 = v3;
    goto LABEL_60;
  }
  if (v2 == CFBooleanGetTypeID())
  {
    BOOL v4 = CFBooleanGetValue((CFBooleanRef)a1) != 0;
    xpc_object_t v3 = xpc_BOOL_create(v4);
    goto LABEL_8;
  }
  if (v2 == CFDataGetTypeID())
  {
    BytePtr = CFDataGetBytePtr((CFDataRef)a1);
    size_t Length = CFDataGetLength((CFDataRef)a1);
    xpc_object_t v3 = xpc_data_create(BytePtr, Length);
    goto LABEL_8;
  }
  if (v2 != CFDateGetTypeID())
  {
    if (v2 == CFUUIDGetTypeID())
    {
      CFUUIDBytes uuid = CFUUIDGetUUIDBytes((CFUUIDRef)a1);
      xpc_object_t v3 = xpc_uuid_create(&uuid.byte0);
      goto LABEL_8;
    }
    if (v2 != CFStringGetTypeID())
    {
      if (v2 == CFNumberGetTypeID())
      {
        if (CFNumberIsFloatType((CFNumberRef)a1))
        {
          *(void *)&uuid.byte0 = 0;
          if (CFNumberGetValue((CFNumberRef)a1, kCFNumberDoubleType, &uuid))
          {
            xpc_object_t v3 = xpc_double_create(*(double *)&uuid.byte0);
            goto LABEL_8;
          }
        }
        else
        {
          *(void *)&uuid.byte0 = 0;
          if (CFNumberGetValue((CFNumberRef)a1, kCFNumberSInt64Type, &uuid))
          {
            xpc_object_t v3 = xpc_int64_create(*(int64_t *)&uuid.byte0);
            goto LABEL_8;
          }
        }
        goto LABEL_59;
      }
      if (v2 == CFArrayGetTypeID())
      {
        xpc_object_t v7 = xpc_array_create(0, 0);
        if (!v7) {
          goto LABEL_60;
        }
        long long v39 = 0u;
        long long v40 = 0u;
        long long v37 = 0u;
        long long v38 = 0u;
        CFIndex v14 = a1;
        id v15 = [(__CFString *)v14 countByEnumeratingWithState:&v37 objects:v43 count:16];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = *(void *)v38;
          do
          {
            for (size_t i = 0; i != v16; size_t i = (char *)i + 1)
            {
              if (*(void *)v38 != v17) {
                objc_enumerationMutation(v14);
              }
              int v19 = sub_10010A844(*(void *)(*((void *)&v37 + 1) + 8 * i));
              if (v19) {
                xpc_array_append_value(v7, v19);
              }
            }
            id v16 = [(__CFString *)v14 countByEnumeratingWithState:&v37 objects:v43 count:16];
          }
          while (v16);
        }
      }
      else
      {
        if (v2 != CFDictionaryGetTypeID())
        {
          if (objc_opt_respondsToSelector())
          {
            xpc_object_t v3 = [(__CFString *)a1 copyXPCEncoding];
            goto LABEL_8;
          }
          goto LABEL_59;
        }
        xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
        if (!v7) {
          goto LABEL_60;
        }
        long long v35 = 0u;
        long long v36 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        CFIndex v14 = a1;
        id v20 = [(__CFString *)v14 countByEnumeratingWithState:&v33 objects:v42 count:16];
        if (v20)
        {
          id v21 = v20;
          uint64_t v22 = *(void *)v34;
          do
          {
            for (uint64_t j = 0; j != v21; uint64_t j = (char *)j + 1)
            {
              if (*(void *)v34 != v22) {
                objc_enumerationMutation(v14);
              }
              CFStringRef v24 = *(const __CFString **)(*((void *)&v33 + 1) + 8 * (void)j);
              CFIndex v25 = CFStringGetLength(v24);
              size_t MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(v25, 0x8000100u);
              if (MaximumSizeForEncoding != -1)
              {
                CFIndex v27 = MaximumSizeForEncoding;
                int v28 = (char *)malloc_type_malloc(MaximumSizeForEncoding, 0x5B28CE8uLL);
                if (v28)
                {
                  id v29 = v28;
                  if (CFStringGetCString(v24, v28, v27, 0x8000100u))
                  {
                    Value = CFDictionaryGetValue((CFDictionaryRef)v14, v24);
                    id v31 = sub_10010A844(Value);
                    if (v31) {
                      xpc_dictionary_set_value(v7, v29, v31);
                    }
                  }
                  free(v29);
                }
              }
            }
            id v21 = [(__CFString *)v14 countByEnumeratingWithState:&v33 objects:v42 count:16];
          }
          while (v21);
        }
      }

      goto LABEL_60;
    }
    CFIndex v9 = CFStringGetLength(a1);
    size_t v10 = CFStringGetMaximumSizeForEncoding(v9 + 1, 0x8000100u);
    if (v10 != -1)
    {
      CFIndex v11 = v10;
      uint64_t v12 = (char *)malloc_type_malloc(v10, 0xC048FD8CuLL);
      if (v12)
      {
        uint64_t v13 = v12;
        if (CFStringGetCString(a1, v12, v11, 0x8000100u)) {
          xpc_object_t v7 = xpc_string_create(v13);
        }
        else {
          xpc_object_t v7 = 0;
        }
        free(v13);
        goto LABEL_60;
      }
    }
LABEL_59:
    xpc_object_t v7 = 0;
    goto LABEL_60;
  }
  xpc_object_t v7 = 0;
  double v8 = CFDateGetAbsoluteTime((CFDateRef)a1) + kCFAbsoluteTimeIntervalSince1970;
  if (v8 >= -9223372040.0 && v8 <= 9223372040.0)
  {
    xpc_object_t v3 = xpc_date_create((uint64_t)(v8 * 1000000000.0));
    goto LABEL_8;
  }
LABEL_60:

  return v7;
}

id sub_10010ACC4(void *a1, uint64_t a2)
{
  id v3 = a1;
  BOOL v4 = v3;
  if (v3
    && xpc_get_type(v3) == (xpc_type_t)&_xpc_type_data
    && (size_t length = xpc_data_get_length(v4), bytes_ptr = xpc_data_get_bytes_ptr(v4), length)
    && (id v9 = [objc_alloc((Class)NSData) initWithBytesNoCopy:bytes_ptr length:length freeWhenDone:0]) != 0)
  {
    size_t v10 = v9;
    id v5 = +[NSKeyedUnarchiver unarchivedObjectOfClass:a2 fromData:v9 error:0];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

CFArrayRef sub_10010AD94(void *a1)
{
  id v1 = a1;
  size_t count = xpc_array_get_count(v1);
  CFIndex v3 = count;
  size_t v4 = 8 * count;
  memset(v18, 0, 512);
  if (count > 0x100)
  {
    id v5 = malloc_type_malloc(8 * count, 0xC0040B8AA526DuLL);
    bzero(v5, v4);
    if (!v5)
    {
      CFArrayRef v7 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    id v5 = v18;
    __memset_chk();
  }
  uint64_t v14 = 0;
  id v15 = &v14;
  uint64_t v16 = 0x2020000000;
  uint64_t v17 = 0;
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_10010B17C;
  applier[3] = &unk_1003A6B20;
  uint64_t v12 = &v14;
  uint64_t v13 = v5;
  CFIndex v11 = &stru_1003A6AD0;
  xpc_array_apply(v1, applier);
  uint64_t v6 = v15[3];
  if (v3 == v6)
  {
    CFArrayRef v7 = CFArrayCreate(kCFAllocatorSystemDefault, (const void **)v5, v3, &kCFTypeArrayCallBacks);
    uint64_t v6 = v15[3];
  }
  else
  {
    CFArrayRef v7 = 0;
  }
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
      CFRelease(*((CFTypeRef *)v5 + v8++));
    while (v8 < v15[3]);
  }
  if (v5 != v18) {
    free(v5);
  }

  _Block_object_dispose(&v14, 8);
LABEL_13:

  return v7;
}

void sub_10010AFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__cdecl sub_10010AFE0(id a1, OS_xpc_object *a2)
{
  return sub_10010A338(a2);
}

uint64_t sub_10010AFE8(void *a1, const char *a2, uint64_t a3)
{
  uint64_t result = sub_10010A338(a3);
  if (result)
  {
    uint64_t v6 = (const void *)result;
    CFStringRef v7 = CFStringCreateWithCString(kCFAllocatorSystemDefault, a2, 0x8000100u);
    if (v7)
    {
      *(void *)(a1[5] + 8 * *(void *)(*(void *)(a1[4] + 8) + 24)) = v7;
      uint64_t v9 = a1[5];
      uint64_t v8 = a1[6];
      uint64_t v10 = *(void *)(a1[4] + 8);
      uint64_t v11 = *(void *)(v10 + 24);
      *(void *)(v10 + 24) = v11 + 1;
      *(void *)(v9 + 8 * (v11 + v8)) = v6;
      return 1;
    }
    else
    {
      CFRelease(v6);
      return 0;
    }
  }
  return result;
}

CFDictionaryRef sub_10010B088(void *a1, const char *a2)
{
  CFTypeID v2 = xpc_dictionary_get_value(a1, a2);
  CFDictionaryRef v3 = sub_10010A338(v2);

  return v3;
}

CFDictionaryRef sub_10010B0C0(void *a1, const char *a2)
{
  CFDictionaryRef v2 = sub_10010B088(a1, a2);
  if (v2 && (objc_opt_isKindOfClass() & 1) == 0)
  {
    CFRelease(v2);
    return 0;
  }
  return v2;
}

void sub_10010B10C(void *a1, const char *a2, __CFString *a3)
{
  xpc_object_t xdict = a1;
  id v5 = sub_10010A844(a3);
  if (v5) {
    xpc_dictionary_set_value(xdict, a2, v5);
  }
}

BOOL sub_10010B17C(void *a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a1[4] + 16))();
  if (v2)
  {
    uint64_t v3 = a1[6];
    uint64_t v4 = *(void *)(a1[5] + 8);
    uint64_t v5 = *(void *)(v4 + 24);
    *(void *)(v4 + 24) = v5 + 1;
    *(void *)(v3 + 8 * v5) = v2;
  }
  return v2 != 0;
}

id sub_10010B2C4(uint64_t a1, void *a2)
{
  return [a2 _invalidateAfterExternalChange];
}

void sub_10010B384(id a1)
{
  id v1 = [EBookManifest alloc];
  qword_100401E10 = -[EBookManifest initWithManifestPath:](v1, "initWithManifestPath:", [sub_10018A454(SSDownloadKindEBook) stringByAppendingPathComponent:@"Purchases.plist"]);
}

void sub_10010B424(id a1)
{
  qword_100401E20 = -[EBookManifest initWithManifestPath:]([EBookManifest alloc], "initWithManifestPath:", objc_msgSend(+[InstallEBookDownloadOperation sharedBookContainerPath](InstallEBookDownloadOperation, "sharedBookContainerPath"), "stringByAppendingPathComponent:", @"Shared.plist"));
}

void sub_10010B4C0(id a1)
{
  id v1 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", CPSharedResourcesDirectory(), @"Media", @"Books", @"Books.plist", 0);
  qword_100401E30 = [[EBookManifest alloc] initWithManifestPath:+[NSString pathWithComponents:v1]];
}

void sub_10010B64C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _manifest];
  CFStringRef v3 = @"Books";
  id v4 = [v2 objectForKey:@"Books"];
  if (v4 || (v3 = @"Purchases", (id v4 = [v2 objectForKey:@"Purchases"]) != 0))
  {
    id v5 = v4;
  }
  else
  {
    id v5 = objc_alloc_init((Class)NSMutableArray);
    CFStringRef v3 = @"Books";
  }
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v6 = *(void **)(a1 + 40);
  id v7 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v13;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v13 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = [*(id *)(*((void *)&v12 + 1) + 8 * (void)v10) mutableCopy];
        [v5 addObject:v11];

        uint64_t v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v8);
  }
  [v2 setObject:v5 forKey:v3];
}

id sub_10010B99C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _entries];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id result = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v9;
LABEL_3:
    uint64_t v6 = 0;
    while (1)
    {
      if (*(void *)v9 != v5) {
        objc_enumerationMutation(v2);
      }
      id v7 = *(void **)(*((void *)&v8 + 1) + 8 * v6);
      if (objc_msgSend(objc_msgSend(v7, "objectForKey:", *(void *)(a1 + 40)), "isEqual:", *(void *)(a1 + 48)))
      {
        [*(id *)(a1 + 56) addObject:v7];
        id result = [*(id *)(a1 + 56) count];
        if ((unint64_t)result >= *(void *)(a1 + 64)) {
          break;
        }
      }
      if (v4 == (id)++v6)
      {
        id result = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
        id v4 = result;
        if (result) {
          goto LABEL_3;
        }
        return result;
      }
    }
  }
  return result;
}

void sub_10010BB64(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_manifest"), "objectForKey:", @"Books");
  uint64_t v3 = 0;
  while ((objc_msgSend(*(id *)(a1 + 40), "isEqualToNumber:", objc_msgSend(objc_msgSend(v2, "objectAtIndex:", v3), "objectForKey:", @"s")) & 1) == 0)
  {
    if (++v3 == 8) {
      goto LABEL_15;
    }
  }
  [v2 removeObjectAtIndex:v3];
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v6 &= 2u;
  }
  if (v6)
  {
    int v10 = 138412546;
    uint64_t v11 = objc_opt_class();
    __int16 v12 = 2048;
    uint64_t v13 = v3;
    LODWORD(v9) = 22;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      long long v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v10, v9);
      free(v8);
      SSFileLog();
    }
  }
LABEL_15:
}

void sub_10010BDA8(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_manifest"), "objectForKey:", @"Books");
  uint64_t v3 = 0;
  while ((objc_msgSend(*(id *)(a1 + 40), "isEqualToString:", objc_msgSend(objc_msgSend(v2, "objectAtIndex:", v3), "objectForKey:", @"iTunesU Permlink")) & 1) == 0)
  {
    if (++v3 == 8) {
      goto LABEL_15;
    }
  }
  [v2 removeObjectAtIndex:v3];
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v6 &= 2u;
  }
  if (v6)
  {
    int v10 = 138412546;
    uint64_t v11 = objc_opt_class();
    __int16 v12 = 2048;
    uint64_t v13 = v3;
    LODWORD(v9) = 22;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      long long v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v10, v9);
      free(v8);
      SSFileLog();
    }
  }
LABEL_15:
}

uint64_t sub_10010BFEC(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 32) + 16);
  if (v1)
  {
    uint64_t v2 = result;
    uint64_t v13 = 0;
    uint64_t v3 = +[NSPropertyListSerialization dataWithPropertyList:v1 format:200 options:0 error:&v13];
    if (v3)
    {
      id result = [(NSData *)v3 writeToFile:*(void *)(*(void *)(v2 + 32) + 24) options:1 error:&v13];
      if ((result & 1) == 0)
      {
        id v4 = +[SSLogConfig sharedDaemonConfig];
        if (!v4) {
          id v4 = +[SSLogConfig sharedConfig];
        }
        int v5 = [v4 shouldLog];
        int v6 = [v4 shouldLogToDisk] ? v5 | 2 : v5;
        id result = os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_DEFAULT);
        if (!result) {
          v6 &= 2u;
        }
        if (v6)
        {
LABEL_21:
          uint64_t v10 = objc_opt_class();
          int v14 = 138412546;
          uint64_t v15 = v10;
          __int16 v16 = 2112;
          uint64_t v17 = v13;
          LODWORD(v12) = 22;
          id result = _os_log_send_and_compose_impl();
          uint64_t v11 = (void *)result;
          if (result)
          {
            +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", result, 4, &v14, v12);
            free(v11);
            return SSFileLog();
          }
        }
      }
    }
    else
    {
      id v7 = +[SSLogConfig sharedDaemonConfig];
      if (!v7) {
        id v7 = +[SSLogConfig sharedConfig];
      }
      unsigned int v8 = [v7 shouldLog];
      if ([v7 shouldLogToDisk]) {
        int v9 = v8 | 2;
      }
      else {
        int v9 = v8;
      }
      id result = os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_DEFAULT);
      if (!result) {
        v9 &= 2u;
      }
      if (v9) {
        goto LABEL_21;
      }
    }
  }
  return result;
}

void sub_10010C450(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 16) = 0;
}

uint64_t sub_10010E8A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4)
  {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  id v7 = [v4 OSLogObject];
  if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    v6 &= 2u;
  }
  if (!v6) {
    goto LABEL_11;
  }
  id v8 = [*(id *)(a1 + 32) downloadIdentifier];
  [*(id *)(a1 + 40) error];
  int v19 = 134218242;
  id v20 = v8;
  __int16 v21 = 2114;
  id v22 = (id)objc_claimAutoreleasedReturnValue();
  LODWORD(v18) = 22;
  int v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    id v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v19, v18);
    free(v9);
    SSFileLog();
LABEL_11:
  }
  uint64_t v10 = [DownloadAssetEntity alloc];
  id v11 = [*(id *)(a1 + 32) mediaAssetIdentifier];
  uint64_t v12 = [v3 database];
  uint64_t v13 = [(DownloadAssetEntity *)v10 initWithPersistentID:v11 inDatabase:v12];

  [(DownloadAssetEntity *)v13 setValue:&__kCFBooleanFalse forProperty:@"is_downloaded"];
  int v14 = *(void **)(a1 + 48);
  uint64_t v15 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 32) downloadIdentifier]);
  __int16 v16 = [*(id *)(a1 + 40) error];
  [v14 _failDownloadWithIdentifier:v15 error:v16 transaction:v3];

  return 1;
}

void sub_10010EB14(uint64_t a1, void *a2)
{
  id v3 = a2;
  v16[0] = SSDownloadPhaseDownloading;
  v16[1] = SSDownloadPhaseProcessing;
  v16[2] = SSDownloadPhaseDataRestore;
  v16[3] = SSDownloadPhaseInstalling;
  id v4 = +[NSArray arrayWithObjects:v16 count:4];
  unsigned int v5 = (char *)[v4 indexOfObject:*(void *)(a1 + 32)];
  int v6 = (char *)[v4 count];
  id v7 = *(void **)(a1 + 40);
  if (v5 == v6 - 1)
  {
    id v8 = (void *)v7[4];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_10010ECE0;
    void v14[3] = &unk_1003A5648;
    int v9 = &v15;
    id v15 = *(id *)(a1 + 48);
    id v10 = [v8 modifyUsingTransactionBlock:v14];
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 48);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10010ED34;
    v12[3] = &unk_1003A6C88;
    int v9 = (id *)v13;
    v13[0] = v4;
    v13[1] = v5;
    [v7 _processDownloadWithTaskState:v11 databaseSession:v3 setupBlock:v12];
  }
}

uint64_t sub_10010ECE0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 downloadIdentifier];
  [v3 finishDownloadWithID:v4 finalPhase:SSDownloadPhaseFinished updatePipeline:0];

  return 1;
}

void sub_10010ED34(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40) + 1;
  id v4 = a2;
  id v5 = [v2 objectAtIndex:v3];
  [v4 setInitialDownloadPhase:v5];
}

void sub_10010EE6C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)];
  if (v2)
  {
    objc_msgSend(v2, "setFinishProgress:", (double)(uint64_t)objc_msgSend(*(id *)(a1 + 48), "currentValue")/ (double)(uint64_t)objc_msgSend(*(id *)(a1 + 48), "maxValue"));
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v2];
    [*(id *)(a1 + 32) _startProgressTimer];
  }
}

void sub_10010EFD0(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)];
  if (v2)
  {
    id v3 = v2;
    [v2 setTransferProgressWithBytesWritten:*(void *)(a1 + 48) totalBytesExpected:*(void *)(a1 + 56)];
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v3];
    [*(id *)(a1 + 32) _startProgressTimer];
    id v2 = v3;
  }
}

void sub_10010F328(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)];
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 64);
    if (v3 <= 0) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = v4 + v3;
    }
    id v6 = v2;
    [v2 setTransferProgressWithBytesWritten:v4 + *(void *)(a1 + 56) totalBytesExpected:v5];
    if (*(unsigned char *)(a1 + 80) && *(double *)(a1 + 72) > 2.22044605e-16) {
      objc_msgSend(v6, "setTransferProgress:");
    }
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v6];
    [*(id *)(a1 + 32) _startProgressTimer];
    id v2 = v6;
  }
}

void sub_10010F6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

double sub_10010F710(uint64_t a1, void *a2)
{
  memset(v9, 0, sizeof(v9));
  [a2 getValue:v9];
  long long v7 = *(_OWORD *)((char *)&v9[1] + 8);
  uint64_t v8 = *((void *)&v9[2] + 1);
  uint64_t v3 = (void (*)(long long *))ISWeakLinkedSymbolForString();
  if (v3)
  {
    long long v10 = v7;
    uint64_t v11 = v8;
    v3(&v10);
  }
  else
  {
    double v4 = 0.0;
  }
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  double result = v4 + *(double *)(v5 + 24);
  *(double *)(v5 + 24) = result;
  return result;
}

void sub_10010F7AC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)];
  if (v2)
  {
    id v3 = v2;
    [v2 setTransferProgress:*(double *)(a1 + 48)];
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v3];
    [*(id *)(a1 + 32) _startProgressTimer];
    id v2 = v3;
  }
}

void sub_10011001C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

double sub_100110068(uint64_t a1, void *a2)
{
  memset(v9, 0, sizeof(v9));
  [a2 getValue:v9];
  long long v7 = *(_OWORD *)((char *)&v9[1] + 8);
  uint64_t v8 = *((void *)&v9[2] + 1);
  id v3 = (void (*)(long long *))ISWeakLinkedSymbolForString();
  if (v3)
  {
    long long v10 = v7;
    uint64_t v11 = v8;
    v3(&v10);
  }
  else
  {
    double v4 = 0.0;
  }
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  double result = v4 + *(double *)(v5 + 24);
  *(double *)(v5 + 24) = result;
  return result;
}

void sub_100110104(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)];
  if (v2)
  {
    id v3 = v2;
    [v2 setTransferProgress:*(double *)(a1 + 48)];
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v3];
    [*(id *)(a1 + 32) _startProgressTimer];
    id v2 = v3;
  }
}

uint64_t sub_100110BAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)];
  uint64_t v5 = v4;
  if (!v4)
  {
    long long v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10)
    {
      long long v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v20 = [(DownloadAssetEntity *)v10 shouldLog];
    if ([(DownloadAssetEntity *)v10 shouldLogToDisk]) {
      int v21 = v20 | 2;
    }
    else {
      int v21 = v20;
    }
    id v22 = [(DownloadAssetEntity *)v10 OSLogObject];
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
      v21 &= 2u;
    }
    if (v21)
    {
      id v23 = [*(id *)(a1 + 40) taskIdentifier];
      CFStringRef v24 = *(void **)(a1 + 48);
      int v120 = 134218242;
      id v121 = v23;
      __int16 v122 = 2112;
      id v123 = v24;
      LODWORD(v112) = 22;
      CFIndex v25 = (void *)_os_log_send_and_compose_impl();

      if (!v25) {
        goto LABEL_113;
      }
      id v22 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v120, v112);
      free(v25);
      SSFileLog();
    }

    goto LABEL_113;
  }
  id v6 = [v4 downloadIdentifier];
  long long v7 = [DownloadAssetEntity alloc];
  id v8 = [v5 mediaAssetIdentifier];
  int v9 = [v3 database];
  long long v10 = [(DownloadAssetEntity *)v7 initWithPersistentID:v8 inDatabase:v9];

  [(DownloadAssetEntity *)v10 setValue:&off_1003C9300 forProperty:@"download_token"];
  [(DownloadAssetEntity *)v10 setValue:&off_1003C9300 forProperty:@"url_session_task_id"];
  uint64_t v11 = [DownloadEntity alloc];
  uint64_t v12 = [v3 database];
  uint64_t v13 = [(DownloadEntity *)v11 initWithPersistentID:v6 inDatabase:v12];

  id v14 = [*(id *)(a1 + 40) ITunesStoreCancelReason];
  id v15 = v14;
  if (v14 == (id)1) {
    goto LABEL_40;
  }
  if (v14 == (id)3)
  {
    CFUUIDBytes v26 = +[SSLogConfig sharedDaemonConfig];
    if (!v26)
    {
      CFUUIDBytes v26 = +[SSLogConfig sharedConfig];
    }
    unsigned int v27 = [v26 shouldLog];
    if ([v26 shouldLogToDisk]) {
      int v28 = v27 | 2;
    }
    else {
      int v28 = v27;
    }
    id v29 = [v26 OSLogObject];
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
      int v30 = v28;
    }
    else {
      int v30 = v28 & 2;
    }
    if (v30)
    {
      id v31 = [*(id *)(a1 + 40) taskIdentifier];
      int v120 = 134218240;
      id v121 = v6;
      __int16 v122 = 2048;
      id v123 = v31;
      LODWORD(v112) = 22;
      int v110 = &v120;
      uint64_t v32 = (void *)_os_log_send_and_compose_impl();

      if (v32)
      {
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v32, 4, &v120, v112);
        long long v33 = (int *)objc_claimAutoreleasedReturnValue();
        free(v32);
        int v110 = v33;
        SSFileLog();
      }
    }
    else
    {
    }
    [v3 retryDownloadWithIdentifier:v6];
    goto LABEL_109;
  }
  if (v14 != (id)2)
  {
    if (*(unsigned char *)(a1 + 56))
    {
      long long v34 = +[SSLogConfig sharedDaemonConfig];
      if (!v34)
      {
        long long v34 = +[SSLogConfig sharedConfig];
      }
      unsigned int v35 = [v34 shouldLog];
      if ([v34 shouldLogToDisk]) {
        int v36 = v35 | 2;
      }
      else {
        int v36 = v35;
      }
      long long v37 = [v34 OSLogObject];
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT)) {
        int v38 = v36;
      }
      else {
        int v38 = v36 & 2;
      }
      if (v38)
      {
        id v39 = [*(id *)(a1 + 40) taskIdentifier];
        int v120 = 134218240;
        id v121 = v39;
        __int16 v122 = 2048;
        id v123 = v6;
        LODWORD(v112) = 22;
        int v110 = &v120;
        long long v40 = (void *)_os_log_send_and_compose_impl();

        if (v40)
        {
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v40, 4, &v120, v112);
          id v41 = (int *)objc_claimAutoreleasedReturnValue();
          free(v40);
          int v110 = v41;
          SSFileLog();
        }
      }
      else
      {
      }
      [(DownloadAssetEntity *)v10 setValue:&__kCFBooleanTrue forProperty:@"is_downloaded"];
      [*(id *)(a1 + 32) _processDownloadWithTaskState:v5 databaseSession:v3 setupBlock:0];
      goto LABEL_109;
    }
LABEL_40:
    uint64_t v116 = v13;
    if (ISErrorIsEqual() && [*(id *)(a1 + 32) _isPodcast:v13])
    {
      unsigned int v42 = [(DownloadEntity *)v13 valueForProperty:@"policy_id"];
      id v43 = [v42 longLongValue];

      uint64_t v44 = [v3 policyManager];
      id v45 = [v44 downloadPolicyForID:v43];

      uint64_t v46 = objc_opt_new();
      [v46 addNetworkType:1000];
      uint64_t v117 = v45;
      [v45 setPolicyRule:v46];
      uint64_t v47 = +[SSLogConfig sharedDaemonConfig];
      if (!v47)
      {
        uint64_t v47 = +[SSLogConfig sharedConfig];
      }
      unsigned int v48 = [v47 shouldLog];
      if ([v47 shouldLogToDisk]) {
        int v49 = v48 | 2;
      }
      else {
        int v49 = v48;
      }
      int v50 = [v47 OSLogObject];
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT)) {
        int v51 = v49;
      }
      else {
        int v51 = v49 & 2;
      }
      if (v51)
      {
        id v52 = [*(id *)(a1 + 40) taskIdentifier];
        int v120 = 134218240;
        id v121 = v6;
        __int16 v122 = 2048;
        id v123 = v52;
        LODWORD(v112) = 22;
        int v110 = &v120;
        uint64_t v53 = (void *)_os_log_send_and_compose_impl();

        if (v53)
        {
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v53, 4, &v120, v112);
          uint64_t v54 = (int *)objc_claimAutoreleasedReturnValue();
          free(v53);
          int v110 = v54;
          SSFileLog();
        }
      }
      else
      {
      }
      [v3 retryDownloadWithIdentifier:v6];

      uint64_t v13 = v116;
      goto LABEL_109;
    }
    id v55 = [*(id *)(a1 + 40) ITunesStoreCancelError];
    __int16 v56 = v55;
    if (!v55) {
      __int16 v56 = *(void **)(a1 + 48);
    }
    id v118 = v56;

    uint64_t v57 = +[SSLogConfig sharedDaemonConfig];
    if (!v57)
    {
      uint64_t v57 = +[SSLogConfig sharedConfig];
    }
    unsigned int v58 = [v57 shouldLog];
    if ([v57 shouldLogToDisk]) {
      v58 |= 2u;
    }
    id v59 = [v57 OSLogObject];
    if (!os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT)) {
      v58 &= 2u;
    }
    if (v58)
    {
      id v60 = [*(id *)(a1 + 40) taskIdentifier];
      int v120 = 134218498;
      id v121 = v60;
      __int16 v122 = 2048;
      id v123 = v6;
      __int16 v124 = 2112;
      id v125 = v118;
      LODWORD(v112) = 32;
      int v110 = &v120;
      long long v61 = (void *)_os_log_send_and_compose_impl();

      if (!v61)
      {
LABEL_65:

        uint64_t v17 = v118;
        if (sub_10012A4D4(v118))
        {
          long long v62 = [(DownloadAssetEntity *)v10 valueForProperty:@"is_local_cache_server"];
          unsigned int v63 = [v62 BOOLValue];

          uint64_t v17 = v118;
          if (v63)
          {
            long long v64 = +[SSLogConfig sharedDaemonConfig];
            if (!v64)
            {
              long long v64 = +[SSLogConfig sharedConfig];
            }
            unsigned int v65 = objc_msgSend(v64, "shouldLog", v110);
            if ([v64 shouldLogToDisk]) {
              int v66 = v65 | 2;
            }
            else {
              int v66 = v65;
            }
            long long v67 = [v64 OSLogObject];
            if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT)) {
              int v68 = v66;
            }
            else {
              int v68 = v66 & 2;
            }
            if (v68)
            {
              id v69 = [*(id *)(a1 + 40) taskIdentifier];
              int v120 = 134218240;
              id v121 = v69;
              __int16 v122 = 2048;
              id v123 = v6;
              LODWORD(v112) = 22;
              v111 = &v120;
              v70 = (void *)_os_log_send_and_compose_impl();

              if (!v70)
              {
LABEL_79:

                uint64_t v71 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"download_id" equalToLongLong:v6];
                uint64_t v72 = SSSQLEntityPropertyPersistentID;
                __int16 v73 = +[NSNumber numberWithLongLong:[(DownloadAssetEntity *)v10 persistentID]];
                uint64_t v74 = +[SSSQLiteComparisonPredicate predicateWithProperty:v72 value:v73 comparisonType:2];

                long long v75 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"asset_type" equalToValue:SSDownloadAssetTypeMedia];
                v113 = (void *)v74;
                v114 = (void *)v71;
                v119[0] = v71;
                v119[1] = v74;
                v119[2] = v75;
                unsigned int v76 = +[NSArray arrayWithObjects:v119 count:3];
                uint64_t v77 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v76];

                int v78 = [v3 database];
                v79 = +[DownloadAssetEntity anyInDatabase:v78 predicate:v77];

                if (v79)
                {
                  CFStringRef v80 = @"blocked_reason";
                  uint64_t v81 = &off_1003C9318;
                  id v82 = v10;
                }
                else
                {
                  uint64_t v81 = (_UNKNOWN **)&__kCFBooleanFalse;
                  id v82 = v10;
                  CFStringRef v80 = @"is_local_cache_server";
                }
                -[DownloadAssetEntity setValue:forProperty:](v82, "setValue:forProperty:", v81, v80, v111);
                uint64_t v13 = v116;
                [v3 retryDownloadWithIdentifier:v6];

                goto LABEL_107;
              }
              long long v67 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v70, 4, &v120, v112);
              free(v70);
              v111 = (int *)v67;
              SSFileLog();
            }

            goto LABEL_79;
          }
        }
        uint64_t v13 = v116;
        if (sub_10012A64C(v17))
        {
          __int16 v83 = +[SSLogConfig sharedDaemonConfig];
          if (!v83)
          {
            __int16 v83 = +[SSLogConfig sharedConfig];
          }
          unsigned int v84 = objc_msgSend(v83, "shouldLog", v110);
          if ([v83 shouldLogToDisk]) {
            int v85 = v84 | 2;
          }
          else {
            int v85 = v84;
          }
          CFStringRef v86 = [v83 OSLogObject];
          if (os_log_type_enabled(v86, OS_LOG_TYPE_DEFAULT)) {
            int v87 = v85;
          }
          else {
            int v87 = v85 & 2;
          }
          if (v87)
          {
            int v120 = 134218242;
            id v121 = v6;
            __int16 v122 = 2112;
            id v123 = v118;
            LODWORD(v112) = 22;
            int v110 = &v120;
            uint64_t v88 = (void *)_os_log_send_and_compose_impl();

            if (!v88)
            {
LABEL_102:

              [(DownloadAssetEntity *)v10 setValue:&__kCFBooleanTrue forProperty:@"avfoundation_blocked"];
              [v3 retryDownloadWithIdentifier:v6];
LABEL_107:
              uint64_t v17 = v118;
              goto LABEL_108;
            }
            CFStringRef v86 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v88, 4, &v120, v112);
            free(v88);
            int v110 = (int *)v86;
            SSFileLog();
          }

          goto LABEL_102;
        }
        if (+[ExpiredDownloadRecoveryOperation canAttemptRecoveryWithError:v17])
        {
          [*(id *)(a1 + 32) _attemptRecoveryForDownloadWithTaskState:v5 databaseSession:v3];
          goto LABEL_108;
        }
        if (ISErrorIsEqual())
        {
          [*(id *)(a1 + 32) _scheduleReconnect];
          goto LABEL_108;
        }
        v94 = [(DownloadAssetEntity *)v10 valueForProperty:@"is_hls"];
        v115 = v94;
        if (objc_opt_respondsToSelector() & 1) != 0 && ([v94 BOOLValue])
        {
          int v95 = 1;
        }
        else
        {
          if (!sub_10012A6B0(*(void **)(a1 + 48)))
          {
LABEL_125:
            [(DownloadAssetEntity *)v10 setValue:&__kCFBooleanFalse, @"is_downloaded", v110 forProperty];
            v104 = *(void **)(a1 + 32);
            BOOL v105 = +[NSNumber numberWithLongLong:v6];
            [v104 _failDownloadWithIdentifier:v105 error:v118 transaction:v3];

            [*(id *)(a1 + 32) _processDownloadFailureWithTaskState:v5 cancelReason:v15];
            v106 = *(void **)(a1 + 32);
            BOOL v107 = [v5 kind];
            v108 = [(DownloadEntity *)v116 valueForProperty:@"store_item_id"];
            unsigned int v109 = [(DownloadEntity *)v116 valueForProperty:@"rental_id"];
            [v106 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v107 adamID:v108 rentalID:v109 error:v118 cancelReason:1];

            uint64_t v13 = v116;
            uint64_t v17 = v118;

            goto LABEL_108;
          }
          int v95 = 0;
        }
        unsigned int v96 = [(DownloadAssetEntity *)v10 valueForProperty:@"local_path", v110];
        if (v96) {
          goto LABEL_124;
        }
        if (v95)
        {
          v97 = [v5 kind];
          v98 = sub_10018A454(v97);

          uint64_t v99 = +[NSString stringWithFormat:@"%lld", [(DownloadAssetEntity *)v10 persistentID]];
          id v100 = [v99 stringByAppendingPathExtension:SSDownloadMetadataKeyFileExtensionMoviePackage];

          unsigned int v96 = [v98 stringByAppendingPathComponent:v100];
        }
        else
        {
          id v101 = [v5 downloadIdentifier];
          id v102 = [(DownloadAssetEntity *)v10 persistentID];
          v98 = [v5 kind];
          unsigned int v96 = +[ScratchManager directoryPathForDownloadID:v101 assetID:v102 kind:v98 createIfNeeded:1];
        }

        if (v96)
        {
LABEL_124:
          id v103 = objc_alloc_init((Class)NSFileManager);
          [v103 removeItemAtPath:v96 error:0];
        }
        goto LABEL_125;
      }
      id v59 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v61, 4, &v120, v112);
      free(v61);
      int v110 = (int *)v59;
      SSFileLog();
    }

    goto LABEL_65;
  }
  [*(id *)(a1 + 32) _processDownloadFailureWithTaskState:v5 cancelReason:2];
  __int16 v16 = *(void **)(a1 + 32);
  uint64_t v17 = [v5 kind];
  uint64_t v18 = [(DownloadEntity *)v13 valueForProperty:@"store_item_id"];
  int v19 = [(DownloadEntity *)v13 valueForProperty:@"rental_id"];
  [v16 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v17 adamID:v18 rentalID:v19 error:0 cancelReason:2];

LABEL_108:
LABEL_109:
  objc_msgSend(*(id *)(a1 + 32), "_logDownloadEvent:forTaskWithState:session:", SSEventNameDownloadStop, v5, v3, v110);
  uint64_t v89 = [(DownloadAssetEntity *)v10 valueForProperty:@"is_downloaded"];
  unsigned int v90 = [v89 BOOLValue];

  v91 = [*(id *)(*(void *)(a1 + 32) + 104) objectForKey:*(void *)(a1 + 40)];
  uint64_t v92 = v91;
  if (v90 && v91) {
    [v91 persistKeys];
  }
  [*(id *)(*(void *)(a1 + 32) + 104) removeObjectForKey:*(void *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 112) removeObjectForKey:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _reloadKeepAliveAssertion];

LABEL_113:
  return 1;
}

uint64_t sub_100111D5C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  double v4 = *(void **)(*(void *)(a1 + 32) + 112);
  id v5 = a2;
  id v6 = [v4 objectForKey:v3];
  long long v7 = [*(id *)(a1 + 32) _downloadSessionPropertiesWithPhase:0 taskState:v6 databaseSession:v5];

  [v7 setAuthenticationChallenge:*(void *)(a1 + 48)];
  if (v7)
  {
    id v8 = [[DownloadHandlerAuthenticationOperation alloc] initWithSessionProperties:v7];
    uint64_t v13 = _NSConcreteStackBlock;
    uint64_t v14 = 3221225472;
    id v15 = sub_100111EC8;
    __int16 v16 = &unk_1003A6D28;
    id v9 = *(id *)(a1 + 56);
    uint64_t v10 = *(void *)(a1 + 32);
    id v20 = v9;
    uint64_t v17 = v10;
    id v18 = *(id *)(a1 + 48);
    id v19 = v7;
    [(DownloadHandlerAuthenticationOperation *)v8 setOutputBlock:&v13];
    uint64_t v11 = objc_msgSend(*(id *)(a1 + 32), "_authenticationChallengeQueue", v13, v14, v15, v16, v17);
    [v11 addOperation:v8];
  }
  else
  {
    [*(id *)(a1 + 32) _performDefaultHandlingForAuthenticationChallenge:*(void *)(a1 + 48) withSessionProperties:0 completionHandler:*(void *)(a1 + 56)];
  }

  return 1;
}

void sub_100111EC8(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  switch(a2)
  {
    case 1:
    case 6:
    case 8:
    case 9:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
      goto LABEL_7;
    case 2:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
      goto LABEL_7;
    case 3:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
      goto LABEL_7;
    case 4:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
      goto LABEL_7;
    case 5:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
LABEL_7:
      v5();
      break;
    default:
      [*(id *)(a1 + 32) _performDefaultHandlingForAuthenticationChallenge:*(void *)(a1 + 40) withSessionProperties:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
      break;
  }
}

uint64_t sub_1001120A0(id *a1, void *a2)
{
  id v3 = a2;
  double v4 = [*((id *)a1[4] + 14) objectForKey:a1[5]];
  if (v4)
  {
    if (sub_10012A4D4(a1[6]))
    {
      id v5 = [DownloadAssetEntity alloc];
      id v6 = [v4 mediaAssetIdentifier];
      long long v7 = [v3 database];
      id v8 = [(DownloadAssetEntity *)v5 initWithPersistentID:v6 inDatabase:v7];

      id v9 = [(DownloadAssetEntity *)v8 valueForProperty:@"is_local_cache_server"];
      LODWORD(v7) = [v9 BOOLValue];

      id v10 = [v4 downloadIdentifier];
      if (v7)
      {
        uint64_t v11 = +[SSLogConfig sharedDaemonConfig];
        if (!v11)
        {
          uint64_t v11 = +[SSLogConfig sharedConfig];
        }
        unsigned int v12 = [v11 shouldLog];
        if ([v11 shouldLogToDisk]) {
          int v13 = v12 | 2;
        }
        else {
          int v13 = v12;
        }
        uint64_t v14 = [v11 OSLogObject];
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          int v15 = v13;
        }
        else {
          int v15 = v13 & 2;
        }
        if (v15)
        {
          id v16 = a1[6];
          int v28 = 134218242;
          id v29 = v10;
          __int16 v30 = 2112;
          id v31 = v16;
          LODWORD(v27) = 22;
          uint64_t v17 = (void *)_os_log_send_and_compose_impl();

          if (!v17)
          {
LABEL_16:

            [a1[5] cancelWithITunesStoreReason:1 error:a1[6]];
            goto LABEL_30;
          }
          uint64_t v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v28, v27);
          free(v17);
          SSFileLog();
        }

        goto LABEL_16;
      }
    }
    else
    {
      id v10 = [v4 downloadIdentifier];
    }
    id v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18)
    {
      id v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = [v18 shouldLog];
    if ([v18 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    int v21 = [v18 OSLogObject];
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      v20 &= 2u;
    }
    if (v20)
    {
      id v22 = [a1[5] taskIdentifier];
      id v23 = a1[6];
      int v28 = 134218498;
      id v29 = v22;
      __int16 v30 = 2048;
      id v31 = v10;
      __int16 v32 = 2112;
      id v33 = v23;
      LODWORD(v27) = 32;
      CFStringRef v24 = (void *)_os_log_send_and_compose_impl();

      if (!v24)
      {
LABEL_29:

        CFIndex v25 = [v3 policyManager];
        [v25 setOverrideDownloadSizeLimit:SSDownloadSizeLimitDisabled forDownloadIdentifier:v10];

        [a1[4] _setDownloadPhase:SSDownloadPhaseWaiting forDownloadIdentifier:v10 databaseTransaction:v3];
        [a1[4] _logDownloadEvent:SSEventNameDownloadStop forTaskWithState:v4 session:v3];
        goto LABEL_30;
      }
      int v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v28, v27);
      free(v24);
      SSFileLog();
    }

    goto LABEL_29;
  }
LABEL_30:

  return 1;
}

uint64_t sub_1001129BC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  double v4 = *(void **)(*(void *)(a1 + 32) + 112);
  id v5 = a2;
  id v6 = [v4 objectForKey:v3];
  id v7 = [v6 downloadIdentifier];
  id v8 = [v5 policyManager];
  [v8 removeOverrideDownloadSizeLimitForDownloadIdentifier:v7];

  [*(id *)(a1 + 32) _setDownloadPhase:SSDownloadPhaseDownloading forDownloadIdentifier:v7 databaseTransaction:v5];
  [*(id *)(a1 + 32) _logDownloadEvent:SSEventNameDownloadStart forTaskWithState:v6 session:v5];

  return 1;
}

void sub_100112B3C(uint64_t a1)
{
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 112);
  id v3 = [v2 countByEnumeratingWithState:&v24 objects:v34 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v25;
    uint64_t v23 = *(void *)v25;
    do
    {
      for (size_t i = 0; i != v4; size_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        id v8 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 112), "objectForKey:", v7, v21);
        id v9 = [v8 downloadIdentifier];
        if (v9 == [*(id *)(a1 + 40) downloadIdentifier])
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v10 = v2;
            id v11 = v7;
            unsigned int v12 = +[SSLogConfig sharedDaemonConfig];
            if (!v12)
            {
              unsigned int v12 = +[SSLogConfig sharedConfig];
            }
            unsigned int v13 = [v12 shouldLog];
            if ([v12 shouldLogToDisk]) {
              int v14 = v13 | 2;
            }
            else {
              int v14 = v13;
            }
            int v15 = [v12 OSLogObject];
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
              int v16 = v14;
            }
            else {
              int v16 = v14 & 2;
            }
            if (v16)
            {
              id v17 = [v11 taskIdentifier];
              id v18 = [v8 downloadIdentifier];
              uint64_t v19 = *(void *)(a1 + 48);
              int v28 = 134218498;
              id v29 = v17;
              __int16 v30 = 2048;
              id v31 = v18;
              __int16 v32 = 2112;
              uint64_t v33 = v19;
              LODWORD(v22) = 32;
              int v21 = &v28;
              int v20 = (void *)_os_log_send_and_compose_impl();

              id v2 = v10;
              uint64_t v5 = v23;
              if (v20)
              {
                int v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v20, 4, &v28, v22);
                free(v20);
                int v21 = (int *)v15;
                SSFileLog();
                goto LABEL_20;
              }
            }
            else
            {
              id v2 = v10;
              uint64_t v5 = v23;
LABEL_20:
            }
            [v11 cancelWithITunesStoreReason:1 error:*(void *)(a1 + 48)];
          }
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v24 objects:v34 count:16];
    }
    while (v4);
  }
}

void sub_1001131FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011321C(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _finishRecoveryWithOperation:v6 response:v5];
}

uint64_t sub_1001133B4(uint64_t a1, void *a2)
{
  id v54 = a2;
  id v52 = [v54 database];
  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  uint64_t v42 = a1;
  id v39 = *(id *)(*(void *)(a1 + 32) + 40);
  id v53 = [v39 countByEnumeratingWithState:&v57 objects:v65 count:16];
  if (v53)
  {
    uint64_t v51 = *(void *)v58;
    uint64_t v50 = SSDownloadExternalPropertyBytesDownloaded;
    uint64_t v49 = SSDownloadExternalPropertyBytesTotal;
    uint64_t v48 = SSDownloadExternalPropertyEstimatedTimeRemaining;
    uint64_t v47 = SSDownloadExternalPropertyPercentComplete;
    uint64_t v46 = @"bundle_id";
    id v45 = @"kind";
    uint64_t v44 = @"transaction_id";
    uint64_t v41 = SSDownloadKindInAppContent;
    *(void *)&long long v3 = 138413058;
    long long v40 = v3;
    do
    {
      for (size_t i = 0; i != v53; size_t i = (char *)i + 1)
      {
        if (*(void *)v58 != v51) {
          objc_enumerationMutation(v39);
        }
        id v5 = *(void **)(*((void *)&v57 + 1) + 8 * i);
        id v6 = [v5 downloadIdentifier];
        id v7 = [v5 overallProgress];
        [v7 snapshot];
        id v8 = [v7 currentValue];
        id v56 = v7;
        id v9 = [v7 maxValue];
        id v10 = +[SSLogConfig sharedDaemonConfig];
        if (!v10)
        {
          id v10 = +[SSLogConfig sharedConfig];
        }
        double v11 = (double)(uint64_t)v8 / (double)(uint64_t)v9;
        unsigned int v12 = [v10 shouldLog];
        if ([v10 shouldLogToDisk]) {
          int v13 = v12 | 2;
        }
        else {
          int v13 = v12;
        }
        int v14 = [v10 OSLogObject];
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
          int v15 = v13;
        }
        else {
          int v15 = v13 & 2;
        }
        if (v15)
        {
          int v16 = objc_opt_class();
          id v17 = v16;
          [v56 estimatedTimeRemaining];
          *(_DWORD *)long long v61 = v40;
          *(void *)&v61[4] = v16;
          *(_WORD *)&v61[12] = 2048;
          *(void *)&v61[14] = v6;
          *(_WORD *)&v61[22] = 2048;
          double v62 = v11;
          __int16 v63 = 2048;
          uint64_t v64 = v18;
          int v37 = 42;
          int v36 = v61;
          uint64_t v19 = (void *)_os_log_send_and_compose_impl();

          if (!v19) {
            goto LABEL_18;
          }
          int v14 = +[NSString stringWithCString:v19 encoding:4];
          free(v19);
          int v36 = v14;
          SSFileLog();
        }

LABEL_18:
        id v20 = objc_alloc_init((Class)NSMutableDictionary);
        int v21 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v5 transferBytesWritten]);
        [v20 setObject:v21 forKey:v50];

        uint64_t v22 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v5 transferBytesExpected]);
        [v20 setObject:v22 forKey:v49];

        [v56 estimatedTimeRemaining];
        uint64_t v23 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
        [v20 setObject:v23 forKey:v48];

        long long v24 = +[NSNumber numberWithDouble:v11];
        [v20 setObject:v24 forKey:v47];

        [v54 setExternalPropertyValues:v20 forDownloadWithID:v6];
        long long v25 = [DownloadEntity alloc];
        long long v26 = [(DownloadEntity *)v25 initWithPersistentID:v6 inDatabase:v52];
        *(void *)long long v61 = v46;
        *(void *)&v61[8] = v45;
        *(void *)&v61[16] = v44;
        *(&v38 - 4) = 0;
        *(&v38 - 3) = 0;
        int v36 = 0;
        [(DownloadEntity *)v26 getValues:&v38 - 4 forProperties:v61 count:3];
        if (*(&v38 - 3))
        {
          long long v27 = [v54 externalValuesForDownloadID:v6];
          if ([*(&v38 - 3) isEqualToString:v41])
          {
            id v43 = &v38;
            int v28 = +[MicroPaymentQueue paymentQueue];
            [(ApplicationHandle *)v28 notifyClientsOfExternalPropertyChanges:v27 ofDownloadID:v6];
            goto LABEL_23;
          }
          if (SSDownloadKindIsSoftwareKind())
          {
            id v43 = &v38;
            id v29 = [ApplicationHandle alloc];
            int v28 = [(ApplicationHandle *)v29 initWithTransactionIdentifier:[v36 longLongValue] downloadIdentifier:v6 bundleIdentifier:*(&v38 - 4)];
            __int16 v30 = objc_alloc_init(ApplicationDownloadProgress);
            [(ApplicationDownloadProgress *)v30 setApplicationHandle:v28];
            id v38 = v6;
            id v31 = v56;
            -[ApplicationDownloadProgress setCompletedUnitCount:](v30, "setCompletedUnitCount:", [v56 currentValue]);
            -[ApplicationDownloadProgress setTotalUnitCount:](v30, "setTotalUnitCount:", [v31 maxValue]);
            __int16 v32 = +[ApplicationWorkspace defaultWorkspace];
            [v32 updatePlaceholderWithApplicationProgress:v30];

            id v6 = v38;
LABEL_23:
          }
          uint64_t v33 = +[DownloadController controller];
          [v33 notifyClientsOfExternalPropertyChanges:v27 forDownloadID:v6 downloadKind:*(&v38 - 3)];
        }
        for (uint64_t j = 16; j != -8; j -= 8)
      }
      id v53 = [v39 countByEnumeratingWithState:&v57 objects:v65 count:16];
    }
    while (v53);
  }

  return 1;
}

uint64_t sub_100113ACC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v24[0] = @"is_restore";
  v24[1] = @"download_state.restore_state";
  id v4 = [*(id *)(a1 + 32) downloadIdentifier];
  id v5 = [DownloadEntity alloc];
  id v6 = [v3 database];
  id v7 = [(DownloadEntity *)v5 initWithPersistentID:v4 inDatabase:v6];

  id v20 = 0;
  id v21 = 0;
  [(DownloadEntity *)v7 getValues:&v20 forProperties:v24 count:2];
  if (![v20 BOOLValue] || objc_msgSend(v21, "integerValue") == (id)1)
  {
    id v8 = +[SSLogConfig sharedDaemonConfig];
    if (!v8)
    {
      id v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v9 = [v8 shouldLog];
    if ([v8 shouldLogToDisk]) {
      int v10 = v9 | 2;
    }
    else {
      int v10 = v9;
    }
    double v11 = [v8 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
      int v12 = v10;
    }
    else {
      int v12 = v10 & 2;
    }
    if (v12)
    {
      int v22 = 134217984;
      id v23 = v4;
      LODWORD(v19) = 12;
      int v13 = (void *)_os_log_send_and_compose_impl();

      if (!v13)
      {
LABEL_15:

        int v14 = *(void **)(a1 + 40);
        int v15 = +[NSNumber numberWithLongLong:v4];
        int v16 = [*(id *)(a1 + 48) error];
        [v14 _failDownloadWithIdentifier:v15 error:v16 transaction:v3];

        goto LABEL_16;
      }
      double v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v22, v19);
      free(v13);
      SSFileLog();
    }

    goto LABEL_15;
  }
LABEL_16:

  for (uint64_t i = 1; i != -1; --i)
  return 1;
}

uint64_t sub_1001142A0(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [*((id *)a1[4] + 14) objectForKey:a1[5]];
  id v5 = [a1[6] downloadIdentifier];
  switch((unint64_t)[a1[6] result])
  {
    case 0uLL:
      id v6 = [a1[6] error];
      id v7 = +[SSLogConfig sharedDaemonConfig];
      if (!v7)
      {
        id v7 = +[SSLogConfig sharedConfig];
      }
      unsigned int v8 = [v7 shouldLog];
      if ([v7 shouldLogToDisk]) {
        int v9 = v8 | 2;
      }
      else {
        int v9 = v8;
      }
      int v10 = [v7 OSLogObject];
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        int v11 = v9;
      }
      else {
        int v11 = v9 & 2;
      }
      if (!v11) {
        goto LABEL_13;
      }
      int v85 = 134218242;
      id v86 = v5;
      __int16 v87 = 2114;
      id v88 = v6;
      LODWORD(v83) = 22;
      int v12 = (void *)_os_log_send_and_compose_impl();

      if (v12)
      {
        int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v85, v83);
        free(v12);
        SSFileLog();
LABEL_13:
      }
      uint64_t v82 = objc_opt_class();
      SSDebugLog();
      if (sub_10012A7A4())
      {
        int v13 = [DownloadAssetEntity alloc];
        id v14 = objc_msgSend(a1[6], "mediaAssetIdentifier", v82, v5, v6);
        int v15 = [v3 database];
        int v16 = [(DownloadAssetEntity *)v13 initWithPersistentID:v14 inDatabase:v15];

        [(DownloadAssetEntity *)v16 setValue:&__kCFBooleanFalse forProperty:@"is_downloaded"];
      }
      id v17 = a1[4];
      uint64_t v18 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", v5, v82);
      uint64_t v19 = [a1[6] error];
      [v17 _failDownloadWithIdentifier:v18 error:v19 transaction:v3];

      id v20 = a1[4];
      id v21 = [v4 kind];
      int v22 = [a1[5] storeItemIdentifier];
      id v23 = [a1[5] rentalIdentifier];
      long long v24 = [a1[6] error];
      [v20 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v21 adamID:v22 rentalID:v23 error:v24 cancelReason:1];

      goto LABEL_58;
    case 1uLL:
      long long v25 = [DownloadAssetEntity alloc];
      id v26 = [a1[6] mediaAssetIdentifier];
      long long v27 = [v3 database];
      int v28 = [(DownloadAssetEntity *)v25 initWithPersistentID:v26 inDatabase:v27];

      id v29 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [a1[6] assetBlockedReason]);
      [(DownloadAssetEntity *)v28 setValue:v29 forProperty:@"blocked_reason"];

      [(DownloadAssetEntity *)v28 setValue:&__kCFBooleanFalse forProperty:@"is_downloaded"];
      objc_msgSend(v3, "retryDownloadWithIdentifier:", objc_msgSend(a1[6], "downloadIdentifier"));
      goto LABEL_100;
    case 2uLL:
      id v6 = +[SSLogConfig sharedDaemonConfig];
      if (!v6)
      {
        id v6 = +[SSLogConfig sharedConfig];
      }
      unsigned int v30 = [v6 shouldLog];
      if ([v6 shouldLogToDisk]) {
        int v31 = v30 | 2;
      }
      else {
        int v31 = v30;
      }
      id v21 = [v6 OSLogObject];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
        int v32 = v31;
      }
      else {
        int v32 = v31 & 2;
      }
      if (!v32) {
        goto LABEL_59;
      }
      int v85 = 134217984;
      id v86 = v5;
      LODWORD(v83) = 12;
      uint64_t v81 = &v85;
      uint64_t v33 = (void *)_os_log_send_and_compose_impl();

      if (!v33) {
        goto LABEL_72;
      }
      id v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v33, 4, &v85, v83);
      free(v33);
      uint64_t v81 = (int *)v21;
      SSFileLog();
LABEL_59:

LABEL_72:
      break;
    case 3uLL:
      long long v34 = +[SSLogConfig sharedDaemonConfig];
      if (!v34)
      {
        long long v34 = +[SSLogConfig sharedConfig];
      }
      unsigned int v35 = [v34 shouldLog];
      if ([v34 shouldLogToDisk]) {
        int v36 = v35 | 2;
      }
      else {
        int v36 = v35;
      }
      int v37 = [v34 OSLogObject];
      if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        v36 &= 2u;
      }
      if (!v36) {
        goto LABEL_39;
      }
      [a1[6] error];
      int v85 = 134218242;
      id v86 = v5;
      __int16 v87 = 2114;
      id v88 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v83) = 22;
      id v38 = (void *)_os_log_send_and_compose_impl();

      if (v38)
      {
        int v37 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v38, 4, &v85, v83);
        free(v38);
        SSFileLog();
LABEL_39:
      }
      uint64_t v39 = objc_opt_class();
      [a1[6] error];
      v84 = id v83 = v5;
      uint64_t v81 = (int *)v39;
      SSDebugLog();

      goto LABEL_85;
    case 4uLL:
      long long v40 = +[SSLogConfig sharedDaemonConfig];
      if (!v40)
      {
        long long v40 = +[SSLogConfig sharedConfig];
      }
      unsigned int v41 = [v40 shouldLog];
      if ([v40 shouldLogToDisk]) {
        int v42 = v41 | 2;
      }
      else {
        int v42 = v41;
      }
      id v43 = [v40 OSLogObject];
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT)) {
        int v44 = v42;
      }
      else {
        int v44 = v42 & 2;
      }
      if (!v44) {
        goto LABEL_52;
      }
      int v85 = 134217984;
      id v86 = v5;
      LODWORD(v83) = 12;
      uint64_t v81 = &v85;
      id v45 = (void *)_os_log_send_and_compose_impl();

      if (v45)
      {
        id v43 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v45, 4, &v85, v83);
        free(v45);
        uint64_t v81 = (int *)v43;
        SSFileLog();
LABEL_52:
      }
      id v6 = [a1[6] mediaAssetInstallPath];
      if (v6)
      {
        uint64_t v46 = [DownloadAssetEntity alloc];
        id v47 = [a1[6] mediaAssetIdentifier];
        uint64_t v48 = [v3 database];
        uint64_t v49 = [(DownloadAssetEntity *)v46 initWithPersistentID:v47 inDatabase:v48];

        uint64_t v50 = +[NSURL fileURLWithPath:v6];
        uint64_t v51 = [v50 absoluteString];
        [(DownloadAssetEntity *)v49 setValue:v51 forProperty:@"destination_url"];
      }
      if (v4)
      {
        [v4 setFinishProgress:1.0];
        [*((id *)a1[4] + 5) addObject:v4];
        [a1[4] _startProgressTimer];
      }
      objc_msgSend(v3, "finishDownloadWithID:finalPhase:updatePipeline:", v5, SSDownloadPhaseFinished, 0, v81);
      id v52 = a1[4];
      id v21 = [v4 kind];
      int v22 = [a1[5] storeItemIdentifier];
      id v23 = [a1[5] rentalIdentifier];
      [v52 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v21 adamID:v22 rentalID:v23 error:0 cancelReason:0];
LABEL_58:

      goto LABEL_59;
    case 5uLL:
      id v6 = [a1[6] downloadHandlerSession];
      [*((id *)a1[4] + 6) addObject:v6];
      [*((id *)a1[4] + 14) setObject:v4 forKey:v6];
      id v53 = a1[4];
      id v54 = [v6 sessionProperties];
      id v55 = [v54 downloadPhase];
      [v53 _setDownloadPhase:v55 forDownloadIdentifier:v5 databaseTransaction:v3];

      id v56 = +[SSLogConfig sharedDaemonConfig];
      if (!v56)
      {
        id v56 = +[SSLogConfig sharedConfig];
      }
      unsigned int v57 = [v56 shouldLog];
      if ([v56 shouldLogToDisk]) {
        int v58 = v57 | 2;
      }
      else {
        int v58 = v57;
      }
      long long v59 = [v56 OSLogObject];
      if (!os_log_type_enabled(v59, OS_LOG_TYPE_INFO)) {
        v58 &= 2u;
      }
      if (!v58) {
        goto LABEL_70;
      }
      long long v60 = objc_opt_class();
      id v61 = v60;
      int v85 = 138412802;
      id v86 = v60;
      __int16 v87 = 2048;
      id v88 = [v6 sessionID];
      __int16 v89 = 2048;
      id v90 = v5;
      LODWORD(v83) = 32;
      uint64_t v81 = &v85;
      double v62 = (void *)_os_log_send_and_compose_impl();

      if (v62)
      {
        long long v59 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v62, 4, &v85, v83);
        free(v62);
        uint64_t v81 = (int *)v59;
        SSFileLog();
LABEL_70:
      }
      __int16 v63 = +[DownloadHandlerManager handlerManager];
      objc_msgSend(v63, "beginSessionWithID:", objc_msgSend(v6, "sessionID"));

      goto LABEL_72;
    case 6uLL:
      uint64_t v64 = +[SSLogConfig sharedDaemonConfig];
      if (!v64)
      {
        uint64_t v64 = +[SSLogConfig sharedConfig];
      }
      unsigned int v65 = [v64 shouldLog];
      if ([v64 shouldLogToDisk]) {
        int v66 = v65 | 2;
      }
      else {
        int v66 = v65;
      }
      long long v67 = [v64 OSLogObject];
      if (!os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT)) {
        v66 &= 2u;
      }
      if (!v66) {
        goto LABEL_83;
      }
      int v68 = [a1[6] error];
      int v85 = 134218242;
      id v86 = v5;
      __int16 v87 = 2112;
      id v88 = v68;
      LODWORD(v83) = 22;
      uint64_t v81 = &v85;
      id v69 = (void *)_os_log_send_and_compose_impl();

      if (v69)
      {
        long long v67 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v69, 4, &v85, v83);
        free(v69);
        uint64_t v81 = (int *)v67;
        SSFileLog();
LABEL_83:
      }
LABEL_85:
      objc_msgSend(v3, "finishDownloadWithID:finalPhase:updatePipeline:", v5, SSDownloadPhaseCanceled, 0, v81, v83, v84);
      break;
    case 7uLL:
      v70 = +[SSLogConfig sharedDaemonConfig];
      if (!v70)
      {
        v70 = +[SSLogConfig sharedConfig];
      }
      unsigned int v71 = [v70 shouldLog];
      if ([v70 shouldLogToDisk]) {
        int v72 = v71 | 2;
      }
      else {
        int v72 = v71;
      }
      __int16 v73 = [v70 OSLogObject];
      if (!os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT)) {
        v72 &= 2u;
      }
      if (!v72) {
        goto LABEL_96;
      }
      uint64_t v74 = [v4 bundleIdentifier];
      int v85 = 134218242;
      id v86 = v5;
      __int16 v87 = 2112;
      id v88 = v74;
      LODWORD(v83) = 22;
      uint64_t v81 = &v85;
      long long v75 = (void *)_os_log_send_and_compose_impl();

      if (v75)
      {
        __int16 v73 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v75, 4, &v85, v83);
        free(v75);
        uint64_t v81 = (int *)v73;
        SSFileLog();
LABEL_96:
      }
      if (v4)
      {
        [v4 setFinishProgress:1.0];
        [*((id *)a1[4] + 5) addObject:v4];
        [a1[4] _startProgressTimer];
      }
      objc_msgSend(v3, "finishDownloadWithID:finalPhase:updatePipeline:", v5, SSDownloadPhaseCanceled, 0, v81);
      unsigned int v76 = [ApplicationHandle alloc];
      uint64_t v77 = [v4 downloadHandle];
      int v78 = [v4 bundleIdentifier];
      int v28 = [(ApplicationHandle *)v76 initWithDownloadHandle:v77 bundleIdentifier:v78];

      v79 = +[ApplicationWorkspace defaultWorkspace];
      [v79 resetProgressForApplicationHandle:v28];

LABEL_100:
      break;
    default:
      break;
  }
  objc_msgSend(*((id *)a1[4] + 14), "removeObjectForKey:", a1[5], v81);
  [a1[4] _reloadKeepAliveAssertion];

  return 1;
}

uint64_t sub_100115120(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)];
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 mediaAssetIdentifier];
    id v7 = [v5 downloadIdentifier];
    unsigned int v8 = [DownloadAssetEntity alloc];
    int v9 = [v3 database];
    int v10 = [(DownloadAssetEntity *)v8 initWithPersistentID:v6 inDatabase:v9];

    int v11 = +[NSNumber numberWithUnsignedLongLong:*(void *)(a1 + 48)];
    int v36 = v10;
    [(DownloadAssetEntity *)v10 setValue:v11 forProperty:@"download_token"];

    int v12 = [DownloadEntity alloc];
    int v13 = [v3 database];
    id v14 = [(DownloadEntity *)v12 initWithPersistentID:v7 inDatabase:v13];

    int v15 = @"download_state.phase";
    id v45 = 0;
    uint64_t v46 = v15;
    [(DownloadEntity *)v14 getValues:&v45 forProperties:&v46 count:1];
    id v35 = v45;
    LOBYTE(v12) = [v35 isEqualToString:SSDownloadPhaseCanceled];
    uint64_t v16 = +[SSLogConfig sharedDaemonConfig];
    id v17 = (id)v16;
    if (v12)
    {
      if (!v16)
      {
        id v17 = +[SSLogConfig sharedConfig];
      }
      unsigned int v18 = [v17 shouldLog];
      if ([v17 shouldLogToDisk]) {
        v18 |= 2u;
      }
      uint64_t v19 = [v17 OSLogObject];
      if (!os_log_type_enabled(&v19->super, OS_LOG_TYPE_INFO)) {
        v18 &= 2u;
      }
      if (v18)
      {
        int v37 = 138412802;
        id v38 = (id)objc_opt_class();
        __int16 v39 = 2048;
        id v40 = v6;
        __int16 v41 = 2048;
        id v42 = v7;
        id v20 = v38;
        LODWORD(v34) = 32;
        id v21 = (void *)_os_log_send_and_compose_impl();

        if (!v21)
        {
LABEL_25:

          goto LABEL_26;
        }
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v37, v34);
        uint64_t v19 = (DownloadsChangeset *)objc_claimAutoreleasedReturnValue();
        free(v21);
        SSFileLog();
      }
LABEL_24:

      goto LABEL_25;
    }
    if (!v16)
    {
      id v17 = +[SSLogConfig sharedConfig];
    }
    unsigned int v22 = [v17 shouldLog];
    if ([v17 shouldLogToDisk]) {
      int v23 = v22 | 2;
    }
    else {
      int v23 = v22;
    }
    long long v24 = [v17 OSLogObject];
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
      v23 &= 2u;
    }
    if (v23)
    {
      long long v25 = objc_opt_class();
      id v26 = *(void **)(a1 + 48);
      int v37 = 138413058;
      id v38 = v25;
      __int16 v39 = 2048;
      id v40 = v26;
      __int16 v41 = 2048;
      id v42 = v6;
      __int16 v43 = 2048;
      id v44 = v7;
      id v27 = v25;
      LODWORD(v34) = 42;
      int v28 = (void *)_os_log_send_and_compose_impl();

      if (!v28)
      {
LABEL_23:

        uint64_t v29 = SSDownloadPhaseDownloading;
        [(DownloadEntity *)v14 setValue:SSDownloadPhaseDownloading forProperty:v15];
        id v30 = objc_alloc((Class)NSDictionary);
        id v17 = objc_msgSend(v30, "initWithObjectsAndKeys:", v29, SSDownloadPropertyDownloadPhase, 0);
        int v31 = +[DownloadController controller];
        int v32 = [(DownloadEntity *)v14 valueForProperty:@"kind"];
        [v31 notifyClientsOfPropertyChanges:v17 forDownloadID:v7 downloadKind:v32];

        [*(id *)(a1 + 32) _logDownloadEvent:SSEventNameDownloadStart forTaskWithState:v5 session:v3];
        uint64_t v19 = objc_alloc_init(DownloadsChangeset);
        -[DownloadsChangeset addStatusChangedDownloadID:](v19, "addStatusChangedDownloadID:", [v5 downloadIdentifier]);
        [(DownloadsChangeset *)v19 addDownloadChangeTypes:2];
        [v3 unionChangeset:v19];
        goto LABEL_24;
      }
      long long v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v37, v34);
      free(v28);
      SSFileLog();
    }

    goto LABEL_23;
  }
LABEL_26:

  return 1;
}

void sub_100116344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001163D0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001163E0(uint64_t a1)
{
}

void sub_1001163E8(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) URLSessionIdentifier];
  uint64_t v2 = [*(id *)(*(void *)(a1 + 40) + 120) objectForKey:v5];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t sub_10011645C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[PipelineDownloadTaskState alloc] initWithPrepareDownloadResponse:*(void *)(a1 + 32)];
  [*(id *)(*(void *)(a1 + 40) + 120) setObject:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) forKey:*(void *)(a1 + 48)];
  if (([*(id *)(a1 + 32) ignoresDownloadHandler] & 1) == 0
    && sub_10015A078(*(void *)(a1 + 88)))
  {
    id v5 = [*(id *)(a1 + 40) _downloadSessionPropertiesWithPhase:SSDownloadPhaseDownloading taskState:v4 databaseSession:v3];
    if (v5)
    {
      id v6 = +[DownloadHandlerManager handlerManager];
      uint64_t v7 = [v6 openSessionWithProperties:v5];
      uint64_t v8 = *(void *)(*(void *)(a1 + 80) + 8);
      int v9 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v7;
    }
  }
  v108 = v4;
  if (*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40))
  {
    objc_msgSend(*(id *)(*(void *)(a1 + 40) + 48), "addObject:");
    [*(id *)(*(void *)(a1 + 40) + 112) setObject:v4 forKey:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)];
    [*(id *)(a1 + 40) _setDownloadPhase:SSDownloadPhaseDownloading forDownloadIdentifier:*(void *)(a1 + 96) databaseTransaction:v3];
LABEL_56:
    unsigned int v57 = objc_msgSend(*(id *)(a1 + 32), "backgroundOperations", v103);
    long long v109 = 0u;
    long long v110 = 0u;
    long long v111 = 0u;
    long long v112 = 0u;
    id v58 = [v57 countByEnumeratingWithState:&v109 objects:v113 count:16];
    if (v58)
    {
      id v59 = v58;
      uint64_t v60 = *(void *)v110;
      do
      {
        for (uint64_t i = 0; i != v59; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v110 != v60) {
            objc_enumerationMutation(v57);
          }
          double v62 = *(void **)(*((void *)&v109 + 1) + 8 * i);
          [v62 setShouldRunWithBackgroundPriority:1];
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            __int16 v63 = +[ApplicationWorkspace defaultWorkspace];
            [v63 addPlaceholderThumbnailOperation:v62];
          }
          else
          {
            [*(id *)(*(void *)(a1 + 40) + 24) addOperation:v62];
          }
        }
        id v59 = [v57 countByEnumeratingWithState:&v109 objects:v113 count:16];
      }
      while (v59);
    }

    id v4 = v108;
    goto LABEL_67;
  }
  if (*(void *)(a1 + 56))
  {
    int v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10)
    {
      int v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v11 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      v11 |= 2u;
    }
    int v12 = [v10 OSLogObject];
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      v11 &= 2u;
    }
    if (v11)
    {
      unsigned int v13 = [*(id *)(a1 + 32) isHLS];
      int v114 = 67109120;
      LODWORD(v115) = v13;
      LODWORD(v105) = 8;
      id v103 = &v114;
      id v14 = (void *)_os_log_send_and_compose_impl();

      if (!v14) {
        goto LABEL_19;
      }
      int v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v114, v105);
      free(v14);
      id v103 = (int *)v12;
      SSFileLog();
    }

LABEL_19:
    if ([*(id *)(a1 + 32) isHLS])
    {
      [*(id *)(a1 + 40) _setDownloadPhase:SSDownloadPhaseDownloading forDownloadIdentifier:*(void *)(a1 + 96) databaseTransaction:v3];
      id v15 = *(id *)(a1 + 56);
      uint64_t v16 = [v15 URLAsset];
      id v17 = [v16 resourceLoader];
      unsigned int v18 = [DownloadEntity alloc];
      uint64_t v19 = *(void *)(a1 + 96);
      id v20 = [v3 database];
      id v21 = [(DownloadEntity *)v18 initWithPersistentID:v19 inDatabase:v20];

      unsigned int v22 = [[DownloadAssetFairPlayStreamingKeyLoader alloc] initWithDownloadEntity:v21];
      [(DownloadAssetFairPlayStreamingKeyLoader *)v22 setDelegate:*(void *)(a1 + 40)];

      [(DownloadAssetFairPlayStreamingKeyLoader *)v22 applyResourceLoaderDelegate:v17];
      id v23 = [v16 downloadToken];
    }
    else
    {
      id v23 = 0;
      unsigned int v22 = 0;
    }
    id v39 = objc_msgSend(*(id *)(a1 + 32), "mediaAssetIdentifier", v103);
    id v40 = [DownloadAssetEntity alloc];
    __int16 v41 = [v3 database];
    id v42 = [(DownloadAssetEntity *)v40 initWithPersistentID:v39 inDatabase:v41];

    uint64_t v43 = (uint64_t)[*(id *)(a1 + 32) mediaAssetSize];
    id v44 = objc_alloc_init((Class)NSMutableDictionary);
    if (v43 >= 1)
    {
      id v45 = +[NSNumber numberWithLongLong:v43];
      [v44 setObject:v45 forKey:@"bytes_total"];
    }
    uint64_t v46 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 56) taskIdentifier]);
    [v44 setObject:v46 forKey:@"url_session_task_id"];

    if (!v23) {
      goto LABEL_53;
    }
    id v107 = v3;
    id v47 = +[SSLogConfig sharedDaemonConfig];
    if (!v47)
    {
      id v47 = +[SSLogConfig sharedConfig];
    }
    unsigned int v48 = [v47 shouldLog];
    if ([v47 shouldLogToDisk]) {
      int v49 = v48 | 2;
    }
    else {
      int v49 = v48;
    }
    uint64_t v50 = [v47 OSLogObject];
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT)) {
      int v51 = v49;
    }
    else {
      int v51 = v49 & 2;
    }
    if (v51)
    {
      id v52 = objc_opt_class();
      v106 = v42;
      id v53 = v52;
      id v54 = [(PipelineDownloadTaskState *)v108 downloadIdentifier];
      int v114 = 138413058;
      v115 = v52;
      __int16 v116 = 2048;
      id v117 = v23;
      __int16 v118 = 2048;
      id v119 = v39;
      __int16 v120 = 2048;
      id v121 = v54;
      LODWORD(v105) = 42;
      v104 = &v114;
      id v55 = (void *)_os_log_send_and_compose_impl();

      id v42 = v106;
      if (!v55)
      {
LABEL_52:

        id v56 = +[NSNumber numberWithUnsignedLongLong:v23];
        [v44 setObject:v56 forKey:@"download_token"];

        id v3 = v107;
LABEL_53:
        -[DownloadAssetEntity setValuesWithDictionary:](v42, "setValuesWithDictionary:", v44, v104);
        if (v22) {
          [*(id *)(*(void *)(a1 + 40) + 104) setObject:v22 forKey:*(void *)(a1 + 56)];
        }
        [*(id *)(*(void *)(a1 + 40) + 112) setObject:v108 forKey:*(void *)(a1 + 56)];

        goto LABEL_56;
      }
      uint64_t v50 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v55, 4, &v114, v105);
      free(v55);
      v104 = (int *)v50;
      SSFileLog();
    }

    goto LABEL_52;
  }
  uint64_t v24 = *(void *)(a1 + 88);
  switch(v24)
  {
    case 1:
      long long v67 = +[SSLogConfig sharedDaemonConfig];
      if (!v67)
      {
        long long v67 = +[SSLogConfig sharedConfig];
      }
      unsigned int v68 = [v67 shouldLog];
      if ([v67 shouldLogToDisk]) {
        v68 |= 2u;
      }
      id v69 = [v67 OSLogObject];
      if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT)) {
        int v70 = v68;
      }
      else {
        int v70 = v68 & 2;
      }
      if (v70)
      {
        unsigned int v71 = *(void **)(a1 + 96);
        int v114 = 134217984;
        v115 = v71;
        LODWORD(v105) = 12;
        id v103 = &v114;
        int v72 = (void *)_os_log_send_and_compose_impl();

        if (v72)
        {
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v72, 4, &v114, v105);
          __int16 v73 = (int *)objc_claimAutoreleasedReturnValue();
          free(v72);
          id v103 = v73;
          SSFileLog();
        }
      }
      else
      {
      }
      [v3 finishDownloadWithID:*(void *)(a1 + 96) finalPhase:SSDownloadPhaseCanceled updatePipeline:0];
      break;
    case 4:
      uint64_t v74 = +[SSLogConfig sharedDaemonConfig];
      if (!v74)
      {
        uint64_t v74 = +[SSLogConfig sharedConfig];
      }
      unsigned int v75 = [v74 shouldLog];
      if ([v74 shouldLogToDisk]) {
        v75 |= 2u;
      }
      unsigned int v76 = [v74 OSLogObject];
      if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT)) {
        int v77 = v75;
      }
      else {
        int v77 = v75 & 2;
      }
      if (v77)
      {
        int v78 = *(void **)(a1 + 96);
        int v114 = 134217984;
        v115 = v78;
        LODWORD(v105) = 12;
        id v103 = &v114;
        v79 = (void *)_os_log_send_and_compose_impl();

        if (v79)
        {
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v79, 4, &v114, v105);
          CFStringRef v80 = (int *)objc_claimAutoreleasedReturnValue();
          free(v79);
          id v103 = v80;
          SSFileLog();
        }
      }
      else
      {
      }
      break;
    case 3:
      if ([*(id *)(a1 + 32) isPerDeviceVPP])
      {
        long long v25 = [*(id *)(a1 + 32) downloadRestoreState];

        if (v25)
        {
          id v26 = [DownloadEntity alloc];
          uint64_t v27 = *(void *)(a1 + 96);
          int v28 = [v3 database];
          uint64_t v29 = [(DownloadEntity *)v26 initWithPersistentID:v27 inDatabase:v28];

          uint64_t v30 = [*(id *)(a1 + 32) downloadRestoreState];
          [(DownloadEntity *)v29 setValue:v30 forProperty:@"download_state.restore_state"];

          int v31 = +[SSLogConfig sharedDaemonConfig];
          if (!v31)
          {
            int v31 = +[SSLogConfig sharedConfig];
          }
          unsigned int v32 = [v31 shouldLog];
          if ([v31 shouldLogToDisk]) {
            v32 |= 2u;
          }
          uint64_t v33 = [v31 OSLogObject];
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT)) {
            int v34 = v32;
          }
          else {
            int v34 = v32 & 2;
          }
          if (v34)
          {
            id v35 = *(void **)(a1 + 96);
            int v36 = [*(id *)(a1 + 32) downloadRestoreState];
            int v114 = 134218242;
            v115 = v35;
            __int16 v116 = 2112;
            id v117 = v36;
            LODWORD(v105) = 22;
            id v103 = &v114;
            int v37 = (void *)_os_log_send_and_compose_impl();

            if (v37)
            {
              +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v37, 4, &v114, v105);
              id v38 = (int *)objc_claimAutoreleasedReturnValue();
              free(v37);
              id v103 = v38;
              SSFileLog();
            }
          }
          else
          {
          }
        }
      }
      v97 = +[SSLogConfig sharedDaemonConfig];
      if (!v97)
      {
        v97 = +[SSLogConfig sharedConfig];
      }
      unsigned int v98 = [v97 shouldLog];
      if ([v97 shouldLogToDisk]) {
        v98 |= 2u;
      }
      uint64_t v99 = [v97 OSLogObject];
      if (os_log_type_enabled(v99, OS_LOG_TYPE_DEFAULT)) {
        int v100 = v98;
      }
      else {
        int v100 = v98 & 2;
      }
      if (v100)
      {
        id v101 = *(void **)(a1 + 96);
        int v114 = 134217984;
        v115 = v101;
        LODWORD(v105) = 12;
        id v103 = &v114;
        id v102 = (void *)_os_log_send_and_compose_impl();

        if (!v102)
        {
LABEL_119:

          [*(id *)(a1 + 40) _processDownloadWithTaskState:v4 databaseSession:v3 setupBlock:0];
          goto LABEL_56;
        }
        uint64_t v99 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v102, 4, &v114, v105);
        free(v102);
        id v103 = (int *)v99;
        SSFileLog();
      }

      goto LABEL_119;
    default:
      uint64_t v81 = +[SSLogConfig sharedDaemonConfig];
      if (!v81)
      {
        uint64_t v81 = +[SSLogConfig sharedConfig];
      }
      unsigned int v82 = [v81 shouldLog];
      if ([v81 shouldLogToDisk]) {
        v82 |= 2u;
      }
      id v83 = [v81 OSLogObject];
      if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT)) {
        int v84 = v82;
      }
      else {
        int v84 = v82 & 2;
      }
      if (v84)
      {
        int v85 = *(void **)(a1 + 96);
        int v114 = 134217984;
        v115 = v85;
        LODWORD(v105) = 12;
        id v103 = &v114;
        id v86 = (void *)_os_log_send_and_compose_impl();

        if (v86)
        {
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v86, 4, &v114, v105);
          __int16 v87 = (int *)objc_claimAutoreleasedReturnValue();
          free(v86);
          id v103 = v87;
          SSFileLog();
        }
      }
      else
      {
      }
      id v88 = [*(id *)(a1 + 32) error];
      __int16 v89 = v88;
      if (!v88) {
        __int16 v89 = *(void **)(a1 + 64);
      }
      id v90 = v89;

      v91 = *(void **)(a1 + 40);
      uint64_t v92 = +[NSNumber numberWithLongLong:*(void *)(a1 + 96)];
      [v91 _failDownloadWithIdentifier:v92 error:v90 transaction:v3];

      uint64_t v93 = *(void **)(a1 + 40);
      v94 = [(PipelineDownloadTaskState *)v4 kind];
      int v95 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 32) storeItemIdentifier]);
      unsigned int v96 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 32) rentalIdentifier]);
      [v93 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v94 adamID:v95 rentalID:v96 error:v90 cancelReason:1];

      goto LABEL_56;
  }
LABEL_67:
  uint64_t v64 = *(void **)(*(void *)(a1 + 40) + 64);
  unsigned int v65 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", *(void *)(a1 + 96), v103);
  [v64 removeObject:v65];

  [*(id *)(a1 + 40) _reloadKeepAliveAssertion];
  return 1;
}

uint64_t sub_1001173AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)];
  id v5 = [v4 downloadIdentifier];
  [*(id *)(*(void *)(a1 + 32) + 112) removeObjectForKey:*(void *)(a1 + 40)];

  id v6 = [*(id *)(a1 + 48) result];
  if (v6 == (id)2)
  {
    id v16 = objc_alloc((Class)NSOrderedSet);
    id v17 = +[NSNumber numberWithLongLong:v5];
    id v18 = objc_msgSend(v16, "initWithObjects:", v17, 0);

    [*(id *)(a1 + 32) addDownloadsWithIdentifiers:v18];
    goto LABEL_31;
  }
  if (v6 == (id)1)
  {
    uint64_t v19 = +[SSLogConfig sharedDaemonConfig];
    if (!v19)
    {
      uint64_t v19 = +[SSLogConfig sharedConfig];
    }
    unsigned int v20 = [v19 shouldLog];
    if ([v19 shouldLogToDisk]) {
      int v21 = v20 | 2;
    }
    else {
      int v21 = v20;
    }
    unsigned int v22 = [v19 OSLogObject];
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
      int v23 = v21;
    }
    else {
      int v23 = v21 & 2;
    }
    if (v23)
    {
      int v29 = 134217984;
      id v30 = v5;
      LODWORD(v28) = 12;
      uint64_t v27 = &v29;
      uint64_t v24 = (void *)_os_log_send_and_compose_impl();

      if (!v24)
      {
LABEL_30:

        id v25 = [*(id *)(a1 + 48) downloadIdentifier];
        [v3 finishDownloadWithID:v25 finalPhase:SSDownloadPhaseCanceled updatePipeline:0];
        goto LABEL_31;
      }
      unsigned int v22 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v29, v28);
      free(v24);
      uint64_t v27 = (int *)v22;
      SSFileLog();
    }

    goto LABEL_30;
  }
  if (!v6)
  {
    uint64_t v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7)
    {
      uint64_t v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    int v10 = [v7 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      int v11 = v9;
    }
    else {
      int v11 = v9 & 2;
    }
    if (v11)
    {
      int v29 = 134217984;
      id v30 = v5;
      LODWORD(v28) = 12;
      uint64_t v27 = &v29;
      int v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_16:

        unsigned int v13 = *(void **)(a1 + 32);
        id v14 = +[NSNumber numberWithLongLong:v5];
        id v15 = [*(id *)(a1 + 48) error];
        [v13 _failDownloadWithIdentifier:v14 error:v15 transaction:v3];

        goto LABEL_31;
      }
      int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v29, v28);
      free(v12);
      uint64_t v27 = (int *)v10;
      SSFileLog();
    }

    goto LABEL_16;
  }
LABEL_31:
  objc_msgSend(*(id *)(a1 + 32), "_reloadKeepAliveAssertion", v27);

  return 1;
}

void sub_100117D30(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v10 && [v10 selectedButtonIndex])
  {
    id v6 = [v10 textFieldValues];
    if ([v6 count] == (id)1)
    {
      uint64_t v7 = [v6 objectAtIndex:0];
      unsigned int v8 = 0;
    }
    else if ([v6 count] == (id)2)
    {
      uint64_t v7 = [v6 objectAtIndex:1];
      unsigned int v8 = [v6 objectAtIndex:0];
    }
    else
    {
      unsigned int v8 = 0;
      uint64_t v7 = 0;
    }
    id v9 = [objc_alloc((Class)NSURLCredential) initWithUser:v8 password:v7 persistence:1];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100117F3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(a1 + 48))
  {
    id v4 = objc_alloc_init((Class)NSMutableSet);
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v5 = *(id *)(*(void *)(a1 + 32) + 112);
    id v6 = [v5 countByEnumeratingWithState:&v22 objects:v27 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v23;
      do
      {
        id v9 = 0;
        do
        {
          if (*(void *)v23 != v8) {
            objc_enumerationMutation(v5);
          }
          id v10 = [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(*((void *)&v22 + 1) + 8 * (void)v9)];
          id v11 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(v10, "downloadIdentifier"));
          [v4 addObject:v11];

          id v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v22 objects:v27 count:16];
      }
      while (v7);
    }
  }
  else
  {
    id v4 = 0;
  }
  int v12 = [v3 database];
  uint64_t v13 = *(void *)(a1 + 40);
  CFStringRef v26 = @"order_key";
  id v14 = +[NSArray arrayWithObjects:&v26 count:1];
  id v15 = +[DownloadEntity queryWithDatabase:v12 predicate:v13 orderingProperties:v14];

  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_1001181B4;
  v18[3] = &unk_1003A6E40;
  uint64_t v16 = *(void *)(a1 + 32);
  id v19 = v4;
  uint64_t v20 = v16;
  char v21 = *(unsigned char *)(a1 + 49);
  id v17 = v4;
  +[PrepareDownloadOperation enumerateOperationsWithDownloadQuery:v15 session:v3 usingBlock:v18];
  [*(id *)(a1 + 32) _reloadKeepAliveAssertion];
}

void sub_1001181B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(v3, "downloadIdentifier"));
  if (([*(id *)(a1 + 32) containsObject:v4] & 1) == 0
    && ([*(id *)(*(void *)(a1 + 40) + 64) containsObject:v4] & 1) == 0)
  {
    [v3 setIgnoresDownloadHandler:*(unsigned __int8 *)(a1 + 48)];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1001182C4;
    v5[3] = &unk_1003A6E18;
    void v5[4] = *(void *)(a1 + 40);
    [v3 setOutputBlock:v5];
    [*(id *)(*(void *)(a1 + 40) + 64) addObject:v4];
    [*(id *)(*(void *)(a1 + 40) + 72) addOperation:v3];
  }
}

void sub_1001182C4(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  if (([a2 isCancelled] & 1) == 0)
  {
    id v5 = [[PerformDownloadOperation alloc] initWithDownloadPipeline:*(void *)(a1 + 32) response:v9];
    id v6 = [v9 sessionConfiguration];
    unsigned int v7 = [v6 isDiscretionary];

    uint64_t v8 = 144;
    if (v7) {
      uint64_t v8 = 136;
    }
    [*(id *)(*(void *)(a1 + 32) + v8) addOperation:v5];
  }
}

void sub_100118570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100118590(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _finishDownloadWithOperation:v7 response:v5];

  [v7 setDelegate:0];
}

void sub_1001189E8(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100118A88;
  v5[3] = &unk_1003A6EB8;
  id v6 = *(id *)(a1 + 48);
  [v3 _processDownloadWithTaskState:v4 databaseSession:a2 setupBlock:v5];
}

void sub_100118A88(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setHandlerReleasedDownloadPhase:v3];
  [v4 setInitialDownloadPhase:*(void *)(a1 + 32)];
}

void sub_100118DC8(uint64_t a1)
{
  uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    uint64_t v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  LODWORD(v11) = 138412290;
  *(void *)((char *)&v11 + 4) = objc_opt_class();
  id v7 = *(id *)((char *)&v11 + 4);
  LODWORD(v10) = 12;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v11, v10, v11);
    free(v8);
    SSFileLog();
LABEL_11:
  }
  id v9 = objc_loadWeakRetained((id *)(a1 + 32));
  [v9 reconnectWithURLSessionTasks];
}

void sub_100119290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001192A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _commitProgressTimer];
}

void sub_100119F0C(id a1, NSString *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    unsigned int v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  id v6 = [v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    int v7 = v5;
  }
  else {
    int v7 = v5 & 2;
  }
  if (!v7) {
    goto LABEL_12;
  }
  int v10 = 138412290;
  long long v11 = v2;
  LODWORD(v9) = 12;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v10, v9);
    free(v8);
    SSFileLog();
LABEL_12:
  }
}

void sub_10011A074(id a1, NSArray *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    unsigned int v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  id v6 = [v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    int v7 = v5;
  }
  else {
    int v7 = v5 & 2;
  }
  if (!v7) {
    goto LABEL_12;
  }
  int v10 = 138412290;
  long long v11 = v2;
  LODWORD(v9) = 12;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v10, v9);
    free(v8);
    SSFileLog();
LABEL_12:
  }
}

id sub_10011A9D0()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401E40 = (uint64_t)result;
  return result;
}

void sub_10011AA90(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 16) count])
  {
    xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v2, "0", 1009);
    SSXPCDictionarySetCFObject();
    long long v10 = 0u;
    long long v11 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    unsigned int v3 = *(void **)(*(void *)(a1 + 32) + 16);
    id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v9;
      do
      {
        for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v9 != v6) {
            objc_enumerationMutation(v3);
          }
          objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "objectForKey:", *(void *)(*((void *)&v8 + 1) + 8 * i)), "postNotificationName:message:", *(void *)(a1 + 40), v2);
        }
        id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      }
      while (v5);
    }
    xpc_release(v2);
  }
}

void sub_10011ACD8(uint64_t a1)
{
  objc_opt_class();
  xpc_object_t v2 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  objc_opt_class();
  unsigned int v3 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if ([v2 length] && objc_msgSend(v3, "length"))
  {
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_INFO)) {
      v6 &= 2u;
    }
    if (v6)
    {
      int v12 = 138412802;
      uint64_t v13 = objc_opt_class();
      __int16 v14 = 2112;
      id v15 = v2;
      __int16 v16 = 2112;
      id v17 = v3;
      LODWORD(v11) = 32;
      long long v10 = &v12;
      uint64_t v7 = _os_log_send_and_compose_impl();
      if (v7)
      {
        long long v8 = (void *)v7;
        long long v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v12, v11);
        free(v8);
        long long v10 = (int *)v9;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 40), "_addObserverWithPortName:notificationName:", v2, v3, v10);
  }
}

void sub_10011AF64(uint64_t a1)
{
  objc_opt_class();
  xpc_object_t v2 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  objc_opt_class();
  unsigned int v3 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if ([v2 length] && objc_msgSend(v3, "length"))
  {
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_INFO)) {
      v6 &= 2u;
    }
    if (v6)
    {
      int v12 = 138412802;
      uint64_t v13 = objc_opt_class();
      __int16 v14 = 2112;
      id v15 = v2;
      __int16 v16 = 2112;
      id v17 = v3;
      LODWORD(v11) = 32;
      long long v10 = &v12;
      uint64_t v7 = _os_log_send_and_compose_impl();
      if (v7)
      {
        long long v8 = (void *)v7;
        long long v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v12, v11);
        free(v8);
        long long v10 = (int *)v9;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 48), "_removeObserverWithPortName:notificationName:", v2, v3, v10);
  }
}

id sub_10011B2A8(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_release(*(xpc_object_t *)(a1 + 32));
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v2 = +[Daemon daemon];

  return [v2 releaseKeepAliveAssertion:@"com.apple.itunesstored.DistributedNotificationCenter"];
}

id sub_10011B8A8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) addObject:*(void *)(a1 + 40)];
}

id sub_10011B928(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) indexOfObjectIdenticalTo:*(void *)(a1 + 40)];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = result;
    objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "object"), "removeObserver:forKeyPath:context:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "keyPath"), *(void *)(a1 + 40));
    id v4 = *(id *)(a1 + 40);
    unsigned int v5 = *(void **)(*(void *)(a1 + 32) + 16);
    return [v5 removeObjectAtIndex:v3];
  }
  return result;
}

id sub_10011C4A4()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401E50 = (uint64_t)result;
  return result;
}

id sub_10011C568(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 16);
  if (!v2)
  {
    *(void *)(*(void *)(a1 + 32) + 16) = objc_alloc_init((Class)NSMutableArray);
    id v2 = *(void **)(*(void *)(a1 + 32) + 16);
  }
  [v2 addObject:*(void *)(a1 + 40)];
  if ([*(id *)(a1 + 40) shouldKeepDaemonAlive]) {
    objc_msgSend(+[Daemon daemon](Daemon, "daemon"), "takeKeepAliveAssertion:", @"EventMonitor");
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 _reloadPollTimer];
}

id sub_10011C664(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) indexOfObjectIdenticalTo:*(void *)(a1 + 40)];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = result;
    [*(id *)(a1 + 32) _willRemoveEvent:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v3];
    id v4 = *(void **)(a1 + 32);
    return [v4 _reloadPollTimer];
  }
  return result;
}

id sub_10011C8B8(uint64_t a1)
{
  uint64_t v2 = (uint64_t)[*(id *)(a1 + 32) count];
  if (v2 >= 1)
  {
    unint64_t v3 = v2 + 1;
    do
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", v3 - 2), "performAction");
      --v3;
    }
    while (v3 > 1);
  }
  id v4 = +[Daemon daemon];

  return [v4 releaseKeepAliveAssertion:@"EventMonitor"];
}

id sub_10011CDC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _fireEventsAfterPollTimer];
}

void sub_10011D19C(id a1)
{
  qword_100401E60 = objc_alloc_init(EventDispatcher);
}

void sub_10011D23C(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 16) count])
  {
    id v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
      v4 &= 2u;
    }
    if (v4)
    {
      uint64_t v5 = objc_opt_class();
      uint64_t v6 = *(void *)(a1 + 40);
      int v23 = 138412546;
      uint64_t v24 = v5;
      __int16 v25 = 2112;
      uint64_t v26 = v6;
      LODWORD(v17) = 22;
      __int16 v16 = &v23;
      uint64_t v7 = _os_log_send_and_compose_impl();
      if (v7)
      {
        long long v8 = (void *)v7;
        long long v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v23, v17);
        free(v8);
        __int16 v16 = (int *)v9;
        SSFileLog();
      }
    }
    xpc_object_t v10 = xpc_dictionary_create(0, 0, 0);
    SSXPCDictionarySetCFObject();
    SSXPCDictionarySetCFObject();
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v11 = *(void **)(*(void *)(a1 + 32) + 16);
    id v12 = [v11 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v19;
      do
      {
        for (uint64_t i = 0; i != v13; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v14) {
            objc_enumerationMutation(v11);
          }
          objc_msgSend(objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * i), "outputConnection", v16), "sendMessage:", v10);
        }
        id v13 = [v11 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v13);
    }
    xpc_release(v10);
  }
}

void sub_10011D528(uint64_t a1)
{
  if (SSXPCConnectionHasEntitlement())
  {
    BOOL value = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 48), "1");
    if (value)
    {
      unsigned int v3 = value;
      if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_endpoint)
      {
        xpc_connection_t v4 = xpc_connection_create_from_endpoint(v3);
        if (v4)
        {
          xpc_connection_t v5 = v4;
          uint64_t v6 = [[XPCClient alloc] initWithInputConnection:*(void *)(a1 + 32)];
          [(XPCClient *)v6 setOutputConnectionWithConnection:v5];
          id v7 = +[SSLogConfig sharedDaemonConfig];
          if (!v7) {
            id v7 = +[SSLogConfig sharedConfig];
          }
          unsigned int v8 = [v7 shouldLog];
          if ([v7 shouldLogToDisk]) {
            int v9 = v8 | 2;
          }
          else {
            int v9 = v8;
          }
          if (!os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_INFO)) {
            v9 &= 2u;
          }
          if (v9)
          {
            int v22 = 138412546;
            uint64_t v23 = objc_opt_class();
            __int16 v24 = 2112;
            __int16 v25 = v6;
            LODWORD(v21) = 22;
            long long v20 = &v22;
            uint64_t v10 = _os_log_send_and_compose_impl();
            if (v10)
            {
              uint64_t v11 = (void *)v10;
              id v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v22, v21);
              free(v11);
              long long v20 = (int *)v12;
              SSFileLog();
            }
          }
          objc_msgSend(*(id *)(a1 + 56), "_addClient:", v6, v20);
          xpc_object_t v13 = xpc_dictionary_create(0, 0, 0);
          [(SSXPCConnection *)[(XPCClient *)v6 outputConnection] sendMessage:v13];
          xpc_release(v13);

          xpc_release(v5);
        }
      }
    }
  }
  else
  {
    uint64_t v14 = (XPCClient *)SSXPCConnectionCopyClientIdentifier();
    id v15 = +[SSLogConfig sharedDaemonConfig];
    if (!v15) {
      id v15 = +[SSLogConfig sharedConfig];
    }
    unsigned int v16 = [v15 shouldLog];
    if ([v15 shouldLogToDisk]) {
      int v17 = v16 | 2;
    }
    else {
      int v17 = v16;
    }
    if (!os_log_type_enabled((os_log_t)[v15 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v17 &= 2u;
    }
    if (v17)
    {
      int v22 = 138412546;
      uint64_t v23 = objc_opt_class();
      __int16 v24 = 2112;
      __int16 v25 = v14;
      LODWORD(v21) = 22;
      uint64_t v18 = _os_log_send_and_compose_impl();
      if (v18)
      {
        long long v19 = (void *)v18;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v22, v21);
        free(v19);
        SSFileLog();
      }
    }
  }
}

id sub_10011D900(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) indexOfObjectIdenticalTo:*(void *)(a1 + 40)];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = result;
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_INFO)) {
      v6 &= 2u;
    }
    if (v6)
    {
      uint64_t v7 = objc_opt_class();
      uint64_t v8 = *(void *)(a1 + 40);
      int v14 = 138412546;
      uint64_t v15 = v7;
      __int16 v16 = 2112;
      uint64_t v17 = v8;
      LODWORD(v13) = 22;
      id v12 = &v14;
      uint64_t v9 = _os_log_send_and_compose_impl();
      if (v9)
      {
        uint64_t v10 = (void *)v9;
        uint64_t v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v14, v13);
        free(v10);
        id v12 = (int *)v11;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 40), "setOutputConnectionWithConnection:", 0, v12);
    return [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v3];
  }
  return result;
}

id sub_10011DB64(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_release(*(xpc_object_t *)(a1 + 32));
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v2 = +[Daemon daemon];

  return [v2 releaseKeepAliveAssertion:@"com.apple.itunesstored.EventDispatcher"];
}

Class sub_10011E95C()
{
  if (qword_100401E78 != -1) {
    dispatch_once(&qword_100401E78, &stru_1003A6FA0);
  }
  Class result = objc_getClass("ICDefaults");
  qword_100401E70 = (uint64_t)result;
  off_1004012D0 = (uint64_t (*)())sub_10011E9C0;
  return result;
}

id sub_10011E9C0()
{
  return (id)qword_100401E70;
}

void sub_10011E9CC(id a1)
{
  qword_100401E80 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud", 2);
}

uint64_t sub_10011ECA8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) payment];
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  if (!os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_INFO)) {
    v5 &= 2u;
  }
  if (v5)
  {
    uint64_t v6 = objc_opt_class();
    id v7 = [v2 quantity];
    id v8 = [v2 productIdentifier];
    id v9 = [*(id *)(a1 + 40) _clientIdentifier];
    int v48 = 138544130;
    uint64_t v49 = v6;
    __int16 v50 = 2048;
    id v51 = v7;
    __int16 v52 = 2112;
    id v53 = v8;
    __int16 v54 = 2112;
    id v55 = v9;
    LODWORD(v47) = 42;
    id v45 = &v48;
    uint64_t v10 = _os_log_send_and_compose_impl();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      id v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v48, v47);
      free(v11);
      id v45 = (int *)v12;
      SSFileLog();
    }
  }
  uint64_t result = (uint64_t)objc_msgSend(objc_msgSend(v2, "productIdentifier", v45), "length");
  if (result)
  {
    uint64_t result = (uint64_t)[v2 quantity];
    if (result >= 1)
    {
      if (*(void *)(*(void *)(a1 + 40) + 24))
      {
        id v14 = +[NSThread beginManagedContextSession];
        uint64_t v15 = [[MicroPayment alloc] initWithEntity:+[MicroPayment paymentEntityFromContext:v14] insertIntoManagedObjectContext:v14];
        -[MicroPayment setClient:](v15, "setClient:", [v14 objectWithID:*(void *)(*(void *)(a1 + 40) + 24)]);
        [(MicroPayment *)v15 setValuesWithPaymentTransaction:*(void *)(a1 + 32)];
        -[MicroPayment setOriginatingStorefront:](v15, "setOriginatingStorefront:", objc_msgSend(+[SSDevice currentDevice](SSDevice, "currentDevice"), "storeFrontIdentifier"));
        id v16 = [*(id *)(a1 + 48) objectForKey:@"StoreKitClientPaymentOptionSupportsDeferredPayment"];
        if ([v16 BOOLValue]) {
          [(MicroPayment *)v15 setSupportsDeferredPayment:v16];
        }
        if ([*(id *)(a1 + 40) _isPaymentRestricted])
        {
          id v17 = +[SSLogConfig sharedDaemonConfig];
          if (!v17) {
            id v17 = +[SSLogConfig sharedConfig];
          }
          unsigned int v18 = [v17 shouldLog];
          if ([v17 shouldLogToDisk]) {
            int v19 = v18 | 2;
          }
          else {
            int v19 = v18;
          }
          if (!os_log_type_enabled((os_log_t)[v17 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
            v19 &= 2u;
          }
          if (v19)
          {
            uint64_t v20 = objc_opt_class();
            id v21 = [*(id *)(a1 + 40) _clientIdentifier];
            int v48 = 138543618;
            uint64_t v49 = v20;
            __int16 v50 = 2112;
            id v51 = v21;
            LODWORD(v47) = 22;
            uint64_t v46 = &v48;
            uint64_t v22 = _os_log_send_and_compose_impl();
            if (v22)
            {
              uint64_t v23 = (void *)v22;
              __int16 v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, &v48, v47);
              free(v23);
              uint64_t v46 = (int *)v24;
              SSFileLog();
            }
          }
          sub_100174DB0();
          [(MicroPayment *)v15 setFailedWithError:SSError()];
          [*(id *)(a1 + 40) _showPaymentsRestrictedAlert];
        }
        else
        {
          [(MicroPayment *)v15 setState:+[NSNumber numberWithInteger:0]];
        }
        id v30 = objc_msgSend(*(id *)(*(void *)(a1 + 40) + 8), "copyInputConnection", v46);
        if ([v2 requestData]
          && (SSXPCConnectionHasEntitlement() & 1) == 0
          && (SSXPCConnectionHasEntitlement() & 1) == 0)
        {
          if (MGGetBoolAnswer()
            && CFPreferencesGetAppBooleanValue(@"AllowStoreKitPaymentWithRequestDataWithoutEntitlement", kSSUserDefaultsIdentifier, 0))
          {
            id v31 = +[SSLogConfig sharedDaemonConfig];
            if (!v31) {
              id v31 = +[SSLogConfig sharedConfig];
            }
            unsigned int v32 = [v31 shouldLog];
            if ([v31 shouldLogToDisk]) {
              int v33 = v32 | 2;
            }
            else {
              int v33 = v32;
            }
            if (!os_log_type_enabled((os_log_t)[v31 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
              v33 &= 2u;
            }
            if (v33)
            {
              uint64_t v34 = objc_opt_class();
              id v35 = [*(id *)(a1 + 40) _clientIdentifier];
              int v48 = 138543618;
              uint64_t v49 = v34;
              __int16 v50 = 2112;
              id v51 = v35;
              LODWORD(v47) = 22;
              uint64_t v36 = _os_log_send_and_compose_impl();
              if (v36)
              {
                int v37 = (void *)v36;
                +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v36, 4, &v48, v47);
                free(v37);
                SSFileLog();
              }
            }
          }
          else if (objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", @"StoreKitClientPaymentOptionGrandfatherRequestData"), "BOOLValue"))
          {
            [(MicroPayment *)v15 setRequestData:0];
          }
          else
          {
            id v38 = +[SSLogConfig sharedDaemonConfig];
            if (!v38) {
              id v38 = +[SSLogConfig sharedConfig];
            }
            unsigned int v39 = [v38 shouldLog];
            if ([v38 shouldLogToDisk]) {
              int v40 = v39 | 2;
            }
            else {
              int v40 = v39;
            }
            if (!os_log_type_enabled((os_log_t)[v38 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
              v40 &= 2u;
            }
            if (v40)
            {
              uint64_t v41 = objc_opt_class();
              id v42 = [*(id *)(a1 + 40) _clientIdentifier];
              int v48 = 138543618;
              uint64_t v49 = v41;
              __int16 v50 = 2112;
              id v51 = v42;
              LODWORD(v47) = 22;
              uint64_t v43 = _os_log_send_and_compose_impl();
              if (v43)
              {
                id v44 = (void *)v43;
                +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v43, 4, &v48, v47);
                free(v44);
                SSFileLog();
              }
            }
            sub_100174DB0();
            [(MicroPayment *)v15 setFailedWithError:SSError()];
          }
        }
        if (v30) {
          xpc_release(v30);
        }
        if (sub_10004BBA0(v14))
        {
          objc_msgSend(*(id *)(a1 + 40), "_sendPaymentsAdded:", +[NSArray arrayWithObject:](NSArray, "arrayWithObject:", v15));
          *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
        }

        return (uint64_t)+[NSThread endManagedContextSession];
      }
      else
      {
        id v25 = +[SSLogConfig sharedDaemonConfig];
        if (!v25) {
          id v25 = +[SSLogConfig sharedConfig];
        }
        unsigned int v26 = [v25 shouldLog];
        if ([v25 shouldLogToDisk]) {
          int v27 = v26 | 2;
        }
        else {
          int v27 = v26;
        }
        uint64_t result = os_log_type_enabled((os_log_t)[v25 OSLogObject], OS_LOG_TYPE_ERROR);
        if (!result) {
          v27 &= 2u;
        }
        if (v27)
        {
          uint64_t v28 = objc_opt_class();
          int v48 = 138543362;
          uint64_t v49 = v28;
          LODWORD(v47) = 12;
          uint64_t result = _os_log_send_and_compose_impl();
          if (result)
          {
            int v29 = (void *)result;
            +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", result, 4, &v48, v47);
            free(v29);
            return SSFileLog();
          }
        }
      }
    }
  }
  return result;
}

id sub_10011F51C(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = objc_alloc_init((Class)NSMutableOrderedSet);
  id v4 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", @"downloadID", @"state", 0);
  id v5 = [*(id *)(a1 + 32) _copyDownloadsForDownloadIDs:*(void *)(a1 + 40) properties:v4 context:v2];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v6 = [v5 countByEnumeratingWithState:&v24 objects:v34 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v25;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        objc_msgSend(v10, "setState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 1));
        objc_msgSend(v3, "addObject:", objc_msgSend(v10, "downloadID"));
      }
      id v7 = [v5 countByEnumeratingWithState:&v24 objects:v34 count:16];
    }
    while (v7);
  }

  if ([v3 count])
  {
    id v11 = +[SSLogConfig sharedDaemonConfig];
    if (!v11) {
      id v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v12 = [v11 shouldLog];
    if ([v11 shouldLogToDisk]) {
      int v13 = v12 | 2;
    }
    else {
      int v13 = v12;
    }
    if (!os_log_type_enabled((os_log_t)[v11 OSLogObject], OS_LOG_TYPE_INFO)) {
      v13 &= 2u;
    }
    if (v13)
    {
      uint64_t v14 = objc_opt_class();
      id v15 = [v3 count];
      id v16 = [*(id *)(a1 + 32) _clientIdentifier];
      int v28 = 138543874;
      uint64_t v29 = v14;
      __int16 v30 = 2048;
      id v31 = v15;
      __int16 v32 = 2112;
      id v33 = v16;
      LODWORD(v22) = 32;
      id v21 = &v28;
      uint64_t v17 = _os_log_send_and_compose_impl();
      if (v17)
      {
        unsigned int v18 = (void *)v17;
        int v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v28, v22);
        free(v18);
        id v21 = (int *)v19;
        SSFileLog();
      }
    }
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    void v23[2] = sub_10011F840;
    void v23[3] = &unk_1003A5F80;
    void v23[4] = v3;
    objc_msgSend(+[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase", v21), "modifyUsingTransactionBlock:", v23);
  }

  sub_10004BBA0(v2);
  return +[NSThread endManagedContextSession];
}

id sub_10011F840(uint64_t a1, void *a2)
{
  return [a2 finishDownloadsWithIdentifiers:*(void *)(a1 + 32) finalPhase:SSDownloadPhaseCanceled];
}

void sub_10011F930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011F948(uint64_t a1, uint64_t a2)
{
}

void sub_10011F958(uint64_t a1)
{
}

id sub_10011F964(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _clientIdentifier];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

uint64_t sub_10011FA48(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 72);
  return result;
}

void *sub_10011FAD0(void *result)
{
  uint64_t v1 = result[4];
  if (!*(void *)(v1 + 24) && *(void *)(v1 + 8))
  {
    id v2 = result;
    id v3 = +[NSThread beginManagedContextSession];
    id v4 = (void *)v2[4];
    if (!v4[2]) {
      [v4 _reloadClientProperties];
    }
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_INFO)) {
      v7 &= 2u;
    }
    if (v7)
    {
      uint64_t v8 = objc_opt_class();
      unsigned int v9 = [*(id *)(v2[4] + 16) isSandboxed];
      id v10 = [*(id *)(v2[4] + 16) bundleIdentifier];
      id v11 = [*(id *)(v2[4] + 16) vendorIdentifier];
      int v18 = 138544130;
      uint64_t v19 = v8;
      __int16 v20 = 1024;
      unsigned int v21 = v9;
      __int16 v22 = 2112;
      id v23 = v10;
      __int16 v24 = 2112;
      id v25 = v11;
      LODWORD(v17) = 38;
      id v16 = &v18;
      uint64_t v12 = _os_log_send_and_compose_impl();
      if (v12)
      {
        int v13 = (void *)v12;
        uint64_t v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v18, v17);
        free(v13);
        id v16 = (int *)v14;
        SSFileLog();
      }
    }
    id v15 = [[MicroPaymentClient alloc] initWithEntity:+[MicroPaymentClient entityForContext:](MicroPaymentClient, "entityForContext:", v3, v16) insertIntoManagedObjectContext:v3];
    [(MicroPaymentClient *)v15 setValuesWithClientIdentity:*(void *)(v2[4] + 16)];
    if (sub_10004BBA0(v3)) {
      *(void *)(v2[4] + 24) = [(MicroPaymentClient *)v15 objectID];
    }

    return +[NSThread endManagedContextSession];
  }
  return result;
}

void sub_10011FDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_10011FE10(void *result)
{
  if (*(void *)(result[4] + 24))
  {
    uint64_t v1 = result;
    id v2 = +[NSThread beginManagedContextSession];
    id v3 = [v2 objectWithID:*(void *)(v1[4] + 24)];
    id v4 = objc_alloc_init((Class)NSFetchRequest);
    objc_msgSend(v4, "setEntity:", +[MicroPayment paymentEntityFromContext:](MicroPayment, "paymentEntityFromContext:", v2));
    [v4 setPredicate:+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"client=%@", v3)];
    objc_msgSend(v4, "setPropertiesToFetch:", +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", @"state", 0));
    id v5 = [objc_alloc((Class)NSSortDescriptor) initWithKey:@"insertDate" ascending:1];
    objc_msgSend(v4, "setSortDescriptors:", +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v5, 0));

    id v6 = [v2 executeFetchRequest:v4 error:0];
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v14;
      while (2)
      {
        for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v14 != v9) {
            objc_enumerationMutation(v6);
          }
          id v11 = *(void **)(*((void *)&v13 + 1) + 8 * i);
          id v12 = [v11 objectID];
          if (([*(id *)(v1[4] + 80) containsObject:v12] & 1) == 0
            && [v11 isReady])
          {
            *(void *)(*(void *)(v1[5] + 8) + 40) = v12;
            goto LABEL_13;
          }
        }
        id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }
LABEL_13:

    return +[NSThread endManagedContextSession];
  }
  return result;
}

void sub_1001200EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 8))
  {
    id v3 = [*(id *)(v2 + 8) copyInputConnection];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v3 == *(id *)(a1 + 40);
    xpc_release(v3);
  }
  else
  {
    if (!*(void *)(v2 + 16)) {
      [(id)v2 _reloadClientProperties];
    }
    uint64_t v4 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 48))
    {
      id v5 = [*(id *)(v4 + 16) bundleIdentifier];
      if (v5 == [*(id *)(a1 + 48) bundleIdentifier]
        || (unsigned int v6 = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "bundleIdentifier"), "isEqual:", objc_msgSend(*(id *)(a1 + 48), "bundleIdentifier"))) != 0)
      {
        id v7 = [*(id *)(*(void *)(a1 + 32) + 16) bundleVersion];
        if (v7 == [*(id *)(a1 + 48) bundleVersion]
          || (unsigned int v6 = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "bundleVersion"), "isEqual:", objc_msgSend(*(id *)(a1 + 48), "bundleVersion"))) != 0)
        {
          id v8 = [*(id *)(*(void *)(a1 + 32) + 16) storeIdentifier];
          if (v8 == [*(id *)(a1 + 48) storeItemIdentifier]
            || (unsigned int v6 = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "storeIdentifier"), "isEqual:", objc_msgSend(*(id *)(a1 + 48), "storeItemIdentifier"))) != 0)
          {
            id v9 = [*(id *)(*(void *)(a1 + 32) + 16) storeVersion];
            if (v9 == [*(id *)(a1 + 48) storeExternalVersion]) {
              LOBYTE(v6) = 1;
            }
            else {
              LOBYTE(v6) = objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "storeVersion"), "isEqual:", objc_msgSend(*(id *)(a1 + 48), "storeExternalVersion"));
            }
          }
        }
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v6;
    }
    else if (*(void *)(v4 + 24))
    {
      id v10 = objc_msgSend(+[NSThread beginManagedContextSession](NSThread, "beginManagedContextSession"), "objectWithID:", *(void *)(*(void *)(a1 + 32) + 24));
      if (v10)
      {
        id v11 = v10;
        id v12 = [[XPCClient alloc] initWithInputConnection:*(void *)(a1 + 40)];
        if (-[NSString isEqualToString:](-[XPCClient clientIdentifier](v12, "clientIdentifier"), "isEqualToString:", [v11 identifier]))
        {
          unsigned __int8 v13 = [(XPCClient *)v12 isAppleSigned];
          char v14 = v13 ^ objc_msgSend(objc_msgSend(v11, "sandboxed"), "BOOLValue");
        }
        else
        {
          char v14 = 0;
        }
        *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v14;
      }
      +[NSThread endManagedContextSession];
    }
  }
}

id sub_100120418(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientIdentity"), "isSandboxed");
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_100120528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100120540(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 24);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void *sub_100120608(void *result)
{
  if (*(void *)(result[4] + 24))
  {
    uint64_t v1 = result;
    id v2 = +[NSThread beginManagedContextSession];
    id v3 = [v2 objectWithID:*(void *)(v1[4] + 24)];
    id v4 = objc_alloc_init((Class)NSFetchRequest);
    objc_msgSend(v4, "setEntity:", +[MicroPayment paymentEntityFromContext:](MicroPayment, "paymentEntityFromContext:", v2));
    [v4 setPredicate:+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", @"client=%@", v3)];
    id v5 = [objc_alloc((Class)NSSortDescriptor) initWithKey:@"insertDate" ascending:1];
    objc_msgSend(v4, "setSortDescriptors:", +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v5, 0));

    id v6 = [v2 executeFetchRequest:v4 error:0];
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v15;
      do
      {
        for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v15 != v9) {
            objc_enumerationMutation(v6);
          }
          id v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
          if ((char *)objc_msgSend(objc_msgSend(v11, "state"), "integerValue") - 5 <= (char *)0xFFFFFFFFFFFFFFFDLL)
          {
            id v12 = [v11 copyPaymentTransaction];
            if (v12)
            {
              unsigned __int8 v13 = v12;
              [(id)v1[5] addObject:v12];
            }
          }
        }
        id v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v8);
    }

    return +[NSThread endManagedContextSession];
  }
  return result;
}

id sub_100120878(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = objc_alloc_init((Class)NSMutableOrderedSet);
  id v4 = objc_alloc_init((Class)NSMutableArray);
  id v5 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", @"downloadID", @"state", 0);
  uint64_t v27 = a1;
  int v28 = v2;
  id v6 = [*(id *)(a1 + 32) _copyDownloadsForDownloadIDs:*(void *)(a1 + 40) properties:v5 context:v2];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v31;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v31 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v30 + 1) + 8 * i);
        id v12 = objc_msgSend(objc_msgSend(v11, "state"), "integerValue");
        if (v12 == (id)5 || v12 == 0)
        {
          objc_msgSend(v11, "setState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 4));
          objc_msgSend(v3, "addObject:", objc_msgSend(v11, "downloadID"));
          objc_msgSend(v4, "addObject:", objc_msgSend((id)sub_100174DD0(), "changesetWithDownloadID:state:", objc_msgSend(v11, "downloadID"), 2));
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v8);
  }

  if ([v3 count])
  {
    id v14 = +[SSLogConfig sharedDaemonConfig];
    if (!v14) {
      id v14 = +[SSLogConfig sharedConfig];
    }
    unsigned int v15 = [v14 shouldLog];
    if ([v14 shouldLogToDisk]) {
      int v16 = v15 | 2;
    }
    else {
      int v16 = v15;
    }
    if (os_log_type_enabled((os_log_t)[v14 OSLogObject], OS_LOG_TYPE_INFO)) {
      int v17 = v16;
    }
    else {
      int v17 = v16 & 2;
    }
    if (v17)
    {
      uint64_t v18 = objc_opt_class();
      id v19 = [v3 count];
      id v20 = [*(id *)(v27 + 32) _clientIdentifier];
      int v34 = 138412802;
      uint64_t v35 = v18;
      __int16 v36 = 2048;
      id v37 = v19;
      __int16 v38 = 2112;
      id v39 = v20;
      LODWORD(v26) = 32;
      id v25 = &v34;
      uint64_t v21 = _os_log_send_and_compose_impl();
      if (v21)
      {
        __int16 v22 = (void *)v21;
        id v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v34, v26);
        free(v22);
        id v25 = (int *)v23;
        SSFileLog();
      }
    }
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_100120C14;
    v29[3] = &unk_1003A5F80;
    v29[4] = v3;
    objc_msgSend(+[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase", v25), "modifyUsingTransactionBlock:", v29);
  }
  if ([v4 count]) {
    [*(id *)(v27 + 32) _sendDownloadChangesets:v4];
  }

  sub_10004BBA0(v28);
  return +[NSThread endManagedContextSession];
}

id sub_100120C14(uint64_t a1, void *a2)
{
  return [a2 pauseDownloadsWithIdentifiers:*(void *)(a1 + 32)];
}

id sub_100120C98(uint64_t a1)
{
  return [*(id *)(a1 + 32) _refreshFromServerWithReason:*(void *)(a1 + 48) accountIdentifier:*(void *)(a1 + 40)];
}

id sub_100120D58(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = [v2 objectWithID:*(void *)(a1 + 32)];
  id v4 = [v3 transactionIdentifier];
  [v2 deleteObject:v3];
  if (sub_10004BBA0(v2))
  {
    objc_msgSend(*(id *)(a1 + 40), "_sendPaymentsRemoved:", +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v4, 0));
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }

  return +[NSThread endManagedContextSession];
}

uint64_t sub_100120E80(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2[8])
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    uint64_t result = os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT);
    if (!result) {
      v5 &= 2u;
    }
    if (v5)
    {
      uint64_t v7 = objc_opt_class();
      id v8 = [*(id *)(a1 + 32) _clientIdentifier];
      int v34 = 138543618;
      uint64_t v35 = v7;
      __int16 v36 = 2112;
      id v37 = v8;
      LODWORD(v31) = 22;
      uint64_t result = _os_log_send_and_compose_impl();
      if (result)
      {
        uint64_t v9 = (void *)result;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", result, 4, &v34, v31);
        free(v9);
        return SSFileLog();
      }
    }
  }
  else if ([v2 _isPaymentRestricted])
  {
    id v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10) {
      id v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v11 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v12 = v11 | 2;
    }
    else {
      int v12 = v11;
    }
    if (!os_log_type_enabled((os_log_t)[v10 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v12 &= 2u;
    }
    if (v12)
    {
      uint64_t v13 = objc_opt_class();
      id v14 = [*(id *)(a1 + 32) _clientIdentifier];
      int v34 = 138543618;
      uint64_t v35 = v13;
      __int16 v36 = 2112;
      id v37 = v14;
      LODWORD(v31) = 22;
      long long v30 = &v34;
      uint64_t v15 = _os_log_send_and_compose_impl();
      if (v15)
      {
        int v16 = (void *)v15;
        int v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v34, v31);
        free(v16);
        long long v30 = (int *)v17;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "_showPaymentsRestrictedAlert", v30);
    uint64_t v18 = *(void **)(a1 + 32);
    sub_100174DB0();
    return (uint64_t)[v18 _sendRestoreCompletedWithError:SSError()];
  }
  else
  {
    id v19 = objc_alloc_init(LoadCompletedMicroPaymentsOperation);
    *(void *)(*(void *)(a1 + 32) + 64) = v19;
    [*(id *)(*(void *)(a1 + 32) + 64) setApplicationUsername:*(void *)(a1 + 40)];
    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 64), "setClientIdentity:", objc_msgSend(*(id *)(a1 + 32), "_clientIdentity"));
    id v20 = +[SSWeakReference weakReferenceWithObject:*(void *)(a1 + 32)];
    uint64_t v21 = *(void **)(*(void *)(a1 + 32) + 64);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_100121360;
    void v33[3] = &unk_1003A3380;
    void v33[4] = v20;
    v33[5] = v19;
    [v21 setCompletionBlock:v33];
    __int16 v22 = *(void **)(*(void *)(a1 + 32) + 64);
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_10012139C;
    v32[3] = &unk_1003A7058;
    v32[4] = v20;
    void v32[5] = v19;
    [v22 setPaymentBatchBlock:v32];
    id v23 = +[SSLogConfig sharedDaemonConfig];
    if (!v23) {
      id v23 = +[SSLogConfig sharedConfig];
    }
    unsigned int v24 = [v23 shouldLog];
    if ([v23 shouldLogToDisk]) {
      int v25 = v24 | 2;
    }
    else {
      int v25 = v24;
    }
    if (!os_log_type_enabled((os_log_t)[v23 OSLogObject], OS_LOG_TYPE_INFO)) {
      v25 &= 2u;
    }
    if (v25)
    {
      uint64_t v26 = objc_opt_class();
      id v27 = [*(id *)(a1 + 32) _clientIdentifier];
      int v34 = 138543618;
      uint64_t v35 = v26;
      __int16 v36 = 2112;
      id v37 = v27;
      LODWORD(v31) = 22;
      uint64_t v28 = _os_log_send_and_compose_impl();
      if (v28)
      {
        uint64_t v29 = (void *)v28;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v34, v31);
        free(v29);
        SSFileLog();
      }
    }
    return (uint64_t)[(id)sub_10004FC58() addOperation:*(void *)(*(void *)(a1 + 32) + 64)];
  }
  return result;
}

id sub_100121360(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 _finishRestoreOperation:v3];
}

id sub_10012139C(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) object];
  uint64_t v5 = *(void *)(a1 + 40);

  return [v4 _mergeBatchResponse:a2 forRestoreOperation:v5];
}

id sub_10012144C(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = objc_alloc_init((Class)NSMutableOrderedSet);
  id v4 = objc_alloc_init((Class)NSMutableArray);
  id v5 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", @"downloadID", @"state", 0);
  uint64_t v27 = a1;
  uint64_t v28 = v2;
  id v6 = [*(id *)(a1 + 32) _copyDownloadsForDownloadIDs:*(void *)(a1 + 40) properties:v5 context:v2];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v31;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v31 != v9) {
          objc_enumerationMutation(v6);
        }
        unsigned int v11 = *(void **)(*((void *)&v30 + 1) + 8 * i);
        id v12 = objc_msgSend(objc_msgSend(v11, "state"), "integerValue");
        if (v12 == (id)4 || v12 == (id)2)
        {
          objc_msgSend(v11, "setState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 5));
          objc_msgSend(v3, "addObject:", objc_msgSend(v11, "downloadID"));
          objc_msgSend(v4, "addObject:", objc_msgSend((id)sub_100174DD0(), "changesetWithDownloadID:state:", objc_msgSend(v11, "downloadID"), 1));
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v8);
  }

  if ([v3 count])
  {
    id v14 = +[SSLogConfig sharedDaemonConfig];
    if (!v14) {
      id v14 = +[SSLogConfig sharedConfig];
    }
    unsigned int v15 = [v14 shouldLog];
    if ([v14 shouldLogToDisk]) {
      int v16 = v15 | 2;
    }
    else {
      int v16 = v15;
    }
    if (os_log_type_enabled((os_log_t)[v14 OSLogObject], OS_LOG_TYPE_INFO)) {
      int v17 = v16;
    }
    else {
      int v17 = v16 & 2;
    }
    if (v17)
    {
      uint64_t v18 = objc_opt_class();
      id v19 = [v3 count];
      id v20 = [*(id *)(v27 + 32) _clientIdentifier];
      int v34 = 138543874;
      uint64_t v35 = v18;
      __int16 v36 = 2048;
      id v37 = v19;
      __int16 v38 = 2112;
      id v39 = v20;
      LODWORD(v26) = 32;
      int v25 = &v34;
      uint64_t v21 = _os_log_send_and_compose_impl();
      if (v21)
      {
        __int16 v22 = (void *)v21;
        id v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v34, v26);
        free(v22);
        int v25 = (int *)v23;
        SSFileLog();
      }
    }
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_1001217E8;
    v29[3] = &unk_1003A5F80;
    v29[4] = v3;
    objc_msgSend(+[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase", v25), "modifyUsingTransactionBlock:", v29);
  }
  if ([v4 count]) {
    [*(id *)(v27 + 32) _sendDownloadChangesets:v4];
  }

  sub_10004BBA0(v28);
  return +[NSThread endManagedContextSession];
}

id sub_1001217E8(uint64_t a1, void *a2)
{
  return [a2 resetDownloadsWithIdentifiers:*(void *)(a1 + 32)];
}

id sub_100121868(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendDownloadChangesets:*(void *)(a1 + 40)];
}

id sub_1001218E8(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = objc_alloc_init((Class)NSMutableArray);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = *(void **)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = [v2 objectWithID:*(void *)(*((void *)&v11 + 1) + 8 * i)];
        if (v9) {
          [v3 addObject:v9];
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }
  if ([v3 count]) {
    [*(id *)(a1 + 40) _sendPaymentsUpdated:v3];
  }

  return +[NSThread endManagedContextSession];
}

id sub_100121AAC(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 16);
  if (!v2)
  {
    *(void *)(*(void *)(a1 + 32) + 16) = objc_alloc_init(StoreKitClientIdentity);
    id v2 = *(void **)(*(void *)(a1 + 32) + 16);
  }
  id result = [v2 setValuesWithPaymentQueueClient:*(void *)(a1 + 40)];
  if (*(void *)(*(void *)(a1 + 32) + 24))
  {
    id v4 = +[NSThread beginManagedContextSession];
    objc_msgSend(objc_msgSend(v4, "objectWithID:", *(void *)(*(void *)(a1 + 32) + 24)), "setValuesWithClientIdentity:", *(void *)(*(void *)(a1 + 32) + 16));
    sub_10004BBA0(v4);
    return +[NSThread endManagedContextSession];
  }
  return result;
}

void *sub_100121BD8(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result[4];
  id v3 = *(void **)(v2 + 8);
  if (v3 != (void *)result[5])
  {

    *(void *)(v1[4] + 8) = (id)v1[5];
    id result = [(id)v1[4] _reloadClientProperties];
    uint64_t v2 = v1[4];
    id v3 = *(void **)(v2 + 8);
  }
  if (v3 && *(void *)(v2 + 24))
  {
    id v4 = +[NSThread beginManagedContextSession];
    objc_msgSend(objc_msgSend(v4, "objectWithID:", *(void *)(v1[4] + 24)), "setValuesWithClientIdentity:", *(void *)(v1[4] + 16));
    sub_10004BBA0(v4);
    return +[NSThread endManagedContextSession];
  }
  return result;
}

id sub_100121D00(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v32 = objc_alloc_init((Class)NSMutableArray);
  id v3 = objc_alloc_init((Class)NSMutableArray);
  id v4 = [*(id *)(a1 + 32) _clientIdentifier];
  uint64_t v31 = a1;
  id v5 = objc_msgSend(*(id *)(a1 + 32), "_copyDownloadsForDownloadIDs:properties:context:", *(void *)(a1 + 40), +[MicroPaymentDownload propertiesForDownloadEntities](MicroPaymentDownload, "propertiesForDownloadEntities"), v2);
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id v6 = [v5 countByEnumeratingWithState:&v34 objects:v44 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v35;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v35 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v34 + 1) + 8 * i);
        if ((unint64_t)objc_msgSend(objc_msgSend(v10, "state"), "integerValue") <= 2)
        {
          long long v11 = [[Download alloc] initWithMicroPaymentDownload:v10 clientID:v4];
          if (v11)
          {
            long long v12 = v11;
            objc_msgSend(v10, "setState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 5));
            long long v13 = v3;
            uint64_t v14 = sub_100174DD0();
            id v15 = [v10 downloadID];
            int v16 = (void *)v14;
            id v3 = v13;
            objc_msgSend(v13, "addObject:", objc_msgSend(v16, "changesetWithDownloadID:state:", v15, 1));
            [v32 addObject:v12];
          }
        }
      }
      id v7 = [v5 countByEnumeratingWithState:&v34 objects:v44 count:16];
    }
    while (v7);
  }

  if ([v32 count])
  {
    id v17 = +[SSLogConfig sharedDaemonConfig];
    if (!v17) {
      id v17 = +[SSLogConfig sharedConfig];
    }
    unsigned int v18 = [v17 shouldLog];
    if ([v17 shouldLogToDisk]) {
      int v19 = v18 | 2;
    }
    else {
      int v19 = v18;
    }
    if (os_log_type_enabled((os_log_t)[v17 OSLogObject], OS_LOG_TYPE_INFO)) {
      int v20 = v19;
    }
    else {
      int v20 = v19 & 2;
    }
    if (v20)
    {
      uint64_t v21 = objc_opt_class();
      id v22 = [v32 count];
      int v38 = 138543874;
      uint64_t v39 = v21;
      __int16 v40 = 2048;
      id v41 = v22;
      __int16 v42 = 2112;
      id v43 = v4;
      LODWORD(v30) = 32;
      uint64_t v29 = &v38;
      uint64_t v23 = _os_log_send_and_compose_impl();
      if (v23)
      {
        unsigned int v24 = (void *)v23;
        int v25 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v38, v30);
        free(v24);
        uint64_t v29 = (int *)v25;
        SSFileLog();
      }
    }
    id v26 = +[DownloadsDatabase downloadsDatabase];
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_1001220B4;
    void v33[3] = &unk_1003A6550;
    uint64_t v27 = *(void *)(v31 + 32);
    void v33[4] = v32;
    v33[5] = v27;
    void v33[6] = v4;
    [v26 modifyUsingTransactionBlock:v33];
  }
  if ([v3 count]) {
    [*(id *)(v31 + 32) _sendDownloadChangesets:v3];
  }

  sub_10004BBA0(v2);
  return +[NSThread endManagedContextSession];
}

uint64_t sub_1001220B4(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  id v29 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v26 = a1;
  id v27 = objc_alloc_init((Class)NSMutableOrderedSet);
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v4 = *(void **)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v31;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v31 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v30 + 1) + 8 * i);
        id v10 = [v9 databaseID];
        long long v11 = [[DownloadEntity alloc] initWithPersistentID:v10 inDatabase:v3];
        if ([(DownloadEntity *)v11 existsInDatabase])
        {
          id v12 = [objc_alloc((Class)NSNumber) initWithLongLong:v10];
          [v27 addObject:v12];
          [a2 updateDownloadEntityWithIdentifier:v10 withDownload:v9];
        }
        else
        {
          [v29 addObject:v9];
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v6);
  }
  if ([v29 count])
  {
    id v13 = +[SSLogConfig sharedDaemonConfig];
    if (!v13) {
      id v13 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v13 shouldLog];
    if ([v13 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    if (os_log_type_enabled((os_log_t)[v13 OSLogObject], OS_LOG_TYPE_INFO)) {
      int v16 = v15;
    }
    else {
      int v16 = v15 & 2;
    }
    if (v16)
    {
      uint64_t v17 = objc_opt_class();
      id v18 = [v29 count];
      uint64_t v19 = *(void *)(v26 + 48);
      int v34 = 138543874;
      uint64_t v35 = v17;
      __int16 v36 = 2048;
      id v37 = v18;
      __int16 v38 = 2112;
      uint64_t v39 = v19;
      LODWORD(v25) = 32;
      unsigned int v24 = &v34;
      uint64_t v20 = _os_log_send_and_compose_impl();
      if (v20)
      {
        uint64_t v21 = (void *)v20;
        id v22 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v20, 4, &v34, v25);
        free(v21);
        unsigned int v24 = (int *)v22;
        SSFileLog();
      }
    }
    objc_msgSend(a2, "addDownloads:", v29, v24);
  }
  if ([v27 count]) {
    [a2 resetDownloadsWithIdentifiers:v27];
  }

  return 1;
}

id sub_100122424(uint64_t a1)
{
  id v2 = objc_msgSend(+[NSThread beginManagedContextSession](NSThread, "beginManagedContextSession"), "objectWithID:", *(void *)(a1 + 32));
  id v3 = objc_msgSend(objc_msgSend(v2, "state"), "integerValue");
  if ((unint64_t)v3 > 1)
  {
    if (v3 == (id)3)
    {
      id v12 = +[SSLogConfig sharedDaemonConfig];
      if (!v12) {
        id v12 = +[SSLogConfig sharedConfig];
      }
      unsigned int v13 = [v12 shouldLog];
      if ([v12 shouldLogToDisk]) {
        int v14 = v13 | 2;
      }
      else {
        int v14 = v13;
      }
      if (!os_log_type_enabled((os_log_t)[v12 OSLogObject], OS_LOG_TYPE_INFO)) {
        v14 &= 2u;
      }
      if (v14)
      {
        int v26 = 138543618;
        uint64_t v27 = objc_opt_class();
        __int16 v28 = 2112;
        id v29 = v2;
        LODWORD(v25) = 22;
        unsigned int v24 = &v26;
        uint64_t v15 = _os_log_send_and_compose_impl();
        if (v15)
        {
          int v16 = (void *)v15;
          uint64_t v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v26, v25);
          free(v16);
          unsigned int v24 = (int *)v17;
          SSFileLog();
        }
      }
      objc_msgSend(*(id *)(a1 + 40), "_sendFinishRequestForPayment:withCompletionBlock:", v2, *(void *)(a1 + 48), v24);
    }
  }
  else
  {
    unsigned int v4 = +[SSPrivacyController shouldDisplayPrivacyLinkWithIdentifier:SSPrivacyIdentifierAppStore];
    id v5 = +[SSLogConfig sharedDaemonConfig];
    id v6 = v5;
    if (v4)
    {
      if (!v5) {
        id v6 = +[SSLogConfig sharedConfig];
      }
      unsigned int v7 = [v6 shouldLog];
      if ([v6 shouldLogToDisk]) {
        int v8 = v7 | 2;
      }
      else {
        int v8 = v7;
      }
      if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
        v8 &= 2u;
      }
      if (v8)
      {
        int v26 = 138543618;
        uint64_t v27 = objc_opt_class();
        __int16 v28 = 2112;
        id v29 = v2;
        LODWORD(v25) = 22;
        unsigned int v24 = &v26;
        uint64_t v9 = _os_log_send_and_compose_impl();
        if (v9)
        {
          id v10 = (void *)v9;
          long long v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v26, v25);
          free(v10);
          unsigned int v24 = (int *)v11;
          SSFileLog();
        }
      }
      objc_msgSend(*(id *)(a1 + 40), "_showPrivacyPromptForPayment:withCompletionBlock:", v2, *(void *)(a1 + 48), v24);
    }
    else
    {
      if (!v5) {
        id v6 = +[SSLogConfig sharedConfig];
      }
      unsigned int v18 = [v6 shouldLog];
      if ([v6 shouldLogToDisk]) {
        int v19 = v18 | 2;
      }
      else {
        int v19 = v18;
      }
      if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
        v19 &= 2u;
      }
      if (v19)
      {
        int v26 = 138543618;
        uint64_t v27 = objc_opt_class();
        __int16 v28 = 2112;
        id v29 = v2;
        LODWORD(v25) = 22;
        unsigned int v24 = &v26;
        uint64_t v20 = _os_log_send_and_compose_impl();
        if (v20)
        {
          uint64_t v21 = (void *)v20;
          id v22 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v20, 4, &v26, v25);
          free(v21);
          unsigned int v24 = (int *)v22;
          SSFileLog();
        }
      }
      objc_msgSend(*(id *)(a1 + 40), "_sendBuyRequestForPayment:withCompletionBlock:", v2, *(void *)(a1 + 48), v24);
    }
  }
  return +[NSThread endManagedContextSession];
}

id sub_10012286C(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = [v2 objectWithID:*(void *)(a1 + 32)];
  if (v3)
  {
    id v4 = objc_msgSend(objc_msgSend(v3, "client"), "replacePayment:withPurchaseResponse:", v3, *(void *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 48), "_cancelDownloadsForDownloadIDs:", objc_msgSend(v4, "removedDownloadIDs"));
    [*(id *)(a1 + 48) _sendMergeResults:v4];
  }
  if ([*(id *)(a1 + 40) shouldTriggerQueueCheck]) {
    [*(id *)(a1 + 48) _refreshFromServerWithReason:2 accountIdentifier:0];
  }
  sub_10004BBA0(v2);

  return +[NSThread endManagedContextSession];
}

void sub_100122B50(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) copyProductsResponse];
  unsigned int v3 = [*(id *)(a1 + 32) success];
  id v4 = +[SSLogConfig sharedDaemonConfig];
  id v5 = v4;
  if (v3)
  {
    if (!v4) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v7 &= 2u;
    }
    if (v7)
    {
      uint64_t v8 = objc_opt_class();
      uint64_t v9 = *(void *)(a1 + 48);
      int v33 = 138543874;
      uint64_t v34 = v8;
      __int16 v35 = 2114;
      uint64_t v36 = v9;
      __int16 v37 = 2114;
      id v38 = [v2 products];
      LODWORD(v27) = 32;
      int v26 = &v33;
      goto LABEL_20;
    }
  }
  else
  {
    if (!v4) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v10 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v11 = v10 | 2;
    }
    else {
      int v11 = v10;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_ERROR)) {
      v11 &= 2u;
    }
    if (v11)
    {
      uint64_t v12 = objc_opt_class();
      uint64_t v13 = *(void *)(a1 + 48);
      id v14 = [*(id *)(a1 + 32) error];
      int v33 = 138543874;
      uint64_t v34 = v12;
      __int16 v35 = 2114;
      uint64_t v36 = v13;
      __int16 v37 = 2114;
      id v38 = v14;
      LODWORD(v27) = 32;
      int v26 = &v33;
LABEL_20:
      uint64_t v15 = (void *)_os_log_send_and_compose_impl();
      if (v15)
      {
        int v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v33, v27);
        free(v15);
        int v26 = (int *)v16;
        SSFileLog();
      }
    }
  }
  xpc_object_t v17 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v17, "0", 20007);
  xpc_object_t v18 = xpc_array_create(0, 0);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v19 = [v2 products];
  id v20 = [v19 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v21; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v22) {
          objc_enumerationMutation(v19);
        }
        id v24 = objc_msgSend(*(id *)(*((void *)&v28 + 1) + 8 * i), "copyXPCEncoding", v26);
        if (v24)
        {
          uint64_t v25 = v24;
          xpc_array_append_value(v18, v24);
          xpc_release(v25);
        }
      }
      id v21 = [v19 countByEnumeratingWithState:&v28 objects:v32 count:16];
    }
    while (v21);
  }
  xpc_dictionary_set_value(v17, "1", v18);
  xpc_release(v18);
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 8), "outputConnection"), "sendMessage:", v17);
  xpc_release(v17);
}

void sub_100122FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100122FCC(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 8);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_1001230B4(uint64_t a1)
{
  objc_opt_class();
  id v2 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if ([v2 length])
  {
    unsigned int v3 = &syslog_ptr;
    id v4 = +[NSThread beginManagedContextSession];
    id v5 = objc_msgSend(objc_msgSend(v4, "objectWithID:", *(void *)(*(void *)(a1 + 40) + 24)), "payments");
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    id v6 = [v5 countByEnumeratingWithState:&v41 objects:v51 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v42;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v42 != v8) {
          objc_enumerationMutation(v5);
        }
        unsigned int v10 = *(void **)(*((void *)&v41 + 1) + 8 * v9);
        if (objc_msgSend(objc_msgSend(v10, "matchingIdentifier"), "isEqualToString:", v2)) {
          break;
        }
        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v41 objects:v51 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      unsigned int v10 = 0;
    }
    id v11 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", v2, 0);
    if (v10)
    {
      id v12 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", v10, 0);
      [*(id *)(a1 + 40) _cancelDownloadsForPayments:v12];

      unint64_t v13 = (unint64_t)objc_msgSend(objc_msgSend(v10, "state"), "integerValue");
      if (v13 <= 8)
      {
        unint64_t v14 = v13;
        if (((1 << v13) & 0xC4) != 0)
        {
          id v15 = +[SSLogConfig sharedDaemonConfig];
          if (!v15) {
            id v15 = +[SSLogConfig sharedConfig];
          }
          unsigned int v16 = [v15 shouldLog];
          if ([v15 shouldLogToDisk]) {
            int v17 = v16 | 2;
          }
          else {
            int v17 = v16;
          }
          if (!os_log_type_enabled((os_log_t)[v15 OSLogObject], OS_LOG_TYPE_INFO)) {
            v17 &= 2u;
          }
          if (v17)
          {
            uint64_t v18 = objc_opt_class();
            int v45 = 138543618;
            uint64_t v46 = v18;
            __int16 v47 = 2112;
            unint64_t v48 = (unint64_t)v2;
            LODWORD(v40) = 22;
            uint64_t v39 = &v45;
            uint64_t v19 = _os_log_send_and_compose_impl();
            if (v19)
            {
              id v20 = (void *)v19;
              id v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v45, v40);
              free(v20);
              uint64_t v39 = (int *)v21;
              SSFileLog();
            }
          }
          objc_msgSend(v10, "setState:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 3, v39));
          if (!sub_10004BBA0(v4)) {
            goto LABEL_59;
          }
          goto LABEL_47;
        }
        if (((1 << v13) & 0x120) != 0)
        {
          id v25 = +[SSLogConfig sharedDaemonConfig];
          if (!v25) {
            id v25 = +[SSLogConfig sharedConfig];
          }
          unsigned int v26 = [v25 shouldLog];
          if ([v25 shouldLogToDisk]) {
            int v27 = v26 | 2;
          }
          else {
            int v27 = v26;
          }
          if (!os_log_type_enabled((os_log_t)[v25 OSLogObject], OS_LOG_TYPE_INFO)) {
            v27 &= 2u;
          }
          if (v27)
          {
            uint64_t v28 = objc_opt_class();
            int v45 = 138543874;
            uint64_t v46 = v28;
            __int16 v47 = 2048;
            unint64_t v48 = v14;
            __int16 v49 = 2112;
            __int16 v50 = v2;
            LODWORD(v40) = 32;
            uint64_t v39 = &v45;
            uint64_t v29 = _os_log_send_and_compose_impl();
            if (v29)
            {
              long long v30 = (void *)v29;
              long long v31 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v29, 4, &v45, v40);
              free(v30);
              uint64_t v39 = (int *)v31;
              SSFileLog();
            }
          }
          objc_msgSend(v4, "deleteObject:", v10, v39);
          unsigned int v3 = &syslog_ptr;
          if (!sub_10004BBA0(v4)) {
            goto LABEL_59;
          }
LABEL_47:
          [*(id *)(a1 + 40) _sendPaymentsRemoved:v11];
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
LABEL_59:

          [v3[348] endManagedContextSession];
          goto LABEL_60;
        }
      }
      id v32 = +[SSLogConfig sharedDaemonConfig];
      if (!v32) {
        id v32 = +[SSLogConfig sharedConfig];
      }
      unsigned int v33 = [v32 shouldLog];
      if ([v32 shouldLogToDisk]) {
        int v34 = v33 | 2;
      }
      else {
        int v34 = v33;
      }
      if (!os_log_type_enabled((os_log_t)[v32 OSLogObject], OS_LOG_TYPE_INFO)) {
        v34 &= 2u;
      }
      if (!v34)
      {
LABEL_58:
        objc_msgSend(*(id *)(a1 + 40), "_sendPaymentsRemoved:", v11, v39);
        goto LABEL_59;
      }
    }
    else
    {
      id v22 = +[SSLogConfig sharedDaemonConfig];
      if (!v22) {
        id v22 = +[SSLogConfig sharedConfig];
      }
      unsigned int v23 = [v22 shouldLog];
      if ([v22 shouldLogToDisk]) {
        int v24 = v23 | 2;
      }
      else {
        int v24 = v23;
      }
      if (!os_log_type_enabled((os_log_t)[v22 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
        v24 &= 2u;
      }
      if (!v24) {
        goto LABEL_58;
      }
    }
    uint64_t v35 = objc_opt_class();
    int v45 = 138543618;
    uint64_t v46 = v35;
    __int16 v47 = 2112;
    unint64_t v48 = (unint64_t)v2;
    LODWORD(v40) = 22;
    uint64_t v39 = &v45;
    uint64_t v36 = _os_log_send_and_compose_impl();
    if (v36)
    {
      __int16 v37 = (void *)v36;
      id v38 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v36, 4, &v45, v40);
      free(v37);
      uint64_t v39 = (int *)v38;
      SSFileLog();
    }
    goto LABEL_58;
  }
LABEL_60:
}

id sub_100123920(uint64_t a1, void *a2)
{
  return [a2 finishDownloadsWithIdentifiers:*(void *)(a1 + 32) finalPhase:SSDownloadPhaseCanceled];
}

void sub_100123DA4(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = [v2 objectWithID:*(void *)(a1 + 32)];
  unsigned __int8 v4 = [*(id *)(a1 + 40) success];
  id v5 = +[SSLogConfig sharedDaemonConfig];
  id v6 = v5;
  if (v4)
  {
    if (!v5) {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      int v22 = 138543618;
      uint64_t v23 = objc_opt_class();
      __int16 v24 = 2112;
      id v25 = v3;
      LODWORD(v21) = 22;
      id v20 = &v22;
      uint64_t v9 = _os_log_send_and_compose_impl();
      if (v9)
      {
        unsigned int v10 = (void *)v9;
        id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v22, v21);
        free(v10);
        id v20 = (int *)v11;
        SSFileLog();
      }
    }
    id v12 = objc_msgSend(objc_msgSend(v3, "client", v20), "replacePayment:withPurchaseResponse:", v3, objc_msgSend(*(id *)(a1 + 40), "response"));
    objc_msgSend(*(id *)(a1 + 48), "_cancelDownloadsForDownloadIDs:", objc_msgSend(v12, "removedDownloadIDs"));
    [*(id *)(a1 + 48) _sendMergeResults:v12];
  }
  else
  {
    if (!v5) {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v14 &= 2u;
    }
    if (v14)
    {
      uint64_t v15 = objc_opt_class();
      id v16 = [*(id *)(a1 + 40) error];
      int v22 = 138543874;
      uint64_t v23 = v15;
      __int16 v24 = 2114;
      id v25 = v16;
      __int16 v26 = 2112;
      id v27 = v3;
      LODWORD(v21) = 32;
      id v20 = &v22;
      uint64_t v17 = _os_log_send_and_compose_impl();
      if (v17)
      {
        uint64_t v18 = (void *)v17;
        uint64_t v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v22, v21);
        free(v18);
        id v20 = (int *)v19;
        SSFileLog();
      }
    }
    objc_msgSend(v3, "setFailedWithError:", objc_msgSend(*(id *)(a1 + 40), "error", v20));
    objc_msgSend(*(id *)(a1 + 48), "_sendPaymentsUpdated:", +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v3, 0));
  }
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "response"), "shouldTriggerQueueCheck")) {
    [*(id *)(a1 + 48) _refreshFromServerWithReason:2 accountIdentifier:0];
  }
  sub_10004BBA0(v2);
  +[NSThread endManagedContextSession];
  sub_100124120(*(void *)(a1 + 56), (char)[*(id *)(a1 + 40) success], (uint64_t)objc_msgSend(*(id *)(a1 + 40), "error"));
}

void sub_100124120(uint64_t a1, char a2, uint64_t a3)
{
  if (a1)
  {
    if (qword_100401E90 != -1) {
      dispatch_once(&qword_100401E90, &stru_1003A7140);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100126CDC;
    block[3] = &unk_1003A7168;
    char v7 = a2;
    void block[4] = a3;
    void block[5] = a1;
    dispatch_async((dispatch_queue_t)qword_100401E88, block);
  }
}

void sub_100124254(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = [v2 objectWithID:*(void *)(a1 + 32)];
  unsigned int v4 = [*(id *)(a1 + 40) success];
  id v5 = +[SSLogConfig sharedDaemonConfig];
  id v6 = v5;
  if (v4)
  {
    if (!v5) {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      int v20 = 138543618;
      uint64_t v21 = objc_opt_class();
      __int16 v22 = 2112;
      id v23 = v3;
      LODWORD(v19) = 22;
      uint64_t v18 = &v20;
      uint64_t v9 = _os_log_send_and_compose_impl();
      if (v9)
      {
        unsigned int v10 = (void *)v9;
        id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v20, v19);
        free(v10);
        uint64_t v18 = (int *)v11;
        SSFileLog();
      }
    }
    objc_msgSend(v2, "deleteObject:", v3, v18);
  }
  else
  {
    if (!v5) {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v12 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v13 = v12 | 2;
    }
    else {
      int v13 = v12;
    }
    if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
      v13 &= 2u;
    }
    if (v13)
    {
      int v20 = 138543618;
      uint64_t v21 = objc_opt_class();
      __int16 v22 = 2112;
      id v23 = v3;
      LODWORD(v19) = 22;
      uint64_t v18 = &v20;
      uint64_t v14 = _os_log_send_and_compose_impl();
      if (v14)
      {
        uint64_t v15 = (void *)v14;
        id v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v20, v19);
        free(v15);
        uint64_t v18 = (int *)v16;
        SSFileLog();
      }
    }
    uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 80);
    if (!v17)
    {
      *(void *)(*(void *)(a1 + 48) + 80) = objc_alloc_init((Class)NSMutableSet);
      uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 80);
    }
    objc_msgSend(v17, "addObject:", *(void *)(a1 + 32), v18);
  }
  sub_10004BBA0(v2);
  +[NSThread endManagedContextSession];
  sub_100124120(*(void *)(a1 + 56), (char)[*(id *)(a1 + 40) success], (uint64_t)objc_msgSend(*(id *)(a1 + 40), "error"));
}

id sub_1001247AC(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];

  return [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.StoreKitClient"];
}

void sub_100124860(uint64_t a1)
{
  +[ISLoadURLBagOperation incrementNetworkCounterForBagContext:](ISLoadURLBagOperation, "incrementNetworkCounterForBagContext:", +[SSURLBagContext contextWithBagType:0]);
  [*(id *)(*(void *)(a1 + 32) + 56) setCompletionBlock:0];

  *(void *)(*(void *)(a1 + 32) + 56) = 0;
  id v2 = +[NSThread beginManagedContextSession];
  id v3 = v2;
  if (*(void *)(*(void *)(a1 + 32) + 24)) {
    id v4 = objc_msgSend(v2, "objectWithID:");
  }
  else {
    id v4 = 0;
  }
  if (([*(id *)(a1 + 40) success] & 1) != 0
    || ([*(id *)(a1 + 40) error], (ISErrorIsEqual() & 1) == 0))
  {
    objc_msgSend(v4, "setLastQueueCheckDate:", +[NSDate date](NSDate, "date"));
  }
  unsigned __int8 v5 = [*(id *)(a1 + 40) success];
  id v6 = +[SSLogConfig sharedDaemonConfig];
  id v7 = v6;
  if (v5)
  {
    if (!v6) {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    if (!os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_INFO)) {
      v9 &= 2u;
    }
    if (v9)
    {
      uint64_t v10 = objc_opt_class();
      id v11 = [*(id *)(a1 + 32) _clientIdentifier];
      int v32 = 138543618;
      uint64_t v33 = v10;
      __int16 v34 = 2112;
      id v35 = v11;
      LODWORD(v30) = 22;
      uint64_t v29 = &v32;
      uint64_t v12 = _os_log_send_and_compose_impl();
      if (v12)
      {
        int v13 = (void *)v12;
        uint64_t v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v32, v30);
        free(v13);
        uint64_t v29 = (int *)v14;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "_setClientState:", 2, v29);
    id v15 = [*(id *)(a1 + 40) paymentsResponse];
    if (v15)
    {
      id v16 = v15;
      id v17 = [*(id *)(a1 + 40) reason];
      id v18 = [v4 mergeResponse:v16 withOptions:3];
      if ([v18 didChange])
      {
        objc_msgSend(*(id *)(a1 + 32), "_cancelDownloadsForDownloadIDs:", objc_msgSend(v18, "removedDownloadIDs"));
LABEL_34:
        [*(id *)(*(void *)(a1 + 32) + 8) sendCoalescedMessageWithIdentifier:20001];
        goto LABEL_35;
      }
      if (v17 == (id)3 || !v17) {
        goto LABEL_34;
      }
    }
  }
  else
  {
    if (!v6) {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    if (!os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v20 &= 2u;
    }
    if (v20)
    {
      uint64_t v21 = objc_opt_class();
      id v22 = [*(id *)(a1 + 32) _clientIdentifier];
      id v23 = [*(id *)(a1 + 40) error];
      int v32 = 138543874;
      uint64_t v33 = v21;
      __int16 v34 = 2112;
      id v35 = v22;
      __int16 v36 = 2114;
      id v37 = v23;
      LODWORD(v30) = 32;
      uint64_t v29 = &v32;
      uint64_t v24 = _os_log_send_and_compose_impl();
      if (v24)
      {
        id v25 = (void *)v24;
        __int16 v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v32, v30);
        free(v25);
        uint64_t v29 = (int *)v26;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "_setClientState:", 3, v29);
  }
LABEL_35:
  +[ISLoadURLBagOperation decrementNetworkCounterForBagContext:](ISLoadURLBagOperation, "decrementNetworkCounterForBagContext:", +[SSURLBagContext contextWithBagType:0]);
  sub_10004BBA0(v3);
  +[NSThread endManagedContextSession];
  uint64_t v27 = *(void *)(a1 + 32);
  uint64_t v28 = *(NSObject **)(v27 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100124CD0;
  block[3] = &unk_1003A33A8;
  void block[4] = v27;
  dispatch_async(v28, block);
}

id sub_100124CD0(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  uint64_t v3 = *(void *)(a1 + 32);

  return [(NSNotificationCenter *)v2 postNotificationName:@"StoreKitClientRefreshDidFinishNotification" object:v3];
}

id sub_100124D84(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 64) setCompletionBlock:0];
  [*(id *)(*(void *)(a1 + 32) + 64) setPaymentBatchBlock:0];

  *(void *)(*(void *)(a1 + 32) + 64) = 0;
  if (![*(id *)(a1 + 40) success]
    || ([*(id *)(a1 + 40) isPartialFailure] & 1) != 0)
  {
    id v2 = [*(id *)(a1 + 40) error];
    if (!v2) {
      id v2 = (id)SSError();
    }
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    if (!os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v5 &= 2u;
    }
    if (!v5) {
      return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v16);
    }
    uint64_t v6 = objc_opt_class();
    id v7 = [*(id *)(a1 + 32) _clientIdentifier];
    int v18 = 138543874;
    uint64_t v19 = v6;
    __int16 v20 = 2112;
    id v21 = v7;
    __int16 v22 = 2114;
    id v23 = v2;
    LODWORD(v17) = 32;
    id v16 = &v18;
    unsigned int v8 = (void *)_os_log_send_and_compose_impl();
    if (!v8) {
      return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v16);
    }
LABEL_24:
    uint64_t v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v18, v17);
    free(v8);
    id v16 = (int *)v14;
    SSFileLog();
    return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v16);
  }
  id v9 = +[SSLogConfig sharedDaemonConfig];
  if (!v9) {
    id v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  if (!os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_INFO)) {
    v11 &= 2u;
  }
  if (!v11)
  {
    id v2 = 0;
    return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v16);
  }
  uint64_t v12 = objc_opt_class();
  id v13 = [*(id *)(a1 + 32) _clientIdentifier];
  int v18 = 138543618;
  uint64_t v19 = v12;
  __int16 v20 = 2112;
  id v21 = v13;
  LODWORD(v17) = 22;
  id v16 = &v18;
  unsigned int v8 = (void *)_os_log_send_and_compose_impl();
  id v2 = 0;
  if (v8) {
    goto LABEL_24;
  }
  return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v16);
}

void *sub_1001251CC(void *result)
{
  if (*(void *)(result[4] + 24))
  {
    id v1 = result;
    id v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
      v4 &= 2u;
    }
    if (v4)
    {
      uint64_t v5 = objc_opt_class();
      id v6 = [(id)v1[4] _clientIdentifier];
      int v13 = 138543618;
      uint64_t v14 = v5;
      __int16 v15 = 2112;
      id v16 = v6;
      LODWORD(v12) = 22;
      int v11 = &v13;
      uint64_t v7 = _os_log_send_and_compose_impl();
      if (v7)
      {
        unsigned int v8 = (void *)v7;
        id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
        free(v8);
        int v11 = (int *)v9;
        SSFileLog();
      }
    }
    id v10 = objc_msgSend(objc_msgSend(+[NSThread beginManagedContextSession](NSThread, "beginManagedContextSession", v11), "objectWithID:", *(void *)(v1[4] + 24)), "mergeResponse:withOptions:", v1[5], 1);
    objc_msgSend((id)v1[4], "_cancelDownloadsForDownloadIDs:", objc_msgSend(v10, "removedDownloadIDs"));
    [(id)v1[4] _sendMergeResults:v10];
    return +[NSThread endManagedContextSession];
  }
  return result;
}

id sub_10012590C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 _finishLoadQueueOperation:v3];
}

id sub_100125C2C(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) object];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100125CD4;
  v7[3] = &unk_1003A70D0;
  BOOL v10 = (unint64_t)(a2 - 1) < 2;
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v8 = *(_OWORD *)(a1 + 32);
  long long v9 = v5;
  [v4 _dispatchAsync:v7];
  return [*(id *)(a1 + 48) setCompletion:0];
}

id sub_100125CD4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  id v3 = +[NSThread beginManagedContextSession];
  id v4 = [v3 objectWithID:*(void *)(a1 + 40)];
  int v5 = *(unsigned __int8 *)(a1 + 64);
  id v6 = +[SSLogConfig sharedDaemonConfig];
  id v7 = v6;
  if (v5)
  {
    if (!v6) {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    if (!os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v9 &= 2u;
    }
    if (v9)
    {
      int v23 = 138543618;
      uint64_t v24 = objc_opt_class();
      __int16 v25 = 2112;
      id v26 = v4;
      LODWORD(v22) = 22;
      id v21 = &v23;
      uint64_t v10 = _os_log_send_and_compose_impl();
      if (v10)
      {
        int v11 = (void *)v10;
        uint64_t v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v23, v22);
        free(v11);
        id v21 = (int *)v12;
        SSFileLog();
      }
    }
    objc_msgSend(v2, "_sendBuyRequestForPayment:withCompletionBlock:", v4, *(void *)(a1 + 56), v21);
  }
  else
  {
    if (!v6) {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    if (!os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v14 &= 2u;
    }
    if (v14)
    {
      uint64_t v15 = objc_opt_class();
      id v16 = [*(id *)(a1 + 48) error];
      int v23 = 138543874;
      uint64_t v24 = v15;
      __int16 v25 = 2114;
      id v26 = v16;
      __int16 v27 = 2112;
      id v28 = v4;
      LODWORD(v22) = 32;
      id v21 = &v23;
      uint64_t v17 = _os_log_send_and_compose_impl();
      if (v17)
      {
        int v18 = (void *)v17;
        uint64_t v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v23, v22);
        free(v18);
        id v21 = (int *)v19;
        SSFileLog();
      }
    }
    objc_msgSend(v4, "setFailedWithError:", objc_msgSend(*(id *)(a1 + 48), "error", v21));
    sub_10004BBA0(v3);
    objc_msgSend(v2, "_sendPaymentsUpdated:", +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v4, 0));
    sub_100124120(*(void *)(a1 + 56), (char)[*(id *)(a1 + 48) success], (uint64_t)objc_msgSend(*(id *)(a1 + 48), "error"));
  }
  return +[NSThread endManagedContextSession];
}

id sub_100126228(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "object"), "_completeBuyRequest:forPaymentID:withBlock:", *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
  id v2 = *(void **)(a1 + 40);

  return [v2 setCompletionBlock:0];
}

id sub_100126438(uint64_t a1)
{
  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "object"), "_completeFinishRequest:forPaymentID:withBlock:", *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
  id v2 = *(void **)(a1 + 40);

  return [v2 setCompletionBlock:0];
}

id sub_100126B18(uint64_t a1)
{
  objc_msgSend(objc_msgSend(+[NSThread beginManagedContextSession](NSThread, "beginManagedContextSession"), "objectWithID:", objc_msgSend(*(id *)(a1 + 32), "paymentID")), "transactionIdentifier");
  xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v2, "0", 20008);
  SSXPCDictionarySetCFObject();
  SSXPCDictionarySetCFObject();
  id v3 = dispatch_semaphore_create(0);
  id v4 = [*(id *)(*(void *)(a1 + 48) + 8) outputConnection];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100126C5C;
  v7[3] = &unk_1003A7120;
  uint64_t v5 = *(void *)(a1 + 56);
  void v7[4] = v3;
  void v7[5] = v5;
  [v4 sendMessage:v2 withReply:v7];
  if (dispatch_semaphore_wait(v3, 0x3B9ACA00uLL) >= 1) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
  }
  return +[NSThread endManagedContextSession];
}

intptr_t sub_100126C5C(uint64_t a1, xpc_object_t xdict)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = xpc_dictionary_get_BOOL(xdict, "0");
  id v3 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v3);
}

void sub_100126CB0(id a1)
{
  qword_100401E88 = (uint64_t)dispatch_queue_create("com.apple.itunesstored.StoreKitClient.completion", 0);
}

uint64_t sub_100126CDC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
}

void sub_100127984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1001279B0(uint64_t a1, uint64_t a2)
{
}

void sub_1001279C0(uint64_t a1)
{
}

id sub_1001279CC(uint64_t a1, void *a2, void *a3)
{
  if ([a2 isEqualToString:SSLookupParameterItemIdentifiers])
  {
    id v6 = *(void **)(a1 + 32);
    id v7 = [a3 componentsSeparatedByString:@","];
    return [v6 setItemIdentifiers:v7];
  }
  else
  {
    unsigned int v9 = [a2 isEqualToString:SSLookupParameterCaller];
    uint64_t v10 = *(void **)(a1 + 32);
    if (v9)
    {
      return [v10 _setCaller:a3];
    }
    else
    {
      return [v10 setValue:a3 forRequestParameter:a2];
    }
  }
}

id sub_100127AA8(uint64_t a1, uint64_t a2, void *a3)
{
  [*(id *)(a1 + 32) _setLookupResponse:a2];
  id result = a3;
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = a2 != 0;
  return result;
}

void sub_100127E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id sub_100127E9C(uint64_t a1, uint64_t a2, void *a3)
{
  [*(id *)(a1 + 32) _setLookupResponse:a2];
  id result = a3;
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = a2 != 0;
  return result;
}

void sub_1001289FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100128A38(uint64_t a1, uint64_t a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_array)
  {
    id v6 = +[NSString stringWithUTF8String:a2];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_100128B00;
    v8[3] = &unk_1003A71F8;
    uint64_t v10 = *(void *)(a1 + 48);
    void v8[4] = v6;
    long long v9 = *(_OWORD *)(a1 + 32);
    xpc_array_apply(object, v8);
  }
  return 1;
}

uint64_t sub_100128B00(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_dictionary)
  {
    uint64_t v5 = [[DownloadAsset alloc] initWithClientXPCAsset:object];
    if (v5)
    {
      id v6 = v5;
      id v7 = [(DownloadAsset *)v5 valueForProperty:@"url"];
      if (!v7
        || [(NSString *)[+[NSURL URLWithString:v7] scheme] caseInsensitiveCompare:@"file"] == NSOrderedSame)
      {
        ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
      if (*(unsigned char *)(v8 + 24))
      {
        unsigned __int8 v9 = 1;
      }
      else
      {
        unsigned __int8 v9 = objc_msgSend(-[DownloadAsset valueForProperty:](v6, "valueForProperty:", @"is_external"), "BOOLValue");
        uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
      }
      *(unsigned char *)(v8 + 24) = v9;
      [(DownloadAsset *)v6 setValue:*(void *)(a1 + 32) forProperty:@"asset_type"];
      -[DownloadAsset setValue:forProperty:](v6, "setValue:forProperty:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 40) count]), @"asset_order");
      [*(id *)(a1 + 40) addObject:v6];
    }
  }
  return 1;
}

void sub_1001297B0(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) sizeLimitForNetworkType:a2];
  id v5 = objc_alloc_init((Class)SSDownloadPolicyRule);
  [v5 addNetworkType:a2];
  [v5 setDownloadSizeLimit:v4];
  [*(id *)(*(void *)(a1 + 40) + 16) unionPolicyRule:v5];
}

BOOL sub_10012A4D4(void *a1)
{
  id v1 = a1;
  xpc_object_t v2 = [v1 domain];
  if ([v2 isEqualToString:AVFoundationErrorDomain])
  {
    BOOL v3 = [v1 code] == (id)-11903;
    goto LABEL_14;
  }
  if ([v2 isEqualToString:SSErrorDomain])
  {
    id v4 = [v1 code];
    BOOL v3 = 1;
    if (v4 != (id)8 && v4 != (id)133) {
LABEL_6:
    }
      BOOL v3 = sub_10012A5E4(v1);
  }
  else
  {
    if (![v2 isEqualToString:NSURLErrorDomain])
    {
      BOOL v3 = 0;
      goto LABEL_14;
    }
    id v5 = [v1 code];
    BOOL v3 = 1;
    if (((unint64_t)v5 + 1011 > 0xA || ((1 << (v5 - 13)) & 0x589) == 0)
      && v5 != (id)-1102
      && v5 != (id)-1100)
    {
      goto LABEL_6;
    }
  }
LABEL_14:

  return v3;
}

BOOL sub_10012A5E4(void *a1)
{
  id v1 = [a1 userInfo];
  xpc_object_t v2 = [v1 objectForKey:SSErrorHTTPStatusCodeKey];

  if (v2) {
    BOOL v3 = (uint64_t)[v2 integerValue] > 399;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

uint64_t sub_10012A64C(void *a1)
{
  id v1 = a1;
  if (ISErrorIsEqual()) {
    uint64_t IsEqual = 1;
  }
  else {
    uint64_t IsEqual = ISErrorIsEqual();
  }

  return IsEqual;
}

uint64_t sub_10012A6B0(void *a1)
{
  id v1 = a1;
  xpc_object_t v2 = [v1 domain];
  uint64_t v3 = (uint64_t)[v2 isEqualToString:AVFoundationErrorDomain];

  if (v3)
  {
    id v4 = [v1 code];
    uint64_t v3 = 1;
    if (v4 != (id)-11903 && v4 != (id)-11900)
    {
      id v5 = [v1 userInfo];
      id v6 = [v5 objectForKey:NSUnderlyingErrorKey];

      if ([v6 code] == (id)-12540)
      {
        id v7 = [v6 domain];
        uint64_t v3 = (uint64_t)[v7 isEqualToString:NSOSStatusErrorDomain];
      }
      else
      {
        uint64_t v3 = 0;
      }
    }
  }

  return v3;
}

uint64_t sub_10012A7A4()
{
  return ISErrorIsEqual() ^ 1;
}

void sub_10012EE70(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_10012EEF8(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 info];
  id v4 = [v3 objectForSetting:1];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v4 BOOLValue];
  id v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5)
  {
    id v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  uint64_t v8 = [v5 OSLogObject];
  if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
    v7 &= 2u;
  }
  if (!v7) {
    goto LABEL_11;
  }
  unsigned __int8 v9 = objc_opt_class();
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v11 = v9;
  +[NSNumber numberWithBool:v10];
  int v14 = 138543618;
  uint64_t v15 = v9;
  __int16 v16 = 2114;
  id v17 = (id)objc_claimAutoreleasedReturnValue();
  LODWORD(v13) = 22;
  uint64_t v12 = (void *)_os_log_send_and_compose_impl();

  if (v12)
  {
    uint64_t v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v14, v13);
    free(v12);
    SSFileLog();
LABEL_11:
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 112));
}

uint64_t sub_100132160(uint64_t a1, uint64_t a2)
{
  xpc_object_t v2 = +[NSString stringWithFormat:@"%s", a2];
  uint64_t v3 = [v2 hasSuffix:@".app/Info.plist"] ^ 1;

  return v3;
}

void sub_1001321BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    uint64_t v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  unsigned int v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_11;
  }
  BOMCopierUserData();
  *(_DWORD *)uint64_t v10 = 138412546;
  *(void *)&void v10[4] = objc_opt_class();
  *(_WORD *)&v10[12] = 2080;
  *(void *)&v10[14] = a2;
  id v7 = *(id *)&v10[4];
  LODWORD(v9) = 22;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    unsigned int v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v10, v9, *(_OWORD *)v10, *(void *)&v10[16]);
    free(v8);
    SSFileLog();
LABEL_11:
  }
}

void sub_100132350(uint64_t a1, uint64_t a2, int a3)
{
  int v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5)
  {
    int v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  uint64_t v8 = [v5 OSLogObject];
  if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
    v7 &= 2u;
  }
  if (v7)
  {
    BOMCopierUserData();
    *(_DWORD *)uint64_t v13 = 138412802;
    *(void *)&void v13[4] = objc_opt_class();
    *(_WORD *)&v13[12] = 1024;
    *(_DWORD *)&v13[14] = a3;
    *(_WORD *)&v13[18] = 2080;
    *(void *)&v13[20] = a2;
    id v9 = *(id *)&v13[4];
    LODWORD(v12) = 28;
    uint64_t v10 = (void *)_os_log_send_and_compose_impl();

    if (v10)
    {
      id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, v13, v12, *(_OWORD *)v13, *(_OWORD *)&v13[16]);
      free(v10);
      SSFileLog();
    }
  }
  else
  {
  }
}

uint64_t sub_1001324FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    uint64_t v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  unsigned int v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_11;
  }
  BOMCopierUserData();
  *(_DWORD *)id v11 = 138412546;
  *(void *)&void v11[4] = objc_opt_class();
  *(_WORD *)&v11[12] = 2080;
  *(void *)&v11[14] = a2;
  id v7 = *(id *)&v11[4];
  LODWORD(v10) = 22;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    unsigned int v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v11, v10, *(_OWORD *)v11, *(void *)&v11[16]);
    free(v8);
    SSFileLog();
LABEL_11:
  }
  return 0;
}

uint64_t sub_100132694(uint64_t a1, uint64_t a2, int a3)
{
  int v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5)
  {
    int v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  uint64_t v8 = [v5 OSLogObject];
  if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
    v7 &= 2u;
  }
  if (v7)
  {
    BOMCopierUserData();
    *(_DWORD *)int v14 = 138412802;
    *(void *)&void v14[4] = objc_opt_class();
    *(_WORD *)&unsigned char v14[12] = 1024;
    *(_DWORD *)&v14[14] = a3;
    *(_WORD *)&v14[18] = 2080;
    *(void *)&v14[20] = a2;
    id v9 = *(id *)&v14[4];
    LODWORD(v13) = 28;
    uint64_t v10 = (void *)_os_log_send_and_compose_impl();

    if (v10)
    {
      id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, v14, v13, *(_OWORD *)v14, *(_OWORD *)&v14[16]);
      free(v10);
      SSFileLog();
    }
  }
  else
  {
  }
  return 2;
}

void sub_100133494(id a1)
{
  id v3 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", CPSharedResourcesDirectory(), @"Media", @"Downloads", @"scratch", 0);
  uint64_t v1 = +[NSString pathWithComponents:v3];
  xpc_object_t v2 = (void *)qword_100401E98;
  qword_100401E98 = v1;
}

void sub_1001348AC(id a1)
{
  uint64_t v1 = (void *)qword_100401EA8;
  qword_100401EA8 = (uint64_t)&off_1003C9F68;
}

uint64_t sub_100134B28()
{
  qword_100401EB8 = (uint64_t)objc_alloc_init((Class)objc_opt_class());

  return _objc_release_x1();
}

void sub_100134C54(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 56))
  {
    id v2 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v3 = *(void *)(a1 + 32);
    unsigned int v4 = *(void **)(v3 + 56);
    *(void *)(v3 + 56) = v2;
  }
  int v5 = objc_alloc_init(SpringBoardPendingAlert);
  [(SpringBoardPendingAlert *)v5 setCompletionBlock:*(void *)(a1 + 56)];
  [(SpringBoardPendingAlert *)v5 setOptions:*(void *)(a1 + 40)];
  unsigned int v6 = [*(id *)(a1 + 48) objectForKey:SBSUIRemoteAlertOptionViewControllerClass];
  [(SpringBoardPendingAlert *)v5 setViewControllerName:v6];

  objc_initWeak(&location, *(id *)(a1 + 32));
  int v7 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, *(dispatch_queue_t *)(*(void *)(a1 + 32) + 16));
  dispatch_time_t v8 = dispatch_time(0, 10000000000);
  dispatch_source_set_timer(v7, v8, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472;
  handler[2] = sub_100134EAC;
  handler[3] = &unk_1003A57C0;
  objc_copyWeak(&v17, &location);
  id v9 = v5;
  uint64_t v15 = v9;
  id v16 = *(id *)(a1 + 56);
  dispatch_source_set_event_handler(v7, handler);
  [(SpringBoardPendingAlert *)v9 setTimeoutTimer:v7];
  [*(id *)(*(void *)(a1 + 32) + 56) addObject:v9];
  dispatch_resume(v7);
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(NSObject **)(v10 + 88);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100134FA4;
  v12[3] = &unk_1003A3268;
  void v12[4] = v10;
  id v13 = *(id *)(a1 + 48);
  dispatch_async(v11, v12);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
}

void sub_100134E90(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100134EAC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained[7] indexOfObjectIdenticalTo:*(void *)(a1 + 32)];
    if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      id v5 = v4;
      [*(id *)(a1 + 32) setTimeoutTimer:0];
      [v3[7] removeObjectAtIndex:v5];
      unsigned int v6 = *(void **)(a1 + 40);
      if (v6)
      {
        int v7 = v3[4];
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100134F90;
        block[3] = &unk_1003A31C8;
        id v9 = v6;
        dispatch_async(v7, block);
      }
    }
  }
}

uint64_t sub_100134F90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100134FA4(uint64_t a1)
{
  uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    uint64_t v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  unsigned int v6 = objc_opt_class();
  uint64_t v7 = *(void *)(a1 + 40);
  *(_DWORD *)uint64_t v12 = 138412546;
  *(void *)&void v12[4] = v6;
  *(_WORD *)&v12[12] = 2112;
  *(void *)&v12[14] = v7;
  id v8 = v6;
  LODWORD(v11) = 22;
  id v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, v12, v11, *(_OWORD *)v12, *(void *)&v12[16]);
    free(v9);
    SSFileLog();
LABEL_11:
  }
  return SBSUIActivateRemoteAlert();
}

void sub_100135144(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _applicationStateMonitor];
  id v2 = [v3 applicationStateForApplication:*(void *)(a1 + 40)];
  if (v2) {
    [*(id *)(a1 + 32) _setApplicationState:v2 forClientID:*(void *)(a1 + 40)];
  }
}

void sub_100135240(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = v1[5];
  if (!v2)
  {
    if (!v1[12])
    {
      id v4 = objc_alloc_init((Class)NSMutableDictionary);
      uint64_t v5 = *(void *)(a1 + 32);
      unsigned int v6 = *(void **)(v5 + 96);
      *(void *)(v5 + 96) = v4;

      uint64_t v1 = *(void **)(a1 + 32);
    }
    uint64_t v7 = v1[11];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_100135318;
    v8[3] = &unk_1003A31F0;
    void v8[4] = v1;
    id v9 = *(id *)(a1 + 40);
    dispatch_async(v7, v8);

    uint64_t v1 = *(void **)(a1 + 32);
    uint64_t v2 = v1[5];
  }
  v1[5] = v2 + 1;
}

void sub_100135318(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _applicationStateMonitor];
  [v2 updateInterestedBundleIDs:0 states:BKSApplicationStateAll];
  id v3 = objc_alloc_init((Class)NSMutableDictionary);
  id v4 = +[LSApplicationWorkspace defaultWorkspace];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100135494;
  v11[3] = &unk_1003A7328;
  id v5 = v2;
  id v12 = v5;
  id v6 = v3;
  id v13 = v6;
  [v4 enumerateBundlesOfType:1 block:v11];

  [*(id *)(a1 + 32) _setApplicationStatesWithDictionary:v6];
  uint64_t v7 = *(void **)(a1 + 40);
  if (v7)
  {
    id v8 = *(NSObject **)(*(void *)(a1 + 32) + 32);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100135520;
    block[3] = &unk_1003A31C8;
    id v10 = v7;
    dispatch_async(v8, block);
  }
}

void sub_100135494(uint64_t a1, void *a2)
{
  id v5 = [a2 bundleIdentifier];
  unsigned int v3 = objc_msgSend(*(id *)(a1 + 32), "applicationStateForApplication:");
  if (v3)
  {
    id v4 = [objc_alloc((Class)NSNumber) initWithInteger:v3];
    [*(id *)(a1 + 40) setObject:v4 forKey:v5];
  }
}

uint64_t sub_100135520(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100135530(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100135540(uint64_t a1)
{
}

void sub_1001355BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 40);
  if (v2 >= 1)
  {
    if (v2 == 1)
    {
      [*(id *)(v1 + 96) removeAllObjects];
      uint64_t v4 = *(void *)(a1 + 32);
      id v5 = *(NSObject **)(v4 + 88);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100135668;
      block[3] = &unk_1003A3140;
      void block[4] = v4;
      dispatch_async(v5, block);
      uint64_t v1 = *(void *)(a1 + 32);
      uint64_t v2 = *(void *)(v1 + 40);
    }
    *(void *)(v1 + 40) = v2 - 1;
  }
}

void sub_100135668(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) _applicationStateMonitor];
  id v2 = [*(id *)(*(void *)(a1 + 32) + 48) count];
  unsigned int v3 = BKSApplicationStateAll;
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 48);
  if (v4)
  {
    id v5 = [v4 allObjects];
  }
  else
  {
    id v5 = 0;
  }
  if (v2) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = 0;
  }
  [v7 updateInterestedBundleIDs:v5 states:v6];
}

id sub_100135800(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 96);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10013587C;
  v3[3] = &unk_1003A73A0;
  v3[4] = *(void *)(a1 + 40);
  return [v1 enumerateKeysAndObjectsUsingBlock:v3];
}

void sub_10013587C(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v8 = a2;
  if (([a3 unsignedIntValue] & 0x28) != 0)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_100135AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100135B14(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100135E94(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 24);
  *(void *)(v1 + 24) = 0;
}

void sub_100136200(id *a1)
{
  id v2 = [a1[4] appIdentifier];
  if ([a1[4] shouldLaunchApp])
  {
    id v3 = objc_alloc((Class)NSMutableDictionary);
    id v4 = objc_msgSend(v3, "initWithObjectsAndKeys:", &__kCFBooleanTrue, FBSOpenApplicationOptionKeyActivateSuspended, 0);
    id v5 = [a1[4] launchOptions];
    if (v5) {
      [v4 setObject:v5 forKey:FBSOpenApplicationOptionKeyPayloadOptions];
    }
    id v6 = a1[5];
    id v56 = 0;
    unsigned int v7 = [v6 launchApplicationWithIdentifier:v2 options:v4 error:&v56];
    id v8 = v56;
    id v9 = v8;
    if (v7)
    {

      goto LABEL_6;
    }
    id v21 = +[SSLogConfig sharedDaemonConfig];
    if (!v21)
    {
      id v21 = +[SSLogConfig sharedConfig];
    }
    unsigned int v22 = [v21 shouldLog];
    if ([v21 shouldLogToDisk]) {
      int v23 = v22 | 2;
    }
    else {
      int v23 = v22;
    }
    uint64_t v24 = [v21 OSLogObject];
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
      v23 &= 2u;
    }
    if (v23)
    {
      __int16 v25 = objc_opt_class();
      int v57 = 138412802;
      id v58 = v25;
      __int16 v59 = 2112;
      uint64_t v60 = v2;
      __int16 v61 = 2112;
      double v62 = *(double *)&v9;
      id v26 = v25;
      LODWORD(v50) = 32;
      __int16 v49 = &v57;
      __int16 v27 = (void *)_os_log_send_and_compose_impl();

      if (!v27)
      {
LABEL_33:

        goto LABEL_34;
      }
      uint64_t v24 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, &v57, v50);
      free(v27);
      __int16 v49 = (int *)v24;
      SSFileLog();
    }

    goto LABEL_33;
  }
LABEL_6:
  unsigned int v55 = 0;
  if ([a1[5] _getProcessID:&v55 forApplicationIdentifier:v2])
  {
    id v10 = [a1[4] processAssertionIdentifier];
    [a1[4] processAssertionInterval];
    double v12 = v11;
    id v13 = [a1[4] processAssertionReason];
    int v14 = v13;
    if (!v10 || !v13 || v12 <= 2.22044605e-16)
    {

      goto LABEL_54;
    }
    if ([v13 isEqualToString:ProcessAssertionReasonBackgroundDownload])
    {
      uint64_t v15 = 10;
    }
    else if ([v14 isEqualToString:ProcessAssertionReasonTaskCompletion])
    {
      uint64_t v15 = 4;
    }
    else
    {
      uint64_t v15 = 0;
    }
    id v28 = +[SSLogConfig sharedDaemonConfig];
    if (!v28)
    {
      id v28 = +[SSLogConfig sharedConfig];
    }
    unsigned int v29 = [v28 shouldLog];
    if ([v28 shouldLogToDisk]) {
      int v30 = v29 | 2;
    }
    else {
      int v30 = v29;
    }
    long long v31 = [v28 OSLogObject];
    if (!os_log_type_enabled(v31, OS_LOG_TYPE_INFO)) {
      v30 &= 2u;
    }
    if (v30)
    {
      int v32 = objc_opt_class();
      int v57 = 138413058;
      id v58 = v32;
      __int16 v59 = 2112;
      uint64_t v60 = v10;
      __int16 v61 = 2048;
      double v62 = v12;
      __int16 v63 = 2112;
      uint64_t v64 = v14;
      id v33 = v32;
      LODWORD(v50) = 42;
      __int16 v49 = &v57;
      __int16 v34 = (void *)_os_log_send_and_compose_impl();

      if (!v34) {
        goto LABEL_52;
      }
      long long v31 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v34, 4, &v57, v50);
      free(v34);
      __int16 v49 = (int *)v31;
      SSFileLog();
    }

LABEL_52:
    id v35 = objc_alloc((Class)BKSProcessAssertion);
    id v36 = [v35 initWithPID:v55 flags:1 reason:v15 name:v10];
    if ([v36 valid])
    {
      dispatch_time_t v37 = dispatch_time(0, (uint64_t)(v12 * 1000000000.0));
      id v38 = a1[5];
      uint64_t v39 = *((void *)v38 + 2);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1001369A0;
      block[3] = &unk_1003A7418;
      void block[4] = v38;
      id v52 = v10;
      id v53 = a1[6];
      id v54 = v36;
      id v40 = v36;
      id v41 = v10;
      dispatch_after(v37, v39, block);

      goto LABEL_54;
    }
    long long v42 = +[SSLogConfig sharedDaemonConfig];
    if (!v42)
    {
      long long v42 = +[SSLogConfig sharedConfig];
    }
    unsigned int v43 = objc_msgSend(v42, "shouldLog", v49);
    if ([v42 shouldLogToDisk]) {
      int v44 = v43 | 2;
    }
    else {
      int v44 = v43;
    }
    int v45 = [v42 OSLogObject];
    if (!os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT)) {
      v44 &= 2u;
    }
    if (v44)
    {
      uint64_t v46 = objc_opt_class();
      int v57 = 138412546;
      id v58 = v46;
      __int16 v59 = 2112;
      uint64_t v60 = v10;
      id v47 = v46;
      LODWORD(v50) = 22;
      __int16 v49 = &v57;
      unint64_t v48 = (void *)_os_log_send_and_compose_impl();

      if (!v48)
      {
LABEL_66:

        goto LABEL_36;
      }
      int v45 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v48, 4, &v57, v50);
      free(v48);
      __int16 v49 = (int *)v45;
      SSFileLog();
    }

    goto LABEL_66;
  }
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4)
  {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v16 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v17 = v16 | 2;
  }
  else {
    int v17 = v16;
  }
  id v5 = [v4 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    v17 &= 2u;
  }
  if (!v17) {
    goto LABEL_34;
  }
  uint64_t v18 = objc_opt_class();
  int v57 = 138412546;
  id v58 = v18;
  __int16 v59 = 2112;
  uint64_t v60 = v2;
  id v19 = v18;
  LODWORD(v50) = 22;
  __int16 v49 = &v57;
  __int16 v20 = (void *)_os_log_send_and_compose_impl();

  if (v20)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v20, 4, &v57, v50);
    free(v20);
    __int16 v49 = (int *)v5;
    SSFileLog();
LABEL_34:
  }
LABEL_36:
  objc_msgSend(a1[6], "releaseKeepAliveAssertion:", @"AppWakeup", v49);
LABEL_54:
}

id sub_1001369A0(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  id v6 = objc_opt_class();
  uint64_t v7 = *(void *)(a1 + 40);
  *(_DWORD *)double v12 = 138412546;
  *(void *)&void v12[4] = v6;
  *(_WORD *)&v12[12] = 2112;
  *(void *)&v12[14] = v7;
  id v8 = v6;
  LODWORD(v11) = 22;
  id v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, v12, v11, *(_OWORD *)v12, *(void *)&v12[16]);
    free(v9);
    SSFileLog();
LABEL_11:
  }
  [*(id *)(a1 + 48) releaseKeepAliveAssertion:@"AppWakeup"];
  return [*(id *)(a1 + 56) invalidate];
}

void sub_100136C0C(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  objc_opt_class();
  unsigned int v3 = (void *)SSXPCDictionaryCopyObjectWithClass();
  if (v3)
  {
    uint64_t v4 = (uint64_t)[*(id *)(*(void *)(a1 + 40) + 56) count];
    if (v4 >= 1)
    {
      uint64_t v5 = v4;
      uint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = [*(id *)(*(void *)(a1 + 40) + 56) objectAtIndex:v6];
        id v8 = [v7 viewControllerName];
        unsigned int v9 = [v8 isEqualToString:v3];

        if (v9) {
          break;
        }

        if (v5 == ++v6) {
          goto LABEL_10;
        }
      }
      id v10 = [[SpringBoardAlertProxy alloc] initWithMessage:*(void *)(a1 + 32)];
      uint64_t v11 = [v7 options];
      SSXPCDictionarySetObject();

      double v12 = [(SpringBoardAlertProxy *)v10 XPCEndpoint];
      xpc_dictionary_set_value(reply, "2", v12);

      id v13 = [v7 completionBlock];
      int v14 = v13;
      if (v13)
      {
        uint64_t v15 = *(NSObject **)(*(void *)(a1 + 40) + 32);
        unsigned int v16 = _NSConcreteStackBlock;
        uint64_t v17 = 3221225472;
        uint64_t v18 = sub_100136E24;
        id v19 = &unk_1003A4FC0;
        id v21 = v13;
        __int16 v20 = v10;
        dispatch_async(v15, &v16);
        objc_msgSend(v7, "setCompletionBlock:", 0, v16, v17, v18, v19);
      }
      [v7 cancelTimeoutTimer];
      [*(id *)(*(void *)(a1 + 40) + 56) removeObjectAtIndex:v6];
    }
  }
LABEL_10:
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
}

uint64_t sub_100136E24(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id sub_1001375A4(uint64_t a1, void *a2)
{
  return [a2 sendMessage:*(void *)(a1 + 32)];
}

void sub_100137670(uint64_t a1, void *a2)
{
  if (a2)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_100137774;
    v6[3] = &unk_1003A7468;
    uint64_t v4 = *(void *)(a1 + 32);
    id v7 = *(id *)(a1 + 40);
    [a2 sendMessage:v4 withReply:v6];
  }
  else
  {
    SSError();
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

uint64_t sub_100137774(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0);
  }
  return result;
}

void sub_100137828(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 64) == *(void *)(a1 + 40))
  {
    id v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2)
    {
      id v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    id v5 = [v2 OSLogObject];
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
      v4 &= 2u;
    }
    if (v4)
    {
      uint64_t v6 = objc_opt_class();
      uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 64);
      *(_DWORD *)id v13 = 138412546;
      *(void *)&void v13[4] = v6;
      *(_WORD *)&v13[12] = 2112;
      *(void *)&v13[14] = v7;
      id v8 = v6;
      LODWORD(v12) = 22;
      unsigned int v9 = (void *)_os_log_send_and_compose_impl();

      if (!v9)
      {
LABEL_13:

        [*(id *)(*(void *)(a1 + 32) + 64) setDisconnectBlock:0];
        uint64_t v10 = *(void *)(a1 + 32);
        uint64_t v11 = *(void **)(v10 + 64);
        *(void *)(v10 + 64) = 0;

        return;
      }
      id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, v13, v12, *(_OWORD *)v13, *(void *)&v13[16]);
      free(v9);
      SSFileLog();
    }

    goto LABEL_13;
  }
}

void sub_100137AD0(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_100137D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100137D74(uint64_t a1, void *a2)
{
  id v6 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v3 = [v6 objectForKey:*(void *)(a1 + 32)];
    uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100137F20(uint64_t a1)
{
  xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v2 = (_xpc_endpoint_s *)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = v2;
  if (v2 && xpc_get_type(v2) == (xpc_type_t)&_xpc_type_endpoint)
  {
    xpc_connection_t v4 = xpc_connection_create_from_endpoint(v3);
    if (!v4)
    {
LABEL_15:

      goto LABEL_16;
    }
    [*(id *)(*(void *)(a1 + 40) + 64) setDisconnectBlock:0];
    id v5 = [objc_alloc((Class)SSXPCConnection) initWithXPCConnection:v4];
    objc_storeStrong((id *)(*(void *)(a1 + 40) + 64), v5);
    objc_initWeak(&location, *(id *)(a1 + 40));
    id v6 = *(void **)(*(void *)(a1 + 40) + 64);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    void v19[2] = sub_100138254;
    v19[3] = &unk_1003A4FE8;
    objc_copyWeak(&v21, &location);
    id v7 = v5;
    id v20 = v7;
    [v6 setDisconnectBlock:v19];
    long long v8 = (void *)SSXPCCreateMessageDictionary();
    [*(id *)(*(void *)(a1 + 40) + 64) sendMessage:v8];
    long long v9 = +[SSLogConfig sharedDaemonConfig];
    if (!v9)
    {
      long long v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v10 = [v9 shouldLog];
    unsigned int v11 = [v9 shouldLogToDisk];
    uint64_t v12 = [v9 OSLogObject];
    id v13 = v12;
    if (v11) {
      v10 |= 2u;
    }
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
      v10 &= 2u;
    }
    if (v10)
    {
      int v14 = objc_opt_class();
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 64);
      int v23 = 138412546;
      uint64_t v24 = v14;
      __int16 v25 = 2112;
      uint64_t v26 = v15;
      id v16 = v14;
      LODWORD(v18) = 22;
      uint64_t v17 = (void *)_os_log_send_and_compose_impl();

      if (!v17)
      {
LABEL_14:

        [*(id *)(a1 + 40) _fireDeferredPluginBlocksWithConnection:*(void *)(*(void *)(a1 + 40) + 64)];
        objc_destroyWeak(&v21);
        objc_destroyWeak(&location);

        goto LABEL_15;
      }
      id v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v23, v18);
      free(v17);
      SSFileLog();
    }

    goto LABEL_14;
  }
LABEL_16:
}

void sub_100138218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100138254(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _disconnectPluginConnection:*(void *)(a1 + 32)];
}

void sub_10013833C(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 64);
  uint64_t v3 = *(void **)(a1 + 32);
  if (v2)
  {
    xpc_connection_t v4 = v3[4];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001386B8;
    block[3] = &unk_1003A4FC0;
    id v30 = *(id *)(a1 + 40);
    id v29 = v2;
    dispatch_async(v4, block);

    id v5 = v30;
    goto LABEL_19;
  }
  if (!v3[9])
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    long long v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = (id)objc_opt_class();
      id v10 = *(id *)((char *)location + 4);
      LODWORD(v25) = 12;
      p_isa = location;
      unsigned int v11 = (void *)_os_log_send_and_compose_impl();

      if (!v11)
      {
LABEL_15:

        DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
        CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.itunesstored.sbplugin.requestconnection", 0, 0, 1u);
        dispatch_source_t v13 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, *(dispatch_queue_t *)(*(void *)(a1 + 32) + 16));
        uint64_t v14 = *(void *)(a1 + 32);
        uint64_t v15 = *(void **)(v14 + 72);
        *(void *)(v14 + 72) = v13;

        id v16 = *(NSObject **)(*(void *)(a1 + 32) + 72);
        dispatch_time_t v17 = dispatch_time(0, 10000000000);
        dispatch_source_set_timer(v16, v17, 0, 0);
        objc_initWeak(location, *(id *)(a1 + 32));
        uint64_t v18 = *(NSObject **)(*(void *)(a1 + 32) + 72);
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472;
        handler[2] = sub_1001386CC;
        handler[3] = &unk_1003A4248;
        objc_copyWeak(&v27, location);
        dispatch_source_set_event_handler(v18, handler);
        dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 72));
        objc_destroyWeak(&v27);
        objc_destroyWeak(location);
        uint64_t v3 = *(void **)(a1 + 32);
        goto LABEL_16;
      }
      long long v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, location, v25);
      free(v11);
      p_isa = (id *)&v9->isa;
      SSFileLog();
    }

    goto LABEL_15;
  }
LABEL_16:
  if (!v3[10])
  {
    id v19 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v20 = *(void *)(a1 + 32);
    id v21 = *(void **)(v20 + 80);
    *(void *)(v20 + 80) = v19;
  }
  id v5 = objc_msgSend(*(id *)(a1 + 40), "copy", p_isa);
  unsigned int v22 = *(void **)(*(void *)(a1 + 32) + 80);
  id v23 = objc_retainBlock(v5);
  [v22 addObject:v23];

LABEL_19:
}

uint64_t sub_1001386B8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1001386CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _timeoutPluginConnection];
}

void sub_1001389BC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 96) addEntriesFromDictionary:*(void *)(a1 + 40)];
  id v2 = +[NSNotificationCenter defaultCenter];
  uint64_t v3 = *(void *)(a1 + 32);
  xpc_connection_t v4 = *(NSObject **)(v3 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_100138A70;
  v6[3] = &unk_1003A3268;
  void v6[4] = v3;
  id v7 = v2;
  id v5 = v2;
  dispatch_async(v4, v6);
}

void sub_100138A70(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 96);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100138B08;
  v5[3] = &unk_1003A7530;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  uint64_t v7 = v4;
  [v2 enumerateKeysAndObjectsUsingBlock:v5];
}

void sub_100138B08(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = objc_alloc_init((Class)NSMutableDictionary);
  [v7 setObject:v6 forKey:BKSApplicationStateDisplayIDKey];

  [v7 setObject:v5 forKey:BKSApplicationStateKey];
  [*(id *)(a1 + 32) postNotificationName:@"SpringBoardUtilityApplicationStateChangeNotification" object:*(void *)(a1 + 40) userInfo:v7];
}

id sub_10013989C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = +[SSLogConfig sharedStoreServicesConfig];
  int v8 = (void *)v7;
  if (v6)
  {
    if (!v7)
    {
      int v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v9 = [v8 shouldLog];
    if ([v8 shouldLogToDisk]) {
      int v10 = v9 | 2;
    }
    else {
      int v10 = v9;
    }
    unsigned int v11 = [v8 OSLogObject];
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      v10 &= 2u;
    }
    if (v10)
    {
      uint64_t v12 = objc_opt_class();
      uint64_t v13 = *(void *)(a1 + 40);
      *(_DWORD *)long long v31 = 138543874;
      *(void *)&void v31[4] = v12;
      *(_WORD *)&v31[12] = 2114;
      *(void *)&v31[14] = v13;
      *(_WORD *)&v31[22] = 2114;
      id v32 = v6;
      id v14 = v12;
      LODWORD(v30) = 32;
      uint64_t v15 = (void *)_os_log_send_and_compose_impl();

      if (!v15)
      {
LABEL_13:

        goto LABEL_26;
      }
      unsigned int v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, v31, v30, *(_OWORD *)v31, *(void *)&v31[16], v32);
      free(v15);
      SSFileLog();
    }

    goto LABEL_13;
  }
  if (!v7)
  {
    int v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v16 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v17 = v16 | 2;
  }
  else {
    int v17 = v16;
  }
  uint64_t v18 = [v8 OSLogObject];
  if (!os_log_type_enabled(v18, OS_LOG_TYPE_INFO)) {
    v17 &= 2u;
  }
  if (!v17) {
    goto LABEL_24;
  }
  id v19 = objc_opt_class();
  uint64_t v20 = *(void *)(a1 + 40);
  *(_DWORD *)long long v31 = 138543618;
  *(void *)&void v31[4] = v19;
  *(_WORD *)&v31[12] = 2114;
  *(void *)&v31[14] = v20;
  id v21 = v19;
  LODWORD(v30) = 22;
  unsigned int v22 = (void *)_os_log_send_and_compose_impl();

  if (v22)
  {
    uint64_t v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, v31, v30, *(void *)v31, *(_OWORD *)&v31[8]);
    free(v22);
    SSFileLog();
LABEL_24:
  }
  [*(id *)(a1 + 48) setAccount:v5];
LABEL_26:
  id v23 = objc_alloc((Class)AMSPurchaseTask);
  uint64_t v24 = *(void *)(a1 + 48);
  uint64_t v25 = [*(id *)(a1 + 32) bag];
  id v26 = [v23 initWithPurchase:v24 bag:v25];

  [v26 setDelegate:*(void *)(a1 + 32)];
  id v27 = [v26 valueForKey:@"purchaseInfo"];
  objc_msgSend(v27, "setHasBeenAuthedForBuy:", objc_msgSend(*(id *)(a1 + 48), "isPreauthenticated"));
  id v28 = [v26 performPurchase];

  return v28;
}

uint64_t sub_10013A44C()
{
  qword_100401EC8 = (uint64_t)objc_alloc_init((Class)objc_opt_class());

  return _objc_release_x1();
}

id sub_10013A520(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 32);
  if (!v2)
  {
    id v3 = objc_alloc_init((Class)NSCountedSet);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 32);
    *(void *)(v4 + 32) = v3;

    id v2 = *(void **)(*(void *)(a1 + 32) + 32);
  }
  [v2 addObject:*(void *)(a1 + 40)];
  id result = [*(id *)(*(void *)(a1 + 32) + 32) countForObject:*(void *)(a1 + 40)];
  if (result == (id)1)
  {
    uint64_t v7 = *(void **)(a1 + 32);
    uint64_t v8 = v7[4];
    return [v7 _sendDownloadKindsUsingNetwork:v8];
  }
  return result;
}

id sub_10013A648(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 32);
  if (result)
  {
    id v3 = [result countForObject:*(void *)(a1 + 40)];
    id result = [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
    if (v3 == (id)1)
    {
      uint64_t v4 = *(void **)(a1 + 32);
      uint64_t v5 = v4[4];
      return [v4 _sendDownloadKindsUsingNetwork:v5];
    }
  }
  return result;
}

void sub_10013A6B8(void *a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1[4] + 24);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        uint64_t v8 = objc_msgSend(v7, "downloadKinds", (void)v10);
        unsigned int v9 = [v8 intersectsSet:a1[5]];

        if (v9) {
          [v7 sendChangeset:a1[6]];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
}

void sub_10013A8C8(void *a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1[4] + 24);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        uint64_t v8 = objc_msgSend(v7, "downloadKinds", (void)v10);
        unsigned int v9 = [v8 containsObject:a1[5]];

        if (v9) {
          [v7 sendDownloadStateChangedWithID:a1[7] externalValues:a1[6] propertyValues:0];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
}

void sub_10013AADC(void *a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1[4] + 24);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        uint64_t v8 = objc_msgSend(v7, "downloadKinds", (void)v10);
        unsigned int v9 = [v8 containsObject:a1[5]];

        if (v9) {
          [v7 sendDownloadStateChangedWithID:a1[7] externalValues:0 propertyValues:a1[6]];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
}

BOOL sub_10013B0B0(id a1, DownloadsTransaction *a2)
{
  id v2 = a2;
  [(DownloadsTransaction *)v2 deletePersistentDownloadManagerWithClientID:@"com.apple.springboard" persistenceID:@"SSDownloadQueue"];
  id v3 = [(DownloadsSession *)v2 pipeline];

  [v3 reconnectWithURLSessionTasks];
  return 1;
}

void sub_10013B10C(id a1)
{
  if (+[DownloadsDatabaseGarbageCollectionOperation garbageCollectionTimerIsExpired])
  {
    id v2 = objc_alloc_init(DownloadsDatabaseGarbageCollectionOperation);
    id v1 = +[ISOperationQueue mainQueue];
    [v1 addOperation:v2];
  }
}

void sub_10013B340(uint64_t a1)
{
  id v3 = objc_alloc_init(WorkspaceDownloadObserverClient);
  id v4 = [*(id *)(a1 + 32) _downloadPersistentIDsFromBundleIDs:*(void *)(a1 + 40)];
  if ([v4 count])
  {
    uint64_t v5 = *(void **)(a1 + 32);
    id v6 = [v4 allValues];
    [v5 _pauseDownloads:v6 isForced:1 client:v3];
  }
}

void sub_10013B580(uint64_t a1)
{
  id v3 = objc_alloc_init(WorkspaceDownloadObserverClient);
  id v4 = [*(id *)(a1 + 32) _downloadPersistentIDsFromBundleIDs:*(void *)(a1 + 40)];
  if ([v4 count])
  {
    uint64_t v5 = *(void **)(a1 + 32);
    id v6 = [v4 allValues];
    uint64_t v7 = +[NSOrderedSet orderedSetWithArray:v6];
    [v5 _resumeDownloads:v7 client:v3];
  }
}

void sub_10013B7DC(uint64_t a1)
{
  id v3 = objc_alloc_init(WorkspaceDownloadObserverClient);
  id v4 = [*(id *)(a1 + 32) _downloadPersistentIDsFromBundleIDs:*(void *)(a1 + 40)];
  if ([v4 count])
  {
    uint64_t v5 = *(void **)(a1 + 32);
    id v6 = [v4 allValues];
    [v5 _cancelDownloads:v6 client:v3];
  }
}

void sub_10013BA18(uint64_t a1)
{
  id v2 = +[DownloadsDatabase downloadsDatabase];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_10013BAC8;
  v6[3] = &unk_1003A55F8;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v7 = v3;
  uint64_t v8 = v4;
  id v5 = [v2 modifyUsingTransactionBlock:v6];
}

uint64_t sub_10013BAC8(uint64_t a1, void *a2)
{
  id v40 = a2;
  uint64_t v39 = [v40 database];
  id v41 = objc_alloc_init((Class)NSMutableOrderedSet);
  uint64_t v50 = 0;
  id v51 = &v50;
  uint64_t v52 = 0x2020000000;
  BOOL v53 = 0;
  BOOL v53 = [*(id *)(a1 + 32) count] == (id)1;
  v59[0] = @"IFNULL(download_state.blocked_reason, 0)";
  v59[1] = @"IFNULL(download_state.phase, \"SSDownloadPhaseWaiting\")";
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v46 objects:v58 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v47;
    do
    {
      for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v47 != v4) {
          objc_enumerationMutation(v2);
        }
        id v6 = *(void **)(*((void *)&v46 + 1) + 8 * i);
        if (+[ApplicationWorkspace keepSafeHarborDataForBundleID:v6])
        {
          *((unsigned char *)v51 + 24) = 0;
          uint64_t v8 = +[SSLogConfig sharedDaemonConfig];
          if (!v8)
          {
            uint64_t v8 = +[SSLogConfig sharedConfig];
          }
          unsigned int v9 = objc_msgSend(v8, "shouldLog", v36, v37);
          unsigned int v10 = [v8 shouldLogToDisk];
          long long v11 = [v8 OSLogObject];
          long long v12 = v11;
          if (v10) {
            v9 |= 2u;
          }
          if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
            v9 &= 2u;
          }
          if (v9)
          {
            long long v13 = objc_opt_class();
            int v54 = 138412546;
            id v55 = v13;
            __int16 v56 = 2112;
            id v57 = v6;
            id v14 = v13;
            LODWORD(v37) = 22;
            id v36 = &v54;
            uint64_t v15 = (void *)_os_log_send_and_compose_impl();

            if (!v15) {
              goto LABEL_18;
            }
            long long v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v54, v37);
            free(v15);
            id v36 = (int *)v12;
            SSFileLog();
          }
        }
        else
        {
          uint64_t v8 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"bundle_id" equalToValue:v6];
          long long v12 = +[DownloadEntity queryWithDatabase:v39 predicate:v8];
          v42[0] = _NSConcreteStackBlock;
          v42[1] = 3221225472;
          v42[2] = sub_10013C1D8;
          void v42[3] = &unk_1003A75E8;
          int v45 = &v50;
          id v43 = v41;
          id v44 = v40;
          [v12 enumeratePersistentIDsAndProperties:v59 count:2 usingBlock:v42];
        }
LABEL_18:
      }
      id v3 = [v2 countByEnumeratingWithState:&v46 objects:v58 count:16];
    }
    while (v3);
  }

  if ([v41 count])
  {
    unsigned int v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16)
    {
      unsigned int v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = objc_msgSend(v16, "shouldLog", v36);
    unsigned int v18 = [v16 shouldLogToDisk];
    id v19 = [v16 OSLogObject];
    uint64_t v20 = v19;
    if (v18) {
      v17 |= 2u;
    }
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
      int v21 = v17;
    }
    else {
      int v21 = v17 & 2;
    }
    if (v21)
    {
      id v22 = (id)objc_opt_class();
      id v23 = [v41 count];
      int v54 = 138412546;
      id v55 = v22;
      __int16 v56 = 2048;
      id v57 = v23;
      LODWORD(v37) = 22;
      id v36 = &v54;
      uint64_t v24 = (void *)_os_log_send_and_compose_impl();

      if (!v24)
      {
LABEL_32:

        [v40 resetDownloadsWithIdentifiers:v41];
        [*(id *)(a1 + 40) _retryRestoreIfNecessaryForTransaction:v40];
        goto LABEL_33;
      }
      uint64_t v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v54, v37);
      free(v24);
      id v36 = (int *)v20;
      SSFileLog();
    }

    goto LABEL_32;
  }
LABEL_33:
  if (*((unsigned char *)v51 + 24))
  {
    uint64_t v25 = +[SSLogConfig sharedDaemonConfig];
    if (!v25)
    {
      uint64_t v25 = +[SSLogConfig sharedConfig];
    }
    unsigned int v26 = objc_msgSend(v25, "shouldLog", v36);
    unsigned int v27 = [v25 shouldLogToDisk];
    id v28 = [v25 OSLogObject];
    id v29 = v28;
    if (v27) {
      v26 |= 2u;
    }
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      int v30 = v26;
    }
    else {
      int v30 = v26 & 2;
    }
    if (v30)
    {
      LOWORD(v54) = 0;
      LODWORD(v37) = 2;
      long long v31 = (void *)_os_log_send_and_compose_impl();

      if (!v31)
      {
LABEL_45:

        id v32 = *(void **)(a1 + 40);
        id v33 = [*(id *)(a1 + 32) anyObject];
        [v32 _rescueStuckPlaceholderWithBundleID:v33];

        goto LABEL_46;
      }
      id v29 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v31, 4, &v54, v37);
      free(v31);
      SSFileLog();
    }

    goto LABEL_45;
  }
LABEL_46:
  for (uint64_t j = 1; j != -1; --j)

  _Block_object_dispose(&v50, 8);
  return 1;
}

void sub_10013C16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_10013C1D8(uint64_t a1, uint64_t a2, id *a3)
{
  id v6 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  if ([*a3 integerValue]
    || ([a3[1] isEqualToString:SSDownloadPhaseFailed] & 1) != 0
    || [a3[1] isEqualToString:SSDownloadPhasePaused])
  {
    [*(id *)(a1 + 32) addObject:v6];
  }
  else
  {
    [*(id *)(a1 + 40) prioritizeDownloadWithID:a2 aboveDownloadWithID:0 error:0];
  }
}

void sub_10013C350(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = +[DownloadsDatabase downloadsDatabase];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10013C450;
  v12[3] = &unk_1003A4D58;
  id v13 = v5;
  id v8 = *(id *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  id v14 = v8;
  uint64_t v15 = v9;
  id v10 = v5;
  id v11 = [v7 modifyUsingTransactionBlock:v12];

  xpc_dictionary_set_BOOL(v6, "0", 1);
}

uint64_t sub_10013C450(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = a2;
  id v6 = [v5 database];
  id v7 = [v3 downloadsQueryForMessage:v4 database:v6];

  id v8 = [v7 copyEntityIdentifiers];
  uint64_t v9 = +[SSLogConfig sharedDaemonConfig];
  if (!v9)
  {
    uint64_t v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  long long v12 = [v9 OSLogObject];
  if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    v11 &= 2u;
  }
  if (!v11) {
    goto LABEL_11;
  }
  id v13 = objc_opt_class();
  id v14 = v13;
  id v15 = [v8 count];
  uint64_t v16 = *(void *)(a1 + 32);
  int v20 = 138412802;
  int v21 = v13;
  __int16 v22 = 2048;
  id v23 = v15;
  __int16 v24 = 2112;
  uint64_t v25 = v16;
  LODWORD(v19) = 32;
  unsigned int v17 = (void *)_os_log_send_and_compose_impl();

  if (v17)
  {
    long long v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v20, v19);
    free(v17);
    SSFileLog();
LABEL_11:
  }
  [v5 finishDownloadsWithIdentifiers:v8 finalPhase:SSDownloadPhaseCanceled];

  return 1;
}

void sub_10013C718(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  objc_opt_class();
  id v6 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if ([v6 count]) {
    unsigned __int8 v7 = [*(id *)(a1 + 40) _cancelDownloads:v6 client:v8];
  }
  else {
    unsigned __int8 v7 = 1;
  }
  xpc_dictionary_set_BOOL(v5, "0", v7);
}

void sub_10013C87C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned __int8 v7 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v8 = v7;
  if (v7 && xpc_get_type(v7) == (xpc_type_t)&_xpc_type_array && xpc_array_get_count(v8))
  {
    uint64_t v9 = +[DownloadsDatabase downloadsDatabase];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_10013C9BC;
    v13[3] = &unk_1003A4D58;
    id v14 = v5;
    id v10 = v8;
    uint64_t v11 = *(void *)(a1 + 40);
    id v15 = v10;
    uint64_t v16 = v11;
    id v12 = [v9 modifyUsingTransactionBlock:v13];
  }
  xpc_dictionary_set_BOOL(v6, "0", 1);
}

uint64_t sub_10013C9BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [v3 database];
  id v6 = [v4 persistentDownloadManagerInDatabase:v5];

  if (v6)
  {
    id v7 = objc_alloc_init((Class)NSMutableArray);
    id v8 = *(void **)(a1 + 40);
    applier[0] = _NSConcreteStackBlock;
    applier[1] = 3221225472;
    applier[2] = sub_10013CC50;
    applier[3] = &unk_1003A4180;
    id v9 = v7;
    id v23 = v9;
    xpc_array_apply(v8, applier);
    id v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10)
    {
      id v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v11 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v12 = v11 | 2;
    }
    else {
      int v12 = v11;
    }
    id v13 = [v10 OSLogObject];
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
      v12 &= 2u;
    }
    if (v12)
    {
      id v14 = objc_opt_class();
      id v15 = v14;
      id v16 = [v9 count];
      uint64_t v17 = *(void *)(a1 + 32);
      int v24 = 138412802;
      uint64_t v25 = v14;
      __int16 v26 = 2048;
      id v27 = v16;
      __int16 v28 = 2112;
      uint64_t v29 = v17;
      LODWORD(v21) = 32;
      unsigned int v18 = (void *)_os_log_send_and_compose_impl();

      if (!v18)
      {
LABEL_13:

        uint64_t v19 = [v6 finishPersistentDownloadsWithDownloadIDs:v9];
        [v3 unionChangeset:v19];

        goto LABEL_14;
      }
      id v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v24, v21);
      free(v18);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:

  return 1;
}

uint64_t sub_10013CC50(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:xpc_int64_get_value(v4)];
    [*(id *)(a1 + 32) addObject:v5];
  }
  return 1;
}

void sub_10013CCE0(id a1, DownloadManagerClient *a2, OS_xpc_object *a3)
{
  id v4 = a2;
  id v5 = a3;
  xpc_object_t v6 = xpc_array_create(0, 0);
  id v7 = +[DownloadsDatabase downloadsDatabase];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_10013CDDC;
  v10[3] = &unk_1003A55A8;
  unsigned int v11 = v4;
  id v12 = v6;
  id v8 = v6;
  id v9 = v4;
  [v7 readUsingTransactionBlock:v10];

  xpc_dictionary_set_value(v5, "0", v8);
}

void sub_10013CDDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  id v5 = [v3 activeDownloadIdentifiers];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      id v9 = 0;
      do
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = [*(id *)(*((void *)&v12 + 1) + 8 * (void)v9) longLongValue];
        unsigned int v11 = [[DownloadEntity alloc] initWithPersistentID:v10 inDatabase:v4];
        if ([*(id *)(a1 + 32) canAccessDownload:v11]) {
          xpc_array_set_int64(*(xpc_object_t *)(a1 + 40), 0xFFFFFFFFFFFFFFFFLL, (int64_t)v10);
        }

        id v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }
}

void sub_10013CFE8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  objc_opt_class();
  uint64_t v8 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  id v9 = v8;
  if (int64 && [v8 count])
  {
    id v10 = +[DownloadsDatabase downloadsDatabase];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10013D13C;
    v11[3] = &unk_1003A7678;
    int64_t v16 = int64;
    id v12 = v5;
    id v13 = *(id *)(a1 + 32);
    id v14 = v9;
    id v15 = v6;
    [v10 readUsingTransactionBlock:v11];
  }
}

void sub_10013D13C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [DownloadAssetEntity alloc];
  uint64_t v5 = *(void *)(a1 + 64);
  id v6 = [v3 database];
  id v7 = [(DownloadAssetEntity *)v4 initWithPersistentID:v5 inDatabase:v6];

  if (([*(id *)(a1 + 32) hasEntitlements] & 1) != 0
    || [*(id *)(a1 + 32) canAccessAsset:v7])
  {
    if (xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "0") == 10)
    {
      id v8 = [(DownloadAssetEntity *)v7 copyXPCEncodedValuesForClientProperties:*(void *)(a1 + 48)];
      xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v8);
    }
    else
    {
      uint64_t v17 = v7;
      xpc_object_t v9 = xpc_array_create(0, 0);
      long long v18 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v10 = *(id *)(a1 + 48);
      id v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v19;
        do
        {
          for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v19 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = [v3 valueForExternalProperty:*(void *)(*((void *)&v18 + 1) + 8 * i) ofAssetID:*(void *)(a1 + 64)];
            if (v15)
            {
              SSXPCArraySetCFObject();
            }
            else
            {
              int64_t v16 = +[NSNull null];
              SSXPCArraySetCFObject();
            }
          }
          id v12 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
        }
        while (v12);
      }

      xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v9);
      id v7 = v17;
    }
  }
}

void sub_10013D414(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  objc_opt_class();
  uint64_t v8 = SSXPCDictionaryCopyCFObjectWithClass();
  xpc_object_t v9 = (void *)v8;
  if (int64) {
    BOOL v10 = v8 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    id v11 = +[DownloadsDatabase downloadsDatabase];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10013D550;
    v12[3] = &unk_1003A76C8;
    int64_t v16 = int64;
    id v13 = v5;
    id v14 = v9;
    id v15 = v6;
    [v11 readUsingTransactionBlock:v12];
  }
}

void sub_10013D550(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [DownloadEntity alloc];
  uint64_t v5 = *(void *)(a1 + 56);
  id v6 = [v3 database];
  id v7 = [(DownloadEntity *)v4 initWithPersistentID:v5 inDatabase:v6];

  if ([*(id *)(a1 + 32) canAccessDownload:v7])
  {
    id v8 = [(DownloadEntity *)v7 copyAssetsWithAssetType:*(void *)(a1 + 40)];
    xpc_object_t v9 = xpc_array_create(0, 0);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v10 = v8;
    id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v16;
      do
      {
        id v14 = 0;
        do
        {
          if (*(void *)v16 != v13) {
            objc_enumerationMutation(v10);
          }
          xpc_array_set_int64(v9, 0xFFFFFFFFFFFFFFFFLL, (int64_t)objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * (void)v14), "persistentID", (void)v15));
          id v14 = (char *)v14 + 1;
        }
        while (v12 != v14);
        id v12 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v12);
    }

    xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 48), "0", v9);
  }
}

void sub_10013D760(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 32);
  id v4 = a3;
  [v3 allObjects];
  SSXPCDictionarySetCFObject();
}

void sub_10013D86C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  objc_opt_class();
  id v8 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  xpc_object_t v9 = v8;
  if (int64 && [v8 count])
  {
    id v10 = +[DownloadsDatabase downloadsDatabase];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10013D9C0;
    v11[3] = &unk_1003A7678;
    int64_t v16 = int64;
    id v12 = v5;
    id v13 = *(id *)(a1 + 32);
    id v14 = v9;
    id v15 = v6;
    [v10 readUsingTransactionBlock:v11];
  }
}

void sub_10013D9C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [DownloadEntity alloc];
  uint64_t v5 = *(void *)(a1 + 64);
  id v6 = [v3 database];
  id v7 = [(DownloadEntity *)v4 initWithPersistentID:v5 inDatabase:v6];

  if (([*(id *)(a1 + 32) hasEntitlements] & 1) != 0
    || [*(id *)(a1 + 32) canAccessDownload:v7])
  {
    if (xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "0") == 13)
    {
      id v8 = [(DownloadEntity *)v7 copyXPCEncodedValuesForClientProperties:*(void *)(a1 + 48)];
      xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v8);
    }
    else
    {
      long long v17 = v7;
      xpc_object_t v9 = xpc_array_create(0, 0);
      long long v18 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v10 = *(id *)(a1 + 48);
      id v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v19;
        do
        {
          for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v19 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = [v3 valueForExternalProperty:*(void *)(*((void *)&v18 + 1) + 8 * i) ofDownloadID:*(void *)(a1 + 64)];
            if (v15)
            {
              SSXPCArraySetCFObject();
            }
            else
            {
              int64_t v16 = +[NSNull null];
              SSXPCArraySetCFObject();
            }
          }
          id v12 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
        }
        while (v12);
      }

      xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v9);
      id v7 = v17;
    }
  }
}

void sub_10013DBF0(uint64_t a1, int64_t value, uint64_t a3)
{
  if (*(_OWORD *)(a1 + 72) == 0)
  {
    int v24 = *(void **)(a1 + 32);
    xpc_array_set_int64(v24, 0xFFFFFFFFFFFFFFFFLL, value);
  }
  else
  {
    xpc_object_t valuea = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(valuea, "0", value);
    if (*(uint64_t *)(a1 + 72) >= 1)
    {
      id v6 = objc_alloc_init((Class)NSMutableDictionary);
      id v7 = +[NSNull null];
      if (*(uint64_t *)(a1 + 88) >= 1)
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)(a3 + 8 * v8)) {
            xpc_object_t v9 = *(void **)(a3 + 8 * v8);
          }
          else {
            xpc_object_t v9 = v7;
          }
          id v10 = [*(id *)(a1 + 40) objectAtIndex:v8];
          [v6 setObject:v9 forKey:v10];

          ++v8;
        }
        while (v8 < *(void *)(a1 + 88));
      }
      SSXPCDictionarySetCFObject();
    }
    if (*(uint64_t *)(a1 + 96) >= 1)
    {
      id v11 = objc_alloc_init((Class)NSMutableDictionary);
      id v12 = +[NSNull null];
      if (*(uint64_t *)(a1 + 96) >= 1)
      {
        uint64_t v13 = 0;
        uint64_t v14 = a3 + 8 * *(void *)(a1 + 88);
        do
        {
          if (*(void *)(v14 + 8 * v13)) {
            id v15 = *(void **)(v14 + 8 * v13);
          }
          else {
            id v15 = v12;
          }
          int64_t v16 = [*(id *)(a1 + 48) objectAtIndex:v13];
          [v11 setObject:v15 forKey:v16];

          ++v13;
        }
        while (v13 < *(void *)(a1 + 96));
      }
      SSXPCDictionarySetCFObject();
    }
    if (*(uint64_t *)(a1 + 80) >= 1)
    {
      id v17 = objc_alloc_init((Class)NSMutableDictionary);
      long long v18 = +[NSNull null];
      if (*(uint64_t *)(a1 + 80) >= 1)
      {
        uint64_t v19 = 0;
        do
        {
          long long v20 = [*(id *)(a1 + 56) objectAtIndex:v19];
          uint64_t v21 = [*(id *)(a1 + 64) valueForExternalProperty:v20 ofDownloadID:value];
          __int16 v22 = (void *)v21;
          if (v21) {
            id v23 = (void *)v21;
          }
          else {
            id v23 = v18;
          }
          [v17 setObject:v23 forKey:v20];

          ++v19;
        }
        while (v19 < *(void *)(a1 + 80));
      }
      SSXPCDictionarySetCFObject();
    }
    xpc_array_append_value(*(xpc_object_t *)(a1 + 32), valuea);
  }
}

uint64_t sub_10013DEBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10013DECC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    uint64_t v5 = [[DownloadEntity alloc] initWithPersistentID:xpc_int64_get_value(v4) inDatabase:*(void *)(a1 + 32)];
    if ((*(unsigned char *)(a1 + 80) || [*(id *)(a1 + 40) canAccessDownload:v5])
      && [(DownloadEntity *)v5 existsInDatabase])
    {
      if (*(uint64_t *)(a1 + 56) >= 1) {
        -[DownloadEntity getValues:forProperties:count:](v5, "getValues:forProperties:count:", *(void *)(a1 + 64), *(void *)(a1 + 72));
      }
      (*(void (**)(void, id, void))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), [(DownloadEntity *)v5 persistentID], *(void *)(a1 + 64));
    }
  }
  return 1;
}

void sub_10013E050(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  if (int64)
  {
    uint64_t v8 = +[DownloadsDatabase downloadsDatabase];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10013E194;
    _OWORD v9[3] = &unk_1003A7790;
    id v10 = *(id *)(a1 + 32);
    id v11 = &v13;
    int64_t v12 = int64;
    [v8 readUsingTransactionBlock:v9];
  }
  xpc_dictionary_set_BOOL(v6, "0", *((unsigned char *)v14 + 24));
  _Block_object_dispose(&v13, 8);
}

void sub_10013E17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10013E194(uint64_t a1, void *a2)
{
  id v9 = a2;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "0");
  if (int64 == 52)
  {
    id v4 = DownloadEntity;
  }
  else
  {
    if (int64 != 53) {
      goto LABEL_7;
    }
    id v4 = DownloadAssetEntity;
  }
  id v5 = [v4 alloc];
  uint64_t v6 = *(void *)(a1 + 48);
  id v7 = [v9 database];
  id v8 = [v5 initWithPersistentID:v6 inDatabase:v7];

  if (v8)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v8 existsInDatabase];
  }
LABEL_7:
}

void sub_10013E30C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (SSDeviceSupportsDownload())
  {
    uint64_t v47 = 0;
    long long v48 = &v47;
    uint64_t v49 = 0x2020000000;
    char v50 = 0;
    uint64_t v43 = 0;
    id v44 = &v43;
    uint64_t v45 = 0x2020000000;
    uint64_t v46 = 100;
    *(void *)id v57 = 0;
    *(void *)&v57[8] = v57;
    *(void *)&v57[16] = 0x3032000000;
    id v58 = sub_10013E8DC;
    __int16 v59 = sub_10013E8EC;
    id v60 = 0;
    v42[0] = 0;
    v42[1] = v42;
    v42[2] = 0x2020000000;
    void v42[3] = 0;
    if ([v5 hasEntitlements])
    {
      id v7 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "3");
      id v8 = v7;
      if (v7 && xpc_get_type(v7) == (xpc_type_t)&_xpc_type_array)
      {
        id v9 = +[DownloadsDatabase downloadsDatabase];
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472;
        v33[2] = sub_10013E8F4;
        void v33[3] = &unk_1003A77E0;
        id v34 = v8;
        id v10 = v5;
        uint64_t v11 = *(void *)(a1 + 32);
        int64_t v12 = *(void **)(a1 + 40);
        id v35 = v10;
        uint64_t v36 = v11;
        id v38 = &v43;
        uint64_t v39 = v42;
        id v37 = v12;
        id v40 = v57;
        id v41 = &v47;
        id v13 = [v9 modifyUsingTransactionBlock:v33];
      }
    }
    else
    {
      void v44[3] = 107;
    }
    if (*((unsigned char *)v48 + 24))
    {
      BOOL v22 = 1;
LABEL_33:
      xpc_dictionary_set_BOOL(v6, "0", v22);
      xpc_dictionary_set_int64(v6, "1", v44[3]);
      _Block_object_dispose(v42, 8);
      _Block_object_dispose(v57, 8);

      _Block_object_dispose(&v43, 8);
      _Block_object_dispose(&v47, 8);
      goto LABEL_34;
    }
    id v23 = +[SSLogConfig sharedDaemonConfig];
    if (!v23)
    {
      id v23 = +[SSLogConfig sharedConfig];
    }
    unsigned int v24 = [v23 shouldLog];
    unsigned int v25 = [v23 shouldLogToDisk];
    __int16 v26 = [v23 OSLogObject];
    id v27 = v26;
    if (v25) {
      v24 |= 2u;
    }
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      v24 &= 2u;
    }
    if (v24)
    {
      id v28 = (id)objc_opt_class();
      uint64_t v29 = v44[3];
      int v30 = [v5 clientIdentifier];
      int v51 = 138543874;
      id v52 = v28;
      __int16 v53 = 2048;
      uint64_t v54 = v29;
      __int16 v55 = 2114;
      __int16 v56 = v30;
      LODWORD(v32) = 32;
      long long v31 = (void *)_os_log_send_and_compose_impl();

      if (!v31)
      {
LABEL_32:

        BOOL v22 = *((unsigned char *)v48 + 24) != 0;
        goto LABEL_33;
      }
      id v27 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v31, 4, &v51, v32);
      free(v31);
      SSFileLog();
    }

    goto LABEL_32;
  }
  uint64_t v14 = +[SSLogConfig sharedDaemonConfig];
  if (!v14)
  {
    uint64_t v14 = +[SSLogConfig sharedConfig];
  }
  unsigned int v15 = [v14 shouldLog];
  if ([v14 shouldLogToDisk]) {
    int v16 = v15 | 2;
  }
  else {
    int v16 = v15;
  }
  id v17 = [v14 OSLogObject];
  if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
    v16 &= 2u;
  }
  if (v16)
  {
    long long v18 = objc_opt_class();
    id v19 = v18;
    [v5 clientIdentifier];
    *(_DWORD *)id v57 = 138543618;
    *(void *)&v57[4] = v18;
    *(void *)&v57[14] = *(_WORD *)&v57[12] = 2114;
    LODWORD(v32) = 22;
    long long v20 = (void *)_os_log_send_and_compose_impl();

    if (v20)
    {
      uint64_t v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v20, 4, v57, v32);
      free(v20);
      SSFileLog();
    }
  }
  else
  {
  }
  xpc_dictionary_set_BOOL(v6, "0", 0);
  xpc_dictionary_set_int64(v6, "1", 157);
LABEL_34:
}

void sub_10013E880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10013E8DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10013E8EC(uint64_t a1)
{
}

uint64_t sub_10013E8F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)NSMutableArray);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_10013EF10;
  applier[3] = &unk_1003A77B8;
  id v5 = *(void **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  id v54 = v6;
  uint64_t v55 = v7;
  long long v57 = *(_OWORD *)(a1 + 64);
  id v8 = v4;
  id v56 = v8;
  xpc_array_apply(v5, applier);
  id v9 = (char *)[v8 count] + *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  size_t count = xpc_array_get_count(*(xpc_object_t *)(a1 + 32));
  uint64_t v11 = +[SSLogConfig sharedDaemonConfig];
  int64_t v12 = (void *)v11;
  if (v9 == (char *)count)
  {
    if (!v11)
    {
      int64_t v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    unsigned int v15 = [v12 OSLogObject];
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      v14 &= 2u;
    }
    if (v14)
    {
      int v16 = objc_opt_class();
      id v17 = v16;
      id v18 = [v8 count];
      [*(id *)(a1 + 40) clientIdentifier];
      v20 = id v19 = v3;
      int v58 = 138543874;
      __int16 v59 = v16;
      __int16 v60 = 2048;
      id v61 = v18;
      __int16 v62 = 2114;
      id v63 = v20;
      LODWORD(v52) = 32;
      int v51 = &v58;
      uint64_t v21 = (void *)_os_log_send_and_compose_impl();

      id v3 = v19;
      if (!v21) {
        goto LABEL_13;
      }
      unsigned int v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v58, v52);
      free(v21);
      int v51 = (int *)v15;
      SSFileLog();
    }

LABEL_13:
    int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 56), "1");
    int64_t v23 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 56), "2");
    if ([v8 count])
    {
      if (int64)
      {
        uint64_t v24 = [v3 insertDownloads:v8 beforeDownloadWithID:int64];
      }
      else
      {
        if (v23) {
          [v3 insertDownloads:v8 afterDownloadWithID:v23];
        }
        else {
        uint64_t v24 = [v3 addDownloads:v8];
        }
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 80) + 8);
      uint64_t v36 = *(void **)(v35 + 40);
      *(void *)(v35 + 40) = v24;
    }
    id v37 = objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), "count", v51);
    if (v37 == [v8 count])
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = 1;
      goto LABEL_49;
    }
    id v38 = +[SSLogConfig sharedDaemonConfig];
    if (!v38)
    {
      id v38 = +[SSLogConfig sharedConfig];
    }
    unsigned int v39 = [v38 shouldLog];
    if ([v38 shouldLogToDisk]) {
      int v40 = v39 | 2;
    }
    else {
      int v40 = v39;
    }
    id v41 = [v38 OSLogObject];
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      int v42 = v40;
    }
    else {
      int v42 = v40 & 2;
    }
    if (v42)
    {
      uint64_t v43 = objc_opt_class();
      id v44 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
      id v45 = v43;
      id v46 = [v44 count];
      id v47 = [v8 count];
      int v58 = 138543874;
      __int16 v59 = v43;
      __int16 v60 = 2048;
      id v61 = v46;
      __int16 v62 = 2048;
      id v63 = v47;
      LODWORD(v52) = 32;
      long long v48 = (void *)_os_log_send_and_compose_impl();

      if (!v48)
      {
LABEL_48:

        *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 112;
        goto LABEL_49;
      }
      id v41 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v48, 4, &v58, v52);
      free(v48);
      SSFileLog();
    }

    goto LABEL_48;
  }
  if (!v11)
  {
    int64_t v12 = +[SSLogConfig sharedConfig];
  }
  unsigned int v25 = [v12 shouldLog];
  if ([v12 shouldLogToDisk]) {
    int v26 = v25 | 2;
  }
  else {
    int v26 = v25;
  }
  id v27 = [v12 OSLogObject];
  if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
    int v28 = v26;
  }
  else {
    int v28 = v26 & 2;
  }
  if (!v28) {
    goto LABEL_27;
  }
  uint64_t v29 = objc_opt_class();
  id v30 = v29;
  id v31 = [v8 count];
  uint64_t v32 = *(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  size_t v33 = xpc_array_get_count(*(xpc_object_t *)(a1 + 32));
  int v58 = 138544130;
  __int16 v59 = v29;
  __int16 v60 = 2048;
  id v61 = v31;
  __int16 v62 = 2048;
  id v63 = v32;
  __int16 v64 = 2048;
  size_t v65 = v33;
  LODWORD(v52) = 42;
  id v34 = (void *)_os_log_send_and_compose_impl();

  if (v34)
  {
    id v27 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v34, 4, &v58, v52);
    free(v34);
    SSFileLog();
LABEL_27:
  }
LABEL_49:
  uint64_t v49 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);

  return v49;
}

BOOL sub_10013EF10(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = *(void **)(a1 + 32);
  id v22 = 0;
  id v6 = [v5 newDownloadWithClientXPCDownload:v4 error:&v22];
  id v7 = v22;
  if (!v6)
  {
    unsigned int v13 = +[SSLogConfig sharedDaemonConfig];
    if (!v13)
    {
      unsigned int v13 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v13 shouldLog];
    if ([v13 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    int v16 = [v13 OSLogObject];
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      v15 &= 2u;
    }
    if (v15)
    {
      id v17 = objc_opt_class();
      int v24 = 138543874;
      unsigned int v25 = v17;
      __int16 v26 = 2114;
      id v27 = v7;
      __int16 v28 = 2114;
      id v29 = v4;
      id v18 = v17;
      LODWORD(v21) = 32;
      id v19 = (void *)_os_log_send_and_compose_impl();

      if (!v19)
      {
LABEL_21:

        *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v7 code];
        goto LABEL_22;
      }
      int v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v24, v21);
      free(v19);
      SSFileLog();
    }

    goto LABEL_21;
  }
  id v8 = [v6 copyStoreDownloadMetadata];
  if (!v8)
  {
    id v8 = [v6 copyInMemoryStoreDownloadMetadata];
    if (!v8) {
      goto LABEL_8;
    }
  }
  id v9 = [v8 kind];
  int IsBookToShimKind = SSDownloadKindIsBookToShimKind();

  if (!IsBookToShimKind) {
    goto LABEL_8;
  }
  uint64_t v11 = [v8 downloadPermalink];
  if (v11
    || (objc_msgSend(v8, "valueForFirstAvailableKey:", @"download_permalink", 0),
        (uint64_t v11 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);

    id v23 = v8;
    int64_t v12 = +[NSArray arrayWithObjects:&v23 count:1];
    +[BookAssetDaemonUtility sendBookStoreDownloads:v12 withReason:@"insert download via SSDownloadManager"];
  }
  else
  {
LABEL_8:
    [*(id *)(a1 + 48) addObject:v6];
  }

LABEL_22:
  return v6 != 0;
}

void sub_10013F28C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v13 = 0;
  unsigned int v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  int64_t v8 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  int64_t v9 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "3");
  id v10 = +[DownloadsDatabase downloadsDatabase];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10013F3F0;
  v12[3] = &unk_1003A7808;
  void v12[4] = &v13;
  void v12[5] = v8;
  v12[6] = int64;
  void v12[7] = v9;
  id v11 = [v10 modifyUsingTransactionBlock:v12];

  xpc_dictionary_set_BOOL(v6, "0", *((unsigned char *)v14 + 24));
  _Block_object_dispose(&v13, 8);
}

void sub_10013F3D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10013F3F0(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1[5])
  {
    unsigned __int8 v5 = objc_msgSend(v3, "moveDownloadWithID:beforeDownloadWithID:", a1[6]);
LABEL_5:
    *(unsigned char *)(*(void *)(a1[4] + 8) + 24) = v5;
    goto LABEL_6;
  }
  if (a1[7])
  {
    unsigned __int8 v5 = objc_msgSend(v3, "moveDownloadWithID:afterDownloadWithID:", a1[6]);
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(a1[4] + 8) + 24);

  return v6;
}

void sub_10013F50C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_opt_class();
  unsigned __int8 v5 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  uint64_t v6 = [v5 objectForKey:@"downloadID"];
  id v7 = [v5 objectForKey:@"phase"];
  if (v5) {
    BOOL v8 = v6 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  BOOL v9 = !v8;
  if (!v8)
  {
    id v10 = +[DownloadsDatabase downloadsDatabase];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_10013F670;
    void v14[3] = &unk_1003A4D58;
    id v15 = v6;
    id v11 = v7;
    uint64_t v12 = *(void *)(a1 + 40);
    id v16 = v11;
    uint64_t v17 = v12;
    id v13 = [v10 modifyUsingTransactionBlock:v14];
  }
  xpc_dictionary_set_BOOL(v4, "0", v9);
}

uint64_t sub_10013F670(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [DownloadEntity alloc];
  id v5 = [*(id *)(a1 + 32) longLongValue];
  uint64_t v6 = [v3 database];
  id v7 = [(DownloadEntity *)v4 initWithPersistentID:v5 inDatabase:v6];

  if (([*(id *)(a1 + 40) isEqualToString:SSDownloadPhaseCanceled] & 1) == 0
    && ![*(id *)(a1 + 40) isEqualToString:SSDownloadPhaseFinished])
  {
    [(DownloadEntity *)v7 setValue:*(void *)(a1 + 40) forProperty:@"download_state.phase"];
    uint64_t v17 = +[SSLogConfig sharedDaemonConfig];
    if (!v17)
    {
      uint64_t v17 = +[SSLogConfig sharedConfig];
    }
    unsigned int v18 = [v17 shouldLog];
    if ([v17 shouldLogToDisk]) {
      int v19 = v18 | 2;
    }
    else {
      int v19 = v18;
    }
    long long v20 = [v17 OSLogObject];
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
      v19 &= 2u;
    }
    if (v19)
    {
      uint64_t v21 = objc_opt_class();
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v22 = *(void *)(a1 + 40);
      *(_DWORD *)__int16 v28 = 138412802;
      *(void *)&v28[4] = v21;
      *(_WORD *)&v28[12] = 2112;
      *(void *)&v28[14] = v22;
      *(_WORD *)&v28[22] = 2112;
      uint64_t v29 = v23;
      id v24 = v21;
      LODWORD(v27) = 32;
      unsigned int v25 = (void *)_os_log_send_and_compose_impl();

      if (!v25)
      {
LABEL_26:

        goto LABEL_27;
      }
      long long v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, v28, v27, *(void *)v28, *(_OWORD *)&v28[8], v29);
      free(v25);
      SSFileLog();
    }

    goto LABEL_26;
  }
  BOOL v8 = +[SSLogConfig sharedDaemonConfig];
  if (!v8)
  {
    BOOL v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  id v11 = [v8 OSLogObject];
  if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    v10 &= 2u;
  }
  if (!v10) {
    goto LABEL_13;
  }
  uint64_t v12 = objc_opt_class();
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  *(_DWORD *)__int16 v28 = 138412802;
  *(void *)&v28[4] = v12;
  *(_WORD *)&v28[12] = 2112;
  *(void *)&v28[14] = v13;
  *(_WORD *)&v28[22] = 2112;
  uint64_t v29 = v14;
  id v15 = v12;
  LODWORD(v27) = 32;
  id v16 = (void *)_os_log_send_and_compose_impl();

  if (v16)
  {
    id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, v28, v27, *(_OWORD *)v28, *(void *)&v28[16], v29);
    free(v16);
    SSFileLog();
LABEL_13:
  }
  objc_msgSend(v3, "finishDownloadWithID:finalPhase:", objc_msgSend(*(id *)(a1 + 32), "longLongValue"), *(void *)(a1 + 40));
LABEL_27:

  return 1;
}

void sub_10013FAA8(uint64_t a1, uint64_t a2, void *a3)
{
  xpc_object_t xdict = a3;
  objc_opt_class();
  id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  id v5 = [v4 objectForKey:@"downloadID"];
  uint64_t v6 = [v4 objectForKey:@"kind"];
  if (v4) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  BOOL v8 = !v7;
  if (!v7) {
    objc_msgSend(*(id *)(a1 + 40), "notifyClientsOfExternalPropertyChanges:forDownloadID:downloadKind:", v4, objc_msgSend(v5, "longLongValue"), v6);
  }
  xpc_dictionary_set_BOOL(xdict, "0", v8);
}

void sub_10013FC48(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  objc_opt_class();
  uint64_t v6 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if ([v6 count]) {
    unsigned __int8 v7 = objc_msgSend(*(id *)(a1 + 40), "_pauseDownloads:isForced:client:", v6, xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 32), "2"), v8);
  }
  else {
    unsigned __int8 v7 = 1;
  }
  xpc_dictionary_set_BOOL(v5, "0", v7);
}

void sub_10013FDC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  int64_t v9 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  int v10 = *(void **)(a1 + 40);
  id v11 = +[NSNumber numberWithLongLong:int64];
  uint64_t v12 = +[NSNumber numberWithLongLong:v9];
  id v15 = 0;
  unsigned __int8 v13 = [v10 _prioritizeDownload:v11 aboveDownload:v12 client:v5 error:&v15];
  id v14 = v15;

  xpc_dictionary_set_BOOL(v6, "0", v13);
  if (v14) {
    SSXPCDictionarySetCFObject();
  }
}

void sub_10013FF90(uint64_t a1, void *a2)
{
  id v2 = [a2 clientIdentifier];
  objc_opt_class();
  id v3 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
  if (v3) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    id v5 = +[DownloadsDatabase downloadsDatabase];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_10014009C;
    v7[3] = &unk_1003A55F8;
    id v8 = v2;
    id v9 = v3;
    id v6 = [v5 modifyUsingTransactionBlock:v7];
  }
}

id sub_10014009C(uint64_t a1, void *a2)
{
  return [a2 deletePersistentDownloadManagerWithClientID:*(void *)(a1 + 32) persistenceID:*(void *)(a1 + 40)];
}

uint64_t sub_100140214(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:xpc_int64_get_value(v4)];
    [*(id *)(a1 + 32) addObject:v5];
  }
  return 1;
}

void sub_100140294(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  xpc_object_t xdict = a3;
  [v4 _resumeDownloads:v5 client:a2];
  xpc_dictionary_set_BOOL(xdict, "0", 1);
}

uint64_t sub_100140474(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:xpc_int64_get_value(v4)];
    [*(id *)(a1 + 32) addObject:v5];
  }
  return 1;
}

void sub_1001404F4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  xpc_object_t xdict = a3;
  [v4 _restartDownloads:v5 client:a2];
  xpc_dictionary_set_BOOL(xdict, "0", 1);
}

void sub_100140574(id a1)
{
  +[RestoreDownloadsOperation resetShouldSuppressTermsAndConditionsDialogs];
  id v2 = +[DownloadsDatabase downloadsDatabase];
  id v1 = [v2 modifyUsingTransactionBlock:&stru_1003A78C0];
}

BOOL sub_1001405D8(id a1, DownloadsTransaction *a2)
{
  id v2 = a2;
  id v3 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"download_state.restore_state" equalToLongLong:2];
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"download_state.restore_state" equalToLongLong:3];
  uint64_t v5 = +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v3, v4, 0);
  id v6 = +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:v5];

  LOBYTE(v5) = [(DownloadsTransaction *)v2 resetDownloadsMatchingPredicate:v6];
  [(DownloadsExternalTransaction *)v2 addDownloadChangeTypes:128];

  return (char)v5;
}

void sub_10014076C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v15 = 0;
  id v16 = &v15;
  uint64_t v17 = 0x2020000000;
  char v18 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  if (int64)
  {
    id v8 = +[DownloadsDatabase downloadsDatabase];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1001408C8;
    v10[3] = &unk_1003A56C0;
    int64_t v14 = int64;
    id v11 = v5;
    id v12 = *(id *)(a1 + 32);
    unsigned __int8 v13 = &v15;
    id v9 = [v8 modifyUsingTransactionBlock:v10];
  }
  xpc_dictionary_set_BOOL(v6, "0", *((unsigned char *)v16 + 24));
  _Block_object_dispose(&v15, 8);
}

void sub_1001408B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001408C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [DownloadAssetEntity alloc];
  uint64_t v5 = *(void *)(a1 + 56);
  id v6 = [v3 database];
  unsigned __int8 v7 = [(DownloadAssetEntity *)v4 initWithPersistentID:v5 inDatabase:v6];

  if (([*(id *)(a1 + 32) hasEntitlements] & 1) != 0
    || [*(id *)(a1 + 32) canAccessAsset:v7])
  {
    objc_opt_class();
    id v8 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
    id v9 = +[DownloadAssetEntity copyDatabaseDictionaryToSetClientDictionary:v8];
    [(DownloadAssetEntity *)v7 setValuesWithDictionary:v9];
    [v9 objectForKey:@"url"];

    int v10 = objc_alloc_init(DownloadsChangeset);
    [(DownloadsChangeset *)v10 addDownloadChangeTypes:16];
    id v11 = [(DownloadAssetEntity *)v7 valueForProperty:@"download_id"];
    -[DownloadsChangeset addUpdatedDownloadID:](v10, "addUpdatedDownloadID:", [v11 longLongValue]);

    [v3 unionChangeset:v10];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);

  return v12;
}

void sub_100140B10(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v33 = 0;
  id v34 = &v33;
  uint64_t v35 = 0x3032000000;
  uint64_t v36 = sub_10013E8DC;
  id v37 = sub_10013E8EC;
  id v38 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  int64_t v5 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  if (int64)
  {
    int64_t v6 = v5;
    unsigned __int8 v7 = +[DownloadsDatabase downloadsDatabase];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_100140E98;
    v22[3] = &unk_1003A78E8;
    int64_t v27 = int64;
    unsigned int v25 = &v33;
    id v8 = v3;
    uint64_t v9 = *(void *)(a1 + 40);
    id v23 = v8;
    uint64_t v24 = v9;
    int64_t v28 = v6;
    __int16 v26 = &v29;
    id v10 = [v7 modifyUsingTransactionBlock:v22];
  }
  if (!*((unsigned char *)v30 + 24))
  {
    id v11 = +[SSLogConfig sharedDaemonConfig];
    if (!v11)
    {
      id v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v12 = [v11 shouldLog];
    unsigned int v13 = [v11 shouldLogToDisk];
    int64_t v14 = [v11 OSLogObject];
    uint64_t v15 = v14;
    if (v13) {
      v12 |= 2u;
    }
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
      v12 &= 2u;
    }
    if (v12)
    {
      id v16 = objc_opt_class();
      uint64_t v17 = v34[5];
      int v39 = 138412546;
      int v40 = v16;
      __int16 v41 = 2112;
      uint64_t v42 = v17;
      id v18 = v16;
      LODWORD(v21) = 22;
      int v19 = (void *)_os_log_send_and_compose_impl();

      if (!v19)
      {
LABEL_14:

        goto LABEL_15;
      }
      uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v39, v21);
      free(v19);
      SSFileLog();
    }

    goto LABEL_14;
  }
LABEL_15:
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_dictionary_set_BOOL(reply, "0", *((unsigned char *)v30 + 24));
  SSXPCDictionarySetCFObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&v33, 8);
}

void sub_100140E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100140E98(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  id v4 = [[DownloadEntity alloc] initWithPersistentID:*(void *)(a1 + 64) inDatabase:v3];
  if (([(DownloadEntity *)v4 existsInDatabase] & 1) == 0
    || ([*(id *)(a1 + 32) canAccessDownload:v4] & 1) == 0)
  {
    uint64_t v19 = SSError();
    uint64_t v20 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v21 = *(void **)(v20 + 40);
    *(void *)(v20 + 40) = v19;

    goto LABEL_21;
  }
  int64_t v5 = @"handler_id";
  v30[0] = v5;
  v30[1] = @"IFNULL(download_state.phase, \"SSDownloadPhaseWaiting\")";
  id v28 = 0;
  uint64_t v29 = 0;
  [(DownloadEntity *)v4 getValues:&v28 forProperties:v30 count:2];
  if ([v28 longLongValue] != *(id *)(a1 + 72))
  {
    int64_t v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      int64_t v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    uint64_t v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      id v10 = objc_opt_class();
      uint64_t v12 = *(void *)(a1 + 64);
      uint64_t v11 = *(void *)(a1 + 72);
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)unsigned int v25 = 138413058;
      *(void *)&v25[4] = v10;
      *(_WORD *)&v25[12] = 2048;
      *(void *)&v25[14] = v11;
      *(_WORD *)&v25[22] = 2048;
      uint64_t v26 = v12;
      LOWORD(v27) = 2112;
      *(void *)((char *)&v27 + 2) = v13;
      id v14 = v10;
      LODWORD(v24) = 42;
      uint64_t v15 = (void *)_os_log_send_and_compose_impl();

      if (!v15) {
        goto LABEL_15;
      }
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, v25, v24, *(_OWORD *)v25, *(void *)&v25[16], v26, v27);
      free(v15);
      SSFileLog();
    }

LABEL_15:
    uint64_t v16 = +[NSNumber numberWithLongLong:*(void *)(a1 + 72)];
    [(DownloadEntity *)v4 setValue:v16 forProperty:v5];

    if (*(void *)(a1 + 72))
    {
      uint64_t v17 = [[DownloadSessionProperties alloc] initWithClientIdentifier:0 handlerIdentifier:*(void *)(a1 + 72)];
      [(DownloadSessionProperties *)v17 setDownloadPhase:v29];
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  for (uint64_t i = 1; i != -1; --i)

LABEL_21:
  uint64_t v22 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);

  return v22;
}

void sub_100141280(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v15 = 0;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x2020000000;
  char v18 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  if (int64)
  {
    int v8 = +[DownloadsDatabase downloadsDatabase];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1001413DC;
    v10[3] = &unk_1003A56C0;
    int64_t v14 = int64;
    id v11 = v5;
    id v12 = *(id *)(a1 + 32);
    uint64_t v13 = &v15;
    id v9 = [v8 modifyUsingTransactionBlock:v10];
  }
  xpc_dictionary_set_BOOL(v6, "0", *((unsigned char *)v16 + 24));
  _Block_object_dispose(&v15, 8);
}

void sub_1001413C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001413DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [DownloadEntity alloc];
  uint64_t v5 = *(void *)(a1 + 56);
  id v6 = [v3 database];
  unsigned int v7 = [(DownloadEntity *)v4 initWithPersistentID:v5 inDatabase:v6];

  if (([*(id *)(a1 + 32) hasEntitlements] & 1) != 0
    || [*(id *)(a1 + 32) canAccessDownload:v7])
  {
    objc_opt_class();
    int v8 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
    if (xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "0") == 32)
    {
      [v3 setExternalPropertyValues:v8 forDownloadWithID:*(void *)(a1 + 56)];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    }
    else
    {
      id v9 = +[DownloadEntity copyDatabaseDictionaryToSetClientDictionary:v8];
      [(DownloadEntity *)v7 setValuesWithDictionary:v9];
      id v10 = [v9 objectForKey:@"duet_transfer_type"];
      id v11 = v10;
      if (v10 && ![v10 integerValue])
      {
        id v12 = [(DownloadEntity *)v7 valueForProperty:@"download_state.blocked_reason"];
        if ([v12 integerValue] == (id)4)
        {
          id v13 = objc_alloc((Class)NSOrderedSet);
          int64_t v14 = +[NSNumber numberWithLongLong:[(DownloadEntity *)v7 persistentID]];
          id v15 = [v13 initWithObject:v14];

          [v3 resetDownloadsWithIdentifiers:v15];
        }
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    }
    uint64_t v16 = objc_alloc_init(DownloadsChangeset);
    [(DownloadsChangeset *)v16 addDownloadChangeTypes:16];
    uint64_t v17 = [(DownloadEntity *)v7 downloadKind];
    [(DownloadsChangeset *)v16 addDownloadKind:v17];

    [(DownloadsChangeset *)v16 addUpdatedDownloadID:*(void *)(a1 + 56)];
    [v3 unionChangeset:v16];
  }
  uint64_t v18 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);

  return v18;
}

void sub_1001416DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (SSDeviceSupportsDownload())
  {
    *(void *)uint64_t v33 = 0;
    *(void *)&v33[8] = v33;
    *(void *)&v33[16] = 0x2020000000;
    char v34 = 1;
    unsigned int v7 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "2");
    int v8 = v7;
    if (v7 && xpc_get_type(v7) == (xpc_type_t)&_xpc_type_array)
    {
      id v9 = [v5 clientIdentifier];
      unsigned __int8 v10 = [v5 hasEntitlements];
      id v11 = +[DownloadsDatabase downloadsDatabase];
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472;
      v25[2] = sub_100141A64;
      void v25[3] = &unk_1003A7988;
      id v26 = v5;
      id v12 = *(id *)(a1 + 40);
      uint64_t v13 = *(void *)(a1 + 32);
      id v27 = v12;
      uint64_t v28 = v13;
      id v29 = v8;
      id v14 = v9;
      id v30 = v14;
      uint64_t v31 = v33;
      unsigned __int8 v32 = v10;
      id v15 = [v11 modifyUsingTransactionBlock:v25];
    }
    xpc_dictionary_set_BOOL(v6, "0", *(unsigned char *)(*(void *)&v33[8] + 24));

    _Block_object_dispose(v33, 8);
  }
  else
  {
    uint64_t v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16)
    {
      uint64_t v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = [v16 shouldLog];
    if ([v16 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    uint64_t v19 = [v16 OSLogObject];
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      v18 &= 2u;
    }
    if (v18)
    {
      uint64_t v20 = objc_opt_class();
      id v21 = v20;
      [v5 clientIdentifier];
      *(_DWORD *)uint64_t v33 = 138543618;
      *(void *)&void v33[4] = v20;
      *(void *)&v33[14] = *(_WORD *)&v33[12] = 2114;
      LODWORD(v24) = 22;
      uint64_t v22 = (void *)_os_log_send_and_compose_impl();

      if (v22)
      {
        id v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, v33, v24);
        free(v22);
        SSFileLog();
      }
    }
    else
    {
    }
    xpc_dictionary_set_BOOL(v6, "0", 0);
    xpc_dictionary_set_int64(v6, "1", 157);
  }
}

void sub_100141A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100141A64(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int16 v60 = objc_alloc_init(DownloadsChangeset);
  id v4 = [v3 database];
  id v58 = objc_alloc_init((Class)NSMutableOrderedSet);
  id v59 = objc_alloc_init((Class)NSMutableDictionary);
  id v5 = objc_alloc_init((Class)NSMutableDictionary);
  id v63 = +[NSArray arrayWithObjects:@"download_state.phase", @"kind", @"download_state.restore_state", 0];
  __int16 v62 = [*(id *)(a1 + 32) downloadsQueryForMessage:*(void *)(a1 + 40) database:v4];
  v82[0] = _NSConcreteStackBlock;
  v82[1] = 3221225472;
  v82[2] = sub_10014233C;
  v82[3] = &unk_1003A7938;
  id v6 = v5;
  id v83 = v6;
  [v62 enumerateMemoryEntitiesWithProperties:v63 usingBlock:v82];
  unsigned int v7 = +[SSLogConfig sharedDaemonConfig];
  if (!v7)
  {
    unsigned int v7 = +[SSLogConfig sharedConfig];
  }
  unsigned int v8 = [v7 shouldLog];
  if ([v7 shouldLogToDisk]) {
    int v9 = v8 | 2;
  }
  else {
    int v9 = v8;
  }
  unsigned __int8 v10 = [v7 OSLogObject];
  if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
    v9 &= 2u;
  }
  if (v9)
  {
    id v11 = objc_opt_class();
    id v12 = v11;
    id v13 = [v6 count];
    *(double *)&size_t v14 = COERCE_DOUBLE(xpc_array_get_count(*(xpc_object_t *)(a1 + 56)));
    uint64_t v15 = *(void *)(a1 + 64);
    *(_DWORD *)v91 = 138413058;
    *(void *)&v91[4] = v11;
    *(_WORD *)&v91[12] = 2048;
    *(void *)&v91[14] = v13;
    *(_WORD *)&v91[22] = 2048;
    double v92 = *(double *)&v14;
    __int16 v93 = 2112;
    uint64_t v94 = v15;
    LODWORD(v56) = 42;
    uint64_t v55 = (int *)v91;
    uint64_t v16 = (void *)_os_log_send_and_compose_impl();

    if (!v16) {
      goto LABEL_12;
    }
    unsigned __int8 v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, v91, v56);
    free(v16);
    uint64_t v55 = (int *)v10;
    SSFileLog();
  }

LABEL_12:
  [(id)objc_opt_class() orderKeyIncrement];
  double v18 = v17;
  *(void *)v91 = 0;
  *(void *)&v91[8] = v91;
  *(void *)&v91[16] = 0x2020000000;
  double v92 = 0.0;
  uint64_t v19 = +[DownloadEntity maxValueForProperty:@"order_key" predicate:0 database:v4];
  [v19 doubleValue];
  double v21 = v20;

  double v92 = v18 + v21;
  uint64_t v22 = *(void **)(a1 + 56);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_1001423C8;
  applier[3] = &unk_1003A7960;
  id v61 = v6;
  id v69 = v61;
  id v57 = v4;
  id v70 = v57;
  int v78 = v91;
  id v23 = v60;
  unsigned int v71 = v23;
  id v24 = v58;
  uint64_t v25 = *(void *)(a1 + 72);
  id v72 = v24;
  uint64_t v79 = v25;
  id v26 = *(id *)(a1 + 32);
  uint64_t v27 = *(void *)(a1 + 48);
  id v73 = v26;
  uint64_t v74 = v27;
  char v81 = *(unsigned char *)(a1 + 80);
  id v75 = *(id *)(a1 + 64);
  id v28 = v3;
  id v76 = v28;
  double v80 = v18;
  id v29 = v59;
  id v77 = v29;
  xpc_array_apply(v22, applier);
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24))
  {
    id v30 = objc_alloc_init((Class)NSMutableOrderedSet);
    long long v66 = 0u;
    long long v67 = 0u;
    long long v64 = 0u;
    long long v65 = 0u;
    id v31 = v61;
    id v32 = [v31 countByEnumeratingWithState:&v64 objects:v90 count:16];
    if (v32)
    {
      uint64_t v33 = *(void *)v65;
      do
      {
        for (uint64_t i = 0; i != v32; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v65 != v33) {
            objc_enumerationMutation(v31);
          }
          objc_msgSend(v30, "addObject:", *(void *)(*((void *)&v64 + 1) + 8 * i), v55);
        }
        id v32 = [v31 countByEnumeratingWithState:&v64 objects:v90 count:16];
      }
      while (v32);
    }

    if (![v30 count])
    {
LABEL_32:
      if (objc_msgSend(v29, "count", v55)) {
        [v28 reconcileSoftwareDownloads:v29 fromITunesStore:0];
      }
      if (![v24 count]) {
        goto LABEL_46;
      }
      id v44 = +[SSLogConfig sharedDaemonConfig];
      if (!v44)
      {
        id v44 = +[SSLogConfig sharedConfig];
      }
      unsigned int v45 = [v44 shouldLog];
      unsigned int v46 = [v44 shouldLogToDisk];
      id v47 = [v44 OSLogObject];
      long long v48 = v47;
      if (v46) {
        v45 |= 2u;
      }
      if (!os_log_type_enabled(v47, OS_LOG_TYPE_INFO)) {
        v45 &= 2u;
      }
      if (v45)
      {
        id v49 = (id)objc_opt_class();
        id v50 = [v24 count];
        uint64_t v51 = *(void *)(a1 + 64);
        int v84 = 138412802;
        id v85 = v49;
        __int16 v86 = 2048;
        id v87 = v50;
        __int16 v88 = 2112;
        uint64_t v89 = v51;
        LODWORD(v56) = 32;
        uint64_t v55 = &v84;
        uint64_t v52 = (void *)_os_log_send_and_compose_impl();

        if (!v52)
        {
LABEL_45:

          [v28 retryDownloadsWithIdentifiers:v24];
LABEL_46:

          goto LABEL_47;
        }
        long long v48 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v52, 4, &v84, v56);
        free(v52);
        uint64_t v55 = (int *)v48;
        SSFileLog();
      }

      goto LABEL_45;
    }
    uint64_t v35 = +[SSLogConfig sharedDaemonConfig];
    if (!v35)
    {
      uint64_t v35 = +[SSLogConfig sharedConfig];
    }
    unsigned int v36 = objc_msgSend(v35, "shouldLog", v55);
    unsigned int v37 = [v35 shouldLogToDisk];
    id v38 = [v35 OSLogObject];
    int v39 = v38;
    if (v37) {
      v36 |= 2u;
    }
    if (!os_log_type_enabled(v38, OS_LOG_TYPE_INFO)) {
      v36 &= 2u;
    }
    if (v36)
    {
      id v40 = (id)objc_opt_class();
      id v41 = [v30 count];
      uint64_t v42 = *(void *)(a1 + 64);
      int v84 = 138412802;
      id v85 = v40;
      __int16 v86 = 2048;
      id v87 = v41;
      __int16 v88 = 2112;
      uint64_t v89 = v42;
      LODWORD(v56) = 32;
      uint64_t v55 = &v84;
      uint64_t v43 = (void *)_os_log_send_and_compose_impl();

      if (!v43)
      {
LABEL_31:

        *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [v28 finishDownloadsWithIdentifiers:v30 finalPhase:SSDownloadPhaseCanceled];
        goto LABEL_32;
      }
      int v39 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v43, 4, &v84, v56);
      free(v43);
      uint64_t v55 = (int *)v39;
      SSFileLog();
    }

    goto LABEL_31;
  }
LABEL_47:
  objc_msgSend(v28, "unionChangeset:", v23, v55);
  BOOL v53 = *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) != 0;

  _Block_object_dispose(v91, 8);
  return v53;
}

void sub_1001422E4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_10014233C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(v3, "databaseID"));
  [*(id *)(a1 + 32) setObject:v3 forKey:v4];
}

uint64_t sub_1001423C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_dictionary)
  {
    id v5 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", xpc_dictionary_get_int64(v4, "0"));
    id v6 = [*(id *)(a1 + 32) objectForKey:v5];
    if (v6)
    {
      id v47 = [v5 longLongValue];
      unsigned int v7 = [[DownloadEntity alloc] initWithPersistentID:v47 inDatabase:*(void *)(a1 + 40)];
      id v8 = objc_alloc_init((Class)NSMutableDictionary);
      int v9 = +[NSNumber numberWithDouble:*(double *)(*(void *)(*(void *)(a1 + 104) + 8) + 24)];
      [v8 setObject:v9 forKey:@"order_key"];

      unsigned __int8 v10 = [v6 valueForProperty:@"download_state.restore_state"];
      id v11 = (char *)[v10 integerValue];

      id v12 = v7;
      if ((unint64_t)(v11 - 4) <= 0xFFFFFFFFFFFFFFFDLL)
      {
        id v45 = v5;
        [(DownloadEntity *)v7 resetAssetLocalPaths];
        id v13 = +[NSNumber numberWithInteger:0];
        [v8 setObject:v13 forKey:@"download_state.blocked_reason"];

        size_t v14 = [v6 valueForProperty:@"download_state.phase"];
        if ((SSDownloadPhaseIsFinishedPhase() & 1) != 0
          || [v14 isEqualToString:SSDownloadPhaseFailed])
        {
          [v8 setObject:SSDownloadPhaseWaiting forKey:@"download_state.phase"];
          [*(id *)(a1 + 48) addDownloadChangeTypes:2];
          [*(id *)(a1 + 48) addStatusChangedDownloadID:v47];
          [*(id *)(a1 + 48) addDownloadToPipelineWithID:v47];
        }
        if (v11 == (char *)1)
        {
          uint64_t v15 = +[NSNumber numberWithInteger:0];
          [v8 setObject:v15 forKey:@"download_state.restore_state"];

          [*(id *)(a1 + 48) addDownloadChangeTypes:32];
          [*(id *)(a1 + 48) addRestorableDownloadID:v47];
        }
        else
        {
          [*(id *)(a1 + 56) addObject:v45];
        }
        id v12 = v7;

        id v5 = v45;
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 112) + 8) + 24) = [(DownloadEntity *)v12 setValuesWithDictionary:v8];
      [*(id *)(a1 + 48) addDownloadChangeTypes:1];
      id v26 = v12;
      uint64_t v27 = *(void **)(a1 + 48);
      id v28 = [v6 valueForProperty:@"kind"];
      [v27 addDownloadKind:v28];

      [*(id *)(a1 + 32) removeObjectForKey:v5];
      goto LABEL_44;
    }
    id v16 = [*(id *)(a1 + 64) newDownloadWithClientXPCDownload:v4 error:0];
    double v17 = [v16 valueForProperty:@"kind"];
    if (v16)
    {
      if (*(unsigned char *)(a1 + 128) || ([*(id *)(a1 + 64) supportsDownloadKind:v17] & 1) != 0)
      {
        id v18 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", v16, 0);
        uint64_t v19 = [*(id *)(a1 + 88) importDownloads:v18 initialOrderKey:*(double *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) orderKeyIncrement:*(double *)(a1 + 120)];
        *(unsigned char *)(*(void *)(*(void *)(a1 + 112) + 8) + 24) = [v19 count] == (id)1;
        if (*(unsigned char *)(*(void *)(*(void *)(a1 + 112) + 8) + 24))
        {
          id v20 = v5;
          double v21 = [v16 valueForProperty:@"is_restore"];
          unsigned __int8 v22 = [v21 BOOLValue];

          id v23 = *(void **)(a1 + 48);
          if (v22)
          {
            [v23 addDownloadChangeTypes:32];
            id v24 = *(void **)(a1 + 48);
            uint64_t v25 = [v19 firstObject];
            objc_msgSend(v24, "addRestorableDownloadID:", objc_msgSend(v25, "longLongValue"));
          }
          else
          {
            [v23 addDownloadsToPipelineWithIDs:v19];
          }
          id v5 = v20;
          if (SSDownloadKindIsSoftwareKind())
          {
            uint64_t v33 = [v16 valueForProperty:@"bundle_id"];
            if (v33)
            {
              char v34 = *(void **)(a1 + 96);
              uint64_t v35 = [v19 lastObject];
              unsigned int v36 = v34;
              id v5 = v20;
              [v36 setObject:v35 forKey:v33];

              id v6 = 0;
            }
          }
        }
        goto LABEL_42;
      }
      id v46 = v5;
      id v18 = +[SSLogConfig sharedDaemonConfig];
      if (!v18)
      {
        id v18 = +[SSLogConfig sharedConfig];
      }
      unsigned int v37 = [v18 shouldLog];
      if ([v18 shouldLogToDisk]) {
        v37 |= 2u;
      }
      id v38 = [v18 OSLogObject];
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT)) {
        int v39 = v37;
      }
      else {
        int v39 = v37 & 2;
      }
      if (!v39)
      {

        id v5 = v46;
        goto LABEL_43;
      }
      id v40 = objc_opt_class();
      uint64_t v41 = *(void *)(a1 + 80);
      int v48 = 138412802;
      id v49 = v40;
      __int16 v50 = 2112;
      uint64_t v51 = v41;
      __int16 v52 = 2112;
      BOOL v53 = v17;
      id v42 = v40;
      LODWORD(v44) = 32;
      id v32 = (void *)_os_log_send_and_compose_impl();

      id v6 = 0;
      id v5 = v46;
      if (!v32)
      {
LABEL_43:

LABEL_44:
        *(double *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) = *(double *)(a1 + 120)
                                                                     + *(double *)(*(void *)(*(void *)(a1 + 104)
                                                                                             + 8)
                                                                                 + 24);

        goto LABEL_45;
      }
    }
    else
    {
      id v18 = +[SSLogConfig sharedDaemonConfig];
      if (!v18)
      {
        id v18 = +[SSLogConfig sharedConfig];
      }
      unsigned int v29 = [v18 shouldLog];
      if ([v18 shouldLogToDisk]) {
        v29 |= 2u;
      }
      uint64_t v19 = [v18 OSLogObject];
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
        v29 &= 2u;
      }
      if (!v29) {
        goto LABEL_42;
      }
      int v48 = 138412290;
      id v49 = (id)objc_opt_class();
      id v30 = v5;
      id v31 = v49;
      LODWORD(v44) = 12;
      id v32 = (void *)_os_log_send_and_compose_impl();

      id v5 = v30;
      if (!v32) {
        goto LABEL_43;
      }
    }
    uint64_t v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v32, 4, &v48, v44);
    free(v32);
    SSFileLog();
LABEL_42:

    goto LABEL_43;
  }
LABEL_45:

  return 1;
}

void sub_100142CA4(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:kSSNotificationAutomaticDownloadSettingsChanged object:0];
}

void sub_100142DC4(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
  id v3 = (_xpc_endpoint_s *)objc_claimAutoreleasedReturnValue();
  id v4 = v3;
  if (v3 && xpc_get_type(v3) == (xpc_type_t)&_xpc_type_endpoint)
  {
    id v5 = xpc_connection_create_from_endpoint(v4);
    if (v5)
    {
      id v8 = [[DownloadHandlerClient alloc] initWithInputConnection:*(void *)(a1 + 48)];
      [(DownloadHandlerClient *)v8 setHandlerIdentifier:int64];
      [(XPCClient *)v8 setOutputConnectionWithConnection:v5];
      id v12 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "3");
      id v13 = v12;
      if (v12 && xpc_get_type(v12) == (xpc_type_t)&_xpc_type_BOOL) {
        [(DownloadHandlerClient *)v8 setSessionsShouldBlockOtherDownloads:xpc_BOOL_get_value(v13)];
      }
      size_t v14 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "4");

      if (v14 && xpc_get_type(v14) == (xpc_type_t)&_xpc_type_array)
      {
        uint64_t v15 = (void *)SSXPCCreateCFObjectFromXPCObject();
        id v16 = +[NSSet setWithArray:v15];
        [(DownloadHandlerClient *)v8 setDownloadPhasesToIgnore:v16];
      }
      double v17 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "5");

      if (v17 && xpc_get_type(v17) == (xpc_type_t)&_xpc_type_BOOL) {
        [(DownloadHandlerClient *)v8 setSessionsNeedPowerAssertion:xpc_BOOL_get_value(v17)];
      }
      id v18 = +[DownloadHandlerManager handlerManager];
      [v18 addDownloadHandler:v8];

      xpc_object_t v19 = xpc_dictionary_create(0, 0, 0);
      id v20 = [(XPCClient *)v8 outputConnection];
      [v20 sendMessage:v19];
    }
    else
    {
      id v8 = +[SSLogConfig sharedDaemonConfig];
      if (!v8)
      {
        id v8 = +[SSLogConfig sharedConfig];
      }
      unsigned int v21 = [(DownloadHandlerClient *)v8 shouldLog];
      if ([(DownloadHandlerClient *)v8 shouldLogToDisk]) {
        int v22 = v21 | 2;
      }
      else {
        int v22 = v21;
      }
      id v23 = [(DownloadHandlerClient *)v8 OSLogObject];
      if (!os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
        v22 &= 2u;
      }
      if (v22)
      {
        *(_DWORD *)id v28 = 138412546;
        *(void *)&v28[4] = objc_opt_class();
        *(_WORD *)&v28[12] = 2048;
        *(void *)&v28[14] = int64;
        id v24 = *(id *)&v28[4];
        LODWORD(v27) = 22;
        uint64_t v25 = (void *)_os_log_send_and_compose_impl();

        if (v25)
        {
          id v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, v28, v27, *(void *)v28, *(_OWORD *)&v28[8]);
          free(v25);
          SSFileLog();
        }
      }
      else
      {
      }
    }
    goto LABEL_24;
  }
  id v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5)
  {
    id v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  id v8 = [v5 OSLogObject];
  if (!os_log_type_enabled(&v8->super.super, OS_LOG_TYPE_DEFAULT)) {
    v7 &= 2u;
  }
  if (!v7)
  {
LABEL_24:

    goto LABEL_25;
  }
  *(_DWORD *)id v28 = 138412546;
  *(void *)&v28[4] = objc_opt_class();
  *(_WORD *)&v28[12] = 2048;
  *(void *)&v28[14] = int64;
  id v9 = *(id *)&v28[4];
  LODWORD(v27) = 22;
  unsigned __int8 v10 = (void *)_os_log_send_and_compose_impl();

  if (v10)
  {
    id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, v28, v27, *(_OWORD *)v28, *(void *)&v28[16]);
    free(v10);
    SSFileLog();
  }
LABEL_25:
}

void sub_100143314(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  int64_t v3 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  id v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4)
  {
    id v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  int v7 = [v4 OSLogObject];
  if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    v6 &= 2u;
  }
  if (!v6) {
    goto LABEL_11;
  }
  int v31 = 138412802;
  id v32 = (id)objc_opt_class();
  __int16 v33 = 2048;
  int64_t v34 = int64;
  __int16 v35 = 2048;
  int64_t v36 = v3;
  id v8 = v32;
  LODWORD(v28) = 32;
  uint64_t v27 = &v31;
  id v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    int v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v31, v28);
    free(v9);
    uint64_t v27 = (int *)v7;
    SSFileLog();
LABEL_11:
  }
  unsigned __int8 v10 = +[DownloadHandlerManager handlerManager];
  id v11 = v10;
  switch(v3)
  {
    case 1000:
      [v10 cancelAuthenticationSessionWithID:int64];
      goto LABEL_49;
    case 1001:
      [v10 continueAuthenticationSessionWithID:int64];
      goto LABEL_49;
    case 1002:
      size_t v14 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "3");
      uint64_t v15 = v14;
      if (!v14 || xpc_get_type(v14) != (xpc_type_t)&_xpc_type_data)
      {
        id v16 = 0;
LABEL_48:
        objc_msgSend(v11, "useCredential:forAuthenticationSessionWithID:", v16, int64, v27);

        goto LABEL_49;
      }
      double v17 = (void *)SSXPCCreateCFObjectFromXPCObject();
      id v30 = 0;
      id v16 = +[NSKeyedUnarchiver unarchivedObjectOfClass:objc_opt_class() fromData:v17 error:&v30];
      id v18 = v30;
      if (!v18) {
        goto LABEL_47;
      }
      unsigned int v29 = v17;
      xpc_object_t v19 = +[SSLogConfig sharedStoreServicesConfig];
      if (!v19)
      {
        xpc_object_t v19 = +[SSLogConfig sharedConfig];
      }
      unsigned int v20 = objc_msgSend(v19, "shouldLog", v27);
      if ([v19 shouldLogToDisk]) {
        int v21 = v20 | 2;
      }
      else {
        int v21 = v20;
      }
      int v22 = [v19 OSLogObject];
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        int v23 = v21;
      }
      else {
        int v23 = v21 & 2;
      }
      if (v23)
      {
        id v24 = objc_opt_class();
        int v31 = 138543618;
        id v32 = v24;
        __int16 v33 = 2114;
        int64_t v34 = (int64_t)v18;
        id v25 = v24;
        LODWORD(v28) = 22;
        uint64_t v27 = &v31;
        id v26 = (void *)_os_log_send_and_compose_impl();

        double v17 = v29;
        if (!v26)
        {
LABEL_46:

LABEL_47:
          goto LABEL_48;
        }
        int v22 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v26, 4, &v31, v28);
        free(v26);
        uint64_t v27 = (int *)v22;
        SSFileLog();
      }
      else
      {
        double v17 = v29;
      }

      goto LABEL_46;
    case 1003:
      [v10 performDefaultForAuthenticationSessionWithID:int64];
      goto LABEL_49;
    case 1004:
      [v10 rejectSpaceForAuthenticationSessionWithID:int64];
      goto LABEL_49;
    default:
      switch(v3)
      {
        case 0:
          id v12 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "3");
          if (v12) {
            id v13 = [objc_alloc((Class)NSError) initWithXPCEncoding:v12];
          }
          else {
            id v13 = 0;
          }
          objc_msgSend(v11, "failDownloadSessionWithID:error:", int64, v13, v27);
          goto LABEL_31;
        case 1:
          [v10 releaseDownloadSessionWithID:int64];
          break;
        case 2:
          [v10 finishDownloadSessionWithID:int64];
          break;
        case 3:
          id v12 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "3");
          if (v12) {
            id v13 = [objc_alloc((Class)NSError) initWithXPCEncoding:v12];
          }
          else {
            id v13 = 0;
          }
          objc_msgSend(v11, "disavowDownloadSessionWithID:error:", int64, v13, v27);
LABEL_31:

          break;
        default:
          break;
      }
LABEL_49:

      return;
  }
}

void sub_100143904(uint64_t a1, void *a2)
{
  id v3 = a2;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  unsigned int v5 = +[DownloadHandlerManager handlerManager];
  int v6 = [v5 sessionForSessionID:int64];

  if (v6)
  {
    int v7 = [v6 sessionProperties];
    xpc_dictionary_set_int64(v3, "0", (int64_t)[v7 downloadIdentifier]);
    xpc_dictionary_set_int64(v3, "1", (int64_t)[v7 assetIdentifier]);
    id v8 = [v7 downloadPhase];
    if (v8)
    {
LABEL_19:
      SSXPCDictionarySetCFObject();

      goto LABEL_20;
    }
    uint64_t v9 = [v7 authenticationChallenge];
    if (!v9)
    {
      id v8 = 0;
      goto LABEL_19;
    }
    unsigned __int8 v10 = (void *)v9;
    id v20 = 0;
    id v8 = +[NSKeyedArchiver archivedDataWithRootObject:v9 requiringSecureCoding:1 error:&v20];
    id v11 = v20;

    if (!v11)
    {
LABEL_17:

      goto LABEL_19;
    }
    id v12 = +[SSLogConfig sharedStoreServicesConfig];
    if (!v12)
    {
      id v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    uint64_t v15 = [v12 OSLogObject];
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      v14 &= 2u;
    }
    if (v14)
    {
      id v16 = objc_opt_class();
      int v21 = 138543618;
      int v22 = v16;
      __int16 v23 = 2114;
      id v24 = v11;
      id v17 = v16;
      LODWORD(v19) = 22;
      id v18 = (void *)_os_log_send_and_compose_impl();

      if (!v18)
      {
LABEL_16:

        goto LABEL_17;
      }
      uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v21, v19);
      free(v18);
      SSFileLog();
    }

    goto LABEL_16;
  }
LABEL_20:
}

void sub_100143C64(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  id v2 = +[DownloadHandlerManager handlerManager];
  [v2 resetDisavowedSessionsForHandlerWithID:int64];
}

void sub_100143D94(uint64_t a1)
{
  unsigned int v5 = [[DownloadHandlerClient alloc] initWithInputConnection:*(void *)(a1 + 32)];
  id v2 = [(XPCClient *)v5 clientIdentifier];
  if (v2)
  {
    int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1");
    id v4 = +[DownloadHandlerManager handlerManager];
    [v4 setGlobalDownloadHandlerID:int64 forClientID:v2];
  }
}

void sub_100143EE4(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  id v3 = +[DownloadHandlerManager handlerManager];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_100143FB0;
  v6[3] = &unk_1003A79D0;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v7 = v4;
  uint64_t v8 = v5;
  int64_t v9 = int64;
  [v3 modifyDownloadHandlerWithID:int64 usingBlock:v6];
}

void sub_100143FB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
  uint64_t v5 = v4;
  if (!v4 || xpc_get_type(v4) != (xpc_type_t)&_xpc_type_dictionary) {
    goto LABEL_26;
  }
  int v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    int v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  int64_t v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
    v8 &= 2u;
  }
  if (v8)
  {
    unsigned __int8 v10 = objc_opt_class();
    uint64_t v11 = *(void *)(a1 + 48);
    *(_DWORD *)int v21 = 138412802;
    *(void *)&void v21[4] = v10;
    *(_WORD *)&v21[12] = 2048;
    *(void *)&v21[14] = v11;
    *(_WORD *)&v21[22] = 2112;
    id v22 = v3;
    id v12 = v10;
    LODWORD(v20) = 32;
    unsigned int v13 = (void *)_os_log_send_and_compose_impl();

    if (!v13) {
      goto LABEL_14;
    }
    int64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, v21, v20, *(_OWORD *)v21, *(void *)&v21[16], v22);
    free(v13);
    SSFileLog();
  }

LABEL_14:
  int v14 = xpc_dictionary_get_value(v5, SSDownloadHandlerPropertySessionsShouldBlockOtherDownloads);
  uint64_t v15 = v14;
  if (v14 && xpc_get_type(v14) == (xpc_type_t)&_xpc_type_BOOL) {
    [v3 setSessionsShouldBlockOtherDownloads:xpc_BOOL_get_value(v15)];
  }
  id v16 = xpc_dictionary_get_value(v5, SSDownloadHandlerPropertyDownloadPhasesToIgnore);

  if (v16)
  {
    if (xpc_get_type(v16) == (xpc_type_t)&_xpc_type_null)
    {
      [v3 setDownloadPhasesToIgnore:0];
    }
    else if (xpc_get_type(v16) == (xpc_type_t)&_xpc_type_array)
    {
      id v17 = (void *)SSXPCCreateCFObjectFromXPCObject();
      id v18 = +[NSSet setWithArray:v17];
      [v3 setDownloadPhasesToIgnore:v18];
    }
  }
  uint64_t v19 = xpc_dictionary_get_value(v5, SSDownloadHandlerPropertySessionsNeedPowerAssertion);

  if (v19 && xpc_get_type(v19) == (xpc_type_t)&_xpc_type_BOOL) {
    [v3 setSessionsNeedPowerAssertion:xpc_BOOL_get_value(v19)];
  }

LABEL_26:
}

void sub_100144374(uint64_t a1)
{
  id v5 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithDouble:", xpc_dictionary_get_double(*(xpc_object_t *)(a1 + 32), "2"));
  id v2 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", v5, @"percent", 0);
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  id v4 = +[DownloadHandlerManager handlerManager];
  [v4 setSessionProperties:v2 forSessionWithID:int64];
}

void sub_1001444F0(uint64_t a1)
{
  id v2 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
  if (v2)
  {
    xpc_object_t xdict = v2;
    BOOL v3 = xpc_get_type(v2) == (xpc_type_t)&_xpc_type_dictionary;
    id v2 = xdict;
    if (v3)
    {
      id v4 = objc_alloc_init((Class)NSMutableDictionary);
      id v5 = xpc_dictionary_get_value(xdict, "3");
      int v6 = v5;
      if (v5 && xpc_get_type(v5) == (xpc_type_t)&_xpc_type_BOOL)
      {
        unsigned int v7 = +[NSNumber numberWithBool:xpc_BOOL_get_value(v6)];
        [v4 setObject:v7 forKey:@"blocks"];
      }
      int v8 = xpc_dictionary_get_value(xdict, "4");

      if (v8 && xpc_get_type(v8) == (xpc_type_t)&_xpc_type_BOOL)
      {
        int64_t v9 = +[NSNumber numberWithBool:xpc_BOOL_get_value(v8)];
        [v4 setObject:v9 forKey:@"pausable"];
      }
      unsigned __int8 v10 = xpc_dictionary_get_value(xdict, "5");

      if (v10 && xpc_get_type(v10) == (xpc_type_t)&_xpc_type_BOOL)
      {
        uint64_t v11 = +[NSNumber numberWithBool:xpc_BOOL_get_value(v10)];
        [v4 setObject:v11 forKey:@"needspowerassert"];
      }
      if ([v4 count])
      {
        int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
        unsigned int v13 = +[DownloadHandlerManager handlerManager];
        [v13 setSessionProperties:v4 forSessionWithID:int64];
      }
      id v2 = xdict;
    }
  }
}

void sub_1001447C8(uint64_t a1)
{
  objc_opt_class();
  id v5 = (id)SSXPCDictionaryCopyCFObjectWithClass();
  id v2 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", v5, @"status", 0);
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  id v4 = +[DownloadHandlerManager handlerManager];
  [v4 setSessionProperties:v2 forSessionWithID:int64];
}

void sub_10014492C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  BOOL v3 = *(void **)(*(void *)(a1 + 40) + 56);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100144B94;
  v16[3] = &unk_1003A79F8;
  id v4 = v2;
  id v17 = v4;
  [v3 enumerateKeysAndObjectsUsingBlock:v16];
  uint64_t v5 = (uint64_t)[*(id *)(*(void *)(a1 + 40) + 24) count];
  while (v5-- >= 1)
  {
    id v7 = [*(id *)(*(void *)(a1 + 40) + 24) objectAtIndex:v5];

    if (v7 == v4)
    {
      int v8 = +[SSLogConfig sharedDaemonConfig];
      if (!v8)
      {
        int v8 = +[SSLogConfig sharedConfig];
      }
      unsigned int v9 = [v8 shouldLog];
      if ([v8 shouldLogToDisk]) {
        int v10 = v9 | 2;
      }
      else {
        int v10 = v9;
      }
      uint64_t v11 = [v8 OSLogObject];
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
        v10 &= 2u;
      }
      if (v10)
      {
        id v12 = objc_opt_class();
        int v18 = 138412546;
        uint64_t v19 = v12;
        __int16 v20 = 2112;
        id v21 = v4;
        id v13 = v12;
        LODWORD(v15) = 22;
        int v14 = (void *)_os_log_send_and_compose_impl();

        if (v14)
        {
          uint64_t v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v18, v15);
          free(v14);
          SSFileLog();
          goto LABEL_14;
        }
      }
      else
      {
LABEL_14:
      }
      [v4 setOutputConnectionWithConnection:0];
      [*(id *)(*(void *)(a1 + 40) + 24) removeObjectAtIndex:v5];
      break;
    }
  }
}

id sub_100144B94(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 removeObjectIdenticalTo:*(void *)(a1 + 32)];
}

void sub_100144CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100144CE0(uint64_t a1, void *a2)
{
  id v32 = a2;
  BOOL v3 = [v32 database];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id obj = *(id *)(a1 + 32);
  id v4 = [obj countByEnumeratingWithState:&v34 objects:v46 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v35;
    uint64_t v31 = SSDownloadPhaseCanceled;
    id v7 = &OBJC_IVAR___FinishDownloadOperation__stopResult;
    id v30 = v3;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v35 != v6) {
          objc_enumerationMutation(obj);
        }
        unsigned int v9 = *(void **)(*((void *)&v34 + 1) + 8 * i);
        id v10 = objc_msgSend(objc_alloc((Class)(v7 + 826)), "initWithPersistentID:inDatabase:", objc_msgSend(v9, "longLongValue"), v3);
        if (([*(id *)(a1 + 40) canAccessDownload:v10] & 1) == 0)
        {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
          goto LABEL_33;
        }
        uint64_t v11 = @"download_state.can_cancel";
        id v44 = 0;
        id v45 = v11;
        [v10 getValues:&v44 forProperties:&v45 count:1];
        if (v44 && ![v44 BOOLValue])
        {
          uint64_t v19 = +[SSLogConfig sharedDaemonConfig];
          if (!v19)
          {
            uint64_t v19 = +[SSLogConfig sharedConfig];
          }
          unsigned int v20 = objc_msgSend(v19, "shouldLog", v28);
          if ([v19 shouldLogToDisk]) {
            v20 |= 2u;
          }
          id v21 = [v19 OSLogObject];
          if (!os_log_type_enabled(v21, OS_LOG_TYPE_INFO)) {
            v20 &= 2u;
          }
          if (v20)
          {
            id v22 = objc_opt_class();
            uint64_t v23 = *(void *)(a1 + 40);
            int v38 = 138412802;
            int v39 = v22;
            __int16 v40 = 2112;
            uint64_t v41 = v9;
            __int16 v42 = 2112;
            uint64_t v43 = v23;
            id v24 = v22;
            LODWORD(v29) = 32;
            uint64_t v28 = &v38;
            id v25 = (void *)_os_log_send_and_compose_impl();

            BOOL v3 = v30;
            if (v25)
            {
              id v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v38, v29);
              free(v25);
              uint64_t v28 = (int *)v21;
              SSFileLog();
              goto LABEL_30;
            }
          }
          else
          {
LABEL_30:
          }
          goto LABEL_32;
        }
        id v12 = +[SSLogConfig sharedDaemonConfig];
        if (!v12)
        {
          id v12 = +[SSLogConfig sharedConfig];
        }
        unsigned int v13 = [v12 shouldLog];
        if ([v12 shouldLogToDisk]) {
          v13 |= 2u;
        }
        int v14 = [v12 OSLogObject];
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
          v13 &= 2u;
        }
        if (!v13) {
          goto LABEL_18;
        }
        uint64_t v15 = objc_opt_class();
        uint64_t v16 = *(void *)(a1 + 40);
        int v38 = 138412802;
        int v39 = v15;
        __int16 v40 = 2112;
        uint64_t v41 = v9;
        __int16 v42 = 2112;
        uint64_t v43 = v16;
        id v17 = v15;
        LODWORD(v29) = 32;
        uint64_t v28 = &v38;
        int v18 = (void *)_os_log_send_and_compose_impl();

        BOOL v3 = v30;
        if (v18)
        {
          int v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v38, v29);
          free(v18);
          uint64_t v28 = (int *)v14;
          SSFileLog();
LABEL_18:
        }
        *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = objc_msgSend(v32, "finishDownloadWithID:finalPhase:", objc_msgSend(v9, "longLongValue"), v31);
LABEL_32:

        id v7 = &OBJC_IVAR___FinishDownloadOperation__stopResult;
LABEL_33:
      }
      id v5 = [obj countByEnumeratingWithState:&v34 objects:v46 count:16];
    }
    while (v5);
  }

  uint64_t v26 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  return v26;
}

void sub_10014524C(uint64_t a1, void *a2)
{
  id v18 = a2;
  id v3 = objc_alloc_init((Class)NSMutableArray);
  id v4 = objc_alloc_init((Class)NSMutableArray);
  id v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"kind" equalToValue:SSDownloadKindSoftwareApplication];
  [v3 addObject:v5];

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v6 = *(id *)(a1 + 32);
  id v7 = [v6 countByEnumeratingWithState:&v21 objects:v26 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        if ([v11 length])
        {
          id v12 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"bundle_id" equalToValue:v11];
          [v4 addObject:v12];
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v21 objects:v26 count:16];
    }
    while (v8);
  }

  unsigned int v13 = +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:v4];
  [v3 addObject:v13];
  int v14 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v3];
  uint64_t v15 = [v18 database];
  uint64_t v16 = +[DownloadEntity queryWithDatabase:v15 predicate:v14];

  id v25 = @"bundle_id";
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  void v19[2] = sub_1001454FC;
  v19[3] = &unk_1003A3988;
  id v20 = *(id *)(a1 + 40);
  [v16 enumeratePersistentIDsAndProperties:&v25 count:1 usingBlock:v19];
}

void sub_1001454FC(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = +[NSNumber numberWithLongLong:a2];
    [v4 setObject:v5 forKey:*a3];
  }
}

uint64_t sub_100145610(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100145704(uint64_t a1)
{
  xpc_object_t message = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), message);
}

void sub_100145A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100145A74(uint64_t a1, void *a2)
{
  id v32 = a2;
  long long v35 = [v32 database];
  id v33 = objc_alloc_init((Class)NSMutableOrderedSet);
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id obj = *(id *)(a1 + 32);
  id v3 = [obj countByEnumeratingWithState:&v36 objects:v47 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v37;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v37 != v5) {
          objc_enumerationMutation(obj);
        }
        id v7 = *(void **)(*((void *)&v36 + 1) + 8 * i);
        id v8 = objc_msgSend(v7, "longLongValue", v30, v31);
        uint64_t v9 = [[DownloadEntity alloc] initWithPersistentID:v8 inDatabase:v35];
        if (([*(id *)(a1 + 40) canAccessDownload:v9] & 1) == 0)
        {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
          goto LABEL_46;
        }
        id v10 = [(DownloadEntity *)v9 downloadKind];
        int IsSoftwareKind = SSDownloadKindIsSoftwareKind();

        if (IsSoftwareKind)
        {
          id v12 = +[SSLogConfig sharedDaemonConfig];
          if (!v12)
          {
            id v12 = +[SSLogConfig sharedConfig];
          }
          unsigned int v13 = [v12 shouldLog];
          if ([v12 shouldLogToDisk]) {
            v13 |= 2u;
          }
          int v14 = [v12 OSLogObject];
          if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
            v13 &= 2u;
          }
          if (v13)
          {
            uint64_t v15 = objc_opt_class();
            int v43 = 138412546;
            id v44 = v15;
            __int16 v45 = 2112;
            id v46 = v7;
            id v16 = v15;
            LODWORD(v31) = 22;
            id v30 = &v43;
            id v17 = (void *)_os_log_send_and_compose_impl();

            if (v17)
            {
              int v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v43, v31);
              free(v17);
              id v30 = (int *)v14;
              SSFileLog();
              goto LABEL_17;
            }
          }
          else
          {
LABEL_17:
          }
          *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = *(void *)(a1 + 64) > 1;
          goto LABEL_46;
        }
        v42[0] = @"download_state.phase";
        v42[1] = @"IFNULL(download_state.can_pause, 1)";
        __int16 v40 = 0;
        id v41 = 0;
        [(DownloadEntity *)v9 getValues:&v40 forProperties:v42 count:2];
        if (*(unsigned char *)(a1 + 72) || ([v41 BOOLValue] & 1) != 0)
        {
          if (SSDownloadPhaseIsPausable())
          {
            [v33 addObject:v7];
            *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
            goto LABEL_44;
          }
          id v18 = +[SSLogConfig sharedDaemonConfig];
          if (!v18)
          {
            id v18 = +[SSLogConfig sharedConfig];
          }
          unsigned int v19 = [v18 shouldLog];
          if ([v18 shouldLogToDisk]) {
            v19 |= 2u;
          }
          id v20 = [v18 OSLogObject];
          if (!os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
            v19 &= 2u;
          }
          if (!v19) {
            goto LABEL_42;
          }
          long long v21 = objc_opt_class();
          int v43 = 138412546;
          id v44 = v21;
          __int16 v45 = 2112;
          id v46 = v40;
          id v22 = v21;
          LODWORD(v31) = 22;
          id v30 = &v43;
        }
        else
        {
          id v18 = +[SSLogConfig sharedDaemonConfig];
          if (!v18)
          {
            id v18 = +[SSLogConfig sharedConfig];
          }
          unsigned int v23 = [v18 shouldLog];
          if ([v18 shouldLogToDisk]) {
            v23 |= 2u;
          }
          id v20 = [v18 OSLogObject];
          if (!os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
            v23 &= 2u;
          }
          if (!v23) {
            goto LABEL_42;
          }
          long long v24 = objc_opt_class();
          int v43 = 138412546;
          id v44 = v24;
          __int16 v45 = 2048;
          id v46 = v8;
          id v22 = v24;
          LODWORD(v31) = 22;
          id v30 = &v43;
        }
        id v25 = (void *)_os_log_send_and_compose_impl();

        if (v25)
        {
          id v20 = +[NSString stringWithCString:v25 encoding:4];
          free(v25);
          id v30 = (int *)v20;
          SSFileLog();
LABEL_42:
        }
        *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = *(void *)(a1 + 64) > 1;
LABEL_44:
        for (uint64_t j = 1; j != -1; --j)

LABEL_46:
        int v27 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);

        if (!v27) {
          goto LABEL_49;
        }
      }
      id v4 = [obj countByEnumeratingWithState:&v36 objects:v47 count:16];
    }
    while (v4);
  }
LABEL_49:

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) && [v33 count]) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v32 pauseDownloadsWithIdentifiers:v33];
  }
  uint64_t v28 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);

  return v28;
}

void sub_100146234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100146258(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [DownloadEntity alloc];
  id v5 = [*(id *)(a1 + 32) longLongValue];
  id v6 = [v3 database];
  id v7 = [(DownloadEntity *)v4 initWithPersistentID:v5 inDatabase:v6];

  if (([*(id *)(a1 + 40) canAccessDownload:v7] & 1) == 0)
  {
    uint64_t v19 = SSError();
    uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8);
    long long v21 = *(void **)(v20 + 40);
    *(void *)(v20 + 40) = v19;

LABEL_19:
    BOOL v18 = *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) != 0;
    goto LABEL_20;
  }
  id v8 = [(DownloadEntity *)v7 downloadKind];
  int IsSoftwareKind = SSDownloadKindIsSoftwareKind();

  if (!IsSoftwareKind)
  {
    id v22 = [*(id *)(a1 + 32) longLongValue];
    id v23 = [*(id *)(a1 + 56) longLongValue];
    id v29 = 0;
    unsigned __int8 v24 = [v3 prioritizeDownloadWithID:v22 aboveDownloadWithID:v23 error:&v29];
    id v25 = v29;
    id v26 = v29;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = v24;
    if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)) {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v25);
    }

    goto LABEL_19;
  }
  id v10 = +[SSLogConfig sharedDaemonConfig];
  if (!v10)
  {
    id v10 = +[SSLogConfig sharedConfig];
  }
  unsigned int v11 = [v10 shouldLog];
  if ([v10 shouldLogToDisk]) {
    int v12 = v11 | 2;
  }
  else {
    int v12 = v11;
  }
  unsigned int v13 = [v10 OSLogObject];
  if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
    v12 &= 2u;
  }
  if (!v12) {
    goto LABEL_13;
  }
  uint64_t v14 = objc_opt_class();
  uint64_t v15 = *(void *)(a1 + 32);
  int v30 = 138412546;
  uint64_t v31 = v14;
  __int16 v32 = 2112;
  uint64_t v33 = v15;
  id v16 = v14;
  LODWORD(v28) = 22;
  id v17 = (void *)_os_log_send_and_compose_impl();

  if (v17)
  {
    unsigned int v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v30, v28);
    free(v17);
    SSFileLog();
LABEL_13:
  }
  BOOL v18 = 0;
LABEL_20:

  return v18;
}

void sub_1001468F8(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  [*(id *)(a1 + 32) object];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1001469DC;
  _OWORD v9[3] = &unk_1003A7AE8;
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  id v6 = *(id *)(a1 + 40);
  char v14 = a2;
  id v11 = v6;
  id v12 = v5;
  uint64_t v13 = *(void *)(a1 + 48);
  id v7 = v5;
  id v8 = v10;
  [v8 _dispatchAsync:v9];
}

id sub_1001469DC(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  id v6 = objc_opt_class();
  int v7 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  *(_DWORD *)char v14 = 138413058;
  *(void *)&void v14[4] = v6;
  *(_WORD *)&unsigned char v14[12] = 2112;
  *(void *)&v14[14] = v8;
  *(_WORD *)&v14[22] = 1024;
  LODWORD(v15) = v7;
  WORD2(v15) = 2112;
  *(void *)((char *)&v15 + 6) = v9;
  id v10 = v6;
  LODWORD(v13) = 38;
  id v11 = (void *)_os_log_send_and_compose_impl();

  if (v11)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v14, v13, *(_OWORD *)v14, *(void *)&v14[16], v15);
    free(v11);
    SSFileLog();
LABEL_11:
  }
  return [*(id *)(*(void *)(a1 + 56) + 40) removeObject:*(void *)(a1 + 40)];
}

uint64_t sub_100146DF8(uint64_t a1, void *a2)
{
  id v24 = a2;
  unsigned int v3 = [v24 database];
  id v4 = objc_alloc_init((Class)NSMutableOrderedSet);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v27 = a1;
  id obj = *(id *)(a1 + 32);
  id v5 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v29;
    id v25 = v3;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v28 + 1) + 8 * i);
        id v10 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [v9 longLongValue], v3);
        if ([*(id *)(v27 + 40) canAccessDownload:v10])
        {
          id v11 = [(DownloadEntity *)v10 downloadKind];
          int IsSoftwareKind = SSDownloadKindIsSoftwareKind();

          if (IsSoftwareKind)
          {
            id v13 = v4;
            char v14 = +[SSLogConfig sharedDaemonConfig];
            if (!v14)
            {
              char v14 = +[SSLogConfig sharedConfig];
            }
            unsigned int v15 = objc_msgSend(v14, "shouldLog", v22, v23);
            if ([v14 shouldLogToDisk]) {
              int v16 = v15 | 2;
            }
            else {
              int v16 = v15;
            }
            id v17 = [v14 OSLogObject];
            if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
              v16 &= 2u;
            }
            if (v16)
            {
              BOOL v18 = objc_opt_class();
              int v32 = 138412546;
              uint64_t v33 = v18;
              __int16 v34 = 2112;
              long long v35 = v9;
              id v19 = v18;
              LODWORD(v23) = 22;
              id v22 = &v32;
              uint64_t v20 = (void *)_os_log_send_and_compose_impl();

              if (v20)
              {
                id v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v20, 4, &v32, v23);
                free(v20);
                id v22 = (int *)v17;
                SSFileLog();
                goto LABEL_18;
              }
            }
            else
            {
LABEL_18:
            }
            id v4 = v13;
            unsigned int v3 = v25;
            goto LABEL_21;
          }
          [v4 addObject:v9];
        }
LABEL_21:
      }
      id v6 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
    }
    while (v6);
  }

  if ([v4 count]) {
    [v24 resetDownloadsWithIdentifiers:v4];
  }
  objc_msgSend(*(id *)(v27 + 48), "_retryRestoreIfNecessaryForTransaction:", v24, v22);

  return 1;
}

uint64_t sub_10014737C(uint64_t a1, void *a2)
{
  id v24 = a2;
  unsigned int v3 = [v24 database];
  id v4 = objc_alloc_init((Class)NSMutableOrderedSet);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v27 = a1;
  id obj = *(id *)(a1 + 32);
  id v5 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v29;
    id v25 = v3;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v28 + 1) + 8 * i);
        id v10 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", [v9 longLongValue], v3);
        if ([*(id *)(v27 + 40) canAccessDownload:v10])
        {
          id v11 = [(DownloadEntity *)v10 downloadKind];
          int IsSoftwareKind = SSDownloadKindIsSoftwareKind();

          if (IsSoftwareKind)
          {
            id v13 = v4;
            char v14 = +[SSLogConfig sharedDaemonConfig];
            if (!v14)
            {
              char v14 = +[SSLogConfig sharedConfig];
            }
            unsigned int v15 = objc_msgSend(v14, "shouldLog", v22, v23);
            if ([v14 shouldLogToDisk]) {
              int v16 = v15 | 2;
            }
            else {
              int v16 = v15;
            }
            id v17 = [v14 OSLogObject];
            if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
              v16 &= 2u;
            }
            if (v16)
            {
              BOOL v18 = objc_opt_class();
              int v32 = 138412546;
              uint64_t v33 = v18;
              __int16 v34 = 2112;
              long long v35 = v9;
              id v19 = v18;
              LODWORD(v23) = 22;
              id v22 = &v32;
              uint64_t v20 = (void *)_os_log_send_and_compose_impl();

              if (v20)
              {
                id v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v20, 4, &v32, v23);
                free(v20);
                id v22 = (int *)v17;
                SSFileLog();
                goto LABEL_18;
              }
            }
            else
            {
LABEL_18:
            }
            id v4 = v13;
            unsigned int v3 = v25;
            goto LABEL_21;
          }
          [v4 addObject:v9];
        }
LABEL_21:
      }
      id v6 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
    }
    while (v6);
  }

  if ([v4 count]) {
    [v24 restartDownloadsWithIdentifiers:v4];
  }

  return 1;
}

id sub_100147DE4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadOperationKeepAliveTransaction];
}

void sub_100147DEC(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_ERROR)) {
    v4 &= 2u;
  }
  if (v4)
  {
    id v5 = [*(id *)(*(void *)(a1 + 32) + 80) count];
    int v9 = 134217984;
    id v10 = v5;
    LODWORD(v8) = 12;
    uint64_t v6 = _os_log_send_and_compose_impl();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v6, 4, &v9, v8);
      free(v7);
      SSFileLog();
    }
  }

  *(void *)(*(void *)(a1 + 32) + 72) = 0;
  *(void *)(*(void *)(a1 + 32) + 80) = 0;
}

id sub_10014807C()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401ED8 = (uint64_t)result;
  return result;
}

id sub_1001482F0(uint64_t a1, _xpc_activity_s *a2)
{
  [*(id *)(a1 + 32) takeKeepAliveAssertion:*(void *)(a1 + 40)];
  id v4 = [*(id *)(a1 + 40) UTF8String];
  if (xpc_activity_get_state(a2) == 2 && v4) {
    [*(id *)(a1 + 32) _handleWakeWithName:v4 job:*(void *)(a1 + 48)];
  }
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);

  return [v5 releaseKeepAliveAssertion:v6];
}

id sub_1001483E0(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 88) containsObject:*(void *)(a1 + 40)];
  if ((result & 1) == 0)
  {
    unsigned int v3 = +[NSNotificationCenter defaultCenter];
    [(NSNotificationCenter *)v3 addObserver:*(void *)(a1 + 32) selector:"_operationCountChanged:" name:ISOperationQueueOperationCountChangedNotification object:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 88) addObject:*(void *)(a1 + 40)];
    id v4 = *(void **)(a1 + 32);
    return [v4 _reloadOperationKeepAliveTransaction];
  }
  return result;
}

void sub_100148504(void *a1)
{
  id v2 = [*(id *)(a1[4] + 16) objectForKey:a1[5]];
  if (v2)
  {
    [v2 addObject:a1[6]];
  }
  else
  {
    id v3 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithObjects:", a1[6], 0);
    [*(id *)(a1[4] + 16) setObject:v3 forKey:a1[5]];
  }
  xpc_object_t v4 = xpc_dictionary_create(0, 0, 0);
  id v5 = *(void **)(a1[4] + 112);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_100148664;
  applier[3] = &unk_1003A7B60;
  void applier[4] = a1[5];
  applier[5] = v4;
  xpc_dictionary_apply(v5, applier);
  if (xpc_dictionary_get_count(v4))
  {
    uint64_t v6 = dispatch_queue_create("com.apple.itunesstored.Daemon.observers", 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001486D0;
    block[3] = &unk_1003A68C8;
    uint64_t v7 = a1[6];
    void block[5] = v6;
    void block[6] = v7;
    void block[4] = v4;
    dispatch_async(v6, block);
  }
  xpc_release(v4);
}

uint64_t sub_100148664(uint64_t a1, const char *a2, void *a3)
{
  id v6 = [objc_alloc((Class)NSString) initWithUTF8String:a2];
  if ([v6 hasPrefix:*(void *)(a1 + 32)]) {
    xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 40), a2, a3);
  }

  return 1;
}

void sub_1001486D0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_100148758;
  applier[3] = &unk_1003A7B88;
  void applier[4] = *(void *)(a1 + 48);
  xpc_dictionary_apply(v2, applier);
  dispatch_release(*(dispatch_object_t *)(a1 + 40));
}

uint64_t sub_100148758(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSString) initWithUTF8String:a2];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return 1;
}

uint64_t sub_100148850(uint64_t result)
{
  return result;
}

void sub_100148940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100148958(uint64_t a1, uint64_t a2)
{
}

void sub_100148968(uint64_t a1)
{
}

id sub_100148974(void *a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1[4] + 40), "objectForKey:", a1[5]), "object");
  *(void *)(*(void *)(a1[6] + 8) + 40) = result;
  return result;
}

void sub_100148A30(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = objc_alloc_init(DaemonCachedObject);
    [(DaemonCachedObject *)v2 setObject:*(void *)(a1 + 32)];
    if (*(double *)(a1 + 56) > 2.22044605e-16)
    {
      id v3 = +[SSWeakReference weakReferenceWithObject:*(void *)(a1 + 40)];
      xpc_object_t v4 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, *(dispatch_queue_t *)(*(void *)(a1 + 40) + 56));
      dispatch_time_t v5 = dispatch_time(0, (uint64_t)(*(double *)(a1 + 56) * 1000000000.0));
      dispatch_source_set_timer(v4, v5, 0, 0);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      void v10[2] = sub_100148BD0;
      v10[3] = &unk_1003A3380;
      uint64_t v6 = *(void *)(a1 + 48);
      void v10[4] = v3;
      void v10[5] = v6;
      dispatch_source_set_event_handler(v4, v10);
      [(DaemonCachedObject *)v2 setExpirationTimer:v4];
      dispatch_resume(v4);
      dispatch_release(v4);
    }
    uint64_t v7 = *(void **)(*(void *)(a1 + 40) + 40);
    if (!v7)
    {
      *(void *)(*(void *)(a1 + 40) + 40) = objc_alloc_init((Class)NSMutableDictionary);
      uint64_t v7 = *(void **)(*(void *)(a1 + 40) + 40);
    }
    [v7 setObject:v2 forKey:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 48);
    int v9 = *(void **)(*(void *)(a1 + 40) + 40);
    [v9 removeObjectForKey:v8];
  }
}

id sub_100148BD0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 _expireCachedObjectForKey:v3];
}

void sub_100148C80(uint64_t a1)
{
  id v2 = (const char *)[*(id *)(a1 + 32) UTF8String];
  xpc_activity_unregister(v2);
  id v3 = +[SSLogConfig sharedConfig];
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  if (os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    int v6 = v5;
  }
  else {
    int v6 = v5 & 2;
  }
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v11 = 138543362;
    uint64_t v12 = v7;
    LODWORD(v10) = 12;
    uint64_t v8 = _os_log_send_and_compose_impl();
    if (v8)
    {
      int v9 = (void *)v8;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v11, v10);
      free(v9);
      SSFileLog();
    }
  }
  xpc_dictionary_set_value(*(xpc_object_t *)(*(void *)(a1 + 40) + 112), v2, 0);
}

uint64_t sub_100148E70(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  uint64_t v2 = *(void *)(v1 + 48);
  BOOL v3 = v2 < 1;
  uint64_t v4 = v2 - 1;
  if (!v3) {
    *(void *)(v1 + ++*(void *)(*(void *)(result + 32) + 48) = v4;
  }
  return result;
}

id sub_100148F24(uint64_t a1)
{
  return [*(id *)(a1 + 32) releaseKeepAliveAssertion:*(void *)(a1 + 40)];
}

void sub_100148F6C(_Unwind_Exception *a1)
{
}

void sub_100148F8C(void *a1)
{
}

id sub_100148F98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id result = *(id *)(v2 + 72);
  if (result)
  {
    if (*(void *)(v2 + 80))
    {
      [result removeObject:*(void *)(a1 + 40)];
      id result = [*(id *)(*(void *)(a1 + 32) + 72) countForObject:*(void *)(a1 + 40)];
      if (!result)
      {
        uint64_t v4 = *(void *)(a1 + 40);
        int v5 = *(void **)(*(void *)(a1 + 32) + 80);
        return [v5 setObject:0 forKeyedSubscript:v4];
      }
    }
  }
  return result;
}

id sub_100149088(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  id result = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v9;
    do
    {
      int v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKey:*(void *)(*((void *)&v8 + 1) + 8 * (void)v6)];
        if (v7) {
          [v7 removeObject:*(void *)(a1 + 40)];
        }
        int v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id result = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
      id v4 = result;
    }
    while (result);
  }
  return result;
}

id sub_100149204(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) removeObjectForKey:*(void *)(a1 + 40)];
}

id sub_100149284(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [(NSNotificationCenter *)v2 removeObserver:*(void *)(a1 + 32) name:ISOperationQueueOperationCountChangedNotification object:*(void *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 88) removeObject:*(void *)(a1 + 40)];
  BOOL v3 = *(void **)(a1 + 32);

  return [v3 _reloadOperationKeepAliveTransaction];
}

id sub_100149A28(uint64_t a1)
{
  return [*(id *)(a1 + 32) releaseKeepAliveAssertion:@"com.apple.itunesstored.launch"];
}

id sub_100149CB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishWithSuccess];
}

id sub_100149F40(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishWithSuccess];
}

void sub_10014A238(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_dictionary_set_BOOL(reply, "0", *(void *)(*(void *)(a1 + 40) + 48) > 0);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);

  xpc_release(reply);
}

id sub_10014A368(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadWiFiManager];
}

id sub_10014A3E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadOperationKeepAliveTransaction];
}

void sub_10014A71C(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v7 + 1) + 8 * i) + 16))();
      }
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
  dispatch_release(*(dispatch_object_t *)(a1 + 56));
}

void sub_10014A88C(id a1)
{
  uint64_t v1 = objc_alloc_init(SubscriptionOperation);
  [(SubscriptionOperation *)v1 setOperationType:2];
  objc_msgSend(+[ISOperationQueue mainQueue](ISOperationQueue, "mainQueue"), "addOperation:", v1);
}

BOOL sub_10014A8E8(id a1)
{
  id v1 = objc_msgSend(objc_msgSend(objc_msgSend(+[SSAccountStore defaultStore](SSAccountStore, "defaultStore"), "activeAccount"), "uniqueIdentifier"), "unsignedLongLongValue");
  if (!v1) {
    return (uint64_t)objc_msgSend(objc_msgSend(+[SSDevice currentDevice](SSDevice, "currentDevice"), "carrierBundleStatusForService:", 0), "integerValue") > 0;
  }
  id v2 = v1;
  id v3 = objc_alloc_init((Class)SSVFairPlaySubscriptionController);
  LOBYTE(v2) = objc_msgSend(objc_msgSend(v3, "subscriptionStatusForAccountUniqueIdentifier:", v2), "hasSubscriptionSlot");

  if (v2) {
    return 1;
  }
  uint64_t v5 = dispatch_semaphore_create(0);
  dispatch_retain(v5);
  uint64_t v13 = 0;
  char v14 = &v13;
  uint64_t v15 = 0x3052000000;
  int v16 = sub_100148958;
  id v17 = sub_100148968;
  uint64_t v18 = 0;
  id v6 = +[SSVSubscriptionStatusCoordinator sharedCoordinator];
  uint64_t v19 = SSVSubscriptionStatusOptionAuthenticatesIfNecessary;
  uint64_t v20 = &__kCFBooleanFalse;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10014AB20;
  v12[3] = &unk_1003A7C38;
  void v12[4] = v5;
  void v12[5] = &v13;
  objc_msgSend(v6, "getStatusWithOptions:statusBlock:", +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v20, &v19, 1), v12);
  dispatch_time_t v7 = dispatch_time(0, 60000000000);
  intptr_t v8 = dispatch_semaphore_wait(v5, v7);
  dispatch_release(v5);
  long long v9 = v14;
  if (v8 || (long long v10 = (void *)v14[5]) == 0)
  {
    BOOL v4 = 0;
  }
  else
  {
    BOOL v4 = [v10 accountStatus] == (id)3;
    long long v9 = v14;
  }

  _Block_object_dispose(&v13, 8);
  return v4;
}

void sub_10014AB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10014AB20(uint64_t a1, void *a2, int a3)
{
  if (a3)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = a2;
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
    BOOL v4 = *(NSObject **)(a1 + 32);
    dispatch_release(v4);
  }
}

uint64_t sub_10014ADFC(uint64_t a1)
{
  if ((+[ISFileProtectionClassMigrator migrate] & 1) == 0)
  {
    id v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    if (os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_ERROR)) {
      int v5 = v4;
    }
    else {
      int v5 = v4 & 2;
    }
    if (v5)
    {
      v10[0] = 0;
      LODWORD(v9) = 2;
      uint64_t v6 = _os_log_send_and_compose_impl();
      if (v6)
      {
        dispatch_time_t v7 = (void *)v6;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v6, 4, v10, v9);
        free(v7);
        SSFileLog();
      }
    }
  }
  return notify_cancel(*(_DWORD *)(a1 + 32));
}

void sub_10014B0A0()
{
  id v0 = +[SSLogConfig sharedDaemonConfig];
  if (!v0) {
    id v0 = +[SSLogConfig sharedConfig];
  }
  unsigned int v1 = [v0 shouldLog];
  if ([v0 shouldLogToDisk]) {
    int v2 = v1 | 2;
  }
  else {
    int v2 = v1;
  }
  if (os_log_type_enabled((os_log_t)[v0 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    int v3 = v2;
  }
  else {
    int v3 = v2 & 2;
  }
  if (v3)
  {
    LOWORD(v64) = 0;
    LODWORD(v61) = 2;
    id v57 = &v64;
    uint64_t v4 = _os_log_send_and_compose_impl();
    if (v4)
    {
      int v5 = (void *)v4;
      uint64_t v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v4, 4, &v64, v61);
      free(v5);
      id v57 = (int *)v6;
      SSFileLog();
    }
  }
  int v7 = off_100401520();
  id v8 = +[SSLogConfig sharedAccountsConfig];
  id v9 = v8;
  if (v7)
  {
    if (!v8) {
      id v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v10 = objc_msgSend(v9, "shouldLog", v57);
    if ([v9 shouldLogToDisk]) {
      int v11 = v10 | 2;
    }
    else {
      int v11 = v10;
    }
    if (os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      int v12 = v11;
    }
    else {
      int v12 = v11 & 2;
    }
    if (v12)
    {
      LOWORD(v64) = 0;
      LODWORD(v61) = 2;
      goto LABEL_23;
    }
  }
  else
  {
    if (!v8) {
      id v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v15 = objc_msgSend(v9, "shouldLog", v57);
    if ([v9 shouldLogToDisk]) {
      int v16 = v15 | 2;
    }
    else {
      int v16 = v15;
    }
    if (os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      int v17 = v16;
    }
    else {
      int v17 = v16 & 2;
    }
    if (v17)
    {
      LOWORD(v64) = 0;
      LODWORD(v61) = 2;
      id v58 = &v64;
      uint64_t v18 = _os_log_send_and_compose_impl();
      if (v18)
      {
        uint64_t v19 = (void *)v18;
        uint64_t v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v64, v61);
        free(v19);
        id v58 = (int *)v20;
        SSFileLog();
      }
    }
    if (objc_msgSend(+[AMSDevice deviceOffers](AMSDevice, "deviceOffers", v58), "count"))
    {
      id v21 = +[ACAccountStore ams_sharedAccountStore];
      id v22 = objc_msgSend(v21, "ams_activeiTunesAccount");
      if (v22) {
        goto LABEL_50;
      }
      id v23 = +[SSLogConfig sharedAccountsConfig];
      if (!v23) {
        id v23 = +[SSLogConfig sharedConfig];
      }
      unsigned int v24 = [v23 shouldLog];
      if ([v23 shouldLogToDisk]) {
        int v25 = v24 | 2;
      }
      else {
        int v25 = v24;
      }
      if (os_log_type_enabled((os_log_t)[v23 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
        int v26 = v25;
      }
      else {
        int v26 = v25 & 2;
      }
      if (v26)
      {
        LOWORD(v64) = 0;
        LODWORD(v61) = 2;
        id v59 = &v64;
        uint64_t v27 = _os_log_send_and_compose_impl();
        if (v27)
        {
          long long v28 = (void *)v27;
          long long v29 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, &v64, v61);
          free(v28);
          id v59 = (int *)v29;
          SSFileLog();
        }
      }
      v63[0] = _NSConcreteStackBlock;
      v63[1] = 3221225472;
      v63[2] = sub_10014C700;
      v63[3] = &unk_1003A7D40;
      v63[4] = objc_msgSend(v21, "ams_activeiCloudAccount", v59);
      id v22 = objc_msgSend(objc_msgSend(v21, "ams_iTunesAccounts"), "ams_firstObjectPassingTest:", v63);
      if (v22)
      {
LABEL_50:
        uint64_t v62 = 0;
        id v30 = objc_msgSend(+[ACAccountStore ams_sharedAccountStore](ACAccountStore, "ams_sharedAccountStore"), "_ss_IDMSAccountForAccount:error:", v22, &v62);
        if (v62)
        {
          id v31 = +[SSLogConfig sharedAccountsConfig];
          if (!v31) {
            id v31 = +[SSLogConfig sharedConfig];
          }
          unsigned int v32 = [v31 shouldLog];
          if ([v31 shouldLogToDisk]) {
            int v33 = v32 | 2;
          }
          else {
            int v33 = v32;
          }
          if (os_log_type_enabled((os_log_t)[v31 OSLogObject], OS_LOG_TYPE_ERROR)) {
            int v34 = v33;
          }
          else {
            int v34 = v33 & 2;
          }
          if (v34)
          {
            int v64 = 138543362;
            uint64_t v65 = v62;
            LODWORD(v61) = 12;
            id v59 = &v64;
            uint64_t v35 = _os_log_send_and_compose_impl();
            if (v35)
            {
              long long v36 = (void *)v35;
              long long v37 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v35, 4, &v64, v61);
              free(v36);
              id v59 = (int *)v37;
              SSFileLog();
            }
          }
        }
        if (v30
          && [+[AKAccountManager sharedInstance] securityLevelForAccount:v30] == (id)4)
        {
          id v38 = +[SSLogConfig sharedAccountsConfig];
          if (!v38) {
            id v38 = +[SSLogConfig sharedConfig];
          }
          unsigned int v39 = objc_msgSend(v38, "shouldLog", v59);
          if ([v38 shouldLogToDisk]) {
            int v40 = v39 | 2;
          }
          else {
            int v40 = v39;
          }
          if (os_log_type_enabled((os_log_t)[v38 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
            int v41 = v40;
          }
          else {
            int v41 = v40 & 2;
          }
          if (v41)
          {
            LOWORD(v64) = 0;
            LODWORD(v61) = 2;
            __int16 v60 = &v64;
            uint64_t v42 = _os_log_send_and_compose_impl();
            if (v42)
            {
              int v43 = (void *)v42;
              id v44 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v42, 4, &v64, v61);
              free(v43);
              __int16 v60 = (int *)v44;
              SSFileLog();
            }
          }
          objc_msgSend(v22, "ams_setPassword:", 0, v60);
          objc_msgSend(+[ACAccountStore ams_sharedAccountStore](ACAccountStore, "ams_sharedAccountStore"), "ams_saveAccount:verifyCredentials:", v22, 0);
        }
        else
        {
          id v45 = +[SSLogConfig sharedAccountsConfig];
          if (!v45) {
            id v45 = +[SSLogConfig sharedConfig];
          }
          unsigned int v46 = [v45 shouldLog];
          if ([v45 shouldLogToDisk]) {
            int v47 = v46 | 2;
          }
          else {
            int v47 = v46;
          }
          if (os_log_type_enabled((os_log_t)[v45 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
            int v48 = v47;
          }
          else {
            int v48 = v47 & 2;
          }
          if (v48)
          {
            LOWORD(v64) = 0;
            LODWORD(v61) = 2;
            uint64_t v49 = _os_log_send_and_compose_impl();
            if (v49)
            {
              __int16 v50 = (void *)v49;
              +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v49, 4, &v64, v61);
              free(v50);
              SSFileLog();
            }
          }
        }
        id v51 = objc_alloc_init((Class)AMSAuthenticateOptions);
        [v51 setAuthenticationType:1];
        [v51 setCanMakeAccountActive:0];
        id v52 = [objc_alloc((Class)AMSAuthenticateTask) initWithAccount:v22 options:v51];
        qword_100401EE8 = (uint64_t)[v52 performAuthentication];
        [(id)qword_100401EE8 addSuccessBlock:&stru_1003A7D80];
        [(id)qword_100401EE8 addErrorBlock:&stru_1003A7DC0];
      }
      else
      {
        id v53 = +[SSLogConfig sharedAccountsConfig];
        if (!v53) {
          id v53 = +[SSLogConfig sharedConfig];
        }
        unsigned int v54 = [v53 shouldLog];
        if ([v53 shouldLogToDisk]) {
          int v55 = v54 | 2;
        }
        else {
          int v55 = v54;
        }
        if (os_log_type_enabled((os_log_t)[v53 OSLogObject], OS_LOG_TYPE_ERROR)) {
          int v56 = v55;
        }
        else {
          int v56 = v55 & 2;
        }
        if (v56)
        {
          LOWORD(v64) = 0;
          LODWORD(v61) = 2;
LABEL_23:
          uint64_t v13 = _os_log_send_and_compose_impl();
          if (v13)
          {
            char v14 = (void *)v13;
            +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v64, v61);
            free(v14);
            SSFileLog();
          }
        }
      }
    }
  }
}

void sub_10014B920(id a1, NSNotification *a2)
{
  int v2 = +[SpringBoardUtility sharedInstance];
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  if (os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_INFO)) {
    int v6 = v5;
  }
  else {
    int v6 = v5 & 2;
  }
  if (v6)
  {
    v12[0] = 0;
    LODWORD(v11) = 2;
    unsigned int v10 = (NSString *)v12;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      id v8 = (void *)v7;
      id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, v12, v11);
      free(v8);
      unsigned int v10 = v9;
      SSFileLog();
    }
  }
  [(SpringBoardUtility *)v2 removeDefaultPNGSnapshotsForIdentifier:@"com.apple.AppStore", v10];
  [(SpringBoardUtility *)v2 removeDefaultPNGSnapshotsForIdentifier:@"com.apple.MobileStore"];
}

void sub_10014BA58(id a1, NSNotification *a2)
{
}

uint64_t sub_10014BA68()
{
  id v0 = +[SSLogConfig sharedDaemonConfig];
  if (!v0) {
    id v0 = +[SSLogConfig sharedConfig];
  }
  unsigned int v1 = [v0 shouldLog];
  if ([v0 shouldLogToDisk]) {
    int v2 = v1 | 2;
  }
  else {
    int v2 = v1;
  }
  if (!os_log_type_enabled((os_log_t)[v0 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v2 &= 2u;
  }
  if (v2)
  {
    int v7 = 138412290;
    uint64_t v8 = objc_opt_class();
    LODWORD(v6) = 12;
    uint64_t v3 = _os_log_send_and_compose_impl();
    if (v3)
    {
      unsigned int v4 = (void *)v3;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v3, 4, &v7, v6);
      free(v4);
      SSFileLog();
    }
  }
  CFPreferencesAppSynchronize(kITunesStoreDaemonDefaultsID);
  +[PurchaseManifest jetsam];
  +[NSURLCache sharedURLCache];
  return ISURLCachePurgeMemoryCache();
}

void sub_10014BBE4(id a1, OS_xpc_object *a2)
{
  string = xpc_dictionary_get_string(a2, _xpc_event_key_name);
  if (!string) {
    return;
  }
  unsigned int v4 = string;
  if (!strcmp("com.apple.LaunchServices.applicationRegistered", string))
  {
    xpc_object_t value = xpc_dictionary_get_value(a2, "UserInfo");
    if (value)
    {
      if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_dictionary)
      {
        id v23 = (const void *)_CFXPCCreateCFObjectFromXPCObject();
        if ((id)CFMakeCollectable(v23)) {
          return;
        }
        id v24 = +[SSLogConfig sharedDaemonConfig];
        if (!v24) {
          id v24 = +[SSLogConfig sharedConfig];
        }
        int v25 = [v24 shouldLog];
        int v26 = [v24 shouldLogToDisk] ? v25 | 2 : v25;
        if (!(os_log_type_enabled((os_log_t)[v24 OSLogObject], OS_LOG_TYPE_DEFAULT) ? v26 : v26 & 2)) {
          return;
        }
        int v58 = 136315138;
        id v59 = v4;
        LODWORD(v52) = 12;
      }
      else
      {
        id v11 = +[SSLogConfig sharedDaemonConfig];
        if (!v11) {
          id v11 = +[SSLogConfig sharedConfig];
        }
        unsigned int v12 = [v11 shouldLog];
        if ([v11 shouldLogToDisk]) {
          int v13 = v12 | 2;
        }
        else {
          int v13 = v12;
        }
        if (os_log_type_enabled((os_log_t)[v11 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
          int v14 = v13;
        }
        else {
          int v14 = v13 & 2;
        }
        if (!v14) {
          return;
        }
        int v58 = 136315138;
        id v59 = v4;
        LODWORD(v52) = 12;
      }
    }
    else
    {
      id v15 = +[SSLogConfig sharedDaemonConfig];
      if (!v15) {
        id v15 = +[SSLogConfig sharedConfig];
      }
      unsigned int v16 = [v15 shouldLog];
      if ([v15 shouldLogToDisk]) {
        int v17 = v16 | 2;
      }
      else {
        int v17 = v16;
      }
      if (os_log_type_enabled((os_log_t)[v15 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
        int v18 = v17;
      }
      else {
        int v18 = v17 & 2;
      }
      if (!v18) {
        return;
      }
      int v58 = 136315138;
      id v59 = v4;
      LODWORD(v52) = 12;
    }
LABEL_95:
    __int16 v50 = (void *)_os_log_send_and_compose_impl();
    if (v50)
    {
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v50, 4, &v58, v52);
      free(v50);
      SSFileLog();
    }
    return;
  }
  if (strcmp("com.apple.LaunchServices.applicationUnregistered", v4)) {
    return;
  }
  xpc_object_t v5 = xpc_dictionary_get_value(a2, "UserInfo");
  if (!v5)
  {
    id v19 = +[SSLogConfig sharedDaemonConfig];
    if (!v19) {
      id v19 = +[SSLogConfig sharedConfig];
    }
    unsigned int v20 = [v19 shouldLog];
    if ([v19 shouldLogToDisk]) {
      int v21 = v20 | 2;
    }
    else {
      int v21 = v20;
    }
    if (os_log_type_enabled((os_log_t)[v19 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      int v22 = v21;
    }
    else {
      int v22 = v21 & 2;
    }
    if (!v22) {
      return;
    }
    int v58 = 136315138;
    id v59 = v4;
    LODWORD(v52) = 12;
    goto LABEL_95;
  }
  if (xpc_get_type(v5) != (xpc_type_t)&_xpc_type_dictionary)
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6) {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    if (os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      int v9 = v8;
    }
    else {
      int v9 = v8 & 2;
    }
    if (v9)
    {
      int v58 = 136315138;
      id v59 = v4;
      LODWORD(v52) = 12;
      goto LABEL_95;
    }
    return;
  }
  long long v28 = (const void *)_CFXPCCreateCFObjectFromXPCObject();
  long long v29 = (id)CFMakeCollectable(v28);
  if (v29)
  {
    id v30 = v29;
    id v31 = [v29 objectForKeyedSubscript:@"bundleIDs"];
    unsigned __int8 v32 = objc_msgSend(objc_msgSend(v30, "objectForKeyedSubscript:", @"isPlaceholder"), "BOOLValue");
    id v33 = +[SSLogConfig sharedDaemonConfig];
    if (!v33) {
      id v33 = +[SSLogConfig sharedConfig];
    }
    unsigned int v34 = [v33 shouldLog];
    if ([v33 shouldLogToDisk]) {
      int v35 = v34 | 2;
    }
    else {
      int v35 = v34;
    }
    if (os_log_type_enabled((os_log_t)[v33 OSLogObject], OS_LOG_TYPE_DEBUG)) {
      int v36 = v35;
    }
    else {
      int v36 = v35 & 2;
    }
    if (v36)
    {
      int v58 = 136315650;
      id v59 = v4;
      __int16 v60 = 2112;
      id v61 = v31;
      __int16 v62 = 2112;
      id v63 = v30;
      LODWORD(v52) = 32;
      id v51 = &v58;
      uint64_t v37 = _os_log_send_and_compose_impl();
      if (v37)
      {
        id v38 = (void *)v37;
        unsigned int v39 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v37, 4, &v58, v52);
        free(v38);
        id v51 = (int *)v39;
        SSFileLog();
      }
    }
    if (v31) {
      char v40 = v32;
    }
    else {
      char v40 = 1;
    }
    if ((v40 & 1) == 0)
    {
      long long v55 = 0u;
      long long v56 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      id v41 = [v31 countByEnumeratingWithState:&v53 objects:v57 count:16];
      if (v41)
      {
        id v42 = v41;
        uint64_t v43 = *(void *)v54;
        do
        {
          for (uint64_t i = 0; i != v42; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v54 != v43) {
              objc_enumerationMutation(v31);
            }
            id v45 = *(void **)(*((void *)&v53 + 1) + 8 * i);
            if (objc_msgSend(v45, "length", v51)) {
              [+[PromotedIAPManager sharedInstance] removeOverridesForApp:v45 completionHandler:0];
            }
          }
          id v42 = [v31 countByEnumeratingWithState:&v53 objects:v57 count:16];
        }
        while (v42);
      }
    }
    return;
  }
  id v46 = +[SSLogConfig sharedDaemonConfig];
  if (!v46) {
    id v46 = +[SSLogConfig sharedConfig];
  }
  unsigned int v47 = [v46 shouldLog];
  if ([v46 shouldLogToDisk]) {
    int v48 = v47 | 2;
  }
  else {
    int v48 = v47;
  }
  if (os_log_type_enabled((os_log_t)[v46 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    int v49 = v48;
  }
  else {
    int v49 = v48 & 2;
  }
  if (v49)
  {
    int v58 = 136315138;
    id v59 = v4;
    LODWORD(v52) = 12;
    goto LABEL_95;
  }
}

void sub_10014C2D8(id a1, OS_xpc_object *a2)
{
  string = xpc_dictionary_get_string(a2, _xpc_event_key_name);
  if (string)
  {
    uint64_t v3 = string;
    if (!strcmp("com.apple.itunesstored.invalidatebags", string))
    {
      id v4 = +[ISURLBagCache sharedCache];
      [v4 invalidateAllURLBags];
    }
    else if (!strcmp("com.apple.Preferences.ResetPrivacyWarningsNotification", v3))
    {
      xpc_object_t v5 = +[ISDevice sharedInstance];
      [(ISDevice *)v5 resetLocationAndPrivacy];
    }
  }
}

void sub_10014C388(id a1, OS_xpc_object *a2)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_DEBUG)) {
    int v5 = v4;
  }
  else {
    int v5 = v4 & 2;
  }
  if (v5)
  {
    v9[0] = 0;
    LODWORD(v8) = 2;
    uint64_t v6 = _os_log_send_and_compose_impl();
    if (v6)
    {
      unsigned int v7 = (void *)v6;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v6, 4, v9, v8);
      free(v7);
      SSFileLog();
    }
  }
}

uint64_t sub_10014C700(uint64_t a1, void *a2)
{
  if (objc_msgSend(objc_msgSend(a2, "ams_altDSID"), "isEqualToString:", objc_msgSend(*(id *)(a1 + 32), "ams_altDSID")) & 1) != 0|| objc_msgSend(*(id *)(a1 + 32), "ams_DSID")&& (objc_msgSend(objc_msgSend(a2, "ams_DSID"), "isEqualToNumber:", objc_msgSend(*(id *)(a1 + 32), "ams_DSID")))
  {
    return 1;
  }
  id v5 = [a2 username];
  id v6 = [*(id *)(a1 + 32) username];

  return (uint64_t)[v5 isEqualToString:v6];
}

void sub_10014C7C0(id a1, AMSAuthenticateResult *a2)
{
  id v3 = +[SSLogConfig sharedAccountsConfig];
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  if (os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    int v6 = v5;
  }
  else {
    int v6 = v5 & 2;
  }
  if (v6)
  {
    int v10 = 138543362;
    id v11 = a2;
    LODWORD(v9) = 12;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v10, v9);
      free(v8);
      SSFileLog();
    }
  }
}

void sub_10014C904(id a1, NSError *a2)
{
  id v3 = +[SSLogConfig sharedAccountsConfig];
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  if (os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    int v6 = v5;
  }
  else {
    int v6 = v5 & 2;
  }
  if (v6)
  {
    int v10 = 138543362;
    id v11 = a2;
    LODWORD(v9) = 12;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v10, v9);
      free(v8);
      SSFileLog();
    }
  }
}

uint64_t sub_10014CA48()
{
  if (qword_100401EF0 != -1) {
    dispatch_once(&qword_100401EF0, &stru_1003A7DE0);
  }
  id v0 = (uint64_t (*)())dlsym((void *)qword_100401EF8, "BYSetupAssistantNeedsToRun");
  off_100401520 = v0;

  return v0();
}

void sub_10014CAB0(id a1)
{
  qword_100401EF8 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant", 2);
}

uint64_t sub_10014CADC()
{
  if (qword_100401EF0 != -1) {
    dispatch_once(&qword_100401EF0, &stru_1003A7DE0);
  }
  id v0 = (uint64_t *)dlsym((void *)qword_100401EF8, "BYSetupAssistantFinishedDarwinNotification");
  if (v0)
  {
    uint64_t result = *v0;
    qword_100401F00 = result;
  }
  else
  {
    uint64_t result = qword_100401F00;
  }
  off_100401458 = sub_10014CB5C;
  return result;
}

uint64_t sub_10014CB5C()
{
  return qword_100401F00;
}

id sub_10014D6F4(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"PRAGMA legacy_file_format = 0;"]
    && [v3 executeSQL:@"CREATE TABLE IF NOT EXISTS purchase_intents_table (product_identifier TEXT, app_bundle_id TEXT, timestamp INTEGER, pid INTEGER PRIMARY KEY, product_name TEXT, app_name TEXT);"]
    && [v3 executeSQL:@"CREATE TABLE IF NOT EXISTS install_attribution_params_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, impression_id TEXT, timestamp INTEGER, attribution_signature TEXT, local_timestamp INTEGER);"]
    && [v3 executeSQL:@"CREATE TABLE IF NOT EXISTS install_attribution_pingback_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, transaction_id TEXT, attribution_signature TEXT, pingback_url TEXT, pending INTEGER, retry_count INTEGER, local_timestamp INTEGER);"])
  {
    [v3 executeSQL:@"PRAGMA journal_mode = WAL;"];
    *a2 = 11302;
    id v4 = [v3 setUserVersion:11302];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id sub_10014D7A0(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"ALTER TABLE purchase_intents_table ADD COLUMN product_name TEXT;"]
    && [v3 executeSQL:@"ALTER TABLE purchase_intents_table ADD COLUMN app_name TEXT;"])
  {
    *a2 = 11001;
    id v4 = [v3 setUserVersion:11001];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id sub_10014D814(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"CREATE TABLE IF NOT EXISTS install_attribution_params_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, impression_id TEXT, timestamp INTEGER, attribution_signature TEXT, local_timestamp INTEGER);"]
    && [v3 executeSQL:@"CREATE TABLE IF NOT EXISTS install_attribution_pingback_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, transaction_id TEXT, attribution_signature TEXT, pingback_url TEXT, pending INTEGER, retry_count INTEGER, local_timestamp INTEGER);"])
  {
    *a2 = 11302;
    id v4 = [v3 setUserVersion:11302];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

uint64_t sub_10014D888(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"ALTER TABLE install_attribution_params_table ADD COLUMN local_timestamp INTEGER;"]
    && ([v3 executeSQL:@"ALTER TABLE install_attribution_pingback_table ADD COLUMN retry_count INTEGER;"] & 1) != 0)
  {
    *a2 = 11301;
    uint64_t v4 = (uint64_t)[v3 setUserVersion:11301];
  }
  else
  {
    [v3 executeSQL:@"DROP TABLE install_attribution_params_table;"];
    [v3 executeSQL:@"DROP TABLE install_attribution_pingback_table;"];
    sub_10014D814(v3, a2);
    uint64_t v4 = 1;
  }

  return v4;
}

id sub_10014D928(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"ALTER TABLE install_attribution_pingback_table ADD COLUMN local_timestamp INTEGER;"])
  {
    *a2 = 11302;
    id v4 = [v3 setUserVersion:11302];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

void sub_10014D9DC(id a1)
{
  id v4 = [(id)CPSharedResourcesDirectory() stringByAppendingPathComponent:@"Library"];
  unsigned int v1 = [v4 stringByAppendingPathComponent:@"com.apple.itunesstored"];
  uint64_t v2 = [v1 stringByAppendingPathComponent:@"purchase_intents.sqlitedb"];
  id v3 = (void *)qword_100401F08;
  qword_100401F08 = v2;
}

void sub_10014F490(uint64_t a1, void *a2)
{
  id v11 = a2;
  id v3 = objc_msgSend(*(id *)(a1 + 56), "_mediaAssetsForDownloadIdentifier:session:", objc_msgSend(v11, "databaseID"), *(void *)(a1 + 32));
  id v4 = [v11 valueForProperty:@"IFNULL(download_state.restore_state, 0)"];
  unint64_t v5 = (unint64_t)[v4 integerValue];

  if ((unint64_t)[v3 count] | v5)
  {
    int v6 = [v11 valueForProperty:@"policy_id"];
    id v7 = [v6 longLongValue];

    uint64_t v8 = [PrepareDownloadOperation alloc];
    uint64_t v9 = [*(id *)(a1 + 40) downloadPolicyForID:v7];
    id v10 = [(PrepareDownloadOperation *)v8 _initWithDownload:v11 mediaAssets:v3 policy:v9];

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_100151E88(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = [v8 valueForProperty:@"url"];
  if (v3)
  {
    id v4 = [objc_alloc((Class)NSURL) initWithString:v3];
    if (v4)
    {
      unint64_t v5 = v4;
      int v6 = [v8 valueForProperty:@"asset_type"];
      if ([v6 isEqualToString:SSDownloadAssetTypeMedia])
      {
        id v7 = (id *)(a1 + 32);
      }
      else
      {
        if (![v6 isEqualToString:SSDownloadAssetTypeDeltaPackage])
        {
LABEL_8:

          goto LABEL_9;
        }
        id v7 = (id *)(a1 + 40);
      }
      [*v7 addObject:v8];
      goto LABEL_8;
    }
  }
LABEL_9:
}

intptr_t sub_100152E30(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = +[SSLogConfig sharedDaemonConfig];
  id v8 = (void *)v7;
  if (!a2)
  {
    if (!v7)
    {
      id v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = [v8 shouldLog];
    if ([v8 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    id v19 = [v8 OSLogObject];
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      v18 &= 2u;
    }
    if (v18)
    {
      unsigned int v20 = objc_opt_class();
      int v21 = *(void **)(a1 + 40);
      id v22 = v20;
      int v26 = 138412802;
      uint64_t v27 = v20;
      __int16 v28 = 2048;
      id v29 = [v21 databaseID];
      __int16 v30 = 2112;
      id v31 = a4;
      LODWORD(v25) = 32;
      id v23 = (void *)_os_log_send_and_compose_impl();

      if (!v23) {
        goto LABEL_25;
      }
      id v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v26, v25);
      free(v23);
      SSFileLog();
    }

    goto LABEL_25;
  }
  if (!v7)
  {
    id v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  id v11 = [v8 OSLogObject];
  if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    v10 &= 2u;
  }
  if (!v10) {
    goto LABEL_12;
  }
  unsigned int v12 = objc_opt_class();
  int v13 = *(void **)(a1 + 40);
  id v14 = v12;
  int v26 = 138412802;
  uint64_t v27 = v12;
  __int16 v28 = 2048;
  id v29 = [v13 databaseID];
  __int16 v30 = 2112;
  id v31 = a2;
  LODWORD(v25) = 32;
  id v15 = (void *)_os_log_send_and_compose_impl();

  if (v15)
  {
    id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v26, v25);
    free(v15);
    SSFileLog();
LABEL_12:
  }
  unsigned int v16 = *(void **)(a1 + 40);
  id v8 = [a2 absoluteString];
  [v16 setValue:v8 forProperty:@"url"];
LABEL_25:

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_100153534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100153568(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, BOOL *a5)
{
  id result = [*a3 length];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result != 0;
  *a5 = result != 0;
  return result;
}

id sub_100153DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

id sub_100155068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

id sub_100155204(uint64_t a1)
{
  v7[0] = @"Client";
  v7[1] = @"Kind";
  uint64_t v2 = *(void *)(a1 + 40);
  v8[0] = *(void *)(a1 + 32);
  v8[1] = v2;
  void v7[2] = @"IsFromStoreQueue";
  id v3 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 56)];
  v7[3] = @"URL";
  uint64_t v4 = *(void *)(a1 + 48);
  void v8[2] = v3;
  v8[3] = v4;
  unint64_t v5 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:4];

  return v5;
}

void sub_100156000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_100156088(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = a2 == 0;
  if (!a2)
  {
    uint64_t v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7)
    {
      uint64_t v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    int v10 = [v7 OSLogObject];
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      v9 &= 2u;
    }
    if (v9)
    {
      id v11 = objc_opt_class();
      unsigned int v12 = *(void **)(*(void *)(a1 + 32) + 96);
      id v13 = v11;
      id v14 = [v12 databaseID];
      id v15 = [*(id *)(a1 + 40) databaseID];
      int v20 = 138413314;
      int v21 = v11;
      __int16 v22 = 2048;
      id v23 = v14;
      __int16 v24 = 2048;
      id v25 = v15;
      __int16 v26 = 2048;
      uint64_t v27 = a3;
      __int16 v28 = 2112;
      uint64_t v29 = a4;
      LODWORD(v19) = 52;
      unsigned int v16 = (void *)_os_log_send_and_compose_impl();

      if (v16)
      {
        unsigned int v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v20, v19);
        free(v16);
        SSFileLog();
      }
    }
    else
    {
    }
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

intptr_t sub_100157290(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10015784C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100157898(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001578A8(uint64_t a1)
{
}

void sub_1001578B0(uint64_t a1, void *a2)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = a2;
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        unsigned int v8 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        if (objc_msgSend(v8, "taskIdentifier", (void)v9) == *(id *)(a1 + 48))
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v8);
          goto LABEL_11;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

BOOL sub_10015A078(uint64_t a1)
{
  return a1 == 3 || a1 == 0;
}

void sub_10015A408(uint64_t a1)
{
  uint64_t v2 = (__CFString *)SSXPCConnectionCopyExecutablePath();
  if (v2 && (CFURLRef v3 = CFURLCreateWithFileSystemPath(0, v2, kCFURLPOSIXPathStyle, 0)) != 0)
  {
    CFURLRef v4 = v3;
    uint64_t v5 = _CFBundleCopyBundleURLForExecutableURL();
    if (v5)
    {
      uint64_t v6 = (const void *)v5;
      uint64_t v7 = +[LSApplicationProxy applicationProxyForBundleURL:v5];
      unsigned int v8 = [v7 dataContainerURL];
      long long v9 = [v8 path];

      BOOL v10 = v9 != 0;
      if (v9)
      {
        unsigned int v11 = [v7 profileValidated];
        long long v12 = [v9 stringByAppendingPathComponent:@"StoreKit"];
        id v13 = v12;
        if (v11) {
          CFStringRef v14 = @"sandboxReceipt";
        }
        else {
          CFStringRef v14 = @"receipt";
        }
        id v16 = [v12 stringByAppendingPathComponent:v14];
      }
      else
      {
        id v16 = 0;
      }
      CFRelease(v6);
    }
    else
    {
      id v16 = 0;
      BOOL v10 = 0;
    }
    CFRelease(v4);
  }
  else
  {
    id v16 = 0;
    BOOL v10 = 0;
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_dictionary_set_BOOL(reply, "0", v10);
  SSXPCDictionarySetObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
}

void sub_10015AB88(uint64_t a1)
{
  uint64_t v2 = [[ReceiptRefreshOperation alloc] initWithClient:*(void *)(a1 + 32) requestingClientIdentifier:*(void *)(a1 + 40) receiptFlags:*(void *)(a1 + 72)];
  CFURLRef v3 = _NSConcreteStackBlock;
  uint64_t v4 = 3221225472;
  uint64_t v5 = sub_10015AC54;
  uint64_t v6 = &unk_1003A7F18;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  [(ReceiptRefreshOperation *)v2 setResultBlock:&v3];
  objc_msgSend(*(id *)(a1 + 64), "_addOperation:", v2, v3, v4, v5, v6);
}

void sub_10015AC54(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  if (reply)
  {
    uint64_t v5 = (__CFString *)sub_100174DC0((uint64_t)v6);
    sub_100174DCC(reply, "1", v5);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  }
}

uint64_t sub_10015AD74()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = qword_100401F18;
  qword_100401F18 = (uint64_t)v0;

  return _objc_release_x1(v0, v1);
}

void sub_10015AEF0(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = +[Daemon daemon];
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.ReceiptRevocation"];
}

void sub_10015B1B4(id a1)
{
  id v1 = objc_alloc_init(MetricsController);
  uint64_t v2 = qword_100401F28;
  qword_100401F28 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10015B540(uint64_t a1)
{
  uint64_t v2 = (const char *)[@"com.apple.itunesstored.MetricsController.Duet" UTF8String];
  CFURLRef v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    CFURLRef v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  id v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_11;
  }
  int v11 = 138543618;
  id v12 = (id)objc_opt_class();
  __int16 v13 = 2080;
  CFStringRef v14 = v2;
  id v7 = v12;
  LODWORD(v9) = 22;
  id v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v11, v9);
    free(v8);
    SSFileLog();
LABEL_11:
  }
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472;
  handler[2] = sub_10015B740;
  handler[3] = &unk_1003A5C58;
  void handler[4] = *(void *)(a1 + 32);
  xpc_activity_register(v2, XPC_ACTIVITY_CHECK_IN, handler);
}

void sub_10015B740(uint64_t a1, void *a2)
{
  CFURLRef v3 = a2;
  unsigned int v4 = +[Daemon daemon];
  [v4 takeKeepAliveAssertion:@"com.apple.itunesstored.MetricsController.Duet"];

  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (!state)
  {
    id v12 = +[SSLogConfig sharedDaemonConfig];
    if (!v12)
    {
      id v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    id v15 = [v12 OSLogObject];
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      v14 &= 2u;
    }
    if (v14)
    {
      LODWORD(v30) = 138543362;
      *(void *)((char *)&v30 + 4) = objc_opt_class();
      id v16 = *(id *)((char *)&v30 + 4);
      LODWORD(v29) = 12;
      __int16 v28 = &v30;
      unsigned int v17 = (void *)_os_log_send_and_compose_impl();

      if (!v17) {
        goto LABEL_26;
      }
      id v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v30, v29, v30);
      free(v17);
      __int16 v28 = v15;
      SSFileLog();
    }

LABEL_26:
    xpc_object_t v18 = xpc_activity_copy_criteria(v3);
    if (v18)
    {
LABEL_39:

      goto LABEL_40;
    }
    uint64_t v19 = +[SSLogConfig sharedDaemonConfig];
    if (!v19)
    {
      uint64_t v19 = +[SSLogConfig sharedConfig];
    }
    unsigned int v20 = objc_msgSend(v19, "shouldLog", v28);
    if ([v19 shouldLogToDisk]) {
      int v21 = v20 | 2;
    }
    else {
      int v21 = v20;
    }
    __int16 v22 = [v19 OSLogObject];
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
      v21 &= 2u;
    }
    if (v21)
    {
      id v23 = objc_opt_class();
      LODWORD(v30) = 138543362;
      *(void *)((char *)&v30 + 4) = v23;
      id v24 = v23;
      LODWORD(v29) = 12;
      __int16 v28 = &v30;
      id v25 = (void *)_os_log_send_and_compose_impl();

      if (!v25)
      {
LABEL_38:

        xpc_object_t v26 = xpc_dictionary_create(0, 0, 0);
        xpc_dictionary_set_BOOL(v26, XPC_ACTIVITY_REPEATING, 1);
        xpc_dictionary_set_BOOL(v26, XPC_ACTIVITY_ALLOW_BATTERY, 1);
        xpc_dictionary_set_string(v26, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
        xpc_dictionary_set_BOOL(v26, XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP, 1);
        xpc_dictionary_set_int64(v26, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_4_HOURS);
        xpc_dictionary_set_BOOL(v26, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY, 1);
        xpc_dictionary_set_BOOL(v26, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 0);
        xpc_activity_set_criteria(v3, v26);

        goto LABEL_39;
      }
      __int16 v22 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v30, v29);
      free(v25);
      __int16 v28 = v22;
      SSFileLog();
    }

    goto LABEL_38;
  }
  if (state == 2)
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    uint64_t v9 = [v6 OSLogObject];
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      v8 &= 2u;
    }
    if (v8)
    {
      LODWORD(v30) = 138543362;
      *(void *)((char *)&v30 + 4) = objc_opt_class();
      id v10 = *(id *)((char *)&v30 + 4);
      LODWORD(v29) = 12;
      __int16 v28 = &v30;
      int v11 = (void *)_os_log_send_and_compose_impl();

      if (!v11)
      {
LABEL_14:

        [*(id *)(a1 + 32) _reportEventsIfNeeded];
        goto LABEL_40;
      }
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v30, v29, v30);
      free(v11);
      __int16 v28 = v9;
      SSFileLog();
    }

    goto LABEL_14;
  }
LABEL_40:
  uint64_t v27 = +[Daemon daemon];
  [v27 releaseKeepAliveAssertion:@"com.apple.itunesstored.MetricsController.Duet"];
}

id sub_10015C6C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reportEvents];
}

void sub_10015CBF0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  CFURLRef v3 = *(NSObject **)(v2 + 24);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10015CC68;
  v4[3] = &unk_1003A3518;
  char v5 = a2;
  void v4[4] = v2;
  dispatch_async(v3, v4);
}

id sub_10015CC68(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v2 = *(void **)(a1 + 32);
  if (v1) {
    return [v2 _scheduleBackoffRetry];
  }
  else {
    return [v2 _cancelBackoffRetry];
  }
}

id sub_10015D2F8(uint64_t a1)
{
  [*(id *)(a1 + 32) _reportEvents];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 _cancelBackoffRetryTimer];
}

void sub_10015D7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10015D7F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10015D804(uint64_t a1)
{
}

void sub_10015D80C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10015E9AC(uint64_t a1, void *a2)
{
  CFURLRef v3 = [a2 object];
  id v4 = [v3 valueForKey:@"ExplicitOffAndPreferencesEnabled"];
  if (objc_opt_respondsToSelector()) {
    id v5 = [v4 BOOLValue];
  }
  else {
    id v5 = 0;
  }
  id v6 = [v3 valueForKey:@"ExplicitOffAndPreferencesDisabled"];
  if (objc_opt_respondsToSelector())
  {
    id v7 = [v6 BOOLValue];
    id v5 = (id)(v7 | v5);
  }
  else
  {
    id v7 = 0;
  }
  char v54 = 0;
  unsigned int v8 = [*(id *)(a1 + 32) explicitPreferencesDisabled:&v54];
  uint64_t v9 = &syslog_ptr;
  if (!v54 || v7 != v8)
  {
    id v10 = +[NSMutableDictionary dictionary];
    uint64_t v11 = +[SSLogConfig sharedDaemonConfig];
    id v12 = (void *)v11;
    long long v53 = v4;
    if (v7)
    {
      if (!v11)
      {
        id v12 = +[SSLogConfig sharedConfig];
      }
      unsigned int v13 = [v12 shouldLog];
      if ([v12 shouldLogToDisk]) {
        int v14 = v13 | 2;
      }
      else {
        int v14 = v13;
      }
      id v15 = [v12 OSLogObject];
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO)) {
        int v16 = v14;
      }
      else {
        int v16 = v14 & 2;
      }
      if (v16)
      {
        unsigned int v17 = objc_opt_class();
        int v55 = 138543362;
        long long v56 = v17;
        id v18 = v17;
        LODWORD(v52) = 12;
        uint64_t v19 = (void *)_os_log_send_and_compose_impl();

        if (!v19)
        {
LABEL_22:

          [v10 MCSetBoolRestriction:MCFeatureExplicitContentAllowed value:0];
LABEL_35:
          xpc_object_t v26 = +[NSBundle bundleForClass:objc_opt_class()];
          uint64_t v27 = [v26 localizedStringForKey:@"ITUNES_STORE" value:&stru_1003B9B00 table:0];

          uint64_t v9 = &syslog_ptr;
          __int16 v28 = +[MCProfileConnection sharedConnection];
          [v28 applyRestrictionDictionary:v10 clientType:@"com.apple.itunesstored" clientUUID:SSRestrictionsExplicitUUID localizedClientDescription:v27 localizedWarningMessage:0 outRestrictionChanged:0 outEffectiveSettingsChanged:0 outError:0];

          id v4 = v53;
          goto LABEL_36;
        }
        id v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v55, v52);
        free(v19);
        SSFileLog();
      }

      goto LABEL_22;
    }
    if (!v11)
    {
      id v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v20 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      v20 |= 2u;
    }
    int v21 = [v12 OSLogObject];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO)) {
      int v22 = v20;
    }
    else {
      int v22 = v20 & 2;
    }
    if (v22)
    {
      id v23 = objc_opt_class();
      int v55 = 138543362;
      long long v56 = v23;
      id v24 = v23;
      LODWORD(v52) = 12;
      id v25 = (void *)_os_log_send_and_compose_impl();

      if (!v25)
      {
LABEL_34:

        goto LABEL_35;
      }
      int v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v55, v52);
      free(v25);
      SSFileLog();
    }

    goto LABEL_34;
  }
LABEL_36:
  [*(id *)(a1 + 32) setExplicitPreferencesDisabled:v7];
  if ((v7 & 1) == 0)
  {
    uint64_t v29 = [v9[283] sharedConnection];
    uint64_t v30 = MCFeatureExplicitContentAllowed;
    unsigned int v31 = [v29 effectiveBoolValueForSetting:MCFeatureExplicitContentAllowed];

    if (!v31)
    {
      int v36 = +[SSLogConfig sharedDaemonConfig];
      if (!v36)
      {
        int v36 = +[SSLogConfig sharedConfig];
      }
      unsigned int v40 = [v36 shouldLog];
      if ([v36 shouldLogToDisk]) {
        v40 |= 2u;
      }
      id v38 = [v36 OSLogObject];
      if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO)) {
        int v41 = v40;
      }
      else {
        int v41 = v40 & 2;
      }
      if (!v41) {
        goto LABEL_59;
      }
LABEL_57:
      id v42 = objc_opt_class();
      int v55 = 138543618;
      long long v56 = v42;
      __int16 v57 = 1024;
      int v58 = (int)v5;
      id v43 = v42;
      LODWORD(v52) = 18;
      id v44 = (void *)_os_log_send_and_compose_impl();

      if (!v44)
      {
LABEL_60:

        id v45 = +[MCProfileConnection sharedConnection];
        [v45 setBoolValue:v5 ^ 1 forSetting:v30];

        [*(id *)(a1 + 32) setLastChangeInducingBagExplicitOff:v5];
        goto LABEL_73;
      }
      id v38 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v44, 4, &v55, v52);
      free(v44);
      SSFileLog();
LABEL_59:

      goto LABEL_60;
    }
    unsigned int v32 = [*(id *)(a1 + 32) lastChangeInducingBagExplicitOff:0];
    int v33 = (v31 != 1) ^ v32;
    unsigned int v34 = v5 ^ v32;
    uint64_t v35 = +[SSLogConfig sharedDaemonConfig];
    int v36 = (void *)v35;
    if ((v33 & 1) == 0 && v34)
    {
      if (!v35)
      {
        int v36 = +[SSLogConfig sharedConfig];
      }
      unsigned int v37 = [v36 shouldLog];
      if ([v36 shouldLogToDisk]) {
        v37 |= 2u;
      }
      id v38 = [v36 OSLogObject];
      if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO)) {
        int v39 = v37;
      }
      else {
        int v39 = v37 & 2;
      }
      if (!v39) {
        goto LABEL_59;
      }
      goto LABEL_57;
    }
    if (!v35)
    {
      int v36 = +[SSLogConfig sharedConfig];
    }
    unsigned int v46 = [v36 shouldLog];
    if ([v36 shouldLogToDisk]) {
      v46 |= 2u;
    }
    unsigned int v47 = [v36 OSLogObject];
    if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO)) {
      int v48 = v46;
    }
    else {
      int v48 = v46 & 2;
    }
    if (v48)
    {
      int v49 = objc_opt_class();
      int v55 = 138543874;
      long long v56 = v49;
      __int16 v57 = 1024;
      int v58 = v33;
      __int16 v59 = 1024;
      unsigned int v60 = v34;
      id v50 = v49;
      LODWORD(v52) = 24;
      id v51 = (void *)_os_log_send_and_compose_impl();

      if (!v51)
      {
LABEL_72:

        goto LABEL_73;
      }
      unsigned int v47 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v51, 4, &v55, v52);
      free(v51);
      SSFileLog();
    }

    goto LABEL_72;
  }
LABEL_73:
  CFPreferencesAppSynchronize(kITunesStoreDaemonDefaultsID);
}

uint64_t sub_10015F314()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = qword_100401F38;
  qword_100401F38 = (uint64_t)v0;

  return _objc_release_x1(v0, v1);
}

void sub_10015FEF0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) activationHandler];
  if (v2)
  {
    CFURLRef v3 = (void *)v2;
    unsigned __int8 v4 = [*(id *)(a1 + 32) didActivate];

    if ((v4 & 1) == 0)
    {
      id v5 = [*(id *)(a1 + 32) activationHandler];
      v5[2](v5, 0);

      id v6 = *(void **)(a1 + 32);
      [v6 setDidActivate:1];
    }
  }
}

id sub_100162480(uint64_t a1)
{
  return [*(id *)(a1 + 32) _initializePolicy];
}

void sub_1001627CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t sub_10016280C(uint64_t a1, void *a2)
{
  id v4 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithObjectsAndKeys:", *(void *)(a1 + 32), @"policy_data", 0);
  id v5 = -[DownloadPolicyEntity initWithPropertyValues:inDatabase:]([DownloadPolicyEntity alloc], "initWithPropertyValues:inDatabase:", v4, [a2 database]);
  if (v5)
  {
    id v6 = v5;
    id v7 = objc_alloc_init(DownloadPolicy);
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [(DownloadPolicyEntity *)v6 persistentID];
    [(DownloadPolicy *)v7 setDatabaseID:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
    [(DownloadPolicy *)v7 setPolicyData:*(void *)(a1 + 32)];
    [*(id *)(a1 + 40) _addPolicy:v7];
  }
  return 1;
}

id sub_100163024(uint64_t a1, void *a2)
{
  id v3 = +[DownloadPolicy queryWithDatabase:predicate:](DownloadPolicy, "queryWithDatabase:predicate:", [a2 database], 0);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001630C0;
  v5[3] = &unk_1003A8008;
  void v5[4] = *(void *)(a1 + 32);
  return [v3 enumerateMemoryEntitiesUsingBlock:v5];
}

id sub_1001630C0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_100163D6C()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401F48 = (uint64_t)result;
  return result;
}

void sub_100163E08(uint64_t a1)
{
  id v2 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(*(id *)(a1 + 32), "handlerIdentifier"));
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  if (!os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_INFO)) {
    v5 &= 2u;
  }
  if (v5)
  {
    uint64_t v6 = objc_opt_class();
    uint64_t v7 = *(void *)(a1 + 32);
    int v17 = 138412802;
    uint64_t v18 = v6;
    __int16 v19 = 2112;
    id v20 = v2;
    __int16 v21 = 2112;
    uint64_t v22 = v7;
    LODWORD(v16) = 32;
    id v15 = &v17;
    uint64_t v8 = _os_log_send_and_compose_impl();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      id v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v17, v16);
      free(v9);
      id v15 = (int *)v10;
      SSFileLog();
    }
  }
  id v11 = objc_msgSend(*(id *)(*(void *)(a1 + 40) + 8), "objectForKey:", v2, v15);
  if (!v11)
  {
    [*(id *)(*(void *)(a1 + 40) + 8) setObject:*(void *)(a1 + 32) forKey:v2];
    objc_msgSend(*(id *)(a1 + 40), "_endDisconnectedSessionsForClientID:", objc_msgSend(*(id *)(a1 + 32), "clientIdentifier"));
    goto LABEL_18;
  }
  id v12 = v11;
  id v13 = [v11 copyInputConnection];
  id v14 = [*(id *)(a1 + 32) copyInputConnection];
  if (v14 != v13)
  {
    [*(id *)(*(void *)(a1 + 40) + 8) setObject:*(void *)(a1 + 32) forKey:v2];
    if (!v13) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  objc_msgSend(v12, "setDownloadPhasesToIgnore:", objc_msgSend(*(id *)(a1 + 32), "downloadPhasesToIgnore"));
  objc_msgSend(v12, "setSessionsNeedPowerAssertion:", objc_msgSend(*(id *)(a1 + 32), "sessionsNeedPowerAssertion"));
  objc_msgSend(v12, "setSessionsShouldBlockOtherDownloads:", objc_msgSend(*(id *)(a1 + 32), "sessionsShouldBlockOtherDownloads"));
  if (v13) {
LABEL_14:
  }
    xpc_release(v13);
LABEL_15:
  if (v14) {
    xpc_release(v14);
  }
LABEL_18:
  [*(id *)(a1 + 40) _notifyObserversOfHandlersChange];
}

id sub_1001640E8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) addObject:*(void *)(a1 + 40)];
}

void sub_1001641D4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1001641EC(uint64_t a1, uint64_t a2)
{
}

void sub_1001641FC(uint64_t a1)
{
}

void sub_100164208(uint64_t a1)
{
  id v4 = [objc_alloc((Class)NSNumber) initWithLongLong:*(void *)(a1 + 56)];
  id v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "objectForKey:");
  if (v2)
  {
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientForSession:", v2), "beginBackgroundTaskWithReason:expirationBlock:", *(unsigned int *)(a1 + 64), *(void *)(a1 + 40));
    id v3 = *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  }
}

id sub_100164318(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      SSFileLog();
    }
  }
  id v9 = [objc_alloc((Class)NSNumber) initWithLongLong:*(void *)(a1 + 40)];
  if (objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "objectForKey:", v9), "sessionProperties"), "authenticationChallenge"))
  {
    uint64_t v10 = 1005;
  }
  else
  {
    uint64_t v10 = 1000;
  }

  return objc_msgSend(*(id *)(a1 + 32), "_sendMessage:forSessionID:replyBlock:", v10);
}

uint64_t sub_100164514(uint64_t a1, xpc_object_t object)
{
  if (object == &_xpc_error_connection_interrupted || object == &_xpc_error_connection_invalid)
  {
    int v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    return (uint64_t)[v4 disconnectDownloadSessionWithID:v5];
  }
  else if (object {
         && xpc_get_type(object) == (xpc_type_t)&_xpc_type_dictionary
  }
         && (xpc_object_t value = xpc_dictionary_get_value(object, "0")) != 0
         && (uint64_t v10 = value, xpc_get_type(value) == (xpc_type_t)&_xpc_type_BOOL))
  {
    uint64_t result = xpc_BOOL_get_value(v10);
    if ((result & 1) == 0)
    {
      id v11 = +[SSLogConfig sharedDaemonConfig];
      if (!v11) {
        id v11 = +[SSLogConfig sharedConfig];
      }
      unsigned int v12 = [v11 shouldLog];
      if ([v11 shouldLogToDisk]) {
        int v13 = v12 | 2;
      }
      else {
        int v13 = v12;
      }
      if (!os_log_type_enabled((os_log_t)[v11 OSLogObject], OS_LOG_TYPE_INFO)) {
        v13 &= 2u;
      }
      if (v13)
      {
        uint64_t v14 = objc_opt_class();
        uint64_t v15 = *(void *)(a1 + 40);
        int v22 = 138412546;
        uint64_t v23 = v14;
        __int16 v24 = 2048;
        uint64_t v25 = v15;
        LODWORD(v21) = 22;
        id v20 = &v22;
        uint64_t v16 = _os_log_send_and_compose_impl();
        if (v16)
        {
          int v17 = (void *)v16;
          uint64_t v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v22, v21);
          free(v17);
          id v20 = (int *)v18;
          SSFileLog();
        }
      }
      return (uint64_t)objc_msgSend(*(id *)(a1 + 32), "releaseDownloadSessionWithID:", *(void *)(a1 + 40), v20);
    }
  }
  else
  {
    uint64_t v7 = *(void **)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    return (uint64_t)[v7 failDownloadSessionWithID:v8 error:0];
  }
  return result;
}

id sub_1001647E8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 1, v11);
}

id sub_1001649C8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  objc_msgSend(*(id *)(a1 + 32), "_sendMessage:forSessionID:replyBlock:", 1001, *(void *)(a1 + 40), 0, v11);
  return [*(id *)(a1 + 32) _endSessionWithID:*(void *)(a1 + 40) state:8];
}

id sub_100164BF4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _clientForProperties:*(void *)(a1 + 40)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = result != 0;
  return result;
}

void sub_100164CA8(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSNumber) initWithLongLong:*(void *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 56) removeObjectForKey:v2];
}

id sub_100164D80(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 2, v11);
}

id sub_100164F64(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _popDownloadSessionForSessionID:*(void *)(a1 + 48)];
  if (result)
  {
    unsigned int v3 = result;
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_INFO)) {
      v6 &= 2u;
    }
    if (v6)
    {
      uint64_t v7 = objc_opt_class();
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v8 = *(void *)(a1 + 48);
      int v15 = 138412802;
      uint64_t v16 = v7;
      __int16 v17 = 2048;
      uint64_t v18 = v8;
      __int16 v19 = 2112;
      uint64_t v20 = v9;
      LODWORD(v14) = 32;
      int v13 = &v15;
      uint64_t v10 = _os_log_send_and_compose_impl();
      if (v10)
      {
        id v11 = (void *)v10;
        uint64_t v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v15, v14);
        free(v11);
        int v13 = (int *)v12;
        SSFileLog();
      }
    }
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientForSession:", v3, v13), "addDisavowedSessionProperties:", objc_msgSend(v3, "sessionProperties"));
    [v3 setError:*(void *)(a1 + 40)];
    [v3 setSessionState:6];
    return [*(id *)(a1 + 32) _notifyObserversOfSessionChange:v3];
  }
  return result;
}

id sub_1001651A8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 7, v11);
}

void sub_10016538C(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSNumber) initWithLongLong:*(void *)(a1 + 48)];
  id v3 = [*(id *)(*(void *)(a1 + 32) + 56) objectForKey:v2];
  if (v3 && (id v4 = [*(id *)(a1 + 32) _clientForSession:v3]) != 0)
  {
    [v4 endBackgroundTaskWithIdentifier:*(void *)(a1 + 40)];
  }
  else
  {
    uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 8);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_10016545C;
    v6[3] = &unk_1003A8080;
    void v6[4] = *(void *)(a1 + 40);
    [v5 enumerateKeysAndObjectsUsingBlock:v6];
  }
}

id sub_10016545C(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 endBackgroundTaskWithIdentifier:*(void *)(a1 + 32)];
}

id sub_1001654E4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _popDownloadSessionForSessionID:*(void *)(a1 + 48)];
  if (result)
  {
    id v3 = result;
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_INFO)) {
      v6 &= 2u;
    }
    if (v6)
    {
      uint64_t v7 = objc_opt_class();
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v8 = *(void *)(a1 + 48);
      int v15 = 138412802;
      uint64_t v16 = v7;
      __int16 v17 = 2048;
      uint64_t v18 = v8;
      __int16 v19 = 2112;
      uint64_t v20 = v9;
      LODWORD(v14) = 32;
      int v13 = &v15;
      uint64_t v10 = _os_log_send_and_compose_impl();
      if (v10)
      {
        id v11 = (void *)v10;
        uint64_t v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v15, v14);
        free(v11);
        int v13 = (int *)v12;
        SSFileLog();
      }
    }
    objc_msgSend(v3, "setError:", *(void *)(a1 + 40), v13);
    [v3 setSessionState:8];
    return [*(id *)(a1 + 32) _notifyObserversOfSessionChange:v3];
  }
  return result;
}

id sub_100165704(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 9, v11);
}

void sub_1001659C0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1001659D8(void *a1)
{
  id v2 = [objc_alloc((Class)NSNumber) initWithLongLong:a1[6]];
  *(void *)(*(void *)(a1[5] + 8) + 40) = [*(id *)(a1[4] + 8) objectForKey:v2];
}

id sub_100165A4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyObserversOfHandlersChange];
}

void sub_100165B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100165B48(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _clientForProperties:*(void *)(a1 + 40)];
  if (v2)
  {
    unsigned int v3 = v2;
    int v4 = [[DownloadHandlerSession alloc] initWithSessionProperties:*(void *)(a1 + 40)];
    -[DownloadHandlerSession setActiveHandlerIdentifier:](v4, "setActiveHandlerIdentifier:", [v3 handlerIdentifier]);
    -[DownloadHandlerSession setBlocksOtherDownloads:](v4, "setBlocksOtherDownloads:", [v3 sessionsShouldBlockOtherDownloads]);
    -[DownloadHandlerSession setNeedsPowerAssertion:](v4, "setNeedsPowerAssertion:", [v3 sessionsNeedPowerAssertion]);
    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "setObject:forKey:", v4, +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", -[DownloadHandlerSession sessionID](v4, "sessionID")));
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = [(DownloadHandlerSession *)v4 copy];
  }
}

id sub_100165CC4(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_sendMessage:forSessionID:replyBlock:", 1002, *(void *)(a1 + 40), 0, v11);
}

id sub_100165EA8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 3, v11);
}

id sub_100166088(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 4, v11);
}

id sub_100166268(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 10, v11);
}

id sub_100166448(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) removeObject:*(void *)(a1 + 40)];
}

void sub_1001664C8(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSNumber) initWithLongLong:*(void *)(a1 + 40)];
  id v3 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKey:v2];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 resetDisavowedSessionProperties];
    if ([v5 count])
    {
      id v6 = +[SSLogConfig sharedDaemonConfig];
      if (!v6) {
        id v6 = +[SSLogConfig sharedConfig];
      }
      unsigned int v7 = [v6 shouldLog];
      if ([v6 shouldLogToDisk]) {
        int v8 = v7 | 2;
      }
      else {
        int v8 = v7;
      }
      if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
        v8 &= 2u;
      }
      if (v8)
      {
        int v14 = 138412802;
        uint64_t v15 = objc_opt_class();
        __int16 v16 = 2048;
        id v17 = [v5 count];
        __int16 v18 = 2112;
        id v19 = v4;
        LODWORD(v13) = 32;
        uint64_t v12 = &v14;
        uint64_t v9 = _os_log_send_and_compose_impl();
        if (v9)
        {
          uint64_t v10 = (void *)v9;
          id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v14, v13);
          free(v10);
          uint64_t v12 = (int *)v11;
          SSFileLog();
        }
      }
      objc_msgSend(*(id *)(a1 + 32), "_notifyObserversOfHandlersChange", v12);
    }
  }
}

id sub_10016670C(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2048;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    id v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      int v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      id v11 = (int *)v9;
      SSFileLog();
    }
  }
  objc_msgSend(*(id *)(a1 + 32), "_sendMessage:forSessionID:replyBlock:", 1001, *(void *)(a1 + 40), 0, v11);
  return [*(id *)(a1 + 32) _endSessionWithID:*(void *)(a1 + 40) state:7];
}

void sub_100166964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10016697C(void *a1)
{
  id v2 = [objc_alloc((Class)NSNumber) initWithLongLong:a1[6]];
  *(void *)(*(void *)(a1[5] + 8) + 40) = objc_msgSend(objc_msgSend(*(id *)(a1[4] + 56), "objectForKey:", v2), "copy");
}

void sub_100166A68(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _globalHandlerIDForClientID:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = +[SSLogConfig sharedDaemonConfig];
  id v5 = v4;
  if (v3)
  {
    if (!v4) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_INFO)) {
      v7 &= 2u;
    }
    if (v7)
    {
      uint64_t v8 = objc_opt_class();
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      int v24 = 138412802;
      uint64_t v25 = v8;
      __int16 v26 = 2048;
      uint64_t v27 = v9;
      __int16 v28 = 2112;
      uint64_t v29 = v10;
      LODWORD(v23) = 32;
      uint64_t v11 = _os_log_send_and_compose_impl();
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v24, v23);
        free(v12);
        SSFileLog();
      }
    }
    id v13 = [objc_alloc((Class)NSNumber) initWithLongLong:*(void *)(a1 + 48)];
    [*(id *)(*(void *)(a1 + 32) + 32) setObject:v13 forKey:*(void *)(a1 + 40)];
  }
  else
  {
    if (!v4) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_INFO)) {
      v15 &= 2u;
    }
    if (v15)
    {
      uint64_t v16 = objc_opt_class();
      uint64_t v17 = *(void *)(a1 + 40);
      int v24 = 138412546;
      uint64_t v25 = v16;
      __int16 v26 = 2112;
      uint64_t v27 = v17;
      LODWORD(v23) = 22;
      int v22 = &v24;
      uint64_t v18 = _os_log_send_and_compose_impl();
      if (v18)
      {
        id v19 = (void *)v18;
        uint64_t v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v24, v23);
        free(v19);
        int v22 = (int *)v20;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 32), "removeObjectForKey:", *(void *)(a1 + 40), v22);
  }
  if (v2 != *(id *)(a1 + 48))
  {
    id v21 = [*(id *)(a1 + 32) _disconnectSessionsForHandlerID:v2];
    [*(id *)(a1 + 32) _notifyObserversOfHandlersChange];
    if ([v21 count]) {
      [*(id *)(a1 + 32) _notifyObserversOfSessionChanges:v21];
    }
  }
}

void sub_100166DD8(uint64_t a1)
{
  id v4 = [objc_alloc((Class)NSNumber) initWithLongLong:*(void *)(a1 + 48)];
  id v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "objectForKey:");
  if (v2)
  {
    id v3 = v2;
    [v2 setSessionPropertyValues:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) _notifyObserversOfSessionChange:v3];
  }
}

id sub_100166ED0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _popDownloadSessionForSessionID:*(void *)(a1 + 48)];
  if (result)
  {
    id v3 = result;
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_INFO)) {
      v6 &= 2u;
    }
    if (v6)
    {
      uint64_t v7 = objc_opt_class();
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      int v15 = 138412802;
      uint64_t v16 = v7;
      __int16 v17 = 2112;
      uint64_t v18 = v8;
      __int16 v19 = 2048;
      uint64_t v20 = v9;
      LODWORD(v14) = 32;
      id v13 = &v15;
      uint64_t v10 = _os_log_send_and_compose_impl();
      if (v10)
      {
        uint64_t v11 = (void *)v10;
        uint64_t v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v15, v14);
        free(v11);
        id v13 = (int *)v12;
        SSFileLog();
      }
    }
    objc_msgSend(v3, "setSessionState:", 5, v13);
    [v3 setURLCredential:*(void *)(a1 + 40)];
    return [*(id *)(a1 + 32) _notifyObserversOfSessionChange:v3];
  }
  return result;
}

void sub_1001670F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(v2, "handlerIdentifier"));
    id v4 = [*(id *)(*(void *)(a1 + 40) + 8) objectForKey:v3];
    if (v4)
    {
      unsigned int v5 = v4;
      id v6 = objc_msgSend(*(id *)(a1 + 40), "_disconnectSessionsForHandlerID:", objc_msgSend(v3, "longLongValue"));
      [v5 setOutputConnectionWithConnection:0];
      [*(id *)(*(void *)(a1 + 40) + 8) removeObjectForKey:v3];
      [*(id *)(a1 + 40) _notifyObserversOfHandlersChange];
      if ([v6 count])
      {
        id v7 = [v5 clientIdentifier];
        id v8 = +[SSLogConfig sharedDaemonConfig];
        if (!v8) {
          id v8 = +[SSLogConfig sharedConfig];
        }
        unsigned int v9 = [v8 shouldLog];
        if ([v8 shouldLogToDisk]) {
          int v10 = v9 | 2;
        }
        else {
          int v10 = v9;
        }
        if (!os_log_type_enabled((os_log_t)[v8 OSLogObject], OS_LOG_TYPE_INFO)) {
          v10 &= 2u;
        }
        if (v10)
        {
          int v21 = 138412802;
          uint64_t v22 = objc_opt_class();
          __int16 v23 = 2048;
          id v24 = [v6 count];
          __int16 v25 = 2112;
          id v26 = v7;
          LODWORD(v19) = 32;
          uint64_t v18 = &v21;
          uint64_t v11 = _os_log_send_and_compose_impl();
          if (v11)
          {
            uint64_t v12 = (void *)v11;
            id v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, &v21, v19);
            free(v12);
            uint64_t v18 = (int *)v13;
            SSFileLog();
          }
        }
        objc_msgSend(*(id *)(*(void *)(a1 + 40) + 16), "setObject:forKey:", v6, v7, v18);
        uint64_t v14 = +[SSWeakReference weakReferenceWithObject:*(void *)(a1 + 40)];
        dispatch_time_t v15 = dispatch_time(0, 20000000000);
        uint64_t v16 = *(void *)(a1 + 40);
        __int16 v17 = *(NSObject **)(v16 + 24);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001673D0;
        block[3] = &unk_1003A3410;
        void block[4] = v16;
        void block[5] = v7;
        void block[6] = v14;
        dispatch_after(v15, v17, block);
      }
    }
  }
}

id sub_1001673D0(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v5;
    __int16 v15 = 2112;
    uint64_t v16 = v6;
    LODWORD(v12) = 22;
    uint64_t v11 = &v13;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      id v8 = (void *)v7;
      unsigned int v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12);
      free(v8);
      uint64_t v11 = (int *)v9;
      SSFileLog();
    }
  }
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "object", v11), "_endDisconnectedSessionsForClientID:", *(void *)(a1 + 40));
}

id sub_100167738(uint64_t a1, uint64_t a2, void *a3)
{
  if ([a3 activeHandlerIdentifier] == *(id *)(a1 + 48))
  {
    [a3 setSessionState:7];
    uint64_t v6 = *(void **)(a1 + 40);
    return [v6 addObject:a3];
  }
  else
  {
    id v8 = *(void **)(a1 + 32);
    return [v8 setObject:a3 forKey:a2];
  }
}

void sub_100167978(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * i);
        if (objc_opt_respondsToSelector()) {
          [v7 downloadHandlerManagerHandlersDidChange:*(void *)(a1 + 40)];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_100167B94(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8 * i);
        if (objc_opt_respondsToSelector()) {
          [v7 downloadHandlerManager:*(void *)(a1 + 40) sessionsDidChange:*(void *)(a1 + 48)];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

uint64_t sub_100168034(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1001689DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100168A20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100168A30(uint64_t a1)
{
}

void sub_100168A38(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  uint64_t v7 = [v6 downloadPhase];
  id v8 = [*(id *)(a1 + 32) indexOfObject:v7];
  if ((uint64_t)v8 >= *(void *)(a1 + 88))
  {
    if (v8 == *(id *)(a1 + 96))
    {
      long long v11 = 0;
    }
    else
    {
      long long v11 = [*(id *)(a1 + 40) _downloadSessionPropertiesWithDownloadPhase:v7];
      uint64_t v12 = +[DownloadHandlerManager handlerManager];
      int v13 = [v12 openSessionWithProperties:v11];

      if (v13)
      {
        uint64_t v14 = objc_alloc_init(FinishDownloadResponse);
        uint64_t v15 = *(void *)(*(void *)(a1 + 72) + 8);
        uint64_t v16 = *(void **)(v15 + 40);
        *(void *)(v15 + 40) = v14;

        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setDownloadHandlerSession:v13];
        objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), "setDownloadIdentifier:", objc_msgSend(v11, "downloadIdentifier"));
        objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), "setMediaAssetIdentifier:", objc_msgSend(v11, "assetIdentifier"));
        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setResult:5];
        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setDownloadHandle:*(void *)(a1 + 48)];
        *a4 = 1;

        goto LABEL_26;
      }
    }
    __int16 v17 = +[SSLogConfig sharedDaemonConfig];
    if (!v17)
    {
      __int16 v17 = +[SSLogConfig sharedConfig];
    }
    unsigned int v18 = [v17 shouldLog];
    if ([v17 shouldLogToDisk]) {
      int v19 = v18 | 2;
    }
    else {
      int v19 = v18;
    }
    uint64_t v20 = [v17 OSLogObject];
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
      v19 &= 2u;
    }
    if (v19)
    {
      int v21 = objc_opt_class();
      uint64_t v22 = *(void *)(a1 + 104);
      int v37 = 138412802;
      id v38 = v21;
      __int16 v39 = 2112;
      unsigned int v40 = v7;
      __int16 v41 = 2048;
      uint64_t v42 = v22;
      id v23 = v21;
      LODWORD(v31) = 32;
      uint64_t v30 = &v37;
      id v24 = (void *)_os_log_send_and_compose_impl();

      if (!v24) {
        goto LABEL_19;
      }
      uint64_t v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v24, 4, &v37, v31);
      free(v24);
      uint64_t v30 = (int *)v20;
      SSFileLog();
    }

LABEL_19:
    __int16 v25 = *(void **)(a1 + 56);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_100168F6C;
    void v33[3] = &unk_1003A6DA0;
    uint64_t v36 = *(void *)(a1 + 104);
    id v34 = v7;
    id v35 = *(id *)(a1 + 64);
    [v25 modifyAsyncUsingTransactionBlock:v33];
    [v6 setDelegate:*(void *)(a1 + 40)];
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_100169060;
    v32[3] = &unk_1003A6460;
    v32[4] = *(void *)(a1 + 72);
    [v6 setOutputBlock:v32];
    [*(id *)(a1 + 40) runSubOperation:v6 returningError:0];
    [v6 setDelegate:0];
    if ([*(id *)(a1 + 40) isCancelled])
    {
      [*(id *)(a1 + 40) lock];
      id v26 = *(void **)(a1 + 40);
      if (v26[16] != -1)
      {
        uint64_t v27 = objc_alloc_init(FinishDownloadResponse);
        uint64_t v28 = *(void *)(*(void *)(a1 + 72) + 8);
        uint64_t v29 = *(void **)(v28 + 40);
        *(void *)(v28 + 40) = v27;

        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setDownloadIdentifier:*(void *)(a1 + 104)];
        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setResult:*(void *)(*(void *)(a1 + 40) + 128)];
        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setDownloadHandle:*(void *)(a1 + 48)];
        id v26 = *(void **)(a1 + 40);
      }
      objc_msgSend(v26, "unlock", v30);
    }
    else if ([*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) result] == (id)4)
    {

      goto LABEL_2;
    }
    *a4 = 1;

    goto LABEL_26;
  }
LABEL_2:
  objc_msgSend(v6, "progressFraction", v30);
  if (v9 > 2.22044605e-16)
  {
    *(double *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = v9
                                                                + *(double *)(*(void *)(*(void *)(a1 + 80) + 8)
                                                                            + 24);
    uint64_t v10 = OBJC_IVAR___ISOperation__progress;
    objc_msgSend(*(id *)(*(void *)(a1 + 40) + OBJC_IVAR___ISOperation__progress), "setCurrentValue:", (uint64_t)(*(double *)(*(void *)(*(void *)(a1 + 80) + 8) + 24)* (double)(uint64_t)objc_msgSend(*(id *)(*(void *)(a1 + 40) + OBJC_IVAR___ISOperation__progress), "maxValue")));
    [*(id *)(a1 + 40) _sendProgressToDelegate:*(void *)(*(void *)(a1 + 40) + v10)];
  }
LABEL_26:
}

uint64_t sub_100168F6C(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [DownloadEntity alloc];
  uint64_t v5 = a1[6];
  id v6 = [v3 database];

  uint64_t v7 = [(DownloadEntity *)v4 initWithPersistentID:v5 inDatabase:v6];
  [(DownloadEntity *)v7 setValue:a1[4] forProperty:@"download_state.phase"];
  id v8 = objc_alloc((Class)NSDictionary);
  id v9 = objc_msgSend(v8, "initWithObjectsAndKeys:", a1[4], SSDownloadPropertyDownloadPhase, 0);
  uint64_t v10 = +[DownloadController controller];
  [v10 notifyClientsOfPropertyChanges:v9 forDownloadID:a1[6] downloadKind:a1[5]];

  return 1;
}

void sub_100169060(uint64_t a1, void *a2)
{
}

id sub_10016A5D4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) object];

  return [v1 cancel];
}

void sub_10016D010(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  uint64_t v5 = [v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    int v6 = v4;
  }
  else {
    int v6 = v4 & 2;
  }
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  int v10 = 138543362;
  uint64_t v11 = v7;
  LODWORD(v9) = 12;
  id v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    uint64_t v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v10, v9);
    free(v8);
    SSFileLog();
LABEL_12:
  }
  CFPreferencesSetAppValue(@"BiometricTokenUpdateTime", 0, kSSUserDefaultsIdentifier);
}

void sub_10016D278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10016D290(uint64_t a1)
{
  uint64_t Current = (uint64_t)CFAbsoluteTimeGetCurrent();
  unsigned int v3 = +[NSNumber numberWithLong:Current];
  int v4 = +[SSLogConfig sharedDaemonConfig];
  if (!v4)
  {
    int v4 = +[SSLogConfig sharedConfig];
  }
  unsigned int v5 = [v4 shouldLog];
  if ([v4 shouldLogToDisk]) {
    int v6 = v5 | 2;
  }
  else {
    int v6 = v5;
  }
  uint64_t v7 = [v4 OSLogObject];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    int v8 = v6;
  }
  else {
    int v8 = v6 & 2;
  }
  if (v8)
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v46 = 138543618;
    uint64_t v47 = v9;
    __int16 v48 = 2114;
    int v49 = v3;
    LODWORD(v45) = 22;
    id v43 = &v46;
    int v10 = (void *)_os_log_send_and_compose_impl();

    if (!v10) {
      goto LABEL_13;
    }
    uint64_t v7 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v46, v45);
    free(v10);
    id v43 = (int *)v7;
    SSFileLog();
  }

LABEL_13:
  HIBYTE(v45) = 0;
  CFStringRef v11 = (const __CFString *)kSSUserDefaultsIdentifier;
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue(@"BiometricTokenUpdateTime", kSSUserDefaultsIdentifier, (Boolean *)&v45 + 7);
  int v13 = +[NSNumber numberWithLong:AppIntegerValue];
  int v14 = HIBYTE(v45);
  uint64_t v15 = +[SSLogConfig sharedDaemonConfig];
  uint64_t v16 = (void *)v15;
  if (v14)
  {
    if (!v15)
    {
      uint64_t v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = objc_msgSend(v16, "shouldLog", v43);
    if ([v16 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    int v19 = [v16 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      int v20 = v18;
    }
    else {
      int v20 = v18 & 2;
    }
    if (v20)
    {
      uint64_t v21 = *(void *)(a1 + 32);
      int v46 = 138543618;
      uint64_t v47 = v21;
      __int16 v48 = 2114;
      int v49 = v13;
      LODWORD(v45) = 22;
      id v44 = &v46;
      uint64_t v22 = (void *)_os_log_send_and_compose_impl();

      if (!v22) {
        goto LABEL_26;
      }
      int v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, &v46, v45);
      free(v22);
      id v44 = (int *)v19;
      SSFileLog();
    }

LABEL_26:
    if (Current - AppIntegerValue > 59) {
      goto LABEL_53;
    }
    id v23 = +[SSLogConfig sharedDaemonConfig];
    if (!v23)
    {
      id v23 = +[SSLogConfig sharedConfig];
    }
    unsigned int v24 = objc_msgSend(v23, "shouldLog", v44);
    if ([v23 shouldLogToDisk]) {
      int v25 = v24 | 2;
    }
    else {
      int v25 = v24;
    }
    id v26 = [v23 OSLogObject];
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
      int v27 = v25;
    }
    else {
      int v27 = v25 & 2;
    }
    if (v27)
    {
      uint64_t v28 = *(void *)(a1 + 32);
      int v46 = 138543362;
      uint64_t v47 = v28;
      LODWORD(v45) = 12;
      id v44 = &v46;
      uint64_t v29 = (void *)_os_log_send_and_compose_impl();

      if (!v29)
      {
LABEL_39:

        *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
        goto LABEL_53;
      }
      id v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v29, 4, &v46, v45);
      free(v29);
      id v44 = (int *)v26;
      SSFileLog();
    }

    goto LABEL_39;
  }
  if (!v15)
  {
    uint64_t v16 = +[SSLogConfig sharedConfig];
  }
  unsigned int v30 = objc_msgSend(v16, "shouldLog", v43);
  if ([v16 shouldLogToDisk]) {
    int v31 = v30 | 2;
  }
  else {
    int v31 = v30;
  }
  unsigned int v32 = [v16 OSLogObject];
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT)) {
    int v33 = v31;
  }
  else {
    int v33 = v31 & 2;
  }
  if (!v33) {
    goto LABEL_51;
  }
  uint64_t v34 = *(void *)(a1 + 32);
  int v46 = 138543362;
  uint64_t v47 = v34;
  LODWORD(v45) = 12;
  id v44 = &v46;
  id v35 = (void *)_os_log_send_and_compose_impl();

  if (v35)
  {
    unsigned int v32 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v35, 4, &v46, v45);
    free(v35);
    id v44 = (int *)v32;
    SSFileLog();
LABEL_51:
  }
LABEL_53:
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v36 = +[SSLogConfig sharedDaemonConfig];
    if (!v36)
    {
      uint64_t v36 = +[SSLogConfig sharedConfig];
    }
    unsigned int v37 = objc_msgSend(v36, "shouldLog", v44);
    if ([v36 shouldLogToDisk]) {
      int v38 = v37 | 2;
    }
    else {
      int v38 = v37;
    }
    __int16 v39 = [v36 OSLogObject];
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT)) {
      int v40 = v38;
    }
    else {
      int v40 = v38 & 2;
    }
    if (v40)
    {
      uint64_t v41 = *(void *)(a1 + 32);
      int v46 = 138543618;
      uint64_t v47 = v41;
      __int16 v48 = 2114;
      int v49 = v3;
      LODWORD(v45) = 22;
      uint64_t v42 = (void *)_os_log_send_and_compose_impl();

      if (!v42)
      {
LABEL_66:

        CFPreferencesSetAppValue(@"BiometricTokenUpdateTime", v3, v11);
        goto LABEL_67;
      }
      __int16 v39 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v42, 4, &v46, v45);
      free(v42);
      SSFileLog();
    }

    goto LABEL_66;
  }
LABEL_67:
}

void sub_10016D9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10016D9B8(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  unsigned int v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    unsigned int v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  int v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    v5 &= 2u;
  }
  if (v5)
  {
    uint64_t v7 = +[NSNumber numberWithLong:(uint64_t)Current];
    int v32 = 138543362;
    int v33 = v7;
    LODWORD(v31) = 12;
    uint64_t v29 = &v32;
    int v8 = (void *)_os_log_send_and_compose_impl();

    if (!v8) {
      goto LABEL_12;
    }
    int v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v32, v31);
    free(v8);
    uint64_t v29 = (int *)v6;
    SSFileLog();
  }

LABEL_12:
  HIBYTE(v31) = 0;
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue(@"BiometricTokenUpdateTime", kSSUserDefaultsIdentifier, (Boolean *)&v31 + 7);
  int v10 = HIBYTE(v31);
  uint64_t v11 = +[SSLogConfig sharedDaemonConfig];
  uint64_t v12 = (void *)v11;
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = objc_msgSend(v12, "shouldLog", v29);
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    uint64_t v15 = [v12 OSLogObject];
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      v14 &= 2u;
    }
    if (v14)
    {
      uint64_t v16 = +[NSNumber numberWithLong:AppIntegerValue];
      int v32 = 138543362;
      int v33 = v16;
      LODWORD(v31) = 12;
      unsigned int v30 = &v32;
      unsigned int v17 = (void *)_os_log_send_and_compose_impl();

      if (!v17) {
        goto LABEL_24;
      }
      uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v32, v31);
      free(v17);
      unsigned int v30 = (int *)v15;
      SSFileLog();
    }

LABEL_24:
    if ((uint64_t)Current - AppIntegerValue > 59) {
      return;
    }
    int v18 = +[SSLogConfig sharedDaemonConfig];
    if (!v18)
    {
      int v18 = +[SSLogConfig sharedConfig];
    }
    unsigned int v19 = objc_msgSend(v18, "shouldLog", v30);
    if ([v18 shouldLogToDisk]) {
      int v20 = v19 | 2;
    }
    else {
      int v20 = v19;
    }
    uint64_t v21 = [v18 OSLogObject];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      int v22 = v20;
    }
    else {
      int v22 = v20 & 2;
    }
    if (v22)
    {
      LOWORD(v32) = 0;
      LODWORD(v31) = 2;
      id v23 = (void *)_os_log_send_and_compose_impl();

      if (!v23)
      {
LABEL_37:

        *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
        return;
      }
      uint64_t v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v23, 4, &v32, v31);
      free(v23);
      SSFileLog();
    }

    goto LABEL_37;
  }
  if (!v11)
  {
    uint64_t v12 = +[SSLogConfig sharedConfig];
  }
  unsigned int v24 = objc_msgSend(v12, "shouldLog", v29);
  if ([v12 shouldLogToDisk]) {
    int v25 = v24 | 2;
  }
  else {
    int v25 = v24;
  }
  id v26 = [v12 OSLogObject];
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
    int v27 = v25;
  }
  else {
    int v27 = v25 & 2;
  }
  if (!v27) {
    goto LABEL_49;
  }
  LOWORD(v32) = 0;
  LODWORD(v31) = 2;
  uint64_t v28 = (void *)_os_log_send_and_compose_impl();

  if (v28)
  {
    id v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v32, v31);
    free(v28);
    SSFileLog();
LABEL_49:
  }
}

void sub_10016E124(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = objc_alloc_init((Class)NSMutableDictionary);
  if (a2)
  {
    objc_opt_class();
    uint64_t v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    objc_opt_class();
    int v8 = (void *)SSXPCDictionaryCopyObjectWithClass();
    BOOL v9 = xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 32), "3");
    if (v7)
    {
      BOOL v10 = v9;
      uint64_t v11 = +[SSLogConfig sharedDaemonConfig];
      uint64_t v12 = (void *)v11;
      if (v8)
      {
        if (!v11)
        {
          uint64_t v12 = +[SSLogConfig sharedConfig];
        }
        unsigned int v13 = [v12 shouldLog];
        if ([v12 shouldLogToDisk]) {
          int v14 = v13 | 2;
        }
        else {
          int v14 = v13;
        }
        uint64_t v15 = [v12 OSLogObject];
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
          v14 &= 2u;
        }
        int v40 = v8;
        if (v14)
        {
          int v41 = 138543874;
          id v42 = (id)objc_opt_class();
          __int16 v43 = 2114;
          id v44 = v7;
          __int16 v45 = 2112;
          int v46 = v8;
          id v16 = v42;
          LODWORD(v37) = 32;
          uint64_t v36 = &v41;
          unsigned int v17 = (void *)_os_log_send_and_compose_impl();

          if (!v17)
          {
LABEL_15:

            uint64_t v12 = +[ISBiometricStore sharedInstance];
            int v38 = v7;
            int v18 = [v12 fetchContextFromCacheWithToken:v7 evict:v10];
            __int16 v39 = [v18 challenge];
            unsigned int v19 = [v18 signature];
            int v20 = [v18 xAppleAMDHeader];
            uint64_t v21 = [v18 xAppleAMDMHeader];
            int v22 = objc_msgSend(v12, "publicKeyDataForAccountIdentifier:purpose:error:", v40, objc_msgSend(v18, "isExtendedAction"), 0);
            id v23 = v22;
            if (v22)
            {
              id v24 = v22;
              [v24 bytes];
              [v24 length];
              int v25 = (void *)ISCopyEncodedBase64();
            }
            else
            {
              int v25 = 0;
            }
            uint64_t v34 = ISBiometricsHTTPHeaderValueForBiometricStateWithStore();
            if (v39) {
              [v6 setObject:v39 forKeyedSubscript:SSHTTPHeaderXAppleTouchIDChallenge];
            }
            if (v19) {
              [v6 setObject:v19 forKeyedSubscript:SSHTTPHeaderXAppleTouchIDSignature];
            }
            objc_msgSend(v6, "setObject:forKeyedSubscript:", @"1", SSHTTPHeaderXAppleTouchIDSignatureVersion, v36);
            if (v25) {
              [v6 setObject:v25 forKeyedSubscript:SSHTTPHeaderXAppleTouchIDPublicKey];
            }
            if (v34) {
              [v6 setObject:v34 forKeyedSubscript:SSHTTPHeaderXAppleTouchIDState];
            }
            if (v20) {
              [v6 setObject:v20 forKeyedSubscript:SSHTTPHeaderXAppleAMD];
            }
            if (v21) {
              [v6 setObject:v21 forKeyedSubscript:SSHTTPHeaderXAppleAMDM];
            }

            uint64_t v7 = v38;
            int v8 = v40;
            goto LABEL_52;
          }
          uint64_t v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v41, v37);
          free(v17);
          uint64_t v36 = (int *)v15;
          SSFileLog();
        }

        goto LABEL_15;
      }
      if (!v11)
      {
        uint64_t v12 = +[SSLogConfig sharedConfig];
      }
      unsigned int v30 = [v12 shouldLog];
      if ([v12 shouldLogToDisk]) {
        int v31 = v30 | 2;
      }
      else {
        int v31 = v30;
      }
      uint64_t v29 = [v12 OSLogObject];
      if (!os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        v31 &= 2u;
      }
      if (!v31) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v12 = +[SSLogConfig sharedDaemonConfig];
      if (!v12)
      {
        uint64_t v12 = +[SSLogConfig sharedConfig];
      }
      unsigned int v27 = [v12 shouldLog];
      if ([v12 shouldLogToDisk]) {
        int v28 = v27 | 2;
      }
      else {
        int v28 = v27;
      }
      uint64_t v29 = [v12 OSLogObject];
      if (!os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        v28 &= 2u;
      }
      if (!v28) {
        goto LABEL_37;
      }
    }
    int v41 = 138543362;
    id v42 = (id)objc_opt_class();
    id v32 = v42;
    LODWORD(v37) = 12;
    uint64_t v36 = &v41;
    int v33 = (void *)_os_log_send_and_compose_impl();

    if (!v33)
    {
LABEL_52:

      id v26 = 0;
      goto LABEL_53;
    }
    uint64_t v29 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v33, 4, &v41, v37);
    free(v33);
    uint64_t v36 = (int *)v29;
    SSFileLog();
LABEL_37:

    goto LABEL_52;
  }
  id v26 = SSError();
LABEL_53:
  id v35 = +[NSDictionary dictionaryWithDictionary:](NSDictionary, "dictionaryWithDictionary:", v6, v36);
  SSXPCDictionarySetObject();

  SSXPCDictionarySetObject();
}

void sub_10016E808(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    BOOL v7 = xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 32), "2");
    uint64_t v8 = +[SSLogConfig sharedDaemonConfig];
    BOOL v9 = (void *)v8;
    if (v6)
    {
      if (!v8)
      {
        BOOL v9 = +[SSLogConfig sharedConfig];
      }
      unsigned int v10 = [v9 shouldLog];
      if ([v9 shouldLogToDisk]) {
        int v11 = v10 | 2;
      }
      else {
        int v11 = v10;
      }
      uint64_t v12 = [v9 OSLogObject];
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
        v11 &= 2u;
      }
      if (v11)
      {
        *(_DWORD *)id v24 = 138543618;
        *(void *)&v24[4] = objc_opt_class();
        *(_WORD *)&v24[12] = 2114;
        *(void *)&v24[14] = v6;
        id v13 = *(id *)&v24[4];
        LODWORD(v23) = 22;
        int v14 = (void *)_os_log_send_and_compose_impl();

        if (!v14)
        {
LABEL_14:

          BOOL v9 = +[ISBiometricStore sharedInstance];
          uint64_t v15 = [v9 fetchContextFromCacheWithToken:v6 evict:v7];
LABEL_28:

          unsigned int v17 = 0;
          goto LABEL_29;
        }
        uint64_t v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, v24, v23, *(_OWORD *)v24, *(void *)&v24[16]);
        free(v14);
        SSFileLog();
      }

      goto LABEL_14;
    }
    if (!v8)
    {
      BOOL v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v18 = [v9 shouldLog];
    if ([v9 shouldLogToDisk]) {
      int v19 = v18 | 2;
    }
    else {
      int v19 = v18;
    }
    int v20 = [v9 OSLogObject];
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      v19 &= 2u;
    }
    if (v19)
    {
      *(_DWORD *)id v24 = 138543362;
      *(void *)&v24[4] = objc_opt_class();
      id v21 = *(id *)&v24[4];
      LODWORD(v23) = 12;
      int v22 = (void *)_os_log_send_and_compose_impl();

      if (!v22)
      {
LABEL_27:
        uint64_t v15 = 0;
        goto LABEL_28;
      }
      int v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, v24, v23, *(void *)v24, *(void *)&v24[8]);
      free(v22);
      SSFileLog();
    }

    goto LABEL_27;
  }
  id v16 = a3;
  unsigned int v17 = SSError();
  uint64_t v15 = 0;
LABEL_29:
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_10016EC3C(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v5 = a3;
    objc_opt_class();
    id v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    objc_opt_class();
    BOOL v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    BOOL v8 = xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 32), "3");
    if (v6)
    {
      BOOL v9 = v8;
      uint64_t v10 = +[SSLogConfig sharedDaemonConfig];
      int v11 = (void *)v10;
      if (v7)
      {
        if (!v10)
        {
          int v11 = +[SSLogConfig sharedConfig];
        }
        unsigned int v12 = [v11 shouldLog];
        if ([v11 shouldLogToDisk]) {
          int v13 = v12 | 2;
        }
        else {
          int v13 = v12;
        }
        int v14 = [v11 OSLogObject];
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
          v13 &= 2u;
        }
        if (v13)
        {
          *(_DWORD *)int v33 = 138543874;
          *(void *)&void v33[4] = objc_opt_class();
          *(_WORD *)&v33[12] = 2114;
          *(void *)&v33[14] = v6;
          *(_WORD *)&v33[22] = 2112;
          uint64_t v34 = v7;
          id v15 = *(id *)&v33[4];
          LODWORD(v32) = 32;
          id v16 = (void *)_os_log_send_and_compose_impl();

          if (!v16)
          {
LABEL_15:

            int v11 = +[ISBiometricStore sharedInstance];
            unsigned int v17 = [v11 fetchContextFromCacheWithToken:v6 evict:v9];
            unsigned int v18 = [v17 challenge];
            int v19 = [v17 signature];
            int v20 = objc_msgSend(v11, "publicKeyDataForAccountIdentifier:purpose:error:", v7, objc_msgSend(v17, "isExtendedAction"), 0);
            id v21 = v20;
            if (v20)
            {
              id v22 = v20;
              [v22 bytes];
              [v22 length];
              uint64_t v23 = (void *)ISCopyEncodedBase64();
            }
            else
            {
              uint64_t v23 = 0;
            }

            goto LABEL_41;
          }
          int v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, v33, v32, *(_OWORD *)v33, *(void *)&v33[16], v34);
          free(v16);
          SSFileLog();
        }

        goto LABEL_15;
      }
      if (!v10)
      {
        int v11 = +[SSLogConfig sharedConfig];
      }
      unsigned int v29 = [v11 shouldLog];
      if ([v11 shouldLogToDisk]) {
        int v30 = v29 | 2;
      }
      else {
        int v30 = v29;
      }
      int v28 = [v11 OSLogObject];
      if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        v30 &= 2u;
      }
      if (!v30) {
        goto LABEL_37;
      }
    }
    else
    {
      int v11 = +[SSLogConfig sharedDaemonConfig];
      if (!v11)
      {
        int v11 = +[SSLogConfig sharedConfig];
      }
      unsigned int v26 = [v11 shouldLog];
      if ([v11 shouldLogToDisk]) {
        int v27 = v26 | 2;
      }
      else {
        int v27 = v26;
      }
      int v28 = [v11 OSLogObject];
      if (!os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        v27 &= 2u;
      }
      if (!v27) {
        goto LABEL_37;
      }
    }
    *(_DWORD *)int v33 = 138543362;
    *(void *)&void v33[4] = objc_opt_class();
    id v31 = *(id *)&v33[4];
    LODWORD(v32) = 12;
    unsigned int v18 = (void *)_os_log_send_and_compose_impl();

    if (!v18)
    {
      uint64_t v23 = 0;
      int v19 = 0;
      goto LABEL_41;
    }
    int v28 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, v33, v32, *(void *)v33, *(void *)&v33[8]);
    free(v18);
    SSFileLog();
LABEL_37:

    uint64_t v23 = 0;
    int v19 = 0;
    unsigned int v18 = 0;
LABEL_41:

    int v25 = 0;
    goto LABEL_42;
  }
  id v24 = a3;
  int v25 = SSError();
  uint64_t v23 = 0;
  int v19 = 0;
  unsigned int v18 = 0;
LABEL_42:
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_10016F254(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    unsigned int v4 = *(void **)(a1 + 32);
    id v5 = a3;
    BOOL v6 = xpc_dictionary_get_BOOL(v4, "1");
    id v7 = objc_alloc_init((Class)SSBiometricAuthenticationContext);
    BOOL v8 = +[ACAccountStore ams_sharedAccountStore];
    BOOL v9 = objc_msgSend(v8, "ams_activeiTunesAccount");
    uint64_t v10 = objc_msgSend(v9, "ams_DSID");

    [v7 setAccountIdentifier:v10];
    [v7 setIsPayment:v6];
    [v7 setIsExtendedAction:v6 ^ 1];
    int v11 = objc_alloc_init(DaemonBiometricKeychain);
    id v16 = 0;
    unsigned int v12 = [(DaemonBiometricKeychain *)v11 copyAccessControlListForPrivateKeyWithBiometricAuthenticationContext:v7 error:&v16];
    id v13 = v16;
    if (v12)
    {
      id v14 = [(id)SecAccessControlGetConstraints() copy];
      CFRelease(v12);
    }
    else
    {
      id v14 = 0;
    }
  }
  else
  {
    id v15 = a3;
    SSError();
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    id v14 = 0;
  }
  SSXPCDictionarySetObject();
  SSXPCDictionarySetObject();
}

void sub_10016F3F0(id a1, BOOL a2, OS_xpc_object *a3)
{
  unsigned int v4 = a3;
  if (a2)
  {
    id v5 = objc_alloc_init((Class)SSBiometricAuthenticationContext);
    BOOL v6 = +[ACAccountStore ams_sharedAccountStore];
    id v7 = objc_msgSend(v6, "ams_activeiTunesAccount");
    BOOL v8 = objc_msgSend(v7, "ams_DSID");

    [v5 setAccountIdentifier:v8];
    [v5 setIsPayment:1];
    BOOL v9 = objc_alloc_init(DaemonBiometricKeychain);
    id v13 = 0;
    uint64_t v10 = [(DaemonBiometricKeychain *)v9 copyAccessControlListForPrivateKeyWithBiometricAuthenticationContext:v5 error:&v13];
    id v11 = v13;
    if (v10)
    {
      unsigned int v12 = +[AMSBiometrics ACLVersionForAccessControl:v10];
      CFRelease(v10);
    }
    else
    {
      unsigned int v12 = 0;
    }
    SSXPCDictionarySetObject();
    SSXPCDictionarySetObject();
  }
  else
  {
    SSError();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
  }
}

void sub_10016F5C8(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    unsigned int v4 = *(objc_class **)(a1 + 32);
    id v5 = a3;
    id v6 = objc_alloc_init(v4);
    id v7 = [v6 identityMap];
    id v8 = [v7 count];

    id v11 = 0;
  }
  else
  {
    id v9 = a3;
    SSError();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    id v8 = 0;
  }
  uint64_t v10 = +[NSNumber numberWithUnsignedInteger:v8];
  SSXPCDictionarySetObject();

  SSXPCDictionarySetObject();
}

void sub_10016F768(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v4 = a3;
    objc_opt_class();
    id v5 = (void *)SSXPCDictionaryCopyObjectWithClass();
    if (v5)
    {
      id v6 = objc_alloc_init(DaemonBiometricStore);
      unint64_t v7 = [(DaemonBiometricStore *)v6 keyCountForAccountIdentifier:v5];

LABEL_17:
      id v9 = 0;
      goto LABEL_18;
    }
    uint64_t v10 = +[SSLogConfig sharedDaemonConfig];
    if (!v10)
    {
      uint64_t v10 = +[SSLogConfig sharedConfig];
    }
    unsigned int v11 = [v10 shouldLog];
    if ([v10 shouldLogToDisk]) {
      int v12 = v11 | 2;
    }
    else {
      int v12 = v11;
    }
    id v13 = [v10 OSLogObject];
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      v12 &= 2u;
    }
    if (v12)
    {
      LODWORD(v17) = 138543362;
      *(void *)((char *)&v17 + 4) = objc_opt_class();
      id v14 = *(id *)((char *)&v17 + 4);
      LODWORD(v16) = 12;
      id v15 = (void *)_os_log_send_and_compose_impl();

      if (!v15)
      {
LABEL_16:

        unint64_t v7 = 0;
        goto LABEL_17;
      }
      id v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v17, v16, v17);
      free(v15);
      SSFileLog();
    }

    goto LABEL_16;
  }
  id v8 = a3;
  id v9 = SSError();
  unint64_t v7 = 0;
LABEL_18:
  xpc_dictionary_set_uint64(a3, "0", v7);
  SSXPCDictionarySetObject();
}

void sub_10016FA2C(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) == 0)
  {
    id v32 = a3;
    id v31 = SSError();
    int64_t v12 = 5;
    goto LABEL_43;
  }
  id v4 = *(objc_class **)(a1 + 32);
  id v5 = a3;
  id v6 = objc_alloc_init(v4);
  id v7 = [v6 biometricState];
  uint64_t v8 = 5;
  BOOL v9 = v7 == 0;
  if (!v7) {
    uint64_t v8 = 2;
  }
  if (v7 == (id)1)
  {
    BOOL v9 = 0;
    uint64_t v8 = 0;
  }
  BOOL v10 = v7 != (id)2 && v7 == (id)1;
  BOOL v11 = v7 != (id)2 && v9;
  if (v7 == (id)2) {
    int64_t v12 = 1;
  }
  else {
    int64_t v12 = v8;
  }
  id v13 = +[SSLogConfig sharedDaemonConfig];
  if (!v13)
  {
    id v13 = +[SSLogConfig sharedConfig];
  }
  unsigned int v14 = [v13 shouldLog];
  if ([v13 shouldLogToDisk]) {
    int v15 = v14 | 2;
  }
  else {
    int v15 = v14;
  }
  uint64_t v16 = [v13 OSLogObject];
  if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
    v15 &= 2u;
  }
  if (!v15) {
    goto LABEL_25;
  }
  id v17 = v6;
  unsigned int v18 = objc_opt_class();
  BOOL v35 = v10;
  BOOL v19 = v11;
  id v20 = v18;
  id v21 = +[NSNumber numberWithInteger:v12];
  int v36 = 138543618;
  uint64_t v37 = v18;
  id v6 = v17;
  __int16 v38 = 2114;
  __int16 v39 = v21;
  LODWORD(v34) = 22;
  int v33 = &v36;
  id v22 = (void *)_os_log_send_and_compose_impl();

  BOOL v10 = v35;
  BOOL v11 = v19;

  if (v22)
  {
    uint64_t v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, &v36, v34);
    free(v22);
    int v33 = (int *)v16;
    SSFileLog();
LABEL_25:
  }
  if (!v10 && !v11 || ([v6 canPerformBiometricOptIn] & 1) != 0) {
    goto LABEL_41;
  }
  uint64_t v23 = +[SSLogConfig sharedDaemonConfig];
  if (!v23)
  {
    uint64_t v23 = +[SSLogConfig sharedConfig];
  }
  unsigned int v24 = objc_msgSend(v23, "shouldLog", v33);
  if ([v23 shouldLogToDisk]) {
    int v25 = v24 | 2;
  }
  else {
    int v25 = v24;
  }
  unsigned int v26 = [v23 OSLogObject];
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
    int v27 = v25;
  }
  else {
    int v27 = v25 & 2;
  }
  if (!v27) {
    goto LABEL_39;
  }
  int v28 = objc_opt_class();
  int v36 = 138543362;
  uint64_t v37 = v28;
  id v29 = v28;
  LODWORD(v34) = 12;
  int v30 = (void *)_os_log_send_and_compose_impl();

  if (v30)
  {
    unsigned int v26 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v30, 4, &v36, v34);
    free(v30);
    SSFileLog();
LABEL_39:
  }
  int64_t v12 = 5;
LABEL_41:

  id v31 = 0;
LABEL_43:
  xpc_dictionary_set_int64(a3, "0", v12);
  SSXPCDictionarySetObject();
}

void sub_10016FEBC(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    id v4 = *(objc_class **)(a1 + 40);
    id v5 = a3;
    id v6 = objc_alloc_init(v4);
    objc_opt_class();
    id v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    unsigned __int8 v8 = [v6 isIdentityMapValidForAccountIdentifier:v7];

    id v10 = 0;
  }
  else
  {
    id v9 = a3;
    SSError();
    id v10 = (id)objc_claimAutoreleasedReturnValue();
    unsigned __int8 v8 = 0;
  }
  xpc_dictionary_set_BOOL(a3, "0", v8);
  SSXPCDictionarySetObject();
}

void sub_100170088(uint64_t a1, BOOL a2, void *a3)
{
  if (a2)
  {
    id v6 = a3;
    objc_opt_class();
    id v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    [*(id *)(a1 + 48) _resetAccount:v7 withConnection:*(void *)(a1 + 40)];

    id v9 = 0;
  }
  else
  {
    id v8 = a3;
    SSError();
    id v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  xpc_dictionary_set_BOOL(a3, "0", a2);
  SSXPCDictionarySetObject();
}

void sub_100170228(uint64_t a1, BOOL a2, void *a3)
{
  if (a2)
  {
    id v6 = a3;
    id v7 = +[SSAccountStore defaultStore];
    id v8 = [v7 activeAccount];

    id v9 = *(void **)(a1 + 40);
    id v10 = [v8 uniqueIdentifier];
    [v9 _resetAccount:v10 withConnection:*(void *)(a1 + 32)];

    id v12 = 0;
  }
  else
  {
    id v11 = a3;
    SSError();
    id v12 = (id)objc_claimAutoreleasedReturnValue();
  }
  xpc_dictionary_set_BOOL(a3, "0", a2);
  SSXPCDictionarySetObject();
}

void sub_1001703E0(uint64_t a1, BOOL a2, void *a3)
{
  if (a2)
  {
    id v6 = a3;
    objc_opt_class();
    id v7 = (void *)SSXPCDictionaryCopyObjectWithClass();
    id v8 = objc_alloc_init(*(Class *)(a1 + 40));
    id v9 = [v8 identityMap];
    [v8 saveIdentityMap:v9 forAccountIdentifier:v7];

    id v11 = 0;
  }
  else
  {
    id v10 = a3;
    SSError();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
  }
  xpc_dictionary_set_BOOL(a3, "0", a2);
  SSXPCDictionarySetObject();
}

void sub_100170508(id a1, BOOL a2, OS_xpc_object *a3)
{
  unsigned int v3 = a3;
  SSError();
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  xpc_dictionary_set_BOOL(v3, "0", 0);
  SSXPCDictionarySetObject();
}

void sub_100170694(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  uint64_t v36 = 0;
  uint64_t v37 = &v36;
  uint64_t v38 = 0x2020000000;
  char v39 = 0;
  uint64_t v30 = 0;
  id v31 = &v30;
  uint64_t v32 = 0x3032000000;
  int v33 = sub_100170BB8;
  uint64_t v34 = sub_100170BC8;
  id v35 = 0;
  if (a2)
  {
    id v6 = objc_alloc_init(*(Class *)(a1 + 48));
    id v7 = (void *)SSXPCConnectionCopyClientIdentifier();
    if (xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 40), "1"))
    {
      id v8 = +[SSLogConfig sharedDaemonConfig];
      if (!v8)
      {
        id v8 = +[SSLogConfig sharedConfig];
      }
      unsigned int v9 = [v8 shouldLog];
      unsigned int v10 = [v8 shouldLogToDisk];
      id v11 = [v8 OSLogObject];
      id v12 = v11;
      if (v10) {
        v9 |= 2u;
      }
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        v9 &= 2u;
      }
      if (v9)
      {
        id v13 = objc_opt_class();
        int v40 = 138543618;
        int v41 = v13;
        __int16 v42 = 2114;
        __int16 v43 = v7;
        id v14 = v13;
        LODWORD(v28) = 22;
        int v27 = &v40;
        int v15 = (void *)_os_log_send_and_compose_impl();

        if (!v15)
        {
LABEL_13:

          uint64_t v16 = objc_alloc_init(DaemonBiometricOptInOperation);
          if ([v7 isEqualToString:@"com.apple.purplebuddy"]) {
            [(DaemonBiometricOptInOperation *)v16 setRequiresStoreAuthentication:0];
          }
          v29[0] = _NSConcreteStackBlock;
          v29[1] = 3221225472;
          v29[2] = sub_100170BD0;
          v29[3] = &unk_1003A8258;
          v29[4] = &v36;
          void v29[5] = &v30;
          -[DaemonBiometricOptInOperation setResultBlock:](v16, "setResultBlock:", v29, v27);
          id v17 = +[StoreServicesRequestQueue sharedInstance];
          [v17 addOperation:v16];

          [(DaemonBiometricOptInOperation *)v16 waitUntilFinished];
          goto LABEL_28;
        }
        id v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v40, v28);
        free(v15);
        int v27 = (int *)v12;
        SSFileLog();
      }

      goto LABEL_13;
    }
    BOOL v19 = +[SSLogConfig sharedDaemonConfig];
    if (!v19)
    {
      BOOL v19 = +[SSLogConfig sharedConfig];
    }
    unsigned int v20 = [v19 shouldLog];
    unsigned int v21 = [v19 shouldLogToDisk];
    id v22 = [v19 OSLogObject];
    uint64_t v23 = v22;
    if (v21) {
      v20 |= 2u;
    }
    if (!os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
      v20 &= 2u;
    }
    if (v20)
    {
      unsigned int v24 = objc_opt_class();
      int v40 = 138543618;
      int v41 = v24;
      __int16 v42 = 2114;
      __int16 v43 = v7;
      id v25 = v24;
      LODWORD(v28) = 22;
      unsigned int v26 = (void *)_os_log_send_and_compose_impl();

      if (!v26)
      {
LABEL_27:

        [v6 setBiometricState:1];
        *((unsigned char *)v37 + 24) = 1;
LABEL_28:

        goto LABEL_29;
      }
      uint64_t v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v26, 4, &v40, v28);
      free(v26);
      SSFileLog();
    }

    goto LABEL_27;
  }
  uint64_t v18 = SSError();
  id v6 = (id)v31[5];
  v31[5] = v18;
LABEL_29:

  xpc_dictionary_set_BOOL(v5, "0", *((unsigned char *)v37 + 24));
  SSXPCDictionarySetObject();
  _Block_object_dispose(&v30, 8);

  _Block_object_dispose(&v36, 8);
}

void sub_100170B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100170BB8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100170BC8(uint64_t a1)
{
}

uint64_t sub_100170BD0(uint64_t a1, char a2, void *a3)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  id v4 = [a3 copy];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v6 = *(void *)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  return _objc_release_x1(v4, v6);
}

void sub_100170D08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100170D24(uint64_t a1, char a2, void *a3)
{
  id v4 = (id *)(a1 + 40);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  if (a2)
  {
    objc_opt_class();
    uint64_t v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    [(id)objc_opt_class() tokenUpdateDidFinishWithLogKey:v6];

    id v7 = 0;
  }
  else
  {
    id v7 = SSError();
  }
  SSXPCDictionarySetObject();
}

void sub_100170EF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100170F0C(uint64_t a1, char a2, void *a3)
{
  id v4 = (id *)(a1 + 40);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  if (a2)
  {
    objc_opt_class();
    uint64_t v6 = (void *)SSXPCDictionaryCopyObjectWithClass();
    unsigned __int8 v7 = [(id)objc_opt_class() tokenUpdateShouldStartWithLogKey:v6];

    id v8 = 0;
  }
  else
  {
    id v8 = SSError();
    unsigned __int8 v7 = 1;
  }
  xpc_dictionary_set_BOOL(v5, "0", v7);
  SSXPCDictionarySetObject();
}

void sub_1001710E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001710FC(uint64_t a1, char a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  if (a2)
  {
    id v6 = [(id)objc_opt_class() tokenUpdateState];
    unsigned __int8 v7 = 0;
  }
  else
  {
    unsigned __int8 v7 = SSError();
    id v6 = 0;
  }
  xpc_dictionary_set_int64(v5, "0", (int64_t)v6);
  SSXPCDictionarySetObject();
}

void sub_1001712C8(uint64_t a1)
{
  if ((SSXPCConnectionHasEntitlement() & 1) == 0 && (SSXPCConnectionHasEntitlement() & 1) == 0)
  {
    uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2)
    {
      uint64_t v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    id v5 = [v2 OSLogObject];
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      v4 &= 2u;
    }
    if (v4)
    {
      LODWORD(v10) = 138543362;
      *(void *)((char *)&v10 + 4) = objc_opt_class();
      id v6 = *(id *)((char *)&v10 + 4);
      LODWORD(v9) = 12;
      unsigned __int8 v7 = (void *)_os_log_send_and_compose_impl();

      if (!v7)
      {
LABEL_15:

        goto LABEL_16;
      }
      id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v10, v9, v10);
      free(v7);
      SSFileLog();
    }

    goto LABEL_15;
  }
LABEL_16:
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
}

void sub_10017193C(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.itunesstored.DaemonBiometricStore.updateToken", 0);
  uint64_t v2 = qword_100401F60;
  qword_100401F60 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_100171BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100171C14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100171C24(uint64_t a1)
{
}

void sub_100171C2C(uint64_t a1, void *a2)
{
  id v9 = a2;
  uint64_t v3 = [v9 objectForKey:*(void *)(a1 + 32)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    [v9 setObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) forKey:*(void *)(a1 + 32)];
  }
}

void sub_100171DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100171DE0(uint64_t a1, void *a2)
{
  id v9 = a2;
  uint64_t v3 = [v9 objectForKey:*(void *)(a1 + 32)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    [v9 removeObjectForKey:*(void *)(a1 + 32)];
  }
  else
  {
    dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    [v9 setObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) forKey:*(void *)(a1 + 32)];
  }
}

id sub_10017217C(uint64_t a1, void *a2)
{
  return [a2 removeObjectForKey:*(void *)(*(void *)(a1 + 32) + 24)];
}

void sub_100172250(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.itunesstored.DelayedGotoSemaphore", 0);
  uint64_t v2 = (void *)qword_100401F70;
  qword_100401F70 = (uint64_t)v1;

  id v3 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v4 = qword_100401F78;
  qword_100401F78 = (uint64_t)v3;

  _objc_release_x1(v3, v4);
}

uint64_t sub_1001722AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1001725C4(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 5) {
    return 0;
  }
  else {
    return 6 - a1;
  }
}

uint64_t sub_100172C40(uint64_t result)
{
  if (result)
  {
    dispatch_queue_t v1 = (void *)result;
    if ([(id)result isEqualToString:SSDownloadPhaseWaiting])
    {
      return 0;
    }
    else if ([v1 isEqualToString:SSDownloadPhaseCanceled])
    {
      return 1;
    }
    else if ([v1 isEqualToString:SSDownloadPhaseFailed])
    {
      return 2;
    }
    else if ([v1 isEqualToString:SSDownloadPhaseFinished])
    {
      return 3;
    }
    else if ([v1 isEqualToString:SSDownloadPhasePaused])
    {
      return 4;
    }
    else
    {
      return 5;
    }
  }
  return result;
}

void sub_100172D58(id a1)
{
  dispatch_queue_t v1 = objc_alloc_init(RestoreManager);
  uint64_t v2 = qword_100401F88;
  qword_100401F88 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

id sub_100172F3C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_restoreStateChangeHandler");
}

id sub_100172F44(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_queue_restoreStateChangeHandler");
}

uint64_t sub_100173074(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 8) != 0;
  return result;
}

BOOL sub_100173104(id a1, DownloadsTransaction *a2)
{
  uint64_t v2 = a2;
  id v3 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"is_restore" equalToValue:&__kCFBooleanTrue];
  v26[0] = v3;
  v25[0] = SSDownloadPhaseWaiting;
  v25[1] = SSDownloadPhaseDownloading;
  uint64_t v4 = +[NSArray arrayWithObjects:v25 count:2];
  id v5 = +[SSSQLiteContainsPredicate containsPredicateWithProperty:@"IFNULL(download_state.phase, \"SSDownloadPhaseWaiting\")" values:v4];
  v26[1] = v5;
  dispatch_semaphore_t v6 = +[NSArray arrayWithObjects:v26 count:2];
  uint64_t v7 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v6];

  id v8 = [(DownloadsSession *)v2 database];
  id v9 = +[DownloadEntity queryWithDatabase:v8 predicate:v7];

  id v10 = [v9 copyEntityIdentifiers];
  if (![v10 count])
  {
    unsigned __int8 v18 = 0;
    goto LABEL_15;
  }
  id v11 = +[SSLogConfig sharedDaemonConfig];
  if (!v11)
  {
    id v11 = +[SSLogConfig sharedConfig];
  }
  unsigned int v12 = [v11 shouldLog];
  if ([v11 shouldLogToDisk]) {
    int v13 = v12 | 2;
  }
  else {
    int v13 = v12;
  }
  uint64_t v14 = [v11 OSLogObject];
  if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    v13 &= 2u;
  }
  if (!v13) {
    goto LABEL_12;
  }
  id v15 = [v10 count];
  uint64_t v16 = [v10 array];
  [v16 componentsJoinedByString:@", "];
  int v21 = 134218242;
  id v22 = v15;
  __int16 v23 = 2114;
  id v24 = (id)objc_claimAutoreleasedReturnValue();
  LODWORD(v20) = 22;
  id v17 = (void *)_os_log_send_and_compose_impl();

  if (v17)
  {
    uint64_t v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, &v21, v20);
    free(v17);
    SSFileLog();
LABEL_12:
  }
  unsigned __int8 v18 = [(DownloadsTransaction *)v2 restartDownloadsWithIdentifiers:v10];
LABEL_15:

  return v18;
}

void sub_10017350C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(NSObject **)(v7 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001735D8;
  block[3] = &unk_1003A4298;
  id v12 = v6;
  uint64_t v13 = v7;
  id v14 = v5;
  id v9 = v5;
  id v10 = v6;
  dispatch_async(v8, block);
}

void sub_1001735D8(void *a1)
{
  if (a1[4])
  {
    uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2)
    {
      uint64_t v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    id v5 = [v2 OSLogObject];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      int v6 = v4;
    }
    else {
      int v6 = v4 & 2;
    }
    if (v6)
    {
      uint64_t v7 = a1[4];
      int v12 = 138543362;
      uint64_t v13 = v7;
      LODWORD(v11) = 12;
      id v8 = (void *)_os_log_send_and_compose_impl();

      if (!v8)
      {
LABEL_14:

        return;
      }
      id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v12, v11);
      free(v8);
      SSFileLog();
    }

    goto LABEL_14;
  }
  uint64_t v10 = a1[5];
  id v9 = (void *)a1[6];
  if (!*(void *)(v10 + 8))
  {
    if (!v9) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (!v9)
  {
LABEL_17:
    +[RestoreManager _applyRestoreCellularAccess];
    uint64_t v10 = a1[5];
    id v9 = (void *)a1[6];
  }
LABEL_18:
  objc_storeStrong((id *)(v10 + 8), v9);
}

id sub_100173B9C(uint64_t a1)
{
  uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    uint64_t v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    int v6 = v4;
  }
  else {
    int v6 = v4 & 2;
  }
  if (!v6) {
    goto LABEL_12;
  }
  v10[0] = 0;
  LODWORD(v9) = 2;
  uint64_t v7 = (void *)_os_log_send_and_compose_impl();

  if (v7)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, v10, v9);
    free(v7);
    SSFileLog();
LABEL_12:
  }
  return objc_msgSend(*(id *)(a1 + 32), "_queue_fetchRestoreCellularAccess");
}

intptr_t sub_100174CF4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 setSuccess:a2];
  [*(id *)(a1 + 32) setError:v6];

  uint64_t v7 = *(NSObject **)(a1 + 40);

  return dispatch_semaphore_signal(v7);
}

__CFString *sub_100174DB0()
{
  return @"SKErrorDomain";
}

uint64_t sub_100174DD0()
{
  return objc_opt_class();
}

uint64_t sub_100174DDC()
{
  return objc_opt_class();
}

uint64_t sub_100174DE8()
{
  return objc_opt_class();
}

uint64_t sub_100174DF4()
{
  return objc_opt_class();
}

uint64_t sub_100174E00()
{
  return objc_opt_class();
}

uint64_t sub_100174E0C()
{
  return objc_opt_class();
}

uint64_t sub_100174E18()
{
  return objc_opt_class();
}

uint64_t sub_100174E24()
{
  return objc_opt_class();
}

uint64_t sub_100174E30()
{
  return objc_opt_class();
}

uint64_t sub_100174E3C()
{
  return objc_opt_class();
}

void sub_10017552C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100175554(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100175564(uint64_t a1)
{
}

void sub_10017556C(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
  id v5 = obj;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1001765D8(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[LSApplicationProxy applicationProxyForIdentifier:v1];
  unsigned int v3 = [v2 shortVersionString];
  if (!v3)
  {
    unsigned int v3 = [v2 bundleVersion];
    if (!v3)
    {
      int v4 = +[LSBundleProxy bundleProxyForIdentifier:v1];
      uint64_t v5 = [v4 bundleVersion];

      if (v5) {
        unsigned int v3 = (__CFString *)v5;
      }
      else {
        unsigned int v3 = @"1.0";
      }
    }
  }
  id v6 = +[SSDevice currentDevice];
  uint64_t v7 = [v6 userAgentWithBundleIdentifier:v1 version:v3];

  return v7;
}

void sub_100177274(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x1001771BCLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001777C8(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = v3;
  if (v3)
  {
    id v6 = v3;
    id v3 = [*(id *)(a1 + 32) addObject:v3];
    id v4 = v6;
  }

  return _objc_release_x1(v3, v4);
}

void sub_100178CDC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v4 = [*(id *)(a1 + 32) _newSoftwareLibraryItemWithApplicationRecord:v5];
  if (v4) {
    [*(id *)(a1 + 40) addObject:v4];
  }
}

id sub_100179958(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = [a2 componentsSeparatedByString:@"$$"];
  uint64_t v6 = (uint64_t)[v5 count];
  if (v6 < 2)
  {
    id v10 = v4;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = v6 - 1;
    do
    {
      id v9 = [v5 objectAtIndex:v7];
      id v10 = [v4 objectForKey:v9];
      if (!v10)
      {
        id v10 = +[NSMutableDictionary dictionary];
        [v4 setObject:v10 forKey:v9];
      }
      ++v7;
      id v4 = v10;
    }
    while (v8 != v7);
  }
  unsigned int v11 = objc_msgSend(a3, "isEqual:", +[NSNull null](NSNull, "null"));
  id v12 = [v5 lastObject];
  if (v11)
  {
    return [v10 removeObjectForKey:v12];
  }
  else
  {
    return [v10 setObject:a3 forKey:v12];
  }
}

void sub_10017C238(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    uint64_t v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  id v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    v8 &= 2u;
  }
  if (!v8) {
    goto LABEL_11;
  }
  *(_DWORD *)uint64_t v13 = 138543874;
  *(void *)&void v13[4] = objc_opt_class();
  *(_WORD *)&v13[12] = 2112;
  *(void *)&v13[14] = v4;
  *(_WORD *)&v13[22] = 2112;
  id v14 = v5;
  id v10 = *(id *)&v13[4];
  LODWORD(v12) = 32;
  unsigned int v11 = (void *)_os_log_send_and_compose_impl();

  if (v11)
  {
    id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v13, v12, *(_OWORD *)v13, *(void *)&v13[16], v14);
    free(v11);
    SSFileLog();
LABEL_11:
  }
}

void sub_10017C3F0(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    uint64_t v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  id v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    v8 &= 2u;
  }
  if (!v8) {
    goto LABEL_11;
  }
  *(_DWORD *)uint64_t v13 = 138543874;
  *(void *)&void v13[4] = objc_opt_class();
  *(_WORD *)&v13[12] = 2112;
  *(void *)&v13[14] = v4;
  *(_WORD *)&v13[22] = 2112;
  id v14 = v5;
  id v10 = *(id *)&v13[4];
  LODWORD(v12) = 32;
  unsigned int v11 = (void *)_os_log_send_and_compose_impl();

  if (v11)
  {
    id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v13, v12, *(_OWORD *)v13, *(void *)&v13[16], v14);
    free(v11);
    SSFileLog();
LABEL_11:
  }
}

void sub_10017C5A8(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    uint64_t v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  id v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    v8 &= 2u;
  }
  if (!v8) {
    goto LABEL_11;
  }
  *(_DWORD *)uint64_t v13 = 138543874;
  *(void *)&void v13[4] = objc_opt_class();
  *(_WORD *)&v13[12] = 2112;
  *(void *)&v13[14] = v4;
  *(_WORD *)&v13[22] = 2112;
  id v14 = v5;
  id v10 = *(id *)&v13[4];
  LODWORD(v12) = 32;
  unsigned int v11 = (void *)_os_log_send_and_compose_impl();

  if (v11)
  {
    id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v13, v12, *(_OWORD *)v13, *(void *)&v13[16], v14);
    free(v11);
    SSFileLog();
LABEL_11:
  }
}

void sub_10017CF14(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    uint64_t v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  id v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    v8 &= 2u;
  }
  if (!v8) {
    goto LABEL_11;
  }
  *(_DWORD *)uint64_t v13 = 138543874;
  *(void *)&void v13[4] = objc_opt_class();
  *(_WORD *)&v13[12] = 2112;
  *(void *)&v13[14] = v4;
  *(_WORD *)&v13[22] = 2112;
  id v14 = v5;
  id v10 = *(id *)&v13[4];
  LODWORD(v12) = 32;
  unsigned int v11 = (void *)_os_log_send_and_compose_impl();

  if (v11)
  {
    id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v13, v12, *(_OWORD *)v13, *(void *)&v13[16], v14);
    free(v11);
    SSFileLog();
LABEL_11:
  }
}

void sub_10017D4EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  uint64_t v4 = +[SSLogConfig sharedDaemonConfig];
  id v5 = (void *)v4;
  if (v3)
  {
    if (!v4)
    {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    int v8 = [v5 OSLogObject];
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      v7 &= 2u;
    }
    if (!v7) {
      goto LABEL_22;
    }
    *(_DWORD *)id v14 = 138543618;
    *(void *)&void v14[4] = objc_opt_class();
    *(_WORD *)&unsigned char v14[12] = 2112;
    *(void *)&v14[14] = v3;
    id v9 = *(id *)&v14[4];
    LODWORD(v13) = 22;
  }
  else
  {
    if (!v4)
    {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v10 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v11 = v10 | 2;
    }
    else {
      int v11 = v10;
    }
    int v8 = [v5 OSLogObject];
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      v11 &= 2u;
    }
    if (!v11) {
      goto LABEL_22;
    }
    *(_DWORD *)id v14 = 138543362;
    *(void *)&void v14[4] = objc_opt_class();
    id v9 = *(id *)&v14[4];
    LODWORD(v13) = 12;
  }
  uint64_t v12 = (void *)_os_log_send_and_compose_impl();

  if (v12)
  {
    int v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, v14, v13, *(_OWORD *)v14);
    free(v12);
    SSFileLog();
LABEL_22:
  }
}

intptr_t sub_10017DE18(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t sub_100181ADC(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t DaemonPBFusePreferencesReadFrom(void *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LODWORD(v6) = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v6) = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 & 0x7FFF8) == 8)
    {
      uint64_t v12 = objc_alloc_init(DaemonPBFuseItemPreference);
      [a1 addPreferences:v12];
      if (!PBReaderPlaceMark() || (DaemonPBFuseItemPreferenceReadFrom((uint64_t)v12, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1001829F0()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401F90 = (uint64_t)result;
  return result;
}

void sub_100182B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100182B50(uint64_t a1, uint64_t a2)
{
}

void sub_100182B60(uint64_t a1)
{
}

intptr_t sub_100182B6C(uint64_t a1, void *a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = a2;
  id v3 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v3);
}

uint64_t sub_100182C44()
{
  if (SSXPCConnectionHasEntitlement()) {
    return 1;
  }

  return SSXPCConnectionHasEntitlement();
}

void sub_100182EDC(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableDictionary);
  objc_opt_class();
  uint64_t v3 = SSXPCDictionaryCopyCFObjectWithClass();
  if (v3)
  {
    char v4 = (void *)v3;
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    if (value)
    {
      xpc_object_t v6 = value;
      if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_array)
      {
        unint64_t v7 = *(void **)(*(void *)(a1 + 40) + 16);
        v8[0] = _NSConcreteStackBlock;
        v8[1] = 3221225472;
        void v8[2] = sub_100182FF8;
        v8[3] = &unk_1003A8530;
        void v8[4] = v6;
        void v8[5] = v4;
        v8[6] = v2;
        [v7 readUsingSessionBlock:v8];
      }
    }
  }
  SSXPCDictionarySetCFObject();
}

BOOL sub_100182FF8(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_100183074;
  applier[3] = &unk_1003A8508;
  void applier[4] = a2;
  long long v5 = *(_OWORD *)(a1 + 40);
  return xpc_array_apply(v2, applier);
}

uint64_t sub_100183074(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_string)
  {
    char v4 = (void *)SSXPCCreateCFObjectFromXPCObject();
    id v5 = [*(id *)(a1 + 32) copyDataForDomain:*(void *)(a1 + 40) key:v4];
    if (v5)
    {
      xpc_object_t v6 = v5;
      [*(id *)(a1 + 48) setObject:v5 forKey:v4];
    }
  }
  return 1;
}

id sub_1001831B0(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_release(*(xpc_object_t *)(a1 + 32));
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v2 = +[Daemon daemon];

  return [v2 releaseKeepAliveAssertion:@"com.apple.itunesstored.KeyValueStore"];
}

id sub_1001832D0(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, xpc_object_t))(v3 + 16))(v3, reply);
  }
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
  xpc_release(*(xpc_object_t *)(a1 + 32));
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v4 = +[Daemon daemon];

  return [v4 releaseKeepAliveAssertion:@"com.apple.itunesstored.KeyValueStore"];
}

void sub_1001833CC(uint64_t a1)
{
  if (sub_100182C44())
  {
    objc_opt_class();
    id v2 = (id)SSXPCDictionaryCopyCFObjectWithClass();
    [*(id *)(*(void *)(a1 + 48) + 16) removeAccountFromDomain:v2];
  }
}

void sub_1001834C8(uint64_t a1, void *a2)
{
  uint64_t v7 = 0;
  char v8 = &v7;
  uint64_t v9 = 0x2020000000;
  char v10 = 0;
  if (sub_100182C44())
  {
    id v4 = dispatch_semaphore_create(0);
    id v5 = *(void **)(*(void *)(a1 + 40) + 16);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_1001835DC;
    v6[3] = &unk_1003A8580;
    void v6[4] = v4;
    void v6[5] = &v7;
    [v5 removeAllValuesWithCompletionBlock:v6];
    dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
    dispatch_release(v4);
  }
  xpc_dictionary_set_BOOL(a2, "0", *((unsigned char *)v8 + 24));
  _Block_object_dispose(&v7, 8);
}

void sub_1001835C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1001835DC(uint64_t a1, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100183660(uint64_t a1, void *a2)
{
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  char v11 = 0;
  if (sub_100182C44())
  {
    objc_opt_class();
    id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
    if (v4)
    {
      id v5 = dispatch_semaphore_create(0);
      xpc_object_t v6 = *(void **)(*(void *)(a1 + 48) + 16);
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      void v7[2] = sub_1001837AC;
      v7[3] = &unk_1003A8580;
      void v7[4] = v5;
      void v7[5] = &v8;
      [v6 removeAllValuesForDomain:v4 completionBlock:v7];
      dispatch_semaphore_wait(v5, 0xFFFFFFFFFFFFFFFFLL);
      dispatch_release(v5);
    }
  }
  xpc_dictionary_set_BOOL(a2, "0", *((unsigned char *)v9 + 24));
  _Block_object_dispose(&v8, 8);
}

void sub_10018378C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1001837AC(uint64_t a1, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100183830(uint64_t a1, void *a2)
{
  uint64_t v19 = 0;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x2020000000;
  char v22 = 0;
  if (sub_100182C44())
  {
    objc_opt_class();
    id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
    if (v4)
    {
      xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "2");
      xpc_object_t v6 = value;
      if (value)
      {
        if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_dictionary)
        {
          uint64_t v7 = *(void **)(*(void *)(a1 + 48) + 16);
          v18[0] = _NSConcreteStackBlock;
          v18[1] = 3221225472;
          v18[2] = sub_100183B18;
          v18[3] = &unk_1003A85D0;
          v18[5] = v4;
          v18[6] = &v19;
          void v18[4] = v6;
          [v7 modifyUsingTransactionBlock:v18];
          if (*((unsigned char *)v20 + 24))
          {
            if (xpc_array_get_count(v6) >= 2
              && [v4 isEqualToString:kSSLockdownDomainITunesStoreDaemon])
            {
              id v8 = +[SSLogConfig sharedDaemonConfig];
              if (!v8) {
                id v8 = +[SSLogConfig sharedConfig];
              }
              unsigned int v9 = [v8 shouldLog];
              unsigned int v10 = [v8 shouldLogToDisk];
              char v11 = [v8 OSLogObject];
              if (v10) {
                v9 |= 2u;
              }
              if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
                v9 &= 2u;
              }
              if (v9)
              {
                uint64_t v12 = objc_opt_class();
                int v23 = 138412290;
                uint64_t v24 = v12;
                LODWORD(v17) = 12;
                uint64_t v16 = &v23;
                uint64_t v13 = _os_log_send_and_compose_impl();
                if (v13)
                {
                  id v14 = (void *)v13;
                  id v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v23, v17);
                  free(v14);
                  uint64_t v16 = (int *)v15;
                  SSFileLog();
                }
              }
              objc_msgSend(+[SSAccountStore defaultStore](SSAccountStore, "defaultStore", v16), "accounts");
            }
          }
        }
      }
    }
  }
  xpc_dictionary_set_BOOL(a2, "0", *((unsigned char *)v20 + 24));
  _Block_object_dispose(&v19, 8);
}

void sub_100183AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100183B18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_100183BA8;
  applier[3] = &unk_1003A85A8;
  void applier[4] = a2;
  long long v6 = *(_OWORD *)(a1 + 40);
  xpc_dictionary_apply(v3, applier);
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
}

uint64_t sub_100183BA8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [objc_alloc((Class)NSString) initWithUTF8String:a2];
  xpc_type_t type = xpc_get_type(a3);
  if (type == (xpc_type_t)&_xpc_type_null)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) setData:0 forDomain:*(void *)(a1 + 40) key:v5];
  }
  else if (type == (xpc_type_t)&_xpc_type_data)
  {
    uint64_t v7 = (void *)SSXPCCreateCFObjectFromXPCObject();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) setData:v7 forDomain:*(void *)(a1 + 40) key:v5];
  }
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
}

id sub_100183E80(uint64_t a1)
{
  return [(id)qword_100401FA8 setObject:*(void *)(a1 + 40) forKeyedSubscript:*(void *)(a1 + 32)];
}

void sub_10018422C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100184244(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend((id)qword_100401FA8, "objectForKeyedSubscript:", objc_msgSend(*(id *)(a1 + 32), "bundleIdentifier")), "timeIntervalSinceNow");
  if (v3 <= 0.0)
  {
    id v4 = (void *)qword_100401FA8;
    id v5 = [*(id *)(a1 + 32) bundleIdentifier];
    return [v4 setObject:0 forKeyedSubscript:v5];
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  return result;
}

void sub_1001852E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"wake_up_on_finish" equalToLongLong:1];
  id v5 = [v3 database];

  long long v6 = +[PersistentDownloadManagerEntity queryWithDatabase:v5 predicate:v4];

  unsigned int v9 = @"client_id";
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100185448;
  v7[3] = &unk_1003A3988;
  id v8 = *(id *)(a1 + 32);
  [v6 enumeratePersistentIDsAndProperties:&v9 count:1 usingBlock:v7];
}

void sub_100185448(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:a2];
    [*(id *)(a1 + 32) setObject:v5 forKey:*a3];
  }
}

void sub_1001854D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  id v5 = +[LSApplicationProxy applicationProxyForIdentifier:a2];
  if (!v5) {
    [*(id *)(a1 + 32) addObject:v6];
  }
}

uint64_t sub_10018554C(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    while (2)
    {
      id v8 = 0;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        if (!objc_msgSend(v3, "deletePersistentDownloadManagerWithID:", objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * (void)v8), "longLongValue", (void)v11)))
        {
          uint64_t v9 = 0;
          goto LABEL_11;
        }
        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  uint64_t v9 = 1;
LABEL_11:

  return v9;
}

uint64_t sub_100185858(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = +[NSDate dateWithTimeIntervalSinceNow:-900.0];
  [v3 timeIntervalSince1970];
  double v5 = v4;

  id v6 = +[NSNumber numberWithDouble:v5];
  uint64_t v7 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"timestamp" value:v6 comparisonType:4];

  uint64_t v8 = +[SSSQLiteComparisonPredicate predicateWithProperty:@"kind" equalToValue:SSDownloadKindSoftwareApplication];
  +[SSSQLiteComparisonPredicate predicateWithProperty:@"is_purchase" equalToValue:&__kCFBooleanFalse];
  uint64_t v32 = (void *)v8;
  int v33 = (void *)v7;
  v45[0] = v7;
  id v31 = v45[1] = v8;
  v45[2] = v31;
  uint64_t v9 = +[NSArray arrayWithObjects:v45 count:3];
  unsigned int v10 = +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:v9];

  uint64_t v34 = v2;
  long long v11 = [v2 database];
  long long v12 = +[DownloadEntity queryWithDatabase:v11 predicate:v10];

  uint64_t v30 = v12;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id obj = [v12 copyEntityIdentifiers];
  id v13 = [obj countByEnumeratingWithState:&v36 objects:v44 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v37;
    do
    {
      for (uint64_t i = 0; i != v14; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v37 != v15) {
          objc_enumerationMutation(obj);
        }
        uint64_t v17 = *(void **)(*((void *)&v36 + 1) + 8 * i);
        unsigned __int8 v18 = +[SSLogConfig sharedDaemonConfig];
        if (!v18)
        {
          unsigned __int8 v18 = +[SSLogConfig sharedConfig];
        }
        unsigned int v19 = [v18 shouldLog];
        if ([v18 shouldLogToDisk]) {
          int v20 = v19 | 2;
        }
        else {
          int v20 = v19;
        }
        uint64_t v21 = [v18 OSLogObject];
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO)) {
          int v22 = v20;
        }
        else {
          int v22 = v20 & 2;
        }
        if (v22)
        {
          int v23 = objc_opt_class();
          id v24 = v23;
          id v25 = [v17 longLongValue];
          int v40 = 138412546;
          int v41 = v23;
          __int16 v42 = 2048;
          id v43 = v25;
          LODWORD(v29) = 22;
          uint64_t v28 = &v40;
          unsigned int v26 = (void *)_os_log_send_and_compose_impl();

          if (!v26) {
            goto LABEL_18;
          }
          uint64_t v21 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v26, 4, &v40, v29);
          free(v26);
          uint64_t v28 = (int *)v21;
          SSFileLog();
        }

LABEL_18:
      }
      id v14 = [obj countByEnumeratingWithState:&v36 objects:v44 count:16];
    }
    while (v14);
  }

  [v30 deleteAllEntities];
  return 1;
}

void sub_100186384(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  double v4 = +[DownloadEntity queryWithDatabase:v3 predicate:0];

  id v13 = @"download_state.phase";
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1001864C8;
  v8[3] = &unk_1003A46F0;
  id v5 = *(id *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void **)(a1 + 48);
  id v9 = v5;
  uint64_t v10 = v6;
  id v11 = v7;
  id v12 = *(id *)(a1 + 56);
  [v4 enumeratePersistentIDsAndProperties:&v13 count:1 usingBlock:v8];
}

void sub_1001864C8(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, BOOL *a5)
{
  id v8 = *a3;
  if (v8)
  {
    id v9 = +[NSNumber numberWithLongLong:a2];
    if (([v8 isEqualToString:SSDownloadPhaseCanceled] & 1) != 0
      || [v8 isEqualToString:SSDownloadPhaseFinished])
    {
      uint64_t v10 = +[NSNumber numberWithLongLong:a2];
      if (![*(id *)(a1 + 32) containsObject:v10])
      {
LABEL_54:

        goto LABEL_55;
      }
      id v11 = +[SSLogConfig sharedDaemonConfig];
      if (!v11)
      {
        id v11 = +[SSLogConfig sharedConfig];
      }
      unsigned int v12 = [v11 shouldLog];
      if ([v11 shouldLogToDisk]) {
        int v13 = v12 | 2;
      }
      else {
        int v13 = v12;
      }
      id v14 = [v11 OSLogObject];
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
        v13 &= 2u;
      }
      if (v13)
      {
        int v41 = 138412802;
        id v42 = (id)objc_opt_class();
        __int16 v43 = 2048;
        uint64_t v44 = a2;
        __int16 v45 = 2112;
        id v46 = v8;
        id v15 = v42;
        LODWORD(v37) = 32;
        long long v36 = &v41;
        uint64_t v16 = (void *)_os_log_send_and_compose_impl();

        if (!v16)
        {
LABEL_16:

          goto LABEL_54;
        }
        id v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v41, v37);
        free(v16);
        long long v36 = (int *)v14;
        SSFileLog();
      }

      goto LABEL_16;
    }
    if (![v8 isEqualToString:SSDownloadPhaseFailed])
    {
      if (![*(id *)(a1 + 32) containsObject:v9])
      {
LABEL_55:

        goto LABEL_56;
      }
      [*(id *)(a1 + 32) removeObject:v9];
      uint64_t v10 = +[SSLogConfig sharedDaemonConfig];
      if (!v10)
      {
        uint64_t v10 = +[SSLogConfig sharedConfig];
      }
      unsigned int v26 = [v10 shouldLog];
      if ([v10 shouldLogToDisk]) {
        int v27 = v26 | 2;
      }
      else {
        int v27 = v26;
      }
      id v11 = [v10 OSLogObject];
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
        v27 &= 2u;
      }
      if (v27)
      {
        int v41 = 138412802;
        id v42 = (id)objc_opt_class();
        __int16 v43 = 2048;
        uint64_t v44 = a2;
        __int16 v45 = 2112;
        id v46 = v8;
        id v28 = v42;
        LODWORD(v37) = 32;
        long long v36 = &v41;
        uint64_t v29 = (void *)_os_log_send_and_compose_impl();

        if (!v29) {
          goto LABEL_54;
        }
        id v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v29, 4, &v41, v37);
        free(v29);
        long long v36 = (int *)v11;
        SSFileLog();
      }
      goto LABEL_16;
    }
    uint64_t v17 = *(void **)(a1 + 48);
    unsigned __int8 v18 = [v9 stringValue];
    uint64_t v10 = [v17 stringByAppendingPathComponent:v18];

    unsigned int v19 = [*(id *)(a1 + 56) attributesOfItemAtPath:v10 error:0];
    if (!v19)
    {
LABEL_53:

      goto LABEL_54;
    }
    id v39 = v19;
    int v40 = [v19 objectForKey:NSFileModificationDate];
    [v40 timeIntervalSinceNow];
    if (v20 >= -1814400.0)
    {
      [*(id *)(a1 + 32) removeObject:v9];
      uint64_t v21 = +[SSLogConfig sharedDaemonConfig];
      if (!v21)
      {
        uint64_t v21 = +[SSLogConfig sharedConfig];
      }
      unsigned int v30 = [v21 shouldLog];
      if ([v21 shouldLogToDisk]) {
        v30 |= 2u;
      }
      id v24 = [v21 OSLogObject];
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO)) {
        int v31 = v30;
      }
      else {
        int v31 = v30 & 2;
      }
      if (v31) {
        goto LABEL_49;
      }
    }
    else
    {
      uint64_t v21 = +[SSLogConfig sharedDaemonConfig];
      if (!v21)
      {
        uint64_t v21 = +[SSLogConfig sharedConfig];
      }
      unsigned int v22 = [v21 shouldLog];
      if ([v21 shouldLogToDisk]) {
        int v23 = v22 | 2;
      }
      else {
        int v23 = v22;
      }
      id v24 = [v21 OSLogObject];
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO)) {
        int v25 = v23;
      }
      else {
        int v25 = v23 & 2;
      }
      if (v25)
      {
LABEL_49:
        uint64_t v32 = objc_opt_class();
        id v38 = v32;
        [v40 timeIntervalSinceNow];
        int v41 = 138413058;
        id v42 = v32;
        __int16 v43 = 2048;
        uint64_t v44 = a2;
        __int16 v45 = 2112;
        id v46 = v8;
        __int16 v47 = 2048;
        double v48 = -v33;
        LODWORD(v37) = 42;
        long long v36 = &v41;
        uint64_t v34 = (void *)_os_log_send_and_compose_impl();

        if (v34)
        {
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v34, 4, &v41, v37);
          id v35 = (int *)objc_claimAutoreleasedReturnValue();
          free(v34);
          long long v36 = v35;
          SSFileLog();
        }
        goto LABEL_52;
      }
    }

LABEL_52:
    unsigned int v19 = v39;
    goto LABEL_53;
  }
LABEL_56:
  *a5 = objc_msgSend(*(id *)(a1 + 32), "count", v36) == 0;
}

void sub_1001876AC(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3)
    {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    uint64_t v6 = [v3 OSLogObject];
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      v5 &= 2u;
    }
    if (v5)
    {
      *(_DWORD *)uint64_t v10 = 138412546;
      *(void *)&void v10[4] = objc_opt_class();
      *(_WORD *)&v10[12] = 2112;
      *(void *)&v10[14] = v2;
      id v7 = *(id *)&v10[4];
      LODWORD(v9) = 22;
      id v8 = (void *)_os_log_send_and_compose_impl();

      if (!v8)
      {
LABEL_13:

        goto LABEL_14;
      }
      uint64_t v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v10, v9, *(_OWORD *)v10, *(void *)&v10[16]);
      free(v8);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
}

void sub_100187848(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3)
    {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    uint64_t v6 = [v3 OSLogObject];
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      v5 &= 2u;
    }
    if (v5)
    {
      *(_DWORD *)uint64_t v10 = 138412546;
      *(void *)&void v10[4] = objc_opt_class();
      *(_WORD *)&v10[12] = 2112;
      *(void *)&v10[14] = v2;
      id v7 = *(id *)&v10[4];
      LODWORD(v9) = 22;
      id v8 = (void *)_os_log_send_and_compose_impl();

      if (!v8)
      {
LABEL_13:

        goto LABEL_14;
      }
      uint64_t v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v10, v9, *(_OWORD *)v10, *(void *)&v10[16]);
      free(v8);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
}

void sub_100187DC8(uint64_t a1, void *a2)
{
  id v8 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v8;
    int v5 = [v4 applicationType];
    if ([v5 isEqualToString:@"System"])
    {
      unsigned int v6 = [v4 isDeletable];

      if (v6)
      {
        id v7 = [v4 bundleIdentifier];

        if (v7) {
          [*(id *)(a1 + 32) addObject:v4];
        }
      }
    }
    else
    {
    }
  }
}

id sub_1001881E0()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401FB0 = (uint64_t)result;
  return result;
}

void sub_100188280(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) valueForSessionProperty:SSErrorSessionPropertyFailureType];
  if (v2
    && (id v3 = v2,
        long long v26 = 0u,
        long long v27 = 0u,
        long long v24 = 0u,
        long long v25 = 0u,
        id v4 = *(void **)(*(void *)(a1 + 40) + 8),
        (id v5 = [v4 countByEnumeratingWithState:&v24 objects:v34 count:16]) != 0))
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v25;
LABEL_4:
    uint64_t v8 = 0;
    while (1)
    {
      if (*(void *)v25 != v7) {
        objc_enumerationMutation(v4);
      }
      uint64_t v9 = *(void **)(*((void *)&v24 + 1) + 8 * v8);
      if (objc_msgSend(objc_msgSend(v9, "failureTypes"), "containsObject:", v3)) {
        break;
      }
      if (v6 == (id)++v8)
      {
        id v6 = [v4 countByEnumeratingWithState:&v24 objects:v34 count:16];
        if (v6) {
          goto LABEL_4;
        }
        goto LABEL_25;
      }
    }
    if (!v9) {
      goto LABEL_25;
    }
    id v10 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(*(id *)(a1 + 32), "sessionIdentifier"));
    if (!*(void *)(*(void *)(a1 + 40) + 16)) {
      *(void *)(*(void *)(a1 + 40) + 16) = objc_alloc_init((Class)NSMutableDictionary);
    }
    id v11 = [*(id *)(a1 + 48) copy];
    [*(id *)(*(void *)(a1 + 40) + 16) setObject:v11 forKey:v10];

    id v12 = +[SSLogConfig sharedDaemonConfig];
    if (!v12) {
      id v12 = +[SSLogConfig sharedConfig];
    }
    unsigned int v13 = [v12 shouldLog];
    if ([v12 shouldLogToDisk]) {
      int v14 = v13 | 2;
    }
    else {
      int v14 = v13;
    }
    if (!os_log_type_enabled((os_log_t)[v12 OSLogObject], OS_LOG_TYPE_INFO)) {
      v14 &= 2u;
    }
    if (v14)
    {
      uint64_t v15 = objc_opt_class();
      int v28 = 138412802;
      uint64_t v29 = v15;
      __int16 v30 = 2112;
      id v31 = v10;
      __int16 v32 = 2112;
      double v33 = v9;
      LODWORD(v22) = 32;
      uint64_t v21 = &v28;
      uint64_t v16 = _os_log_send_and_compose_impl();
      if (v16)
      {
        uint64_t v17 = (void *)v16;
        unsigned __int8 v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v28, v22);
        free(v17);
        uint64_t v21 = (int *)v18;
        SSFileLog();
      }
    }
    objc_msgSend(v9, "addSession:", *(void *)(a1 + 32), v21);
    unsigned int v19 = (void *)SSXPCCreateMessageDictionary();
    SSXPCDictionarySetCFObject();
    [*(id *)(a1 + 32) sessionProperties];
    SSXPCDictionarySetCFObject();
    objc_msgSend(objc_msgSend(v9, "outputConnection"), "sendMessage:", v19);
    xpc_release(v19);
  }
  else
  {
LABEL_25:
    double v20 = *(NSObject **)(*(void *)(a1 + 40) + 24);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001885DC;
    block[3] = &unk_1003A40D0;
    void block[4] = *(void *)(a1 + 48);
    dispatch_async(v20, block);
  }
}

void sub_1001885DC(uint64_t a1)
{
  id v2 = objc_alloc_init(ErrorHandlerResponse);
  [(ErrorHandlerResponse *)v2 setResponseType:0];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100188798(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  objc_opt_class();
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t result = (uint64_t)[*(id *)(*(void *)(a1 + 40) + 8) indexOfObjectIdenticalTo:v2];
    if (result != 0x7FFFFFFFFFFFFFFFLL)
    {
      id v4 = [v2 popAllSessions];
      id v5 = +[SSLogConfig sharedDaemonConfig];
      if (!v5) {
        id v5 = +[SSLogConfig sharedConfig];
      }
      unsigned int v6 = [v5 shouldLog];
      if ([v5 shouldLogToDisk]) {
        int v7 = v6 | 2;
      }
      else {
        int v7 = v6;
      }
      if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_INFO)) {
        v7 &= 2u;
      }
      if (v7)
      {
        int v27 = 138412802;
        uint64_t v28 = objc_opt_class();
        __int16 v29 = 2112;
        id v30 = v2;
        __int16 v31 = 2048;
        id v32 = [v4 count];
        LODWORD(v20) = 32;
        unsigned int v19 = &v27;
        uint64_t v8 = _os_log_send_and_compose_impl();
        if (v8)
        {
          uint64_t v9 = (void *)v8;
          id v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v27, v20);
          free(v9);
          unsigned int v19 = (int *)v10;
          SSFileLog();
        }
      }
      id v11 = objc_alloc_init((Class)NSMutableArray);
      long long v22 = 0u;
      long long v23 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v12 = [v4 countByEnumeratingWithState:&v22 objects:v26 count:16];
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = *(void *)v23;
        do
        {
          for (uint64_t i = 0; i != v13; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v23 != v14) {
              objc_enumerationMutation(v4);
            }
            id v16 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(*(id *)(*((void *)&v22 + 1) + 8 * i), "sessionIdentifier"));
            id v17 = [*(id *)(*(void *)(a1 + 40) + 16) objectForKey:v16];
            if (v17)
            {
              [v11 addObject:v17];
              [*(id *)(*(void *)(a1 + 40) + 16) removeObjectForKey:v16];
            }
          }
          id v13 = [v4 countByEnumeratingWithState:&v22 objects:v26 count:16];
        }
        while (v13);
      }
      if (objc_msgSend(v11, "count", v19))
      {
        unsigned __int8 v18 = *(NSObject **)(*(void *)(a1 + 40) + 24);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100188AD8;
        block[3] = &unk_1003A33A8;
        void block[4] = v11;
        dispatch_async(v18, block);
      }

      return (uint64_t)[*(id *)(*(void *)(a1 + 40) + 8) removeObjectIdenticalTo:v2];
    }
  }
  return result;
}

void sub_100188AD8(uint64_t a1)
{
  id v2 = objc_alloc_init(ErrorHandlerResponse);
  [(ErrorHandlerResponse *)v2 setResponseType:0];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      int v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8 * (void)v7) + 16))();
        int v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

uint64_t sub_100188D70(uint64_t a1, void *a2)
{
  if (SSXPCConnectionHasEntitlement())
  {
    if ([*(id *)(a1 + 40) _clientForConnection:*(void *)(a1 + 32)])
    {
      id v4 = +[SSLogConfig sharedDaemonConfig];
      if (!v4) {
        id v4 = +[SSLogConfig sharedConfig];
      }
      unsigned int v5 = [v4 shouldLog];
      if ([v4 shouldLogToDisk]) {
        int v6 = v5 | 2;
      }
      else {
        int v6 = v5;
      }
      BOOL v7 = 1;
      if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_INFO)) {
        v6 &= 2u;
      }
      if (v6)
      {
        int v55 = 138412290;
        uint64_t v56 = objc_opt_class();
        LODWORD(v50) = 12;
        long long v8 = (void *)_os_log_send_and_compose_impl();
        if (v8)
        {
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v55, v50);
          free(v8);
          SSFileLog();
        }
      }
      goto LABEL_39;
    }
    xpc_object_t value = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 48), "1");
    objc_opt_class();
    uint64_t v15 = (void *)SSXPCDictionaryCopyCFObjectWithClass();
    if (value && xpc_get_type(value) == (xpc_type_t)&_xpc_type_endpoint)
    {
      if ([v15 count])
      {
        id v22 = [objc_alloc((Class)NSSet) initWithArray:v15];
        long long v51 = 0u;
        long long v52 = 0u;
        long long v53 = 0u;
        long long v54 = 0u;
        long long v23 = *(void **)(*(void *)(a1 + 40) + 8);
        id v24 = [v23 countByEnumeratingWithState:&v51 objects:v61 count:16];
        if (v24)
        {
          id v25 = v24;
          uint64_t v26 = *(void *)v52;
LABEL_43:
          uint64_t v27 = 0;
          while (1)
          {
            if (*(void *)v52 != v26) {
              objc_enumerationMutation(v23);
            }
            uint64_t v28 = *(void **)(*((void *)&v51 + 1) + 8 * v27);
            if (objc_msgSend(objc_msgSend(v28, "failureTypes"), "intersectsSet:", v22)) {
              break;
            }
            if (v25 == (id)++v27)
            {
              id v25 = [v23 countByEnumeratingWithState:&v51 objects:v61 count:16];
              if (v25) {
                goto LABEL_43;
              }
              goto LABEL_62;
            }
          }
          id v29 = v28;
          if (!v29) {
            goto LABEL_62;
          }
          id v30 = v29;
          id v31 = +[SSLogConfig sharedDaemonConfig];
          if (!v31) {
            id v31 = +[SSLogConfig sharedConfig];
          }
          unsigned int v32 = [v31 shouldLog];
          if ([v31 shouldLogToDisk]) {
            int v33 = v32 | 2;
          }
          else {
            int v33 = v32;
          }
          if (!os_log_type_enabled((os_log_t)[v31 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
            v33 &= 2u;
          }
          if (v33)
          {
            uint64_t v34 = objc_opt_class();
            int v55 = 138412290;
            uint64_t v56 = v34;
            LODWORD(v50) = 12;
            uint64_t v35 = _os_log_send_and_compose_impl();
            if (v35)
            {
              long long v36 = (void *)v35;
              +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v35, 4, &v55, v50);
              free(v36);
              SSFileLog();
            }
          }
          SSError();
          BOOL v7 = 0;
        }
        else
        {
LABEL_62:
          uint64_t v37 = [(XPCClient *)[ErrorHandlerClient alloc] initWithInputConnection:*(void *)(a1 + 32)];
          [(ErrorHandlerClient *)v37 setFailureTypes:+[NSSet setWithArray:v15]];
          xpc_connection_t v38 = xpc_connection_create_from_endpoint(value);
          [(XPCClient *)v37 setOutputConnectionWithConnection:v38];
          xpc_release(v38);
          id v39 = *(void **)(*(void *)(a1 + 40) + 8);
          if (!v39)
          {
            *(void *)(*(void *)(a1 + 40) + 8) = objc_alloc_init((Class)NSMutableArray);
            id v39 = *(void **)(*(void *)(a1 + 40) + 8);
          }
          [v39 addObject:v37];
          id v40 = +[SSLogConfig sharedDaemonConfig];
          if (!v40) {
            id v40 = +[SSLogConfig sharedConfig];
          }
          unsigned int v41 = [v40 shouldLog];
          if ([v40 shouldLogToDisk]) {
            int v42 = v41 | 2;
          }
          else {
            int v42 = v41;
          }
          if (!os_log_type_enabled((os_log_t)[v40 OSLogObject], OS_LOG_TYPE_INFO)) {
            v42 &= 2u;
          }
          if (v42)
          {
            uint64_t v43 = objc_opt_class();
            int v55 = 138412802;
            uint64_t v56 = v43;
            __int16 v57 = 2112;
            int v58 = v37;
            __int16 v59 = 2112;
            unsigned int v60 = v15;
            LODWORD(v50) = 32;
            uint64_t v44 = _os_log_send_and_compose_impl();
            if (v44)
            {
              __int16 v45 = (void *)v44;
              +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v44, 4, &v55, v50);
              free(v45);
              SSFileLog();
            }
          }
          xpc_object_t v46 = xpc_dictionary_create(0, 0, 0);
          [(SSXPCConnection *)[(XPCClient *)v37 outputConnection] sendMessage:v46];
          xpc_release(v46);

          id v30 = 0;
          BOOL v7 = 1;
        }

        goto LABEL_38;
      }
      id v47 = +[SSLogConfig sharedDaemonConfig];
      if (!v47) {
        id v47 = +[SSLogConfig sharedConfig];
      }
      unsigned int v48 = [v47 shouldLog];
      if ([v47 shouldLogToDisk]) {
        int v49 = v48 | 2;
      }
      else {
        int v49 = v48;
      }
      if (!os_log_type_enabled((os_log_t)[v47 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
        v49 &= 2u;
      }
      if (!v49)
      {
LABEL_37:
        SSError();
        BOOL v7 = 0;
LABEL_38:

        goto LABEL_39;
      }
    }
    else
    {
      id v16 = +[SSLogConfig sharedDaemonConfig];
      if (!v16) {
        id v16 = +[SSLogConfig sharedConfig];
      }
      unsigned int v17 = [v16 shouldLog];
      if ([v16 shouldLogToDisk]) {
        int v18 = v17 | 2;
      }
      else {
        int v18 = v17;
      }
      if (!os_log_type_enabled((os_log_t)[v16 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
        v18 &= 2u;
      }
      if (!v18) {
        goto LABEL_37;
      }
    }
    int v55 = 138412290;
    uint64_t v56 = objc_opt_class();
    LODWORD(v50) = 12;
    uint64_t v19 = _os_log_send_and_compose_impl();
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v55, v50);
      free(v20);
      SSFileLog();
    }
    goto LABEL_37;
  }
  id v9 = +[SSLogConfig sharedDaemonConfig];
  if (!v9) {
    id v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  if (!os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v11 &= 2u;
  }
  if (v11)
  {
    int v55 = 138412290;
    uint64_t v56 = objc_opt_class();
    LODWORD(v50) = 12;
    uint64_t v12 = _os_log_send_and_compose_impl();
    if (v12)
    {
      id v13 = (void *)v12;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v55, v50);
      free(v13);
      SSFileLog();
    }
  }
  SSError();
  BOOL v7 = 0;
LABEL_39:
  xpc_dictionary_set_BOOL(a2, "1", v7);
  return SSXPCDictionarySetCFObject();
}

id sub_1001896DC(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_release(*(xpc_object_t *)(a1 + 32));
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v2 = +[Daemon daemon];

  return [v2 releaseKeepAliveAssertion:@"com.apple.itunesstored.ErrorHandlerManager"];
}

id sub_1001897FC(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
  xpc_release(*(xpc_object_t *)(a1 + 32));
  xpc_release(*(xpc_object_t *)(a1 + 40));
  id v3 = +[Daemon daemon];

  return [v3 releaseKeepAliveAssertion:@"com.apple.itunesstored.ErrorHandlerManager"];
}

void sub_1001898F4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 40)];
  if (v2)
  {
    id v3 = v2;
    int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 48), "1");
    [v3 popSessionWithIdentifier:int64];
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_INFO)) {
      v7 &= 2u;
    }
    if (v7)
    {
      int v20 = 138412802;
      uint64_t v21 = objc_opt_class();
      __int16 v22 = 2048;
      int64_t v23 = int64;
      __int16 v24 = 2112;
      id v25 = v3;
      LODWORD(v18) = 32;
      unsigned int v17 = &v20;
      uint64_t v8 = _os_log_send_and_compose_impl();
      if (v8)
      {
        id v9 = (void *)v8;
        unsigned int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v20, v18);
        free(v9);
        unsigned int v17 = (int *)v10;
        SSFileLog();
      }
    }
    int v11 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", int64, v17);
    id v12 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKey:v11];
    [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:v11];
    if (v12)
    {
      id v13 = objc_alloc_init(ErrorHandlerResponse);
      int64_t v14 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 48), "2");
      [(ErrorHandlerResponse *)v13 setResponseType:v14];
      if (v14 == 1)
      {
        id v15 = objc_msgSend(objc_alloc((Class)NSURL), "initWithXPCEncoding:", xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 48), "3"));
        [(ErrorHandlerResponse *)v13 setURL:v15];
      }
      id v16 = *(NSObject **)(*(void *)(a1 + 32) + 24);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100189BB0;
      block[3] = &unk_1003A4AE8;
      void block[4] = v13;
      void block[5] = v12;
      dispatch_async(v16, block);
    }
  }
}

uint64_t sub_100189BB0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100189CB4(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 144)) {
    *(void *)(*(void *)(a1 + 32) + 144) = objc_alloc_init((Class)NSMutableDictionary);
  }
  id v2 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", objc_msgSend(*(id *)(a1 + 40), "sessionIdentifier"));
  [*(id *)(*(void *)(a1 + 32) + 144) setObject:*(void *)(a1 + 40) forKey:v2];
}

void sub_100189E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100189E54(uint64_t a1, uint64_t a2)
{
}

void sub_100189E64(uint64_t a1)
{
}

id sub_100189E70(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 136);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = result;
  return result;
}

void sub_100189F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100189FAC(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 144) allValues];
  id v2 = *(void **)(*(void *)(a1 + 32) + 144);

  return [v2 removeAllObjects];
}

void sub_10018A0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10018A108(void *a1)
{
  id v2 = [objc_alloc((Class)NSNumber) initWithLongLong:a1[6]];
  *(void *)(*(void *)(a1[5] + 8) + 40) = [*(id *)(a1[4] + 144) objectForKey:v2];
  [*(id *)(a1[4] + 144) removeObjectForKey:v2];
}

void *sub_10018A214(void *result)
{
  id v1 = *(void **)(result[4] + 136);
  if (v1 != (void *)result[5])
  {
    id v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 136) = result;
  }
  return result;
}

id sub_10018A454(void *a1)
{
  id v1 = a1;
  if (SSDownloadKindIsPodcastKind())
  {
    id v2 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", CPSharedResourcesDirectory(), @"Media", @"Podcasts", 0, v8);
LABEL_5:
    id v3 = v2;
    id v4 = +[NSString pathWithComponents:v2];

    goto LABEL_10;
  }
  if (SSDownloadKindIsEBookKind())
  {
    id v2 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", CPSharedResourcesDirectory(), @"Media", @"Books", @"Purchases", 0);
    goto LABEL_5;
  }
  if (([v1 isEqualToString:SSDownloadKindMusic] & 1) != 0
    || [v1 isEqualToString:SSDownloadKindMusicVideo])
  {
    uint64_t v5 = 250;
  }
  else
  {
    if (!SSDownloadKindIsVideosAppKind())
    {
      id v2 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", CPSharedResourcesDirectory(), @"Media", @"Purchases", 0, v8);
      goto LABEL_5;
    }
    uint64_t v5 = 500;
  }
  id v4 = +[ML3MusicLibrary pathForBaseLocationPath:v5];
LABEL_10:
  id v6 = objc_alloc_init((Class)NSFileManager);
  [v6 createDirectoryAtPath:v4 withIntermediateDirectories:1 attributes:0 error:0];

  return v4;
}

void sub_10018B39C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_10018B3CC(uint64_t a1, void *a2)
{
  id v4 = [a2 responseType];
  [*(id *)(a1 + 32) setErrorHandlerResponseType:v4];
  if (v4 == (id)2)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  }
  else if (v4 == (id)1)
  {
    id v5 = [a2 URL];
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6) {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      int v20 = 138412546;
      uint64_t v21 = objc_opt_class();
      __int16 v22 = 2112;
      id v23 = v5;
      LODWORD(v19) = 22;
      uint64_t v18 = &v20;
      uint64_t v9 = _os_log_send_and_compose_impl();
      if (v9)
      {
        unsigned int v10 = (void *)v9;
        int v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v20, v19);
        free(v10);
        uint64_t v18 = (int *)v11;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "setRedirectURL:", v5, v18);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v5 != 0;
    return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
  }
  id v12 = +[SSLogConfig sharedDaemonConfig];
  if (!v12) {
    id v12 = +[SSLogConfig sharedConfig];
  }
  unsigned int v13 = [v12 shouldLog];
  if ([v12 shouldLogToDisk]) {
    int v14 = v13 | 2;
  }
  else {
    int v14 = v13;
  }
  if (!os_log_type_enabled((os_log_t)[v12 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
    v14 &= 2u;
  }
  if (v14)
  {
    int v20 = 138412546;
    uint64_t v21 = objc_opt_class();
    __int16 v22 = 2048;
    id v23 = v4;
    LODWORD(v19) = 22;
    uint64_t v15 = _os_log_send_and_compose_impl();
    if (v15)
    {
      id v16 = (void *)v15;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v20, v19);
      free(v16);
      SSFileLog();
    }
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10018B82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10018B848(uint64_t a1, uint64_t a2)
{
}

void sub_10018B858(uint64_t a1)
{
}

void sub_10018B864(uint64_t a1, void *a2)
{
  id v5 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", @"kind", @"store_account_id", @"store_download_key", @"store_transaction_id", 0);
  id v4 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", *(void *)(*(void *)(a1 + 32) + 96), [a2 database]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [[Download alloc] initWithDatabaseEntity:v4 properties:v5];
}

void sub_10018BF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10018BFD8(void *a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [a2 updateDownloadEntityWithIdentifier:*(void *)(a1[4] + 96) withDownload:a1[5]];
  return *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24);
}

uint64_t sub_10018C584(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100401FC0;
  qword_100401FC0 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_10018C8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10018C8D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10018C8E4(uint64_t a1)
{
}

void sub_10018C8EC(uint64_t a1, void *a2)
{
  id v3 = [a2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_10018C93C(uint64_t a1, void *a2)
{
  id v3 = [a2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_10018C98C(void *a1)
{
  uint64_t v2 = objc_opt_new();
  id v3 = objc_opt_new();
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v4 = objc_msgSend(*(id *)(*(void *)(a1[5] + 8) + 40), "allKeys", 0);
  id v5 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v17 + 1) + 8 * i);
        unsigned int v10 = [*(id *)(*(void *)(a1[5] + 8) + 40) objectForKey:v9];
        id v11 = [v10 integerValue];

        id v12 = v2;
        if (v11 != (id)1)
        {
          if (v11 != (id)2) {
            continue;
          }
          id v12 = v3;
        }
        [v12 addObject:v9];
      }
      id v6 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v6);
  }

  uint64_t v13 = a1[4];
  uint64_t v14 = *(void *)(*(void *)(a1[6] + 8) + 40);
  uint64_t v15 = +[NSSet setWithSet:v3];
  id v16 = +[NSSet setWithSet:v2];
  (*(void (**)(uint64_t, uint64_t, void *, void *, void))(v13 + 16))(v13, v14, v15, v16, 0);
}

void sub_10018D88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10018D8A8(void *a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [a2 updateDownloadEntityWithIdentifier:*(void *)(a1[4] + 96) withDownload:a1[5]];
  return *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24);
}

void sub_10018DA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10018DA84(uint64_t a1, uint64_t a2)
{
}

void sub_10018DA94(uint64_t a1)
{
}

void sub_10018DAA0(uint64_t a1, void *a2)
{
  id v5 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", @"preferred_asset_flavor", @"store_account_id", @"store_item_id", @"store_redownload_parameters", 0);
  uint64_t v4 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", *(void *)(*(void *)(a1 + 32) + 96), [a2 database]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [[Download alloc] initWithDatabaseEntity:v4 properties:v5];
}

void sub_10018DFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10018E01C(void *a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [a2 updateDownloadEntityWithIdentifier:*(void *)(a1[4] + 96) withDownload:a1[5]];
  return *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24);
}

void sub_10018EA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10018EAA0(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v5 installType] == (id)7)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }
}

void sub_10018EC14(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v2 + 160))
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    if (!os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_ERROR)) {
      v5 &= 2u;
    }
    if (v5)
    {
      uint64_t v6 = objc_opt_class();
      id v7 = [*(id *)(a1 + 40) logUUID];
      int v41 = 138543618;
      uint64_t v42 = v6;
      __int16 v43 = 2114;
      id v44 = v7;
      LODWORD(v37) = 22;
      uint64_t v35 = &v41;
      uint64_t v8 = _os_log_send_and_compose_impl();
      if (v8)
      {
        uint64_t v9 = (void *)v8;
        unsigned int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v41, v37);
        free(v9);
        uint64_t v35 = (int *)v10;
        SSFileLog();
      }
    }
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v12 = SSError();
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 16))(v11, 0, v12);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  if (*(void *)(v2 + 40))
  {
    xpc_object_t v13 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v13, "0", 1100);
    id v14 = [*(id *)(a1 + 40) copyXPCEncoding];
    if (v14)
    {
      uint64_t v15 = v14;
      xpc_dictionary_set_value(v13, "1", v14);
      xpc_release(v15);
    }
    id v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16) {
      id v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = [v16 shouldLog];
    if ([v16 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    if (!os_log_type_enabled((os_log_t)[v16 OSLogObject], OS_LOG_TYPE_DEBUG)) {
      v18 &= 2u;
    }
    if (v18)
    {
      uint64_t v19 = objc_opt_class();
      id v20 = [*(id *)(a1 + 40) logUUID];
      int v41 = 138543618;
      uint64_t v42 = v19;
      __int16 v43 = 2114;
      id v44 = v20;
      LODWORD(v37) = 22;
      long long v36 = &v41;
      uint64_t v21 = _os_log_send_and_compose_impl();
      if (v21)
      {
        __int16 v22 = (void *)v21;
        id v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v41, v37);
        free(v22);
        long long v36 = (int *)v23;
        SSFileLog();
      }
    }
    long long v24 = *(_OWORD *)(a1 + 32);
    id v25 = *(void **)(*(void *)(a1 + 32) + 40);
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_10018F100;
    v38[3] = &unk_1003A8750;
    long long v39 = v24;
    uint64_t v40 = *(void *)(a1 + 48);
    objc_msgSend(v25, "sendMessage:withReply:", v13, v38, v36);
    xpc_release(v13);
  }
  else
  {
    id v26 = +[SSLogConfig sharedDaemonConfig];
    if (!v26) {
      id v26 = +[SSLogConfig sharedConfig];
    }
    unsigned int v27 = objc_msgSend(v26, "shouldLog", v35);
    if ([v26 shouldLogToDisk]) {
      int v28 = v27 | 2;
    }
    else {
      int v28 = v27;
    }
    if (!os_log_type_enabled((os_log_t)[v26 OSLogObject], OS_LOG_TYPE_ERROR)) {
      v28 &= 2u;
    }
    if (v28)
    {
      uint64_t v29 = objc_opt_class();
      id v30 = [*(id *)(a1 + 40) logUUID];
      int v41 = 138543618;
      uint64_t v42 = v29;
      __int16 v43 = 2114;
      id v44 = v30;
      LODWORD(v37) = 22;
      uint64_t v31 = _os_log_send_and_compose_impl();
      if (v31)
      {
        unsigned int v32 = (void *)v31;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v31, 4, &v41, v37);
        free(v32);
        SSFileLog();
      }
    }
    uint64_t v33 = *(void *)(a1 + 48);
    uint64_t v34 = SSError();
    (*(void (**)(uint64_t, void, uint64_t))(v33 + 16))(v33, 0, v34);
  }
}

void sub_10018F100(uint64_t a1, xpc_object_t object)
{
  if (object == &_xpc_error_connection_invalid || object == &_xpc_error_connection_interrupted)
  {
    id v4 = +[SSLogConfig sharedDaemonConfig];
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig];
    }
    unsigned int v5 = [v4 shouldLog];
    if ([v4 shouldLogToDisk]) {
      int v6 = v5 | 2;
    }
    else {
      int v6 = v5;
    }
    if (!os_log_type_enabled((os_log_t)[v4 OSLogObject], OS_LOG_TYPE_ERROR)) {
      v6 &= 2u;
    }
    if (v6)
    {
      uint64_t v7 = objc_opt_class();
      id v8 = [*(id *)(a1 + 40) logUUID];
      int v31 = 138543618;
      uint64_t v32 = v7;
      __int16 v33 = 2114;
      id v34 = v8;
      LODWORD(v30) = 22;
      uint64_t v9 = _os_log_send_and_compose_impl();
      if (v9)
      {
        unsigned int v10 = (void *)v9;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v31, v30);
        free(v10);
        SSFileLog();
      }
    }
    uint64_t v11 = *(void *)(a1 + 48);
    goto LABEL_30;
  }
  if (!object || xpc_get_type(object) != (xpc_type_t)&_xpc_type_dictionary)
  {
    id v13 = +[SSLogConfig sharedDaemonConfig];
    if (!v13) {
      id v13 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v13 shouldLog];
    if ([v13 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    if (!os_log_type_enabled((os_log_t)[v13 OSLogObject], OS_LOG_TYPE_ERROR)) {
      v15 &= 2u;
    }
    if (v15)
    {
      uint64_t v16 = objc_opt_class();
      id v17 = [*(id *)(a1 + 40) logUUID];
      int v31 = 138543618;
      uint64_t v32 = v16;
      __int16 v33 = 2114;
      id v34 = v17;
      LODWORD(v30) = 22;
      uint64_t v18 = _os_log_send_and_compose_impl();
      if (v18)
      {
        uint64_t v19 = (void *)v18;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v18, 4, &v31, v30);
        free(v19);
        SSFileLog();
      }
    }
    uint64_t v11 = *(void *)(a1 + 48);
LABEL_30:
    uint64_t v20 = SSError();
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 16))(v11, 0, v20);
    return;
  }
  id v21 = +[SSLogConfig sharedDaemonConfig];
  if (!v21) {
    id v21 = +[SSLogConfig sharedConfig];
  }
  unsigned int v22 = [v21 shouldLog];
  if ([v21 shouldLogToDisk]) {
    int v23 = v22 | 2;
  }
  else {
    int v23 = v22;
  }
  if (!os_log_type_enabled((os_log_t)[v21 OSLogObject], OS_LOG_TYPE_DEBUG)) {
    v23 &= 2u;
  }
  if (v23)
  {
    uint64_t v24 = objc_opt_class();
    id v25 = [*(id *)(a1 + 40) logUUID];
    int v31 = 138543618;
    uint64_t v32 = v24;
    __int16 v33 = 2114;
    id v34 = v25;
    LODWORD(v30) = 22;
    uint64_t v26 = _os_log_send_and_compose_impl();
    if (v26)
    {
      unsigned int v27 = (void *)v26;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v26, 4, &v31, v30);
      free(v27);
      SSFileLog();
    }
  }
  id v28 = objc_msgSend(objc_alloc((Class)SSAuthenticateResponse), "initWithXPCEncoding:", xpc_dictionary_get_value(object, "0"));
  uint64_t v29 = *(void *)(a1 + 48);
  if (v29) {
    (*(void (**)(uint64_t, id, void))(v29 + 16))(v29, v28, 0);
  }
}

id sub_10018F70C(id *a1)
{
  if (*((void *)a1[4] + 5) && [a1[5] count])
  {
    xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v2, "0", 1101);
    xpc_object_t v3 = xpc_array_create(0, 0);
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v4 = a1[5];
    id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v11;
      do
      {
        for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v11 != v7) {
            objc_enumerationMutation(v4);
          }
          [a1[6] setPurchase:*(void *)(*((void *)&v10 + 1) + 8 * i)];
          SSXPCArraySetCFObject();
        }
        id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v6);
    }
    xpc_dictionary_set_value(v2, "1", v3);
    xpc_release(v3);
    [*((id *)a1[4] + 5) sendMessage:v2];
    xpc_release(v2);
  }
  id result = [a1[5] count];
  if (result) {
    return [a1[4] postNotificationWithResponse:a1[6]];
  }
  return result;
}

void sub_10018F93C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 40))
  {
    xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_int64(v2, "0", 1101);
    xpc_object_t v3 = xpc_array_create(0, 0);
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v4 = *(void **)(a1 + 40);
    id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v11;
      do
      {
        for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v11 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v10 + 1) + 8 * i);
          SSXPCArraySetCFObject();
          [*(id *)(a1 + 32) postNotificationWithResponse:v9];
        }
        id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v6);
    }
    xpc_dictionary_set_value(v2, "1", v3);
    xpc_release(v3);
    [*(id *)(*(void *)(a1 + 32) + 40) sendMessage:v2];
    xpc_release(v2);
  }
}

uint64_t sub_100190058(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 160);
  return result;
}

void sub_1001901A8(id a1, SSSQLiteDatabase *a2)
{
}

uint64_t sub_100190250(uint64_t a1)
{
  xpc_object_t v3 = [[PromotedIAPDatabaseTransaction alloc] initWithDatabase:*(void *)(*(void *)(a1 + 32) + 8)];
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();

  return v4;
}

id sub_10019035C(uint64_t a1)
{
  return [*(id *)(a1 + 32) readUsingTransactionBlock:*(void *)(a1 + 40)];
}

uint64_t sub_100190400(uint64_t a1)
{
  xpc_object_t v3 = [[PromotedIAPDatabaseTransaction alloc] initWithDatabase:*(void *)(*(void *)(a1 + 32) + 8)];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

  return 1;
}

uint64_t sub_100190660(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100190678(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 database];
  +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"SELECT product_id, visibility FROM promoted_iaps_visibility_table WHERE product_id IN (%@) AND bundle_id = ?;",
  id v5 = *(void *)(a1 + 32));
  v18[0] = 0;
  v18[1] = v18;
  v18[2] = 0x3032000000;
  v18[3] = sub_100190884;
  void v18[4] = sub_100190894;
  id v19 = (id)objc_opt_new();
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10019089C;
  v13[3] = &unk_1003A5A38;
  id v14 = *(id *)(a1 + 40);
  id v15 = *(id *)(a1 + 48);
  id v6 = v4;
  id v16 = v6;
  id v17 = v18;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v13];
  uint64_t v7 = *(void **)(a1 + 56);
  if (v7)
  {
    id v8 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100190A88;
    block[3] = &unk_1003A59E8;
    id v11 = v7;
    long long v12 = v18;
    dispatch_async(v8, block);
  }
  _Block_object_dispose(v18, 8);

  return 1;
}

void sub_10019086C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100190884(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100190894(uint64_t a1)
{
}

id sub_10019089C(uint64_t a1, sqlite3_stmt *a2)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v17;
    int v8 = 1;
    do
    {
      uint64_t v9 = 0;
      int v10 = v8;
      do
      {
        if (*(void *)v17 != v7) {
          objc_enumerationMutation(v4);
        }
        id v11 = *(id *)(*((void *)&v16 + 1) + 8 * (void)v9);
        sqlite3_bind_text(a2, v10 + v9, (const char *)objc_msgSend(v11, "UTF8String", (void)v16), -1, 0);
        uint64_t v9 = (char *)v9 + 1;
      }
      while (v6 != v9);
      id v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
      int v8 = v10 + v9;
    }
    while (v6);
    int v12 = v10 + v9;
  }
  else
  {
    int v12 = 1;
  }

  sqlite3_bind_text(a2, v12, (const char *)[*(id *)(a1 + 40) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 48) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      id v14 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 0)];
      id v15 = +[NSNumber numberWithInt:sqlite3_column_int(a2, 1)];
      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setObject:v15 forKey:v14];

      id result = [*(id *)(a1 + 48) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

uint64_t sub_100190A88(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

uint64_t sub_100190BE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100190BF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  id v5 = +[NSString stringWithFormat:@"SELECT product_id, visibility FROM promoted_iaps_visibility_table WHERE bundle_id = ?"];;
  v17[0] = 0;
  v17[1] = v17;
  v17[2] = 0x3032000000;
  v17[3] = sub_100190884;
  v17[4] = sub_100190894;
  id v18 = (id)objc_opt_new();
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100190DE8;
  v13[3] = &unk_1003A59C0;
  id v14 = *(id *)(a1 + 32);
  id v6 = v4;
  id v15 = v6;
  long long v16 = v17;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v13];
  uint64_t v7 = *(void **)(a1 + 40);
  if (v7)
  {
    int v8 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100190ECC;
    block[3] = &unk_1003A59E8;
    id v11 = v7;
    int v12 = v17;
    dispatch_async(v8, block);
  }
  _Block_object_dispose(v17, 8);

  return 1;
}

void sub_100190DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100190DE8(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      id v5 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 0)];
      id v6 = +[NSNumber numberWithInt:sqlite3_column_int(a2, 1)];
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setObject:v6 forKey:v5];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

uint64_t sub_100190ECC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

uint64_t sub_100191054(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

BOOL sub_100191068(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  id v5 = +[NSString stringWithFormat:@"SELECT pid FROM promoted_iaps_visibility_table WHERE product_id = ? AND bundle_id = ?"];;
  uint64_t v42 = 0;
  __int16 v43 = &v42;
  uint64_t v44 = 0x3032000000;
  __int16 v45 = sub_100190884;
  xpc_object_t v46 = sub_100190894;
  id v47 = 0;
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472;
  v37[2] = sub_1001914B0;
  v37[3] = &unk_1003A5A38;
  id v38 = *(id *)(a1 + 32);
  id v39 = *(id *)(a1 + 40);
  id v6 = v4;
  id v40 = v6;
  int v41 = &v42;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v37];
  uint64_t v7 = v43[5];
  if (v7)
  {
    uint64_t v33 = 0;
    id v34 = &v33;
    uint64_t v35 = 0x2020000000;
    char v36 = 0;
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"INSERT OR REPLACE INTO promoted_iaps_visibility_table (product_id, bundle_id, visibility, pid) VALUES (?, ?, %li, %@);",
      *(void *)(a1 + 56),
    int v8 = v7);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_10019157C;
    v28[3] = &unk_1003A87E8;
    id v29 = *(id *)(a1 + 32);
    id v30 = *(id *)(a1 + 40);
    uint64_t v32 = &v33;
    id v31 = v6;
    [v31 prepareStatementForSQL:v8 cache:0 usingBlock:v28];

    uint64_t v9 = *(void **)(a1 + 48);
    if (v9)
    {
      int v10 = dispatch_get_global_queue(0, 0);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100191600;
      block[3] = &unk_1003A59E8;
      id v26 = v9;
      unsigned int v27 = &v33;
      dispatch_async(v10, block);
    }
    int v11 = *((unsigned __int8 *)v34 + 24);

    int v12 = v29;
  }
  else
  {
    uint64_t v33 = 0;
    id v34 = &v33;
    uint64_t v35 = 0x2020000000;
    char v36 = 0;
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"INSERT OR REPLACE INTO promoted_iaps_visibility_table (product_id, bundle_id, visibility) VALUES (?, ?, %li);",
    long long v13 = *(void *)(a1 + 56));
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    void v20[2] = sub_10019161C;
    v20[3] = &unk_1003A87E8;
    id v21 = *(id *)(a1 + 32);
    id v22 = *(id *)(a1 + 40);
    uint64_t v24 = &v33;
    id v23 = v6;
    [v23 prepareStatementForSQL:v13 cache:0 usingBlock:v20];

    id v14 = *(void **)(a1 + 48);
    if (v14)
    {
      id v15 = dispatch_get_global_queue(0, 0);
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_1001916A0;
      v17[3] = &unk_1003A59E8;
      id v18 = v14;
      long long v19 = &v33;
      dispatch_async(v15, v17);
    }
    int v11 = *((unsigned __int8 *)v34 + 24);

    int v12 = v21;
  }

  _Block_object_dispose(&v33, 8);
  _Block_object_dispose(&v42, 8);

  return v11 != 0;
}

void sub_100191480(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 224), 8);
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_1001914B0(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  sqlite3_bind_text(a2, 2, (const char *)[*(id *)(a1 + 40) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 48) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      uint64_t v5 = +[NSNumber numberWithInt:sqlite3_column_int(a2, 0)];
      uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v5;

      id result = [*(id *)(a1 + 48) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

id sub_10019157C(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  sqlite3_bind_text(a2, 2, (const char *)[*(id *)(a1 + 40) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 48) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_100191600(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24));
}

id sub_10019161C(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  sqlite3_bind_text(a2, 2, (const char *)[*(id *)(a1 + 40) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 48) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1001916A0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24));
}

uint64_t sub_1001917F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100191810(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  uint64_t v5 = +[NSString stringWithFormat:@"SELECT product_id, iap_order FROM promoted_iaps_order_table WHERE bundle_id = ? ORDER BY iap_order ASC"];;
  v17[0] = 0;
  v17[1] = v17;
  v17[2] = 0x3032000000;
  v17[3] = sub_100190884;
  void v17[4] = sub_100190894;
  id v18 = (id)objc_opt_new();
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100191A00;
  v13[3] = &unk_1003A59C0;
  id v14 = *(id *)(a1 + 32);
  id v6 = v4;
  id v15 = v6;
  long long v16 = v17;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v13];
  uint64_t v7 = *(void **)(a1 + 40);
  if (v7)
  {
    int v8 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100191AAC;
    block[3] = &unk_1003A59E8;
    id v11 = v7;
    int v12 = v17;
    dispatch_async(v8, block);
  }
  _Block_object_dispose(v17, 8);

  return 1;
}

void sub_1001919E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100191A00(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if (result)
  {
    do
    {
      uint64_t v5 = +[NSString stringWithUTF8String:sqlite3_column_text(a2, 0)];
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v5];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }
    while ((result & 1) != 0);
  }
  return result;
}

uint64_t sub_100191AAC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

uint64_t sub_100191C58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100191C6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  uint64_t v36 = 0;
  uint64_t v37 = &v36;
  uint64_t v38 = 0x2020000000;
  char v39 = 0;
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_1001920A8;
  v32[3] = &unk_1003A5970;
  id v33 = *(id *)(a1 + 32);
  uint64_t v35 = &v36;
  id v5 = v4;
  id v34 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM promoted_iaps_order_table WHERE bundle_id = ?;",
    0,
    v32);
  if (!*((unsigned char *)v37 + 24))
  {
    int v12 = *(void **)(a1 + 48);
    if (!v12)
    {
      uint64_t v11 = 0;
      goto LABEL_17;
    }
    long long v13 = dispatch_get_global_queue(0, 0);
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    void v30[2] = sub_100192108;
    v30[3] = &unk_1003A31C8;
    id v31 = v12;
    dispatch_async(v13, v30);

    uint64_t v11 = 0;
    id v6 = v31;
    goto LABEL_16;
  }
  if ([*(id *)(a1 + 40) count])
  {
    id v6 = objc_opt_new();
    for (unint64_t i = 0; (unint64_t)[*(id *)(a1 + 40) count] > i; ++i)
      [v6 appendFormat:@"(?, ?, %i), ", i];
    objc_msgSend(v6, "deleteCharactersInRange:", (char *)objc_msgSend(v6, "length") - 2, 2);
    uint64_t v26 = 0;
    unsigned int v27 = &v26;
    uint64_t v28 = 0x2020000000;
    char v29 = 0;
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"INSERT OR REPLACE INTO promoted_iaps_order_table (product_id, bundle_id, iap_order) VALUES %@;",
    int v8 = v6);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_10019211C;
    v21[3] = &unk_1003A87E8;
    id v22 = *(id *)(a1 + 40);
    id v23 = *(id *)(a1 + 32);
    id v25 = &v26;
    id v24 = v5;
    [v24 prepareStatementForSQL:v8 cache:0 usingBlock:v21];

    if (!*((unsigned char *)v27 + 24))
    {
      id v14 = *(void **)(a1 + 48);
      if (v14)
      {
        id v15 = dispatch_get_global_queue(0, 0);
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        void v19[2] = sub_100192288;
        v19[3] = &unk_1003A31C8;
        id v20 = v14;
        dispatch_async(v15, v19);
      }
      _Block_object_dispose(&v26, 8);
      uint64_t v11 = 0;
      goto LABEL_16;
    }

    _Block_object_dispose(&v26, 8);
  }
  uint64_t v9 = *(void **)(a1 + 48);
  if (v9)
  {
    int v10 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10019229C;
    block[3] = &unk_1003A31C8;
    id v18 = v9;
    dispatch_async(v10, block);

    uint64_t v11 = 1;
    id v6 = v18;
LABEL_16:

    goto LABEL_17;
  }
  uint64_t v11 = 1;
LABEL_17:

  _Block_object_dispose(&v36, 8);
  return v11;
}

void sub_100192074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 112), 8);
  _Unwind_Resume(a1);
}

id sub_1001920A8(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_100192108(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10019211C(uint64_t a1, sqlite3_stmt *a2)
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v14;
    int v8 = 1;
    do
    {
      for (unint64_t i = 0; i != v6; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v7) {
          objc_enumerationMutation(v4);
        }
        id v10 = *(id *)(*((void *)&v13 + 1) + 8 * i);
        sqlite3_bind_text(a2, v8, (const char *)objc_msgSend(v10, "UTF8String", (void)v13), -1, 0);
        int v11 = v8 + 2;
        sqlite3_bind_text(a2, v8 + 1, (const char *)[*(id *)(a1 + 40) UTF8String], -1, 0);
        v8 += 2;
      }
      id v6 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
      int v8 = v11;
    }
    while (v6);
  }

  id result = [*(id *)(a1 + 48) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_100192288(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10019229C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

unint64_t sub_10019236C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 database];
  uint64_t v28 = 0;
  uint64_t v29 = &v28;
  uint64_t v30 = 0x2020000000;
  char v31 = 0;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  void v24[2] = sub_100192688;
  void v24[3] = &unk_1003A5970;
  id v25 = *(id *)(a1 + 32);
  unsigned int v27 = &v28;
  id v5 = v4;
  id v26 = v5;
  objc_msgSend(v5, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM promoted_iaps_order_table WHERE bundle_id = ?;",
    0,
    v24);
  if (*((unsigned char *)v29 + 24))
  {
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1001926FC;
    v18[3] = &unk_1003A5970;
    id v19 = *(id *)(a1 + 32);
    id v21 = &v28;
    id v20 = v5;
    -[NSObject prepareStatementForSQL:cache:usingBlock:](v20, "prepareStatementForSQL:cache:usingBlock:", @"DELETE FROM promoted_iaps_visibility_table WHERE bundle_id = ?;",
      0,
      v18);
    id v6 = &v19;
    unint64_t v7 = *((unsigned char *)v29 + 24) != 0;
    int v8 = *(void **)(a1 + 40);
    if (*((unsigned char *)v29 + 24))
    {
      if (v8)
      {
        uint64_t v9 = dispatch_get_global_queue(0, 0);
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472;
        void v14[2] = sub_100192770;
        void v14[3] = &unk_1003A31C8;
        id v10 = &v15;
        id v15 = v8;
        int v11 = v14;
LABEL_9:
        dispatch_async(v9, v11);
      }
    }
    else if (v8)
    {
      uint64_t v9 = dispatch_get_global_queue(0, 0);
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_10019275C;
      v16[3] = &unk_1003A31C8;
      id v10 = &v17;
      id v17 = v8;
      int v11 = v16;
      goto LABEL_9;
    }
    int v12 = v20;
    goto LABEL_11;
  }
  unint64_t v7 = *(void *)(a1 + 40);
  if (v7)
  {
    int v12 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001926E8;
    block[3] = &unk_1003A31C8;
    id v6 = &v23;
    id v23 = (id)v7;
    dispatch_async(v12, block);
    unint64_t v7 = 0;
LABEL_11:
  }
  _Block_object_dispose(&v28, 8);

  return v7;
}

void sub_100192670(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

id sub_100192688(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_1001926E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001926FC(uint64_t a1, sqlite3_stmt *a2)
{
  sqlite3_bind_text(a2, 1, (const char *)[*(id *)(a1 + 32) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (_BYTE)result;
  return result;
}

uint64_t sub_10019275C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100192770(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10019283C(uint64_t a1)
{
  id v3 = objc_alloc_init((Class)NSFileManager);
  id v4 = [*(id *)(a1 + 32) stringByDeletingLastPathComponent];
  [v3 createDirectoryAtPath:v4 withIntermediateDirectories:1 attributes:0 error:0];
}

void sub_100192980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100192998(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = +[PromotedIAPDatabaseSchema createOrUpdateSchemaInDatabase:*(void *)(a1 + 32)];
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

id sub_100192B4C()
{
  id result = objc_alloc_init((Class)objc_opt_class());
  qword_100401FD8 = (uint64_t)result;
  return result;
}

id sub_100192BE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _addPurchases:*(void *)(a1 + 40) forClient:0];
}

id sub_100192C5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _beginPurchaseBatch:*(void *)(a1 + 40) forClient:0];
}

void sub_100192CD8(uint64_t a1)
{
  id v1 = +[SSLogConfig sharedDaemonConfig];
  if (!v1) {
    id v1 = +[SSLogConfig sharedConfig];
  }
  unsigned int v2 = [v1 shouldLog];
  if ([v1 shouldLogToDisk]) {
    int v3 = v2 | 2;
  }
  else {
    int v3 = v2;
  }
  if (os_log_type_enabled((os_log_t)[v1 OSLogObject], OS_LOG_TYPE_INFO)) {
    int v4 = v3;
  }
  else {
    int v4 = v3 & 2;
  }
  if (v4)
  {
    uint64_t v5 = objc_opt_class();
    id v6 = [*(id *)(a1 + 40) count];
    *(_DWORD *)uint64_t v30 = 138412546;
    *(void *)&void v30[4] = v5;
    *(_WORD *)&v30[12] = 2048;
    *(void *)&v30[14] = v6;
    LODWORD(v19) = 22;
    id v18 = (NSString *)v30;
    uint64_t v7 = _os_log_send_and_compose_impl();
    if (v7)
    {
      int v8 = (void *)v7;
      uint64_t v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, v30, v19);
      free(v8);
      id v18 = v9;
      SSFileLog();
    }
  }
  id v21 = objc_alloc_init((Class)SSPurchaseResponse);
  [v21 setError:SSError()];
  id v20 = [*(id *)(a1 + 32) _newEncodedPurchaseEntityPropertiesWithResponse:v21];
  objc_msgSend(v20, "setObject:forKey:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 2), @"state");
  id v10 = objc_alloc_init((Class)NSMutableSet);
  id obj = objc_alloc_init((Class)NSMutableSet);
  id v11 = +[DownloadsDatabase downloadsDatabase];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_100193130;
  v29[3] = &unk_1003A8888;
  v29[4] = *(void *)(a1 + 40);
  void v29[5] = obj;
  void v29[6] = *(void *)(a1 + 32);
  v29[7] = v10;
  v29[8] = v20;
  [v11 modifyUsingPurchaseTransactionBlock:v29];
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v12 = [obj countByEnumeratingWithState:&v25 objects:v34 count:16];
  if (v12)
  {
    uint64_t v13 = *(void *)v26;
    do
    {
      for (unint64_t i = 0; i != v12; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v26 != v13) {
          objc_enumerationMutation(obj);
        }
        id v15 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        if ((objc_msgSend(v10, "containsObject:", v15, v18) & 1) == 0)
        {
          *(void *)uint64_t v30 = 0;
          *(void *)&v30[8] = v30;
          *(void *)&v30[16] = 0x3052000000;
          char v31 = sub_100193380;
          uint64_t v32 = sub_100193390;
          uint64_t v33 = 0;
          id v16 = objc_msgSend(*(id *)(a1 + 32), "_clientForUniqueIdentifier:", objc_msgSend(v15, "longLongValue"));
          id v17 = +[DownloadsDatabase downloadsDatabase];
          v24[0] = _NSConcreteStackBlock;
          v24[1] = 3221225472;
          void v24[2] = sub_10019339C;
          void v24[3] = &unk_1003A88B0;
          void v24[5] = v16;
          v24[6] = v30;
          void v24[4] = *(void *)(a1 + 32);
          [v17 readUsingTransactionBlock:v24];
          if ([*(id *)(*(void *)&v30[8] + 40) count]) {
            [v16 sendResponses:*(void *)(*(void *)&v30[8] + 40)];
          }

          _Block_object_dispose(v30, 8);
        }
      }
      id v12 = [obj countByEnumeratingWithState:&v25 objects:v34 count:16];
    }
    while (v12);
  }
}

void sub_100193110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

uint64_t sub_100193130(uint64_t a1, void *a2)
{
  id v4 = [a2 database];
  id v5 = +[DownloadEntity queryWithDatabase:predicate:](DownloadEntity, "queryWithDatabase:predicate:", [a2 database], +[SSSQLiteContainsPredicate containsPredicateWithProperty:values:](SSSQLiteContainsPredicate, "containsPredicateWithProperty:values:", SSSQLEntityPropertyPersistentID, objc_msgSend(*(id *)(a1 + 32), "allObjects")));
  CFStringRef v11 = @"purchase_id";
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_10019326C;
  v8[3] = &unk_1003A8860;
  void v8[4] = v4;
  long long v6 = *(_OWORD *)(a1 + 56);
  long long v9 = *(_OWORD *)(a1 + 40);
  long long v10 = v6;
  [v5 enumeratePersistentIDsAndProperties:&v11 count:1 usingBlock:v8];
  return 1;
}

void sub_10019326C(uint64_t a1, uint64_t a2, id *a3)
{
  id v4 = -[PurchaseEntity initWithPersistentID:inDatabase:]([PurchaseEntity alloc], "initWithPersistentID:inDatabase:", [*a3 longLongValue], *(void *)(a1 + 32));
  if (v4)
  {
    uint64_t v7 = v4;
    id v5 = [(PurchaseEntity *)v4 valueForProperty:@"client_id"];
    if (!v5) {
      goto LABEL_8;
    }
    long long v6 = v5;
    if (([*(id *)(a1 + 40) containsObject:v5] & 1) == 0)
    {
      [*(id *)(a1 + 40) addObject:v6];
      if (objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "_clientForUniqueIdentifier:", objc_msgSend(v6, "longLongValue")), "finishesPurchases"))objc_msgSend(*(id *)(a1 + 56), "addObject:", v6); {
    }
      }
    if ([*(id *)(a1 + 56) containsObject:v6]) {
      [(PurchaseEntity *)v7 setValuesWithDictionary:*(void *)(a1 + 64)];
    }
    else {
LABEL_8:
    }
      [(PurchaseEntity *)v7 deleteFromDatabase];
  }
}

void sub_100193380(uint64_t a1, uint64_t a2)
{
}

void sub_100193390(uint64_t a1)
{
}

id sub_10019339C(uint64_t a1, void *a2)
{
  id result = objc_msgSend(*(id *)(a1 + 32), "_newResponsesToPurchasesForClient:inDatabase:", *(void *)(a1 + 40), objc_msgSend(a2, "database"));
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  return result;
}

id sub_100193458(uint64_t a1)
{
  return [*(id *)(a1 + 32) _enqueueNextPurchase];
}

void sub_1001934F0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 40), "_addEncodedPurchases:forClient:", xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2"), a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }
  else
  {
    SSError();
    SSXPCDictionarySetCFObject();
  }
}

void sub_100193640(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "_cancelEncodedPurchases:forClient:", xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "2"), a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }
  else
  {
    SSError();
    SSXPCDictionarySetCFObject();
  }
}

void sub_1001936FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = +[SSPurchase newPurchaseWithDatabaseEncoding:*a3];
  if (v4)
  {
    id v5 = v4;
    [v4 setUniqueIdentifier:a2];
    SSXPCArraySetCFObject();
  }
}

void sub_10019380C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 40), "_finishEncodedPurchaseIdentifiers:forClient:", xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2"), a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }
  else
  {
    SSError();
    SSXPCDictionarySetCFObject();
  }
}

void sub_10019395C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    objc_msgSend(*(id *)(a1 + 40), "_insertEncodedPurchases:afterPurchaseID:forClient:", value, xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "3"), a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }
  else
  {
    SSError();
    SSXPCDictionarySetCFObject();
  }
}

void sub_100193AC4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    objc_msgSend(*(id *)(a1 + 40), "_moveEncodedPurchaseIDs:afterPurchaseID:forClient:", value, xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "3"), a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }
  else
  {
    SSError();
    SSXPCDictionarySetCFObject();
  }
}

uint64_t sub_100193ED0(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_100193F5C;
  v6[3] = &unk_1003A8968;
  id v4 = *(void **)(a1 + 32);
  void v6[4] = *(void *)(a1 + 40);
  void v6[5] = v3;
  xpc_array_apply(v4, v6);
  return 1;
}

uint64_t sub_100193F5C(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_int64)
  {
    int64_t value = xpc_int64_get_value(object);
    id v6 = [objc_alloc((Class)NSNumber) initWithLongLong:value];
    if ([*(id *)(*(void *)(a1 + 32) + 64) containsObject:v6])
    {
      [*(id *)(a1 + 32) _markInFlightCanceledPurchaseIdentifier:v6];
    }
    else
    {
      uint64_t v7 = [[PurchaseEntity alloc] initWithPersistentID:value inDatabase:*(void *)(a1 + 40)];
      [(PurchaseEntity *)v7 deleteFromDatabase];
    }
  }
  return 1;
}

uint64_t sub_100194210(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  id v4 = *(void **)(a1 + 32);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_10019429C;
  applier[3] = &unk_1003A40A8;
  void applier[4] = v3;
  xpc_array_apply(v4, applier);
  return 1;
}

uint64_t sub_10019429C(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = [[PurchaseEntity alloc] initWithPersistentID:xpc_int64_get_value(object) inDatabase:*(void *)(a1 + 32)];
    if (objc_msgSend(-[PurchaseEntity valueForProperty:](v5, "valueForProperty:", @"state"), "integerValue") == (id)2) {
      [(PurchaseEntity *)v5 deleteFromDatabase];
    }
  }
  return 1;
}

void sub_10019478C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 176), 8);
  _Unwind_Resume(a1);
}

id sub_1001947CC(uint64_t a1, void *a2)
{
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100194874;
  v7[3] = &unk_1003A89E0;
  void v7[4] = v4;
  void v7[5] = a2;
  long long v8 = *(_OWORD *)(a1 + 56);
  [v4 _filterPurchases:v5 withTransaction:a2 block:v7];
  return [a2 insertPurchases:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) afterPurchaseWithIdentifier:*(void *)(a1 + 72) forClient:*(void *)(a1 + 48)];
}

id sub_100194874(uint64_t a1, void *a2, void *a3)
{
  if ([a3 count])
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6) {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      int v16 = 138412546;
      uint64_t v17 = objc_opt_class();
      __int16 v18 = 2048;
      id v19 = [a3 count];
      LODWORD(v15) = 22;
      long long v14 = &v16;
      uint64_t v9 = _os_log_send_and_compose_impl();
      if (v9)
      {
        long long v10 = (void *)v9;
        CFStringRef v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v16, v15);
        free(v10);
        long long v14 = (int *)v11;
        SSFileLog();
      }
    }
    id v12 = objc_msgSend(objc_alloc((Class)NSOrderedSet), "initWithArray:", objc_msgSend(a3, "allKeys"));
    [*(id *)(a1 + 40) resetDownloadsWithIdentifiers:v12];
  }
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = objc_msgSend(a3, "copy", v14);
  id result = [a2 copy];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) = result;
  return result;
}

void sub_100194A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_alloc_init((Class)SSPurchaseResponse);
  uint64_t v7 = a2;
  objc_msgSend(v6, "setDownloadIdentifiers:", +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
  [*(id *)(a1 + 32) sendResponse:v6 forPurchases:a3];
}

id sub_100194D38(uint64_t a1, void *a2)
{
  return [a2 movePurchasesWithIdentifiers:*(void *)(a1 + 32) afterPurchaseWithIdentifier:*(void *)(a1 + 40)];
}

void sub_100194D44(uint64_t a1, uint64_t a2, void *a3)
{
  id v9 = +[SSPurchase newPurchaseWithDatabaseEncoding:*a3];
  [v9 setUniqueIdentifier:a2];
  if (v9)
  {
    id v6 = objc_alloc_init((Class)SSPurchaseResponse);
    [v6 setPurchase:v9];
    if (a3[1])
    {
      objc_opt_class();
      id ObjectWithArchivedData = (void *)SSCodingCreateObjectWithArchivedData();
      [v6 setError:ObjectWithArchivedData];
    }
    if (a3[2])
    {
      id v8 = [objc_alloc((Class)SSURLConnectionResponse) initWithDatabaseEncoding:a3[2]];
      [v6 setURLResponse:v8];
    }
    [*(id *)(a1 + 32) addObject:v6];
  }
}

id sub_100194F04(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) removeObjectIdenticalTo:*(void *)(a1 + 40)];
}

void sub_10019535C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 176), 8);
  _Unwind_Resume(a1);
}

id sub_10019539C(uint64_t a1, void *a2)
{
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100195444;
  v7[3] = &unk_1003A89E0;
  void v7[4] = v4;
  void v7[5] = a2;
  long long v8 = *(_OWORD *)(a1 + 56);
  [v4 _filterPurchases:v5 withTransaction:a2 block:v7];
  return [a2 addPurchases:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) forClient:*(void *)(a1 + 48)];
}

id sub_100195444(uint64_t a1, void *a2, void *a3)
{
  if ([a3 count])
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6) {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v7 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v8 = v7 | 2;
    }
    else {
      int v8 = v7;
    }
    if (!os_log_type_enabled((os_log_t)[v6 OSLogObject], OS_LOG_TYPE_INFO)) {
      v8 &= 2u;
    }
    if (v8)
    {
      int v16 = 138412546;
      uint64_t v17 = objc_opt_class();
      __int16 v18 = 2048;
      id v19 = [a3 count];
      LODWORD(v15) = 22;
      long long v14 = &v16;
      uint64_t v9 = _os_log_send_and_compose_impl();
      if (v9)
      {
        long long v10 = (void *)v9;
        CFStringRef v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v16, v15);
        free(v10);
        long long v14 = (int *)v11;
        SSFileLog();
      }
    }
    id v12 = objc_msgSend(objc_alloc((Class)NSOrderedSet), "initWithArray:", objc_msgSend(a3, "allKeys"));
    [*(id *)(a1 + 40) resetDownloadsWithIdentifiers:v12];
  }
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = objc_msgSend(a3, "copy", v14);
  id result = a2;
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) = result;
  return result;
}

void sub_10019562C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_alloc_init((Class)SSPurchaseResponse);
  uint64_t v7 = a2;
  objc_msgSend(v6, "setDownloadIdentifiers:", +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
  [*(id *)(a1 + 32) sendResponse:v6 forPurchases:a3];
}

id sub_1001958C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [*(id *)(a1 + 32) object];
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);

  return [v6 _finishAuthenticationRequestForBatchIdentifier:v7 client:v8 withAccountID:a2 error:a3];
}

void sub_100195C94(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_alloc_init((Class)NSMutableArray);
  id v9 = objc_alloc_init((Class)NSMutableArray);
  id v10 = +[SSLogConfig sharedDaemonConfig];
  id v11 = v10;
  uint64_t v38 = a1;
  if (a2)
  {
    if (!v10) {
      id v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v12 = [v11 shouldLog];
    if ([v11 shouldLogToDisk]) {
      int v13 = v12 | 2;
    }
    else {
      int v13 = v12;
    }
    if (os_log_type_enabled((os_log_t)[v11 OSLogObject], OS_LOG_TYPE_DEBUG)) {
      int v14 = v13;
    }
    else {
      int v14 = v13 & 2;
    }
    if (v14)
    {
      int v45 = 138412290;
      uint64_t v46 = objc_opt_class();
      LODWORD(v37) = 12;
      uint64_t v36 = &v45;
      uint64_t v15 = _os_log_send_and_compose_impl();
      if (v15)
      {
        int v16 = (void *)v15;
        uint64_t v17 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v45, v37);
        free(v16);
        uint64_t v36 = (int *)v17;
        SSFileLog();
      }
    }
    objc_msgSend(v9, "addObjectsFromArray:", *(void *)(a1 + 40), v36);
    goto LABEL_38;
  }
  if (!v10) {
    id v11 = +[SSLogConfig sharedConfig];
  }
  unsigned int v18 = [v11 shouldLog];
  if ([v11 shouldLogToDisk]) {
    int v19 = v18 | 2;
  }
  else {
    int v19 = v18;
  }
  if (os_log_type_enabled((os_log_t)[v11 OSLogObject], OS_LOG_TYPE_DEBUG)) {
    int v20 = v19;
  }
  else {
    int v20 = v19 & 2;
  }
  if (v20)
  {
    int v45 = 138412802;
    uint64_t v46 = objc_opt_class();
    __int16 v47 = 2048;
    uint64_t v48 = a3;
    __int16 v49 = 2112;
    uint64_t v50 = a4;
    LODWORD(v37) = 32;
    uint64_t v36 = &v45;
    uint64_t v21 = _os_log_send_and_compose_impl();
    if (v21)
    {
      id v22 = (void *)v21;
      id v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, &v45, v37);
      free(v22);
      uint64_t v36 = (int *)v23;
      SSFileLog();
    }
  }
  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id v24 = *(void **)(a1 + 40);
  id v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v40, v44, 16, v36);
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = 0;
    uint64_t v28 = *(void *)v41;
    do
    {
      for (unint64_t i = 0; i != v26; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v41 != v28) {
          objc_enumerationMutation(v24);
        }
        uint64_t v30 = *(void **)(*((void *)&v40 + 1) + 8 * i);
        if (([v30 createsDownloads] & 1) == 0)
        {
          uint64_t v32 = v9;
          goto LABEL_34;
        }
        id v31 = [v30 expectedDownloadFileSize];
        if ((unint64_t)v31 > a3 - v27)
        {
          uint64_t v32 = v8;
LABEL_34:
          [v32 addObject:v30];
          continue;
        }
        id v33 = v31;
        [v9 addObject:v30];
        v27 += (uint64_t)v33;
      }
      id v26 = [v24 countByEnumeratingWithState:&v40 objects:v44 count:16];
    }
    while (v26);
  }
LABEL_38:
  uint64_t v34 = *(void *)(v38 + 32);
  uint64_t v35 = *(NSObject **)(v34 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100196078;
  block[3] = &unk_1003A6F80;
  void block[4] = v8;
  void block[5] = v34;
  void block[6] = *(void *)(v38 + 48);
  void block[7] = v9;
  dispatch_async(v35, block);
}

id sub_100196078(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    if (!os_log_type_enabled((os_log_t)[v2 OSLogObject], OS_LOG_TYPE_DEBUG)) {
      v4 &= 2u;
    }
    if (v4)
    {
      uint64_t v5 = objc_opt_class();
      uint64_t v6 = *(void *)(a1 + 32);
      int v21 = 138412546;
      uint64_t v22 = v5;
      __int16 v23 = 2112;
      uint64_t v24 = v6;
      LODWORD(v20) = 22;
      int v19 = &v21;
      uint64_t v7 = _os_log_send_and_compose_impl();
      if (v7)
      {
        id v8 = (void *)v7;
        id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v21, v20);
        free(v8);
        int v19 = (int *)v9;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 40), "_cancelPurchasesForLackOfDiskSpace:client:", *(void *)(a1 + 32), *(void *)(a1 + 48), v19);
  }
  id result = [*(id *)(a1 + 56) count];
  if (result)
  {
    id v11 = +[SSLogConfig sharedDaemonConfig];
    if (!v11) {
      id v11 = +[SSLogConfig sharedConfig];
    }
    unsigned int v12 = [v11 shouldLog];
    if ([v11 shouldLogToDisk]) {
      int v13 = v12 | 2;
    }
    else {
      int v13 = v12;
    }
    if (!os_log_type_enabled((os_log_t)[v11 OSLogObject], OS_LOG_TYPE_DEBUG)) {
      v13 &= 2u;
    }
    if (v13)
    {
      uint64_t v14 = objc_opt_class();
      uint64_t v15 = *(void *)(a1 + 56);
      int v21 = 138412546;
      uint64_t v22 = v14;
      __int16 v23 = 2112;
      uint64_t v24 = v15;
      LODWORD(v20) = 22;
      int v19 = &v21;
      uint64_t v16 = _os_log_send_and_compose_impl();
      if (v16)
      {
        uint64_t v17 = (void *)v16;
        unsigned int v18 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v16, 4, &v21, v20);
        free(v17);
        int v19 = (int *)v18;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 40), "_authenticateForPurchases:client:", *(void *)(a1 + 56), *(void *)(a1 + 48), v19);
    return [*(id *)(a1 + 40) _enqueueNextPurchase];
  }
  return result;
}

uint64_t sub_1001963E4(uint64_t a1, void *a2)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  unsigned int v3 = *(void **)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (!v4) {
    return 1;
  }
  id v5 = v4;
  uint64_t v6 = *(void *)v10;
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    if (*(void *)v10 != v6) {
      objc_enumerationMutation(v3);
    }
    uint64_t result = (uint64_t)objc_msgSend(a2, "cancelPurchaseWithIdentifier:applyingProperties:", objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * v7), "uniqueIdentifier"), 0);
    if (!result) {
      return result;
    }
    if (v5 == (id)++v7)
    {
      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v5) {
        goto LABEL_3;
      }
      return 1;
    }
  }
}

void sub_10019662C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10019664C(uint64_t a1, void *a2)
{
  id v4 = +[PurchaseEntity queryWithDatabase:predicate:](PurchaseEntity, "queryWithDatabase:predicate:", [a2 database], +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:](SSSQLiteComparisonPredicate, "predicateWithProperty:equalToLongLong:", @"batch_id", *(void *)(a1 + 56)));
  v11[0] = @"client_id";
  v11[1] = @"encoded_data";
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100196788;
  v7[3] = &unk_1003A8AF8;
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 64);
  void v7[4] = v5;
  void v7[5] = a2;
  long long v8 = *(_OWORD *)(a1 + 40);
  [v4 enumeratePersistentIDsAndProperties:v11 count:2 usingBlock:v7];
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
}

void sub_100196788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v10 = +[SSPurchase newPurchaseWithDatabaseEncoding:*(void *)(a3 + 8)];
  [v10 setBatchIdentifier:*(void *)(a1 + 64)];
  [v10 setUniqueIdentifier:a2];
  if (v10) {
    [*(id *)(a1 + 32) addObject:v10];
  }
  long long v8 = *(void **)(a1 + 40);
  if (*(unsigned char *)(a1 + 72)) {
    unsigned __int8 v9 = [v8 deletePurchaseWithIdentifier:a2];
  }
  else {
    unsigned __int8 v9 = [v8 cancelPurchaseWithIdentifier:a2 applyingProperties:*(void *)(a1 + 48)];
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v9;
  *a5 = *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) ^ 1;
}

void sub_100196E20(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100196E50(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  CFStringRef v10 = @"order_id";
  id v4 = +[PurchaseEntity queryWithDatabase:predicate:orderingProperties:](PurchaseEntity, "queryWithDatabase:predicate:orderingProperties:", v3, +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:](SSSQLiteComparisonPredicate, "predicateWithProperty:equalToLongLong:", @"state", 0), +[NSArray arrayWithObjects:&v10 count:1]);
  v9[0] = @"batch_id";
  v9[1] = @"client_id";
  v9[2] = @"encoded_data";
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100196FAC;
  v7[3] = &unk_1003A8B98;
  uint64_t v5 = *(void *)(a1 + 32);
  long long v8 = *(_OWORD *)(a1 + 40);
  void v7[4] = v5;
  void v7[5] = v3;
  [v4 enumeratePersistentIDsAndProperties:v9 count:3 usingBlock:v7];
  return 1;
}

void sub_100196FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v9 = [*(id *)a3 integerValue];
  if (([*(id *)(*(void *)(a1 + 32) + 16) containsIndex:v9] & 1) == 0)
  {
    id v10 = +[SSPurchase newPurchaseWithDatabaseEncoding:*(void *)(a3 + 16)];
    if (v10)
    {
      id v17 = v10;
      [v10 setBatchIdentifier:v9];
      [v17 setUniqueIdentifier:a2];
      *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = [[PurchaseManagerOperation alloc] initWithPurchase:v17];
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a3 + 8) longLongValue];
      if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
      {
        id v11 = objc_msgSend(*(id *)(a1 + 32), "_clientForUniqueIdentifier:");
        if (v11)
        {
          long long v12 = v11;
          id v13 = [v11 URLBagType];
          objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "setClientIdentifier:", objc_msgSend(v12, "clientIdentifier"));
          objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "setClientIdentifierHeader:", objc_msgSend(v12, "clientIdentifierHeader"));
          objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "setUseRemoteAuthentication:", objc_msgSend(v12, "useRemoteAuthentication"));
        }
        else
        {
          uint64_t v14 = [[PurchaseManagerEntity alloc] initWithPersistentID:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) inDatabase:*(void *)(a1 + 40)];
          objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "setClientIdentifierHeader:", -[PurchaseManagerEntity valueForProperty:](v14, "valueForProperty:", @"client_id_header"));
          [(PurchaseManagerEntity *)v14 valueForProperty:@"url_bag_type"];
          id v13 = (id)SSURLBagTypeForString();
        }
      }
      else
      {
        id v13 = 0;
      }
      [v17 buyParametersValueForKey:@"originatingBundleID"];
      uint64_t v15 = (void *)ISClientIdentifierForBundleIdentifier();
      if ([v15 length]) {
        [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setClientIdentifierHeader:v15];
      }
      if ([v17 requestProperties]) {
        id v13 = objc_msgSend(objc_msgSend(v17, "requestProperties"), "URLBagType");
      }
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setURLBagType:v13];
      uint64_t v16 = [[PurchaseEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 40)];
      [(PurchaseEntity *)v16 setValue:+[NSNumber numberWithInteger:1] forProperty:@"state"];

      *a5 = 1;
    }
  }
}

id sub_100197254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [*(id *)(a1 + 32) object];
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

  return [v6 _sendAuthenticateRequestForClientUniqueID:v7 withContext:a2 responseHandler:a3];
}

id sub_1001972B0(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) object];
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

  return [v4 _finishPurchaseRequestForClientUniqueID:v5 withResponse:a2];
}

id sub_1001976E4(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = +[DownloadsDatabase downloadsDatabase];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_1001978E4;
    v13[3] = &unk_1003A8C30;
    void v13[4] = *(void *)(a1 + 64);
    [v2 modifyUsingPurchaseTransactionBlock:v13];
  }
  else
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    if (!os_log_type_enabled((os_log_t)[v3 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v5 &= 2u;
    }
    if (v5)
    {
      int v14 = 138412290;
      uint64_t v15 = objc_opt_class();
      LODWORD(v12) = 12;
      id v11 = &v14;
      uint64_t v6 = _os_log_send_and_compose_impl();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        long long v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v6, 4, &v14, v12);
        free(v7);
        id v11 = (int *)v8;
        SSFileLog();
      }
    }
    id v9 = objc_alloc_init((Class)SSPurchaseResponse);
    [v9 setError:*(void *)(a1 + 48)];
    [*(id *)(a1 + 40) _cancelPurchasesWithBatchIdentifier:*(void *)(a1 + 64) client:*(void *)(a1 + 56) response:v9];
  }
  objc_msgSend(*(id *)(*(void *)(a1 + 40) + 16), "removeIndex:", *(void *)(a1 + 64), v11);
  return [*(id *)(a1 + 40) _enqueueNextPurchase];
}

uint64_t sub_1001978E4(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  id v4 = +[PurchaseEntity queryWithDatabase:predicate:](PurchaseEntity, "queryWithDatabase:predicate:", v3, +[SSSQLiteComparisonPredicate predicateWithProperty:@"batch_id" equalToLongLong:*(void *)(a1 + 32)]);
  CFStringRef v7 = @"encoded_data";
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1001979E0;
  v6[3] = &unk_1003A32B8;
  void v6[4] = v3;
  [v4 enumeratePersistentIDsAndProperties:&v7 count:1 usingBlock:v6];
  return 1;
}

void sub_1001979E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = +[SSPurchase newPurchaseWithDatabaseEncoding:*a3];
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 setUniqueIdentifier:a2];
    [v6 setPreauthenticated:1];
    CFStringRef v7 = [[PurchaseEntity alloc] initWithPersistentID:a2 inDatabase:*(void *)(a1 + 32)];
    CFStringRef v8 = @"encoded_data";
    id v9 = [v6 databaseEncoding];
    [(PurchaseEntity *)v7 setValuesWithDictionary:+[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1]];
  }
}

id sub_100197B40(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _clientForUniqueIdentifier:*(void *)(a1 + 56)];
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);

  return [v2 sendAuthenticateRequestWithContext:v3 responseHandler:v4];
}

void sub_100197BF0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _clientForUniqueIdentifier:*(void *)(a1 + 48)];
  id v3 = [v2 clientIdentifier];
  id v4 = [*(id *)(a1 + 40) purchase];
  id v5 = [v4 uniqueIdentifier];
  id v6 = [objc_alloc((Class)NSNumber) initWithLongLong:v5];
  id v7 = [v4 valueForDownloadProperty:SSDownloadPropertyKind];
  unsigned __int8 v8 = [v7 isEqual:@"book"];
  if ([*(id *)(a1 + 40) cancelsPurchaseBatch])
  {
    id v9 = +[SSLogConfig sharedDaemonConfig];
    if (!v9) {
      id v9 = +[SSLogConfig sharedConfig];
    }
    unsigned int v10 = [v9 shouldLog];
    if ([v9 shouldLogToDisk]) {
      int v11 = v10 | 2;
    }
    else {
      int v11 = v10;
    }
    if (!os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
      v11 &= 2u;
    }
    if (v11)
    {
      int v27 = 138412290;
      uint64_t v28 = objc_opt_class();
      LODWORD(v18) = 12;
      id v17 = &v27;
      uint64_t v12 = _os_log_send_and_compose_impl();
      if (v12)
      {
        id v13 = (void *)v12;
        int v14 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v27, v18);
        free(v13);
        id v17 = (int *)v14;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "_cancelPurchasesWithBatchIdentifier:client:response:", objc_msgSend(v4, "batchIdentifier", v17), v2, *(void *)(a1 + 40));
  }
  else
  {
    unsigned __int8 v15 = [*(id *)(*(void *)(a1 + 32) + 48) containsObject:v6];
    id v16 = +[DownloadsDatabase downloadsDatabase];
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    void v19[2] = sub_100197EE0;
    v19[3] = &unk_1003A8C80;
    unsigned __int8 v25 = v15;
    void v19[4] = v2;
    long long v20 = *(_OWORD *)(a1 + 32);
    id v21 = v7;
    id v22 = v4;
    id v23 = v3;
    id v24 = v5;
    unsigned __int8 v26 = v8;
    [v16 modifyUsingPurchaseTransactionBlock:v19];
    if ((v15 & 1) == 0) {
      [v2 sendResponse:*(void *)(a1 + 40)];
    }
  }
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "decodedResponse"), "triggeredQueueCheck")) {
    objc_msgSend(*(id *)(a1 + 32), "_checkStoreDownloadQueuesForPurchase:response:", v4, objc_msgSend(*(id *)(a1 + 40), "decodedResponse"));
  }
  [*(id *)(*(void *)(a1 + 32) + 48) removeObject:v6];
  [*(id *)(*(void *)(a1 + 32) + 64) removeObject:v6];
  [*(id *)(a1 + 32) _enqueueNextPurchase];
}

uint64_t sub_100197EE0(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 88))
  {
    [a2 deletePurchaseWithIdentifier:*(void *)(a1 + 80)];
  }
  else
  {
    id v4 = -[PurchaseEntity initWithPersistentID:inDatabase:]([PurchaseEntity alloc], "initWithPersistentID:inDatabase:", *(void *)(a1 + 80), [a2 database]);
    id v5 = *(void **)(a1 + 32);
    if (v5 && ([v5 finishesPurchases] & 1) == 0)
    {
      [(PurchaseEntity *)v4 deleteFromDatabase];
    }
    else
    {
      id v6 = [*(id *)(a1 + 40) _newEncodedPurchaseEntityPropertiesWithResponse:*(void *)(a1 + 48)];
      objc_msgSend(v6, "setObject:forKey:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 2), @"state");
      [(PurchaseEntity *)v4 setValuesWithDictionary:v6];
    }
  }
  if ((SSDownloadKindIsSoftwareKind() & 1) == 0
    && ([*(id *)(a1 + 64) createsDownloads] & 1) != 0
    || SSDownloadKindIsSoftwareKind() && [*(id *)(a1 + 64) createsJobs])
  {
    if ([a2 placeholderDownloadCanceledForPurchaseIdentifier:*(void *)(a1 + 80)])
    {
      id v7 = +[SSLogConfig sharedDaemonConfig];
      if (!v7) {
        id v7 = +[SSLogConfig sharedConfig];
      }
      unsigned int v8 = [v7 shouldLog];
      if ([v7 shouldLogToDisk]) {
        int v9 = v8 | 2;
      }
      else {
        int v9 = v8;
      }
      if (!os_log_type_enabled((os_log_t)[v7 OSLogObject], OS_LOG_TYPE_DEFAULT)) {
        v9 &= 2u;
      }
      if (v9)
      {
        int v16 = 138412290;
        uint64_t v17 = objc_opt_class();
        LODWORD(v15) = 12;
        uint64_t v10 = _os_log_send_and_compose_impl();
        if (v10)
        {
          int v11 = (void *)v10;
          +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v16, v15);
          free(v11);
          SSFileLog();
        }
      }
    }
    else
    {
      id v12 = objc_msgSend(a2, "replacePurchase:withDownloadQueueResponse:withClientIdentifier:", objc_msgSend(*(id *)(a1 + 48), "purchase"), objc_msgSend(*(id *)(a1 + 48), "decodedResponse"), *(void *)(a1 + 72));
      id v13 = v12;
      if (*(unsigned char *)(a1 + 89)) {
        objc_msgSend(*(id *)(a1 + 48), "setDownloadIdentifiers:", objc_msgSend(v12, "array"));
      }
      if (*(unsigned char *)(a1 + 88) && [v13 count]) {
        [a2 finishDownloadsWithIdentifiers:v13 finalPhase:SSDownloadPhaseCanceled];
      }
    }
  }
  return 1;
}

uint64_t sub_100198224(uint64_t a1, void *a2)
{
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v26 = 0;
  int v27 = &v26;
  uint64_t v28 = 0x3052000000;
  uint64_t v29 = sub_100193380;
  uint64_t v30 = sub_100193390;
  uint64_t v31 = 0;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x2020000000;
  uint64_t v25 = 0;
  id v5 = objc_alloc_init((Class)SSPurchaseResponse);
  [v5 setError:SSError()];
  id v6 = [*(id *)(a1 + 32) _newEncodedPurchaseEntityPropertiesWithResponse:v5];
  id v7 = +[PurchaseEntity queryWithDatabase:predicate:](PurchaseEntity, "queryWithDatabase:predicate:", [a2 database], +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:](SSSQLiteComparisonPredicate, "predicateWithProperty:equalToLongLong:", @"state", 1));
  v36[0] = @"client_id";
  v36[1] = @"encoded_data";
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100198618;
  v21[3] = &unk_1003A8CA8;
  void v21[4] = v4;
  v21[5] = a2;
  void v21[6] = v6;
  v21[7] = &v26;
  void v21[8] = &v22;
  [v7 enumeratePersistentIDsAndProperties:v36 count:2 usingBlock:v21];
  if (v23[3] >= 1)
  {
    id v8 = +[SSLogConfig sharedDaemonConfig];
    if (!v8) {
      id v8 = +[SSLogConfig sharedConfig];
    }
    unsigned int v9 = [v8 shouldLog];
    unsigned int v10 = [v8 shouldLogToDisk];
    int v11 = [v8 OSLogObject];
    if (v10) {
      v9 |= 2u;
    }
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
      v9 &= 2u;
    }
    if (v9)
    {
      uint64_t v12 = objc_opt_class();
      uint64_t v13 = v23[3];
      int v32 = 138412546;
      uint64_t v33 = v12;
      __int16 v34 = 2048;
      uint64_t v35 = v13;
      LODWORD(v19) = 22;
      uint64_t v18 = &v32;
      uint64_t v14 = _os_log_send_and_compose_impl();
      if (v14)
      {
        uint64_t v15 = (void *)v14;
        int v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v32, v19);
        free(v15);
        uint64_t v18 = (int *)v16;
        SSFileLog();
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "_showPurchasesFailedDialogWithFirstTitle:count:", v27[5], v23[3], v18);
  }
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_100198714;
  v20[3] = &unk_1003A8CD0;
  void v20[4] = *(void *)(a1 + 32);
  void v20[5] = v5;
  [v4 enumerateKeysAndObjectsUsingBlock:v20];

  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&v26, 8);
  return 1;
}

void sub_1001985D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

id sub_100198618(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = +[SSPurchase newPurchaseWithDatabaseEncoding:a3[1]];
  [v6 setUniqueIdentifier:a2];
  if (v6)
  {
    if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)) {
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) = [v6 valueForDownloadProperty:SSDownloadPropertyTitle];
    }
    if (*a3)
    {
      id v7 = objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
      if (!v7)
      {
        id v7 = objc_alloc_init((Class)NSMutableArray);
        [*(id *)(a1 + 32) setObject:v7 forKey:*a3];
      }
      [v7 addObject:v6];
    }
  }
  id result = [*(id *)(a1 + 40) cancelPurchaseWithIdentifier:a2 applyingProperties:*(void *)(a1 + 48)];
  ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
  return result;
}

id sub_100198714(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(*(id *)(a1 + 32), "_clientForUniqueIdentifier:", objc_msgSend(a2, "longLongValue"));
  uint64_t v6 = *(void *)(a1 + 40);

  return [v5 sendResponse:v6 forPurchases:a3];
}

uint64_t sub_1001988BC(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = [objc_alloc((Class)NSNumber) initWithLongLong:xpc_int64_get_value(object)];
    [*(id *)(a1 + 32) addObject:v5];
  }
  return 1;
}

uint64_t sub_100198A08(uint64_t a1)
{
  id v2 = +[SSPurchase newPurchaseWithXPCEncoding:](SSPurchase, "newPurchaseWithXPCEncoding:");
  if (v2)
  {
    id v3 = v2;
    SSVPurchaseAddDownloadPropertiesForBuyParameters();
    [v3 setDefaultUserAgent:*(void *)(a1 + 32)];
    [*(id *)(a1 + 40) addObject:v3];
  }
  return 1;
}

void sub_100198F20(id a1, unint64_t a2)
{
  if (!a2)
  {
    id v4 = objc_msgSend(objc_alloc((Class)ISOpenURLRequest), "initWithURL:", +[NSURL URLWithString:](NSURL, "URLWithString:", @"prefs:root=General&path=USAGE"));
    [v4 setITunesStoreURL:0];
    id v3 = [objc_alloc((Class)ISOpenURLOperation) initWithOpenURLRequest:v4];
    objc_msgSend(+[ISOperationQueue mainQueue](ISOperationQueue, "mainQueue"), "addOperation:", v3);
  }
}

void sub_10019BD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10019BDAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10019BDBC(uint64_t a1)
{
}

uint64_t sub_10019BDC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:SSAppPurchaseHistoryEntryStoreID equalToValue:*(void *)(a1 + 32)];
  id v5 = [v3 database];
  uint64_t v6 = +[SSAppPurchaseHistoryEntry queryWithDatabase:v5 predicate:v4];

  v10[0] = SSAppPurchaseHistoryEntryRedownloadParams;
  v10[1] = SSAppPurchaseHistoryEntryAccountUniqueIdentifier;
  void v10[2] = SSAppPurchaseHistoryEntryIsFamilyShareable;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10019BF50;
  void v9[3] = &unk_1003A3358;
  void v9[4] = *(void *)(a1 + 40);
  [v6 enumeratePersistentIDsAndProperties:v10 count:3 usingBlock:v9];
  for (uint64_t i = 2; i != -1; --i)

  return 1;
}

void sub_10019BF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (*(void *)a3 && *(void *)(a3 + 8))
  {
    id v8 = +[SSAccountStore defaultStore];
    unsigned int v9 = [v8 activeAccount];
    unsigned int v10 = [v9 uniqueIdentifier];

    unsigned int v11 = [*(id *)(a3 + 8) isEqualToNumber:v10];
    id v12 = *(id *)(a3 + 16);
    uint64_t v13 = v12;
    if (v12) {
      LODWORD(v12) = [v12 BOOLValue];
    }
    if ((v11 | v12) == 1)
    {
      id v14 = [objc_alloc((Class)NSString) initWithFormat:@"%@&ownerDsid=%@", *(void *)a3, *(void *)(a3 + 8)];
      uint64_t v15 = *(void *)(*(void *)(a1 + 32) + 8);
      int v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;
    }
  }
  else
  {
    id v17 = [*(id *)a3 copy];
    uint64_t v18 = *(void *)(*(void *)(a1 + 32) + 8);
    unsigned int v10 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v17;
  }

  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)) {
    *a5 = 1;
  }
}

void sub_10019C1D0(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  uint64_t v6 = [*(id *)(a1 + 32) remoteAuthenticationHandler];
  id v7 = (void *)v6;
  if (v6)
  {
    (*(void (**)(uint64_t, id, id))(v6 + 16))(v6, v9, v5);
  }
  else
  {
    id v8 = SSError();
    v5[2](v5, 0, v8);
  }
}

void sub_10019CF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_10019CF7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3) {
    goto LABEL_23;
  }
  id v4 = objc_alloc_init((Class)ISLoadURLBagOperation);
  id v5 = +[ISOperationQueue mainQueue];
  id v37 = v4;
  uint64_t v6 = +[NSArray arrayWithObjects:&v37 count:1];
  [v5 addOperations:v6 waitUntilFinished:1];

  if ([v4 success])
  {
    id v7 = [v4 URLBag];
    id v8 = [v7 valueForKey:@"install-attribution-max-cache-age"];

    double v9 = -2592000.0;
    if (v8 && [v8 integerValue]) {
      double v9 = (double)(-86400 * (uint64_t)[v8 integerValue]);
    }
    goto LABEL_19;
  }
  id v8 = +[SSLogConfig sharediTunesStoreConfig];
  if (!v8)
  {
    id v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  id v12 = [v8 OSLogObject];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
    int v13 = v11;
  }
  else {
    int v13 = v11 & 2;
  }
  if (!v13) {
    goto LABEL_17;
  }
  int v35 = 138543362;
  id v36 = (id)objc_opt_class();
  id v14 = v36;
  LODWORD(v33) = 12;
  uint64_t v15 = (void *)_os_log_send_and_compose_impl();

  if (v15)
  {
    id v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v35, v33);
    free(v15);
    SSFileLog();
LABEL_17:
  }
  double v9 = -2592000.0;
LABEL_19:

  int v16 = +[NSDate dateWithTimeIntervalSinceNow:v9];
  [v16 timeIntervalSince1970];
  uint64_t v18 = (uint64_t)(v17 * 1000.0);
  uint64_t v19 = [v3 localTimestamp];
  id v20 = [v19 longLongValue];

  if ((uint64_t)v20 >= v18)
  {
    uint64_t v22 = [v3 adNetworkId];
    id v23 = [v3 campaignId];
    [v3 appAdamId];
    id v34 = v4;
    v25 = uint64_t v24 = a1;
    uint64_t v26 = [v3 impressionId];
    int v27 = [v3 timestamp];
    uint64_t v28 = [v3 attributionSignature];
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"{ ad-network-id = \"%@\"; campaign-id = \"%@\"; adam-id = \"%@\"; impression-id = \"%@\"; timestamp = \"%@\"; signature = \"%@\"; }",
      v22,
      v23,
      v25,
      v26,
      v27,
    uint64_t v29 = v28);

    a1 = v24;
    id v4 = v34;

    id v21 = +[NSURL escapedStringForString:v29];

    uint64_t v30 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) stringByAppendingFormat:@"&%@=%@", @"ad-network", v21];
    uint64_t v31 = *(void *)(*(void *)(a1 + 48) + 8);
    int v32 = *(void **)(v31 + 40);
    *(void *)(v31 + 40) = v30;
  }
  else
  {
    id v21 = +[PurchaseActionsManager sharedInstance];
    [v21 removeInstallAttributionParamsBeforeDate:v16];
  }

LABEL_23:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10019E4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10019E4EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10019E4FC(uint64_t a1)
{
}

void sub_10019E504(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v8 = [v7 valueForProperty:@"is_purchase"];
  if ([v8 BOOLValue])
  {
    double v9 = [v7 valueForProperty:@"purchase_id"];
    if (!v9)
    {
LABEL_5:

      goto LABEL_6;
    }
    unsigned int v10 = [PurchaseEntity alloc];
    id v11 = [v9 longLongValue];
    id v12 = [*(id *)(a1 + 32) database];
    int v13 = [(PurchaseEntity *)v10 initWithPersistentID:v11 inDatabase:v12];

    if ([(PurchaseEntity *)v13 existsInDatabase])
    {

      goto LABEL_5;
    }
    int v16 = +[SSLogConfig sharedDaemonConfig];
    if (!v16)
    {
      int v16 = +[SSLogConfig sharedConfig];
    }
    unsigned int v17 = [v16 shouldLog];
    if ([v16 shouldLogToDisk]) {
      int v18 = v17 | 2;
    }
    else {
      int v18 = v17;
    }
    uint64_t v19 = [v16 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
      int v20 = v18;
    }
    else {
      int v20 = v18 & 2;
    }
    if (v20)
    {
      v25[0] = 0;
      LODWORD(v24) = 2;
      id v21 = (void *)_os_log_send_and_compose_impl();

      if (!v21)
      {
LABEL_20:

        uint64_t v22 = *(void **)(a1 + 32);
        id v23 = [v7 databaseID];
        [v22 finishDownloadWithID:v23 finalPhase:SSDownloadPhaseCanceled updatePipeline:0];

        goto LABEL_21;
      }
      uint64_t v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v21, 4, v25, v24);
      free(v21);
      SSFileLog();
    }

    goto LABEL_20;
  }
LABEL_6:
  id v14 = [v7 valueForProperty:@"IFNULL(download_state.phase, \"SSDownloadPhaseWaiting\")"];
  char IsFinishedPhase = SSDownloadPhaseIsFinishedPhase();

  if ((IsFinishedPhase & 1) == 0)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
LABEL_21:
}

void sub_10019F044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10019F084(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  id v7 = v6;
  id v8 = [v7 kind];
  int IsSoftwareKind = SSDownloadKindIsSoftwareKind();

  if (IsSoftwareKind)
  {
    unsigned int v10 = [v7 requiredDeviceCapabilities];
    if (v10)
    {
      id v11 = +[ISDevice sharedInstance];
      LODWORD(v12) = [v11 checkCapabilities:v10 withMismatches:0];
    }
    else
    {
      LODWORD(v12) = 1;
    }
  }
  else
  {
    LODWORD(v12) = 1;
  }
  int v13 = [[Download alloc] initWithStoreDownload:v7];
  id v14 = &syslog_ptr;
  uint64_t v15 = +[NSNumber numberWithBool:0];
  [(Download *)v13 setValue:v15 forProperty:@"is_purchase"];

  int v16 = +[NSNumber numberWithBool:1];
  [(Download *)v13 setValue:v16 forProperty:@"is_from_store"];

  [(Download *)v13 setValue:*(void *)(a1 + 32) forProperty:@"store_account_id"];
  unsigned int v17 = [(Download *)v13 valueForProperty:@"is_store_queued"];
  if (!v17)
  {
    int v18 = +[NSNumber numberWithBool:1];
    [(Download *)v13 setValue:v18 forProperty:@"is_store_queued"];
  }
  uint64_t v19 = [*(id *)(a1 + 40) downloadForStoreDownload:v7];
  if (!SSDebugShouldUseAppstored()
    || ([v7 kind],
        int v20 = objc_claimAutoreleasedReturnValue(),
        int v21 = SSDownloadKindIsSoftwareKind(),
        v20,
        !v21))
  {
    uint64_t v28 = [v7 kind];
    int IsBookToShimKind = SSDownloadKindIsBookToShimKind();

    if (IsBookToShimKind)
    {
      [*(id *)(a1 + 56) addObject:v7];
      goto LABEL_104;
    }
    char v98 = v12;
    if (v19)
    {
      uint64_t v30 = [v19 valueForProperty:@"download_state.phase"];
      v109[0] = SSDownloadPhaseDownloading;
      v109[1] = SSDownloadPhaseProcessing;
      v109[2] = SSDownloadPhaseDataRestore;
      v109[3] = SSDownloadPhaseInstalling;
      __int16 v93 = +[NSArray arrayWithObjects:v109 count:4];
      unsigned int v96 = (void *)v30;
      unsigned int v31 = [v93 containsObject:v30];
      uint64_t v32 = +[SSLogConfig sharedDaemonConfig];
      uint64_t v33 = (void *)v32;
      if (v31)
      {
        if (!v32)
        {
          uint64_t v33 = +[SSLogConfig sharedConfig];
        }
        unsigned int v34 = [v33 shouldLog];
        if ([v33 shouldLogToDisk]) {
          int v35 = v34 | 2;
        }
        else {
          int v35 = v34;
        }
        id v36 = [v33 OSLogObject];
        if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO)) {
          int v37 = v35;
        }
        else {
          int v37 = v35 & 2;
        }
        if (!v37) {
          goto LABEL_95;
        }
        uint64_t v94 = a4;
        uint64_t v38 = objc_opt_class();
        id v39 = v38;
        int v101 = 138412802;
        id v102 = v38;
        __int16 v103 = 2048;
        id v104 = [v19 persistentID];
        __int16 v105 = 2112;
        v106 = v96;
        LODWORD(v91) = 32;
        id v90 = &v101;
        long long v40 = (void *)_os_log_send_and_compose_impl();

        if (!v40)
        {
          a4 = v94;
          id v14 = &syslog_ptr;
          LOBYTE(v12) = v98;
          goto LABEL_97;
        }
        id v36 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v40, 4, &v101, v91);
        free(v40);
        id v90 = (int *)v36;
        SSFileLog();
LABEL_94:
        a4 = v94;
LABEL_95:
        id v14 = &syslog_ptr;
        LOBYTE(v12) = v98;
        goto LABEL_96;
      }
      if (!v32)
      {
        uint64_t v33 = +[SSLogConfig sharedConfig];
      }
      unsigned int v53 = [v33 shouldLog];
      if ([v33 shouldLogToDisk]) {
        int v54 = v53 | 2;
      }
      else {
        int v54 = v53;
      }
      int v55 = [v33 OSLogObject];
      if (os_log_type_enabled(v55, OS_LOG_TYPE_INFO)) {
        int v56 = v54;
      }
      else {
        int v56 = v54 & 2;
      }
      uint64_t v94 = a4;
      if (v56)
      {
        uint64_t v12 = objc_opt_class();
        id v57 = (id)v12;
        int v101 = 138412802;
        id v102 = (id)v12;
        __int16 v103 = 2048;
        id v104 = [v19 persistentID];
        __int16 v105 = 2112;
        v106 = v96;
        LODWORD(v91) = 32;
        id v90 = &v101;
        int v58 = (void *)_os_log_send_and_compose_impl();

        a4 = v94;
        LOBYTE(v12) = v98;
        if (!v58) {
          goto LABEL_82;
        }
        int v55 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v58, 4, &v101, v91);
        free(v58);
        id v90 = (int *)v55;
        SSFileLog();
      }
      else
      {
        LOBYTE(v12) = v98;
      }

LABEL_82:
      *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = objc_msgSend(*(id *)(a1 + 40), "updateDownloadEntityWithIdentifier:withDownload:", objc_msgSend(v19, "persistentID"), v13);
      id v14 = &syslog_ptr;
      if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24))
      {
LABEL_98:

        goto LABEL_104;
      }
      uint64_t v65 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v19 persistentID]);
      uint64_t v33 = +[NSOrderedSet orderedSetWithObjects:](NSOrderedSet, "orderedSetWithObjects:", v65, 0);

      *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = [*(id *)(a1 + 40) restartDownloadsWithIdentifiers:v33];
      id v36 = +[SSLogConfig sharedDaemonConfig];
      if (!v36)
      {
        id v36 = +[SSLogConfig sharedConfig];
      }
      unsigned int v66 = [v36 shouldLog];
      if ([v36 shouldLogToDisk]) {
        v66 |= 2u;
      }
      long long v67 = [v36 OSLogObject];
      if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO)) {
        int v68 = v66;
      }
      else {
        int v68 = v66 & 2;
      }
      if (v68)
      {
        id v69 = objc_opt_class();
        id v92 = v69;
        id v70 = [v19 persistentID];
        int v71 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8) + 24);
        int v101 = 138413058;
        id v102 = v69;
        __int16 v103 = 2048;
        id v104 = v70;
        __int16 v105 = 2112;
        v106 = v96;
        __int16 v107 = 1024;
        int v108 = v71;
        LODWORD(v91) = 38;
        id v90 = &v101;
        id v72 = (void *)_os_log_send_and_compose_impl();

        if (!v72) {
          goto LABEL_94;
        }
        long long v67 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v72, 4, &v101, v91);
        free(v72);
        id v90 = (int *)v67;
        SSFileLog();
      }
      LOBYTE(v12) = v98;

      a4 = v94;
      id v14 = &syslog_ptr;
LABEL_96:

LABEL_97:
      goto LABEL_98;
    }
    long long v41 = v17;
    long long v42 = +[SSLogConfig sharedDaemonConfig];
    if (!v42)
    {
      long long v42 = +[SSLogConfig sharedConfig];
    }
    unsigned int v43 = [v42 shouldLog];
    if ([v42 shouldLogToDisk]) {
      int v44 = v43 | 2;
    }
    else {
      int v44 = v43;
    }
    int v45 = [v42 OSLogObject];
    if (!os_log_type_enabled(v45, OS_LOG_TYPE_INFO)) {
      v44 &= 2u;
    }
    if (v44)
    {
      int v101 = 138412546;
      id v102 = (id)objc_opt_class();
      __int16 v103 = 2112;
      id v104 = v7;
      id v46 = v102;
      LODWORD(v91) = 22;
      id v90 = &v101;
      __int16 v47 = (void *)_os_log_send_and_compose_impl();

      if (!v47)
      {
LABEL_50:

        uint64_t v48 = [(Download *)v13 valueForProperty:@"store_preorder_id"];
        if (v48 && SSGetItemIdentifierFromValue())
        {
          [(Download *)v13 setValue:SSDownloadPhasePaused forProperty:@"download_state.phase"];
          [*(id *)(a1 + 64) addObject:v48];
        }
        LOBYTE(v12) = v98;
        if (v13)
        {
          __int16 v49 = *(void **)(a1 + 40);
          uint64_t v50 = +[NSArray arrayWithObject:v13];
          long long v51 = [v49 addDownloads:v50];
          uint64_t v52 = a1 + 80;
          *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = v51 != 0;
        }
        else
        {
          uint64_t v52 = a1 + 80;
          *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 0;
        }
        unsigned int v17 = v41;
        id v14 = &syslog_ptr;
        if (*(unsigned char *)(*(void *)(*(void *)v52 + 8) + 24))
        {
          uint64_t v19 = [*(id *)(a1 + 40) downloadForStoreDownload:v7];
          if (v19)
          {
            int v95 = a4;
            __int16 v59 = +[SSLogConfig sharedDaemonConfig];
            if (!v59)
            {
              __int16 v59 = +[SSLogConfig sharedConfig];
            }
            unsigned int v60 = objc_msgSend(v59, "shouldLog", v90);
            if ([v59 shouldLogToDisk]) {
              v60 |= 2u;
            }
            id v61 = [v59 OSLogObject];
            if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO)) {
              int v62 = v60;
            }
            else {
              int v62 = v60 & 2;
            }
            if (v62)
            {
              uint64_t v12 = objc_opt_class();
              id v97 = (id)v12;
              id v63 = [v19 persistentID];
              int v101 = 138412546;
              id v102 = (id)v12;
              __int16 v103 = 2048;
              id v104 = v63;
              LODWORD(v91) = 22;
              id v90 = &v101;
              int v64 = (void *)_os_log_send_and_compose_impl();

              LOBYTE(v12) = v98;
              if (!v64)
              {
LABEL_102:

                a4 = v95;
                id v14 = &syslog_ptr;
                goto LABEL_103;
              }
              id v61 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v64, 4, &v101, v91);
              free(v64);
              id v90 = (int *)v61;
              SSFileLog();
            }
            else
            {
              LOBYTE(v12) = v98;
            }

            goto LABEL_102;
          }
        }
        else
        {
          uint64_t v19 = 0;
        }
LABEL_103:

        goto LABEL_104;
      }
      int v45 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v47, 4, &v101, v91);
      free(v47);
      id v90 = (int *)v45;
      SSFileLog();
    }

    goto LABEL_50;
  }
  if (v12)
  {
    uint64_t v22 = +[SSLogConfig sharedDaemonConfig];
    if (!v22)
    {
      uint64_t v22 = +[SSLogConfig sharedConfig];
    }
    unsigned int v23 = [v22 shouldLog];
    if ([v22 shouldLogToDisk]) {
      int v24 = v23 | 2;
    }
    else {
      int v24 = v23;
    }
    uint64_t v25 = [v22 OSLogObject];
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_INFO)) {
      v24 &= 2u;
    }
    if (v24)
    {
      int v101 = 138412546;
      id v102 = (id)objc_opt_class();
      __int16 v103 = 2112;
      id v104 = v7;
      id v26 = v102;
      LODWORD(v91) = 22;
      id v90 = &v101;
      int v27 = (void *)_os_log_send_and_compose_impl();

      id v14 = &syslog_ptr;
      if (!v27)
      {
LABEL_23:

        [*(id *)(a1 + 48) addObject:v13];
        LOBYTE(v12) = 0;
        goto LABEL_104;
      }
      uint64_t v25 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v27, 4, &v101, v91);
      free(v27);
      id v90 = (int *)v25;
      SSFileLog();
    }

    goto LABEL_23;
  }
LABEL_104:
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) && v19)
  {
    id v73 = objc_msgSend(objc_alloc((Class)v14[333]), "initWithLongLong:", objc_msgSend(v19, "persistentID"));
    if (v12)
    {
      id v74 = [v19 persistentID];
      id v75 = [v7 kind];
      id v76 = +[ScratchManager directoryPathForDownloadID:v74 kind:v75 createIfNeeded:1];
      id v77 = [v76 stringByAppendingPathComponent:@"iTunesMetadata.plist"];

      [v7 writeToFile:v77 options:0 error:0];
      [*(id *)(a1 + 72) removeObject:v73];

LABEL_120:
      goto LABEL_121;
    }
    int v78 = +[SSLogConfig sharedDaemonConfig];
    if (!v78)
    {
      int v78 = +[SSLogConfig sharedConfig];
    }
    unsigned int v79 = objc_msgSend(v78, "shouldLog", v90);
    if ([v78 shouldLogToDisk]) {
      int v80 = v79 | 2;
    }
    else {
      int v80 = v79;
    }
    char v81 = [v78 OSLogObject];
    if (!os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT)) {
      v80 &= 2u;
    }
    if (v80)
    {
      unsigned int v82 = objc_opt_class();
      int v101 = 138412546;
      id v102 = v82;
      __int16 v103 = 2112;
      id v104 = v7;
      id v99 = v7;
      id v83 = v13;
      uint64_t v84 = a1;
      id v85 = v17;
      __int16 v86 = v19;
      id v87 = a4;
      id v88 = v82;
      LODWORD(v91) = 22;
      uint64_t v89 = (void *)_os_log_send_and_compose_impl();

      a4 = v87;
      uint64_t v19 = v86;
      unsigned int v17 = v85;
      a1 = v84;
      int v13 = v83;
      id v7 = v99;

      if (!v89)
      {
LABEL_119:

        [*(id *)(a1 + 72) addObject:v73];
        goto LABEL_120;
      }
      char v81 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v89, 4, &v101, v91);
      free(v89);
      SSFileLog();
    }

    goto LABEL_119;
  }
LABEL_121:

  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) ^ 1;
}

void sub_1001A13D8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [v5 valueForProperty:@"asset_type"];
  unsigned int v4 = [v3 isEqualToString:SSDownloadAssetTypeMedia];

  if (v4) {
    [v5 setValue:*(void *)(a1 + 32) forProperty:@"protection_type"];
  }
}

void sub_1001A1A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001A1A50(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(a1 + 32) finishDownloadWithID:a2 finalPhase:SSDownloadPhaseCanceled];
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) ^ 1;
}

void sub_1001A1D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1001A1D90(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, unsigned char *a5)
{
  id result = [*a3 doubleValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v8;
  *a5 = 1;
  return result;
}

void sub_1001A1F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1001A1F64(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  [v9 setBatchIdentifier:*(void *)(a1 + 64)];
  id v7 = [*(id *)(a1 + 32) _addEntityForPurchase:v9 managerIdentifier:*(void *)(a1 + 72) orderIdentifier:*(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
  if (v7)
  {
    uint64_t v8 = [v9 valueForDownloadProperty:SSDownloadPropertyStorePreorderIdentifier];
    if ([v9 createsDownloads] && !objc_msgSend(v8, "longLongValue")) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 32) _addPlaceholderDownloadForPurchase:v9 clientIdentifier:*(void *)(a1 + 40)];
    }
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
  }
  *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = *(double *)(a1 + 80)
                                                              + *(double *)(*(void *)(*(void *)(a1 + 48) + 8)
                                                                          + 24);
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) ^ 1;
}

void sub_1001A30DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,char a25)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

void sub_1001A31CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    id v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  id v6 = [v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    int v7 = v5;
  }
  else {
    int v7 = v5 & 2;
  }
  if (!v7) {
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  int v11 = 138543362;
  uint64_t v12 = v8;
  LODWORD(v10) = 12;
  id v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v11, v10);
    free(v9);
    SSFileLog();
LABEL_12:
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  dispatch_semaphore_signal(WeakRetained);
}

id sub_1001A3360(uint64_t a1)
{
  return [*(id *)(a1 + 32) _postMetricsEventForError:*(void *)(a1 + 40)];
}

void sub_1001A3A04(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3)
    {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    id v6 = [v3 OSLogObject];
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      v5 &= 2u;
    }
    if (v5)
    {
      *(_DWORD *)uint64_t v10 = 138543618;
      *(void *)&void v10[4] = objc_opt_class();
      *(_WORD *)&v10[12] = 2114;
      *(void *)&v10[14] = v2;
      id v7 = *(id *)&v10[4];
      LODWORD(v9) = 22;
      uint64_t v8 = (void *)_os_log_send_and_compose_impl();

      if (!v8)
      {
LABEL_13:

        goto LABEL_14;
      }
      id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v10, v9, *(_OWORD *)v10, *(void *)&v10[16]);
      free(v8);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
}

void sub_1001A3BA0(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = +[SSLogConfig sharedDaemonConfig];
    if (!v3)
    {
      id v3 = +[SSLogConfig sharedConfig];
    }
    unsigned int v4 = [v3 shouldLog];
    if ([v3 shouldLogToDisk]) {
      int v5 = v4 | 2;
    }
    else {
      int v5 = v4;
    }
    id v6 = [v3 OSLogObject];
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      v5 &= 2u;
    }
    if (v5)
    {
      *(_DWORD *)uint64_t v10 = 138543618;
      *(void *)&void v10[4] = objc_opt_class();
      *(_WORD *)&v10[12] = 2114;
      *(void *)&v10[14] = v2;
      id v7 = *(id *)&v10[4];
      LODWORD(v9) = 22;
      uint64_t v8 = (void *)_os_log_send_and_compose_impl();

      if (!v8)
      {
LABEL_13:

        goto LABEL_14;
      }
      id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v10, v9, *(_OWORD *)v10, *(void *)&v10[16]);
      free(v8);
      SSFileLog();
    }

    goto LABEL_13;
  }
LABEL_14:
}

id sub_1001A4C94(uint64_t a1)
{
  id result = objc_alloc_init(*(Class *)(a1 + 32));
  qword_100401FE8 = (uint64_t)result;
  return result;
}

uint64_t sub_1001A4D64(uint64_t result)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(_DWORD *)(*(void *)(result + 32) + 8);
  return result;
}

void sub_1001A4E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001A4E68(uint64_t a1, uint64_t a2)
{
}

void sub_1001A4E78(uint64_t a1)
{
}

void sub_1001A4E84(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _wifiInterfaceName];
  if (v2)
  {
    id v3 = v2;
    uint64_t v9 = 0;
    int v4 = getifaddrs(&v9);
    int v5 = v9;
    if (v4)
    {
      if (!v9) {
        return;
      }
LABEL_12:
      freeifaddrs(v5);
      return;
    }
    if (v9)
    {
      do
      {
        if (v5->ifa_addr->sa_family == 2)
        {
          id v6 = [objc_alloc((Class)NSString) initWithUTF8String:v5->ifa_name];
          if ([v6 isEqualToString:v3])
          {

            id v7 = objc_alloc((Class)NSString);
            v8.s_addr = *(_DWORD *)&v5->ifa_addr->sa_data[2];
            *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [v7 initWithUTF8String:inet_ntoa(v8)];
          }
        }
        int v5 = v5->ifa_next;
      }
      while (v5);
      int v5 = v9;
      if (v9) {
        goto LABEL_12;
      }
    }
  }
}

uint64_t sub_1001A4FF4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  int v2 = *(_DWORD *)(result + 40);
  if (*(_DWORD *)(v1 + 8) != v2)
  {
    uint64_t v3 = result;
    *(_DWORD *)(v1 + 8) = v2;
    unsigned int v4 = [*(id *)(result + 32) _wifiClientTypeForManagerType:*(unsigned int *)(*(void *)(result + 32) + 8)];
    id v5 = +[SSLogConfig sharedDaemonConfig];
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig];
    }
    unsigned int v6 = [v5 shouldLog];
    if ([v5 shouldLogToDisk]) {
      int v7 = v6 | 2;
    }
    else {
      int v7 = v6;
    }
    if (!os_log_type_enabled((os_log_t)[v5 OSLogObject], OS_LOG_TYPE_DEBUG)) {
      v7 &= 2u;
    }
    if (v7)
    {
      int v11 = 138412546;
      uint64_t v12 = objc_opt_class();
      __int16 v13 = 1024;
      unsigned int v14 = v4;
      LODWORD(v10) = 18;
      uint64_t v8 = _os_log_send_and_compose_impl();
      if (v8)
      {
        uint64_t v9 = (void *)v8;
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, &v11, v10);
        free(v9);
        SSFileLog();
      }
    }
    if (*(void *)(*(void *)(v3 + 32) + 24))
    {
      return WiFiManagerClientSetType();
    }
    else
    {
      id result = WiFiManagerClientCreate();
      *(void *)(*(void *)(v3 + 32) + 24) = result;
    }
  }
  return result;
}

uint64_t DaemonPBFuseItemPreferenceReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        LODWORD(v6) = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v6) = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((unsigned __int16)(v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_50;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_52;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_50:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_52:
        uint64_t v33 = 32;
        goto LABEL_66;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0;
        }
LABEL_56:
        uint64_t v34 = 8;
        goto LABEL_61;
      case 3u:
        uint64_t v23 = PBReaderReadString();
        int v24 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v23;

        continue;
      case 4u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 40) |= 2u;
        while (2)
        {
          unint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v27 == -1 || v27 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27 + 1;
            v20 |= (unint64_t)(v28 & 0x7F) << v25;
            if (v28 < 0)
            {
              v25 += 7;
              BOOL v9 = v26++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0;
        }
LABEL_60:
        uint64_t v34 = 16;
LABEL_61:
        *(void *)(a1 + v34) = v20;
        continue;
      case 5u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 40) |= 4u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v31 == -1 || v31 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31 + 1;
      v14 |= (unint64_t)(v32 & 0x7F) << v29;
      if ((v32 & 0x80) == 0) {
        goto LABEL_63;
      }
      v29 += 7;
      BOOL v9 = v30++ >= 9;
      if (v9)
      {
        LODWORD(v14) = 0;
        goto LABEL_65;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_63:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v14) = 0;
    }
LABEL_65:
    uint64_t v33 = 36;
LABEL_66:
    *(_DWORD *)(a1 + v33) = v14;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1001A74B8(uint64_t a1, int a2, void *a3)
{
  id v4 = a3;
  unsigned int v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5)
  {
    unsigned int v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  char v8 = [v5 OSLogObject];
  if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
    v7 &= 2u;
  }
  if (!v7) {
    goto LABEL_11;
  }
  *(_DWORD *)char v12 = 138543874;
  *(void *)&void v12[4] = objc_opt_class();
  *(_WORD *)&v12[12] = 1024;
  *(_DWORD *)&v12[14] = a2;
  *(_WORD *)&v12[18] = 2112;
  *(void *)&v12[20] = v4;
  id v9 = *(id *)&v12[4];
  LODWORD(v11) = 28;
  int v10 = (void *)_os_log_send_and_compose_impl();

  if (v10)
  {
    char v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, v12, v11, *(_OWORD *)v12, *(_OWORD *)&v12[16]);
    free(v10);
    SSFileLog();
LABEL_11:
  }
}

void sub_1001A79C0(uint64_t a1, int a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  char v8 = +[SSLogConfig sharedDaemonConfig];
  if (!v8)
  {
    char v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  uint64_t v11 = [v8 OSLogObject];
  if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    v10 &= 2u;
  }
  if (!v10) {
    goto LABEL_11;
  }
  char v12 = objc_opt_class();
  id v13 = v12;
  [v6 componentsJoinedByString:@", "];
  int v16 = 138544130;
  unsigned int v17 = v12;
  __int16 v18 = 1024;
  int v19 = a2;
  __int16 v20 = 2114;
  id v21 = (id)objc_claimAutoreleasedReturnValue();
  __int16 v22 = 2112;
  id v23 = v7;
  LODWORD(v15) = 38;
  uint64_t v14 = (void *)_os_log_send_and_compose_impl();

  if (v14)
  {
    uint64_t v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v14, 4, &v16, v15);
    free(v14);
    SSFileLog();
LABEL_11:
  }
}

uint64_t sub_1001A84BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a3 == 0);
  }
  return result;
}

void sub_1001A89F0(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = +[SSLogConfig sharedDaemonConfig];
  if (!v3)
  {
    uint64_t v3 = +[SSLogConfig sharedConfig];
  }
  unsigned int v4 = [v3 shouldLog];
  if ([v3 shouldLogToDisk]) {
    int v5 = v4 | 2;
  }
  else {
    int v5 = v4;
  }
  id v6 = [v3 OSLogObject];
  if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
    v5 &= 2u;
  }
  if (!v5) {
    goto LABEL_11;
  }
  *(_DWORD *)int v10 = 138543618;
  *(void *)&void v10[4] = objc_opt_class();
  *(_WORD *)&v10[12] = 2112;
  *(void *)&v10[14] = v2;
  id v7 = *(id *)&v10[4];
  LODWORD(v9) = 22;
  char v8 = (void *)_os_log_send_and_compose_impl();

  if (v8)
  {
    id v6 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v8, 4, v10, v9, *(_OWORD *)v10, *(void *)&v10[16]);
    free(v8);
    SSFileLog();
LABEL_11:
  }
}

void sub_1001A8F54(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = +[SSLogConfig sharedDaemonConfig];
  id v7 = (void *)v6;
  if (v5)
  {
    if (!v6)
    {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    int v10 = [v7 OSLogObject];
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      v9 &= 2u;
    }
    if (!v9) {
      goto LABEL_22;
    }
    *(_DWORD *)__int16 v20 = 138543618;
    *(void *)&void v20[4] = objc_opt_class();
    *(_WORD *)&v20[12] = 2114;
    *(void *)&v20[14] = v5;
    id v11 = *(id *)&v20[4];
    LODWORD(v19) = 22;
    char v12 = (void *)_os_log_send_and_compose_impl();

    if (!v12) {
      goto LABEL_23;
    }
LABEL_21:
    int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, v20, v19, *(_OWORD *)v20, *(void *)&v20[16]);
    free(v12);
    SSFileLog();
LABEL_22:

    goto LABEL_23;
  }
  if (!v6)
  {
    id v7 = +[SSLogConfig sharedConfig];
  }
  unsigned int v13 = [v7 shouldLog];
  if ([v7 shouldLogToDisk]) {
    int v14 = v13 | 2;
  }
  else {
    int v14 = v13;
  }
  uint64_t v15 = [v7 OSLogObject];
  if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
    v14 &= 2u;
  }
  if (!v14)
  {

    goto LABEL_23;
  }
  int v16 = objc_opt_class();
  unsigned int v17 = *(void **)(a1 + 32);
  id v18 = v16;
  *(_DWORD *)__int16 v20 = 138543874;
  *(void *)&void v20[4] = v16;
  *(_WORD *)&v20[12] = 2048;
  *(void *)&v20[14] = [v17 count];
  *(_WORD *)&v20[22] = 1024;
  int v21 = a2;
  LODWORD(v19) = 28;
  char v12 = (void *)_os_log_send_and_compose_impl();

  if (v12) {
    goto LABEL_21;
  }
LABEL_23:
}

void sub_1001A9AD0(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 copyJobActivity];
  unsigned int v4 = [v3 clientID];

  if (!v4) {
    [v3 setClientID:*(void *)(a1 + 32)];
  }
  id v5 = [v3 storeAccountID];

  if (!v5)
  {
    uint64_t v6 = [*(id *)(a1 + 40) uniqueIdentifier];
    [v3 setStoreAccountID:v6];
  }
  id v7 = [v3 storeAccountName];

  if (!v7)
  {
    unsigned int v8 = [*(id *)(a1 + 40) accountName];
    [v3 setStoreAccountName:v8];
  }
  id v9 = [v13 databaseID];
  int v10 = *(void **)(a1 + 48);
  if (v9)
  {
    id v11 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v13 databaseID]);
    [v10 addActivity:v3 withIdentifier:v11];
  }
  else
  {
    id v12 = [v10 addActivity:v3];
  }
}

void sub_1001A9EBC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = +[SSLogConfig sharedDaemonConfig];
  if (!v9)
  {
    id v9 = +[SSLogConfig sharedConfig];
  }
  unsigned int v10 = [v9 shouldLog];
  if ([v9 shouldLogToDisk]) {
    int v11 = v10 | 2;
  }
  else {
    int v11 = v10;
  }
  id v12 = [v9 OSLogObject];
  if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    v11 &= 2u;
  }
  if (v11)
  {
    id v13 = objc_opt_class();
    id v14 = v13;
    [v7 componentsJoinedByString:@", "];
    int v18 = 138544130;
    uint64_t v19 = v13;
    __int16 v20 = 1024;
    int v21 = a2;
    __int16 v22 = 2114;
    id v23 = (id)objc_claimAutoreleasedReturnValue();
    __int16 v24 = 2112;
    id v25 = v8;
    LODWORD(v17) = 38;
    uint64_t v15 = (void *)_os_log_send_and_compose_impl();

    if (!v15) {
      goto LABEL_12;
    }
    id v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v18, v17);
    free(v15);
    SSFileLog();
  }

LABEL_12:
  uint64_t v16 = *(void *)(a1 + 32);
  if (v16) {
    (*(void (**)(uint64_t, uint64_t, id, id))(v16 + 16))(v16, a2, v7, v8);
  }
}

void sub_1001AA240(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = +[SSLogConfig sharedDaemonConfig];
  if (!v8)
  {
    id v8 = +[SSLogConfig sharedConfig];
  }
  unsigned int v9 = [v8 shouldLog];
  if ([v8 shouldLogToDisk]) {
    int v10 = v9 | 2;
  }
  else {
    int v10 = v9;
  }
  int v11 = [v8 OSLogObject];
  if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    v10 &= 2u;
  }
  if (!v10) {
    goto LABEL_11;
  }
  id v12 = objc_opt_class();
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = v12;
  [v6 componentsJoinedByString:@", "];
  int v17 = 138544130;
  int v18 = v12;
  __int16 v19 = 2114;
  uint64_t v20 = v13;
  __int16 v21 = 2112;
  id v22 = (id)objc_claimAutoreleasedReturnValue();
  __int16 v23 = 2112;
  id v24 = v7;
  LODWORD(v16) = 42;
  uint64_t v15 = (void *)_os_log_send_and_compose_impl();

  if (v15)
  {
    int v11 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v15, 4, &v17, v16);
    free(v15);
    SSFileLog();
LABEL_11:
  }
}

uint64_t sub_1001AA4D0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100401FF8;
  qword_100401FF8 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_1001AAA98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    if (a2)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = SSError();
      uint64_t v3 = *(void *)(a1 + 32);
    }
    id v6 = (id)v5;
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v3, a2);
  }
}

void sub_1001AAE04(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (state == 2)
  {
    uint64_t v13 = +[SSLogConfig sharedDaemonConfig];
    if (!v13)
    {
      uint64_t v13 = +[SSLogConfig sharedConfig];
    }
    unsigned int v14 = [v13 shouldLog];
    if ([v13 shouldLogToDisk]) {
      int v15 = v14 | 2;
    }
    else {
      int v15 = v14;
    }
    uint64_t v16 = [v13 OSLogObject];
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_INFO)) {
      v15 &= 2u;
    }
    if (v15)
    {
      int v17 = (objc_class *)objc_opt_class();
      int v18 = NSStringFromClass(v17);
      int v52 = 138412290;
      id v53 = v18;
      LODWORD(v51) = 12;
      __int16 v49 = &v52;
      __int16 v19 = (void *)_os_log_send_and_compose_impl();

      if (!v19) {
        goto LABEL_27;
      }
      uint64_t v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v52, v51);
      free(v19);
      __int16 v49 = (int *)v16;
      SSFileLog();
    }

LABEL_27:
    id v6 = objc_alloc_init((Class)ISLoadURLBagOperation);
    uint64_t v20 = +[ISOperationQueue mainQueue];
    id v56 = v6;
    __int16 v21 = +[NSArray arrayWithObjects:&v56 count:1];
    [v20 addOperations:v21 waitUntilFinished:1];

    if ([v6 success])
    {
      id v22 = [v6 URLBag];
      __int16 v23 = [v22 valueForKey:@"install-attribution-max-cache-age"];

      if (v23 && [v23 integerValue]) {
        uint64_t v24 = (uint64_t)[v23 integerValue];
      }
      else {
        uint64_t v24 = 30;
      }
      int v37 = objc_msgSend(v6, "URLBag", v49);
      uint64_t v33 = [v37 valueForKey:@"install-attribution-max-pingback-cache-age"];

      if (v33 && [v33 integerValue])
      {
        uint64_t v38 = (uint64_t)[v33 integerValue];
LABEL_58:

        goto LABEL_59;
      }
    }
    else
    {
      __int16 v23 = +[SSLogConfig sharediTunesStoreConfig];
      if (!v23)
      {
        __int16 v23 = +[SSLogConfig sharedConfig];
      }
      unsigned int v31 = objc_msgSend(v23, "shouldLog", v49);
      if ([v23 shouldLogToDisk]) {
        int v32 = v31 | 2;
      }
      else {
        int v32 = v31;
      }
      uint64_t v33 = [v23 OSLogObject];
      if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
        v32 &= 2u;
      }
      if (v32)
      {
        uint64_t v34 = objc_opt_class();
        int v52 = 138543362;
        id v53 = v34;
        id v35 = v34;
        LODWORD(v51) = 12;
        uint64_t v50 = &v52;
        id v36 = (void *)_os_log_send_and_compose_impl();

        if (!v36)
        {
          uint64_t v24 = 30;
          uint64_t v38 = 60;
LABEL_59:

          id v39 = +[PurchaseActionsManager sharedInstance];
          long long v40 = +[NSDate dateWithTimeIntervalSinceNow:(double)(-86400 * v24)];
          [v39 removeInstallAttributionParamsBeforeDate:v40];

          long long v41 = +[PurchaseActionsManager sharedInstance];
          long long v42 = +[NSDate dateWithTimeIntervalSinceNow:(double)(-86400 * v38)];
          [v41 removeNonPendingInstallAttributionPingbacksBeforeDate:v42];

          if (xpc_activity_set_state(v3, 5)) {
            goto LABEL_72;
          }
          unsigned int v30 = +[SSLogConfig sharedDaemonConfig];
          if (!v30)
          {
            unsigned int v30 = +[SSLogConfig sharedConfig];
          }
          unsigned int v43 = objc_msgSend(v30, "shouldLog", v50);
          if ([v30 shouldLogToDisk]) {
            int v44 = v43 | 2;
          }
          else {
            int v44 = v43;
          }
          int v45 = [v30 OSLogObject];
          if (!os_log_type_enabled(v45, OS_LOG_TYPE_INFO)) {
            v44 &= 2u;
          }
          if (v44)
          {
            id v46 = (objc_class *)objc_opt_class();
            __int16 v47 = NSStringFromClass(v46);
            int v52 = 138412290;
            id v53 = v47;
            LODWORD(v51) = 12;
            uint64_t v48 = (void *)_os_log_send_and_compose_impl();

            if (!v48) {
              goto LABEL_71;
            }
            int v45 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v48, 4, &v52, v51);
            free(v48);
            SSFileLog();
          }

          goto LABEL_71;
        }
        uint64_t v33 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v36, 4, &v52, v51);
        free(v36);
        uint64_t v50 = (int *)v33;
        SSFileLog();
      }
      uint64_t v24 = 30;
    }
    uint64_t v38 = 60;
    goto LABEL_58;
  }
  int v5 = state;
  if (state)
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v25 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v26 = v25 | 2;
    }
    else {
      int v26 = v25;
    }
    unint64_t v27 = [v6 OSLogObject];
    if (!os_log_type_enabled(v27, OS_LOG_TYPE_INFO)) {
      v26 &= 2u;
    }
    if (!v26)
    {

      goto LABEL_72;
    }
    char v28 = (objc_class *)objc_opt_class();
    NSStringFromClass(v28);
    int v52 = 138412546;
    id v53 = (id)objc_claimAutoreleasedReturnValue();
    __int16 v54 = 1024;
    int v55 = v5;
    LODWORD(v51) = 18;
    char v29 = (void *)_os_log_send_and_compose_impl();

    if (!v29) {
      goto LABEL_72;
    }
    unsigned int v30 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v29, 4, &v52, v51);
    free(v29);
    SSFileLog();
LABEL_71:

    goto LABEL_72;
  }
  id v6 = xpc_activity_copy_criteria(v3);
  if (!v6)
  {
    id v7 = +[SSLogConfig sharedDaemonConfig];
    if (!v7)
    {
      id v7 = +[SSLogConfig sharedConfig];
    }
    unsigned int v8 = [v7 shouldLog];
    if ([v7 shouldLogToDisk]) {
      int v9 = v8 | 2;
    }
    else {
      int v9 = v8;
    }
    int v10 = [v7 OSLogObject];
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
      v9 &= 2u;
    }
    if (v9)
    {
      int v11 = (objc_class *)objc_opt_class();
      NSStringFromClass(v11);
      int v52 = 138412290;
      id v53 = (id)objc_claimAutoreleasedReturnValue();
      LODWORD(v51) = 12;
      id v12 = (void *)_os_log_send_and_compose_impl();

      if (!v12)
      {
LABEL_15:

        xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
        goto LABEL_72;
      }
      int v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v52, v51);
      free(v12);
      SSFileLog();
    }

    goto LABEL_15;
  }
LABEL_72:
}

id sub_1001AB6E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) sendPendingPingbacks];
}

void sub_1001AB98C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (![v3 count])
  {
    +[PurchaseActionsManager unregisterInstallAttributionPingbackRetryTask];
    goto LABEL_24;
  }
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  id v34 = v3;
  id obj = v3;
  id v38 = [obj countByEnumeratingWithState:&v43 objects:v55 count:16];
  if (!v38) {
    goto LABEL_22;
  }
  uint64_t v37 = *(void *)v44;
  do
  {
    for (uint64_t i = 0; i != v38; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v44 != v37) {
        objc_enumerationMutation(obj);
      }
      int v5 = *(void **)(*((void *)&v43 + 1) + 8 * i);
      id v6 = objc_msgSend(v5, "appAdamId", v32);
      id v7 = [v6 copy];

      id v8 = objc_alloc((Class)NSMutableURLRequest);
      int v9 = [v5 pingbackUrl];
      id v10 = [v8 initWithURL:v9 cachePolicy:1 timeoutInterval:60.0];

      [v10 setHTTPMethod:@"POST"];
      v53[0] = @"ad-network-id";
      int v11 = [v5 adNetworkId];
      v54[0] = v11;
      v54[1] = v7;
      v53[1] = @"app-id";
      v53[2] = @"campaign-id";
      id v12 = [v5 campaignId];
      v54[2] = v12;
      v53[3] = @"transaction-id";
      uint64_t v13 = [v5 transactionId];
      v54[3] = v13;
      v53[4] = @"attribution-signature";
      unsigned int v14 = [v5 attributionSignature];
      v54[4] = v14;
      int v15 = +[NSDictionary dictionaryWithObjects:v54 forKeys:v53 count:5];

      id v42 = 0;
      uint64_t v16 = +[NSJSONSerialization dataWithJSONObject:v15 options:1 error:&v42];
      id v17 = v42;
      if (v17)
      {
        int v18 = +[SSLogConfig sharedDaemonConfig];
        if (!v18)
        {
          int v18 = +[SSLogConfig sharedConfig];
        }
        unsigned int v19 = [v18 shouldLog];
        if ([v18 shouldLogToDisk]) {
          v19 |= 2u;
        }
        uint64_t v20 = [v18 OSLogObject];
        if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          v19 &= 2u;
        }
        if (v19)
        {
          __int16 v21 = objc_opt_class();
          int v47 = 138543874;
          uint64_t v48 = v21;
          __int16 v49 = 2112;
          id v50 = v7;
          __int16 v51 = 2114;
          id v52 = v17;
          id v36 = v17;
          id v22 = v10;
          id v23 = v7;
          uint64_t v24 = v15;
          unsigned int v25 = v16;
          uint64_t v26 = a1;
          id v27 = v21;
          LODWORD(v33) = 32;
          int v32 = &v47;
          char v28 = (void *)_os_log_send_and_compose_impl();

          a1 = v26;
          uint64_t v16 = v25;
          int v15 = v24;
          id v7 = v23;
          id v10 = v22;
          id v17 = v36;

          if (v28)
          {
            uint64_t v20 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v28, 4, &v47, v33);
            free(v28);
            int v32 = (int *)v20;
            SSFileLog();
            goto LABEL_17;
          }
        }
        else
        {
LABEL_17:
        }
        [*(id *)(*(void *)(a1 + 32) + 8) removeInstallAttributionPingbackForApp:v7];
        goto LABEL_20;
      }
      [v10 setHTTPBody:v16];
      [v10 setValue:@"App Store" forHTTPHeaderField:@"User-Agent"];
      [v10 setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
      BOOL v29 = (uint64_t)[v5 retryCount] + 1 >= *(void *)(a1 + 40);
      unsigned int v30 = +[NSURLSession sharedSession];
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472;
      v39[2] = sub_1001ABEB8;
      v39[3] = &unk_1003A9070;
      v39[4] = *(void *)(a1 + 32);
      id v40 = v7;
      BOOL v41 = v29;
      unsigned int v31 = [v30 dataTaskWithRequest:v10 completionHandler:v39];

      [v31 resume];
LABEL_20:
    }
    id v38 = [obj countByEnumeratingWithState:&v43 objects:v55 count:16];
  }
  while (v38);
LABEL_22:

  id v3 = v34;
LABEL_24:
}

void sub_1001ABEB8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (!v9)
  {
    uint64_t v18 = *(void *)(a1 + 40);
    unsigned int v19 = *(void **)(*(void *)(a1 + 32) + 8);
    goto LABEL_16;
  }
  id v10 = +[SSLogConfig sharedDaemonConfig];
  if (!v10)
  {
    id v10 = +[SSLogConfig sharedConfig];
  }
  unsigned int v11 = [v10 shouldLog];
  if ([v10 shouldLogToDisk]) {
    int v12 = v11 | 2;
  }
  else {
    int v12 = v11;
  }
  uint64_t v13 = [v10 OSLogObject];
  if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
    v12 &= 2u;
  }
  if (v12)
  {
    unsigned int v14 = objc_opt_class();
    uint64_t v15 = *(void *)(a1 + 40);
    *(_DWORD *)id v22 = 138543874;
    *(void *)&void v22[4] = v14;
    *(_WORD *)&v22[12] = 2112;
    *(void *)&v22[14] = v15;
    *(_WORD *)&v22[22] = 2114;
    id v23 = v9;
    id v16 = v14;
    LODWORD(v21) = 32;
    uint64_t v20 = v22;
    id v17 = (void *)_os_log_send_and_compose_impl();

    if (!v17) {
      goto LABEL_13;
    }
    uint64_t v13 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v17, 4, v22, v21, *(_OWORD *)v22, *(void *)&v22[16], v23);
    free(v17);
    uint64_t v20 = v13;
    SSFileLog();
  }

LABEL_13:
  uint64_t v18 = *(void *)(a1 + 40);
  unsigned int v19 = *(void **)(*(void *)(a1 + 32) + 8);
  if (*(unsigned char *)(a1 + 48))
  {
LABEL_16:
    objc_msgSend(v19, "removeInstallAttributionPingbackForApp:", v18, v20);
    goto LABEL_17;
  }
  [v19 incrementPingbackRetryCountForApp:v18];
LABEL_17:
}

void sub_1001AC1E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (state != 2)
  {
    int v5 = state;
    if (!state)
    {
      id v6 = xpc_activity_copy_criteria(v3);
      if (!v6)
      {
        id v7 = +[SSLogConfig sharedDaemonConfig];
        if (!v7)
        {
          id v7 = +[SSLogConfig sharedConfig];
        }
        unsigned int v8 = [v7 shouldLog];
        if ([v7 shouldLogToDisk]) {
          int v9 = v8 | 2;
        }
        else {
          int v9 = v8;
        }
        id v10 = [v7 OSLogObject];
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          v9 &= 2u;
        }
        if (v9)
        {
          unsigned int v11 = (objc_class *)objc_opt_class();
          NSStringFromClass(v11);
          int v33 = 138412290;
          id v34 = (id)objc_claimAutoreleasedReturnValue();
          LODWORD(v32) = 12;
          int v12 = (void *)_os_log_send_and_compose_impl();

          if (!v12)
          {
LABEL_15:

            xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
            goto LABEL_50;
          }
          id v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v12, 4, &v33, v32);
          free(v12);
          SSFileLog();
        }

        goto LABEL_15;
      }
LABEL_50:

      goto LABEL_51;
    }
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v27 = [v6 shouldLog];
    if ([v6 shouldLogToDisk]) {
      int v28 = v27 | 2;
    }
    else {
      int v28 = v27;
    }
    BOOL v29 = [v6 OSLogObject];
    if (!os_log_type_enabled(v29, OS_LOG_TYPE_INFO)) {
      v28 &= 2u;
    }
    if (!v28)
    {

      goto LABEL_50;
    }
    unsigned int v30 = (objc_class *)objc_opt_class();
    NSStringFromClass(v30);
    int v33 = 138412546;
    id v34 = (id)objc_claimAutoreleasedReturnValue();
    __int16 v35 = 1024;
    int v36 = v5;
    LODWORD(v32) = 18;
    uint64_t v26 = (void *)_os_log_send_and_compose_impl();

    if (!v26) {
      goto LABEL_50;
    }
    goto LABEL_47;
  }
  uint64_t v13 = +[SSLogConfig sharedDaemonConfig];
  if (!v13)
  {
    uint64_t v13 = +[SSLogConfig sharedConfig];
  }
  unsigned int v14 = [v13 shouldLog];
  if ([v13 shouldLogToDisk]) {
    int v15 = v14 | 2;
  }
  else {
    int v15 = v14;
  }
  id v16 = [v13 OSLogObject];
  if (!os_log_type_enabled(v16, OS_LOG_TYPE_INFO)) {
    v15 &= 2u;
  }
  if (v15)
  {
    id v17 = (objc_class *)objc_opt_class();
    uint64_t v18 = NSStringFromClass(v17);
    int v33 = 138412290;
    id v34 = v18;
    LODWORD(v32) = 12;
    unsigned int v31 = &v33;
    unsigned int v19 = (void *)_os_log_send_and_compose_impl();

    if (!v19) {
      goto LABEL_27;
    }
    id v16 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v19, 4, &v33, v32);
    free(v19);
    unsigned int v31 = (int *)v16;
    SSFileLog();
  }

LABEL_27:
  uint64_t v20 = +[PurchaseActionsManager sharedInstance];
  [v20 sendPendingPingbacks];

  if (!xpc_activity_set_state(v3, 5))
  {
    id v6 = +[SSLogConfig sharedDaemonConfig];
    if (!v6)
    {
      id v6 = +[SSLogConfig sharedConfig];
    }
    unsigned int v21 = objc_msgSend(v6, "shouldLog", v31);
    if ([v6 shouldLogToDisk]) {
      int v22 = v21 | 2;
    }
    else {
      int v22 = v21;
    }
    id v23 = [v6 OSLogObject];
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_INFO)) {
      v22 &= 2u;
    }
    if (!v22) {
      goto LABEL_48;
    }
    uint64_t v24 = (objc_class *)objc_opt_class();
    unsigned int v25 = NSStringFromClass(v24);
    int v33 = 138412290;
    id v34 = v25;
    LODWORD(v32) = 12;
    uint64_t v26 = (void *)_os_log_send_and_compose_impl();

    if (!v26) {
      goto LABEL_50;
    }
LABEL_47:
    id v23 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v26, 4, &v33, v32);
    free(v26);
    SSFileLog();
LABEL_48:

    goto LABEL_50;
  }
LABEL_51:
}

void sub_1001ACAAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001ACAD0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _handleBackgroundTaskEvent:v4];
}

void sub_1001ACCE4(uint64_t a1)
{
  if (![*(id *)(*(void *)(a1 + 32) + 40) operationCount])
  {
    uint64_t v24 = a1;
    uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
    if (!v2)
    {
      uint64_t v2 = +[SSLogConfig sharedConfig];
    }
    unsigned int v3 = [v2 shouldLog];
    if ([v2 shouldLogToDisk]) {
      int v4 = v3 | 2;
    }
    else {
      int v4 = v3;
    }
    int v5 = [v2 OSLogObject];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
      int v6 = v4;
    }
    else {
      int v6 = v4 & 2;
    }
    if (v6)
    {
      id v7 = objc_opt_class();
      unsigned int v8 = *(void **)(*(void *)(v24 + 32) + 56);
      id v9 = v7;
      *(_DWORD *)id location = 138412546;
      *(void *)&location[4] = v7;
      __int16 v33 = 2048;
      id v34 = [v8 count];
      LODWORD(v23) = 22;
      int v22 = location;
      id v10 = (void *)_os_log_send_and_compose_impl();

      if (v10)
      {
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, location, v23);
        unsigned int v11 = (unsigned char *)objc_claimAutoreleasedReturnValue();
        free(v10);
        int v22 = v11;
        SSFileLog();
      }
    }
    else
    {
    }
    id v12 = objc_alloc_init((Class)NSMutableDictionary);
    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    id v13 = *(id *)(*(void *)(v24 + 32) + 56);
    id v14 = [v13 countByEnumeratingWithState:&v27 objects:v31 count:16];
    if (v14)
    {
      uint64_t v15 = *(void *)v28;
      do
      {
        for (uint64_t i = 0; i != v14; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v28 != v15) {
            objc_enumerationMutation(v13);
          }
          id v17 = *(void **)(*((void *)&v27 + 1) + 8 * i);
          uint64_t v18 = objc_msgSend(v17, "sourceApplicationIdentifier", v22);
          if (v18) {
            unsigned int v19 = (__CFString *)v18;
          }
          else {
            unsigned int v19 = &stru_1003B9B00;
          }
          uint64_t v20 = [v12 objectForKey:v19];
          id v21 = v20;
          if (v20)
          {
            [v20 addObject:v17];
          }
          else
          {
            id v21 = objc_alloc_init((Class)NSMutableArray);
            [v21 addObject:v17];
            [v12 setObject:v21 forKey:v19];
          }
        }
        id v14 = [v13 countByEnumeratingWithState:&v27 objects:v31 count:16];
      }
      while (v14);
    }

    objc_initWeak((id *)location, *(id *)(v24 + 32));
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    void v25[2] = sub_1001AD084;
    void v25[3] = &unk_1003A90E8;
    objc_copyWeak(&v26, (id *)location);
    void v25[4] = *(void *)(v24 + 32);
    [v12 enumerateKeysAndObjectsUsingBlock:v25];
    objc_destroyWeak(&v26);
    objc_destroyWeak((id *)location);
  }
}

void sub_1001AD060(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1001AD084(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [[MediaSocialStatusPollOperation alloc] initWithStatusPollRequests:v6];
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  unsigned int v11 = sub_1001AD198;
  id v12 = &unk_1003A90C0;
  objc_copyWeak(&v14, (id *)(a1 + 40));
  id v8 = v6;
  id v13 = v8;
  [(MediaSocialStatusPollOperation *)v7 setResponseBlock:&v9];
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "addOperation:", v7, v9, v10, v11, v12);

  objc_destroyWeak(&v14);
}

void sub_1001AD180(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001AD198(uint64_t a1, void *a2)
{
  unsigned int v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _finishRequests:*(void *)(a1 + 32) withResponses:v4];
}

void sub_1001AD54C(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v31 objects:v43 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v32;
    uint64_t v29 = a1;
    do
    {
      id v7 = 0;
      id v30 = v5;
      do
      {
        if (*(void *)v32 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v31 + 1) + 8 * (void)v7);
        id v9 = *(void **)(a1 + 40);
        uint64_t v10 = [v8 activityIdentifier];
        unsigned int v11 = [v9 objectForKey:v10];

        if (v11)
        {
          double Current = CFAbsoluteTimeGetCurrent();
          [v8 postCreateTime];
          double v14 = v13;
          [v8 pollingDuration];
          double v16 = v14 + v15;
          if (Current <= v16)
          {
            if ([v11 result] == (id)4) {
              goto LABEL_20;
            }
          }
          else
          {
            id v17 = +[SSLogConfig sharedDaemonConfig];
            if (!v17)
            {
              id v17 = +[SSLogConfig sharedConfig];
            }
            unsigned int v18 = [v17 shouldLog];
            if ([v17 shouldLogToDisk]) {
              v18 |= 2u;
            }
            unsigned int v19 = [v17 OSLogObject];
            if (!os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
              v18 &= 2u;
            }
            if (v18)
            {
              uint64_t v20 = objc_opt_class();
              int v35 = 138413058;
              int v36 = v20;
              __int16 v37 = 2112;
              id v38 = v8;
              __int16 v39 = 2048;
              double v40 = Current;
              __int16 v41 = 2048;
              double v42 = v16;
              uint64_t v21 = v6;
              id v22 = v3;
              id v23 = v2;
              id v24 = v20;
              LODWORD(v28) = 42;
              long long v27 = &v35;
              unsigned int v25 = (void *)_os_log_send_and_compose_impl();

              id v2 = v23;
              id v3 = v22;
              uint64_t v6 = v21;
              a1 = v29;

              if (v25)
              {
                unsigned int v19 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v25, 4, &v35, v28);
                free(v25);
                long long v27 = (int *)v19;
                SSFileLog();
                goto LABEL_17;
              }
            }
            else
            {
LABEL_17:
            }
            [v11 setResult:5];
            id v5 = v30;
LABEL_20:
            objc_msgSend(*(id *)(*(void *)(a1 + 48) + 56), "removeObject:", v8, v27);
          }
          [v2 addObject:v11];
        }

        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v31 objects:v43 count:16];
    }
    while (v5);
  }

  if (*(unsigned char *)(a1 + 56) && [*(id *)(*(void *)(a1 + 48) + 56) count])
  {
    *(CFAbsoluteTime *)(*(void *)(a1 + 48) + 32) = CFAbsoluteTimeGetCurrent()
                                                     + *(double *)(*(void *)(a1 + 48) + 48);
    [*(id *)(a1 + 48) _addBackgroundTaskJob];
  }
  id v26 = [*(id *)(a1 + 48) delegate];
  if (objc_opt_respondsToSelector()) {
    [v26 pollingCoordinator:*(void *)(a1 + 48) didPollWithResponses:v2];
  }
}

void sub_1001ADB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001ADB88(uint64_t a1, uint64_t a2)
{
}

void sub_1001ADB98(uint64_t a1)
{
}

void sub_1001ADBA4(uint64_t a1, void *a2)
{
  id v4 = -[DownloadEntity initWithPersistentID:inDatabase:]([DownloadEntity alloc], "initWithPersistentID:inDatabase:", objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "applicationHandle"), "downloadID"), objc_msgSend(a2, "database"));
  id v3 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", @"bundle_id", 0);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [[Download alloc] initWithDatabaseEntity:v4 properties:v3];
}

void sub_1001AF044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x1001AE6DCLL);
  }
  _Unwind_Resume(exception_object);
}

intptr_t sub_1001AF0B4(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 40);
  *(_DWORD *)double v13 = 138412802;
  *(void *)&void v13[4] = v6;
  *(_WORD *)&v13[12] = 2048;
  *(void *)&v13[14] = v7;
  *(_WORD *)&v13[22] = 2112;
  uint64_t v14 = v8;
  id v9 = v6;
  LODWORD(v12) = 32;
  uint64_t v10 = (void *)_os_log_send_and_compose_impl();

  if (v10)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, v13, v12, *(_OWORD *)v13, *(void *)&v13[16], v14);
    free(v10);
    SSFileLog();
LABEL_11:
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

intptr_t sub_1001AF25C(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1001AF620(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    id v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    int v6 = v4;
  }
  else {
    int v6 = v4 & 2;
  }
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  int v19 = 134218242;
  uint64_t v20 = v7;
  __int16 v21 = 2112;
  uint64_t v22 = v8;
  LODWORD(v16) = 22;
  id v9 = (void *)_os_log_send_and_compose_impl();

  if (v9)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, 4, &v19, v16);
    free(v9);
    SSFileLog();
LABEL_12:
  }
  id v10 = objc_alloc((Class)NSOrderedSet);
  unsigned int v11 = +[NSNumber numberWithLongLong:*(void *)(a1 + 40)];
  id v12 = [v10 initWithObject:v11];

  double v13 = +[DownloadsDatabase downloadsDatabase];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1001AF854;
  v17[3] = &unk_1003A5648;
  id v18 = v12;
  id v14 = v12;
  id v15 = [v13 modifyUsingTransactionBlock:v17];
}

id sub_1001AF854(uint64_t a1, void *a2)
{
  return [a2 resetDownloadsWithIdentifiers:*(void *)(a1 + 32)];
}

uint64_t sub_1001AF860()
{
  uint64_t v0 = SBSApplicationTerminationAssertionCreateWithError();
  if (v0)
  {
    id v1 = (const void *)v0;
    SBSApplicationTerminationAssertionInvalidate();
    CFRelease(v1);
  }
  return 1;
}

void sub_1001B0328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B0358(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001B0368(uint64_t a1)
{
}

void sub_1001B0370(uint64_t a1, void *a2, int a3)
{
  id v6 = a2;
  if (a3)
  {
    id v7 = v6;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    id v6 = v7;
  }
}

id sub_1001B0A0C(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1001B0A38(uint64_t a1)
{
}

uint64_t sub_1001B0A40(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(*(void *)(a1 + 32) + 24));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return _objc_release_x1(v2, v4);
}

uint64_t sub_1001B0B7C(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(*(void *)(a1 + 32) + 32));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return _objc_release_x1(v2, v4);
}

intptr_t sub_1001B0D24(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v2);
}

id sub_1001B0E00(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id result = *(id *)(a1 + 40);
  if (*(id *)(v3 + 24) != result)
  {
    id v4 = [result copy];
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 24);
    *(void *)(v5 + 24) = v4;

    id v7 = *(void **)(a1 + 32);
    return [v7 _reloadEventHandler];
  }
  return result;
}

id sub_1001B0EFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id result = *(id *)(a1 + 40);
  if (*(id *)(v3 + 32) != result)
  {
    id v4 = [result copy];
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 32);
    *(void *)(v5 + 32) = v4;

    id v7 = *(void **)(a1 + 32);
    return [v7 _reloadEventHandler];
  }
  return result;
}

void sub_1001B1024(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3 == &_xpc_error_connection_interrupted || v3 == &_xpc_error_connection_invalid)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6) {
      (*(void (**)(void))(v6 + 16))();
    }
  }
  else if (xpc_get_type(v3) == (xpc_type_t)&_xpc_type_connection)
  {
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_1001B1134;
    handler[3] = &unk_1003A9188;
    id v10 = *(id *)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    id v7 = v4;
    id v9 = v7;
    xpc_connection_set_event_handler((xpc_connection_t)v7, handler);
    xpc_connection_resume((xpc_connection_t)v7);
  }
}

uint64_t sub_1001B1134(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3 == &_xpc_error_connection_interrupted || v3 == &_xpc_error_connection_invalid)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (!v6) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (!v6) {
      goto LABEL_10;
    }
  }
  id v8 = v4;
  uint64_t v6 = (*(uint64_t (**)(void))(v6 + 16))();
  id v4 = v8;
LABEL_10:

  return _objc_release_x1(v6, v4);
}

uint64_t sub_1001B1300(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100402008;
  qword_100402008 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_1001B1614(uint64_t a1, BOOL a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = +[SSLogConfig sharedDaemonConfig];
  if (!v6)
  {
    uint64_t v6 = +[SSLogConfig sharedConfig];
  }
  unsigned int v7 = [v6 shouldLog];
  if ([v6 shouldLogToDisk]) {
    int v8 = v7 | 2;
  }
  else {
    int v8 = v7;
  }
  id v9 = [v6 OSLogObject];
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
    v8 &= 2u;
  }
  if (!v8) {
    goto LABEL_11;
  }
  *(_DWORD *)id v14 = 138412802;
  *(void *)&void v14[4] = objc_opt_class();
  *(_WORD *)&unsigned char v14[12] = 1024;
  *(_DWORD *)&v14[14] = a2;
  *(_WORD *)&v14[18] = 2112;
  *(void *)&v14[20] = v5;
  id v10 = *(id *)&v14[4];
  LODWORD(v13) = 28;
  id v11 = (void *)_os_log_send_and_compose_impl();

  if (v11)
  {
    id v9 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v11, 4, v14, v13, *(_OWORD *)v14, *(_OWORD *)&v14[16]);
    free(v11);
    SSFileLog();
LABEL_11:
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_dictionary_set_BOOL(reply, "0", a2);
  SSXPCDictionarySetCFObject();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
}

void sub_1001B3BB4(_Unwind_Exception *a1)
{
}

void sub_1001B44C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, int a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,__int16 a31,uint64_t a32)
{
  if (a2 != 1) {
    _Unwind_Resume(exception_object);
  }
  id v32 = objc_begin_catch(exception_object);
  long long v33 = +[SSLogConfig sharedDaemonConfig];
  if (!v33)
  {
    long long v33 = +[SSLogConfig sharedConfig];
  }
  unsigned int v34 = [v33 shouldLog];
  unsigned int v35 = [v33 shouldLogToDisk];
  int v36 = [v33 OSLogObject];
  __int16 v37 = v36;
  if (v35) {
    int v38 = v34 | 2;
  }
  else {
    int v38 = v34;
  }
  if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
    int v39 = v38;
  }
  else {
    int v39 = v38 & 2;
  }
  if (v39)
  {
    id v40 = (id)objc_opt_class();
    __int16 v41 = (void *)_os_log_send_and_compose_impl();

    if (!v41)
    {
LABEL_14:

      objc_end_catch();
      JUMPOUT(0x1001B447CLL);
    }
    __int16 v37 = +[NSString stringWithCString:v41 encoding:4];
    free(v41);
    SSFileLog();
  }

  goto LABEL_14;
}

void sub_1001B49AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B49D0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001B49E0(uint64_t a1)
{
}

void sub_1001B49E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a3);
  id v9 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  unsigned int v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
  id v8 = v5;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1001B4E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1001B4EB0(uint64_t a1)
{
  id v2 = objc_msgSend(objc_alloc((Class)ML3DatabaseImport), "initWithLibraryPath:trackData:playlistData:", +[ML3MusicLibrary sharedLibraryDatabasePath](ML3MusicLibrary, "sharedLibraryDatabasePath"), *(void *)(a1 + 32), 0);
  id v3 = +[MLMediaLibraryService sharedMediaLibraryService];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001B4F8C;
  v5[3] = &unk_1003A9228;
  uint64_t v8 = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 56);
  long long v6 = *(_OWORD *)(a1 + 40);
  long long v7 = v4;
  [v3 performImport:v2 fromSource:6 withProgressBlock:0 completionHandler:v5];
}

intptr_t sub_1001B4F8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v27 = 0;
    uint64_t v7 = objc_opt_class();
    id v8 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClasses:fromData:error:", +[NSSet setWithObjects:](NSSet, "setWithObjects:", v7, objc_opt_class(), 0), a4, &v27);
    if (v27)
    {
      id v9 = +[SSLogConfig sharedStoreServicesConfig];
      if (!v9) {
        id v9 = +[SSLogConfig sharedConfig];
      }
      unsigned int v10 = [v9 shouldLog];
      if ([v9 shouldLogToDisk]) {
        int v11 = v10 | 2;
      }
      else {
        int v11 = v10;
      }
      if (!os_log_type_enabled((os_log_t)[v9 OSLogObject], OS_LOG_TYPE_ERROR)) {
        v11 &= 2u;
      }
      if (v11)
      {
        uint64_t v12 = objc_opt_class();
        int v28 = 138543618;
        *(void *)uint64_t v29 = v12;
        *(_WORD *)&v29[8] = 2114;
        *(void *)&v29[10] = v27;
        LODWORD(v26) = 22;
        unsigned int v25 = &v28;
        uint64_t v13 = _os_log_send_and_compose_impl();
        if (v13)
        {
          id v14 = (void *)v13;
          id v15 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v13, 4, &v28, v26);
          free(v14);
          unsigned int v25 = (int *)v15;
          SSFileLog();
        }
      }
    }
    objc_msgSend(*(id *)(a1 + 40), "addObjectsFromArray:", v8, v25);
    id v16 = [v8 count];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v16 == [*(id *)(a1 + 48) count];
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 0;
  }
  id v17 = +[SSLogConfig sharedDaemonConfig];
  if (!v17) {
    id v17 = +[SSLogConfig sharedConfig];
  }
  unsigned int v18 = [v17 shouldLog];
  if ([v17 shouldLogToDisk]) {
    int v19 = v18 | 2;
  }
  else {
    int v19 = v18;
  }
  if (os_log_type_enabled((os_log_t)[v17 OSLogObject], OS_LOG_TYPE_INFO)) {
    int v20 = v19;
  }
  else {
    int v20 = v19 & 2;
  }
  if (v20)
  {
    int v21 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
    int v28 = 67109378;
    *(_DWORD *)uint64_t v29 = v21;
    *(_WORD *)&v29[4] = 2112;
    *(void *)&void v29[6] = a3;
    LODWORD(v26) = 18;
    uint64_t v22 = _os_log_send_and_compose_impl();
    if (v22)
    {
      id v23 = (void *)v22;
      +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v22, 4, &v28, v26);
      free(v23);
      SSFileLog();
    }
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

void sub_1001B7B6C(id a1)
{
  id v1 = objc_alloc_init(UserNotificationManager);
  uint64_t v2 = qword_100402018;
  qword_100402018 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1001B7C80(uint64_t a1)
{
  if (+[AMSUserNotification shouldHandleNotificationResponse:*(void *)(a1 + 32)])
  {
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = [*(id *)(a1 + 40) _bag];
    long long v4 = +[AMSUserNotification handleNotificationResponse:v2 bag:v3];

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1001B7EC0;
    v12[3] = &unk_1003A92A0;
    id v13 = *(id *)(a1 + 48);
    [v4 addFinishBlock:v12];

    return;
  }
  id v5 = +[SSLogConfig sharedDaemonConfig];
  if (!v5)
  {
    id v5 = +[SSLogConfig sharedConfig];
  }
  unsigned int v6 = [v5 shouldLog];
  if ([v5 shouldLogToDisk]) {
    int v7 = v6 | 2;
  }
  else {
    int v7 = v6;
  }
  id v8 = [v5 OSLogObject];
  if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    v7 &= 2u;
  }
  if (!v7) {
    goto LABEL_13;
  }
  int v14 = 138543362;
  id v15 = (id)objc_opt_class();
  id v9 = v15;
  LODWORD(v11) = 12;
  unsigned int v10 = (void *)_os_log_send_and_compose_impl();

  if (v10)
  {
    id v8 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, 4, &v14, v11);
    free(v10);
    SSFileLog();
LABEL_13:
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_1001B7EC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001B7FA8(uint64_t a1)
{
  uint64_t v2 = +[SSLogConfig sharedDaemonConfig];
  if (!v2)
  {
    uint64_t v2 = +[SSLogConfig sharedConfig];
  }
  unsigned int v3 = [v2 shouldLog];
  if ([v2 shouldLogToDisk]) {
    int v4 = v3 | 2;
  }
  else {
    int v4 = v3;
  }
  id v5 = [v2 OSLogObject];
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    v4 &= 2u;
  }
  if (!v4) {
    goto LABEL_11;
  }
  LODWORD(v13) = 138543362;
  *(void *)((char *)&v13 + 4) = objc_opt_class();
  id v6 = *(id *)((char *)&v13 + 4);
  LODWORD(v12) = 12;
  int v7 = (void *)_os_log_send_and_compose_impl();

  if (v7)
  {
    id v5 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, 4, &v13, v12, v13);
    free(v7);
    SSFileLog();
LABEL_11:
  }
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  unsigned int v10 = [*(id *)(a1 + 32) _bag];
  id v11 = +[AMSUserNotification notificationCenter:v9 didChangeSettings:v8 bag:v10];
}

uint64_t sub_1001B85A0(mach_port_t a1, uint64_t a2, int a3, void *a4, _DWORD *a5)
{
  int v15 = 1;
  uint64_t v16 = a2;
  int v17 = 16777472;
  int v18 = a3;
  NDR_record_t v19 = NDR_record;
  int v20 = a3;
  mach_port_t reply_port = mig_get_reply_port();
  v14.msgh_remote_port = a1;
  v14.msgh_local_port = reply_port;
  v14.msgh_bits = -2147478253;
  *(void *)&v14.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&v14);
    mach_port_t reply_port = v14.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&v14, 3, 0x38u, 0x40u, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(v14.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(v14.msgh_local_port);
    return v10;
  }
  if (v14.msgh_id == 71)
  {
    uint64_t v12 = 4294966988;
  }
  else if (v14.msgh_id == 1300)
  {
    if ((v14.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v12 = 4294966996;
      if (v15 == 1 && v14.msgh_size == 56 && !v14.msgh_remote_port && HIBYTE(v17) == 1)
      {
        int v13 = v18;
        if (v18 == v20)
        {
          *a4 = v16;
          *a5 = v13;
          return 0;
        }
      }
    }
    else if (v14.msgh_size == 36)
    {
      uint64_t v12 = 4294966996;
      if (HIDWORD(v16))
      {
        if (v14.msgh_remote_port) {
          uint64_t v12 = 4294966996;
        }
        else {
          uint64_t v12 = HIDWORD(v16);
        }
      }
    }
    else
    {
      uint64_t v12 = 4294966996;
    }
  }
  else
  {
    uint64_t v12 = 4294966995;
  }
  mach_msg_destroy(&v14);
  return v12;
}

uint64_t sub_1001B878C(uint64_t a1, uint64_t a2)
{
  if (unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8))) {
    __asm { BRAA            X8, X17 }
  }
  return 4294922295;
}

void sub_1001B8CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _DWORD *a15, uint64_t a16, int a17, int a18)
{
  *(void *)(v21 - 208) = v18;
  uint64_t v22 = *(void **)(v21 - 136);
  (*(void (**)(void))(v19 + 8 * (v20 ^ (v20 - 1871))))(*v22);
  void *v22 = a14;
  *a15 = a18;
  JUMPOUT(0x1001B8CE4);
}

uint64_t sub_1001B8D54@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((a1 * (v3 + (v1 ^ 0x335) + v4 + v1 - 687 - 981)) ^ v1)))();
}

uint64_t sub_1001B8D84()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((((((v0 - 410) | 0x119) ^ 0xFFFFFE3A) + v0 - 132) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1001B8DC4()
{
  unsigned int v3 = ((v0 - 82150104) & 0x4E585D9) - 437759 + *(_DWORD *)(v1 + 12) - 1044;
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 1123084877;
  BOOL v5 = v3 < 0xFFF95201;
  BOOL v6 = v3 > v4;
  if (v4 < 0xFFF95201 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((63 * !v6) ^ v0)))();
}

uint64_t sub_1001B8E4C@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v31 = *(void *)(v30 - 144);
  int v32 = v27 + 3;
  *(void *)(v30 - 144) = v31;
  uint64_t v33 = *(void *)(v31 - 0x3B66C28959A1DD8DLL);
  unsigned int v34 = ((2 * a9) & 0x7FAEFDDE) + (a9 ^ 0xBFD77EEF);
  *(unsigned char *)(v33 + v34 + (v32 ^ 0x40288008)) = -123;
  v34 += 1076396040;
  *(unsigned char *)(v33 + v34 + 266) = -2;
  *(unsigned char *)(v33 + v34 + 267) = 99;
  *(unsigned char *)(v33 + v34 + 268) = -80;
  *a1 += 4;
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((v32 + 554792680) | 0x5E208106) ^ (v29 + 950) ^ v32)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001B912C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 1569420586) & 0x5D8B77FA) + ((v1 + 247399078) & 0xF140FEEF) - 1659)
                                     * (v0 == 0)) ^ (v1 + 1549))))();
}

uint64_t sub_1001B918C()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1642909503;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 1529410671;
  BOOL v5 = v3 < 0x9E1330BD;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < (((v0 - 1000) | 0x234) ^ 0x9E132B7A) + 15 * (v0 ^ 0x395)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1050 * v6) ^ v0)))();
}

uint64_t sub_1001B921C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  HIDWORD(a25) = v25;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((((v26 - 1367) | 0x40) ^ (v26 - 1313)) * (v27 != 0)) | v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1001B925C()
{
  unsigned int v3 = v0 - 1793147892;
  BOOL v4 = (v0 - 1793147892) < 0xD808F856;
  unsigned int v5 = (((2 * v1) ^ 0xA5F7FD48) & (2 * (2 * v0 + 2049673060))) + ((2 * v0 + 2049673060) ^ 0x52FBFCFE);
  if (v4 != v5 - 2062746792 < 0xD808F856) {
    BOOL v6 = v5 - 2062746792 < 0xD808F856;
  }
  else {
    BOOL v6 = v5 - 2062746792 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((367 * v6) ^ v1)))();
}

uint64_t sub_1001B9304@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v30 = *(void *)(v29 - 144);
  int v31 = (v26 - 11) | 0x84;
  *(void *)(v29 - 144) = v30;
  uint64_t v32 = *(void *)(v30 - 0x3B66C28959A1DD8DLL);
  unsigned int v33 = (a9 ^ 0x6BDF3CEF) - 1809792925 + ((2 * a9) & 0xD7BE79DE);
  *(unsigned char *)(v32 + v33 + 686) = 0;
  *(unsigned char *)(v32 + v33 + v31) = 0;
  *(unsigned char *)(v32 + v33 + 688) = 0;
  *(unsigned char *)(v32 + v33 + 689) = 1;
  *a1 += 4;
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((v31 - 197) ^ (v28 + 143) ^ v31 ^ (v28 + 673) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1001B94C8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((3 * (v0 ^ 0xB7) - 52) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1001B9504()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 1189778007;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 67130881;
  BOOL v5 = v3 < (v0 ^ 0x61Eu) + 1189777478;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x46EA924F) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((49 * !v6) ^ v0)))();
}

uint64_t sub_1001B9584@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v30 = *(void *)(v29 - 144);
  uint64_t v31 = (v25 - 240);
  unint64_t v32 = v26 - ((v31 ^ 0xF99431D3CA63CD40) & (2 * v26)) + 0x7CCA18E9E531E62CLL;
  *(void *)(v29 - 144) = v30;
  unsigned int v33 = (unsigned char *)(*(void *)(v30 - 0x3B66C28959A1DD8DLL)
                + ((2 * a9) & 0x1F6BAFABALL)
                + (a9 ^ 0x67AF3FFFFB5D7D5DLL)
                - 0x67AF3FFFFB5D7D5DLL);
  *unsigned int v33 = HIBYTE(v32) ^ 0x7C;
  v33[1] = BYTE6(v32) ^ 0xCA;
  v33[2] = BYTE5(v32) ^ 0x18;
  void v33[3] = BYTE4(v32) ^ 0xE9;
  void v33[4] = ((v26 - ((v31 ^ 0xCA63CD40) & (2 * v26)) - 449714644) >> 24) ^ 0xE5;
  v33[5] = ((v26 - ((v31 ^ 0xCA63CD40) & (2 * v26)) - 449714644) >> 16) ^ 0x31;
  void v33[6] = ((unsigned __int16)(v26 - ((v31 ^ 0xCD40) & (2 * v26)) - 6612) >> 8) ^ 0xE6;
  void v33[7] = (v26 - ((v31 ^ 0x40) & (2 * v26)) + 44) ^ 0x2C;
  *a1 += 8;
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (int)(v31 ^ (v28 - 233) ^ (v28 + 1628) ^ ((v31 - 279) | 0x61C) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1001B98DC()
{
  *(void *)(v4 - 120) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * (((v1 == 0) ^ (v3 + v0)) & 1)) ^ v0)))();
}

uint64_t sub_1001B9920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v32 = v28 ^ 0x5A8;
  uint64_t v33 = (*(uint64_t (**)(void))(v29 + 8 * ((v28 ^ 0x5A8) + 1387)))();
  (*(void (**)(uint64_t, char *, void, void))(v29 + 8 * (v32 ^ 0xB5F)))(v33, (char *)*(&off_1003ADCF0 + (v32 ^ 0x3B3)) - 3, **(void **)(v31 - 136), *(unsigned int *)(*(void *)(v31 - 136) + 12));
  uint64_t v34 = (*(uint64_t (**)(void, void))(v29 + 8 * (v32 ^ 0xB49)))(*(void *)(v31 - 160), 0);
  *(void *)(v31 - 184) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v34 == 0) * ((v32 + 2134898241) & 0xFFF1FF0F ^ (v30 + 2))) ^ v32)))(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001B99F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v29 - 192) = a1;
  uint64_t v30 = (*(uint64_t (**)(void, void, void))(v28 + 8 * (v27 + 1358)))(*(void *)(v29 - 160), *(void *)(v29 - 192), 0);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((((v30 == 0) ^ (v27 - 47)) & 1) * (((v27 + 2147219409) ^ 0x7FFBFA0C) - 268)) ^ (v27 - 247)));
  *(void *)(v29 - 184) = *(void *)(v29 - 192);
  return v31(v30, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001B9A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  (*(void (**)(uint64_t, char *))(v37 + 8 * (v36 ^ 0x8B8)))(a1, (char *)*(&off_1003ADCF0 + v36 - 364) - 12);
  (*(void (**)(uint64_t))(v37 + 8 * (v36 + 1830)))(a1);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8 * (v36 ^ 0x8A7)))(a1, a36);
  uint64_t v39 = (void *)(*(uint64_t (**)(void))(v37 + 8 * (v36 + 1927)))();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)(((v39 == *(&off_1003ADCF0 + (v36 ^ 0x181))) * ((v36 + 497444452) & 0xE2599FFF ^ ((v36 ^ 0xA4) + 188))) ^ v36)))(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1001B9B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * (((a31 == (void)*(&off_1003ADCF0 + v32 - 284) - 8)
                                * (5 * (v32 ^ 0x160) + ((v32 + 2133981144) ^ 0x7F31FEA1))) ^ v32)))();
}

uint64_t sub_1001B9BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  (*(void (**)(uint64_t, uint64_t))(v37 + 8 * (v38 ^ 0x8A7)))(a28, a36);
  uint64_t v39 = (*(uint64_t (**)(void))(v37 + 8 * (v38 ^ 0x899)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (((v39 == v36) * ((((v38 - 1633085932) & 0x6156EF60) + 239) ^ 0x560)) ^ v38)))(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1001B9C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * ((((v33 ^ 0x7F31FE07) - 2133979208 + ((v33 - 8035729) & 0x7A97FF) - 2600) * (a31 == v31)) ^ v33)))();
}

uint64_t sub_1001B9C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  (*(void (**)(uint64_t, uint64_t))(v37 + 8 * (v38 + 1981)))(a28, a36);
  uint64_t v39 = (*(uint64_t (**)(void))(v37 + 8 * (v38 + 1955)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((228 * (((v38 + 52) ^ (v39 == v36)) & 1)) ^ v38)))(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1001B9CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 8 * (v33 + 295)))(a31, v32, v34 - 120);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (((((v33 + 24) ^ (v35 == 0)) & 1) * ((v33 - 339) ^ 0x684)) ^ v33));
  *(void *)(v34 - 200) = 0x50417EF54FC55D4FLL;
  return v36(v35, v37, v38, v39, v40, v41, v42, v43);
}

uint64_t sub_1001B9D74()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 623)))(24, 4101018099);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * (((v3 == 0) * (((v0 + 254851689) | 0x70013802) ^ 0x7F31FE07 ^ ((v0 - 658) | 0x330))) ^ v0));
  *(void *)(v2 - 200) = 0x50417EF54FC55D4FLL;
  return v4(v3, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1001B9E10(uint64_t a1)
{
  *(void *)(v3 - 176) = a1 + 0x50417EF54FC55D4FLL;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 917342576;
  *(_DWORD *)(a1 + 12) = 437737774;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 ^ 0xE31)))(4096, 1358311088);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 - 1) ^ (v5 == 0)) & 1) * (((v1 - 1786) | 0x482) - 1212)) ^ v1)))();
}

uint64_t sub_1001B9EA4()
{
  *(_DWORD *)(v3 + 8) = v1 + 4096;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 + 37) ^ (*(void *)(v4 - 120) > (unint64_t)(v1 - 917338480))) & 1)
                                * ((v0 - 1038699979) & 0x3DE94D9F ^ 0x491)) ^ v0)))();
}

uint64_t sub_1001B9F1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v28 - 200) = 0x50417EF54FC55D4FLL;
  *(void *)(v28 - 184) = *(void *)(v28 - 192);
  uint64_t v29 = *(void *)(v28 - 176);
  *(void *)(v28 - 176) = v29;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (int)(((a16 <= *(void *)(v29 - 0x50417EF54FC55D4FLL)) * ((a8 & 0xBE1EC43B ^ 0x289) + 326 + 3 * (a8 & 0xBE1EC43B ^ 0x14C) - 1996)) ^ a8 & 0xBE1EC43B ^ 0x289)))(*(void *)(v29 - 0x50417EF54FC55D4FLL), a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, v29, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001BA548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v22 = *(void *)(v21 - 176);
  *(_DWORD *)(v22 - 0x50417EF54FC55D47) = (*(_DWORD *)(v21 - 120) ^ 0x3EFDEB73)
                                          - 139485699
                                          + ((2 * *(_DWORD *)(v21 - 120)) & 0x7DFBD6E6);
  *(_DWORD *)(v22 - 0x50417EF54FC55D43) = 437737774;
  *(void *)(v21 - 152) = v20;
  uint64_t v23 = *(void *)(v21 - 184);
  *(void *)(v21 - 200) = v22;
  *(void *)(v21 - 192) = v23;
  return sub_1001BA5C8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1001BA5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  *(_DWORD *)(v38 - 168) = v36;
  (*(void (**)(void))(v37 + 8 * (v36 ^ 0x7F31F002)))(*(void *)(v38 - 192));
  (*(void (**)(uint64_t))(v37 + 8 * (v36 ^ 0x7F31F002)))(a28);
  return (*(uint64_t (**)(void))(v37 + 8 * ((165 * (a36 != 0)) ^ (v36 - 2133980878))))();
}

uint64_t sub_1001BA640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v36 = (*(uint64_t (**)(void))(v33 + 8 * v34))();
  uint64_t v37 = *(uint64_t (**)(uint64_t))(v33 + 8 * ((v32 - 504) ^ ((2 * (a31 == 0)) | (8 * (a31 == 0)))));
  *(void *)(v35 - 184) = v31;
  return v37(v36);
}

uint64_t sub_1001BA698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  (*(void (**)(uint64_t))(v34 + 8 * (*(_DWORD *)(v38 - 168) ^ v31)))(a31);
  uint64_t v39 = *(void *)(v38 - 136);
  *(void *)(v38 - 184) = v32;
  if (v35 == -45004)
  {
    *(void *)(v38 - 176) = v33;
    *(void *)(v38 - 128) = 0;
    *(_DWORD *)(v38 - 112) = 0;
    uint64_t v40 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v34 + 8 * (v37 ^ (v37 - 2278))))(*(unsigned int *)*(&off_1003ADCF0 + (v37 ^ (v37 + 8))), *(void *)v39, *(unsigned int *)(v39 + 12), v38 - 128, v38 - 112);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((1119 * ((v40 ^ 0x4FDFFACD) - 92409924 + ((2 * v40) & 0x9FBFF59A) == 1516104332)) ^ (v36 + v37 - 1898))))(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  }
  else if (v35)
  {
    return sub_1001BBC64();
  }
  else
  {
    return sub_1001BB648();
  }
}

uint64_t sub_1001BAD28()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v0 - v1 + 2076) ^ 0xFFFFF1B0) + v0 - v1 + 2076) * (v3 == 0)) ^ v0)))();
}

uint64_t sub_1001BAD5C()
{
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ (v3 - 1871))))(v2);
  return sub_1001BB5D8();
}

uint64_t sub_1001BAD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29,int a30,int a31)
{
  uint64_t v37 = (*(uint64_t (**)(void))(v32 + 8 * (v35 + v34)))(*(void *)(v31 - 0x50417EF54FC55D4FLL));
  *(void *)(v31 - 0x50417EF54FC55D4FLL) = a23;
  *a29 = a31;
  *(void *)(v36 - 152) = v33;
  return (*(uint64_t (**)(uint64_t))(v32
                                            + 8
                                            * ((117 * ((((v35 + v34 - 2228) ^ 0x42E) & 1) == 0)) ^ (v35 + v34 - 267))))(v37);
}

void sub_1001BAE14()
{
  *(void *)(v1 - 168) = v0;
  JUMPOUT(0x1001BAE48);
}

uint64_t sub_1001BAEA8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((233 * (((v0 == 0) ^ (v1 + 58) & 0x7F) & 1)) ^ v1)))();
}

uint64_t sub_1001BAEF0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((143 * ((v0 ^ (v1 < ((v0 + 2143287426) & 0xFF71FD5F ^ (v3 + 8)))) & 1)) ^ v0)))();
}

uint64_t sub_1001BAF3C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((472
                                * (v1 >= (((v0 ^ 0x5D2) + 649353352) & 0xD94BA6C6 ^ 0xFFFFFFFF80CE015FLL)
                                       + (((v0 ^ 0x5D2) + 2134766672) & 0xFFF3FDBF))) ^ v0 ^ 0x5D2)))();
}

uint64_t sub_1001BAFA8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * (v0 >= ((v1 + 86010557) | 0x7A118804u) - v3 + 32)) ^ v1)))();
}

uint64_t sub_1001BAFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = a2 + (v2 - 1);
  long long v8 = *(_OWORD *)(v7 - 31);
  uint64_t v9 = a1 + (v2 - 1);
  *(_OWORD *)(v9 - 15) = *(_OWORD *)(v7 - 15);
  *(_OWORD *)(v9 - 31) = v8;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v2 & 0xFFFFFFE0) == 32) * ((251 * (v3 ^ (v6 - 7))) ^ 0x2B8)) ^ (v5 + v3 - 1728))))();
}

void sub_1001BB054()
{
}

uint64_t sub_1001BB060()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 375861489) & 0x16672FFB) - 760) * (v0 != 0)) | v1)))();
}

uint64_t sub_1001BB098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v7 = v2 > 7 && (unint64_t)(a1 - a2) > 0x1F;
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v3 + 503442954) | 0x61300802) + ((v3 + 316) ^ (v5 - 877))) * v7) ^ v3)))();
}

uint64_t sub_1001BB0E8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 > 0x1F) * (((v1 - 805) | 0x424) ^ 0x540)) ^ v1)))();
}

uint64_t sub_1001BB11C@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((957
                                * (((((v3 + 1291863241) | 0x3231B007) - 82874673) & 0x85BE9E7F) - 1590 != (v2 & 0xFFFFFFE0))) ^ (v5 + ((v3 + 1291863241) | 0x3231B007) - 1811))))();
}

uint64_t sub_1001BB198()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v0 == v1) ^ (v4 + v2)) & 1) * (v2 - 1576)) ^ v2)))();
}

uint64_t sub_1001BB1C4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 576) | 0x120) ^ (v3 + 1584) ^ (v1 + 2142630713) & 0xFF7BFF77)
                                     * ((v0 & 0x18) == 0)) ^ (v1 - 543))))();
}

uint64_t sub_1001BB214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 - (v3 & 0xFFFFFFF8) == -8) * ((7 * (v4 ^ 0x55B)) ^ 0x8F)) ^ v4)))();
}

uint64_t sub_1001BB268(uint64_t a1, uint64_t a2)
{
  void *v3 = *v4;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * (((a2 == 0) * v5) ^ v2)))(a1, a2 + 8);
}

uint64_t sub_1001BB290()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 + 335607052) | 0x6B310100) ^ (v2 - 4719404) & 0x7F79F937 ^ 0x482) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1001BB2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + v2) = *(unsigned char *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1482 * (v2 + 1 == v3)) ^ (v6 + v4 - 1598))))();
}

uint64_t sub_1001BB318()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 == v1) ^ (v4 + v2 + 1)) & 1) * ((v2 - 515) ^ 0x4E3)) ^ v2)))();
}

uint64_t sub_1001BB350()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((407 * ((v0 & 0x18) == (((v1 + 588330028) | 0x5C20C001u) ^ 0x7F31F907))) ^ v1)))();
}

uint64_t sub_1001BB3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + ((((2 * (v4 ^ 0xF)) ^ 0x42E) - 879) ^ v2) + v3) = *(void *)(a2
                                                                                                 - 7
                                                                                                 + ((((2 * (v4 ^ 0xF)) ^ 0x42E) - 879) ^ v2)
                                                                                                 + v3);
  return (*(uint64_t (**)(void))(v5 + 8 * ((15 * ((v3 & 0xFFFFFFF8) - 8 != v2)) ^ v4 ^ 0xF)))();
}

void sub_1001BB3FC()
{
}

uint64_t sub_1001BB404()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ (v1 == v0))))();
}

uint64_t sub_1001BB424()
{
  return v0();
}

uint64_t sub_1001BB42C()
{
  uint64_t v1 = *(void *)(v0 - 168);
  *(_DWORD *)(v1 - 0x50417EF54FC55D47) = (*(_DWORD *)(v0 - 112) ^ 0x76FDD9F0)
                                         - 1079005312
                                         + ((2 * *(_DWORD *)(v0 - 112)) & 0xEDFBB3E0);
  *(_DWORD *)(v1 - 0x50417EF54FC55D43) = 437737774;
  return sub_1001BB5D8();
}

uint64_t sub_1001BB49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v5 + v3 - 643) ^ (2 * (v6 != 0)))))();
}

uint64_t sub_1001BB4C8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 == 0x50417EF54FC55D4FLL) ^ (v0 ^ (v3 + 28))) & 1)
                                * ((v0 - 956) ^ 0x2F)) ^ v0)))();
}

uint64_t sub_1001BB514@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((a1 + 1244690586) | 0x35018005) - 2133981210)
                                * (*(void *)(v2 - 0x50417EF54FC55D4FLL) == 0)) ^ a1)))();
}

uint64_t sub_1001BB570()
{
  void *v2 = 0;
  *(_DWORD *)(v4 - 0x50417EF54FC55D47) = 917342576;
  *(_DWORD *)(v4 - 0x50417EF54FC55D43) = 437737774;
  uint64_t v5 = (*(uint64_t (**)(void *))(v3 + 8 * (v0 + v1)))(v2);
  return sub_1001BB5D8(v5);
}

uint64_t sub_1001BB5D8()
{
  uint64_t v6 = (*(uint64_t (**)(void, void, void))(v2 + 8 * (v0 ^ (v4 - 2286))))(*(unsigned int *)*(&off_1003ADCF0 + (v0 ^ (v4 + 18))), *(void *)(v5 - 128), *(unsigned int *)(v5 - 112));
  BOOL v7 = *(uint64_t (**)(uint64_t))(v2 + 8 * ((417 * (v3 == 0)) ^ (v0 - 2133980316)));
  *(void *)(v5 - 200) = v1;
  return v7(v6);
}

uint64_t sub_1001BB648()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v4 - 200) == 0x50417EF54FC55D4FLL) * ((v0 - v3 + 2195) ^ 0x97C)) ^ (v2 + v0 - 1993))))();
}

uint64_t sub_1001BB698()
{
  uint64_t v4 = *(void *)(v3 - 200);
  int v5 = *(_DWORD *)(v4 - 0x50417EF54FC55D47);
  LODWORD(v4) = *(_DWORD *)(v4 - 0x50417EF54FC55D43) + 68792889;
  BOOL v6 = v4 < 0x1E310B63;
  BOOL v7 = v4 > v5 - 410811917;
  if (v6 != v5 - 410811917 < ((v2 + v0 - 2195) ^ 0x6100F264u)) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((67 * (((v0 ^ (v2 - 1)) ^ v7) & 1)) ^ v0)))();
}

uint64_t sub_1001BB750@<X0>(int a1@<W8>)
{
  BOOL v6 = (void *)(*(void *)(v5 - 200) - 0x50417EF54FC55D4FLL);
  int v7 = (*(unsigned __int8 *)(*v6 + (a1 - 437737774)) << 24) | (*(unsigned __int8 *)(*v6
                                                                                                + (a1 - 437737773)) << 16) | (*(unsigned __int8 *)(*v6 + (a1 - 437737772)) << 8);
  int v8 = *(unsigned __int8 *)(*v6 + (a1 - 437737771));
  *uint64_t v1 = a1 + 4;
  if (!(v7 | v8)) {
    return (*(uint64_t (**)(void))(v2 + 8 * ((53 * (*(void *)(v5 - 200) == 0x50417EF54FC55D4FLL)) ^ (v3 + v4 + 20))))();
  }
  if ((v7 | v8) == 0xFFFF4FFB) {
    return (*(uint64_t (**)(void))(v2
  }
                                + 8
                                * (((*((void *)*(&off_1003ADCF0 + (v4 ^ (v4 + 10))) + 1) == 0)
                                  * ((v3 + v4 - 374) ^ 0x725)) ^ (v3 + v4 - 771))))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((111 * ((v4 - 7) ^ 0x7F31F907)) ^ 0x360)
                                * (*(void *)(v5 - 200) == 0x50417EF54FC55D4FLL)) ^ (v3 + 2133980234))))();
}

uint64_t sub_1001BBBC8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*v1 == 0) ^ (a1 ^ (v4 + 7))) & 1)
                                * (v3 + ((a1 + 907035900) | 0x4921B102) - 2232)) ^ a1)))();
}

void sub_1001BBC18()
{
  (*(void (**)(void))(v4 + 8 * (v2 + v5)))();
  *uint64_t v1 = 0;
  _DWORD *v3 = 917342576;
  _DWORD *v0 = 437737774;
  (*(void (**)(void *))(v4 + 8 * (v2 + v5)))(v1);
  JUMPOUT(0x1001BBC60);
}

uint64_t sub_1001BBC64()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 + v1 - 1833) ^ (v0 == 0))))();
}

uint64_t sub_1001BBC84()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v1 - v4 + 1445046535) | 0x29105000) ^ 0xFFFFFED2) + v1 - v4 + 1631 - v3 + 608)
                                     * (*v0 == 0)) ^ (v1 - v4 + 1631))))();
}

void sub_1001BBCD8()
{
  *(void *)uint64_t v0 = 0;
  *(_DWORD *)(v0 + 8) = 1122647118;
  *(_DWORD *)(v0 + 12) = 0;
  JUMPOUT(0x1001BBD0CLL);
}

void sub_1001BBD20()
{
  uint64_t v0 = (uint64_t *)*(&off_1003ADCF0
                  + ((9 * ((dword_100401710 - dword_100401708) ^ 0x7D)) ^ byte_10031FAD0[byte_100320540[(9 * ((dword_100401710 - dword_100401708) ^ 0x7D))] ^ 0x92])
                  - 198);
  unsigned __int8 v1 = 9 * (*v0 ^ dword_100401710 ^ 0x7D);
  uint64_t v2 = (uint64_t)*(&off_1003ADCF0 + (byte_100320304[(byte_10031FEE4[v1 - 4] ^ 0xC8) - 4] ^ v1) - 130);
  uint64_t v3 = *v0 - (void)&v8 + *(void *)(v2 - 4);
  uint64_t v4 = 1787074057 * v3 - 0x6585E11862ED39BLL;
  unint64_t v5 = 1787074057 * (v3 ^ 0xEDEBC87B5EDF1A7DLL);
  uint64_t *v0 = v4;
  *(void *)(v2 - 4) = v5;
  LOBYTE(v2) = 9 * ((v5 + *(_DWORD *)v0) ^ 0x7D);
  BOOL v6 = (char *)*(&off_1003ADCF0
               + ((9 * (dword_100401708 ^ 0x7D ^ dword_100401710)) ^ byte_10031FBD0[byte_100320640[(9 * (dword_100401708 ^ 0x7D ^ dword_100401710))] ^ 0xF2])
               - 58)
     - 4;
  uint64_t v7 = *(void *)&v6[8
                    * ((29
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v6[8
                                                                        * (byte_10031FBD8[(byte_10032064C[v2 - 12] ^ 0xF2) - 8] ^ v2)
                                                                        + 17776])(24, 4101018099) != 0)) ^ 0x586)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001BBF00(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 378813108;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((46 * (v3 != 0)) ^ 0x3C8u)))();
}

uint64_t sub_1001BBF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(v13 - 244) = v12;
  *(void *)(v13 - 192) = v11;
  *(_DWORD *)(v13 - 224) = v8;
  *(_DWORD *)(v13 - 220) = v10;
  *(void *)(v13 - 208) = v9;
  *(_DWORD *)(v5 + 8) = v6 + 4096;
  mach_msg_header_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                       + 8
                                                                                       * ((43 * (((v5 == 0) ^ 0xE7) & 1)) ^ 0x4D2));
  *(void *)(v13 - 200) = 0x3972785B6BCAF92ALL;
  return v14(a1, a2, a3, a4, a5, 3793274687);
}

uint64_t sub_1001BC000()
{
  int v3 = v0 & 0xEBD;
  unsigned int v4 = ((v3 - 428) ^ 0x81BC0EF4) + *(_DWORD *)(v1 + 12);
  unsigned int v5 = *(_DWORD *)(v1 + 8) + 1797771605;
  BOOL v6 = v4 < (((v3 - 1164) | 0x2E0) ^ 0x81BC0EF0);
  BOOL v7 = v4 > v5;
  if (v6 != v5 < 0x81BC0C09) {
    BOOL v8 = v6;
  }
  else {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((111 * v8) ^ v3)))(v1 + 8);
}

uint64_t sub_1001BC08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (((((v16 == 0) ^ (a6 + v15 + 7)) & 1) * (v15 ^ 0x319)) ^ v15));
  *(void *)(v18 - 200) = 0x3972785B6BCAF92ALL;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a1);
}

uint64_t sub_1001BC0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  int v23 = (a20 << ((v20 ^ (a6 + 100)) + 101)) - 757626216;
  unsigned int v24 = ((2 * v23) & 0x2FAFF5F8) + (v23 ^ 0x97D7FAFC);
  if ((a20 + 26154070) < 0x18234F06 != v24 - 2142546934 < 0x18234F06) {
    BOOL v25 = v24 - 2142546934 < 0x18234F06;
  }
  else {
    BOOL v25 = v24 - 2142546934 > a20 + 26154070;
  }
  return (*(uint64_t (**)(void))(v21 + 8 * (((2 * !v25) | (16 * !v25)) ^ (v22 + v20 - 2003))))();
}

uint64_t sub_1001BC1A0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((((v2 - 24) ^ 0xE218C73F) * (v0 == 0)) ^ 0x66B)))();
}

uint64_t sub_1001BC1E0@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v2 + 8 * (int)(a1 ^ 0xE218CF80)))(v1);
  return v3;
}

void sub_1001BF834(unint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 > 0xFFFFFFFFFFFFFFEFLL && a2 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001BF8A0(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 18520))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((120 * v3) ^ 0x599u)))();
}

uint64_t sub_1001BF8EC(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 35853729;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((103 * (v3 != 0)) ^ 0x137)))();
}

uint64_t sub_1001BF95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(void *)(v35 - 152) = v34 + 0x1F534F2566915141;
  *(_DWORD *)(v34 + 8) = v31 + 4096;
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)(((((v34 == 0) ^ (v29 + 102)) & 1) * (((v29 - 316339610) ^ 0xED250A23) - 321)) ^ (v29 + 1540)));
  *(void *)(v35 - 168) = (char *)*(&off_1003ADCF0 + v29 - 298) - 8;
  *(void *)(v35 - 200) = 0x2B2216E748EAFB5FLL;
  *(void *)(v35 - 144) = v34;
  return v36(a1, a2, a3, a4, a5, a6, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           v30,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           v32);
}

uint64_t sub_1001BFA0C()
{
  int v3 = v0 & 0x17FB;
  unsigned int v4 = *(_DWORD *)(v2 + 12) + 255685404;
  unsigned int v5 = *(_DWORD *)(v2 + 8) + 219831671;
  BOOL v6 = v4 < 0xF3D7318;
  BOOL v7 = v4 > v5;
  if (v6 != v5 < 0xF3D7318) {
    BOOL v8 = v6;
  }
  else {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((!v8 * (((v3 - 647) | 0x629) ^ 0x70C)) ^ v3)))();
}

void sub_1001BFA90(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  *(void *)(v8 - 200) = 0x2B2216E748EAFB5FLL;
  uint64_t v9 = *v7;
  unsigned int v10 = ((a3 << (v4 ^ 0x3A)) & 0x4FFE7BFE) + (a3 ^ 0x27FF3DFF) - 671038975;
  *(unsigned char *)(*v7 + v10) = 0;
  *(unsigned char *)(v9 + v10 + 1) = 0;
  *(unsigned char *)(v9 + v10 + 2) = 0;
  *(unsigned char *)(v9 + v10 + 3) = 1;
  *v3 += 4;
  *(void *)(v8 - 160) = v6;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001BFDD0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((v0 - 137) ^ 0x9A3 ^ (v0 + 1825921279) & 0x932A9FFF) * (v2 == 0)) ^ (v0 - 119))))();
}

uint64_t sub_1001BFE20()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) - 1129964345;
  unsigned int v4 = *(_DWORD *)(v2 + 8) - 1165818078;
  BOOL v5 = v3 < 0xBCA61CC3;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v0 + 522693193) & 0xE0D84DFF ^ 0xBCA61CBC)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((89 * v6) ^ v0)))();
}

uint64_t sub_1001BFEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((((v28 == 0) ^ (v25 - 119)) & 1) * ((v25 - 1975) ^ 0x9E)) ^ (v25 - 1975)));
  *(void *)(v29 - 160) = v27;
  return v30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1001BFF0C()
{
  int v3 = ((v1 ^ 0x329) - 334) | 0x130;
  unsigned int v4 = (v3 ^ 0x1425AD21) + v0;
  unsigned int v5 = ((v3 - 1536722772) & (2 * (2 * v0 - 71707458))) + ((2 * v0 - 71707458) ^ 0xD233BDF3);
  if (v4 < 0x1648C3B6 != v5 + 1142228419 < 0x1648C3B6) {
    BOOL v6 = v5 + 1142228419 < 0x1648C3B6;
  }
  else {
    BOOL v6 = v5 + 1142228419 > v4;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((110 * !v6) ^ v3)))();
}

uint64_t sub_1001BFFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v30 = *(void *)(v29 - 152);
  int v31 = (v27 - 2030371456) & 0x790503BE;
  *(void *)(v29 - 152) = v30;
  uint64_t v32 = *(void *)(v30 - 0x1F534F2566915141);
  int v33 = ((2 * a9) & 0x57DFFDDE) + (a9 ^ 0x2BEFFEEF);
  *(unsigned char *)(v32 + v33 + (v31 ^ 0xD41000AF)) = 56;
  v33 -= 737148753;
  *(unsigned char *)(v32 + (v33 + 99)) = 91;
  *(unsigned char *)(v32 + (v33 + 100)) = 44;
  *(unsigned char *)(v32 + (v33 + 101)) = -24;
  *v26 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (int)((a7 + a8 + (v31 ^ 0x5E9) - 1111 - 1238) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1001C01AC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 ^ 0x440) + 931) ^ (39 * (v0 ^ 0x440))) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1001C01EC()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) + 2103532965;
  unsigned int v4 = *(_DWORD *)(v2 + 8) + 2067679232;
  BOOL v5 = v3 < (v0 ^ 0x7D615E20u);
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v0 - 373) | 0x42u) + 2103532371) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((1844 * v6) ^ v0)))();
}

uint64_t sub_1001C0274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  HIDWORD(a23) = v24;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((((v25 ^ 0x28) - 582) * (v27 != 0)) ^ v25)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1001C02B0()
{
  int v3 = 3 * (v1 ^ 0x2AC);
  unsigned int v4 = v0 - 1615262585 + v3;
  unsigned int v5 = (((2 * v0 - 71707458) << ((v3 + 75) ^ 0xA8)) & 0xA776EB70) + ((2 * v0 - 71707458) ^ 0xD3BB75B9);
  if (v4 < 0xA1DC2482 != v5 - 836718903 < 0xA1DC2482) {
    BOOL v6 = v5 - 836718903 < 0xA1DC2482;
  }
  else {
    BOOL v6 = v5 - 836718903 > v4;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((56 * !v6) ^ v3)))();
}

uint64_t sub_1001C0380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v29 = *(void *)(v28 - 152);
  int v30 = (v26 - 589) | 0x38A;
  *(void *)(v28 - 152) = v29;
  uint64_t v31 = *(void *)(v29 - 0x1F534F2566915141);
  unsigned int v32 = ((2 * a9) & 0x478E7FDE) + (a9 ^ 0x23C73FEF);
  unsigned int v33 = v32 + (v30 ^ 0xDC38C399);
  v32 -= 600260591;
  *(unsigned char *)(v31 + v32) = 0;
  *(unsigned char *)(v31 + v33) = 0;
  *(unsigned char *)(v31 + v32 + 2) = 0;
  *(unsigned char *)(v31 + v32 + 3) = 1;
  *v25 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (int)((((9 * (v30 ^ 0x33C)) ^ (a7 + 557)) + v30 - a7 + 1332) ^ v30)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1001C0560()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((((2 * v0) ^ 0xD60) - 312) | 0x618) ^ 0x684) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1001C05A0()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) + 1658655541;
  unsigned int v4 = *(_DWORD *)(v2 + 8) + ((v0 + 190) ^ 0x60B9FAD0);
  BOOL v5 = v3 < ((v0 - 1534) | 0x10Au) + 1658655107;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x62DD132D) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((3611 * v6) ^ v0)))();
}

uint64_t sub_1001C0624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  LODWORD(a23) = v23;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (((((2 * v24) ^ 0xF06) + ((v24 - 1704) | 0x509) - 1852) * (v26 == 0)) ^ v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1001C066C()
{
  unsigned int v3 = v0 - 1610165446;
  BOOL v4 = (v0 - 1610165446) < 0xA229E8D3;
  unsigned int v5 = ((2 * (2 * v0 - 71707458)) & 0xB677EFD4) + ((2 * v0 - 71707458) ^ ((v1 ^ 0x29A) - 616828732));
  if (v4 != v5 - 957484824 < 0xA229E8D3) {
    BOOL v6 = v5 - 957484824 < 0xA229E8D3;
  }
  else {
    BOOL v6 = v5 - 957484824 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((527 * v6) ^ v1)))();
}

uint64_t sub_1001C0710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v35 = *(void *)(v34 - 152);
  uint64_t v36 = (v32 + 20);
  *(void *)(v34 - 152) = v35;
  uint64_t v37 = *(void *)(v35 - 0x1F534F2566915141);
  uint64_t v38 = ((2 * a9) & 0x1CAB9FBB6) + (a9 ^ 0x7BAFA3BFE55CFDDBLL);
  *(unsigned char *)(v37 + v38 + (v36 ^ 0x84505C401AA3039BLL)) = -1;
  uint64_t v39 = v37 - 0x7BAFA3BFE55CFDDALL + v38;
  *(_WORD *)uint64_t v39 = -1;
  *(_DWORD *)(v39 + 2) = -1;
  *(unsigned char *)(v39 + 6) = (a31 - ((2 * a31) & 0x58) + 44) ^ 0x2C;
  *v31 += 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)((v36 - a7 + 1793) ^ (a8 + 46) ^ v36 ^ 0x571 ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1001C093C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(void *)(v10 - 128) = 0;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((a7 + ((v7 - 4851920) & 0xB47F2FBF) - 2216) * (v9 == 0)) ^ v7)))();
}

uint64_t sub_1001C0994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v31 = v27 - 796;
  uint64_t v32 = (*(uint64_t (**)(void))(v28 + 8 * ((v27 - 796) ^ 0x892)))();
  (*(void (**)(uint64_t, uint64_t, void, void))(v28 + 8 * (v31 + 1846)))(v32, *(void *)(v29 + 8 * (v31 - 430)) - 3, **(void **)(v30 - 144), *(unsigned int *)(*(void *)(v30 - 144) + 12));
  uint64_t v33 = (*(uint64_t (**)(void, void))(v28 + 8 * (v31 + 1868)))(*(void *)(v30 - 168), 0);
  *(void *)(v30 - 192) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((v33 == 0) * (v31 + (v31 ^ 0x7F) + 33)) ^ v31)))(v33, v34, v35, v36, v37, v38, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001C0A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v30 = (*(uint64_t (**)(void, uint64_t, void))(v27 + 8 * (v26 + 1848)))(*(void *)(v28 - 168), a1, 0);
  int v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((v30 == 0) ^ v26));
  *(void *)(v28 - 192) = a1;
  return v31(v30, v32, v33, v34, v35, v36, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1001C0AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v39 = v35 ^ 0x248;
  (*(void (**)(uint64_t, uint64_t))(v36 + 8 * (v39 + 1455)))(a1, *(void *)(v37 + 8 * (v39 - 869)) - 12);
  (*(void (**)(uint64_t))(v36 + 8 * (v39 + 1325)))(a1);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8 * (v39 ^ 0xAA8)))(a1, a35);
  uint64_t v40 = (*(uint64_t (**)(void))(v36 + 8 * (v39 ^ 0xA96)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)(((v40 != *(void *)(v37 + 8 * (v39 - 890))) * ((v39 - 1176667641) ^ 0xB9DD7D70 ^ (v39 - 1176667641) & 0x462282FC ^ 0x66)) ^ v39)))(v40, v41, v42, v43, v44, v45, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1001C0B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unsigned int v33 = (a8 + v30 - 1321618659) & 0x9A9128FD;
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 8 * (v30 + 2075)))(a29, v31, v32 - 128);
  int v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29
                                                                                                + 8
                                                                                                * (int)(((v34 == 0) * (v33 ^ 0x946)) ^ v30));
  *(void *)(v32 - 200) = 0x2B2216E748EAFB5FLL;
  return v35(v34, v36, v37, v38, v39, v40, 1271586048);
}

uint64_t sub_1001C0C18()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 54)))(24, 4101018099);
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                               + 8
                                                                                               * (((v3 != 0)
                                                                                                 * (((v0 - 2078269644) | 0x301503B6)
                                                                                                  + 1271583817)) ^ v0));
  *(void *)(v2 - 200) = 0x2B2216E748EAFB5FLL;
  return v4(v3, v5, v6, v7, v8, v9, 1271586048);
}

uint64_t sub_1001C0CAC(uint64_t a1)
{
  *(void *)(v3 - 176) = a1 + 0x2B2216E748EAFB5FLL;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 445517218;
  *(_DWORD *)(a1 + 12) = 661609844;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 54)))(4096, 1358311088);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v5 != 0) * ((v1 - 1723) ^ 0x27F)) ^ (v1 - 2070))))();
}

uint64_t sub_1001C0D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)(v9 + 8) = v8 + 4096;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * (((*(void *)(v10 - 128) > (unint64_t)(v8 - 445513122)) * ((5 * ((v6 | 0x21) ^ 0x22D)) ^ 0xB4C)) ^ (v6 | 0x21))))(a1, a2, a3, a4, a5, a6, 1271586048, 3023383487);
}

uint64_t sub_1001C0D98(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * (((((v4 == 0) ^ ((v3 ^ 7) + 59) ^ 0x69) & 1)
                                                       * ((((v3 ^ 0x707) - 1211718341) & 0x48395B7F) - 2080)) ^ v3 ^ 0x707)))(a1, a2);
}

uint64_t sub_1001C0DF8@<X0>(int a1@<W8>)
{
  int v5 = v2 - 108;
  unsigned int v6 = v1 + v3 + a1;
  int v7 = ((2 * ((a1 << (v5 ^ 0x60)) - 891034436)) & 0x3D1E9BCC) + (((a1 << (v5 ^ 0x60)) - 891034436) ^ 0x1E8F4DE7);
  if (v6 > 0xA80F72B4 != (v7 + 962674532) < 0x57F08D4B) {
    BOOL v8 = (v7 + 962674532) < 0x57F08D4B;
  }
  else {
    BOOL v8 = v7 + 962674532 > (v5 ^ 0x57F08E2A) + v6;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((172 * !v8) ^ v5)))(1025416140, 4227776443, 962674532);
}

uint64_t sub_1001C0EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * (int)(((a29 == (void)*(&off_1003ADCF0 + v30 - 117) - 8)
                                     * ((a8 + ((v30 + 376) | 0x191) - 1689) ^ (v30 - 1258295497) & 0xFF353BFF)) ^ v30)))();
}

uint64_t sub_1001C0F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8 * (v36 + 1435));
  *(void *)(v38 - 176) = v35;
  v39(a26, a35);
  uint64_t v40 = (*(uint64_t (**)(void))(v37 + 8 * (v36 ^ 0xA83)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)(((v40 == *(void *)(v38 - 176)) * (v36 - 553 + ((v36 + 1399813486) & 0xAC9087FB) + 966)) ^ v36)))(v40, v41, v42, v43, v44, v45, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1001C0FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(void))(v30 + 8 * (((a7 + ((v31 + 521) ^ (a8 - 753)) - 989) * (a29 == v29)) ^ v31)))();
}

uint64_t sub_1001C1004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  (*(void (**)(uint64_t, uint64_t))(v36 + 8 * (v35 + 1467)))(a26, a35);
  uint64_t v38 = (*(uint64_t (**)(void))(v36 + 8 * (v35 ^ 0xA63)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (((((v35 - 20) ^ (v38 == *(void *)(v37 - 176))) & 1) * ((v35 + 1550007276) ^ 0x5C633FBD)) ^ v35)))(v38, v39, v40, v41, v42, v43, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1001C1088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * (int)(((((a29 == v29) ^ (v31 + 52)) & 1)
                                     * (((v31 & 0xA39CC0FF) - 42599518) & 0xB6BF2FBF ^ (a8 - 85))) ^ v31 & 0xA39CC0FF)))();
}

uint64_t sub_1001C10F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  (*(void (**)(uint64_t, uint64_t))(v36 + 8 * (v35 + 1435)))(a26, a35);
  uint64_t v38 = (*(uint64_t (**)(void))(v36 + 8 * (v35 + 1409)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)(((v38 == *(void *)(v37 - 176)) * (((v35 + 1187161198) & 0xB93D58FB) + (v35 ^ 0x7D))) ^ v35)))(v38, v39, v40, v41, v42, v43, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1001C1174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * (int)((((((v29 ^ 0x319) + 248) | 0x211) ^ (a8 + 659) ^ ((v29 ^ 0x319) - 33706121) & 0xB6377BBF)
                                     * (a29 == v30)) ^ v29 ^ 0x319)))();
}

uint64_t sub_1001C11DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v38 = v35;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8 * (v36 ^ 0xABD)))(a26, a35);
  uint64_t v39 = (*(uint64_t (**)(void))(v37 + 8 * (v36 ^ 0xA83)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)(((v39 == v38) * ((v36 ^ 0x36A) + 1271586048 + ((v36 - 1119912850) & 0xF6F5ABBF) - 1392)) ^ v36)))(v39, v40, v41, v42, v43, v44, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1001C1284()
{
  uint64_t v4 = *(uint64_t (**)(void))(v1 + 8 * (int)((((v0 ^ 0xB43529A5) + 1271584009) * (v2 == 0)) ^ v0 ^ 0x25A));
  *(void *)(v3 - 200) = 0x2B2216E748EAFB5FLL;
  return v4();
}

uint64_t sub_1001C12E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  (*(void (**)(uint64_t))(v36 + 8 * (v37 ^ (a8 - 2239))))(v38);
  *(void *)(v39 - 200) = 0x2B2216E748EAFB5FLL;
  (*(void (**)(uint64_t))(v36 + 8 * (int)(v37 ^ 0xB43522BA)))(v35);
  (*(void (**)(uint64_t))(v36 + 8 * (v37 & 0x4240C905)))(a26);
  return (*(uint64_t (**)(void))(v36 + 8 * ((4033 * (a35 != 0)) ^ (v37 + 1271585819))))();
}

uint64_t sub_1001C16BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v34 = (*(uint64_t (**)(void))(v32 + 8 * v30))();
  uint64_t v35 = *(uint64_t (**)(uint64_t))(v32 + 8 * ((v29 - 1233) ^ (1982 * (a29 != 0))));
  *(void *)(v33 - 192) = v31;
  return v35(v34);
}

uint64_t sub_1001C1714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v34 & 0x88905)))(a29);
  *(void *)(v35 - 192) = v30;
  if (v32 == -45004)
  {
    *(void *)(v35 - 176) = v29;
    *(void *)(v35 - 120) = 0;
    *(_DWORD *)(v35 - 132) = 0;
    uint64_t v42 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v31 + 18736))(**(unsigned int **)(v33 + 64), **(void **)(v35 - 144), *(unsigned int *)(*(void *)(v35 - 144) + 12), v35 - 120, v35 - 132);
    int v43 = (v42 ^ 0x5B5FEEA9) - 285344800 + ((2 * v42) & 0xB6BFDD52) != 1516104332;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((v43 | (v43 << 6)) ^ 0x419)))(v42, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
  else if (v32)
  {
    return sub_1001C2A5C(v36, v37, v38, v39, v40, v41, 1271586048, 191);
  }
  else
  {
    return (*(uint64_t (**)(uint64_t))(v31
                                              + 8 * ((63 * (*(void *)(v35 - 200) == 0x2B2216E748EAFB5FLL)) ^ 0x29D)))(v36);
  }
}

uint64_t sub_1001C1E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = ((((v3 + 483) ^ 0x749) - 810) ^ 0x76B21497) + *(_DWORD *)(a3 - 0x2B2216E748EAFB53);
  unsigned int v6 = *(_DWORD *)(a3 - 0x2B2216E748EAFB57) - 2087492361;
  BOOL v7 = v5 < 0x9E217299;
  BOOL v8 = v5 > v6;
  if (v6 < 0x9E217299 != v7) {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((87 * !v8) ^ (v3 + 483))))();
}

uint64_t sub_1001C1F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 - 0x2B2216E748EAFB5FLL);
  int v8 = (*(unsigned __int8 *)(v7 + ((((v5 + 1353215190) & 0xAF578FFF) - 661607984) ^ (v5 + 790672959) & 0xD0DF4DDA) + v4) << 24) | (*(unsigned __int8 *)(v7 + (v4 - 661609843)) << 16) | (*(unsigned __int8 *)(v7 + (v4 - 661609842)) << 8) | *(unsigned __int8 *)(v7 + (v4 - 661609841));
  _DWORD *v3 = v4 + 4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((3178 * (v8 == 0)) ^ v5)))();
}

uint64_t sub_1001C1FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((86 * (v3 ^ 0x90C)) ^ 0x4A5) * (a3 != 0x2B2216E748EAFB5FLL)) | v3)))();
}

uint64_t sub_1001C2028(int a1)
{
  unsigned int v4 = ((((a1 + 1570025802) & 0xA26B4BBF) + 810) ^ 0x686C2B9) + v2;
  int v5 = ((v1 - 106596729) < 0x2114D3F3) ^ (v4 < 0x2114D3F3);
  BOOL v6 = v1 - 106596729 > v4;
  if (v5) {
    BOOL v6 = (v1 - 106596729) < 0x2114D3F3;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((92 * v6) ^ a1)))();
}

uint64_t sub_1001C20A8@<X0>(uint64_t a1@<X2>, int a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int *a15)
{
  int v21 = (*(unsigned __int8 *)(v17 + (v18 + v16 + 3)) << (v19 + 48)) | (*(unsigned __int8 *)(v17 + (v18 + v16 + 4)) << 16) | (*(unsigned __int8 *)(v17 + (v18 + v16 + 5)) << 8) | *(unsigned __int8 *)(v17 + (v18 + v16 + 6));
  *int v15 = v16 + 8;
  *a15 = v21;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (int)(((a2 + v19 - 591 + ((v19 - 188926185) & 0xBF77EFBF) - 2786) * (a1 != a3)) ^ (v19 - 810))))();
}

uint64_t sub_1001C213C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  BOOL v11 = *(void *)(*(void *)(v10 - 200) - 0x2B2216E748EAFB5FLL) == 0;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((v11 ^ (a8 + v8 + 103)) & 1 | (32
                                                                                * ((v11 ^ (a8 + v8 + 103)) & 1))) ^ v8)))();
}

uint64_t sub_1001C2184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  (*(void (**)(void))(v11 + 8 * (v10 ^ (a8 - 2239))))();
  *uint64_t v9 = 0;
  *(_DWORD *)(v8 - 0x2B2216E748EAFB57) = 445517218;
  *(_DWORD *)(v8 - 0x2B2216E748EAFB53) = 661609844;
  uint64_t v12 = (*(uint64_t (**)(void *))(v11 + 8 * (v10 + 1271586048)))(v9);
  return sub_1001C2A5C(v12, v13, v14, v15, v16, v17, 1271586048, 191);
}

uint64_t sub_1001C2208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27,int a28,int a29)
{
  unsigned int v33 = (a8 - 1337304249) & 0x9B807CF9;
  uint64_t v34 = (*(uint64_t (**)(void))(v30 + 8 * (a8 ^ (a8 - 2239))))(*(void *)(v29 - 0x2B2216E748EAFB5FLL));
  *(void *)(v29 - 0x2B2216E748EAFB5FLL) = a22;
  *a27 = a29;
  *(void *)(v32 - 160) = v31;
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * (int)(((v33 ^ 0x5C0) - 342) | v33)))(v34);
}

void sub_1001C22A0()
{
  *(void *)(v1 - 184) = v0;
  JUMPOUT(0x1001C22CCLL);
}

uint64_t sub_1001C233C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((v9 - 159553200) ^ 0xF67D6DC8 ^ (a8 - 449) ^ (v9 - 159553200) & 0xBDB7BBBF)
                                     * (v8 != 0)) ^ v9)))();
}

uint64_t sub_1001C2384@<X0>(uint64_t a1@<X0>, int a2@<W7>, uint64_t a3@<X8>)
{
  BOOL v7 = v3 < 8 || a1 - a3 < ((v4 - 2023158380) & 0x7896F5B7 ^ 0x5A3uLL);
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((v7 * ((v4 - 1133041272) & 0xF7BDFFFF ^ (a2 + 38))) ^ v4)))();
}

uint64_t sub_1001C23E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 + a8 + (v9 ^ 0x2E2) - 1889 - 2202) * (v8 > 0x1F)) ^ v9)))();
}

uint64_t sub_1001C2420@<X0>(_OWORD *a1@<X0>, int a2@<W6>, int a3@<W7>, _OWORD *a4@<X8>)
{
  long long v7 = a4[1];
  *a1 = *a4;
  a1[1] = v7;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((37 * (((v5 - a3 + 910) ^ 0x3AELL) == (v4 & 0xFFFFFFE0))) ^ (a2 + v5 - 618))))();
}

uint64_t sub_1001C2478()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 == 0) ^ (5 * (v1 ^ 0xEE))) & 1) * (v1 - 1908)) ^ v1)))();
}

uint64_t sub_1001C24AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v11 = v8 < ((((v9 - 2147212921) | 0x34310817) - a8 + 1057) ^ 0x429u);
  return (*(uint64_t (**)(void))(v10 + 8 * ((v11 | (4 * v11)) ^ v9)))();
}

uint64_t sub_1001C24F4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((14 * (v1 >= ((v0 + 178) ^ 0x4F3uLL))) | v0)))();
}

uint64_t sub_1001C252C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 >= a7 + ((v8 - 1128928468) & 0xF77F3BBF) - 2207) * (v8 ^ 0x4D5)) ^ v8)))();
}

uint64_t sub_1001C257C@<X0>(uint64_t a1@<X0>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v7 = (v4 - 1);
  long long v8 = *(_OWORD *)(a4 + v7 - 15);
  long long v9 = *(_OWORD *)(a4 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((633 * (2 * (v5 ^ (a3 - 299)) - 566 == (v4 & 0xFFFFFFE0))) ^ (a2 + v5 - 1147))))();
}

uint64_t sub_1001C25E4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x60D) - 1381) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1001C260C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * (int)((((v9 - 151669188) & 0xBD3F6FFF ^ (a8 - 950)) * ((v8 & 0x18) == 0)) ^ v9)))();
}

uint64_t sub_1001C264C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((3867 * (((27 * (v4 ^ 0x776u)) ^ 0x265) + v2 == (v3 & 0xFFFFFFF8))) ^ v4)))();
}

uint64_t sub_1001C269C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 386) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1001C26C4@<X0>(uint64_t a1@<X0>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + v3) = *(unsigned char *)(a3 + v3);
  return (*(uint64_t (**)(void))(v6 + 8 * ((29 * (v3 + 1 != v4)) | (a2 + v5 - 1695))))();
}

uint64_t sub_1001C26F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v10 - a7 + 1641) ^ (a8 + 941) ^ 0x4D9) * (v8 == v9)) ^ v10)))();
}

uint64_t sub_1001C272C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * ((711 * ((v8 & 0x18) == ((a8 + v9 + 1295515245) & 0xFE92D59E) - 1182)) ^ v9)))();
}

uint64_t sub_1001C2778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (v2 ^ 0xFFFFFDDB ^ ((v4 - 638) | 4)) + v3) = *(void *)(a2
                                                                                            - 7
                                                                                            + (v2 ^ 0xFFFFFDDB ^ ((v4 - 638) | 4))
                                                                                            + v3);
  return (*(uint64_t (**)(void))(v5 + 8 * ((726 * ((v3 & 0xFFFFFFF8) - 8 == v2)) ^ v4)))();
}

void sub_1001C27CC()
{
}

uint64_t sub_1001C27D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 ^ (a8 - 548) ^ (v10 - a7 + 2022)) * (v9 == v8)) ^ v10)))();
}

uint64_t sub_1001C2808()
{
  return v0();
}

uint64_t sub_1001C2810()
{
  uint64_t v2 = *(void *)(v1 - 184);
  *(_DWORD *)(v2 - 0x2B2216E748EAFB57) = (*(_DWORD *)(v1 - 132) ^ 0x7AAF7FB3)
                                         - 1612804625
                                         + ((2 * *(_DWORD *)(v1 - 132)) & 0xF55EFF66);
  *(_DWORD *)(v2 - 0x2B2216E748EAFB53) = 661609844;
  uint64_t v3 = v2;
  uint64_t v4 = (*(uint64_t (**)(void, void, void))(v0 + 18672))(mach_task_self_, *(void *)(v1 - 120), *(unsigned int *)(v1 - 132));
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 7448);
  *(void *)(v1 - 200) = v3;
  return v5(v4);
}

uint64_t sub_1001C2880@<X0>(uint64_t a1@<X0>, int a2@<W6>, uint64_t a3@<X8>)
{
  unsigned int v6 = v3 - 1;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a3 + v6);
  return (*(uint64_t (**)(void))(v5 + 8 * ((225 * (v6 == 0)) ^ (a2 + v4 - 423))))();
}

uint64_t sub_1001C28B4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 != 0x2B2216E748EAFB5FLL) | v0)))();
}

uint64_t sub_1001C28F0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((((a1 | 0xC9) - 1124648714) & 0xF73DEFFF) - 21) ^ (a1 | 0xC9) ^ 0xB4352976)
                                     * (*(void *)(v1 - 0x2B2216E748EAFB5FLL) == 0)) ^ (a1 | 0xC9))))();
}

void sub_1001C295C(int a1@<W8>)
{
  void *v2 = 0;
  *(_DWORD *)(v3 - 0x2B2216E748EAFB57) = 445517218;
  *(_DWORD *)(v3 - 0x2B2216E748EAFB53) = 661609844;
  (*(void (**)(void *))(v4 + 8 * (a1 ^ (v1 - 2239))))(v2);
  JUMPOUT(0x1001C29DCLL);
}

uint64_t sub_1001C2A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((a7 + v8 - 1976) | (32 * (((v10 == 0) ^ (3 * (v8 ^ (a8 - 65)))) & 1)))))();
}

uint64_t sub_1001C2A90@<X0>(int a1@<W6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((*v3 != 0) * (a1 + ((a2 + 607126217) | 0x900523B3) - 2187)) | a2)))();
}

void sub_1001C2AD0()
{
  (*(void (**)(void))(v1 + 8 * (v0 & 0x200CCFF)))();
  *(void *)uint64_t v2 = 0;
  *(_DWORD *)(v2 + 8) = 35853729;
  *(_DWORD *)(v2 + 12) = 0;
  JUMPOUT(0x1001C2B04);
}

void sub_1001C2B54()
{
  uint64_t v0 = (uint64_t)*(&off_1003ADCF0
                + ((9 * ((dword_100401710 + dword_100401730) ^ 0x7D)) ^ byte_10031FAD0[byte_100320540[(9 * ((dword_100401710 + dword_100401730) ^ 0x7D))] ^ 0x1A])
                - 159);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1003ADCF0
                + (byte_100320304[(byte_10031FEE4[(9 * ((dword_100401710 + v1) ^ 0x7D))
                                                                 - 4] ^ 0xC8)
                                                 - 4] ^ (9 * ((dword_100401710 + v1) ^ 0x7D)))
                - 130);
  unint64_t v3 = 1787074057 * ((*(void *)(v2 - 4) - v1 - (void)&v6) ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v0 - 4) = v3;
  *(void *)(v2 - 4) = v3;
  LOBYTE(v2) = 9 * ((v3 + *(_DWORD *)(v0 - 4)) ^ 0x7D);
  uint64_t v4 = (char *)*(&off_1003ADCF0
               + ((9 * ((dword_100401710 + dword_100401730) ^ 0x7D)) ^ byte_10031FAD0[byte_100320540[(9 * ((dword_100401710 + dword_100401730) ^ 0x7D))] ^ 0x92])
               - 183)
     - 4;
  uint64_t v5 = *(void *)&v4[8
                    * ((8
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v4[8
                                                                        * (byte_100320200[byte_10031FDE8[v2 - 8] ^ 0xF5] ^ v2)
                                                                        + 16592])(24, 4101018099) != 0)) | 0x740)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001C2D08(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 1640180093;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * (v3 == 0)) | (8 * (v3 == 0))) ^ 0x6C2u)))();
}

uint64_t sub_1001C2D5C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((15 * (((v0 == 0) ^ 0xED) & 1)) ^ 0x486u)))();
}

uint64_t sub_1001C2D94@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v3 + 8 * ((a1 & 0x36DFEF7) - 57533478)))(v1);
  return v2;
}

int *sub_1001C65B0(int *result)
{
  int v1 = 1607344658;
  unsigned int v2 = result[2] ^ (2052531167
                  * (((result | 0x5A1B0962) - result + (result & 0xA5E4F69D)) ^ 0x9F91BE4E));
  if (v2 - 1830816770 > 0x39
    || ((1 << ((*((unsigned char *)result + 8) ^ (-33
                                                           * (((result | 0x62)
                                                             - (_BYTE)result
                                                             + (result & 0x9D)) ^ 0x4E)))
               - 2)) & 0x3C8E3C03CE503CFLL) == 0)
  {
    unsigned int v4 = v2 - 1830818786;
    BOOL v5 = v4 > 0xD;
    int v6 = (1 << v4) & 0x203F;
    if (v5 || v6 == 0) {
      int v1 = 1607344657;
    }
  }
  *id result = v1;
  return result;
}

void sub_1001C6660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a4) {
    BOOL v7 = a5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v10 = v7 || a6 == 0 || a7 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001C6714(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, void *a6, _DWORD *a7)
{
  *a4 = 0;
  *a5 = 0;
  *a6 = 0;
  *a7 = 0;
  return (*(uint64_t (**)(void))(v7 + 8 * ((50 * (qword_100402090 == 0)) ^ 0x45Au)))();
}

uint64_t sub_1001C6774()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((4 * (*(void *)(v3 + 24) == 0)) | (8 * (*(void *)(v3 + 24) == 0))) ^ (v0 + v1 - 986))))();
}

uint64_t sub_1001C67A0()
{
  (*(void (**)(void))(v2 + 8 * (v1 + v0)))();
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 36) = 0;
  *(void *)uint64_t v3 = 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((4 * (*(void *)(v3 + 48) != 0)) | (16 * (*(void *)(v3 + 48) != 0)) | (v0 + v1 - 733))))();
}

uint64_t sub_1001C67E8()
{
  (*(void (**)(void))(v2 + 8 * (v1 ^ (v1 - 2221))))();
  *(void *)(v3 + ++*(void *)(*(void *)(result + 32) + 48) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((63 * (*(void *)(v3 + 64) == 0)) ^ (v0 + v1 - 1451))))();
}

uint64_t sub_1001C682C()
{
  *(_DWORD *)(v3 + 76) = 0;
  *(void *)(v3 + 40) = 0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v0 + v1 + 76)))(24, 4101018099);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8 * (((v4 == 0) * ((v1 ^ (v1 + 12)) - 980)) | (v0 + v1 - 1126))))(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1001C6944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 120617518;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8 * (v9 + 1303)))(4096, 1358311088);
  *(void *)a1 = v12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (int)(((v12 == 0) * ((2 * v9) ^ 0x186 ^ (v9 + 492302575) & 0xE2A80FBE ^ 0x2C5)) ^ v9)))(v12, v13, v14, v15, v16, v17, v18, v19, a9);
}

uint64_t sub_1001C69D0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + v0 - 1261) ^ (v0 - v4 + 1053)) * (v3 == 0)) | v0)))();
}

uint64_t sub_1001C6A04@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v2 + 8 * ((a1 - 1186) ^ (v1 - 2221))))(v3);
  return v4;
}

void sub_1001CA758()
{
  uint64_t v0 = (uint64_t)*(&off_1003ADCF0
                + (byte_100320200[byte_10031FDE8[(9
                                                                                                * ((dword_100401710
                                                                                                  + dword_100401728) ^ 0x7D))
                                                                              - 8] ^ 0x6E] ^ (9
                                                                                            * ((dword_100401710
                                                                                              + dword_100401728) ^ 0x7D)))
                + 15);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1003ADCF0
                + (byte_100320100[byte_10031FCE0[(9 * (v1 ^ dword_100401710 ^ 0x7D))] ^ 0x19] ^ (9 * (v1 ^ dword_100401710 ^ 0x7D)))
                - 39);
  uint64_t v3 = *(void *)(v2 - 4) - v1 - (void)&v8;
  unint64_t v4 = (1787074057 * v3) ^ 0xEDEBC87B5EDF1A7DLL;
  unint64_t v5 = 1787074057 * (v3 ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v0 - 4) = v4;
  *(void *)(v2 - 4) = v5;
  uint64_t v6 = (char *)*(&off_1003ADCF0
               + ((9 * ((dword_100401710 + dword_100401728) ^ 0x7D)) ^ byte_100320400[byte_10031FFE0[(9 * ((dword_100401710 + dword_100401728) ^ 0x7D))] ^ 0x81])
               - 132)
     - 4;
  uint64_t v7 = *(void *)&v6[8
                    * ((1009
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v6[8
                                                                        * ((9
                                                                                           * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0x7D)) ^ byte_100320100[byte_10031FCE0[(9 * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0x7D))] ^ 0xB5])
                                                                        + 17320])(24, 4101018099) != 0)) ^ 0x5F2)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001CA920(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 933984072;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((40 * (v3 == 0)) ^ 0x480u)))();
}

uint64_t sub_1001CA998()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 - v2 - 509) ^ v1 ^ (v3 + 1040) ^ 0xA3) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_1001CA9D4@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v3 + 8 * (a1 - 937701277)))(v1);
  return v2;
}

void sub_1001CD9F8(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1001CDA34@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

void sub_1001CDA4C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001CDAB8(void *a1, _DWORD *a2)
{
  *a1 = 0;
  *a2 = 0;
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 18520))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((4085 * v3) ^ 0x7E7u)))();
}

uint64_t sub_1001CDB08(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 1411182149;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((2 * (((v3 == 0) ^ 0xF7) & 1)) ^ 0x40Du)))();
}

uint64_t sub_1001CDB74(uint64_t a1, uint64_t a2)
{
  *(void *)(v7 - 152) = v5;
  *(void *)(v7 - 232) = v6 + 0x3797084C688F39EALL;
  *(_DWORD *)(v6 + 8) = v3 + 4096;
  char v8 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(v4
                                                                           + 8
                                                                           * ((((179 * (v2 & 0x46B7 ^ 0x6A5)) ^ 0x173)
                                                                             * (v6 == 0)) ^ v2 & 0x46B7u));
  int v9 = (char *)*(&off_1003ADCF0 + (v2 & 0x46B7 ^ 0x6AAu)) - 8;
  *(void *)(v7 - 224) = v9;
  *(void *)(v7 - 216) = v6;
  *(void *)(v7 - 208) = v9;
  return v8(a1, a2, 0, 0x3935222BFCD46514, 0);
}

uint64_t sub_1001CDC20()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) + 1775094903;
  unsigned int v4 = (v0 ^ 0x1C8) + 363912576 + *(_DWORD *)(v2 + 8);
  BOOL v5 = v3 < 0x69CDCC73;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x69CDCC73) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((v7 * ((((v0 ^ 0x1C8) - 792126199) & 0x136E65C) + 765)) ^ v0 ^ 0x1C8u)))(v2 + 8);
}

uint64_t sub_1001CDCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (2 * (v4 ^ 0x4A7)) ^ 0x16D;
  int v9 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(v5 + 8 * ((v8 * (v6 == 0)) | v4));
  *(void *)(v7 - 208) = v8;
  return v9(a1, a2, 0, a4, 0);
}

uint64_t sub_1001CDCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  unsigned int v31 = ((2 * (2 * a29 + 1472602998)) & 0xE9FFDCF8) + ((2 * a29 + 1472602998) ^ 0x74FFEE7D);
  if ((a29 + 296586160) < 0x65CA79F1 != v31 - 255161484 < (((v29 ^ 0x9A) - 460) ^ 0x65CA7B33u)) {
    BOOL v32 = v31 - 255161484 < (((v29 ^ 0x9A) - 460) ^ 0x65CA7B33u);
  }
  else {
    BOOL v32 = v31 - 255161484 > a29 + 296586160;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * ((348 * v32) ^ v29 ^ 0x9Au)))();
}

uint64_t sub_1001CDDA8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((((v0 | 0x262) - 771456489) | 0x20284704) - 2) ^ (((v0 | 0x262) + 51350) | 0xF22C0085))
                                     * (v2 == 0)) ^ (v0 | 0x262))))();
}

uint64_t sub_1001CDE00@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v1 + 8 * (int)(a1 ^ 0xF22CC72A)))(v3);
  return v2;
}

void sub_1001D1424(uint64_t a1, int a2)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001D1470()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((233 * (((*(void *)(v0 + 16) == 0) ^ 0x91) & 1)) ^ 0x27D)))();
}

uint64_t sub_1001D14B8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 + 234) ^ 0x1EE ^ (14 * (v0 ^ 0x99))) * (*(void *)(v1 + 32 * v3 + 24) == 0)) ^ v0)))();
}

uint64_t sub_1001D14FC@<X0>(int a1@<W8>)
{
  unsigned int v4 = (a1 + 2125858659) & 0x8149F97E;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (a1 | 0x825)))();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((((((v4 + 196) | 0x3D) ^ 0xFFFFFFE4) + v4 + 481) * (v2 + 1 == v3)) ^ v4)))(v5);
}

uint64_t sub_1001D1564()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((727 * (v0 == 0)) ^ 0x18A)))();
}

uint64_t sub_1001D159C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((233 * (((*(void *)(v1 + 32 * v3 + 16) == 0) ^ (a1 + 20)) & 1)) ^ a1)))();
}

uint64_t sub_1001D15D8@<X0>(int a1@<W8>)
{
  int v4 = 73 * (a1 ^ 0x27F);
  (*(void (**)(void))(v2 + 8 * (a1 + 1602)))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v4 + 234) ^ 0x1EE ^ (14 * (v4 ^ 0x99))) * (*(void *)(v1 + 32 * v3 + 24) == 0)) ^ v4)))();
}

uint64_t sub_1001D163C()
{
  return (*(uint64_t (**)(void))(v1 + 8
                                   * (int)((((((v0 + 196) | 0x3D) ^ 0xFFFFFFE4) + v0 + 481) * (v2 + 1 == v3)) ^ v0)))();
}

uint64_t sub_1001D1678()
{
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1378)))(v1);
  return 0;
}

uint64_t sub_1001D16A4()
{
  uint64_t v0 = (uint64_t)*(&off_1003ADCF0
                + (byte_100320200[byte_10031FCE8[(9
                                                                                  * (dword_100401718 ^ 0x7D ^ dword_100401710))
                                                                + 248] ^ 0xF5] ^ (9
                                                                                * (dword_100401718 ^ 0x7D ^ dword_100401710)))
                - 238);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1003ADCF0
                + (byte_100320404[(byte_10031FFE0[(9 * ((dword_100401710 - v1) ^ 0x7D))] ^ 0x60)
                                                 - 4] ^ (9 * ((dword_100401710 - v1) ^ 0x7D)))
                - 113);
  unint64_t v3 = v1 ^ (unint64_t)&v13 ^ *(void *)(v2 - 4);
  uint64_t v4 = 1787074057 * v3 - 0x6585E11862ED39BLL;
  unint64_t v5 = 1787074057 * (v3 ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v0 - 4) = v4;
  *(void *)(v2 - 4) = v5;
  LOBYTE(v4) = *(_DWORD *)(v0 - 4);
  uint64_t v6 = (char *)*(&off_1003ADCF0
               + ((9 * (dword_100401718 ^ 0x7D ^ dword_100401710)) ^ byte_10031FAD0[byte_100320540[(9 * (dword_100401718 ^ 0x7D ^ dword_100401710))] ^ 0x92])
               - 183)
     - 4;
  (*(void (**)(void))&v6[8
                                    * ((9 * ((v5 - v4) ^ 0x7D)) ^ byte_10031FAD0[byte_100320540[(9 * ((v5 - v4) ^ 0x7D))] ^ 0x84])
                                    + 18800])(*(unsigned int *)*(&off_1003ADCF0
                                                               + (byte_10031FAD0[byte_100320540[(9 * ((v5 + v4) ^ 0x7D))] ^ 0x8A] ^ (9 * ((v5 + v4) ^ 0x7D)))
                                                               - 29));
  char v7 = *(_DWORD *)(v0 - 4);
  char v8 = *(_DWORD *)(v2 - 4);
  (*(void (**)(void))&v6[8
                                    * (byte_100320304[(byte_10031FEE4[(9 * ((v8 + v7) ^ 0x7D))
                                                                                     - 4] ^ 0x5E)
                                                                     - 4] ^ (9 * ((v8 + v7) ^ 0x7D)))
                                    + 18208])(*(unsigned int *)*(&off_1003ADCF0
                                                               + (byte_100320108[(byte_10031FCE8[(9 * (v7 ^ 0x7D ^ v8)) - 8] ^ 0xD)
                                                                                                - 8] ^ (9 * (v7 ^ 0x7D ^ v8)))
                                                               - 101));
  unsigned __int8 v9 = 9 * (*(_DWORD *)(v0 - 4) ^ 0x7D ^ *(_DWORD *)(v2 - 4));
  uint64_t v10 = *(unsigned int *)*(&off_1003ADCF0 + (v9 ^ byte_100320200[byte_10031FCE8[v9 + 248] ^ 0x78])
                                          - 173);
  uint64_t v11 = *(uint64_t (**)(uint64_t))&v6[8
                                             * (byte_10031FBD8[(byte_10032064C[v9 - 12] ^ 0xC0) - 8] ^ v9)
                                             + 18344];

  return v11(v10);
}

void sub_1001D197C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4) {
    BOOL v6 = a5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v8 = !v6 && a6 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001D19E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5)
{
  *a4 = 0;
  *a5 = 0;
  BOOL v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 18520))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((115 * v6) ^ 0x333u)))();
}

uint64_t sub_1001D1A44(uint64_t a1)
{
  *(void *)(v5 - 216) = v3;
  *(void *)(v5 - 168) = v2;
  *(_DWORD *)(v5 - 184) = v1;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 650052673;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 18520))(4096, 1358311088);
  *(void *)a1 = v7;
  return (*(uint64_t (**)(void))(v4 + 8 * ((255 * (v7 != 0)) ^ 0x66A)))();
}

uint64_t sub_1001D1ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v26 - 224) = v25;
  *(void *)(v26 - 176) = 0;
  *(_DWORD *)(v26 - 180) = 0;
  *(void *)(v26 - 136) = v21 + 0x5B68E37D168561B2;
  *(_DWORD *)(v21 + 8) = v24 + 4096;
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * (((((v22 - 648) | 0x142) - 83) * (v21 == 0)) ^ (v22 + 1271)));
  uint64_t v28 = (uint64_t)*(&off_1003ADCF0 + ((v22 + 1271) ^ 0x769u));
  *(void *)(v26 - 200) = (char *)*(&off_1003ADCF0 + ((v22 + 1271) ^ 0x772u)) - 8;
  *(void *)(v26 - 192) = v28;
  *(void *)(v26 - 152) = 0x7D34AE117A9B271ALL;
  return v27(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1001D1B64()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 2057538897;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + ((v0 + 793321141) & 0xD0B6E37E) + (((v0 + 1855) | 0x42) ^ 0x53E48D55);
  BOOL v5 = v3 < 0x7AA38D4D;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x7AA38D4D) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((1595 * v7) ^ v0)))(v1 + 8);
}

uint64_t sub_1001D1BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v21 - 176) = 0;
  *(_DWORD *)(v21 - 180) = 0;
  int v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * (int)((((v18 + 1606807577) ^ 0x56000807 ^ (v18 + 1606807577) & 0xA9FFF7FF) * (v19 == 0)) ^ v18));
  *(void *)(v21 - 152) = 0x7D34AE117A9B271ALL;
  return v22(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a1);
}

uint64_t sub_1001D1C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  unsigned int v29 = ((2 * (2 * a27 - 1300105346)) & 0x7FFE9AD4) + ((2 * a27 - 1300105346) ^ 0xBFFF4D6B);
  if ((a27 + 1884709690) < 0x97156777 != v29 - 686417396 < ((v27 - 163965510) | 0x48u) - 1760206695) {
    BOOL v30 = v29 - 686417396 < ((v27 - 163965510) | 0x48u) - 1760206695;
  }
  else {
    BOOL v30 = v29 - 686417396 > a27 + 1884709690;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((219 * v30) ^ (v27 - 163965034))))();
}

uint64_t sub_1001D1D3C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((69 * ((((v1 + 138464844) ^ v1 ^ (v2 + 376) ^ (v0 == 0)) & 1) == 0)) | v1)))();
}

uint64_t sub_1001D1D80@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v3 + 8 * (a1 ^ (v2 + 1927))))(v1);
  return v4;
}

uint64_t sub_1001D5918(uint64_t a1)
{
  if (unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)))
  {
    uint64_t v1 = (uint64_t)*(&off_1003A9300
                  + ((16
                    * ((*(void *(__cdecl **)(size_t, malloc_type_id_t))((char *)&off_1003A9300
                                                                      + &loc_100004854
                                                                      + 4))(0x18uLL, 0xF47091F3uLL) != 0)) | 0x568EF585u)- 1452207770);
    __asm { BRAA            X8, X17 }
  }
  return 4294922295;
}

void sub_1001D5E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  (*(void (**)(void))(v22 + 8 * (v24 + v23)))(*v21);
  *uint64_t v21 = a13;
  *a14 = a21;
  JUMPOUT(0x1001D5E54);
}

uint64_t sub_1001D5EC0@<X0>(char a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((a1 & 1)
                                     * ((v1 - 1007715077) & 0x3C108357 ^ (v3 + 1078) ^ ((v1 + 136380676) | 0xA1500032))) ^ v1)))();
}

uint64_t sub_1001D5F14()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 == 0) ^ (5 * (v0 ^ 0xA))) & 1)
                                * (((v0 + 158939080) & 0x7686C7E4) - 23)) ^ v0)))();
}

uint64_t sub_1001D5F68()
{
  unsigned int v3 = ((v0 - 1146) ^ 0x5867432D) + *(_DWORD *)(v1 + 12);
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 337859105;
  BOOL v5 = v3 < v0 + 1483160741;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x58674236) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((615 * v6) ^ v0)))();
}

uint64_t sub_1001D5FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((50 * (v24 != 0)) ^ v23));
  HIDWORD(a22) = v22;
  *(void *)(v27 - 144) = v26;
  return v28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_1001D6038()
{
  unsigned int v3 = v1 - 1239118730;
  BOOL v4 = (v1 - 1239118730) < 0xFA687C87;
  unsigned int v5 = ((2 * (2 * v1 + 2004361174)) & 0x9DAFFA3C)
     + ((2 * v1 + 2004361174) ^ (((v0 - 2141645342) & 0xD635ED3F) - 824707069));
  if (v4 != v5 + 730890088 < 0xFA687C87) {
    BOOL v6 = v5 + 730890088 < 0xFA687C87;
  }
  else {
    BOOL v6 = v5 + 730890088 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((19 * !v6) ^ (v0 + 1452212725))))();
}

uint64_t sub_1001D6100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v28 = *(void *)(v27 - 136);
  int v29 = 98 * (v24 ^ 0x115);
  *(void *)(v27 - 136) = v28;
  uint64_t v30 = *(void *)(v28 - 0x29BAE573B9AE997FLL);
  int v31 = ((2 * a9) & 0x7FBEFFDE) + (a9 ^ 0x3FDF7FEF) - 1071612081;
  *(unsigned char *)(v30 + (v31 + 194)) = 99;
  *(unsigned char *)(v30 + (v31 + 195)) = 43;
  *(unsigned char *)(v30 + (v31 + v29)) = -115;
  *(unsigned char *)(v30 + (v31 + 197)) = 110;
  *v23 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((v29 + 1851) ^ (v26 + 799) ^ (v29 - 1452211914) ^ v29)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1001D62C4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((6 * (v0 ^ 0x735) + ((v0 - 1982) | 0x306) + 2036) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1001D630C()
{
  unsigned int v3 = ((v0 + 214) ^ 0xC898193A) + *(_DWORD *)(v1 + 12);
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 2074858353;
  BOOL v5 = v3 < 0xC8981CA4;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xC8981CA4) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 * (10 * (v0 ^ 0x4E9) - 487)) ^ v0)))();
}

uint64_t sub_1001D638C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  HIDWORD(a24) = v25;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((((v26 - 421) ^ 0x199) * (v27 != 0)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v28);
}

uint64_t sub_1001D63CC()
{
  unsigned int v3 = v1 - 641974977;
  BOOL v4 = (v1 - 641974977) < 0x1E002D50;
  unsigned int v5 = ((2 * (((v0 + 731) | 0x104) + 2004361174 + 2 * v1 - 1420)) & 0xD88FF0A8)
     + ((((v0 + 731) | 0x104) + 2004361174 + 2 * v1 - 1420) ^ 0xEC47F855);
  if (v4 != v5 + 834155771 < 0x1E002D50) {
    BOOL v6 = v5 + 834155771 < 0x1E002D50;
  }
  else {
    BOOL v6 = v5 + 834155771 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1113 * v6) ^ v0)))();
}

uint64_t sub_1001D6478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v32 = *(void *)(v31 - 136);
  int v33 = v28 - 587;
  *(void *)(v31 - 136) = v32;
  uint64_t v34 = *(void *)(v32 - 0x29BAE573B9AE997FLL);
  unsigned int v35 = ((a9 << (v33 ^ 0x46)) & 0xDFFFF9FE) + (a9 ^ 0x6FFFFCFF) - 1879047423;
  *(unsigned char *)(v34 + v35) = 0;
  *(unsigned char *)(v34 + v35 + 1) = 0;
  *(unsigned char *)(v34 + v35 + 2) = 0;
  *(unsigned char *)(v34 + v35 + 3) = 1;
  *v27 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((v30 + ((v33 - 830) | 0x3A2) - 330) ^ v33 ^ (v30 + 195) ^ v33)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001D6634()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 ^ 0x161) - 360) ^ 0x173) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1001D666C()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1382934046;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + (v0 ^ 0x694E2B0F);
  BOOL v5 = v3 < 0xAD9219DA;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xAD9219DA) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 * ((v0 + 1354) ^ 0x83D)) ^ v0)))();
}

uint64_t sub_1001D66E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  LODWORD(a25) = v27;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (((v28 - 995 + 177 * (v28 ^ 0x816) - 1425) * (v29 == 0)) | v28)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001D6728()
{
  unsigned int v3 = v0 + 477223401;
  BOOL v4 = (v0 + 477223401) < 0x60B5C9F6;
  unsigned int v5 = ((2 * (2 * v0 + 2004361174)) & 0xEDF7E8F8) + ((v1 + 958998766) & 0xC6D6D7FF ^ (2 * v0 + 2004361174) ^ 0x76FBF162);
  if (v4 != v5 - 373697159 < 0x60B5C9F6) {
    BOOL v6 = v5 - 373697159 < 0x60B5C9F6;
  }
  else {
    BOOL v6 = v5 - 373697159 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((3291 * v6) ^ v1)))();
}

uint64_t sub_1001D67DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v33 = *(void *)(v32 - 136);
  uint64_t v34 = *(void *)(v32 - 216);
  unint64_t v35 = v34 - ((2 * v34) & 0xF99431D3CA63CC58) + (v28 ^ 0x7CCA18E9E531E4E6);
  *(void *)(v32 - 136) = v33;
  uint64_t v36 = (unsigned char *)(((2 * a9) & 0x1D3F8DBB6)
                + (a9 ^ 0xA3BF793FE9FC6DDBLL)
                + *(void *)(v33 - 0x29BAE573B9AE997FLL)
                + 0x5C4086C016039225);
  *uint64_t v36 = HIBYTE(v35) ^ 0x7C;
  v36[1] = BYTE6(v35) ^ 0xCA;
  void v36[2] = BYTE5(v35) ^ 0x18;
  v36[3] = BYTE4(v35) ^ 0xE9;
  v36[4] = ((v34 - ((2 * v34) & 0xCA63CC58) + (v28 ^ 0xE531E4E6)) >> 24) ^ 0xE5;
  v36[5] = BYTE2(v35) ^ 0x31;
  v36[6] = BYTE1(v35) ^ 0xE6;
  v36[7] = v35 ^ 0x2C;
  *v29 += 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (int)(((v28 ^ 0x3A8 ^ (v31 - 354)) - v31 + 189) ^ v28 ^ 0x3A8)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001D6A1C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((((v0 + 229) ^ 0xE0) + 349) ^ 0xFFFFFD8E) + 251 * ((v0 + 229) ^ 0xE0))
                                     * (v1 == 0)) ^ (v0 + 229))))();
}

uint64_t sub_1001D6A60()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1452124039;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + ((v0 - 452) ^ 0x652E6B7F);
  BOOL v5 = v3 < 0xA9725871;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 73 * (v0 ^ 0x4ECu) - 1452124850) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((3568 * v6) ^ v0)))();
}

uint64_t sub_1001D6AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a25) = v28;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (((4 * (((v30 == 0) ^ (v29 + 48)) & 1)) & 0xF7 | (8 * (((v30 == 0) ^ (v29 - 720)) & 1))) ^ v29)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001D6B30()
{
  unsigned int v3 = v1 + 1498273165;
  BOOL v4 = (v1 + 1498273165) < 0x9D91C59A;
  unsigned int v5 = ((2 * ((v0 ^ 0x77781F84) + 2 * v1)) & 0x9DA7E77C) + (((v0 ^ 0x77781F84) + 2 * v1) ^ 0xCED3F3BF);
  if (v4 != v5 - 826420773 < 0x9D91C59A) {
    BOOL v6 = v5 - 826420773 < 0x9D91C59A;
  }
  else {
    BOOL v6 = v5 - 826420773 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1763 * v6) ^ v0)))();
}

uint64_t sub_1001D6BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v34 = *(void *)(v33 - 136);
  int v35 = 118 * (v30 ^ 0x320);
  unint64_t v36 = *(void *)(v33 - 208)
      + 0x7CCA18E9E531E62CLL
      - ((*(void *)(v33 - 208) << (v35 ^ 0x63u)) & 0xF99431D3CA63CC58);
  *(void *)(v33 - 136) = v34;
  uint64_t v37 = (unsigned char *)(((2 * a9) & 0x1CFBF7B3ELL)
                + (a9 ^ 0x7BEFE7FBE7DFBD9FLL)
                + *(void *)(v34 - 0x29BAE573B9AE997FLL)
                - 0x7BEFE7FBE7DFBD9FLL);
  *uint64_t v37 = HIBYTE(v36) ^ 0x7C;
  v37[1] = BYTE6(v36) ^ 0xCA;
  v37[2] = BYTE5(v36) ^ 0x18;
  v37[3] = BYTE4(v36) ^ 0xE9;
  void v37[4] = BYTE3(v36) ^ 0xE5;
  void v37[5] = BYTE2(v36) ^ 0x31;
  v37[6] = BYTE1(v36) ^ 0xE6;
  v37[7] = v36 ^ 0x2C;
  *v29 += 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (int)((((v35 - 1459617898) ^ 0xA9000418 ^ (v32 + 285)) + ((v35 - 1459617898) | 0x710102)) ^ v35)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1001D6E4C()
{
  *(void *)(v5 - 192) = v2;
  *(void *)(v5 - 128) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 ^ (v4 + 800)) - v4 + 2) * (v1 == 0)) | v0)))();
}

uint64_t sub_1001D6E94@<X0>(int a1@<W8>)
{
  int v4 = a1 + 2034;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (a1 + 2337)))();
  BOOL v6 = *(void (**)(void))(v1 + 8 * (v4 + 247));
  *(void *)(v3 - 200) = v5;
  v6();
  uint64_t v7 = (*(uint64_t (**)(void, void))(v1 + 8 * (v4 ^ 0xF0D)))(*(void *)(v3 - 160), 0);
  *(void *)(v3 - 176) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 == 0) * ((v4 ^ (v2 + 1038)) - v2 + 4091)) ^ v4)))();
}

uint64_t sub_1001D6F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v33 = v29 + 433;
  uint64_t v34 = (*(uint64_t (**)(void, uint64_t, void))(v30 + 8 * (v33 + 1875)))(*(void *)(v31 - 160), a1, 0);
  int v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (((v34 == 0) * (((7 * (v33 ^ 0x1D4)) ^ 0x568EFCAE) + ((v33 - 1993343167) | 0x20410108))) ^ v33));
  *(void *)(v31 - 176) = a1;
  return v35(v34, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1001D6FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  (*(void (**)(uint64_t, char *))(v26 + 8 * (v25 ^ 0xBF0)))(a1, (char *)*(&off_1003ADCF0 + (v25 ^ 0x2DC)) - 12);
  (*(void (**)(uint64_t))(v26 + 8 * (v25 ^ 0xA72)))(a1);
  (*(void (**)(uint64_t, void))(v26 + 8 * (v25 + 1641)))(a1, *(void *)(v27 - 200));
  int v29 = (void *)(*(uint64_t (**)(void))(v26 + 8 * (v25 + 1615)))();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((((v25 ^ 0x36B ^ (v29 == *(&off_1003ADCF0 + v25 - 697))) & 1) == 0) * (((v25 - 651) | 0x586) - 1001)) ^ v25)))(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1001D7084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 8 * (v35 + 856)))(a33, v34, v36 - 128);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                                + 8
                                                                                                * (int)(((v37 == 0) * (v35 + ((v35 + 550736449) & 0xDF2C6BDB) - 2357)) ^ v35));
  *(void *)(v36 - 184) = 0x79483BA612D83A8ELL;
  *(void *)(v36 - 152) = 0x79483BA612D83A8ELL;
  return v38(v37, v39, v40, v41, v42, v43, v44);
}

uint64_t sub_1001D710C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xAD0)))(24, 4101018099);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                               + 8
                                                                                               * (((2
                                                                                                  * (((v3 == 0) ^ (v0 - 59 + v0 - 75 + 1)) & 1)) & 0xDF | (32 * (((v3 == 0) ^ (v0 - 59 + v0 - 75 + 1)) & 1))) ^ v0));
  *(void *)(v2 - 184) = 0x79483BA612D83A8ELL;
  *(void *)(v2 - 152) = 0x79483BA612D83A8ELL;
  return v4(v3, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001D7198(uint64_t a1)
{
  *(void *)(v3 - 152) = a1 + 0x79483BA612D83A8ELL;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1171913814;
  *(void *)(a1 + 12) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 107)))(4096, 1358311088);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v5 == 0) * ((13 * (v1 ^ 0x833) - 1036) ^ (v1 - 1341))) | v1)))();
}

uint64_t sub_1001D7220()
{
  int v4 = *(uint64_t (**)(void))(v0 + 8 * (int)((((v1 - 1451809149) & 0xFFF9D3FF ^ 0xA9710120) * (v2 != 0)) ^ v1));
  *(void *)(v3 - 184) = 0x79483BA612D83A8ELL;
  return v4();
}

uint64_t sub_1001D7284@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v24 = a1 - 4088;
  (*(void (**)(uint64_t))(v21 + 8 * (a1 + 1452209869)))(v22);
  *(void *)(v23 - 184) = 0x79483BA612D83A8ELL;
  *(void *)(v23 - 152) = 0x79483BA612D83A8ELL;
  (*(void (**)(uint64_t))(v21 + 8 * (v24 + 1452214027)))(v20);
  (*(void (**)(uint64_t))(v21 + 8 * (int)(v24 ^ 0xA97108FF)))(a20);
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((4 * (*(void *)(v23 - 200) == 0)) | (8 * (*(void *)(v23 - 200) == 0))) ^ (v24 + 1452212699))))();
}

uint64_t sub_1001D7B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((v34 + 3496) ^ (79 * (a33 == 0))));
  *(void *)(v36 - 176) = v33;
  return v37(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1001D7BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v38 = (*(uint64_t (**)(void))(v36 + 8 * v35))();
  uint64_t v39 = *(uint64_t (**)(uint64_t))(v36 + 8 * ((v34 + 3496) ^ (79 * (a33 == 0))));
  *(void *)(v37 - 176) = v33;
  return v39(v38);
}

uint64_t sub_1001D7BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v38 + 1452214027)))(a33);
  *(void *)(v40 - 176) = v34;
  if (v37 == -45004)
  {
    *(void *)(v40 - 152) = v35;
    *(void *)(v40 - 120) = 0;
    *(_DWORD *)(v40 - 112) = 0;
    uint64_t v42 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v36 + 8 * (v39 + 1452214060)))(*(unsigned int *)*(&off_1003ADCF0 + (v39 ^ (v39 - 8))), *(void *)v33, *(unsigned int *)(v33 + 12), v40 - 120, v40 - 112);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((824 * ((v42 ^ 0x5E5DEEB9) - 335545392 + ((2 * v42) & 0xBCBBDD72) == 1516104332)) ^ (v39 + 1452212148))))(v42, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29);
  }
  else if (v37)
  {
    return sub_1001D8E0C();
  }
  else
  {
    return (*(uint64_t (**)(uint64_t))(v36
                                              + 8 * ((25 * (*(void *)(v40 - 184) != 0x79483BA612D83A8ELL)) ^ 0x347)))(v41);
  }
}

uint64_t sub_1001D8324()
{
  uint64_t v3 = *(void *)(v2 - 184);
  unsigned int v4 = *(_DWORD *)(v3 - 0x79483BA612D83A82) - 886711989;
  unsigned int v5 = *(_DWORD *)(v3 - 0x79483BA612D83A86) - 2058625807;
  int v6 = (v4 < 0xCB25D947) ^ (v5 < ((v0 - 1989083064) | 0x20000050u) + 565499725);
  BOOL v7 = v4 > v5;
  if (v6) {
    BOOL v7 = v4 < 0xCB25D947;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((!v7 * ((v0 ^ 0x99F) - 2290)) ^ v0)))();
}

uint64_t sub_1001D83E4@<X0>(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v4 - 184);
  _DWORD *v2 = v1 + 4;
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ ((v5 == 0x79483BA612D83A8ELL) | (2 * (v5 == 0x79483BA612D83A8ELL))))))();
}

uint64_t sub_1001D84B0@<X0>(int a1@<W8>)
{
  uint64_t v5 = 8 * (a1 - 62);
  (*(void (**)(void))(v4 + v5))();
  *int v1 = 0;
  _DWORD *v3 = 1171913814;
  _DWORD *v2 = 0;
  (*(void (**)(void *))(v4 + v5))(v1);
  return sub_1001D8E0C();
}

uint64_t sub_1001D8508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,_DWORD *a31,int a32,int a33)
{
  uint64_t v39 = (*(uint64_t (**)(void))(v35 + 8 * (v37 ^ (v37 + 1867))))(*(void *)(v33 - 0x79483BA612D83A8ELL));
  *(void *)(v33 - 0x79483BA612D83A8ELL) = a23;
  *a31 = a33;
  *(void *)(v38 - 144) = v36;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 + v37 + 4103)))(v39);
}

void sub_1001D85A8()
{
  *(void *)(v1 - 168) = v0;
  JUMPOUT(0x1001D85D8);
}

uint64_t sub_1001D85EC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a2 > a1) * ((v2 - 335) ^ 0x2BC)) ^ v2)))();
}

uint64_t sub_1001D8654()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v3 + ((v1 - 177) | 2) - 341) ^ ((v1 - 2127495305) | 0x2840010A)) * (v0 != 0)) ^ v1)))();
}

uint64_t sub_1001D869C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v7 = (unint64_t)(a1 - a2) < 0x20 || v2 < v4 + ((40 * (v3 ^ 0xD0) - 1418502162) & 0xFDFD9DFA) + 2185;
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * v7) | (32 * v7)) ^ v3)))();
}

uint64_t sub_1001D86F8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((51
                                * (v0 < v2 + ((v1 - 919523605) ^ 0x60403301) + ((v1 - 919523605) & 0x36CECDFDu) + 1960)) ^ v1)))();
}

uint64_t sub_1001D874C@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * (((v3 + 2690) | 0x52) - 579)) ^ (v3 + 2914))))();
}

void sub_1001D8794()
{
}

uint64_t sub_1001D87A4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v3 + ((v1 - 1605304555) | 0x92000DA) - 67) ^ (63 * (v1 ^ 0x229))) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_1001D87F4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((58 * (v1 >= ((v0 - 1451527264) & 0xFFF585FB) + v2 + 115 * (v0 ^ 0x84D))) ^ v0)))();
}

uint64_t sub_1001D8848()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 - v3 + 54) ^ (v4 + 32) ^ 0x3D9) * (v0 < 0x20)) ^ v1)))();
}

uint64_t sub_1001D8880()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 < 0x20) ^ (v1 - v2 - 96)) & 1) * (((v1 - 722) | 1) + 1718)) ^ v1)))();
}

uint64_t sub_1001D88BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v8 = (v3 - 3169 - v7 + 1975) ^ v6;
  uint64_t v9 = a2 + (v8 & (v2 - 1));
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a1 + (v8 & (v2 - 1));
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2 * ((v2 & 0xFFFFFFE0) == 32)) | (32 * ((v2 & 0xFFFFFFE0) == 32)) | (v4 + v3 - 3169 + 3841))))();
}

void sub_1001D891C()
{
}

uint64_t sub_1001D8928(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a2 ^ (v5 - 1) ^ (v2 == v3)) & 1) == 0) * (a2 - 547)) ^ a2)))();
}

uint64_t sub_1001D895C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 - 346) ^ (v4 - 247) ^ (v4 - 3)) * ((v2 & 0x18) == 0)) | (a2 + 221))))();
}

uint64_t sub_1001D8990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((53 * (((v4 + 1196036742) & 0xB8B5EFBD ^ 0x335) + v2 != ((v6 + v4 - 45 + 1764) & v3))) ^ (v4 - 45))))();
}

uint64_t sub_1001D89F4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v4 + v2 + ((v2 + 155188541) | 0xA0310180) - 38) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1001D8A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + v2) = *(unsigned char *)(a2 + v2);
  return (*(uint64_t (**)(void))(v6 + 8 * ((61 * (v2 + 1 == v3)) ^ (v5 + v4 + 4038))))();
}

uint64_t sub_1001D8A68()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((127 * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1001D8A88()
{
  int v4 = 2 * ((v1 - 335606200) & 0x3D71EBFA ^ (v3 - 246));
  return (*(uint64_t (**)(void))(v2 + 8 * ((973 * ((v0 & 0x18) == (v4 - 237) - 271)) ^ v4)))();
}

uint64_t sub_1001D8AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = (v6 + 33 * (v4 ^ 0x11Eu) + 1414) & (~v2 + v3);
  *(void *)(a1 - 7 + v7) = *(void *)(a2 - 7 + v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1711 * (v2 - (v3 & 0xFFFFFFF8) == -8)) ^ v4)))();
}

void sub_1001D8B50()
{
}

uint64_t sub_1001D8B5C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((a3 - 2006909079) | 0x21100060) ^ 0xFFFE0319) + ((a3 - 34363954) & 0xAB7D59FA))
                                     * (v4 == v3)) ^ a3)))();
}

uint64_t sub_1001D8BB8()
{
  return v0();
}

uint64_t sub_1001D8BC0()
{
  uint64_t v3 = *(void *)(v2 - 168);
  *(_DWORD *)(v3 - 0x79483BA612D83A86) = (*(_DWORD *)(v2 - 112) ^ 0xF7FDFE57)
                                         + 1306263039
                                         + ((2 * *(_DWORD *)(v2 - 112)) & 0xEFFBFCAE);
  *(_DWORD *)(v3 - 0x79483BA612D83A82) = 0;
  uint64_t v4 = (*(uint64_t (**)(void, void, void))(v0 + 18672))(*(unsigned int *)*(&off_1003ADCF0 + (int)((v1 - 22) ^ 0xA97101FA)), *(void *)(v2 - 120), *(unsigned int *)(v2 - 112));
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 13320);
  *(void *)(v2 - 184) = v3;
  return v5(v4);
}

uint64_t sub_1001D8C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  return (*(uint64_t (**)(void))(v5 + 8 * ((3401 * (v6 == 0)) ^ (v4 + v3 + 3606))))();
}

uint64_t sub_1001D8C5C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((872 * (v0 ^ 0x32) - 1452213462) ^ 0xA971030E) - 708)
                                     * (v1 == 0x79483BA612D83A8ELL)) ^ (872 * (v0 ^ 0x32)))))();
}

uint64_t sub_1001D8CB8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(void *)(v1 - 0x79483BA612D83A8ELL) == 0) ^ (a1 - 1)) & 1)
                                * (v3 + a1 + 1452210976)) ^ a1)))();
}

void sub_1001D8D10(int a1@<W8>)
{
  unsigned int v5 = (a1 + 24116700) | 0xA801012A;
  (*(void (**)(void))(v3 + 8 * (int)(v5 ^ (v4 + 1867))))();
  *uint64_t v1 = 0;
  *(_DWORD *)(v2 - 0x79483BA612D83A86) = 1171913814;
  *(_DWORD *)(v2 - 0x79483BA612D83A82) = 0;
  (*(void (**)(void *))(v3 + 8 * (int)(v5 + 1452213957)))(v1);
  JUMPOUT(0x1001D8D90);
}

uint64_t sub_1001D8E0C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 + v1 - 2119) * (v0 == 0)) ^ (v1 + 1452213181))))();
}

uint64_t sub_1001D8E40@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == 0) * ((v4 + a1 - 215 - 2040) ^ (a1 - v3))) ^ (a1 - 215))))();
}

void sub_1001D8E78(int a1@<W8>)
{
  (*(void (**)(void))(v2 + 8 * (a1 - 2024 + v3)))();
  *(void *)uint64_t v1 = 0;
  *(_DWORD *)(v1 + 8) = 1145303061;
  *(_DWORD *)(v1 + 12) = 0;
  JUMPOUT(0x1001D8EA0);
}

void sub_1001D8EB4()
{
  uint64_t v0 = (uint64_t)*(&off_1003ADCF0
                + (byte_100320108[(byte_10031FCE8[(9
                                                                                   * ((dword_100401710 - dword_100401720) ^ 0x7D))
                                                                 - 8] ^ 0x19)
                                                 - 8] ^ (9 * ((dword_100401710 - dword_100401720) ^ 0x7D)))
                - 29);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1003ADCF0
                + (byte_100320200[byte_10031FDE8[(9 * ((dword_100401710 - v1) ^ 0x7D))
                                                                - 8] ^ 0x78] ^ (9 * ((dword_100401710 - v1) ^ 0x7D)))
                - 187);
  unint64_t v3 = (unint64_t)&v8[v1 + *(void *)(v2 - 4)];
  uint64_t v4 = 1787074057 * v3 - 0x6585E11862ED39BLL;
  unint64_t v5 = 1787074057 * (v3 ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v0 - 4) = v4;
  *(void *)(v2 - 4) = v5;
  LOBYTE(v2) = 9 * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0x7D);
  unsigned int v6 = (char *)*(&off_1003ADCF0
               + ((9 * ((dword_100401710 - dword_100401720) ^ 0x7D)) ^ byte_10031FAD0[byte_100320540[(9 * ((dword_100401710 - dword_100401720) ^ 0x7D))] ^ 0x8A])
               - 1)
     - 4;
  uint64_t v7 = *(void *)&v6[8
                    * ((84
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v6[8
                                                                        * (byte_10031FAD4[(byte_10032054C[v2 - 12] ^ 0xB1) - 4] ^ v2)
                                                                        + 16728])(24, 4101018099) == 0)) ^ 0x412)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001D9078(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 912148809;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((213 * (v3 != 0)) ^ 0x67Du)))();
}

uint64_t sub_1001D90CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v25 - 152) = v21 + 0x2A5C32E9989AD503;
  *(_DWORD *)(v21 + 8) = v22 + 4096;
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((57 * (v21 == 0)) ^ 0x4C8));
  *(void *)(v25 - 168) = *(void *)(v23 + 104) - 8;
  *(void *)(v25 - 200) = 0x1A44E0EB4FC706ALL;
  return v26(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1001D916C()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + ((v0 + 1147767190) & 0x154D) - 312355264 - 1288;
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 1224504073;
  BOOL v5 = v3 < 0xED61D640;
  BOOL v6 = v3 > v4;
  if (v4 < 0xED61D640 != v5) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2 * (((v0 - 125) ^ v7) & 1)) & 0xFB | (4 * (((v0 - 1149) ^ v7) & 1)) | v0)))();
}

uint64_t sub_1001D91F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v20 - 200) = 0x1A44E0EB4FC706ALL;
  int v21 = ((v14 | 0x10) + 71) | 0x24;
  uint64_t v22 = *v16;
  unsigned int v23 = ((v21 - 806356520) & (2 * a9)) + (a9 ^ 0xE7F7FDFF) + 403177985;
  *(unsigned char *)(*v16 + v23) = 0;
  *(unsigned char *)(v22 + v23 + 1) = 0;
  *(unsigned char *)(v22 + v23 + 2) = 0;
  *(unsigned char *)(v22 + v23 + 3) = 1;
  *v15 += 4;
  *(void *)(v20 - 160) = v18;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * (int)(((((v21 + 1328) | 0x80) ^ (v17 - 620)) + ((v21 + 675306972) | 0x82019444)) ^ v21)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14);
}

uint64_t sub_1001D9538()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 == 0) ^ (v0 + 43)) & 1) * ((v0 - 33160169) & 0x1F9F5FB ^ 0x1E7)) ^ v0)))();
}

uint64_t sub_1001D958C()
{
  unsigned int v3 = (v0 ^ 0x7FEF5C30) + *(_DWORD *)(v1 + 12);
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 1234244748;
  BOOL v5 = v3 < 0x7FEF5DD5;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v0 + 1028) ^ 0x7FEF5838)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1889 * v6) ^ v0)))();
}

uint64_t sub_1001D960C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (int)(((((v28 - 1544683122) & 0x411FC95) + (v28 ^ 0xFFFFFA32)) * (v29 == 0)) ^ v28));
  HIDWORD(a23) = v27;
  *(void *)(v32 - 160) = v30;
  return v33(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001D965C()
{
  unsigned int v3 = v0 + 262598220;
  BOOL v4 = (v0 + 262598220) < 0x46053791;
  int v5 = ((2 * ((v0 << (v1 ^ 0xEC)) - 1824297618)) & 0x7DBD96D0) + (((v0 << (v1 ^ 0xEC)) - 1824297618) ^ 0x3EDECB69);
  if (v4 != (v5 + 119958568) < 0x46053791) {
    BOOL v6 = (v5 + 119958568) < 0x46053791;
  }
  else {
    BOOL v6 = v5 + 119958568 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((3447 * v6) ^ v1 ^ 0x17u)))();
}

uint64_t sub_1001D9710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v33 = *(void *)(v32 - 152);
  int v34 = (v29 - 643) | 0x401;
  *(void *)(v32 - 152) = v33;
  uint64_t v35 = *(void *)(v33 - 0x2A5C32E9989AD503);
  unsigned int v36 = ((a9 << (v34 - 16)) & 0x47FF7FFE) + (a9 ^ 0xA3FFBFFF) + 1543520257;
  *(unsigned char *)(v35 + v36 + 1) = -19;
  *(unsigned char *)(v35 + v36 + 2) = -89;
  *(unsigned char *)(v35 + v36) = -80;
  *(unsigned char *)(v35 + v36 + 3) = -81;
  *v28 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (((v34 ^ 0x55BE1C0F) + v34 - v30 + 1198) ^ v34)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001D98D0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 ^ 0x637) + 3 * (v1 ^ 0x508) - 1375) * (v0 == 0)) ^ v1 ^ 0x7F)))();
}

uint64_t sub_1001D9914()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1729931730 + ((v0 + 1039902712) & 0xC20456FD) + ((v0 - 875780956) & 0x34335DFB) - 2088;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 1652886757;
  BOOL v5 = v3 < 0x98E3562E;
  BOOL v6 = v3 > v4;
  if (v4 < 0x98E3562E != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((240 * v6) ^ v0)))();
}

uint64_t sub_1001D99B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  LODWORD(a24) = v25;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v26 + 868 + ((v26 + 1787091309) & 0x957B2677) - 1958) * (v27 == 0)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v28);
}

uint64_t sub_1001D9A04()
{
  unsigned int v3 = v1 + 63784098;
  BOOL v4 = (v1 + 63784098) < 0x3A2B8DE7;
  unsigned int v5 = ((2 * (((v0 + 58) ^ 0x934368B1) + 2 * v1)) & 0x6FFFDEDC) + ((((v0 + 58) ^ 0x934368B1) + 2 * v1) ^ 0xB7FFEF6F);
  if (v4 != v5 - 2111070600 < 0x3A2B8DE7) {
    BOOL v6 = v5 - 2111070600 < 0x3A2B8DE7;
  }
  else {
    BOOL v6 = v5 - 2111070600 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v6) | (8 * v6)) ^ v0)))();
}

uint64_t sub_1001D9AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v32 = *(void *)(v31 - 152);
  *(void *)(v31 - 152) = v32;
  uint64_t v33 = *(void *)(v32 - 0x2A5C32E9989AD503);
  unsigned int v34 = ((v28 ^ 0xDFCEFE15) & (2 * a9)) + (a9 ^ 0xEFE77DFF) + 270041601;
  *(unsigned char *)(v33 + v34) = 0;
  *(unsigned char *)(v33 + v34 + 1) = 0;
  *(unsigned char *)(v33 + v34 + 2) = 0;
  *(unsigned char *)(v33 + v34 + 3) = 1;
  *v27 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (int)((v29 + (((v28 ^ 0x7CD) + 561505745) & 0xDE881EDA) - 1443) ^ ((v28 ^ 0x7CD) - 338166480) & 0xBE69F4EF ^ v28 ^ 0x7CD)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001D9C88()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)((((v0 - 1152) ^ 0x746 ^ (v0 + 2074093803) & 0x845FD567) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1001D9CD4()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 60653252;
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 851495565;
  BOOL v5 = v3 < 0x39D7EBC;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x39D7EBC) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 * ((v0 + 774) ^ 0x560)) ^ v0)))();
}

uint64_t sub_1001D9D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  HIDWORD(a24) = v24;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((((v25 == 0) ^ v27 ^ 0x7D) & 1) * ((v27 ^ 0x22B) - 1848)) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           v26);
}

uint64_t sub_1001D9D8C()
{
  unsigned int v3 = v1 + 724353512;
  BOOL v4 = (v1 + 724353512) < 0x618B0B29;
  unsigned int v5 = (((v0 - 1066) ^ 0x6FFFB89D) & (2 * (2 * v1 - 1824297618))) + ((2 * v1 - 1824297618) ^ 0xB7FFDDEB);
  if (v4 != v5 - 1450496706 < 0x618B0B29) {
    BOOL v6 = v5 - 1450496706 < 0x618B0B29;
  }
  else {
    BOOL v6 = v5 - 1450496706 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((188 * v6) ^ v0)))();
}

uint64_t sub_1001D9E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v36 = *(void *)(v35 - 152);
  uint64_t v37 = (v31 + 1721066143) & 0x996A9D2D;
  unint64_t v38 = a30 - ((2 * a30) & 0xF99431D3CA63CC58) + 0x7CCA18E9E531E62CLL;
  *(void *)(v35 - 152) = v36;
  uint64_t v39 = (unsigned char *)(*(void *)(v36 - 0x2A5C32E9989AD503)
                + (a9 ^ 0x7BAEB7BBF9DF2D9FLL)
                - 0x7BAEB7BBF9DF2D9FLL
                + ((v37 ^ 0x1F3BE5E1ALL) & (2 * a9)));
  unsigned char *v39 = HIBYTE(v38) ^ 0x7C;
  v39[1] = BYTE6(v38) ^ 0xCA;
  v39[2] = BYTE5(v38) ^ 0x18;
  v39[3] = BYTE4(v38) ^ 0xE9;
  v39[4] = ((a30 - ((2 * a30) & 0xCA63CC58) - 449714644) >> 24) ^ 0xE5;
  void v39[5] = BYTE2(v38) ^ 0x31;
  v39[6] = BYTE1(v38) ^ 0xE6;
  v39[7] = v38 ^ 0x2C;
  *v30 += 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (int)((v32 + v33 + v37 - 1317 - 1681) ^ (v37 - 1189) ^ v37)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1001DA0A0()
{
  *(void *)(v4 - 128) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 + v0 - 128) ^ (v2 + 782) ^ ((v0 - 64) | 0x30C)) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1001DA0FC()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 1493)))();
  uint64_t v4 = *(void (**)(void))(v1 + 8 * (v0 ^ 0xBA5));
  *(void *)(v2 - 208) = v3;
  v4();
  uint64_t v5 = (*(uint64_t (**)(void, void))(v1 + 8 * (v0 + 1459)))(*(void *)(v2 - 168), 0);
  *(void *)(v2 - 192) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v5 == 0) * (((v0 - 2143211338) | 0x2A00C044) + 1438518261)) ^ v0)))();
}

uint64_t sub_1001DA1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v32 = v28 - 625;
  uint64_t v33 = (*(uint64_t (**)(void, uint64_t, void))(v29 + 8 * (v32 ^ 0x9DF)))(*(void *)(v30 - 168), a1, 0);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v33 != 0) * (v32 ^ 0xAA41F49D ^ (v32 - 1438518427))) ^ v32));
  *(void *)(v30 - 192) = a1;
  return v34(v33, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001DA234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  (*(void (**)(uint64_t, uint64_t))(v22 + 8 * (v20 ^ 0x8A1)))(a1, *(void *)(v21 + 8 * (v20 - 371)) - 12);
  (*(void (**)(uint64_t))(v22 + 8 * (v20 ^ 0x923)))(a1);
  (*(void (**)(uint64_t, void))(v22 + 8 * (v20 ^ 0x8BE)))(a1, *(void *)(v23 - 208));
  uint64_t v25 = (*(uint64_t (**)(void))(v22 + 8 * (v20 ^ 0x880)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (((v25 == *(void *)(v21 + 8 * (v20 ^ 0x198))) * (v20 + 1126 + 5 * (v20 ^ 0x18C) - 694)) ^ v20)))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1001DA2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * (int)(((a28 == (void)*(&off_1003ADCF0 + (v28 ^ 0x85)) - 8)
                                     * (v28 ^ 0xAA41F1EA ^ ((v28 + 541156268) | 0x8A009004))) ^ v28)))();
}

uint64_t sub_1001DA368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, void))(v29 + 8 * (v27 + 1946)))(a27, *(void *)(v30 - 208));
  uint64_t v31 = (*(uint64_t (**)(void))(v29 + 8 * (v27 + 1920)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v31 == v28) * (((v27 - 254) ^ 0xFFFFFF26) + (v27 ^ 0x46A))) ^ v27)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1001DA3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v30 + 8 * (((a28 != v29) * ((v28 + 254) ^ 0x190)) | v28)))();
}

uint64_t sub_1001DA41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, void))(v29 + 8 * (v27 ^ 0x8BE)))(a27, *(void *)(v30 - 208));
  uint64_t v31 = (*(uint64_t (**)(void))(v29 + 8 * (v27 ^ 0x880)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v31 == v28) * (((v27 ^ 0x46A) - 710) ^ 0x1E8)) ^ v27)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1001DA480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * (int)((((((v28 + 1126639268) & 0xBCD8D7BB) - 1438518604) ^ 0xAA41F073) * (a28 == v29)) ^ v28)))();
}

uint64_t sub_1001DA4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, void))(v29 + 8 * (v27 + 1946)))(a27, *(void *)(v30 - 208));
  uint64_t v31 = (*(uint64_t (**)(void))(v29 + 8 * (v27 ^ 0x880)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v31 == v28) * (((v27 + 333592173) & 0xEC1DCDF8 ^ 0xFFFFFA8C) + v27 - 252)) ^ v27)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1001DA558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v30 + 8 * ((((v28 + 252) ^ 0x75A) * (a28 == v29)) ^ v28)))();
}

uint64_t sub_1001DA5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, void))(v29 + 8 * (v27 + 1946)))(a27, *(void *)(v30 - 208));
  uint64_t v31 = (*(uint64_t (**)(void))(v29 + 8 * (v27 ^ 0x880)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v31 == v28) * (v27 + 1438521567 + v27 - 1438518604 - 3095)) ^ v27)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1001DA634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 8 * (v28 ^ 0xCEE)))(a28, v29, v31 - 128);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (((v32 == 0) * ((v28 + 68) ^ (v28 + 66))) | v28));
  *(void *)(v31 - 200) = 0x1A44E0EB4FC706ALL;
  return v33(v32, v34, v35, v36, v37, v38, v39, v40);
}

uint64_t sub_1001DA6B8()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xF31)))(24, 4101018099);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * (((v3 == 0) * ((v0 + 156) ^ v0 ^ 0x96)) ^ v0));
  *(void *)(v2 - 200) = 0x1A44E0EB4FC706ALL;
  return v4(v3, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1001DA740(uint64_t a1)
{
  *(void *)(v3 - 184) = a1 + 0x1A44E0EB4FC706ALL;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1814571000;
  *(void *)(a1 + 12) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 ^ 0xFA7)))(4096, 1358311088);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v1 - 107) ^ (v5 == 0)) & 1) * ((v1 ^ 0x664) - 178)) ^ v1)))();
}

uint64_t sub_1001DA7C8()
{
  *(_DWORD *)(v2 + 8) = v1 + 4096;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(void *)(v4 - 128) > (unint64_t)(v0
                                                                                          - 652
                                                                                          + v1
                                                                                          - 1814566904
                                                                                          - 693))
                                * ((v0 ^ 0x504) + 515)) ^ v0)))();
}

uint64_t sub_1001DA81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * ((((v3 + 360) ^ 0x413) * (v4 != 0)) ^ v3)))(a1, a2, a3);
}

uint64_t sub_1001DA854@<X0>(int a1@<W8>)
{
  unsigned int v5 = v1 + v2 + a1;
  unsigned int v6 = (((2 * a1 + 665825296) << (v3 ^ 0x1C)) & 0xFD5FDFF8) + ((2 * a1 + 665825296) ^ 0x7EAFEFFC);
  if (v5 > 0x4762EDD != v6 + 2094653734 < 0xFB89D122) {
    BOOL v7 = v6 + 2094653734 < 0xFB89D122;
  }
  else {
    BOOL v7 = v6 + 2094653734 > v5 - 74854110;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((367 * v7) ^ v3 ^ 0x2B4)))(4250918904, 3984078844, 2094653734);
}

uint64_t sub_1001DA914()
{
  uint64_t v4 = *(uint64_t (**)(void))(v2 + 8 * (int)((((v0 - 95685618) & 0xAFF5FF6F ^ 0xAA41F451) * (v1 == 0)) | v0));
  *(void *)(v3 - 200) = 0x1A44E0EB4FC706ALL;
  return v4();
}

uint64_t sub_1001DA978@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v24 = a1 - 200;
  (*(void (**)(uint64_t))(v22 + 8 * (a1 + 1438520241)))(v21);
  *(void *)(v23 - 200) = 0x1A44E0EB4FC706ALL;
  (*(void (**)(uint64_t))(v22 + 8 * (v24 + 1438520511)))(v20);
  (*(void (**)(uint64_t))(v22 + 8 * (int)(v24 ^ 0xAA41FD43)))(a20);
  return (*(uint64_t (**)(void))(v22 + 8 * ((74 * (*(void *)(v23 - 208) != 0)) | (v24 + 1438519375))))();
}

uint64_t sub_1001DAD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v33 = (*(uint64_t (**)(void))(v31 + 8 * v29))();
  uint64_t v34 = *(uint64_t (**)(uint64_t))(v31 + 8 * ((v28 - 510) ^ ((a28 == 0) | (4 * (a28 == 0)))));
  *(void *)(v32 - 192) = v30;
  return v34(v33);
}

uint64_t sub_1001DAD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  (*(void (**)(uint64_t))(v34 + 8 * (int)(v29 ^ 0xAA41FD43)))(a28);
  *(void *)(v35 - 192) = v30;
  if (v31 == -45004)
  {
    *(void *)(v35 - 184) = v33;
    *(void *)(v35 - 144) = 0;
    *(_DWORD *)(v35 - 132) = 0;
    uint64_t v43 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v34 + 18736))(**(unsigned int **)(v32 + 64), *(void *)v28, *(unsigned int *)(v28 + 12), v35 - 144, v35 - 132);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((1320 * ((v43 ^ 0x7FFFFEAB) - 899814434 + ((2 * v43) & 0xFFFFFD56) == 1516104332)) ^ 0x153)))(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else if (v31)
  {
    return sub_1001DC010();
  }
  else
  {
    return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((462 * (*(void *)(v35 - 200) != 0x1A44E0EB4FC706ALL)) ^ 0xED)))(*(void *)(v35 - 200), v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
}

uint64_t sub_1001DB494(uint64_t a1)
{
  int v3 = (v1 - 469144713) & 0x71B4A762;
  unsigned int v4 = *(_DWORD *)(a1 - 0x1A44E0EB4FC705ELL) + 2002279202;
  unsigned int v5 = ((v3 - 1420259747) & 0x54A76E93 ^ 0xB303737) + *(_DWORD *)(a1 - 0x1A44E0EB4FC7062);
  int v6 = (v4 < 0x77585B1E) ^ (v5 < 0x77585B1E);
  BOOL v7 = v4 > v5;
  if (v6) {
    BOOL v7 = v4 < 0x77585B1E;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v7 * (v3 - 1702)) ^ v3)))();
}

uint64_t sub_1001DB550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2 = v3 + 4;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((((a1 == a2) ^ (((v4 + 81) & 0x9F) - 82)) & 1)
                                     * ((v5 + ((v4 + 575506257) & 0xDDB2759F) - 1041) ^ (v5 - 22))) ^ (v4 + 575506257) & 0xDDB2759F)))();
}

uint64_t sub_1001DB620()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((*(void *)(*(void *)(v3 - 200) - 0x1A44E0EB4FC706ALL) == 0) ^ ((v0 & 0xC9) - 68)) & 1)
                                     * (v0 & 0x8E77A3C9 ^ (v1 + 905) ^ (v1 + 36))) ^ v0 & 0x8E77A3C9)))();
}

uint64_t sub_1001DB688@<X0>(int a1@<W8>)
{
  unsigned int v5 = (a1 + 171965627) | 0xA001F402;
  (*(void (**)(void))(v4 + 8 * (int)(v5 ^ (v3 + 2227))))();
  *int v1 = 0;
  *(_DWORD *)(v2 - 0x1A44E0EB4FC7062) = 1814571000;
  *(_DWORD *)(v2 - 0x1A44E0EB4FC705ELL) = 0;
  (*(void (**)(void *))(v4 + 8 * (int)(v5 ^ (v3 + 2227))))(v1);
  return sub_1001DC010();
}

uint64_t sub_1001DB708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,int a31,int a32)
{
  uint64_t v37 = (*(uint64_t (**)(void))(v35 + 8 * (v34 ^ (v34 + 2227))))(*(void *)(v33 - 0x1A44E0EB4FC706ALL));
  *(void *)(v33 - 0x1A44E0EB4FC706ALL) = a22;
  *a30 = a32;
  *(void *)(v36 - 160) = v32;
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * ((((((167 * (v34 ^ (v34 + 8)) - 1270) ^ 1) & 1) == 0)
                                              * (((167 * (v34 ^ (v34 + 8)) - 1304) | 0x41) ^ 9)) ^ (167
                                                                                                  * (v34 ^ (v34 + 8))))))(v37);
}

void sub_1001DB7A8()
{
  *(void *)(v1 - 176) = v0;
  JUMPOUT(0x1001DB7DCLL);
}

uint64_t sub_1001DB844()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v1 - 1476338727) | 0x2411404) ^ (v3 + 168)) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_1001DB888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v6 = v3 - 524;
  unsigned int v7 = 5 * ((v3 - 344459283) & 0xBEC9F7EF ^ (v4 - 57));
  BOOL v9 = v2 > 7 && (unint64_t)(a1 - a2) > 0x1F;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((v7 - 323) * v9) ^ v6)))();
}

uint64_t sub_1001DB8DC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((213 * (v0 >= (v1 ^ 0x2EC ^ (v2 + 951) ^ ((v1 + 37868175) | 0xA8002040)))) ^ v1)))();
}

uint64_t sub_1001DB92C@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1533 * ((v2 & 0xFFFFFFE0) - (unint64_t)(v4 + v3 - 157) == -2050)) ^ (v4 + v3 - 1401))))();
}

uint64_t sub_1001DB97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v7 = *(_OWORD *)(a3 + a2 + 16);
  uint64_t v8 = (_OWORD *)(a1 + a2);
  _OWORD *v8 = *(_OWORD *)(a3 + a2);
  v8[1] = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 == a2) * v5) ^ v4)))();
}

uint64_t sub_1001DB9AC()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + ((v2 - 2109649952) | 0x2800A044) - 2214) * (v0 != v1)) | v2)))();
}

uint64_t sub_1001DB9E8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((194 * (((v1 - 1707 - v2 + 1864 + ((v1 - 1952) | 0x319) + 1438517303) & v0) == 0)) ^ (v1 - 1707))))();
}

uint64_t sub_1001DBA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((v4 ^ 3 ^ (v5 + 941)) & v3) - 8 != v2) * ((((v4 ^ 3) - 828) | 0x201) - 602)) | v4 ^ 3)))();
}

uint64_t sub_1001DBA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 != v5) * v4) | v2)))();
}

uint64_t sub_1001DBAA8()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 ^ (v3 + 469) ^ (v3 - 819)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1001DBAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + v2) = *(unsigned char *)(a2 + v2);
  return (*(uint64_t (**)(void))(v6 + 8 * ((44 * (v2 + 1 == v3)) ^ (v5 + v4 - 1074))))();
}

uint64_t sub_1001DBB08()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v3 + ((v1 + 117195770) & 0xF903BBFF) - 982) ^ (v3 + 26)) * (v0 != v2)) ^ v1)))();
}

uint64_t sub_1001DBB54()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 + v3 + ((v0 - 925) | 0x500) - 1337 - 225) * (v1 > 7)) ^ v0)))();
}

uint64_t sub_1001DBB90()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 ^ (v2 - 711) ^ (v2 - 13)) * (v0 > 0x1F)) ^ v1)))();
}

uint64_t sub_1001DBBC0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((247
                                * (v0 < ((v1 - 278529498) & 0xBADBF4E6 ^ (v2 + 950) ^ (v1 - 1783889306) & 0x6A53FBFA))) ^ (v1 + 300))))();
}

uint64_t sub_1001DBC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v8 = (v4 + (v3 ^ (v6 + 210)) + 1518) & (v2 - 1);
  long long v9 = *(_OWORD *)(a2 + v8 - 15);
  long long v10 = *(_OWORD *)(a2 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((4 * ((v2 & 0xFFFFFFE0) == 32)) | (8 * ((v2 & 0xFFFFFFE0) == 32)) | (v5 + v3 - 1468))))();
}

void sub_1001DBC84()
{
}

uint64_t sub_1001DBC90()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ (v0 == v1)) & 1) == 0) * (((v2 - 285) | 0x80) - 147)) ^ v2)))();
}

uint64_t sub_1001DBCC4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((39
                                * ((v0 & 0x18) == ((v1 - v2 + 2046) ^ 0xFFFFFFFF55BE0820)
                                                + (v1 + 729))) ^ v1)))();
}

uint64_t sub_1001DBD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (~v2 + v3)) = *(void *)(a2 - 7 + (~v2 + v3));
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 - (v3 & 0xFFFFFFF8) == -8) * ((v4 + 415) ^ 0x189)) ^ v4)))();
}

uint64_t sub_1001DBD60(uint64_t a1, int a2, unsigned int a3, uint64_t a4)
{
  *(void *)(v6 + a3) = *(void *)(v5 + a3);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a4 == 0) * a2) ^ v4)))();
}

uint64_t sub_1001DBD90()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + v0 + 902 - 2685) * (v2 == v1)) ^ v0)))();
}

uint64_t sub_1001DBDC0()
{
  return v0();
}

uint64_t sub_1001DBDC8()
{
  uint64_t v1 = *(void *)(v0 - 176);
  *(_DWORD *)(v1 - 0x1A44E0EB4FC7062) = (*(_DWORD *)(v0 - 132) ^ 0xEE787FFD)
                                        + 2108663803
                                        + ((2 * *(_DWORD *)(v0 - 132)) & 0xDCF0FFFA);
  *(_DWORD *)(v1 - 0x1A44E0EB4FC705ELL) = 0;
  return sub_1001DBFB0();
}

uint64_t sub_1001DBE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * (v6 != 0)) | (8 * (v6 != 0))) ^ (v4 + v3 - 763))))();
}

uint64_t sub_1001DBE64()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 == 0x1A44E0EB4FC706ALL) ^ ((v0 | 0xAC) - 35)) & 1)
                                     * (((v0 | 0x1AC) - 1438518696) ^ 0xAA41F45E)) ^ (v0 | 0x1AC))))();
}

uint64_t sub_1001DBEC8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((*(void *)(v1 - 0x1A44E0EB4FC706ALL) == 0) ^ (a1 + 58)) & 1)
                                     * ((a1 - 1100091773) & 0xEBD3FFF7 ^ (v2 + 859))) ^ a1)))();
}

uint64_t sub_1001DBF30@<X0>(int a1@<W8>)
{
  int v5 = (a1 - 1572753863) | 0x8004042;
  (*(void (**)(void))(v4 + 8 * (v5 ^ (v3 + 2227))))();
  void *v2 = 0;
  *(_DWORD *)(v1 - 0x1A44E0EB4FC7062) = 1814571000;
  *(_DWORD *)(v1 - 0x1A44E0EB4FC705ELL) = 0;
  uint64_t v6 = (*(uint64_t (**)(void *))(v4 + 8 * (v5 ^ (v3 + 2227))))(v2);
  return sub_1001DBFB0(v6);
}

uint64_t sub_1001DBFB0()
{
  uint64_t v7 = (*(uint64_t (**)(void, void, void))(v5 + 8 * (v0 ^ (v4 + 2322))))(*(unsigned int *)*(&off_1003ADCF0 + v1 + v0 - 2209), *(void *)(v6 - 144), *(unsigned int *)(v6 - 132));
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v5 + 8 * ((1989 * (v2 == 0)) ^ (v1 + v0 - 1689)));
  *(void *)(v6 - 200) = v3;
  return v8(v7);
}

uint64_t sub_1001DC010()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)(((((v1 + 1500410679) & 0xFC4F9DEF) - 1379) * (v0 == 0)) ^ (v2 + v1 - 2108))))();
}

uint64_t sub_1001DC050@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((a1 - 1149634183) ^ (*v1 == 0)) & 1) == 0)
                                     * ((a1 - 1149634183) & 0xEEC7F55F ^ (v2 + 19))) ^ a1)))();
}

void sub_1001DC09C()
{
  (*(void (**)(void))(v3 + 8 * (v1 ^ (v2 + 2227))))();
  *(void *)uint64_t v0 = 0;
  *(_DWORD *)(v0 + 8) = 912148809;
  *(_DWORD *)(v0 + 12) = 0;
  JUMPOUT(0x1001DC0D8);
}

uint64_t sub_1001DC0E8()
{
  return v0;
}

void sub_1001DC128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2) {
    BOOL v5 = a3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v8 = v5 || a4 == 0 || a5 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001DC1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29,void *a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  *a30 = 0;
  *a29 = 0;
  *a31 = 0;
  *a24 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const char *, void *, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, void *, _DWORD *, void *, void *, void *, uint64_t, uint64_t))(v34 + 8 * ((59 * (a1 == 0)) ^ 0x2D1)))(a1, a2, a3, a4, 992817389, 3302152146, a7, a8, a9, a10, "com.apple.adid", &unk_1004020D8, &unk_1004020DC, &unk_100402084, a15, a16, a17, a18, a19,
           a20,
           a21,
           &unk_1004020E0,
           a23,
           a24,
           a25,
           a1,
           a27,
           &unk_1004020DC,
           a29,
           a30,
           a31,
           &unk_100402088,
           a33,
           a34);
}

uint64_t sub_1001DC2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((38 * (v5 == (((v6 + 452984265) | 0x202D3005) ^ a5))) ^ v6)))();
}

uint64_t sub_1001DC300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v7 = v5 + 76;
  int v8 = v7 ^ (a5 + 665);
  BOOL v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * (v7 ^ 0xA60)))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v9 * (v8 - 992815150 + 134 * (v7 ^ 0x36E) - 2677)) ^ v7)))();
}

uint64_t sub_1001DC370(uint64_t a1)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1337481487;
  *(void *)(a1 + 12) = 0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 1645)))(4096, 1358311088);
  *(void *)a1 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v4 == 0) * ((v1 ^ 0x39B) - 200)) ^ v1)))();
}

uint64_t sub_1001DC3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)(v4 + 8) = v7 + 4096;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * (((((14
                                                                                              * ((v5 + 1727) ^ 0x7D5)) ^ 0x3F6)
                                                                                            - 783)
                                                                                           * (v4 == 0)) | (v5 + 1727))))(a1, a2, a3, a4, 992817389, 3302152146);
}

uint64_t sub_1001DC448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unsigned int v49 = *(_DWORD *)(v47 + 12) - 130544155;
  unsigned int v50 = *(_DWORD *)(v47 + 8) - 1468025646;
  BOOL v51 = v49 < 0xF8380DE1;
  BOOL v52 = v49 > v50;
  if (v51 != v50 < 0xF8380DE1) {
    unsigned __int8 v53 = v51;
  }
  else {
    unsigned __int8 v53 = v52;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (((((5 * (v46 ^ 0x3D)) ^ v53) & 1) * (55 * (v46 ^ 0x31C) - 162)) ^ v46)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

void sub_1001DC4D8(int a1@<W8>)
{
  int v5 = (v2 - 81) | 0x86;
  uint64_t v6 = *(void *)(v3 - 0x53F82AF96D6B682ELL);
  unsigned int v7 = ((2 * a1) & 0x6FBFFBDE) + (a1 ^ 0x37DFFDEF);
  *(unsigned char *)(v6 + v7 + (v5 ^ 0xC82002FF)) = 0;
  v7 -= 937426414;
  *(unsigned char *)(v6 + v7) = 0;
  *(unsigned char *)(v6 + v7 + 1) = 0;
  *(unsigned char *)(v6 + v7 + 2) = 1;
  *v1 += 4;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001DDCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((45 * (a39 != 0x53F82AF96D6B682ELL)) ^ v49)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1001DDD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  unsigned int v53 = (v50 + 1211070133) & 0xB7D087FE;
  unsigned int v54 = *(_DWORD *)(v51 - 0x53F82AF96D6B6822) - 1322609147;
  unsigned int v55 = *(_DWORD *)(v51 - 0x53F82AF96D6B6826) + 1634876658;
  BOOL v56 = v54 < (((v53 ^ 0x7F8) - 1322611214) ^ (v53 + 91));
  BOOL v57 = v54 > v55;
  if (v56 != v55 < 0xB12A9601) {
    BOOL v58 = v56;
  }
  else {
    BOOL v58 = v57;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (int)((41 * v58) ^ v53)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1001DDDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  LODWORD(a43) = v51;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * (int)((((v52 - 850) ^ (a5 - 181) ^ (a5 + 17)) * (v53 == 0x53F82AF96D6B682ELL)) ^ v52)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1001DDE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v9 = ((2 * (a6 + v7 + 1620003779 + 2 * v6 - 1696)) & 0xFFF8B73C)
     + ((a6 + v7 + 1620003779 + 2 * v6 - 1696) ^ 0x7FFC5B9F)
     + 784619079;
  BOOL v10 = v9 < 0xAEC0B1E6;
  BOOL v11 = v9 > v6 + 1594382555;
  if ((v6 + 1594382555) < 0xAEC0B1E6 != v10) {
    BOOL v12 = v10;
  }
  else {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((28 * !v12) ^ (a6 + v7 - 981))))(784619079);
}

uint64_t sub_1001DDED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  LODWORD(a43) = v52;
  uint64_t v62 = (*(uint64_t (**)(void, uint64_t))(v54 + 8 * (v55 + 619)))(v53 + ((v55 + 1719611453) & 0x9980C9F7) + ((v55 - 1632) | 0x22) - 2147245270, 1120292948);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * ((v62 == 0) ^ v55)))(v62, v56, v57, v58, 992817389, 3302152146, v59, v60, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

void sub_1001DDF60()
{
}

uint64_t sub_1001DDFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,_DWORD *a59,uint64_t a60)
{
  uint64_t v61 = (*(uint64_t (**)(void))(v60 + 8 * (a5 + a6)))(*(void *)(a57 - 0x53F82AF96D6B682ELL));
  *(void *)(a57 - 0x53F82AF96D6B682ELL) = a60;
  *a59 = a43;
  return sub_1001DE010(v61);
}

uint64_t sub_1001DE010@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v5 = *(void *)(v2 - 0x53F82AF96D6B682ELL);
  unsigned int v6 = ((v1 << (((v3 - 55) & 0xD7) + 44)) & 0x7FAFFDFE) + (v1 ^ 0x3FD7FEFF) - 1071120127;
  *(unsigned char *)(v5 + v6 + 1) = -32;
  *(unsigned char *)(v5 + v6 + 2) = -76;
  *(unsigned char *)(v5 + v6) = -49;
  *(unsigned char *)(v5 + v6 + 3) = 106;
  *a1 += 4;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((v3 + 1679218889) & 0x9BE923D7 ^ 0x786) & 1) == 0)
                                     * (13 * ((v3 + 1679218889) & 0x9BE923D7 ^ 0xB2) - 1280)) ^ (v3 + 1679218889) & 0x9BE923D7)))();
}

uint64_t sub_1001DE0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (((v54 & ~((17 * (v53 ^ 0x75C)) ^ (a39 == 0x53F82AF96D6B682ELL))) * ((v53 ^ 0x11E) - 1550)) ^ v53)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1001DE144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  unsigned int v57 = *(_DWORD *)(v55 - 0x53F82AF96D6B6822) + 58686617;
  unsigned int v58 = ((v54 + 1014413480) & 0xC389497F) - 1278797038 + *(_DWORD *)(v55 - 0x53F82AF96D6B6826);
  BOOL v59 = v57 < ((v54 + 866148595) & 0xCC5F9AFF) + 58686038;
  BOOL v60 = v57 > v58;
  if (v59 != v58 < 0x37F7C95) {
    BOOL v61 = v59;
  }
  else {
    BOOL v61 = v60;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * ((50 * v61) | v54)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1001DE20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  HIDWORD(a++*(void *)(*(void *)(result + 32) + 48) = v55;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (int)(((((v57 == 0x53F82AF96D6B682ELL) ^ (v56 - 1)) & 1) * (a6 + (v56 ^ (a5 + 1964)) - 2002)) ^ v56)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1001DE26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v9 = ((2 * (2 * v6 + 1620004322)) & 0xFF73B31C) + ((2 * v6 + 1620004322) ^ 0xFFB9D98F) + 350686845;
  BOOL v10 = v9 < 0x14A0E80C;
  BOOL v11 = v9 > v6 - 991391999;
  if ((v6 - 991391999) < 0x14A0E80C != v10) {
    BOOL v12 = v10;
  }
  else {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((2982 * v12) ^ (a6 + v7 - 1299))))();
}

uint64_t sub_1001DE324@<X0>(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v2 - 0x53F82AF96D6B682ELL);
  unsigned int v6 = ((2 * a1) & 0xD7BE7BFE) + (a1 ^ 0x6BDF3DFF) - 1809792749;
  *(unsigned char *)(v5 + v6 + v3 - 337) = 0;
  *(unsigned char *)(v5 + v6 + 239) = 0;
  *(unsigned char *)(v5 + v6 + 240) = 0;
  *(unsigned char *)(v5 + v6 + 241) = 1;
  *v1 += 4;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((233 * ((v3 - 337) ^ 0xEC)) ^ 0x5D) + ((v3 - 517) | 0x501)) ^ (v3 - 337))))();
}

uint64_t sub_1001DE518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (((a39 == 0x53F82AF96D6B682ELL) * (v57 ^ 0x59D ^ v57 ^ 0x13C ^ 0x491)) ^ v57)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1001DE570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  unsigned int v61 = (((v58 - 604) | 0x608) ^ 0x16946541) + *(_DWORD *)(v59 - 0x53F82AF96D6B6822);
  unsigned int v62 = *(_DWORD *)(v59 - 0x53F82AF96D6B6826) - 958658141;
  BOOL v63 = v61 < v58 + 378822243;
  BOOL v64 = v61 > v62;
  if (v63 != v62 < 0x169462B2) {
    BOOL v65 = v63;
  }
  else {
    BOOL v65 = v64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((753 * v65) ^ v58)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1001DE618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  LODWORD(a44) = v59;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * ((4085 * (((v61 == 0x53F82AF96D6B682ELL) ^ (v60 + 4)) & 1)) ^ v60)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1001DE66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  unsigned int v9 = ((2 * (2 * v6 + 1620004322)) & 0x9F79FE9C)
     + ((2 * v6 + 1620004322) ^ 0x4FBCFF4F)
     + (((v7 & 0xFF3DBDED) - a5 + 1930) ^ 0x737EEADB);
  BOOL v10 = v9 < 0xC33BECA0;
  BOOL v11 = v9 > v6 + 1938002841;
  if ((v6 + 1938002841) < 0xC33BECA0 != v10) {
    BOOL v12 = v10;
  }
  else {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((2057 * v12) ^ (a6 + (v7 & 0xFF3DBDED) - 2075))))();
}

uint64_t sub_1001DE720@<X0>(_DWORD *a1@<X8>)
{
  int v6 = v3 ^ 0x764;
  unint64_t v7 = v5 - ((2 * v5) & 0xF99431D3CA63CC58) + 0x7CCA18E9E531E62CLL;
  uint64_t v8 = (unsigned char *)((((unint64_t)v1 << (v6 + 19)) & 0x1EFFD5FF2)
               + (v1 ^ 0x23FE2B3FF7FEAFF9)
               + *(void *)(v2 - 0x53F82AF96D6B682ELL)
               - 0x23FE2B3FF7FEAFF9);
  unsigned char *v8 = HIBYTE(v7) ^ 0x7C;
  v8[1] = BYTE6(v7) ^ 0xCA;
  void v8[2] = BYTE5(v7) ^ 0x18;
  v8[3] = BYTE4(v7) ^ 0xE9;
  void v8[4] = ((v5 - ((2 * v5) & 0xCA63CC58) - 449714644) >> 24) ^ 0xE5;
  void v8[5] = ((v5 - ((2 * v5) & 0xCA63CC58) - 449714644) >> 16) ^ 0x31;
  v8[6] = ((unsigned __int16)(v5 - ((2 * v5) & 0xCC58) - 6612) >> 8) ^ 0xE6;
  void v8[7] = (v5 - ((2 * v5) & 0x58) + 44) ^ 0x2C;
  *a1 += 8;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((v6 + 1299785425) & 0xB286DD7B ^ 0x9E ^ v6)))();
}

uint64_t sub_1001DE9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v40 + 8 * (int)(((a39 == 0x53F82AF96D6B682ELL) * ((v39 + 2072) ^ 0x3B2D39EB ^ (a5 + 1780) ^ (5 * ((v39 + 2072) ^ 0x861)))) ^ (v39 + 2072))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           0,
           a39);
}

uint64_t sub_1001DEA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v64 = (v63 - 635) ^ (a5 + 888);
  (*(void (**)(void))(v62 + 8 * (v63 + 542)))();
  (*(void (**)(void))(v62 + 8 * (v63 ^ 0xFEA)))();
  uint64_t v71 = (*(uint64_t (**)(uint64_t, void))(v62 + 8 * (v63 ^ 0xFFC)))(a11, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (((v71 != 0) * (v64 - 992815150 + ((v63 - 635) | 0x30) - 3430)) ^ v63)))(v71, v65, v66, v67, 992817389, 3302152146, v68, v69, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_1001DEB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 v65 = v63 ^ (a5 + 104);
  uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t, void))(v64 + 8 * (v63 ^ 0xDBC)))(a11, a1, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * ((((v65 ^ (v72 == 0)) & 1) * ((17 * (v63 ^ 0x4A5)) ^ 0x188)) ^ v63)))(v72, v66, v67, v68, 992817389, 3302152146, v69, v70, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

#error "1001DEC3C: call analysis failed (funcsize=42)"

uint64_t sub_1001DEC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = v8 - 1727;
  int v11 = 181 * ((v8 - 68324306) & 0x3F3FB3FF ^ (v5 - 3));
  BOOL v12 = v7 == *(void *)(v9 + 8 * (v10 - 493)) - 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * (((4
                                                                                            * ((v12 ^ v11) & 1)) & 0xF7 | (8 * ((v12 ^ v11) & 1))) ^ v10)))(a1, a2, a3, a4, a5, 3302152146);
}

uint64_t sub_1001DECA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v31 = a6 + ((v30 + 1073689354) & 0xFB2DF8EF);
  uint64_t v32 = v27;
  (*(void (**)(uint64_t, uint64_t))(v29 + 8 * (v30 + 1081)))(a27, v28);
  BOOL v33 = (*(uint64_t (**)(void))(v29 + 8 * (v30 + 1055)))() == v32;
  return (*(uint64_t (**)(void))(v29 + 8 * ((v33 * (v31 - 1691)) ^ v30)))();
}

uint64_t sub_1001DED20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a6 + ((v9 + 36444165) | 0x39011029) + 329) * (v8 == v7)) ^ (v9 - 1715))))();
}

uint64_t sub_1001DED60@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v24 = a2 + 743;
  int v25 = ((a2 + 743) ^ 0x4F1) - a1 + 2237;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8 * ((a2 + 743) ^ 0xDDF)))(a21, v21);
  BOOL v26 = (*(uint64_t (**)(void))(v23 + 8 * (v24 + 1055)))() == v22;
  return (*(uint64_t (**)(void))(v23 + 8 * ((v26 * (v25 ^ 0x3B2D3E45 ^ (262 * (v24 ^ 0x4F1)))) ^ v24)))();
}

uint64_t sub_1001DEDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((a6 + ((v9 + 957152885) | 0x220306C) - 2117) ^ (v9 - 423651853) & 0x19406CF3)
                                * (v8 == v7)) ^ v9)))();
}

uint64_t sub_1001DEE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, uint64_t))(v29 + 8 * (v30 + 1081)))(a27, v27);
  BOOL v31 = (*(uint64_t (**)(void))(v29 + 8 * (v30 ^ 0xDE1u)))() == v28;
  return (*(uint64_t (**)(void))(v29 + 8 * ((v31 * ((v30 - 743) ^ 0x3EC)) ^ v30)))();
}

uint64_t sub_1001DEEB8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v3 + 992816865) ^ 0x3B2D33DB ^ (7 * (v3 ^ 0x2B9))) * (v2 == v1)) ^ v3)))();
}

uint64_t sub_1001DEF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v32 = v31 ^ (v27 + 817);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8 * (v31 + 1081)))(a27, v28);
  BOOL v33 = (*(uint64_t (**)(void))(v30 + 8 * (v31 + 1055)))() == v29;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v33 * (v32 ^ 0x3B2D3C34)) ^ v31)))();
}

uint64_t sub_1001DEF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return sub_1001DF8C4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1001DEF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  unint64_t v38 = STACK[0x208];
  (*(void (**)(void))(v37 + 8 * (a5 ^ (a5 + 1893))))(*(void *)(STACK[0x208]
                                                                                            - 0xE22A8927A3C9258));
  *(void *)(v38 - 0xE22A8927A3C9258) = STACK[0x218];
  *(_DWORD *)STACK[0x210] = a37;
  JUMPOUT(0x1001E06CCLL);
}

uint64_t sub_1001DF02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(a47 - 0xE22A8927A3C9250) = (a38 ^ 0x7FDE7DAB) - 268964865 + ((2 * a38) & 0xFFBCFB56);
  *(_DWORD *)(a47 - 0xE22A8927A3C924CLL) = 1241410955;
  return sub_1001DF8C4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a65);
}

void sub_1001DF0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  unint64_t v42 = STACK[0x220];
  (*(void (**)(void))(v41 + 8 * (a5 ^ (a5 + 1893))))(*(void *)(STACK[0x220]
                                                                                            - 0xE22A8927A3C9258));
  *(void *)(v42 - 0xE22A8927A3C9258) = STACK[0x230];
  *(_DWORD *)STACK[0x228] = a41;
  LODWORD(STACK[0x238]) = 0;
  JUMPOUT(0x1001DCDE8);
}

uint64_t sub_1001DF108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47)
{
  *(_DWORD *)(a45 - 0xE22A8927A3C9250) = (a47 ^ 0x6FFEF9FE) - 2658388 + ((a6 + a5 - 537007299) & (2 * a47));
  *(_DWORD *)(a45 - 0xE22A8927A3C924CLL) = 1241410955;
  return sub_1001E0080(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1001DF180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(v39 + 8 * (v38 - 992815063)))(v40, v41, &a38);
  STACK[0x200] = v42;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (((v42 != 0) * (v38 - 992813338)) ^ (v38 - 992815352))))(v42, v43, v44, v45, v46, 3302152146, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1001DF194@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 - 2050267004) ^ 0x85CB68A7 ^ (v1 - 2050267004) & 0x7A349774 ^ 7) * (a1 == 0)) ^ v1)))();
}

void sub_1001DF1DC(uint64_t a1@<X8>, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  (*(void (**)(uint64_t))(v27 + 8 * (v25 + 1347)))(a1);
  *BOOL v26 = 0;
  *a3 = 0;
  *(_DWORD *)(a25 + 40 * a18 + 36) = 0;
  JUMPOUT(0x1001DF22CLL);
}

uint64_t sub_1001DF25C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v2 == 0xE22A8927A3C9258) ^ (v0 + 88)) & 1)
                                     * ((v0 + 1563049628) & 0xA2D5BFFF ^ 0x50F)) ^ v0)))();
}

uint64_t sub_1001DF2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((a6 + ((a5 + ((v6 + 1668856151) & 0x9C8746BD) + 12583246) & 0xFF3FF7FD) - 2123)
                                     * (*(void *)(v8 - 0xE22A8927A3C9258) == 0)) ^ (v6 + 1668856151) & 0x9C8746BD)))();
}

uint64_t sub_1001DF328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  void *v39 = 0;
  *(_DWORD *)(v42 - 0xE22A8927A3C9250) = 1876322730;
  *(_DWORD *)(v42 - 0xE22A8927A3C924CLL) = 1241410955;
  uint64_t v43 = (*(uint64_t (**)(void *))(v41 + 8 * (v40 + a6)))(v39);
  return (*(uint64_t (**)(uint64_t))(v41
                                            + 8
                                            * (((((v40 - 50) & 0x7F ^ (a39 == 0x53F82AF96D6B682ELL) ^ 0xEC) & 1)
                                              * (((v40 - 1036569394) & 0x29B9F7F) - 1193)) ^ (v40 - 1036569394) & 0x29B9F7F)))(v43);
}

uint64_t sub_1001DF40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((*(void *)(v6 - 0x53F82AF96D6B682ELL) == 0) * ((v7 - 70 - a6 + 970) ^ (a5 - 7))) ^ (v7 - 70))))();
}

void sub_1001DF454()
{
  *uint64_t v1 = 0;
  *(_DWORD *)(v0 - 0x53F82AF96D6B6826) = 1337481487;
  *(_DWORD *)(v0 - 0x53F82AF96D6B6822) = 0;
  JUMPOUT(0x1001DF4B0);
}

uint64_t sub_1001DF504()
{
  int v4 = 171 * (v0 & 0xC35A7B7 ^ 0x303);
  uint64_t v5 = (*(uint64_t (**)(void))(v2 + 8 * ((v0 & 0xC35A7B7u) + 1465)))();
  void *v3 = 0;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((v4 - 2050267004) ^ 0x85CB68A7 ^ (v4 - 2050267004) & 0x7A349774 ^ 7)
                                                   * (*v1 == 0)) ^ v4)))(v5);
}

void sub_1001DF580()
{
}

uint64_t sub_1001DF600()
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 + 2029) ^ 0xEE6)))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 * (((v2 + v0) ^ 0x3B2D3B26) + ((v0 + 2029) ^ 0x3F8))) ^ (v0 + 2029))))();
}

uint64_t sub_1001DF670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1876322730;
  *(void *)(a1 + 12) = 1241410955;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8 * (v15 ^ 0xD1E)))(4096, 1358311088);
  *(void *)a1 = v17;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (((v17 == 0) * (v15 - 696 + ((2 * v15) ^ 0xF3C) - 2110)) ^ v15)))(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1001DF708()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((((v3 + v2 + 5393845) & 0xFFADB0ED) - 992817348) * (v0 != 0)) ^ v2)))();
}

uint64_t sub_1001DF74C@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a2 - 349 + a1)))(v2);
  return sub_1001DF8C4(v4);
}

uint64_t sub_1001DF8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v31 = a6 + v27;
  (*(void (**)(uint64_t))(v29 + 8 * (a6 + v27 + 70)))(v30);
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v27 ^ 0x3B2D39E8)))(a27);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((27 * (v28 != 0)) | (v31 - 123))))(v32);
}

uint64_t sub_1001DF920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  (*(void (**)(uint64_t))(v74 + 8 * v75))(v72);
  return (*(uint64_t (**)(void))(v74 + 8 * ((15 * (a72 != 0)) ^ (v73 - 1261))))();
}

uint64_t sub_1001DF970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v9 = (*(uint64_t (**)(void))(v7 + 8 * (a6 + v6 + 70)))();
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * (((v8 == v6 - 992862393) * ((v6 - 992816798) ^ 0xF55)) ^ (v6 - 992815916))))(v9);
}

uint64_t sub_1001DF9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  unsigned int v50 = ((v48 + 992965294) & 0xFFFDBBEF) - a5 + 593;
  a34 = 0;
  a47 = 0;
  a45 = 0xE22A8927A3C9258;
  uint64_t v51 = (*(uint64_t (**)(void, void, void, uint64_t *, int *))(v47 + 8 * (v48 + 1751)))(**(unsigned int **)(v49 + 8 * (v48 - 583)), *(void *)(a39 - 0x53F82AF96D6B682ELL), *(unsigned int *)(a39 - 0x53F82AF96D6B6822), &a34, &a47);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * ((30 * ((v51 ^ 0x7F5DEF89) - 889193728 + ((2 * v51) & 0xFEBBDF12) != (v50 ^ 0x5A5DE8DD))) ^ v48)))(v51, v52, v53, v54, v55, v56, v57, v58, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1001DFAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  BOOL v16 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v12 + 8 * (v11 ^ 0xB63)))(**(unsigned int **)(v15 + 8 * (v11 ^ 0x244)), a11, v13) == 0;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v16 * (v14 + ((v11 + 941956527) | 0x30810ED) - 398)) ^ v11)))();
}

uint64_t sub_1001DFB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int v53 = (*(uint64_t (**)(void, void, void, char *, int *))(v48 + 8 * (v47 ^ 0xB77)))(*v50, *v49, *v51, &a34, &a47);
  unsigned int v54 = (v53 ^ 0xEEDDEBCD) + 1535114940 + ((((v47 + 34340311) | 0x392130C5) ^ 0xE696E777) & (2 * v53));
  if (v54 == 1516104332) {
LABEL_6:
  }
    JUMPOUT(0x1001E00C4);
  if (v54 != 1247668873)
  {
    int v57 = 2052531167 * (((v52 - 108) & 0xAC0229D1 | ~((v52 - 108) | 0xAC0229D1)) ^ 0x96776102);
    *(_DWORD *)(v52 - 104) = -1239432284 - v57;
    *(_DWORD *)(v52 - 100) = (v54 - ((2 * v54 + 725887726) & 0x25BEB83A) + 1216442772) ^ v57;
    (*(void (**)(uint64_t))(v48 + 18568))(v52 - 108);
    goto LABEL_6;
  }
  uint64_t v55 = *(uint64_t (**)(void))(v48
                            + 8
                            * ((110
                              * ((*(uint64_t (**)(uint64_t, uint64_t))(v48 + 18520))(24, 4101018099) != 0)) ^ 0x1B2));
  return v55();
}

uint64_t sub_1001DFF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v73 + 8 * ((15 * (a72 != 0)) ^ (v72 - 1261))))();
}

uint64_t sub_1001DFFAC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 - 80777191) & 0x3FFDBEED ^ (v1 + 992816921)) * (v0 != 0)) ^ v1)))();
}

uint64_t sub_1001DFFF4@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a2 + 1753 + a1)))(v2);
  return sub_1001E0080(v4);
}

uint64_t sub_1001E0080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47)
{
  int v51 = v47 - a6 + 1682;
  uint64_t v52 = (*(uint64_t (**)(void, uint64_t, void))(v48 + 8 * (v47 ^ 0xB33)))(**(unsigned int **)(v50 + 8 * (v47 ^ 0x233)), a34, a47);
  return (*(uint64_t (**)(uint64_t))(v48
                                            + 8
                                            * (((v49 == 0)
                                              * (((v51 - 2130254574) & 0x43CBEAEE ^ 0x203)
                                               + ((v51 - 2130254574) & 0x43CBEAEE ^ 0x5D5)
                                               - 475)) ^ (v51 - 2130254574) & 0x43CBEAEE)))(v52);
}

uint64_t sub_1001E0134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34
                                                                                                  + 8 * (((a33 == 0xE22A8927A3C9258) * ((13 * (v33 ^ 0x27A)) ^ (v33 + 854))) ^ v33)))(a1, a2, a3, a4, a5, a6, 3053556341);
}

uint64_t sub_1001E018C@<X0>(int a1@<W8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0xE22A8927A3C924CLL) + 90537754;
  unsigned int v4 = *(_DWORD *)(v2 - 0xE22A8927A3C9250) - 544374025;
  BOOL v5 = v3 < ((a1 - 268) ^ 0x4F63EA3Eu);
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x4F63ECA1) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((!v6 * (a1 - 1956)) ^ a1)))();
}

uint64_t sub_1001E0228@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v6 = *(void *)(v5 - 0xE22A8927A3C9258);
  int v7 = (*(unsigned __int8 *)(v6 + (v3 + a1 + 1)) << (((a2 + 52) & 0xBF) + 113)) | (*(unsigned __int8 *)(v6 + (v3 + a1)) << (a2 + 109)) | (*(unsigned __int8 *)(v6 + (v3 + a1 + 2)) << 8) | *(unsigned __int8 *)(v6 + (v3 + a1 + 3));
  _DWORD *v2 = v3 + 4;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1774 * (v7 == 0)) ^ (a2 - 1036))))();
}

uint64_t sub_1001E02BC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v0 + 230) ^ 0x7E8) + 818) ^ 0x68C) * (v2 == 0xE22A8927A3C9258)) ^ (v0 + 230))))();
}

uint64_t sub_1001E0304()
{
  BOOL v4 = v0 - 1551494817 > (v1 + 2108560696);
  if ((v1 + 2108560696) < 0xED847EE2 != v0 - 1551494817 < ((v2 + 1063) ^ 0x10Bu) - 310085565) {
    BOOL v4 = v0 - 1551494817 < ((v2 + 1063) ^ 0x10Bu) - 310085565;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((242 * v4) ^ v2)))();
}

uint64_t sub_1001E0378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v33 = *(unsigned __int8 *)(v29 + (a7 + v28 + 6));
  *int v27 = v28 + 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (v30 ^ (53 * (v32 != 0xE22A8927A3C9258)))))(53, v33, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1001E0404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v12 = v10 + v9 + ((v8 + 897) ^ (a7 + 629));
  unsigned int v13 = v12 + 1862066372;
  unsigned int v14 = v7 - 14256479 + (v8 ^ 0x367);
  BOOL v15 = v12 > 0x91031F3B;
  BOOL v16 = v13 > v14;
  if (v14 < 0x6EFCE0C4 == v15) {
    BOOL v15 = v16;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((47 * !v15) ^ v8)))();
}

uint64_t sub_1001E0484(int a1)
{
  *int v1 = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v4 == 0xE22A8927A3C9258) ^ (a1 - 80)) & 1)
                                * ((a1 + 1574) ^ 0x667)) ^ a1)))();
}

uint64_t sub_1001E04D0()
{
  BOOL v4 = v1 - 412460064 > (v0 - 1047371843);
  if ((v0 - 1047371843) < 0x3168C967 != v1 - 412460064 < ((v2 + 94) | 0x218u) + 828949192) {
    BOOL v4 = v1 - 412460064 < ((v2 + 94) | 0x218u) + 828949192;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((!v4 * (((v2 - 752) | 0x42) ^ 0x17E)) ^ v2)))();
}

uint64_t sub_1001E0558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v39 = (*(unsigned __int8 *)(v34 + a7 + v35 + (v36 ^ 0x102u) - 121) << (((v36 - 111) | 0x12) - 6)) | (*(unsigned __int8 *)(v34 + (a7 + v35 + 1)) << 16) | (*(unsigned __int8 *)(v34 + (a7 + v35 + 2)) << 8) | *(unsigned __int8 *)(v34 + (a7 + v35 + 3));
  uint64_t v40 = (v35 + 4);
  *uint64_t v33 = v40;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (v36 ^ (229 * (v38 != 0xE22A8927A3C9258)))))(v39, v40, 229, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1001E05E8(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = a1 + a2 + a7;
  unsigned int v11 = v10 + 1495197972;
  unsigned int v12 = v7 - 381124815 + 3 * (v8 ^ 0x70D);
  BOOL v13 = v10 > 0xA6E116EB;
  int v14 = v13 ^ (v12 < 0x591EE914);
  BOOL v15 = v11 > v12;
  if (v14) {
    BOOL v15 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v15 * ((v8 ^ 0x70D) + 26)) ^ v8)))();
}

void sub_1001E0668(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  _DWORD *v23 = v24;
  LODWORD(STACK[0x23C]) = 0;
  *a23 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8 * (a1 + 352)))(v25, 925082483);
  JUMPOUT(0x1001E06C8);
}

uint64_t sub_1001E0780()
{
  LODWORD(STACK[0x23C]) = v0;
  return sub_1001DF25C();
}

uint64_t sub_1001E0790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v35 = (*(uint64_t (**)(void, uint64_t))(v34 + 8 * (v33 + 239)))(v32 - 2144798872 + 1103 * (v33 ^ 0x81Eu), 1120292948);
  STACK[0x230] = v35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (((v35 == 0) * (v33 - 2013)) ^ v33)))(v35, v36, v37, v38, v39, 3302152146, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1001E07FC()
{
  LODWORD(STACK[0x238]) = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v3 ^ 0x959) + 102) ^ 0x216) * (v0 == 0)) ^ v3)))();
}

uint64_t sub_1001E0830@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)(((*v2 == 0) * (((a2 - a1 + 1784) ^ 0xFFFFFFF6) + a2 + 992816934)) ^ a2)))();
}

uint64_t sub_1001E0874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47)
{
  *(void *)uint64_t v49 = 0;
  *(_DWORD *)(v49 + 8) = v52;
  *(_DWORD *)(v49 + 12) = v51;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v50 + 8 * (v47 ^ (v48 + 1893))))(v49);
  return sub_1001E0080(v53, v54, v55, v56, v57, -992815150, v58, v59, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1001E0914(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v30 = v28 + 133;
  uint64_t v31 = (*(uint64_t (**)(void, uint64_t))(v29 + 8 * (v28 + 432)))(((v28 - 1172) ^ 0x90089486) + a2, 1120292948);
  STACK[0x218] = v31;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v31 == 0) * ((v30 ^ 0x7A9) - 56)) | v30)))(v31, v32, v33, v34, 992817389, 3302152146, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001E098C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a6 + (v8 ^ (a5 + 317)) + (v8 ^ 0x226) - 2449) * (v6 == 0)) ^ v8)))();
}

uint64_t sub_1001E09C4@<X0>(char a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((*v2 == 0) ^ (a2 - a1 - 34)) & 1)
                                * ((a2 - 8425460) & 0x3BADBFFF ^ 0x3B2D30E3)) | a2)))();
}

uint64_t sub_1001E0A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(void))(v28 + 8 * (v27 + a6)))();
  *(void *)a23 = 0;
  *(_DWORD *)(a23 + 8) = a20;
  *(_DWORD *)(a23 + 12) = 1241410955;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v27 ^ 0x3B2D3852)))(a23);
  return sub_1001DF8C4(v29, v30, v31, v32, v33, -992815150, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1001E0A98(id a1, void *a2)
{
  uint64_t v2 = (uint64_t)*(&off_1003ADCF0
                + ((9 * ((dword_100401710 + dword_100401738) ^ 0x7D)) ^ byte_10031FBD0[byte_100320640[(9 * ((dword_100401710 + dword_100401738) ^ 0x7D))] ^ 0xC0])
                - 30);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_1003ADCF0
                + (byte_100320108[(byte_10031FCE8[(9 * ((dword_100401710 + v3) ^ 0x7D))
                                                                 - 8] ^ 0x19)
                                                 - 8] ^ (9 * ((dword_100401710 + v3) ^ 0x7D)))
                - 39);
  unint64_t v5 = (unint64_t)&v12[*(void *)(v4 - 4) ^ v3];
  uint64_t v6 = 1787074057 * v5 + 0x12143784A120E583;
  unint64_t v7 = 1787074057 * (v5 ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v2 - 4) = v6;
  *(void *)(v4 - 4) = v7;
  LOBYTE(v7) = 9 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x7D);
  int v8 = (char *)*(&off_1003ADCF0
               + ((9 * ((dword_100401710 + dword_100401738) ^ 0x7D)) ^ byte_10031FAD0[byte_100320540[(9 * ((dword_100401710 + dword_100401738) ^ 0x7D))] ^ 0xB1])
               - 189)
     - 4;
  uint64_t v9 = (*(uint64_t (**)(void *))&v8[8
                                            * (byte_100320404[(byte_10031FFE0[v7] ^ 0x81)
                                                                             - 4] ^ v7)
                                            + 16984])(a2);
  unsigned __int8 v10 = 9 * ((*(_DWORD *)(v4 - 4) - *(_DWORD *)(v2 - 4)) ^ 0x7D);
  unsigned int v11 = *(void (**)(uint64_t))&v8[8
                                          * (byte_10031FAD4[(byte_10032054C[v10 - 12] ^ 0x1A) - 4] ^ v10)
                                          + 16440];

  v11(v9);
}

void sub_1001E0C90()
{
  uint64_t v0 = (uint64_t)*(&off_1003ADCF0
                + ((9 * ((dword_100401710 - qword_100401740) ^ 0x7D)) ^ byte_10031FAD0[byte_100320540[(9 * ((dword_100401710 - qword_100401740) ^ 0x7D))] ^ 0x92])
                - 204);
  unint64_t v1 = (unint64_t)&v4 ^ qword_100401740 ^ *(void *)(v0 - 4);
  unint64_t v2 = (1787074057 * v1) ^ 0xEDEBC87B5EDF1A7DLL;
  unint64_t v3 = 1787074057 * (v1 ^ 0xEDEBC87B5EDF1A7DLL);
  qword_100401740 = v2;
  *(void *)(v0 - 4) = v3;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001E0DAC()
{
  (*(void (**)(void))(v1 + 17912))();
  *(void *)(v0 + 8) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((127 * (*(void *)(v0 + 24) == 0)) ^ 0x827)))();
}

uint64_t sub_1001E0E08()
{
  *(_DWORD *)(v0 + 36) = 0;
  *(void *)uint64_t v0 = 0;
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((980 * ((v2 ^ 0xD7 ^ (*(void *)(v0 + 48) == 0)) & 1)) ^ v2)))();
}

uint64_t sub_1001E0E44@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)(v1 + 64) == 0) * ((a1 + 3) ^ (a1 - 1169327030) ^ 0xBA4D845A)) ^ a1)))();
}

uint64_t sub_1001E0E84()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((127 * (*(void *)(v0 + 24) == 0)) ^ 0x827)))();
}

uint64_t sub_1001E0ED0@<X0>(int a1@<W8>)
{
  unsigned int v3 = a1 + 1057;
  (*(void (**)(void))(v2 + 8 * (a1 ^ 0x902u)))();
  *(void *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  *(void *)uint64_t v1 = 0;
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((980 * ((v3 ^ 0xD7 ^ (*(void *)(v1 + 48) == 0)) & 1)) ^ v3)))();
}

uint64_t sub_1001E0F28()
{
  (*(void (**)(void))(v1 + 8 * (v2 + 737)))();
  *(void *)(v0 + ++*(void *)(*(void *)(result + 32) + 48) = 0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(void *)(v0 + 64) == 0) * ((v2 - 466) ^ (v2 - 1169327499) ^ 0xBA4D845A)) ^ (v2 - 469))))();
}

uint64_t sub_1001E0F80()
{
  (*(void (**)(void))(v2 + 8 * (v0 + 1203)))();
  *(void *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  *(void *)(v1 + 40) = 0;
  return 0;
}

uint64_t sub_1001E0FB4()
{
  if (qword_100402030 != -1) {
    dispatch_once(&qword_100402030, &stru_1003ADE70);
  }
  dispatch_sync((dispatch_queue_t)qword_100402038, &stru_1003ADE30);
  uint64_t result = dword_100402028;
  if (!dword_100402028)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return dword_100402028;
  }
  return result;
}

void sub_1001E1040(id a1)
{
  if (!dword_100402028) {
    dword_100402028 = sub_1001E10AC("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
  }
}

void sub_1001E1080(id a1)
{
  qword_100402038 = (uint64_t)dispatch_queue_create("aks-client-queue", 0);
}

uint64_t sub_1001E10AC(char *path, const char *a2)
{
  kern_return_t v5;
  CFDictionaryRef v6;
  io_service_t MatchingService;
  io_object_t v8;
  uint64_t result;
  kern_return_t v10;
  io_connect_t connect;

  connect = 0;
  io_service_t v3 = IORegistryEntryFromPath(kIOMasterPortDefault, path);
  if (!v3 || (io_object_t v4 = v3, v5 = IOServiceOpen(v3, mach_task_self_, 0, &connect), IOObjectRelease(v4), v5))
  {
    uint64_t v6 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v6);
    if (MatchingService)
    {
      int v8 = MatchingService;
      IOServiceOpen(MatchingService, mach_task_self_, 0, &connect);
      IOObjectRelease(v8);
    }
  }
  uint64_t result = connect;
  if (connect)
  {
    unsigned __int8 v10 = IOConnectCallMethod(connect, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    uint64_t result = connect;
    if (v10)
    {
      IOServiceClose(connect);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001E11A4(int a1, uint64_t a2, int a3, unsigned int a4, void *a5, size_t *a6)
{
  uint64_t v12 = 3758097084;
  mach_port_t v13 = sub_1001E0FB4();
  if (v13)
  {
    uint64_t v12 = 3758097090;
    if (a5 && a6)
    {
      input[0] = a1;
      input[1] = a4;
      input[2] = a2;
      input[3] = a3;
      return IOConnectCallMethod(v13, 0x26u, input, 4u, 0, 0, 0, 0, a5, a6);
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_auth_token_create", ":", 1415, "", 0, "", "");
  }
  return v12;
}

void sub_1001E132C(id a1)
{
  uint64_t v1 = [[ktSeAkOyXkmyQNgH alloc] initWithServiceName:@"com.apple.asd.scoring"];
  uint64_t v2 = qword_100402040;
  qword_100402040 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1001E14E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001E1500(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained uTtwJoGUgL3N0GVz];
}

void sub_1001E1704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1001E1724(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001E1740(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v10 = a2;
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1001E1A08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1001E1A28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001E1A40(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1001E1C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1001E1CA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001E1CBC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = a3;
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1001E1EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1001E1F08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001E1F20(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1001E2234(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 152));
  _Unwind_Resume(a1);
}

uint64_t sub_1001E2254(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001E2278(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v14 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1001E24C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_1001E24EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001E24FC(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1001E280C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v22 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001E2844(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001E2854(uint64_t a1)
{
}

void sub_1001E285C(uint64_t a1, void *a2)
{
}

uint64_t sub_1001E286C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001E2884(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1001E2A80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_1001E2AA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001E2ABC(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1001E3070(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  [v2 setObject:v3 forKey:*(void *)(a1 + 40)];
}

id sub_1001E319C(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 16) objectForKeyedSubscript:a1[5]];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = v2 != 0;

  uint64_t v3 = a1[5];
  id v4 = *(void **)(a1[4] + 16);

  return [v4 removeObjectForKey:v3];
}

void sub_1001E3270(uint64_t a1)
{
  uint64_t v2 = +[NSString stringWithUTF8String:kCoreASErrorDomainCA];
  uint64_t v3 = +[NSError errorWithDomain:v2 code:-31 userInfo:0];

  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v4 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "allValues", 0);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v9 + 1) + 8 * (void)v8) + 16))();
        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v6);
  }

  [*(id *)(*(void *)(a1 + 32) + 16) removeAllObjects];
}

uint64_t sub_1001E3EEC(uint64_t a1)
{
  os_log_t v2 = os_log_create("com.apple.CoreAS", "libCoreAS");
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(v3 + 24);
  *(void *)(v3 + 24) = v2;

  return _objc_release_x1(v2, v4);
}

void sub_1001E44F4(uint64_t a1)
{
  os_log_t v2 = *(NSObject **)(*(void *)(a1 + 32) + 24);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1001F0D50(v2);
  }
  id v3 = [objc_alloc((Class)off_100401878[0]()) initWithServiceIdentifier:@"com.apple.amp.all.sp.paidBuyV2" forDSIDType:0];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 88);
  *(void *)(v4 + 88) = v3;
}

void sub_1001E4568(void *a1)
{
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  id v3 = (void *)a1[4];
  uint64_t v4 = a1[5];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1001E4620;
  v6[3] = &unk_1003AE1B8;
  void v6[4] = a1[6];
  dispatch_semaphore_t v7 = v2;
  id v5 = v2;
  [v3 JI0A3nkqsab9cUj8:v4 completion:v6];
  dispatch_semaphore_wait(v5, 0xFFFFFFFFFFFFFFFFLL);
}

void sub_1001E4620(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 64), a2);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 72), a4);
  if (v10) {
    [*(id *)(*(void *)(a1 + 32) + 16) setObject:v8 forKey:v10];
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void *sub_1001E47C0(void *result)
{
  uint64_t v1 = result[4];
  if (!*(unsigned char *)(v1 + 8))
  {
    *(unsigned char *)(v1 + 8) = 1;
    uint64_t v2 = *(void *)(result[4] + 40);
    if (v2) {
      return (void *)(*(uint64_t (**)(void, void, void, void))(v2 + 16))(*(void *)(result[4] + 40), result[5], result[6], result[7]);
    }
  }
  return result;
}

void sub_1001E49E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 72))
  {
    objc_msgSend((id)v2, "_safeCallbackWithMessage:uuid:error:", 0, 0);
    return;
  }
  id v3 = [*(id *)(v2 + 32) serverEndpointIdentifier];
  if ([v3 isEqualToString:@"enable"])
  {
    uint64_t v4 = [*(id *)(a1 + 40) nonce];

    if (!v4)
    {
      id v5 = +[NSString stringWithUTF8String:kCoreASErrorDomainCA];
      id v6 = v5;
      uint64_t v7 = -701;
LABEL_28:
      id v21 = +[NSError errorWithDomain:v6 code:v7 userInfo:0];

      [*(id *)(a1 + 32) _safeCallbackWithMessage:0 uuid:0 error:v21];

      return;
    }
  }
  else
  {
  }
  unsigned int v8 = [*(id *)(a1 + 32) isPaidBuyV2];
  uint64_t v9 = *(void *)(a1 + 32);
  if (v8)
  {
    [(id)v9 triggerCoreODI];
  }
  else
  {
    if (!*(void *)(v9 + 64))
    {
      id v5 = +[NSString stringWithUTF8String:kCoreASErrorDomainCA];
      id v6 = v5;
      uint64_t v7 = -710;
      goto LABEL_28;
    }
    id v10 = objc_msgSend(*(id *)(v9 + 16), "objectForKey:");
    id v20 = *(id *)(a1 + 48);
    uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 64);
    long long v12 = [*(id *)(a1 + 40) hostChallenge];
    mach_port_t v13 = v12;
    if (!v12)
    {
      mach_port_t v13 = [*(id *)(*(void *)(a1 + 32) + 32) hostChallenge];
    }
    id v14 = [*(id *)(a1 + 40) challengeResponse];
    BOOL v15 = v14;
    if (!v14)
    {
      BOOL v15 = [*(id *)(*(void *)(a1 + 32) + 32) challengeResponse];
    }
    BOOL v16 = [*(id *)(a1 + 40) seid];
    uint64_t v17 = v16;
    if (!v16)
    {
      uint64_t v17 = [*(id *)(*(void *)(a1 + 32) + 32) seid];
    }
    uint64_t v18 = [*(id *)(a1 + 40) nonce];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_1001E4D18;
    v22[3] = &unk_1003AE230;
    void v22[4] = *(void *)(a1 + 32);
    id v23 = v10;
    id v19 = v10;
    [v20 QeMnG23X94qgz7jT:v11 hostChallenge:v13 challengeResponse:v15 seid:v17 nonce:v18 completion:v22];

    if (!v16) {
    if (!v14)
    }

    if (!v12) {
  }
    }
}

void sub_1001E4D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  if (!a2 || a3)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    [v4 _safeCallbackWithMessage:a2 uuid:v7 error:a3];
  }
  else
  {
    id v8 = 0;
    id v5 = [v4 VkBISyFszEu5z9lr:a2 error:&v8];
    id v6 = v8;
    [*(id *)(a1 + 32) _safeCallbackWithMessage:v5 uuid:*(void *)(a1 + 40) error:v6];
  }
}

id sub_1001E4F98(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) consumed];

  return [v1 provideFeedback:v2];
}

void sub_1001E51C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = +[NSString stringWithUTF8String:kCoreASErrorDomainCA];
    v16[0] = NSLocalizedDescriptionKey;
    v16[1] = NSUnderlyingErrorKey;
    v17[0] = @"error calling getAssessment";
    v17[1] = v6;
    id v8 = +[NSDictionary dictionaryWithObjects:v17 forKeys:v16 count:2];
    id v9 = +[NSError errorWithDomain:v7 code:-810 userInfo:v8];

    id v10 = *(NSObject **)(*(void *)(a1 + 32) + 24);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1001F0DDC((uint64_t)v9, v10);
    }
    [*(id *)(a1 + 32) _safeCallbackWithMessage:0 uuid:0 error:v9];
  }
  else
  {
    uint64_t v11 = *(NSObject **)(*(void *)(a1 + 32) + 24);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      LOWORD(v15) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Returning data", (uint8_t *)&v15, 2u);
    }
    long long v12 = +[NSUUID UUID];
    [v12 getUUIDBytes:&v15];

    id v9 = [objc_alloc((Class)NSData) initWithBytes:&v15 length:16];
    mach_port_t v13 = *(void **)(a1 + 32);
    id v14 = [v5 dataUsingEncoding:4];
    [v13 _safeCallbackWithMessage:v14 uuid:v9 error:0];
  }
}

void sub_1001E54F8(uint64_t a1, void *a2)
{
  id v11 = a2;
  id v3 = [v11 firstName];

  if (v3)
  {
    uint64_t v4 = [v11 firstName];
    [*(id *)(a1 + 32) setObject:v4 forKeyedSubscript:@"firstName"];
  }
  id v5 = [v11 lastName];

  if (v5)
  {
    id v6 = [v11 lastName];
    [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:@"lastName"];
  }
  uint64_t v7 = [v11 phoneNumber];

  if (v7)
  {
    id v8 = [v11 phoneNumber];
    [*(id *)(a1 + 32) setObject:v8 forKeyedSubscript:@"phoneNumber"];
  }
  id v9 = [v11 emailAddress];

  if (v9)
  {
    id v10 = [v11 emailAddress];
    [*(id *)(a1 + 32) setObject:v10 forKeyedSubscript:@"email"];
  }
}

Class sub_1001E57C8()
{
  if (qword_100402068 != -1) {
    dispatch_once(&qword_100402068, &stru_1003AE2C8);
  }
  Class result = objc_getClass("ODISession");
  qword_100402058 = (uint64_t)result;
  off_100401878[0] = (uint64_t (*)())sub_1001E582C;
  return result;
}

id sub_1001E582C()
{
  return (id)qword_100402058;
}

void sub_1001E5838(id a1)
{
  qword_100402060 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CoreODI.framework/CoreODI", 2);
}

Class sub_1001E5864()
{
  if (qword_100402068 != -1) {
    dispatch_once(&qword_100402068, &stru_1003AE2C8);
  }
  Class result = objc_getClass("ODIAdditionalAttributes");
  qword_100402070 = (uint64_t)result;
  off_100401880 = (uint64_t (*)())sub_1001E58C8;
  return result;
}

id sub_1001E58C8()
{
  return (id)qword_100402070;
}

void sub_1001E5D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    BOOL v3 = a3 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001E5DC0()
{
  return 4294940294;
}

uint64_t sub_1001E5DC8(uint64_t a1, unsigned int a2, void *a3)
{
  *a3 = (*(uint64_t (**)(void, uint64_t))(v3 + 576))(a2, 3384187359);
  (*(void (**)(void *, unint64_t *, uint64_t))(v3 + 760))(&unk_100320B54, &STACK[0x420], 16);
  id v5 = *(uint64_t (**)(void *))(v3 + 760);
  STACK[0x398] = v4 - 144;
  uint64_t v6 = v5(&unk_100320740);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((13
                                              * ((unint64_t)((char *)&STACK[0x430] - (char *)&unk_100321480) < 0x20)) ^ 0x27u)))(v6);
}

uint64_t sub_1001E5E80@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)&STACK[0x430] = xmmword_1003229D0;
  *(_OWORD *)&STACK[0x440] = xmmword_1003229E0;
  *(_OWORD *)&STACK[0x450] = xmmword_1003229F0;
  *(_OWORD *)&STACK[0x460] = xmmword_100322A00;
  *(_OWORD *)&STACK[0x470] = xmmword_100322A10;
  *(_OWORD *)&STACK[0x480] = xmmword_100322A20;
  *(_OWORD *)&STACK[0x490] = xmmword_100322A30;
  *(_OWORD *)&STACK[0x4A0] = xmmword_100322A40;
  *(_OWORD *)&STACK[0x4B0] = xmmword_100322A50;
  *(_OWORD *)&STACK[0x4C0] = xmmword_100322A60;
  *(_OWORD *)&STACK[0x4D0] = xmmword_100322A70;
  *(_OWORD *)&STACK[0x4E0] = xmmword_100322A80;
  *(_OWORD *)&STACK[0x4F0] = xmmword_100322A90;
  *(_OWORD *)&STACK[0x500] = xmmword_100322AA0;
  *(_OWORD *)&STACK[0x510] = xmmword_100322AB0;
  *(_OWORD *)&STACK[0x520] = xmmword_100322AC0;
  *(_OWORD *)&STACK[0x530] = xmmword_100322AD0;
  *(_OWORD *)&STACK[0x540] = xmmword_100322AE0;
  *(_OWORD *)&STACK[0x550] = xmmword_100322AF0;
  *(_OWORD *)&STACK[0x560] = xmmword_100322B00;
  *(_OWORD *)&STACK[0x570] = xmmword_100322B10;
  *(_OWORD *)&STACK[0x580] = xmmword_100322B20;
  *(_OWORD *)&STACK[0x590] = xmmword_100322B30;
  *(_OWORD *)&STACK[0x5A0] = xmmword_100322B40;
  *(_OWORD *)&STACK[0x5B0] = xmmword_100322B50;
  *(_OWORD *)&STACK[0x5C0] = xmmword_100322B60;
  *(_OWORD *)&STACK[0x5D0] = xmmword_100322B70;
  *(_OWORD *)&STACK[0x5E0] = xmmword_100322B80;
  *(_OWORD *)&STACK[0x5F0] = 0u;
  *(_OWORD *)&STACK[0x600] = 0u;
  *(_OWORD *)&STACK[0x610] = 0u;
  *(_OWORD *)&STACK[0x620] = 0u;
  *(_OWORD *)&STACK[0x630] = 0u;
  *(_OWORD *)&STACK[0x640] = 0u;
  *(_DWORD *)(a1 + 544) = *(_DWORD *)(v1 + 544);
  int v4 = ((118806587 - v3) & 0xFD1595EF ^ 0x82) == 137;
  return (*(uint64_t (**)(void))(v2 + 8 * ((2 * v4) | (v4 << 6) | 0xD)))();
}

uint64_t sub_1001E6054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * (v9 ^ ((4 * (&a9 == (uint64_t *)-1072)) | (16 * (&a9 == (uint64_t *)-1072))))))();
}

uint64_t sub_1001E608C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v1 ^ 7) + 67831726) & 0xFBF4F86B ^ 0x3B) * (a1 == v2)) ^ v1 ^ 7)))();
}

uint64_t sub_1001E60CC()
{
  int v5 = v0 + 26;
  *(void *)(v4 - 144) = 0x951FAAEE1026D03;
  *(void *)(v4 - 136) = 0x9AAF552B875DE8C0;
  int v6 = (v0 + 26) ^ 0x2B;
  if (v1) {
    BOOL v7 = v2 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v6 + 15) * v8) ^ v5)))();
}

uint64_t sub_1001E6128()
{
  STACK[0x398] = (unint64_t)&STACK[0x420];
  if (v1) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 ^ 0x2B) + 15) * v5) ^ v0)))();
}

uint64_t sub_1001E6164@<X0>(int a1@<W8>)
{
  unsigned int v4 = ((v2 + 1357734545) ^ 0xFD29D4E) & (2 * ((v2 + 1357734545) & 0xAF129D6F)) ^ (v2 + 1357734545) & 0xAF129D6F;
  unsigned int v5 = ((v1 - 712503020) ^ (2 * ((v2 + 1357734545) ^ 0x45D695C4))) & ((v2 + 1357734545) ^ 0x45D695C4) ^ (2 * ((v2 + 1357734545) ^ 0x45D695C4)) & 0xEAC408AA;
  unsigned int v6 = ((4 * (v5 ^ 0x2A4408A9)) ^ 0xAB1022AC) & (v5 ^ 0x2A4408A9) ^ (4 * (v5 ^ 0x2A4408A9)) & 0xEAC408A8;
  unsigned int v7 = (v6 ^ 0xAA0000A0) & (16 * ((v5 ^ 0xC0800000) & (4 * v4) ^ v4)) ^ (v5 ^ 0xC0800000) & (4 * v4) ^ v4;
  unsigned int v8 = ((16 * (v6 ^ 0x40C40803)) ^ 0xAC408AB0) & (v6 ^ 0x40C40803) ^ (16 * (v6 ^ 0x40C40803)) & 0xEAC408A0;
  unsigned int v9 = v7 ^ 0xEAC408AB ^ (v8 ^ 0xA8400800) & (v7 << 8);
  unsigned int v10 = (v2 + 1357734545) ^ (2
                           * ((v9 << 16) & 0x6AC40000 ^ v9 ^ ((v9 << 16) ^ 0x8AB0000) & (((v8 ^ 0x4284000B) << 8) & 0xEAC40000 ^ 0x2AC40000 ^ (((v8 ^ 0x4284000B) << 8) ^ 0x44080000) & (v8 ^ 0x4284000B))));
  BOOL v12 = ((2 * (v10 & 0xF ^ 0x14144808)) | 0xBBAA1134) - (v10 & 0xF ^ 0x14144808) != -1483323083 || v10 == 1805290553;
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 ^ 5 ^ ((a1 + 56) | 2)) * v12) ^ a1)))();
}

uint64_t sub_1001E632C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v9 ^ 0x21) + 3) * (&a9 == (uint64_t *)-1072)) | v9)))();
}

uint64_t sub_1001E6360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v45 + 15)))(1032);
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v45 + 15)))(1032);
  STACK[0x380] = v47;
  STACK[0x378] = v48;
  if (v47) {
    BOOL v56 = v48 == 0;
  }
  else {
    BOOL v56 = 1;
  }
  int v57 = !v56;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * ((v57 * (((v45 ^ 0x1B) - 4) ^ 4)) ^ v45)))(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1001E63D0()
{
  LODWORD(STACK[0x408]) = v4 >> 3;
  unsigned int v5 = (v4 >> 3) ^ 0xD735187;
  LODWORD(STACK[0x404]) = v5;
  uint64_t v6 = v1[((v0 + 60) ^ 0xA88D423B) % v5];
  unint64_t v7 = ((((v4 >> 3) ^ 0xFA7DD71E757E83ALL) - 0x7C853498ECDBE7DDLL) ^ (((v4 >> 3) ^ 0xBC7D8232869CD75)
                                                                    - 0x78E531CA23E5C292) ^ (((v4 >> 3) ^ 0x4600552C24D74C8)
                                                                                             - 0x7742ECBBC9C17B2FLL))
     + 0x7322E9E984482D8FLL;
  if (v7 < 0x7D48CF2F != (unint64_t)(v6 + 3030306715) < 0x7D48CF2F) {
    BOOL v8 = v7 < 0x7D48CF2F;
  }
  else {
    BOOL v8 = v6 + 3030306715 < v7;
  }
  unint64_t v9 = (v4 >> 3) ^ 0xD735187;
  int v10 = (v6
       - ((((v4 >> 3) ^ 0xF2ED58B59878CAE4) + 0x7E304EA36C0B3AFDLL) ^ (((v4 >> 3) ^ 0xB37863114FD9A27ELL)
                                                                       + 0x3FA57507BBAA5267) ^ (((v4 >> 3) ^ 0x41953BA4DAD2391DLL)
                                                                                                - 0x32B7D24DD15E36FALL))
       - 0x7322E9E8CFA95DF4)
      % v9;
  int v11 = (v10 ^ 0x67CF7DE7) - 1648521478 + ((2 * v10) & 0xF9EFBCE);
  if (v8) {
    int v11 = v6 + 1021513037;
  }
  unsigned int v12 = (v11 ^ 0xFB72EB1F) & (2 * (v11 & 0xFA72F31F)) ^ v11 & 0xFA72F31F;
  unsigned int v13 = ((2 * (v11 ^ 0xCFD72D19)) ^ 0x6B4BBC0C) & (v11 ^ 0xCFD72D19) ^ (2 * (v11 ^ 0xCFD72D19)) & 0x35A5DE06;
  int v14 = v13 ^ 0x14A44202;
  int v15 = (v13 ^ 0x21019C04) & (4 * v12) ^ v12;
  unsigned int v16 = ((4 * v14) ^ 0xD6977818) & v14 ^ (4 * v14) & 0x35A5DE00;
  int v17 = (v16 ^ 0x14855800) & (16 * v15) ^ v15;
  int v18 = ((16 * (v16 ^ 0x21208606)) ^ 0x5A5DE060) & (v16 ^ 0x21208606) ^ (16 * (v16 ^ 0x21208606)) & 0x35A5DE00;
  unint64_t v19 = v11 ^ (2
             * ((((v18 ^ 0x25A01E06) << 8) & 0x35A50000 ^ 0x25840000 ^ (((v18 ^ 0x25A01E06) << 8) ^ 0xA5DE0000) & (v18 ^ 0x25A01E06)) & (((v18 ^ 0x1005C000) & (v17 << 8) ^ v17) << 16) ^ (v18 ^ 0x1005C000) & (v17 << 8) ^ v17)) ^ 0x82819111F058D31DLL;
  unint64_t v20 = v1[(v1[(v1[(v19 - ((2 * v19) & 0x5012203D35393CCLL) - 0x1C1D4A741656361ALL) ^ 0x163249AE383E9E4] + 3855038535)
             % v9]
          + 3865674970)
         % v9]
      + 578455804;
  STACK[0x3F8] = v9;
  LODWORD(v20) = v20 % v9 - ((2 * (v20 % v9)) & 0x1737DBD2) + 1268510185;
  unsigned int v21 = (((v20 ^ 0x81F1505E) + 2113871245) ^ ((v20 ^ 0x77571436) - 1957078555) ^ ((v20 ^ 0xBD3DA981) + 1093919828))
      - 1494198759;
  BOOL v22 = v21 < 0x5E85F655;
  uint64_t *v2 = *v1 ^ 0x6D6D6D6D6D6D6D6DLL;
  if (v21 >= 0x5E85F655) {
    BOOL v22 = v21 > 0x5E85F656;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((15 * !v22) ^ (v0 + 60))))();
}

uint64_t sub_1001E6918@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>)
{
  unsigned int v6 = (v2 + 1350776877) & 0xAF7CC79D;
  unsigned int v7 = (((LODWORD(STACK[0x408]) ^ 0x819E62D0) + 727381173) ^ ((LODWORD(STACK[0x408]) ^ 0x14CF84FD) - 1106570598) ^ ((LODWORD(STACK[0x408]) ^ 0x9822B7AA) + 853942735))
     + v6
     + 1114879174;
  BOOL v8 = v7 < 0xEA2B7CAA;
  *(void *)(v4 + 8 * a2) = *(void *)(v3 + 8 * a2) ^ a1;
  if (v8 == a2 - 366248789 < 0xEA2B7CAA) {
    BOOL v8 = v7 > a2 - 366248789;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((53 * v8) | v6)))();
}

uint64_t sub_1001E6A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  STACK[0x390] = v6;
  if (((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + 11) + 12) & 0xF)) + 2) & 0xF)) + 6) & 0xF))
       + 10) & 0xE) != 0)
    uint64_t v8 = (*(unsigned char *)(a5
                   + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + 11) + 12) & 0xF)) + 2) & 0xF)) + 6) & 0xF))
        + 10) & 0xF;
  else {
    uint64_t v8 = 1;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((103 * (v8 != 1)) ^ (v5 - 29))))();
}

uint64_t sub_1001E6BA0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((99 * (v1 == 15)) ^ v0)))();
}

#error "1001E8B54: call analysis failed (funcsize=1831)"

uint64_t sub_1001E8B5C@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X5>, int a4@<W6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v62 = v56 - 11;
  LODWORD(a50) = LODWORD(STACK[0x330]) ^ LODWORD(STACK[0x3E8]) ^ (LODWORD(STACK[0x2E0])
                                                                + a2
                                                                + 295089407
                                                                + (LODWORD(STACK[0x3D4]) ^ LODWORD(STACK[0x200]) ^ (a6 + v60)));
  uint64_t v63 = (((LODWORD(STACK[0x408]) ^ 0xC5E51CD5) + 1864469170) ^ ((LODWORD(STACK[0x408]) ^ 0x32CC1792) - 1744272905) ^ (((v56 - 94741882) ^ LODWORD(STACK[0x408])) + 1352584357))
      + 1916659118;
  BOOL v64 = v63 < 0x19F5AD92;
  unint64_t v65 = 0x418B018541479FA3
      * (((*(void *)(STACK[0x390] + 8 * v58) + (*(void *)(STACK[0x390] + 8 * v58) ^ 0x9292929292929292) + 1) ^ 0xFFFFFFFFFFFFFFFELL)
       + *(void *)(STACK[0x390] + 8 * v58));
  unint64_t v66 = (v65 ^ v59) + v58 - (((v65 ^ v59) + v58) >> 32);
  unint64_t v67 = v66 - (v66 >> ((v56 - 47) ^ 0x1Bu)) - ((v66 - (v66 >> ((v56 - 47) ^ 0x1Bu))) >> 8);
  int v68 = (v67 + a1) ^ a4;
  unint64_t v69 = ((v67 + v57) ^ v65) + v58 - ((((v67 + v57) ^ v65) + v58) >> 32);
  unint64_t v70 = v69 - (v69 >> 16) - ((v69 - (v69 >> 16)) >> 8);
  unint64_t v71 = ((v70 + v57) ^ v65) + v58 - ((((v70 + v57) ^ v65) + v58) >> 32);
  uint64_t v72 = v68 ^ (v70 + a1) ^ (v71
                                          - (v71 >> 16)
                                          - ((v71 - (v71 >> 16)) >> 8)
                                          + a1);
  unsigned int v73 = v58 + 1;
  uint64_t v74 = v64 ^ (v73 >= 0xE60A526E);
  if (!v74) {
    BOOL v64 = v73 + 435531154 < v63;
  }
  int v75 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((21 * v64) ^ v62));
  HIDWORD(a45) = LODWORD(STACK[0x348]) ^ 0x2AE252BD;
  return v75(a1, v75, 0x418B018541479FA3, v74, v63, a3, v72, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1001E8D4C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  if (((*(unsigned char *)(v3
                  + ((*(unsigned char *)(v3
                               + ((*(unsigned __int8 *)(v3 + ((*(unsigned char *)(v3 + 2) + 13) & 0xF)) + 2) & 0xFLL))
                    + 3) & 0xF))
       + 1) & 0xE) != 0)
    uint64_t v4 = (*(unsigned char *)(v3
                   + ((*(unsigned char *)(v3
                                + ((*(unsigned __int8 *)(v3 + ((*(unsigned char *)(v3 + 2) + 13) & 0xF)) + 2) & 0xFLL))
                     + 3) & 0xF))
        + 1) & 0xF;
  else {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * ((25 * (v4 == 1)) ^ a2)))(a1, (a2 - 8));
}

uint64_t sub_1001E9318(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 | (4 * (v2 != 15)))))();
}

uint64_t sub_1001E93B0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v68 = (a2 - 2) | 0x18;
  unsigned int v69 = (a3 ^ 0xCF39C5D0) - ((a3 ^ 0xCF39C5D0) >> 13) + (((a3 ^ 0xCF39C5D0) - ((a3 ^ 0xCF39C5D0) >> 13)) >> 5);
  unsigned int v70 = (v68 ^ 0xF9901316) + v69 - (((v68 ^ 0xF9901316) + v69) >> 10);
  unsigned int v71 = v70 - (v70 >> 2);
  int v72 = v69 ^ v62;
  unsigned int v73 = v71 ^ 0xF30576F9;
  int v74 = v71 ^ v65;
  unsigned int v75 = v73 + (v73 >> 14) - ((v73 + (v73 >> 14)) >> 2);
  unsigned int v76 = v75 + 511487013 + ((v75 + 511487013) >> 15) + ((v75 + 511487013 + ((v75 + 511487013) >> 15)) >> 3);
  unsigned int v77 = (v72 ^ -v72 ^ (v76 - (v76 ^ v72))) + v76;
  unsigned int v78 = (v76 ^ 0x5985AE2F) - ((v76 ^ 0x5985AE2F) >> 10) + (((v76 ^ 0x5985AE2F) - ((v76 ^ 0x5985AE2F) >> 10)) >> 7);
  int v79 = v74 ^ v78;
  unsigned int v80 = v78 - 787086048 - ((v78 - 787086048) >> 9) + ((v78 - 787086048 - ((v78 - 787086048) >> 9)) >> 5);
  unsigned int v81 = v80 - 1168002143 - ((v80 - 1168002143) >> 14) + ((v80 - 1168002143 - ((v80 - 1168002143) >> 14)) >> 4);
  int v82 = v81 ^ v77;
  unsigned int v83 = v81 - 879085134 + ((v81 - 879085134) >> 10) - ((v81 - 879085134 + ((v81 - 879085134) >> 10)) >> 5);
  unsigned int v84 = v79 ^ v83;
  unsigned int v85 = v82 ^ 2 | v82 & 0x9A38B5A8;
  unsigned int v86 = v75 ^ v64 ^ v80 ^ (v83
                         + 1300749569
                         - ((v83 + 1300749569) >> 9)
                         - ((v83 + 1300749569 - ((v83 + 1300749569) >> 9)) >> 4));
  unint64_t v87 = (((v75 ^ v64 ^ v80 ^ (v83
                                             + 1
                                             - ((v83 + 1300749569) >> 9)
                                             - ((v83 + 1300749569 - ((v83 + 1300749569) >> 9)) >> 4))) ^ 4)
       + 1) & 7;
  int v88 = v86 & 7 ^ 3;
  LODWORD(STACK[0x354]) = v88;
  BOOL v89 = v88 == 0;
  if (v88) {
    int v90 = 255;
  }
  else {
    int v90 = 0;
  }
  STACK[0x2A8] = v87;
  int v91 = v90 << v87;
  int v92 = v91;
  int v93 = 16843009 * v91;
  if (v89) {
    unsigned __int8 v94 = 0;
  }
  else {
    unsigned __int8 v94 = ~(_BYTE)v91;
  }
  uint64_t v95 = (~v93 - v93) ^ 0xFFFFFFFE;
  uint64_t v96 = (1929379840 * v92) & v84;
  uint64_t v97 = v67[0xB4C2D96D % LODWORD(STACK[0x404])];
  LODWORD(STACK[0x328]) = v84;
  LODWORD(v97) = ((v67[((v67[((v67[((v97 ^ 0x6D6D6D6D6D6D6D6DuLL) + 2986301921u) % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                            + 2923655298u)
                           % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 2008708959)
                     % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                + 3811120295u)
               % STACK[0x3F8];
  int v98 = 16843009
      * (v84 ^ 0x88 ^ ((unsigned __int16)(v84 ^ 0x5B88) >> 8) ^ ((v84 ^ 0x74325B88) >> 16) ^ HIBYTE(v84) ^ 0x71);
  LODWORD(STACK[0x3E0]) = (16843009
                         * (v85 ^ 0xBB ^ ((unsigned __int16)(v85 ^ 0x2BB) >> 8) ^ ((v85 ^ 0x247F02BB) >> 16) ^ HIBYTE(v85) ^ 0x48)) ^ 0x69696969 ^ v98;
  uint64_t v99 = (v97 - ((2 * v97) & 0xA49F8CA) - 1524302747) ^ 0xA524FC65;
  LODWORD(STACK[0x250]) = v98 ^ 0x5050505;
  int v100 = LODWORD(STACK[0x318]) ^ 0x14BE8117;
  LODWORD(STACK[0x40C]) = v85;
  LODWORD(STACK[0x314]) = v85 & 0xFFFFFF01;
  LODWORD(STACK[0x3EC]) = v86;
  BOOL v101 = v99 > 0x1AE6B61D;
  uint64_t v102 = 0x418B018541479FA3 * (*v67 ^ 0x6D6D6D6D6D6D6D6DLL);
  uint64_t v103 = (v102 ^ 0x177943424141AE0BLL)
       - ((v102 ^ 0x177943424141AE0BuLL) >> 32)
       - (((v102 ^ 0x177943424141AE0BLL) - ((v102 ^ 0x177943424141AE0BuLL) >> 32)) >> 16)
       - (((v102 ^ 0x177943424141AE0BLL)
         - ((v102 ^ 0x177943424141AE0BuLL) >> 32)
         - (((v102 ^ 0x177943424141AE0BLL) - ((v102 ^ 0x177943424141AE0BuLL) >> 32)) >> 16)) >> (((v68 - 8) | 0x20u) - 41))
       + v63;
  int v104 = v103 ^ v100;
  uint64_t v105 = (v103 ^ v102)
       - ((v103 ^ (unint64_t)v102) >> 32)
       - (((v103 ^ v102) - ((v103 ^ (unint64_t)v102) >> 32)) >> 16)
       - (((v103 ^ v102)
         - ((v103 ^ (unint64_t)v102) >> 32)
         - (((v103 ^ v102) - ((v103 ^ (unint64_t)v102) >> 32)) >> 16)) >> 8)
       + v63;
  int v106 = v104 ^ v105;
  uint64_t v107 = (v105 ^ v102)
       - ((v105 ^ (unint64_t)v102) >> 32)
       - (((v105 ^ v102) - ((v105 ^ (unint64_t)v102) >> 32)) >> 16)
       - (((v105 ^ v102)
         - ((v105 ^ (unint64_t)v102) >> 32)
         - (((v105 ^ v102) - ((v105 ^ (unint64_t)v102) >> 32)) >> 16)) >> 8)
       + v63;
  uint64_t v108 = v106 ^ v107;
  if (v99 <= 0x1AE6B61D) {
    BOOL v101 = (v99 - 451327518) > 0xE51949E3;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * ((93 * v101) ^ v68)))(a1, v108, v96, v99, v107, 0x6D6D6D6D6D6D6D6DLL, v95, (v85 ^ 2u) & v94, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_1001E97D8()
{
}

uint64_t sub_1001E97E0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  LODWORD(STACK[0x334]) = (a6 + a8) ^ a7;
  unsigned int v12 = (((LODWORD(STACK[0x408]) ^ 0xB3C2264A) + 419868719) ^ ((LODWORD(STACK[0x408]) ^ 0x11E19BDF) - 1155199556) ^ (((v10 - 1353651231) ^ LODWORD(STACK[0x408])) + 93616759))
      - 340330973;
  BOOL v13 = v12 < 0x936EBE07;
  uint64_t v14 = 0x418B018541479FA3 * ((17 * ((v10 + 20) ^ 0x47u)) ^ (a5 - 30) ^ *(void *)(STACK[0x390] + 8 * v8));
  unint64_t v15 = (v14 ^ a4) + v8 - (((v14 ^ a4) + (unint64_t)v8) >> 32);
  unint64_t v16 = v15 - (v15 >> 16) - ((v15 - (v15 >> 16)) >> 8);
  unint64_t v17 = ((v16 + v9) ^ v14) + v8 - ((((v16 + v9) ^ v14) + v8) >> 32);
  unint64_t v18 = v17 - (v17 >> 16) - ((v17 - (v17 >> 16)) >> 8);
  unint64_t v19 = ((v18 + v9) ^ v14) + v8 - ((((v18 + v9) ^ v14) + v8) >> 32);
  unint64_t v20 = v19 - (v19 >> 16) - ((v19 - (v19 >> 16)) >> 8);
  uint64_t v21 = (v16 + v9) ^ a2 ^ (v18 + v9) ^ ((v9 & (2
                                                                                           * (v20 + 1238975257)))
                                                                      + ((v20 + 1238975257) ^ 0x49D94319));
  if (v13 == v8 - 1821458936 < 0x936EBE07) {
    BOOL v13 = v12 > v8 - 1821458936;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v11
                                                                                + 8 * ((v13 | (2 * v13)) ^ (v10 + 20))))(a1, v21, a3, 0x89751B1549D94319);
}

uint64_t sub_1001E9988()
{
  LODWORD(STACK[0x24C]) = v0 ^ 0x6C6C6C6C;
  if (((*(unsigned char *)(v3
                  + ((*(unsigned char *)(v3
                               + ((*(unsigned char *)(v3 + ((*(unsigned __int8 *)(v3 + 7) + 5) & 0xFLL)) + 9) & 0xF))
                    + 9) & 0xF))
       + 7) & 0xE) != 0)
    uint64_t v4 = (*(unsigned char *)(v3
                   + ((*(unsigned char *)(v3
                                + ((*(unsigned char *)(v3 + ((*(unsigned __int8 *)(v3 + 7) + 5) & 0xFLL)) + 9) & 0xF))
                     + 9) & 0xF))
        + 7) & 0xF;
  else {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((39 * (v4 != 1)) ^ (v1 - 1585224797) & 0x5E7C9C3Fu)))(1236720864);
}

void sub_1001E9C9C()
{
}

uint64_t sub_1001E9CA4@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  STACK[0x410] = 1302115035;
  LODWORD(STACK[0x29C]) = a1 ^ a3;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v3 == 15) | (16 * (v3 == 15)) | (a2 + 69889606))))();
}

void sub_1001E9E30()
{
}

#error "1001EA644: call analysis failed (funcsize=450)"

uint64_t sub_1001EA64C(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v76 = (a3 - 42) | 0x18;
  LODWORD(STACK[0x330]) = a68 ^ a48;
  LODWORD(STACK[0x21C]) ^= LODWORD(STACK[0x300]) ^ STACK[0x348] ^ (STACK[0x2A8] | (STACK[0x348] << 6));
  LODWORD(STACK[0x210]) ^= a50 ^ HIDWORD(a50) ^ a1 ^ LODWORD(STACK[0x208]) ^ (HIDWORD(a48) << (((a3 - 42) | 0x18) - 53));
  LODWORD(STACK[0x300]) = a69 ^ a49 ^ v74 & STACK[0x2F8] ^ 0x184832E0;
  unsigned int v77 = (((LODWORD(STACK[0x408]) ^ 0xE1D4BBA2) + 1259351495) ^ ((LODWORD(STACK[0x408]) ^ 0x74969F81) - 565048858) ^ ((LODWORD(STACK[0x408]) ^ 0x983175A4) + 854975425))
      - 204021315;
  LODWORD(STACK[0x208]) = LODWORD(STACK[0x2FC]) ^ (8 * HIDWORD(a49));
  BOOL v78 = v77 < 0x9B8EA9A1;
  uint64_t v79 = 0x418B018541479FA3 * (*(void *)(v71 + 8 * a7) ^ v75);
  unint64_t v80 = (v79 ^ v69) + a7 - (((v79 ^ v69) + (unint64_t)a7) >> 32);
  uint64_t v81 = v80 - (v80 >> 16) - ((v80 - (v80 >> 16)) >> ((v76 + 2) ^ 0x33u)) + v70;
  unint64_t v82 = (v81 ^ v79) + a7 - (((v81 ^ v79) + (unint64_t)a7) >> 32);
  unint64_t v83 = v82 - (v82 >> 16) - ((v82 - (v82 >> 16)) >> 8);
  uint64_t v84 = v73 & ((v83 + a4) >> 1);
  unint64_t v85 = ((v83 + v70) ^ v79) + a7 - ((((v83 + v70) ^ v79) + a7) >> 32);
  uint64_t v86 = a7 + 1;
  uint64_t v87 = v78 ^ ((v86 - 1685149279) < 0x9B8EA9A1);
  if (!v87) {
    BOOL v78 = v77 > (int)v86 - 1685149279;
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8 * ((97 * v78) ^ v76)))(v85 - (v85 >> 16) - ((v85 - (v85 >> 16)) >> 8), 2609818017, (v76 + 2), a4, v87, v84, v86, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1001EA8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  LODWORD(a58) = a58 + LODWORD(STACK[0x308]);
  LODWORD(STACK[0x2FC]) = 16 * v63;
  LODWORD(STACK[0x200]) ^= HIDWORD(a55) ^ a51 ^ HIDWORD(a53);
  LODWORD(STACK[0x308]) = a54 + LODWORD(STACK[0x30C]);
  LODWORD(STACK[0x30C]) = LODWORD(STACK[0x3A0]) ^ 0xED35EB3F ^ (2093737731 * HIDWORD(a51));
  unint64_t v67 = a1
      - 0x373B377CD11039CBLL
      + ((unint64_t)(a1 - 0x373B377CD11039CBLL) >> 28)
      + ((a1 - 0x373B377CD11039CBLL + ((unint64_t)(a1 - 0x373B377CD11039CBLL) >> 28)) >> 11);
  uint64_t v68 = (v67 >> 7) + v67 - 2 * (v67 >> 7);
  unint64_t v69 = v68
      - 0x13AFA5FA8FB17A6
      + ((unint64_t)(v68 - 0x13AFA5FA8FB17A6) >> 29)
      - ((v68 - 0x13AFA5FA8FB17A6 + ((unint64_t)(v68 - 0x13AFA5FA8FB17A6) >> 29)) >> 8);
  unint64_t v70 = v69 + (v69 >> 6);
  unint64_t v71 = v70
      + 0x47CBE9EA4DE0F1B7
      - ((v70 + 0x47CBE9EA4DE0F1B7) >> 28)
      + ((v70 + 0x47CBE9EA4DE0F1B7 - ((v70 + 0x47CBE9EA4DE0F1B7) >> 28)) >> 8);
  unint64_t v72 = v71
      + (v71 >> 7)
      - 0x25953151116B048ALL
      + ((v71 + (v71 >> 7) - 0x25953151116B048ALL) >> 29)
      - ((v71 + (v71 >> 7) - 0x25953151116B048ALL + ((v71 + (v71 >> 7) - 0x25953151116B048ALL) >> 29)) >> 14);
  unint64_t v73 = v72
      - (v72 >> 7)
      - 0x10BF2422B96631C1
      - ((v72 - (v72 >> 7) - 0x10BF2422B96631C1) >> 28)
      + ((v72 - (v72 >> 7) - 0x10BF2422B96631C1 - ((v72 - (v72 >> 7) - 0x10BF2422B96631C1) >> 28)) >> 8);
  unint64_t v74 = v73 + (v73 >> 8);
  unint64_t v75 = (v74 ^ 0xF929F7F6E1EC1FCELL)
      + ((v74 ^ 0xF929F7F6E1EC1FCELL) >> 26)
      + (((v74 ^ 0xF929F7F6E1EC1FCELL) + ((v74 ^ 0xF929F7F6E1EC1FCELL) >> 26)) >> 14);
  unint64_t v76 = v75
      + (v75 >> 6)
      - 0x70FE5FCAA42AEA45
      - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45) >> 26)
      - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45 - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45) >> 26)) >> 13);
  unint64_t v77 = ((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905)
      - (((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) >> 28)
      - ((((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) - (((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) >> 28)) >> 11);
  int v78 = v74 ^ v70 ^ v62 ^ ((v74 ^ v70) >> 1) & 0x55DF6EBA ^ v65 & ((v77
                                                                                              + (v77 >> 4)) >> 1) ^ (v77 + (v77 >> 4));
  if (((v66[(v66[(v66[(v66[13] + 8) & 0xF] + 6) & 0xF] + 7) & 0xF] + 11) & 0xE) != 0) {
    uint64_t v79 = (v66[(v66[(v66[(v66[13] + 8) & 0xF] + 6) & 0xF] + 7) & 0xF] + 11) & 0xF;
  }
  else {
    uint64_t v79 = 1;
  }
  unsigned int v80 = *v66 * ((a3 ^ 0xFBD591FD) + 1973706621);
  unint64_t v81 = (unint64_t)((v80 ^ 0x19226648) + ((v80 ^ 0x19226648) >> 16)) >> 8;
  uint64_t v82 = (v80 ^ 0x19226648) - 651057517 + ((v80 ^ 0x19226648) >> 16) + v81;
  int v83 = (v80 ^ 0x19226648) - 1302115034 + ((v80 ^ 0x19226648) >> 16) + v81;
  unint64_t v84 = (unint64_t)((v83 ^ v80) + ((v83 ^ v80) >> 16)) >> 8;
  unsigned int v85 = (v83 ^ v80) - 651057517 + ((v83 ^ v80) >> 16) + v84;
  uint64_t v86 = ((v83 ^ v80) - 1302115034 + ((v83 ^ v80) >> 16) + v84) ^ v80;
  unint64_t v87 = (unint64_t)v86 >> 16;
  unint64_t v88 = (unint64_t)(v86 + WORD1(v86)) >> 8;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * (int)(((2 * (v79 == 1)) | (4 * (v79 == 1))) ^ a3)))(v86, 0, a3, a4, (v86 - 1302115034 + v87 + v88), (v85 >> 1) & 0x55DF6EBA, v82 ^ v78 ^ (v82 >> 1) & 0x55DF6EBA ^ v85 ^ (v85 >> 1) & 0x55DF6EBA ^ (v86 - 651057517 + v87 + v88) ^ ((v86 - 651057517 + v87 + v88) >> 1) & 0x55DF6EBA, v82, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_1001EACC0@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X3>, int a4@<W6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x3A0] = v69;
  LODWORD(STACK[0x32C]) = a65 ^ ~HIDWORD(a53);
  LODWORD(STACK[0x2F8]) = a54 ^ LODWORD(STACK[0x38C]);
  LODWORD(STACK[0x310]) ^= a66;
  int v72 = 1903817027 * *(unsigned __int8 *)(v70 + a5);
  unsigned int v73 = v72 ^ (v71 + a1 + ((a1 + a2) >> 16) + ((a1 + a2 + ((a1 + a2) >> 16)) >> 8) + v66 - 1);
  uint64_t v74 = (a5 - 651057517);
  unsigned int v75 = v74 + v73 + ((v73 + a5) >> 16) + ((v73 + a5 + ((v73 + a5) >> 16)) >> 8);
  unsigned int v76 = ((2 * v75) & 0xB2634D26) + (v75 ^ 0xD931A693);
  unint64_t v77 = (unint64_t)((v76 ^ v72) + a5 + (((v76 ^ v72) + a5) >> 16)) >> 8;
  unsigned int v78 = v74 + (v76 ^ v72) + (((v76 ^ v72) + a5) >> 16) + v77;
  LODWORD(v77) = (a5 - 1302115034 + (v76 ^ v72) + (((v76 ^ v72) + a5) >> 16) + v77) ^ v72;
  unint64_t v79 = (v77 + a5);
  unint64_t v80 = v79 >> 16;
  unint64_t v81 = (unint64_t)(v79 + WORD1(v79)) >> 8;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * ((a5 != 15) | (16 * (a5 != 15)) | (v68 + 69889598))))((a5 - 1302115034 + v77 + v80 + v81), 1302115034, -651057517, a3, 3 * (v68 ^ 0xFBD591D7), v80, v75 ^ a4 ^ v67 & (v75 >> 1) ^ v78 ^ v67 & (v78 >> 1) ^ (v74 + v77 + v80 + v81) ^ v67 & ((v74 + v77 + v80 + v81) >> 1), v74, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_1001EAEE4()
{
}

uint64_t sub_1001EAEFC@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = (a3 + ((v67 + v66) >> 16) + v67 + ((v67 + v66 + ((v67 + v66) >> 16)) >> 8) - a1) ^ 0xCF39C5D0;
  int v70 = ((*(void *)(STACK[0x390]
                    + 8
                    * (((*(void *)(STACK[0x390]
                                   + 8
                                   * (((*(void *)(STACK[0x390]
                                                  + 8
                                                  * (((*(void *)(STACK[0x390]
                                                                 + 8 * (0x791DF2FAu % LODWORD(STACK[0x404]))) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                                    + 2126161460)
                                                   % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                     + 2993841644u)
                                    % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 2220923829u)
                     % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
       + 1951303181)
      % STACK[0x3F8];
  LODWORD(STACK[0x3F8]) = ((v69 - (v69 >> 13)) >> (((a2 - 117) & 0x47) - 1)) + v69 - (v69 >> 13);
  unsigned int v71 = (v70 - ((2 * v70) & 0x3C890E0C) - 1102805242) ^ 0xBE448706;
  int v72 = STACK[0x318];
  LODWORD(STACK[0x404]) = a65 ^ LODWORD(STACK[0x3F0]);
  unsigned int v73 = v72 ^ LODWORD(STACK[0x3EC]) ^ 0x5879B4F0;
  LODWORD(STACK[0x318]) = v73;
  LODWORD(STACK[0x324]) = v65 & (v73 >> 1);
  BOOL v74 = v71 > 0x7AF340BF;
  if (v71 <= 0x7AF340BF) {
    BOOL v74 = v71 - 2062762176 > 0x850CBF41;
  }
  return (*(uint64_t (**)(uint64_t))(v68 + 8 * (int)((53 * v74) ^ (a2 + 1562391435) & 0xA2DFCC47)))(3141127236);
}

uint64_t sub_1001EB310@<X0>(uint64_t a1@<X3>, int a2@<W4>, uint64_t a3@<X6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v75 = (a2 + 13);
  LODWORD(STACK[0x3F8]) ^= a66 ^ HIDWORD(a44) ^ a65 ^ HIDWORD(a54) ^ a52 ^ v73 ^ HIDWORD(a46) ^ a46 ^ HIDWORD(a45) & v68 ^ 0x7BE8B087;
  unsigned int v76 = (((LODWORD(STACK[0x408]) ^ 0xA0D707E7) + 169054596) ^ ((LODWORD(STACK[0x408]) ^ 0x52B52E1C) - 126764935) ^ ((LODWORD(STACK[0x408]) ^ 0xFF11787C) + 1440083453 + v75))
      - 862621162;
  int v77 = v69 + a4;
  BOOL v78 = v76 < 0x744D39FA;
  uint64_t v79 = 0x418B018541479FA3 * (*(void *)(v74 + 8 * v69) ^ 0x6D6D6D6D6D6D6D6DLL);
  unint64_t v80 = (v79 ^ v70) + v69 - (((v79 ^ v70) + (unint64_t)v69) >> (((a2 + 1) | 4u) + 12));
  uint64_t v81 = v80 - (v80 >> 16) - ((v80 - (v80 >> 16)) >> 8) + v67;
  int v82 = v66 & (v81 >> 1) ^ v81 ^ v72;
  unint64_t v83 = (v81 ^ v79) + v69 - (((v81 ^ v79) + (unint64_t)v69) >> 32);
  uint64_t v84 = v83 - (v83 >> 16) - ((v83 - (v83 >> 16)) >> 8) + v67;
  unsigned int v85 = v66 & (v84 >> 1) ^ v84;
  uint64_t v86 = v78 ^ ((v77 + 797378118) < 0x744D39FA);
  if (!v86) {
    BOOL v78 = v76 > v77 + 797378118;
  }
  unint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 8 * (int)((57 * v78) ^ v75));
  HIDWORD(a45) = a45 & v68;
  return v87(57, v75, 1951218170, a1, v87, v82 ^ v85, a3, v86, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_1001EB580()
{
}

uint64_t sub_1001EB58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,int a52,int a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v64 = LODWORD(STACK[0x230]) ^ LODWORD(STACK[0x328]) ^ a7;
  LODWORD(STACK[0x230]) = a62 ^ LODWORD(STACK[0x3DC]) ^ 0xF7F7F7F7;
  LODWORD(STACK[0x408]) = v64 ^ a56 ^ a53 ^ a52 ^ a50 ^ 0xA6766605;
  if (((*(unsigned char *)(STACK[0x398]
                  + ((*(unsigned char *)(STACK[0x398]
                               + ((*(unsigned char *)(STACK[0x398] + ((*(unsigned char *)(STACK[0x398] + 1) + 14) & 0xF)) + 1) & 0xF))
                    + 6) & 0xF))
       + 12) & 0xE) != 0)
    uint64_t v65 = (*(unsigned char *)(STACK[0x398]
                    + ((*(unsigned char *)(STACK[0x398]
                                 + ((*(unsigned char *)(STACK[0x398] + ((*(unsigned char *)(STACK[0x398] + 1) + 14) & 0xF)) + 1) & 0xF))
                      + 6) & 0xF))
         + 12) & 0xF;
  else {
    uint64_t v65 = 1;
  }
  return (*(uint64_t (**)(void))(v62 + 8 * ((69 * (v65 == 1)) ^ v63)))();
}

uint64_t sub_1001EB918@<X0>(int a1@<W2>, uint64_t a2@<X4>, int a3@<W6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v63 = 1903817027 * *(unsigned __int8 *)(v60 + v58);
  unsigned int v64 = v63 ^ (v62
             + a4
             + ((a4 + v57) >> 16)
             + ((a4 + v57 + ((a4 + v57) >> 16)) >> 8)
             + a1
             - 1);
  int v65 = v58 + v62;
  unsigned int v66 = v58
      + v62
      + v64
      + ((v64 + v58) >> 16)
      + ((v64 + v58 + ((v64 + v58) >> 16)) >> 8);
  unsigned int v67 = v58
      + v62
      + (v66 ^ v63)
      + (((v66 ^ v63) + v58) >> 16)
      + (((v66 ^ v63) + v58 + (((v66 ^ v63) + v58) >> 16)) >> 8);
  int v68 = v67 ^ v63;
  unint64_t v69 = (v67 ^ v63) + v58;
  unint64_t v70 = v69 >> 16;
  unint64_t v71 = (unint64_t)(v69 + WORD1(v69)) >> 8;
  return (*(uint64_t (**)(void, void, uint64_t, unint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * ((74 * (v58 == 15)) ^ (v59 + 69889625))))((v65 + v68 + v70 + v71), v58, 74, STACK[0x410] - 1, a2, v60, v66 ^ a3 ^ a2 & (v66 >> 1) ^ v67 ^ a2 & (v67 >> 1) ^ (v65+ v68+ v70+ v71) ^ a2 & ((v65 + v68 + v70 + v71) >> 1), a2 & ((v58 + v61 + v68 + v70 + v71) >> 1), a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_1001EBAE4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  STACK[0x410] = a4;
  JUMPOUT(0x1001EB964);
}

uint64_t sub_1001EBB00@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v68 = (v65 + ((a5 + a1) >> 16) + a5 + ((a5 + a1 + ((a5 + a1) >> 16)) >> 8) - a2) ^ 0xCF39C5D0;
  unsigned int v69 = v68 - (v68 >> 13) + ((v68 - (v68 >> 13)) >> 5);
  unsigned int v70 = v69 - 107998449 - ((v69 - 107998449) >> 10) - ((v69 - 107998449 - ((v69 - 107998449) >> 10)) >> 2);
  unsigned int v71 = (v70 ^ 0xF30576F9) + ((v70 ^ 0xF30576F9) >> 14) - (((v70 ^ 0xF30576F9) + ((v70 ^ 0xF30576F9) >> 14)) >> 2);
  unsigned int v72 = v71 + 511487013 + ((v71 + 511487013) >> 15) + ((v71 + 511487013 + ((v71 + 511487013) >> 15)) >> 3);
  uint64_t v73 = (v72 ^ 0x5985AE2F) - ((v72 ^ 0x5985AE2F) >> 10) + (((v72 ^ 0x5985AE2F) - ((v72 ^ 0x5985AE2F) >> 10)) >> 7);
  int v74 = v73
      - 787086048
      - ((v73 - 787086048) >> 9)
      + ((v73 - 787086048 - ((v73 - 787086048) >> 9)) >> 5);
  unsigned int v75 = v74
      - 1168002143
      - ((v74 - 1168002143) >> 14)
      + ((v74 - 1168002143 - ((v74 - 1168002143) >> 14)) >> 4);
  unsigned int v76 = v75 - 879085134 + ((v75 - 879085134) >> 10) - ((v75 - 879085134 + ((v75 - 879085134) >> 10)) >> 5);
  LODWORD(a51) = a3 & (LODWORD(STACK[0x310]) >> 1);
  HIDWORD(a50) = a3 & (HIDWORD(a52) >> 1);
  LODWORD(a56) = v70;
  HIDWORD(v88) = (((v73 ^ 0x903F3380) + (v73 | 0x6FC0CC7F) + 1) ^ v70 & 0x6FC0CC7E) >> 1;
  int v77 = a3 & (v75 >> 1) ^ v75;
  LODWORD(a53) = v66 ^ v69 ^ v72 ^ a3 & ((v72 ^ v69) >> 1);
  HIDWORD(a52) = v77 ^ a53;
  LODWORD(v88) = -v77;
  HIDWORD(v87) = v76 & 0x6FC0CC7F;
  LODWORD(v87) = !(((_BYTE)v73
                  + 32
                  - ((v73 - 787086048) >> 9)
                  + ((v73 - 787086048 - ((v73 - 787086048) >> 9)) >> 5)) & 1);
  int v78 = STACK[0x318];
  LODWORD(STACK[0x410]) = v71;
  LODWORD(STACK[0x318]) = v74;
  HIDWORD(a55) = v76 + 1300749569 - ((v76 + 1300749569) >> 9) - ((v76 + 1300749569 - ((v76 + 1300749569) >> 9)) >> 4);
  HIDWORD(a46) = (v74 ^ v71 ^ v78 ^ HIDWORD(a55)) >> 1;
  uint64_t v79 = (LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x24C]));
  int v80 = STACK[0x328];
  unsigned int v81 = (v67 + 27) ^ 0x9B67EC7F ^ *((_DWORD *)*(&off_1003AE630 + (v67 ^ 0x12)) + 232);
  LODWORD(v82) = __ROR4__(0, 20) ^ 0xAE6F4F2C;
  HIDWORD(v82) = v82;
  uint64_t v83 = LODWORD(STACK[0x38C]);
  uint64_t v84 = 4 * (LOBYTE(STACK[0x250]) ^ LOBYTE(STACK[0x24C]));
  *(_DWORD *)(STACK[0x378] + v84) = a65 ^ LODWORD(STACK[0x314]) ^ 0xE00D27BF ^ ((((v81 ^ ((v81 & STACK[0x344]) >> 1)) & STACK[0x334]) >> STACK[0x348]) | (((v81 ^ ((v81 & STACK[0x344]) >> 1)) & STACK[0x32C]) << v83));
  uint64_t v85 = LODWORD(STACK[0x40C]);
  *(_DWORD *)(STACK[0x380] + v84) = v85 ^ v80 ^ 0x8CDA8304 ^ (unsigned __int16)(((v82 >> 12) ^ 0xE6A3) - 7298) ^ *((unsigned __int16 *)*(&off_1003AE630 + (v67 ^ 0x1C)) + ((v82 >> 12) ^ 0xF2CAE6B1) - 6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * v67))(v73, v85, 59043, v83, a3, v79, a4, &off_1003AE630, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           v87,
           v88,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_1001EBDEC()
{
}

#error "1001F0980: call analysis failed (funcsize=4626)"

void sub_1001F0984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,int a57,int a58,int a59)
{
  LODWORD(STACK[0x28C]) = a58 ^ 0xCEEAF932;
  LODWORD(STACK[0x288]) = a57 ^ 0x79C04953;
  LODWORD(STACK[0x280]) = a56 ^ 0x32A6819A;
  LODWORD(STACK[0x284]) = a59 ^ 0x84299AD3;
  JUMPOUT(0x1001EDA78);
}

void sub_1001F0A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  uint64_t v55 = 8 * (a54 + 54);
  (*(void (**)(unint64_t))(v54 + v55))(STACK[0x380]);
  (*(void (**)(unint64_t))(v54 + v55))(STACK[0x378]);
  JUMPOUT(0x1001F0AB8);
}

char *sub_1001F0AF4(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
    {
      unsigned int v3 = (a3 + 7) >> 3;
      switch(a3 & 7)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          goto LABEL_22;
        case 3uLL:
          goto LABEL_21;
        case 4uLL:
          goto LABEL_20;
        case 5uLL:
          goto LABEL_19;
        case 6uLL:
          goto LABEL_18;
        case 7uLL:
          goto LABEL_17;
        default:
          do
          {
            char v15 = *result++;
            *a2++ = v15;
LABEL_17:
            char v16 = *result++;
            *a2++ = v16;
LABEL_18:
            char v17 = *result++;
            *a2++ = v17;
LABEL_19:
            char v18 = *result++;
            *a2++ = v18;
LABEL_20:
            char v19 = *result++;
            *a2++ = v19;
LABEL_21:
            char v20 = *result++;
            *a2++ = v20;
LABEL_22:
            char v21 = *result++;
            *a2++ = v21;
LABEL_23:
            char v22 = *result++;
            *a2++ = v22;
            --v3;
          }
          while (v3);
          break;
      }
    }
  }
  else
  {
    unint64_t v4 = -(int)result & 7;
    switch((int)v4)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v5 = *result++;
        *a2++ = v5;
LABEL_6:
        char v6 = *result++;
        *a2++ = v6;
LABEL_7:
        char v7 = *result++;
        *a2++ = v7;
LABEL_8:
        char v8 = *result++;
        *a2++ = v8;
LABEL_9:
        char v9 = *result++;
        *a2++ = v9;
LABEL_10:
        char v10 = *result++;
        *a2++ = v10;
LABEL_11:
        char v11 = *result++;
        *a2++ = v11;
        break;
      default:
        break;
    }
    BOOL v12 = a3 >= v4;
    unint64_t v13 = a3 - v4;
    if (!v12) {
      unint64_t v13 = 0;
    }
    if (v13 >= 8)
    {
      unint64_t v14 = ((v13 >> 3) + 7) >> 3;
      switch((v13 >> 3) & 7)
      {
        case 1uLL:
          goto LABEL_32;
        case 2uLL:
          goto LABEL_31;
        case 3uLL:
          goto LABEL_30;
        case 4uLL:
          goto LABEL_29;
        case 5uLL:
          goto LABEL_28;
        case 6uLL:
          goto LABEL_27;
        case 7uLL:
          goto LABEL_26;
        default:
          do
          {
            uint64_t v23 = *(void *)result;
            result += 8;
            *(void *)a2 = v23;
            a2 += 8;
LABEL_26:
            uint64_t v24 = *(void *)result;
            result += 8;
            *(void *)a2 = v24;
            a2 += 8;
LABEL_27:
            uint64_t v25 = *(void *)result;
            result += 8;
            *(void *)a2 = v25;
            a2 += 8;
LABEL_28:
            uint64_t v26 = *(void *)result;
            result += 8;
            *(void *)a2 = v26;
            a2 += 8;
LABEL_29:
            uint64_t v27 = *(void *)result;
            result += 8;
            *(void *)a2 = v27;
            a2 += 8;
LABEL_30:
            uint64_t v28 = *(void *)result;
            result += 8;
            *(void *)a2 = v28;
            a2 += 8;
LABEL_31:
            uint64_t v29 = *(void *)result;
            result += 8;
            *(void *)a2 = v29;
            a2 += 8;
LABEL_32:
            uint64_t v30 = *(void *)result;
            result += 8;
            *(void *)a2 = v30;
            a2 += 8;
            --v14;
          }
          while (v14);
          break;
      }
    }
    switch(v13 & 7)
    {
      case 1uLL:
        goto LABEL_40;
      case 2uLL:
        goto LABEL_39;
      case 3uLL:
        goto LABEL_38;
      case 4uLL:
        goto LABEL_37;
      case 5uLL:
        goto LABEL_36;
      case 6uLL:
        goto LABEL_35;
      case 7uLL:
        char v31 = *result++;
        *a2++ = v31;
LABEL_35:
        char v32 = *result++;
        *a2++ = v32;
LABEL_36:
        char v33 = *result++;
        *a2++ = v33;
LABEL_37:
        char v34 = *result++;
        *a2++ = v34;
LABEL_38:
        char v35 = *result++;
        *a2++ = v35;
LABEL_39:
        char v36 = *result++;
        *a2++ = v36;
LABEL_40:
        *a2 = *result;
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1001F0D50(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "prepare: switching to ODIFLOW", v1, 2u);
}

void sub_1001F0D94()
{
  *(_WORD *)int v0 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT, "-scoreWithScoreRequest:completionHandler is deprecated.", v0, 2u);
}

void sub_1001F0DDC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error getting data, %@", (uint8_t *)&v2, 0xCu);
}

void *sub_1001F0E54(void *result)
{
  *Class result = ++qword_100402078;
  return result;
}

uint64_t sub_1001F0E70(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1001F10CC(mach_port_t a1, unsigned int a2, long long *a3)
{
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1001F125C(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)long long v23 = a2;
  *(_DWORD *)&void v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1001F144C(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1001F15C8(uint64_t a1)
{
  int v1 = *(&off_1003B8530
       + ((75 * ((qword_100401AA0 - dword_100401B48) ^ 0x7E)) ^ byte_100329190[byte_1003381F0[(75 * ((qword_100401AA0 - dword_100401B48) ^ 0x7E))] ^ 0xF7])
       + 45);
  unsigned __int8 v2 = 75 * (*v1 ^ qword_100401AA0 ^ 0x7E);
  uint64_t v3 = (uint64_t)*(&off_1003B8530
                + (byte_10032D8B8[(byte_100329394[v2 - 4] ^ 0xB4) - 8] ^ v2)
                + 186);
  uint64_t v4 = (*(void *)(v3 - 4) ^ *v1) - (void)&v6;
  *int v1 = 544792907 * v4 + 0x5547F155C74775EALL;
  *(void *)(v3 - 4) = 544792907 * (v4 ^ 0xE12C07DFCC70D97ELL);
  uint64_t v8 = a1;
  v7[0] = 1911
        - 1697562443 * ((1698161583 - (v7 | 0x6537E3AF) + (v7 | 0x9AC81C50)) ^ 0x4D5824D4);
  LOBYTE(v3) = 75 * ((*(_DWORD *)(v3 - 4) - *(_DWORD *)v1) ^ 0x7E);
  (*((void (**)(_DWORD *))*(&off_1003B8530
                                     + ((75 * ((qword_100401AA0 + dword_100401B48) ^ 0x7E)) ^ byte_100332CB0[byte_10032D7B0[(75 * ((qword_100401AA0 + dword_100401B48) ^ 0x7E))] ^ 0x98])
                                     - 38)
   + (byte_10032D6BC[(byte_10032909C[v3 - 12] ^ 0x3D) - 12] ^ v3)
   + 4491))(v7);
  return v7[1];
}

uint64_t sub_1001F17D8()
{
  return 4294925265;
}

uint64_t sub_1001F17E0(uint64_t a1)
{
  int v1 = *(&off_1003B8530
       + ((75 * ((qword_100401AA0 + dword_100401B68) ^ 0x7E)) ^ byte_100328F90[byte_1003380F0[(75 * ((qword_100401AA0 + dword_100401B68) ^ 0x7E))] ^ 0xB3])
       + 198);
  uint64_t v2 = (uint64_t)*(&off_1003B8530
                + (byte_10032D8B0[byte_100329390[(75
                                                                                                * ((qword_100401AA0 - *v1) ^ 0x7E))] ^ 0x18] ^ (75 * ((qword_100401AA0 - *v1) ^ 0x7E)))
                + 30);
  unint64_t v3 = (*(void *)(v2 - 4) + *v1) ^ (unint64_t)&v5;
  *int v1 = 544792907 * v3 + 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  uint64_t v6 = a1;
  unsigned int v7 = 1484 - 1437274309 * ((((2 * &v6) | 0x6B25F1A) - &v6 - 56176525) ^ 0x215752B8);
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)v1) ^ 0x7E);
  return (*((uint64_t (**)(uint64_t *))*(&off_1003B8530
                                                + ((75 * ((qword_100401AA0 - dword_100401B68) ^ 0x7E)) ^ byte_100332CB0[byte_10032D7B0[(75 * ((qword_100401AA0 - dword_100401B68) ^ 0x7E))] ^ 0x14])
                                                - 144)
          + (v2 ^ byte_10032D8B0[byte_100329390[v2] ^ 0xB4])
          + 4657))(&v6);
}

uint64_t sub_1001F19D4(char a1, unsigned int a2)
{
  return byte_100328F98[(byte_1003380F4[a2 - 4] ^ a1) - 8] ^ a2;
}

uint64_t sub_1001F1A00(char a1, unsigned int a2)
{
  return byte_10032D6BC[(byte_10032909C[a2 - 12] ^ a1) - 12] ^ a2;
}

uint64_t sub_1001F1A2C(unsigned int a1)
{
  return byte_100332CB8[(byte_10032D7B8[a1 - 8] ^ 0x98) - 8] ^ a1;
}

uint64_t sub_1001F1A5C(char a1, unsigned int a2)
{
  return byte_100329294[(byte_1003382F4[a2 - 4] ^ a1) - 4] ^ a2;
}

uint64_t sub_1001F1A88(unsigned int a1)
{
  return byte_10032D8B8[(byte_100329394[a1 - 4] ^ 0x54) - 8] ^ a1;
}

uint64_t sub_1001F1AB8(unsigned int a1)
{
  return byte_100332CB8[(byte_10032D7B8[a1 - 8] ^ 0x14) - 8] ^ a1;
}

uint64_t sub_1001F1AE8(unsigned int a1)
{
  return byte_100329190[byte_1003381FC[a1 - 12] ^ 0xB9] ^ a1;
}

uint64_t sub_1001F1B14(unsigned int a1)
{
  return byte_100329190[byte_1003381FC[a1 - 12] ^ 0x5D] ^ a1;
}

uint64_t sub_1001F1B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(&off_1003B8530
       + ((75 * (dword_100401AF0 ^ 0x7E ^ qword_100401AA0)) ^ byte_100329190[byte_1003381F0[(75 * (dword_100401AF0 ^ 0x7E ^ qword_100401AA0))] ^ 0xF7])
       + 18);
  unsigned __int8 v5 = 75 * (*v4 ^ qword_100401AA0 ^ 0x7E);
  uint64_t v6 = (uint64_t)*(&off_1003B8530
                + (byte_100329190[byte_1003381FC[v5 - 12] ^ 0x79] ^ v5)
                + 217);
  unint64_t v7 = (unint64_t)&v9[*v4 + *(void *)(v6 - 4)];
  *uint64_t v4 = 544792907 * v7 + 0x1ED3F820338F2682;
  *(void *)(v6 - 4) = 544792907 * (v7 ^ 0xE12C07DFCC70D97ELL);
  v10[0] = a3;
  v10[1] = a1;
  uint64_t v14 = a2;
  int v13 = (1697562443 * ((v10 + 2111032075 - 2 * ((unint64_t)v10 & 0x7DD3CB0B)) ^ 0xAA43F38F)) ^ 0x6BD;
  uint64_t v12 = a4;
  LODWORD(v6) = 544792907 * ((*(_DWORD *)(v6 - 4) + *(_DWORD *)v4) ^ 0xCC70D97E);
  (*((void (**)(void *))*(&off_1003B8530
                                     + ((75 * (dword_100401AF0 ^ 0x7E ^ qword_100401AA0)) ^ byte_100329190[byte_1003381F0[(75 * (dword_100401AF0 ^ 0x7E ^ qword_100401AA0))] ^ 0x5D])
                                     + 6)
   + (byte_10032D8B8[(byte_100329394[v6 - 4] ^ 0x54) - 8] ^ v6)
   + 4496))(v10);
  return (v11 - 847203058);
}

uint64_t sub_1001F1D48(uint64_t a1)
{
  int v1 = (unint64_t *)*(&off_1003B8530
                           + ((75 * ((qword_100401AA0 - dword_1004018B8) ^ 0x7E)) ^ byte_100329190[byte_1003381F0[(75 * ((qword_100401AA0 - dword_1004018B8) ^ 0x7E))] ^ 0xF7])
                           - 131);
  unsigned __int8 v2 = 75 * ((qword_100401AA0 + *v1) ^ 0x7E);
  uint64_t v3 = (uint64_t)*(&off_1003B8530
                + (byte_100329294[(byte_1003382F4[v2 - 4] ^ 0xB4) - 4] ^ v2)
                + 242);
  unint64_t v4 = 544792907 * (*v1 ^ (unint64_t)&v6 ^ 0xE12C07DFCC70D97ELL ^ *(void *)(v3 - 4));
  *int v1 = v4;
  *(void *)(v3 - 4) = v4;
  unsigned int v9 = 1419
     - 673918253
     * (((&v7 ^ 0x821DC7DC | 0x5FF916F2) - ((&v7 ^ 0x821DC7DC) & 0x5FF916F2)) ^ 0x47ACCA86);
  uint64_t v7 = a1;
  LOBYTE(v3) = 75 * ((*(_DWORD *)(v3 - 4) + *(_DWORD *)v1) ^ 0x7E);
  (*((void (**)(uint64_t *))*(&off_1003B8530
                                      + ((75 * ((qword_100401AA0 + dword_1004018B8) ^ 0x7E)) ^ byte_100328F90[byte_1003380F0[(75 * ((qword_100401AA0 + dword_1004018B8) ^ 0x7E))] ^ 0xB3])
                                      - 19)
   + (byte_10032D8B8[(byte_100329394[v3 - 4] ^ 0x54) - 8] ^ v3)
   + 4460))(&v7);
  return (v8 - 847203058);
}

uint64_t sub_1001F1F5C(unsigned int a1)
{
  return byte_10032D6BC[(byte_10032909C[a1 - 12] ^ 0x38) - 12] ^ a1;
}

uint64_t sub_1001F1F88(char a1, unsigned int a2)
{
  return byte_100329190[(byte_1003381FC[a2 - 12] ^ a1)] ^ a2;
}

uint64_t sub_1001F1FB4(unsigned int a1)
{
  return byte_100329294[(byte_1003382F4[a1 - 4] ^ 0xB4) - 4] ^ a1;
}

uint64_t sub_1001F1FE4(unsigned int a1)
{
  return byte_100328F98[(byte_1003380F4[a1 - 4] ^ 0xEC) - 8] ^ a1;
}

uint64_t sub_1001F2014(unsigned int a1)
{
  return byte_10032D8B8[(byte_100329394[a1 - 4] ^ 0xDE) - 8] ^ a1;
}

uint64_t sub_1001F2044(unsigned int a1)
{
  return byte_10032D8B8[(byte_100329394[a1 - 4] ^ 0xB4) - 8] ^ a1;
}

uint64_t sub_1001F2074(unsigned int a1)
{
  return byte_10032D6BC[(byte_10032909C[a1 - 12] ^ 0x3D) - 12] ^ a1;
}

uint64_t sub_1001F20A4()
{
  return 2;
}

uint64_t sub_1001F20AC()
{
  return 16777984;
}

uint64_t sub_1001F20B8()
{
  return 2;
}

uint64_t sub_1001F20C0(uint64_t a1)
{
  int v1 = *(&off_1003B8530
       + ((75 * ((qword_100401AA0 + dword_100401B40) ^ 0x7E)) ^ byte_100329190[byte_1003381F0[(75 * ((qword_100401AA0 + dword_100401B40) ^ 0x7E))] ^ 0x5D])
       + 92);
  uint64_t v2 = (uint64_t)*(&off_1003B8530
                + (byte_100329190[byte_1003381F0[(75
                                                                                                * ((qword_100401AA0 + *v1) ^ 0x7E))] ^ 0x5D] ^ (75 * ((qword_100401AA0 + *v1) ^ 0x7E)))
                + 236);
  uint64_t v3 = (*(void *)(v2 - 4) ^ *v1) - (void)&v5;
  *int v1 = 544792907 * v3 - 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  unsigned int v6 = 2361
     - 1697562443 * ((453851132 - (&v6 | 0x1B0D37FC) + (&v6 | 0xE4F2C803)) ^ 0x3362F087);
  uint64_t v7 = a1;
  LOBYTE(v2) = 75 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)v1) ^ 0x7E);
  return (*((uint64_t (**)(unsigned int *))*(&off_1003B8530
                                                     + ((75
                                                                        * ((qword_100401AA0 - dword_100401B40) ^ 0x7E)) ^ byte_100329190[byte_1003381F0[(75 * ((qword_100401AA0 - dword_100401B40) ^ 0x7E))] ^ 0xB9])
                                                     - 69)
          + (v2 ^ byte_100329190[byte_1003381F0[v2] ^ 0xB9])
          + 4584))(&v6);
}

uint64_t sub_1001F22A4(int a1)
{
  int v1 = *(&off_1003B8530
       + (byte_10032D8B8[(byte_100329394[(75
                                                                          * ((qword_100401AA0 + dword_100401AA8) ^ 0x7E))
                                                        - 4] ^ 0xDE)
                                        - 8] ^ (75 * ((qword_100401AA0 + dword_100401AA8) ^ 0x7E)))
       - 128);
  uint64_t v2 = (uint64_t)*(&off_1003B8530
                + ((75 * ((qword_100401AA0 - *v1) ^ 0x7E)) ^ byte_100328F90[byte_1003380F0[(75 * ((qword_100401AA0 - *v1) ^ 0x7E))] ^ 4])
                + 142);
  uint64_t v3 = *(void *)(v2 - 4) - *v1 - (void)&v6;
  *int v1 = 544792907 * v3 - 0x1ED3F820338F2682;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  unsigned int v4 = 375636451 * (((v7 | 0xCFB98B3) - (v7 & 0xCFB98B3)) ^ 0x5FC5C23F);
  _DWORD v7[2] = v4 ^ (516446171 * a1 + 578085537);
  v7[0] = v4 + 2787;
  LOBYTE(v2) = 75 * (*(_DWORD *)v1 ^ 0x7E ^ *(_DWORD *)(v2 - 4));
  (*((void (**)(_DWORD *))*(&off_1003B8530
                                     + ((75 * ((qword_100401AA0 - dword_100401AA8) ^ 0x7E)) ^ byte_100329190[byte_1003381F0[(75 * ((qword_100401AA0 - dword_100401AA8) ^ 0x7E))] ^ 0x79])
                                     - 13)
   + (byte_100329190[byte_1003381FC[v2 - 12] ^ 0x79] ^ v2)
   + 4700))(v7);
  return (v7[1] - 847203058);
}

uint64_t sub_1001F24BC(unsigned int a1)
{
  return byte_100328F98[(byte_1003380F4[a1 - 4] ^ 4) - 8] ^ a1;
}

uint64_t sub_1001F24E8(char a1, unsigned int a2)
{
  return byte_100332CB8[(byte_10032D7B8[a2 - 8] ^ a1) - 8] ^ a2;
}

uint64_t sub_1001F2514(unsigned int a1)
{
  return byte_100329190[byte_1003381FC[a1 - 12] ^ 0x79] ^ a1;
}

uint64_t sub_1001F2540(char a1, unsigned int a2)
{
  return byte_10032D8B8[(byte_100329394[a2 - 4] ^ a1) - 8] ^ a2;
}

uint64_t sub_1001F256C(unsigned int a1)
{
  return byte_100329190[byte_1003381FC[a1 - 12] ^ 0xF7] ^ a1;
}

uint64_t sub_1001F2598(unsigned int a1)
{
  return byte_100329294[(byte_1003382F4[a1 - 4] ^ 0xD4) - 4] ^ a1;
}

uint64_t sub_1001F25C8(unsigned int a1)
{
  return byte_100328F98[(byte_1003380F4[a1 - 4] ^ 0xB3) - 8] ^ a1;
}

uint64_t sub_1001F25F8(unsigned int a1)
{
  return byte_10032D8B8[(byte_100329394[a1 - 4] ^ 0x18) - 8] ^ a1;
}

void sub_1001F2624(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 366490169 * (((a1 | 0x4671CE0E) - a1 + (a1 & 0xB98E31F1)) ^ 0x50DF984A);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1001F2714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x930])(a1, a2, a3, a4, a5, a50, 1043, 1253);
}

void sub_1001F2748(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001F27D0(uint64_t a1)
{
  *(_DWORD *)a1 = 2094040877;
  *(_DWORD *)(a1 + 4) = 861414661;
  *(_DWORD *)(a1 + 72) = 189260953;
  *(_DWORD *)(a1 + 76) = 189260953;
  *(_WORD *)(a1 + 80) = 22841;
  memset((void *)(a1 + 8), 91, 64);
  unint64_t v2 = STACK[0x808];
  qmemcpy((void *)(STACK[0x808] + 84), "KM$:[[[[[[[[[[[[[[[[", 20);
  *(_DWORD *)(v2 + 104) = 1075108717;
  *(unsigned char *)(v2 + 108) = 0;
  *int v1 = v2;
  return ((uint64_t (*)(void))STACK[0x428])();
}

uint64_t sub_1001F2860(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  unint64_t v5 = v2 ^ 0xE19B3C29;
  STACK[0xA00] = v5;
  LODWORD(v5) = ((((((v1 + 1603) ^ 0x80) - 2242) ^ 0x102) + v5) ^ 0xBF7FAFEB)
              + 2147481472
              + ((2 * (((((v1 + 1603) ^ 0x80) - 2242) ^ 0x102) + v5)) & 0x7EFF5FD6);
  *(_DWORD *)(a1 + 16) = v5;
  uint64_t v6 = (*(uint64_t (**)(void))(v3 + 8 * (v1 + 3893)))((v5 - 1065330539));
  unint64_t v7 = STACK[0x258];
  *(void *)(a1 + 24) = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((7 * (v6 == 0)) ^ (v1 + 1603))))();
}

uint64_t sub_1001F2904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + v4 + v3 + 1073569472 - v5 + (((v6 - 435) | 0x880) ^ (v7 + 2172))) = *(void *)(a2 - 7 + v4 + v3 + 1073569472 - v5 + (((v6 - 435) | 0x880) ^ (v7 + 2172)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((4350 * (v5 - (v2 & 0xFFFFFFF8) == -8)) ^ v6)))();
}

uint64_t sub_1001F2970@<X0>(int a1@<W8>)
{
  int v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ 0x343)))(a1 ^ (v2 - 347) ^ (v1 - 3385) ^ ((v1 - 4291) | 0x641u)) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 << 6) | (v4 << 7)) ^ v1)))();
}

uint64_t sub_1001F29D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = 3687 - (&a13 ^ 0xC7816049) * v16;
  a13 = &STACK[0x75464D914B72487F];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v15 + 37680))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((310 * (a14 == 847203058)) ^ v17)))(v18);
}

uint64_t sub_1001F2A48()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0x1BE4)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((15 * (STACK[0x438] != 0)) | (v0 + 2107))))();
}

uint64_t sub_1001F2A84()
{
  v5[1] = v4;
  unsigned int v6 = v1
     + 366490169 * (((v5 | 0x152B7BD7) - v5 + (v5 & 0xEAD48428)) ^ 0x3852D93)
     + 3628;
  (*(void (**)(void *))(v0 + 8 * (v1 + 3796)))(v5);
  return (v2 - 847203058);
}

uint64_t sub_1001F2A90@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v7 + (a1 - v3 - 3297 + v5 + a2)) = *(unsigned char *)(v4 + (a1 - v3 - 3297 + v5 + a2));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1001 * (a2 - 1 != a3)) ^ (v6 + a1 + 1445))))();
}

uint64_t sub_1001F2AD4@<X0>(char a1@<W0>, int a2@<W8>)
{
  BOOL v6 = v3 + a1 != 0xFF && a2 == (((v2 ^ 0x242E6A83) - 607020693) ^ 0x1C386643);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((4941 * v6) ^ v2)))(4294925278);
}

uint64_t sub_1001F2B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  uint64_t v34 = (*(uint64_t (**)(void))(v33 + 8 * (v31 ^ 0x1DAA)))(LODWORD(STACK[0x4E4]) ^ ((v31 - 1486) | 2) ^ 0xE19B35E3);
  unint64_t v35 = STACK[0x258];
  STACK[0xA18] = v34 + 0x6BBE7547D3B34F0FLL;
  if (v34) {
    a31 = v32;
  }
  LODWORD(STACK[0xA24]) = a31;
  return (*(uint64_t (**)(void))(v35 + 8 * (((v34 == 0) * (v31 ^ 0xF9B)) ^ v31)))();
}

uint64_t sub_1001F2BB8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((204 * ((((a7 ^ 0xAF5) + 22) ^ (a2 - 2524) ^ (16 * (a7 ^ 0xAF5u))) + v7 < v7 + a2)) ^ a7)))();
}

uint64_t sub_1001F2C00(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  LODWORD(STACK[0x6F0]) = a8;
  LODWORD(STACK[0x6F4]) = a8 + 24;
  int v17 = 7 * (v10 ^ 0x7B81D5A9);
  unsigned int v18 = a8 + 4280 + v17 - ((((a8 + 4280 + v17) * (unint64_t)a3) >> 32) >> 9) * a5;
  int v19 = (v10 ^ 0x7B81D5A9) + (v18 & 0x33A) + (v18 & 0x33A ^ 0x33A);
  int v20 = ((*(unsigned __int8 *)(v13 + v18) ^ 0x86) << 24) | ((*(unsigned __int8 *)(v13
                                                                                + 7 * v19
                                                                                + 7
                                                                                - ((((7 * v19 + 7)
                                                                                                 * (unint64_t)a3) >> 32) >> 9)
                                                                                * a5) ^ 0x86) << 16) | ((*(unsigned __int8 *)(v13 + v17 + 5796 - ((((v17 + 5796) * (unint64_t)a3) >> 32) >> 9) * a5) ^ 0x86) << 8) | *(unsigned __int8 *)(v13 + v17 + 5803 - ((((v17 + 5803) * (unint64_t)a3) >> 32) >> 9) * a5) ^ 0x13;
  int v21 = v20 - ((2 * v20) & 0x2B2784) - 2146069566;
  *((_DWORD *)&STACK[0x850]
  + 199 * v8
  % (((v21 & 0x2D8FA949 ^ 0x58140) + (v21 & 0x2D8FA949 ^ 0x2D8A2809)) ^ ((v10 & 0x2D8FA85D ^ 0x40E2854)
                                                                       + (v10 & 0x2D8FA85D ^ 0x29818009u)))) = v21 ^ v14 ^ 0x36E07600;
  int v22 = *(unsigned __int8 *)(v13 + (v17 + 6244) % 0x3C0u);
  int v23 = (~(2 * v10) & 2) + (v10 ^ 0x7B81D5A8);
  int v24 = 7 * v23;
  int v25 = *(unsigned __int8 *)(v13 + (v17 + 6258) % 0x3C0u);
  int v26 = *(unsigned __int8 *)(v13 + (7 * v23 + 6258) % 0x3C0u);
  int v27 = *(unsigned __int8 *)(v13 + (v17 + 6251) % 0x3C0u) ^ 0x13;
  __int16 v28 = 199 * a6;
  LOWORD(v17) = a6;
  LODWORD(STACK[0x6EC]) = a6;
  int v29 = a7 ^ 0x1F3DB2D;
  int v30 = v12;
  uint64_t v31 = (unsigned __int16)(199 * a6 + 29798) % 0x114u;
  int v32 = v16 ^ 0xB1415BB ^ v21;
  unsigned __int8 v33 = v25 ^ 0x13;
  LODWORD(STACK[0x6C8]) = v32 - 108724958 - ((2 * v32) & 0xF309FA44);
  unsigned int v34 = v25 ^ 0xCCCCCCCC;
  int v35 = v9 - 1513229332 + (v21 ^ v14 ^ 0x2FD952B6);
  unsigned int v36 = v15 ^ 0xF8472380;
  unsigned int v37 = a7 ^ 0xF9B4F8AD;
  __int16 v38 = v28;
  unsigned __int16 v39 = v28 - 21211;
  LODWORD(STACK[0x700]) = v11;
  int v40 = v25 ^ 0x33333333;
  unsigned int v41 = v9 + LODWORD(STACK[0x710]) + (v16 ^ 0x8B018679) - 1557909354;
  LODWORD(STACK[0x708]) = v30;
  unsigned int v42 = v11 + v30 + (a7 ^ 0x64B0752) - 1263985444 - ((2 * (v11 + v30 + (a7 ^ 0x64B0752) + 1534633413)) & 0xB260EE2E);
  int v43 = v9 - ((2 * v9 + 353107344) & 0x2CADF5D0) - 1596130896;
  LODWORD(STACK[0x6D8]) = v43;
  int v44 = (v34 | v40) & 0x95;
  unsigned int v45 = ((2 * (v30 + 2088763005)) & 0x3DFF37FA) + ((v30 + 2088763005) ^ 0x9EFF9BFD);
  int v46 = v44 ^ v32;
  unsigned int v47 = (v15 ^ 0x7B8DC7F ^ (v45 + 1627415555))
      - ((2 * (v15 ^ 0x7B8DC7F ^ (v45 + 1627415555))) & 0xF10CAA86)
      + 2022069571;
  int v48 = v43 ^ v14;
  __int16 v49 = v38;
  int v50 = ((v22 ^ 0x13) << 24) | (v27 << 16) | (v33 << 8);
  uint64_t v51 = (unsigned __int16)(v38 - 7281) % 0x114u;
  int v52 = v50 | v26 ^ 0x13;
  int v53 = v52 ^ v15;
  unsigned int v54 = v36 + v52;
  int v55 = v29 ^ v53;
  int v56 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 5803) % 0x3C0u) ^ 0x86;
  v53 ^= 0xFE3C215D;
  int v57 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 5810) % 0x3C0u) ^ 0x86;
  int v58 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 5817) % 0x3C0u);
  *((_DWORD *)&STACK[0x850] + v31) = v53;
  unsigned int v59 = v37 + v55;
  int v60 = (v56 << 24) | (v57 << 16) | ((v58 ^ 0x86) << 8) | *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 5824) % 0x3C0u) ^ 0x13;
  unsigned int v61 = v41;
  LODWORD(STACK[0x6D0]) = v41;
  int v62 = v60 ^ v41;
  *((_DWORD *)&STACK[0x850] + v39 % 0x114u) = v35 + 986542149 - ((2 * v35 - 2104433082) & 0xF309FA44);
  uint64_t v63 = (unsigned __int16)(((((v48 ^ 0xCE) + 119) & 0xC7) + (((v48 ^ 0x31) - 119) & 0xC7))
                         * (v17 - 12761))
      % 0x114u;
  int v64 = *(unsigned __int8 *)(STACK[0x718]
                           + (((2147482752 - v23) ^ (v23 + 895)) & 0x7165310F ^ 0x71653108u) * (v23 + 895) % 0x3C0) ^ 0x13;
  int v65 = (LODWORD(STACK[0x6C8]) ^ v53 ^ 0x95) - v46;
  unsigned int v66 = (v64 << 24) + 1449183905 - ((v64 << 25) & 0xAC000000);
  int v67 = v23;
  LODWORD(STACK[0x6E0]) = v23;
  int v68 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 6279) % 0x3C0u) ^ 0x13;
  int v69 = *(unsigned __int8 *)(STACK[0x718] + (7 * v23 + 6286) % 0x3C0u);
  int v70 = v47 & 0x95 ^ 1 | v47 & 0x95 ^ 0x94;
  unsigned int v71 = ((v59 + 1) ^ (v54 + 1) ^ v65)
      - LODWORD(STACK[0x708])
      - ((2 * (((v59 + 1) ^ (v54 + 1) ^ v65) - LODWORD(STACK[0x708])) - 27075224) & 0xF309FA44);
  unsigned int v72 = (((v62 & 0x5EAFEAA3 ^ 0x1E272283) + (v62 & 0x5EAFEAA3 ^ 0x4088C820)) ^ 0xE28E482E)
      * (v23 + 896)
      * (((v66 & 0x3C000000 ^ 0x14000000) + (v66 & 0x3C000000 ^ 0x2867D9EB)) & 0x3C4791E3);
  LODWORD(STACK[0x6C4]) = (v70 - ((2 * v70) & 0x66666666) + 1746486097) ^ v62;
  unsigned int v73 = v47 ^ 0xA3D34AC3 ^ v62;
  unsigned int v74 = v47 ^ 0x83E64F7B;
  int v75 = v42 ^ 0x59307782 ^ v62;
  *((_DWORD *)&STACK[0x850] + v51) = v71 + 2025221078;
  LODWORD(v51) = v61 ^ 0x2035052D;
  *((_DWORD *)&STACK[0x850] + v63) = v62 ^ 0x390C210E;
  LOWORD(v53) = (unsigned __int16)(v49 - 21012) % 0x114u;
  int v76 = LODWORD(STACK[0x700]) + 137593361;
  unsigned int v77 = (v42 ^ 0x7905723A) + v76 - ((2 * ((v42 ^ 0x7905723A) + v76)) & 0xA8C55690) + 1415752520;
  unsigned int v78 = v45 + 1627415555 + (v77 ^ 0xAB9D54B7);
  LODWORD(v63) = *(unsigned __int8 *)(STACK[0x718] + v72 % 0x3C0);
  LODWORD(STACK[0x708]) = -1627415555 - v45 + (((v53 & 0x54 ^ 0x17F96255) + (v53 & 0x54)) & 0x16F962DD);
  LOWORD(v45) = v49;
  STACK[0x6C8] = (unsigned __int16)(v49 - 7082) % 0x114u;
  unsigned int v79 = ((v63 ^ 0x13) << 16) | (v68 << 8);
  int v80 = (v48 ^ 0x42FA2131) - v51;
  int v81 = v79 | v69 ^ 0x13;
  unsigned int v82 = 7 * (v67 + (((((v24 + 5838) % 0x3C0u) & 0x300 ^ 0x8B06FF00) + (((v24 + 5838) % 0x3C0u) & 0x300)) ^ 0x8B06FC39))
      + 70;
  int v83 = STACK[0x710];
  unsigned int v84 = (((unsigned __int16)LODWORD(STACK[0x710]) + 151) & 0x3C0)
      + ((872 - (unsigned __int16)LODWORD(STACK[0x710])) & 0x3C0);
  int v85 = ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5831) % 0x3C0u) ^ 0x86) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5838) % 0x3C0u) ^ 0x86) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + v82 % 0x3C0) ^ 0x86) << 8) | *(unsigned __int8 *)(STACK[0x718] + (v24 + 5852) % 0x3C0u) ^ 0x13;
  unsigned int v86 = (v81 + (v66 ^ 0x5660CAA1) + 1496348439 - ((2 * (v81 + (v66 ^ 0x5660CAA1))) & 0xB260EE2E)) ^ v42;
  STACK[0x700] = (unsigned __int16)(v49 + 16664) % 0x114u;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v49 + 29997) % 0x114u) = v86 ^ 0xD9B1F80F;
  int v87 = LODWORD(STACK[0x6D8]) ^ 0x1656FAE8;
  LODWORD(v63) = ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 6293) % v84) ^ 0x13) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 6300) % 0x3C0u) ^ 0x13) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 6307) % 0x3C0u) ^ 0x13) << 8);
  int v88 = v51 + v83 + 1104743575;
  int v89 = v87 - v88;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)v53) = (v86 ^ 0x2035052D)
                                                     + v87
                                                     + 986542149
                                                     - ((2 * ((v86 ^ 0x2035052D) + v87) - 2104433082) & 0xF309FA44);
  ++v78;
  LODWORD(v51) = v85 ^ (v87 - v88);
  int v90 = (v80 - 2020206458 - ((2 * v80) & 0xF2C310C)) ^ v88 ^ 0x83FEB30A ^ v51;
  int v91 = (v63 | *(unsigned __int8 *)(STACK[0x718] + (v24 + 6314) % 0x3C0u) ^ 0x13) ^ v78;
  LODWORD(v63) = (v75 - (v42 ^ 0x7905723A)) ^ (v73 - v74);
  LODWORD(v31) = ((2 * v89) & 0xFDFD7FFE ^ 0xB4D44F44) + (v89 ^ 0x2495D85D);
  int v92 = ((v83 + 1104743575) ^ 0xD321E511)
      - 16859137
      - v31
      + 1017348474
      - ((2 * (((v83 + 1104743575) ^ 0xD321E511) - 16859137 - v31)) & 0x794702F4);
  unsigned int v93 = ((2 * v78) & 0xAF63C73C ^ 0xA442C704) + (v78 ^ 0xDDA843C);
  unsigned int v94 = v76 + v74 + (v77 ^ 0xAB9D54B7) + 1 - ((2 * (v76 + v74 + (v77 ^ 0xAB9D54B7) + 1)) & 0x29AC0960) - 1797913424;
  unsigned int v95 = LODWORD(STACK[0x6D0]) ^ 0xF909123D ^ ((v48 ^ 0x62CF241C ^ v86)
                                            - ((2 * (v48 ^ 0x62CF241C ^ v86)) & 0xB2782E20)
                                            - 650373360);
  unsigned int v96 = (v76 ^ 0xD321E511) - v93 + 2023117429 - ((2 * ((v76 ^ 0xD321E511) - v93 - 676207714)) & 0x41C8DDAE);
  int v97 = v31 + 16842753 + (v51 ^ 0xDA6B6737);
  unsigned int v98 = v92 ^ ((v88 ^ 0x83FEB30A) + 1017348474 - 2 * ((v88 ^ 0x83FEB30A) & 0x3CA3817E ^ v88 & 4));
  unsigned int v99 = v77 ^ 0xD79C1842;
  int v100 = v63 ^ ((LODWORD(STACK[0x6C4]) ^ 0x482C467C ^ v95) - v95);
  LOWORD(v46) = v45;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x6C8]) = LODWORD(STACK[0x708])
                                                              + v100
                                                              - 108724958
                                                              - ((2 * (LODWORD(STACK[0x708]) + v100)) & 0xF309FA44);
  unsigned int v101 = (((v77 ^ 0xDF77FE0 ^ v91) - (v77 ^ 0xD79C1842)) ^ ((v94 ^ 0x6B29FB4F) + (v94 ^ 0x4EBD6312 ^ v91) + 1) ^ ((v90 ^ 0xA202804E) + (((v90 ^ 0x87961886) - 420935095 - ((2 * (v90 ^ 0x87961886)) & 0xCDD215B8) + 147) ^ v91 ^ 0xE6E90A49) + 1))
       - v93;
  int v102 = v96 ^ v94;
  unsigned int v103 = (v92 ^ 0x3CA3817A) - ((2 * (v92 ^ 0x3CA3817A) - 635626156) & 0xF99999DE) - 371500135;
  int v104 = v96 ^ (v99 - 1595642153 - ((2 * v99) & 0x41C8DDAE));
  int v105 = v92 ^ (v80 + 1017348474 - ((2 * v80) & 0x794702F4)) ^ v103;
  int v106 = ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5859) % 0x3C0u) ^ 0x86) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5866) % 0x3C0u) ^ 0x86) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + (v24 + 5873) % 0x3C0u) ^ 0x86) << 8) | *(unsigned __int8 *)(STACK[0x718] + (v24 + 5880) % 0x3C0u) ^ 0x13;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)STACK[0x700]) = v51 ^ 0xC3524381;
  int v107 = v103 ^ (v31 - ((2 * v31 + 1854420550) & 0xF99999DE) + 873523218);
  uint64_t v108 = (unsigned __int16)(v45 - 20813) % 0x114u;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v45 + 30196) % 0x114u) = v91 ^ 0x23EF9A80;
  LODWORD(v31) = (v96 ^ 0xA0E46ED7) - ((2 * (v96 ^ 0xA0E46ED7) - 635626156) & 0xB5ED8D66) - 939174563;
  unsigned int v109 = v104 - ((2 * v104 + 1815728682) & 0xF11FC7A4) - 1364407065;
  unint64_t v110 = STACK[0x718];
  int v111 = v31 ^ (v93 - ((2 * v93 - 1121849592) & 0xB5ED8D66) + 965197367);
  int v112 = v102 ^ v31;
  int v113 = v106 ^ v103;
  LODWORD(v51) = *(unsigned __int8 *)(STACK[0x718] + (v24 + 6321) % 0x3C0u);
  int v114 = *(unsigned __int8 *)(STACK[0x718] + (v24 + 6328) % 0x3C0u) ^ 0x13;
  int v115 = *(unsigned __int8 *)(STACK[0x718] + (v24 + 6335) % 0x3C0u) ^ 0x13;
  *((_DWORD *)&STACK[0x850] + v108) = v101 - ((2 * v101 + 838118786) & 0xF309FA44) + 310334435;
  int v116 = *(unsigned __int8 *)(v110 + (v24 + 6342) % 0x3C0u);
  LODWORD(v108) = (v116 ^ 0x13) + 2039083773 - ((2 * (v116 ^ 0x13)) & 0xFFFFFFFB);
  unsigned int v117 = v97 + 276733815 - ((2 * (v97 + 0x4000) + 770884778) & 0xF309FA44);
  int v118 = (v108 ^ 0x7989F2FD | ((v51 ^ 0x13) << 24) | (v114 << 16) | (v115 << 8)) ^ v31;
  int v119 = STACK[0x6EC];
  int v120 = LODWORD(STACK[0x6EC]) + 52845;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v46 - 6883) % 0x114u) = v117;
  LODWORD(v31) = (v98 - 1239619307) ^ v105 ^ 0x263A0A5C ^ v118;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v46 + 16863) % 0x114u) = v113 ^ 0x65F5E8CC;
  int v121 = (v107 - 614722942) ^ 0x5A9F3FB1;
  unsigned int v122 = v121 + ((v98 - ((2 * (v98 - 1239619307)) & 0xFB31DAAA) + 867554922) ^ 0x15421BA ^ v105);
  int v123 = (((v109 ^ 0x7701C2D) + (v109 ^ v113 ^ 0x84432FA8) + 1) ^ ((v112 ^ 0x913B532B) + (v112 ^ v113 ^ 0x120860AE) + 1) ^ ((v113 ^ 0xCA3212EC ^ (v31 - ((2 * v31) & 0x6DFDBD2C) - 1224810858)) - v31))
       - v111;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)((v116 & 0xFFC7 ^ 0xC4 | v116 & 0xFFC7 ^ 3) * v120) % 0x114u) = v118 ^ 0xA3723B91;
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v46 - 20614) % 0x114u) = v123
                                                                        + 986542149
                                                                        - ((2 * v123 - 2104433082) & 0xF309FA44);
  unsigned int v124 = v121
       - ((v105 ^ 0xDDF36CCD)
        + 1492057882)
       - 105848557
       - ((2 * (v121 - ((v105 ^ 0xDDF36CCD) + 1492057882))) & 0xF361C226);
  int v125 = LODWORD(STACK[0x6F0]) + 632;
  int v126 = ((1239619306 - v104) & 0x86F6821B)
       + (v103 ^ 0x7CCCCCEF)
       + ((v122 + 825782987 - ((2 * v122) & 0x6270E596)) ^ 0xCEC78D34)
       + (v109 & 0x86F6821B ^ 0x80868212)
       - (((v108 ^ 0x7989F2B0) + (v108 & 0x7989F3B2 ^ 0x86760D4F) + 1) | v116 & 0x4D ^ 1)
       + 584614049;
  unint64_t v127 = STACK[0x6F8];
  *((_DWORD *)&STACK[0x850] + (unsigned __int16)(v46 - 6684) % 0x114u) = (v118 ^ 0x5AF6C6B3)
                                                                       + v107
                                                                       + 276717431
                                                                       - ((2 * ((v118 ^ 0x5AF6C6B3) + v107) + 770884778) & 0xF309FA44);
  LODWORD(STACK[0x710]) = (((v124 ^ 0x64F1EEC) + v126 + 1) ^ 0xA7B9C37F)
                        + 1525678039
                        + ((2 * ((v124 ^ 0x64F1EEC) + v126 + 1)) & 0x4F7386FE);
  return (*(uint64_t (**)(void))(v127
                              + 8
                              * ((((v119 + 29937194) < 0x10) | (8
                                                                            * ((v119 + 29937194) < 0x10))) ^ v125)))();
}

uint64_t sub_1001F4330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 + v8 + v6 + ((v8 - 1126218431) & 0x4320B56F) + 278) * (v7 == a5)) ^ v8)))();
}

uint64_t sub_1001F4374()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v2 ^ 0xDEC54B0B) >= (((v0 - 261) | 0x105) ^ 0xB84u))
                                * (38 * ((v0 - 891) ^ 0x623) - 1530)) ^ (v0 - 891))))();
}

uint64_t sub_1001F43D4(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a1 - 7 + (v9 + v8 + a2 - a3)) = *(void *)(v6 - 7 + (v9 + v8 + a2 - a3));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a3 - (v7 & 0xFFFFFFF8) == -8) * ((a6 - 2166) ^ 0xED)) ^ a6)))();
}

uint64_t sub_1001F442C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42 = BYTE4(a34) ^ 0x22;
  if (v42 == 1)
  {
    BYTE4(a29) = ((8 * a31) ^ 0xD8) - ((2 * ((8 * a31) ^ 0xD8)) & 0xC0) + 96;
    BYTE5(a29) = ((a31 >> 5) ^ 0xDC)
               - 2 * (((a31 >> 5) ^ 0xDC) & 0xE1 ^ ((a31 & 0x20) != 0))
               + 96;
    BYTE6(a29) = ((a31 >> 13) ^ 0xEC)
               - 2 * (((a31 >> 13) ^ 0xEC) & 0x62 ^ (a31 >> 13) & 2)
               + 96;
    HIBYTE(a29) = ((a31 >> 21) ^ 0x5A)
                - 2 * (((a31 >> 21) ^ 0x5A) & 0xE1 ^ ((a31 & 0x200000) != 0))
                + 96;
    HIDWORD(v45) = HIDWORD(a30) ^ 3;
    LODWORD(v45) = a31;
    LOBYTE(a30) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0xC0) + 96;
    BYTE1(a30) = ((HIDWORD(a30) >> 5) ^ 0xF4) + (~(2 * ((HIDWORD(a30) >> 5) ^ 0xF4)) | 0x3F) + 97;
    BYTE2(a30) = ((HIDWORD(a30) >> 13) ^ 0x6D) - ((2 * ((HIDWORD(a30) >> 13) ^ 0x6D)) & 0xC0) + 96;
    unsigned int v44 = (HIDWORD(a30) >> 21) ^ 0xFFFFFFD3;
    goto LABEL_5;
  }
  if (v42 == 2)
  {
    BYTE4(a29) = ((HIDWORD(a30) >> 21) ^ 0xD3) - ((2 * ((HIDWORD(a30) >> 21) ^ 0xD3)) & 0xC0) + 96;
    BYTE5(a29) = ((HIDWORD(a30) >> 13) ^ 0x6D) + (~(2 * ((HIDWORD(a30) >> 13) ^ 0x6D)) | 0x3F) + 97;
    BYTE6(a29) = ((HIDWORD(a30) >> 5) ^ 0xF4) - ((2 * ((HIDWORD(a30) >> 5) ^ 0xF4)) & 0xC0) + 96;
    HIDWORD(v43) = HIDWORD(a30) ^ 3;
    LODWORD(v43) = a31;
    HIBYTE(a29) = (v43 >> 29) - ((2 * (v43 >> 29)) & 0xC0) + 96;
    LOBYTE(a30) = ((a31 >> 21) ^ 0x5A) - ((2 * ((a31 >> 21) ^ 0x5A)) & 0xC0) + 96;
    BYTE1(a30) = ((a31 >> 13) ^ 0xEC)
               - 2 * (((a31 >> 13) ^ 0xEC) & 0x62 ^ (a31 >> 13) & 2)
               + 96;
    BYTE2(a30) = ((a31 >> 5) ^ 0xDC) - ((2 * ((a31 >> 5) ^ 0xDC)) & 0xC0) + 96;
    LOBYTE(v44) = (8 * a31) ^ 0xD8;
LABEL_5:
    BYTE3(a30) = v44 + 96 - ((2 * v44) & 0xC0);
  }
  return sub_100285018(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1001F4658(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((((((a6 + 1074312453) | 0x6901840) ^ (v6 + 3439)) + a6 + 624) * (v7 == a3)) ^ a6)))();
}

uint64_t sub_1001F469C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v0 == 0) * ((v1 - 1627) ^ 0x7BA)) | v1)))();
}

uint64_t sub_1001F470C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  unint64_t v44 = STACK[0x990] + (a1 ^ v43) - 0x6F981077AF1E8BB0;
  BOOL v45 = v44 < 0xC95E2DC2;
  BOOL v46 = v44 > STACK[0x988] + 3378392514u;
  if (STACK[0x988] > 0xFFFFFFFF36A1D23DLL != v45) {
    BOOL v46 = v45;
  }
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((150 * v46) ^ (a43 - 1395))))();
}

uint64_t sub_1001F47A4@<X0>(int a1@<W3>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(v4 + (431 * a1 + 1252329731) % 0x3BDu) = a1 - 2 * ((a3 - 119 + a1 + 11) & 0x3D ^ a1 & 1) - 26;
  return (*(uint64_t (**)(void))(a2 + 8 * ((1942 * (a1 + 1 == v3 + 16)) ^ a3)))();
}

void sub_1001F4828()
{
  uint64_t v0 = (uint64_t)*(&off_1003B8530
                + ((75 * (dword_1004018C8 ^ 0x7E ^ qword_100401AA0)) ^ byte_100329190[byte_1003381F0[(75 * (dword_1004018C8 ^ 0x7E ^ qword_100401AA0))] ^ 0xB9])
                - 10);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1003B8530
                + (byte_100329190[byte_1003381FC[(75
                                                                                                * (v1 ^ qword_100401AA0 ^ 0x7E))
                                                                              - 12] ^ 0x5D] ^ (75
                                                                                             * (v1 ^ qword_100401AA0 ^ 0x7E)))
                + 236);
  uint64_t v3 = v1 - (void)&v5 + *(void *)(v2 - 4);
  *(void *)(v0 - 4) = 544792907 * v3 + 0x5547F155C74775EALL;
  *(void *)(v2 - 4) = 544792907 * (v3 ^ 0xE12C07DFCC70D97ELL);
  v6[1] = 31090337 * (((v6 | 0x69A0C507) - (v6 & 0x69A0C507)) ^ 0xAE21A54E) + 1655392376;
  LOBYTE(v2) = 75 * (*(_DWORD *)(v0 - 4) ^ 0x7E ^ *(_DWORD *)(v2 - 4));
  uint64_t v4 = (char *)*(&off_1003B8530
               + ((75 * ((qword_100401AA0 + dword_1004018C8) ^ 0x7E)) ^ byte_100329290[byte_1003382F0[(75 * ((qword_100401AA0 + dword_1004018C8) ^ 0x7E))] ^ 0xB4])
               + 12)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_100329294[(byte_1003382F4[v2 - 4] ^ 0xD4)
                                                                       - 4] ^ v2)
                                      + 36720])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1001F4A60@<X0>(int a1@<W8>)
{
  unsigned int v6 = (v3 + 489886716) & 0xE2CCEBF5;
  *(_DWORD *)(*(void *)(v5 - 0x49230D716B37ADFCLL) + 4 * (int)((v6 ^ 0x986DC9A8) + a1 + v1)) = *(_DWORD *)(*(void *)(v5 - 0x49230D716B37ADFCLL) + 4 * (v2 + v1 + 2287));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (int)((14
                                                            * (v2 + v1 + 2286 < ((v6 + 57527005) & 0xFC922DFD ^ 0x7FFFFE43))) | v6)))(4237438461, 2147483203);
}

uint64_t sub_1001F4AFC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 1434604632) & 0x5582456A ^ (v2 - 3846)) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1001F4B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + (v27 + 16) + (unint64_t)v25 - 987) = 0x6060606060606060;
  return (*(uint64_t (**)(void))(v28 + 8 * ((5774 * ((v26 & 0x38) == 8)) ^ (v27 + 707))))();
}

void sub_1001F4B8C()
{
  *(_DWORD *)(v0 + 8) = 847161030;
}

uint64_t sub_1001F4B98@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  *a4 = a1;
  *a5 = a2;
  return (*(uint64_t (**)(void))(v12 + 8 * (((a10 == ((v10 - 1104) ^ (v11 + 1090))) * ((v10 + 2281) ^ 0x1136)) | v10)))();
}

uint64_t sub_1001F4BE0(int a1, int a2)
{
  BOOL v4 = a2 + a1 + (v2 ^ 0x1301u) - 1962917880 - 611 < (((v2 - 4055) | 0x820) ^ 0x9A6u);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (8 * v4)) ^ v2)))();
}

uint64_t sub_1001F4C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a16 = a12;
  a17 = &a11;
  a15 = (v17 + 1138) ^ (((&a14 & 0x6BE570BB | ~(&a14 | 0x6BE570BB)) ^ 0x2513098A) * v18);
  (*(void (**)(int *))(v20 + 8 * (v17 + 3496)))(&a14);
  LODWORD(a17) = v17
               - 476588053
               * ((((&a14 | 0x5C32F2DE) ^ 0xFFFFFFFE) - (~&a14 | 0xA3CD0D21)) ^ 0x1E300962)
               + 1481;
  a16 = a12;
  uint64_t v21 = (*(uint64_t (**)(int *))(v20 + 8 * (v17 + 3529)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((30 * (a14 == v19 + 9 * (v17 ^ 0x40B) - 1197)) ^ v17)))(v21);
}

uint64_t sub_1001F4D5C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1830 * (v0 == ((v1 - 562436397) & 0x218617F6 ^ (v2 - 590)))) ^ v1)))();
}

uint64_t sub_1001F4DB0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3900 * (v0 - 1532039989 < (((v2 + 288) | 0x1049) ^ 0x11D1u))) ^ (v2 + 734))))();
}

uint64_t sub_1001F4E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char *a16, unint64_t *a17, char *a18, char *a19, uint64_t a20,unint64_t *a21)
{
  a17 = &STACK[0x5C6E4E9DBA245391];
  LODWORD(a18) = (a9 + 3462) ^ (1401278017
                              * (((&a17 | 0x48F35E08)
                                - &a17
                                + (&a17 & 0xB70CA1F0)) ^ 0x4CD028EF));
  a21 = &STACK[0x72B1F83D1B5D1C85];
  a19 = a16;
  (*(void (**)(unint64_t **))(v22 + 8 * ((a9 + 871) ^ 0x1690u)))(&a17);
  a18 = a16;
  a19 = &a15;
  HIDWORD(a17) = (a9 + 1987) ^ ((&a17 ^ 0xB10986CE) * v21);
  (*(void (**)(unint64_t **))(v22 + 8 * (a9 + 4345)))(&a17);
  LODWORD(a19) = a9 + 871 - 476588053 * (&a17 ^ 0xBDFD0443) + 1459;
  a18 = a16;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v22 + 8 * ((a9 + 871) ^ 0x16F3u)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8 * (((a17 == 847203058) * ((a9 + 82) ^ 0x1ED)) ^ (a9 + 871))))(v23);
}

uint64_t sub_1001F4F60@<X0>(int a1@<W8>)
{
  unsigned int v3 = a1 + 133;
  int v4 = (a1 - 1107446157) & 0x301573BF;
  *(_DWORD *)(v2 - 128) = a1
                        + 133
                        + 673918253
                        * ((((v2 - 136) ^ 0x82D59B41 | 0x6D2A04A6) + ((v2 - 136) ^ 0x600804A0 | 0x92D5FB59)) ^ 0x78958448)
                        - 851;
  *(void *)(v2 - 136) = &STACK[0x3E8923C4CCFEA0B2];
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((a1 + 133) ^ 0x1B81u)))(v2 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((1595 * (*(_DWORD *)(v2 - 124) == (v4 ^ 0x26A784F))) ^ v3)))(v5);
}

uint64_t sub_1001F5040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  a21 = v22 - (((&a19 | 0x9684C745) - (&a19 & 0x9684C745)) ^ 0x5105A70C) * v21 + 344;
  a19 = &STACK[0x75464D914B7248C7];
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v22 + 1367)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (int)(((a20 != 847203058)
                                                   * (((v22 + 1985404790) & 0xCFBFBFFF) + v23 + ((v22 - 824) | 0x20))) ^ v22)))(v25);
}

uint64_t sub_1001F50F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(void))(v51 + 8 * ((67 * ((v50 ^ (a50 + 53)) & 1)) ^ (a50 + 1473))))();
}

uint64_t sub_1001F5138()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((((v1 - 1853) | 0x243) + 1749) ^ 0x96C) * ((v0 ^ 0x24u) < 8)) ^ v1)))();
}

uint64_t sub_1001F5178(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v6 & 0x18) == ((a4 - 646) ^ (a6 + 179) ^ (a6 + 1040)))
                                * (13 * ((a4 - 646) ^ 0x5B6) - 217)) ^ (a4 - 646))))();
}

uint64_t sub_1001F51C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1484
                                * ((((v5 ^ a4) - 1997285367) & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v6) == v6)) ^ v5)))();
}

uint64_t sub_1001F520C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8 * ((4225 * (a4 + 1 == v10 + 48)) ^ a7)))(v7, v8);
}

uint64_t sub_1001F52E0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,unint64_t a44)
{
  unint64_t v45 = (a1 ^ v44) + STACK[0x280];
  STACK[0x918] = v45 + 10;
  v45 -= 0x7936EE11427F3323;
  BOOL v46 = v45 < 0x78EB4418;
  BOOL v47 = v45 > a32;
  if (a44 > 0xFFFFFFFF8714BBE7 != v46) {
    BOOL v48 = v46;
  }
  else {
    BOOL v48 = v47;
  }
  return (*(uint64_t (**)(void))(STACK[0x258] + 8 * ((a43 - 418) ^ (27 * v48))))();
}

void sub_1001F537C(uint64_t a1)
{
  int v1 = 1401278017 * (((a1 | 0x7E048411) - a1 + (a1 & 0x81FB7BEE)) ^ 0x7A27F2F6);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1001F543C()
{
  (*(void (**)(unint64_t))(v2 + 8 * (v1 ^ 0x1AE0)))(STACK[0x3B0]);
  void *v0 = 0x46197683F7D18950;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))STACK[0x3E8])(2498, 0x46197683F7D18950, 2547, 1024463738, 3270503873, 0xB9E6897C082E76B0);
}

uint64_t sub_1001F54CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  a16 = a9;
  a17 = &a11;
  a15 = (v20 + 528) ^ ((((&a14 | 0x9E3E4AA8) - (&a14 & 0x9E3E4AA8)) ^ 0x2F37CC66) * v17);
  (*(void (**)(int *))(v18 + 8 * ((v20 + 1945) ^ 0x1CBF)))(&a14);
  LODWORD(a17) = v20 + 1945 - 476588053 * (&a14 ^ 0xBDFD0443) - 1074;
  a16 = a9;
  uint64_t v21 = (*(uint64_t (**)(int *))(v18 + 8 * ((v20 + 1945) ^ 0x1CDE)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8 * (((a14 == v19) * (((v20 + 280) | 0x70) ^ 0x940)) ^ (v20 + 1945))))(v21);
}

uint64_t sub_1001F55A0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((v1 == 0) * ((v0 + 832) ^ 0x181D ^ (v0 + 1568557898) & 0xA281AF7B)) ^ v0)))();
}

uint64_t sub_1001F55E4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(STACK[0x770] - 0x46197683F7D189++*(void *)(*(void *)(result + 32) + 48) = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(STACK[0x608] + 24) == 0) * (((6 * (v1 ^ 0x3F6)) ^ 0xED) - 2714)) ^ (6 * (v1 ^ 0x3F6)))))();
}

void sub_1001F5640(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_1003B8530
                + ((75 * ((qword_100401AA0 + dword_100401AE8) ^ 0x7E)) ^ byte_100332CB0[byte_10032D7B0[(75 * ((qword_100401AA0 + dword_100401AE8) ^ 0x7E))] ^ 0x98])
                + 100);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_1003B8530
                + (byte_100329190[byte_1003381F0[(75
                                                                                                * ((qword_100401AA0 + v3) ^ 0x7E))] ^ 0xB9] ^ (75 * ((qword_100401AA0 + v3) ^ 0x7E)))
                + 161);
  uint64_t v5 = (*(void *)(v4 - 4) ^ v3) - (void)&v9;
  uint64_t v6 = 544792907 * v5 - 0x1ED3F820338F2682;
  unint64_t v7 = 544792907 * (v5 ^ 0xE12C07DFCC70D97ELL);
  *(void *)(v2 - 4) = v6;
  *(void *)(v4 - 4) = v7;
  LODWORD(v4) = ((75 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x7E)) ^ byte_100329190[byte_1003381F0[(75 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x7E))] ^ 0x79]);
  uint64_t v8 = (char *)*(&off_1003B8530
               + ((75 * ((qword_100401AA0 + dword_100401AE8) ^ 0x7E)) ^ byte_100332CB0[byte_10032D7B0[(75 * ((qword_100401AA0 + dword_100401AE8) ^ 0x7E))] ^ 0x98])
               - 38)
     - 8;
  (*(void (**)(void, uint64_t (*)()))&v8[8 * (v4 + 4748)])(*(&off_1003B8530 + (v4 + 106)), sub_100283F24);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1001F57E4@<X0>(uint64_t a1@<X8>, uint64_t a2, char a3)
{
  int v8 = (v5 - 4245) | 0xE00;
  (*(void (**)(void, void, void))(v6 + 8 * (v5 + 157)))(**(unsigned int **)(a1 + 8 * (v5 - 4473)), *v4, *(_DWORD *)(v7 - 0x69166E42B329956BLL) + (v8 ^ (v3 + 1777)));
  unint64_t v9 = ((unint64_t)&a3 ^ 0x3FDEF5ADFF3DDBF0) - 0x475A0812080F0 + ((2 * (void)&a3) & 0x7FBDEB5BFE7BB7E0);
  *(unsigned char *)(v7 - 0x69166E42B3299554) = ((((v8 - 17) | 0x5C) + 92) ^ v9) * (v9 + 17);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * v8))(v7 - 0x69166E42B3299573);
}

uint64_t sub_1001F58EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned char *a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, char a19)
{
  *a13 = a19;
  return (*(uint64_t (**)(void))(v20 + 8 * ((22 * (a16 != ((v19 - 2049) | 0x5C4) - 557497017)) ^ v19)))();
}

uint64_t sub_1001F5944()
{
  return ((uint64_t (*)(void))STACK[0x4E8])();
}

uint64_t sub_1001F5950()
{
  int v1 = *(unsigned __int8 *)(v0 - 156) ^ 0x22;
  if (v1 == 1)
  {
    unsigned int v6 = *(_DWORD *)(v0 - 188);
    unsigned int v5 = *(_DWORD *)(v0 - 184);
    *(unsigned char *)(v0 - 196) = ((8 * v5) ^ 0xD8) - ((2 * ((8 * v5) ^ 0xD8)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 195) = ((v5 >> 5) ^ 0xDC) - ((2 * ((v5 >> 5) ^ 0xDC)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 194) = ((v5 >> 13) ^ 0xEC) - 2 * (((v5 >> 13) ^ 0xEC) & 0xE1 ^ ((v5 & 0x2000) != 0)) + 96;
    *(unsigned char *)(v0 - 193) = ((v5 >> 21) ^ 0x5A) - ((2 * ((v5 >> 21) ^ 0x5A)) & 0xC0) + 96;
    HIDWORD(v7) = v6 ^ 3;
    LODWORD(v7) = v5;
    *(unsigned char *)(v0 - 192) = (v7 >> 29) - ((2 * (v7 >> 29)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 191) = ((v6 >> 5) ^ 0xF4) - ((2 * ((v6 >> 5) ^ 0xF4)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 190) = ((v6 >> 13) ^ 0x6D) - ((2 * ((v6 >> 13) ^ 0x6D)) & 0xC0) + 96;
    unsigned int v4 = (v6 >> 21) ^ 0xFFFFFFD3;
    goto LABEL_5;
  }
  if (v1 == 2)
  {
    unsigned int v4 = *(_DWORD *)(v0 - 188);
    unsigned int v2 = *(_DWORD *)(v0 - 184);
    *(unsigned char *)(v0 - 196) = ((v4 >> 21) ^ 0xD3) + ~(2 * (((v4 >> 21) ^ 0xD3) & 0x68 ^ (v4 >> 21) & 8)) + 97;
    *(unsigned char *)(v0 - 195) = ((v4 >> 13) ^ 0x6D) - 2 * (((v4 >> 13) ^ 0x6D) & 0x62 ^ (v4 >> 13) & 2) + 96;
    *(unsigned char *)(v0 - 194) = ((v4 >> 5) ^ 0xF4) - 2 * (((v4 >> 5) ^ 0xF4) & 0x62 ^ (v4 >> 5) & 2) + 96;
    HIDWORD(v3) = v4 ^ 3;
    LODWORD(v3) = v2;
    *(unsigned char *)(v0 - 193) = (v3 >> 29) - ((2 * (v3 >> 29)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 192) = ((v2 >> 21) ^ 0x5A) + (~(2 * ((v2 >> 21) ^ 0x5A)) | 0x3F) + 97;
    *(unsigned char *)(v0 - 191) = ((v2 >> 13) ^ 0xEC) - ((2 * ((v2 >> 13) ^ 0xEC)) & 0xC0) + 96;
    *(unsigned char *)(v0 - 190) = ((v2 >> 5) ^ 0xDC) - ((2 * ((v2 >> 5) ^ 0xDC)) & 0xC0) + 96;
    LOBYTE(v4) = (8 * v2) ^ 0xD8;
LABEL_5:
    *(unsigned char *)(v0 - 189) = v4 - ((2 * v4) & 0xC0) + 96;
  }
  v8.n128_u64[0] = 0x6060606060606060;
  v8.n128_u64[1] = 0x6060606060606060;
  v9.n128_u64[0] = 0xC0C0C0C0C0C0C0C0;
  v9.n128_u64[1] = 0xC0C0C0C0C0C0C0C0;
  return sub_10021FD6C(v8, (__n128)vdupq_n_s32(0x5EC54B1Fu), (__n128)vdupq_n_s32(0xDEC54B0B), v9, (__n128)vdupq_n_s32(0x5EC54B1Bu));
}

void sub_1001F5BD4()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = 1697562443 * ((((2 * v0) | 0x8DDECFB0) - v0 - 1190094808) ^ 0x917F5F5C);
  int v2 = *(_DWORD *)(v0 + 40) ^ v1;
  uint64_t v3 = *(void *)v0;
  int v4 = *(_DWORD *)(v0 + 20) + v1;
  unsigned int v5 = (char *)*(&off_1003B8530 + (v2 ^ 0x5CE)) - 8;
  (*(void (**)(unsigned char *, void, uint64_t))&v5[8 * v2 + 25432])(v9, 0, 296);
  if (v3)
  {
    int v6 = v4 - ((2 * v4 + 489106174) & 0x1F0E4CA2) - 31802416;
    BOOL v7 = ((2 * v6) & 0xFE36F76E ^ 0x1E064422) + (v6 ^ 0x709C5DE6) == 2132507607;
  }
  else
  {
    BOOL v7 = 1;
  }
  int v8 = v7;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1001F5D64@<X0>(int a1@<W8>)
{
  int v3 = ((_BYTE)a1 + 13) & 0xF;
  LODWORD(STACK[0x534]) = 150214115 - v3;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((16 - v3)
                                 + (unint64_t)(a1 - 1217389244 + ((v1 + 1023167684) & 0xC303BAFF)) < 0xFFFFFFF6)
                                * (v1 + 4211)) ^ v1)))();
}

uint64_t sub_1001F5DEC@<X0>(char a1@<W4>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  int v34 = *((_DWORD *)&a18 + ((v32 + a3) >> (a1 + ((v31 + 91) & 0xDE) - 88)) + 18);
  *(unsigned char *)(a2 + (v32 + a3 + 2)) = (BYTE1(v34) ^ 0xB7) - ((2 * (BYTE1(v34) ^ 0xB7)) & 0xC0) + 96;
  *(unsigned char *)(a2 + (v32 + a3)) = (HIBYTE(v34) ^ 0x4A)
                                            - 2 * ((HIBYTE(v34) ^ 0x4A) & 0xE1 ^ HIBYTE(v34) & 1)
                                            + 96;
  *(unsigned char *)(a2 + (v32 + a3 + 1)) = (BYTE2(v34) ^ 0xA3)
                                                - 2 * ((BYTE2(v34) ^ 0xA3) & 0x68 ^ BYTE2(v34) & 8)
                                                + 96;
  *(unsigned char *)(a2 + (v32 + a3 + 3)) = v34 ^ 0x58;
  BOOL v35 = v32 - 1895494671 < (a30 - 631933497);
  if (v32 - 1895494671 < v30 != a30 - 631933497 < v30) {
    BOOL v35 = a30 - 631933497 < v30;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((240 * v35) ^ v31)))();
}

uint64_t sub_1001F5EFC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 + 3184) ^ 0x953) - 598) * (v1 != 0)) ^ a1)))();
}

void sub_1001F5F28(_DWORD *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + 8)
     + v2
     - ((2 * (*(void *)(v1 + 8) + v2) + 0x7047BFE2CB2E66EELL) & 0x895A682A9C211ADCLL)
     - 0x32EEBF94C583F1BLL;
  *int v4 = (HIBYTE(v3) ^ 0x44) - ((2 * (HIBYTE(v3) ^ 0x44)) & 0xC0) + 96;
  v4[1] = (BYTE6(v3) ^ 0xAD) - ((2 * (BYTE6(v3) ^ 0xAD)) & 0xC0) + 96;
  v4[2] = (BYTE5(v3) ^ 0x34) + (~(2 * (BYTE5(v3) ^ 0x34)) | 0x3F) + 97;
  v4[3] = (BYTE4(v3) ^ 0x15) + (~(2 * BYTE4(v3)) | 0x3F) + 97;
  void v4[4] = (BYTE3(v3) ^ 0x4E) + (~(2 * (BYTE3(v3) ^ 0x4E)) | 0x3F) + 97;
  void v4[5] = (BYTE2(v3) ^ 0x10) - ((2 * BYTE2(v3)) & 0xC0) + 96;
  void v4[6] = (BYTE1(v3) ^ 0x8D) - ((2 * BYTE1(v3)) & 0xC0) + 96;
  v4[7] = v3 ^ 0xE;
  *(_DWORD *)uint64_t v1 = *a1;
}

uint64_t sub_1001F608C@<X0>(__int16 a1@<W8>)
{
  LOWORD(STACK[0x96A]) = a1;
  return sub_1002ACBE0();
}

uint64_t sub_1001F60A0(int8x8_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, int a7, uint64_t a8)
{
  *(int8x8_t *)(a8 + (v8 + a4)) = veor_s8(*(int8x8_t *)(v9 + (v8 + a4)), a1);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 + a4 != 8) * a3) ^ a6)))();
}

uint64_t sub_1001F60D4@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  void *v3 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v2 + a2 - 939) ^ (6099 * (a1 != 0)))))();
}

uint64_t sub_1001F6100()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((32 * ((v2 + v1 + 100668426) >= 8)) | (((v2 + v1 + 100668426) >= 8) << 6)) ^ 0xB39u)))();
}

uint64_t sub_1001F615C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(v42 + 8 * (int)((((v41 + 460857117) & 0xE487DDBD ^ 0xB4D) * (v39 == v40)) ^ v41)))(a1, a2, 116, 3767154520, a5, a6, a7, &a39);
}

uint64_t sub_1001F61BC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((7 * (v0 != 0)) | 0x4F8u)))();
}

uint64_t sub_1001F6200(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  *(_DWORD *)&v44[16] = a40;
  *(void *)&v44[8] = a39;
  *(void *)unsigned int v44 = a38;
  *(_OWORD *)(a5 + ((((a1 - 156) | a6) ^ 0xFFFFFC2DLL) & (v40 + a2))) = *(_OWORD *)&v44[4];
  return (*(uint64_t (**)(void))(v42 + 8 * ((38 * (((v41 + 1) & 0x1FFFFFFF0) != 16)) | (a1 - 38))))();
}

uint64_t sub_1001F626C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,uint64_t a61)
{
  int v64 = v62 + 549;
  if (LOBYTE(STACK[0x523])) {
    int v65 = 4;
  }
  else {
    int v65 = 6;
  }
  int v66 = v65 + 940263052;
  if ((a43 & 0x40) == v62 - 2437) {
    int v67 = v66;
  }
  else {
    int v67 = STACK[0x3C0];
  }
  LODWORD(STACK[0x544]) = v67;
  int v68 = 142545853 * ((((v63 - 192) | 0x4464C22E) - ((v63 - 192) & 0x4464C22E)) ^ 0x6E9B6D41);
  *(_DWORD *)(v63 - 172) = ((v62 ^ 0x31C440A) * a60 + 984149816) ^ v68;
  *(void *)(v63 - 192) = &STACK[0x1870];
  *(void *)(v63 - 168) = &STACK[0x79411A163AB7F930];
  *(void *)(v63 - 160) = a61;
  *(void *)(v63 - 152) = &STACK[0x6038FCF4A92703D5];
  *(_DWORD *)(v63 - 184) = v67 - v68 - (((v67 << (((v62 + 127) | 0x81) + 124)) + 266957548) & 0x7CEA8506) + 107609081;
  *(_DWORD *)(v63 - 176) = v64 - v68 - 1456;
  *(void *)(v63 - 144) = &STACK[0x6209C59847B5E51A];
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(v61 + 8 * (v62 + 2289)))(v63 - 192);
  int v70 = *(_DWORD *)(v63 - 180);
  LODWORD(STACK[0x4A4]) = v70;
  return (*(uint64_t (**)(uint64_t))(v61 + 8 * ((6952 * (v70 == 847203058)) ^ v64)))(v69);
}

uint64_t sub_1001F640C@<X0>(int a1@<W8>)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 3139));
  return v3(v1);
}

uint64_t sub_1001F643C()
{
  (*(void (**)(void))(v2 + 8 * (v1 ^ 0x18B4)))(v5);
  uint64_t v6 = *v3;
  unsigned int v7 = v1 - 1437274309 * ((((2 * &v6) | 0x71606C84) - &v6 - 951072322) ^ 0x1ABE4B77) - 1093;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v2 + 8 * (v1 + 2141)))(&v6);
  _DWORD *v0 = 847160648;
  return result;
}

uint64_t sub_1001F6454(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((*(unsigned char *)(v4 + v2 * (uint64_t)a1 + 40) & 8) == 0) * ((v1 ^ 0x1894) - 1591)) ^ (v1 - 1477))))();
}

uint64_t sub_1001F648C()
{
  return sub_10027F168();
}

uint64_t sub_1001F64A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a15 = &STACK[0x75464D914B724897];
  a17 = 3687
      - ((-2082486797 - (&a15 | 0x83DFC5F3) + (&a15 | 0x7C203A0C)) ^ 0xBBA15A45) * v19;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v18 + 37680))(&a15);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((6324 * (a16 == ((v17 + 821) ^ 0x4D5))) ^ 0x9BFu)))(v20);
}

uint64_t sub_1001F6548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v10
                                                             + 8
                                                             * ((1591
                                                               * (((v7 + ((a7 - 1861) | 0x103) + 847205796 + 17) & v8) == 0)) ^ (a7 - 1173))))(a1, a2, (v9 - a2));
}

uint64_t sub_1001F6598@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  unint64_t v5 = a1 - 415131221;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v5 - v4 + 415131222 < (unint64_t)(v1 ^ 0x2B7u) - 2053)
                                * (((v1 + 259414) | 0x242A68C0) ^ (v3 - 58))) ^ v1)))();
}

uint64_t sub_1001F660C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((((v14 + v12) & v13) ^ ((*(_DWORD *)(*v11 + 4 * v15) ^ (((v14 + v12) & v13) + 331 + v9)) > (*(_DWORD *)(*v10 + 4 * v15) ^ (v9 + 2814)))) & 1)
                                * a8) ^ (v14 + v12) & v13)))();
}

uint64_t sub_1001F6664@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v45 = *(_DWORD *)(v43 + 40 * a1 + 28);
  switch(v45)
  {
    case 1:
      unint64_t v47 = STACK[0x590];
      STACK[0x830] = *(void *)(v44 + 8 * (a43 - 2332));
      return (*(uint64_t (**)(void))(v44
                                  + 8
                                  * (((v47 != 0x46197683F7D18950)
                                    * ((7 * (a43 ^ 0x907)) ^ 0x50F ^ (7 * (a43 ^ 0x907) - 1253))) ^ (7 * (a43 ^ 0x907)))))();
    case 3:
      return (*(uint64_t (**)(void))(v44
                                  + 8
                                  * (((((*(void *)(v43 + 40 * a1 + 16) == 0) ^ a43 ^ 0x1B) & 1)
                                    * ((a43 ^ 0x1937) - 4127)) ^ (a43 + 1668))))();
    case 2:
      return (*(uint64_t (**)(void))(v44
                                  + 8
                                  * (((STACK[0x590] == 0x46197683F7D18950) * ((a43 ^ 0x963) - 129)) | (a43 + 1741))))();
    default:
      return ((uint64_t (*)(void))STACK[0x890])();
  }
}

uint64_t sub_1001F67AC()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((*(void *)(v0 + 8) != 0x46197683F7D18950) * ((v1 ^ 0x455) - 3452)) ^ v1)))();
}

uint64_t sub_1001F67E8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1011 * ((v0 ^ 0x24u) < ((v1 + 1074) ^ 0xE25u))) ^ v1)))();
}

uint64_t sub_1001F6820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,unsigned int a22)
{
  a21 = a14;
  a22 = v22 - 476588053 * (((&a20 | 0xB4434973) - (&a20 & 0xB4434973)) ^ 0x9BE4D30) + 1380;
  uint64_t v24 = (*(uint64_t (**)(int *))(v23 + 8 * (v22 + 3428)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((2399 * (a20 == v22 + 847201791)) ^ v22)))(v24);
}

uint64_t sub_1001F68B4()
{
  return sub_100283444(v0 + 1611);
}

uint64_t sub_1001F68CC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2240 * (v0 == (((v1 + 792) | 0x1C8) ^ (v2 - 2189) ^ (v1 - 1994464651) & 0x76E119FD))) ^ v1)))();
}

uint64_t sub_1001F6928@<X0>(void *a1@<X8>)
{
  *(void *)(STACK[0x640] - 0x46197683F7D18950) = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*a1 == 0) * ((((v1 - 234619857) & 0xDFC0EFF) + 456380399) & 0xE4CC31EF ^ 0xEE1)) ^ (v1 - 234619857) & 0xDFC0EFF)))();
}

uint64_t sub_1001F6998(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((2605
                                                       * (((v3 - 1200) ^ (v4 - 282)) + v6 < (v3 ^ 0xBBD ^ v2))) ^ v3)))(a1, a2);
}

uint64_t sub_1001F69D8(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((988
                                * (((v3 + ((a1 + 52) ^ 0x609) - 1026) & (2 * (*(unsigned __int8 *)(v4 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v4 + 6) - 1) ^ a3) != a3)) ^ a1)))();
}

uint64_t sub_1001F6A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v72 = STACK[0x220];
  *(void *)(v72 + 1560) = *(void *)STACK[0x420];
  *(_DWORD *)(v72 + 1552) = *(_DWORD *)STACK[0x4E0];
  unint64_t v73 = STACK[0x218];
  *(void *)(*(void *)(STACK[0x218] + 96) + 488) = *(void *)(STACK[0x218] + 8);
  *(_DWORD *)(*(void *)(v73 + 96) + 480) = *(_DWORD *)((char *)&STACK[0x5C0] + a71);
  *(unsigned char *)(a68 + a71) = ((STACK[0x210] + ((a65 - 101) ^ 0xDB)) ^ 0xBA) * a67;
  return (*(uint64_t (**)(void))(v71 + 8 * a65))();
}

uint64_t sub_1001F6AC4()
{
  STACK[0x560] = STACK[0x570];
  LODWORD(STACK[0x744]) = STACK[0x624];
  LODWORD(STACK[0x500]) = 847203058;
  STACK[0x3E8] = *(void *)(v1 + 8 * (((v0 + 925) | 0x1C2) - 2360));
  return sub_10021F208(2498, 0x46197683F7D18950, 2547, 1024463738, 3270503873, 0xB9E6897C082E76B0);
}

uint64_t sub_1001F6B08@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a2 + 895) * (a1 != 0)) ^ a2)))();
}

void sub_1001F6B34()
{
  *(_DWORD *)(v1 + 16) = v0;
}

uint64_t sub_1001F6B78@<X0>(int a1@<W1>, unsigned int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W6>, int a6@<W8>, int8x16_t a7@<Q0>, int8x16_t a8@<Q1>, int8x16_t a9@<Q4>, int8x16_t a10@<Q5>, int32x4_t a11@<Q6>, int8x16_t a12@<Q7>)
{
  uint64_t v16 = v12 + 4;
  uint64_t v17 = (a6 + a1) & a2;
  a8.i32[0] = v13->i32[1];
  a8.i32[1] = *(_DWORD *)(v15 + 4 * (v16 + (v17 ^ a3)));
  a8.i32[2] = v13->i32[3];
  int8x16_t v18 = vextq_s8(a7, a8, 0xCuLL);
  int8x16_t v19 = a8;
  v19.i32[3] = v13[1].i32[0];
  int32x4_t v20 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v19, a9), vandq_s8(v18, a12)), 1uLL), *(int8x16_t *)((char *)v13 - 908));
  v18.i32[0] = *(_DWORD *)(a4 + 4 * (v13->i32[1] & 1));
  v18.i32[1] = *(_DWORD *)(a4 + 4 * (*(_DWORD *)(v15 + 4 * (v16 + (v17 ^ a3))) & 1));
  v18.i32[2] = *(_DWORD *)(a4 + 4 * (v13->i32[3] & 1));
  v18.i32[3] = *(_DWORD *)(a4 + 4 * (v19.i8[12] & 1));
  *unsigned int v13 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v20, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), a10)), a11), v18);
  return (*(uint64_t (**)(void))(v14 + 8 * (((v16 == 392) * a5) ^ a6)))();
}

uint64_t sub_1001F6B84(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v10 = (a4 - 597) | 0x241;
  *(void *)(a1 - 7 + (v7 + v5 - v8)) = *(void *)(v4 - 7 + (v7 + v5 - v8));
  BOOL v11 = (v10 ^ 0x2C1) + v8 != ((v10 ^ 0xFFFFFD31) & v6);
  return (*(uint64_t (**)(void))(v9 + 8 * (((4 * v11) | (16 * v11)) ^ v10)))();
}

uint64_t sub_1001F6BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (int)((((a5 + a38 + 187) < 0xFFFFFFFB) * ((v38 + 1689) ^ 0x720 ^ a34 & 0xAB39A5DC)) ^ (v38 + 3064))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1001F6C48@<X0>(uint64_t a1@<X8>)
{
  LODWORD(STACK[0x2C0]) = v2;
  unint64_t v5 = (((v1 + 232) | 0x210u) ^ 0xBAAEC9714EEAB261) + 0x4551368EB115474ELL;
  BOOL v6 = *(unsigned __int8 *)(a1 + 236 + v5) == *(unsigned __int8 *)(v3 + 32 + v5);
  return (*(uint64_t (**)(void))(v4 + 8 * (((4 * v6) | (8 * v6)) ^ (v1 - 1350))))();
}

uint64_t sub_1001F6CB4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 + 1404) | 0x428) ^ (7550
                                                        * ((LODWORD(STACK[0x268]) + v1) < 0xA2495F6C)))))();
}

uint64_t sub_1001F6D64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v9 = v5 - 8 + (((a4 + 1352) | 7) ^ (v4 + 2597));
  *(void *)(a3 + v9) = *(void *)(v7 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1023 * (v6 == -8)) ^ a4)))();
}

uint64_t sub_1001F6D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = (v70 - 1303430276) & 0x4DB0CDFD;
  unint64_t v73 = STACK[0x2E8];
  unint64_t v74 = STACK[0x370];
  STACK[0x2D0] = (unint64_t)&STACK[0x5C0] + a70;
  STACK[0x2B8] = (unint64_t)&STACK[0x5C0] + STACK[0x270] - 110;
  LODWORD(STACK[0x2C8]) = (LODWORD(STACK[0x2E4]) + 1843876071) & 0x9218ADD7;
  if (v73) {
    BOOL v75 = v74 == 0;
  }
  else {
    BOOL v75 = 1;
  }
  int v76 = v75;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8 * ((v76 * (v72 ^ 0x873)) ^ (v72 + 362))))(a1, 0x4551368EB115474ELL);
}

uint64_t sub_1001F6E54@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v1 + (v6 + v2)) = *(unsigned char *)(v7 + (v6 + v2))
                                           - (((17 * v4) ^ 0x1E) & (2 * *(unsigned char *)(v7 + (v6 + v2))))
                                           + 96;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 - 1 != a1) * v5) ^ v3)))();
}

uint64_t sub_1001F6E5C(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 + 1353) ^ 0x120 ^ (1813 * (a1 ^ 0x9CD))) * (v1 == v2)) ^ a1)))();
}

void sub_1001F6E98(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v9 = 439 * (v7 ^ 0x4CE);
  a5 = v7 + 476588053 * ((((2 * &a3) | 0x993E7AA8) - &a3 - 1285504340) ^ 0xF1623917) - 108;
  a3 = v6;
  a4 = v5;
  (*(void (**)(uint64_t *))(a1 + 8 * (v7 ^ 0x16A1)))(&a3);
  _DWORD *v8 = (v9 ^ 0x275A70C2) - *v8;
  sub_10021BF34();
}

uint64_t sub_1001F6F20()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((v2 - 4084) | 0x68C) + ((v2 - 2187) ^ 0xFFFFFE16))
                                     * ((v1 + v3 + 47) < 0x2E)) ^ v2)))();
}

uint64_t sub_1001F6F68(int a1)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((((v1 & 0x18) == (((((a1 - 1715) | 0x180) ^ 0xB) + 940) ^ 0x597))
                                             * (3 * (((a1 - 1715) | 0x180) ^ 0xB) + 1097)) | (a1 - 1715) | 0x180)))((v2 - v3));
}

uint64_t sub_1001F6FB0@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v8 = v6 - 32 + ((v4 + 930) ^ (a2 + 805));
  long long v9 = *(_OWORD *)(v3 + v8 - 15);
  long long v10 = *(_OWORD *)(v3 + v8 - 31);
  uint64_t v11 = a3 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 32) * a1) ^ (v4 - 829))))();
}

uint64_t sub_1001F6FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  unint64_t v20 = a1 + v9 + ((v12 + v17 - 815 - 1846) ^ 0x3044B3F6u);
  *(_DWORD *)(v18 + 4 * v19) = v20 + v12 - ((v11 + 1987) & (2 * v20));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((254
                                * (((v20 >> ((v17 ^ a8) ^ v13)) ^ v14)
                                 + v16
                                 + (v15 & (2 * (v20 >> ((v17 ^ a8) ^ v13)))) == v10)) ^ v17)))();
}

uint64_t sub_1001F7030()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 3268) ^ 0x1245) - 1437) ^ ((v0 - 3268) | 0x8A1))
                                * (((2 * v1) & 0xFEF7DBD2 ^ 0xCA6349D0) + (v1 ^ 0x1A4E5913) + 334379575 == 325724192)) ^ v0)))();
}

uint64_t sub_1001F70A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((27
                                              * (v7 == (((v6 - 72) | 0x41) + (v6 ^ (a6 - 56) ^ 0x3A)))) ^ v6)))(4294925278);
}

uint64_t sub_1001F70E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((3320
                                * (*(_DWORD *)(a16 + 4 * (v18 + v19)) == v16
                                                                                       + ((v17 - 359123897) & 0x1567CDFA)
                                                                                       - 1450)) ^ (v17 + 207))))();
}

uint64_t sub_1001F713C()
{
  int v2 = STACK[0x500];
  STACK[0x7F0] -= 80;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((4 * (v2 == (v0 ^ 0x1A) + 847202919)) | ((v2 == (v0 ^ 0x1A) + 847202919) << 11) | v0)))();
}

uint64_t sub_1001F7188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * ((1009 * (v7 < ((a7 - 852710193) & 0x32D34F4B ^ 0xA2Bu))) ^ a7)))(a1, a2, 0);
}

uint64_t sub_1001F71D8()
{
  return sub_100280690();
}

uint64_t sub_1001F7204()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2073
                                * (((v0 + (v2 ^ 0x30) - 523) & (2 * (*(unsigned __int8 *)(v1 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v1 + 6) - 1) ^ 0xFBDFFFFF) == -69206017)) ^ v2)))();
}

uint64_t sub_1001F7254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,unsigned int a41,uint64_t a42,uint64_t a43)
{
  unsigned int v47 = (v46 + 1776139583) & 0x96223F76;
  BOOL v48 = (char *)*(&off_1003B8530 + (v46 ^ 0x579)) - 8;
  int v49 = v48[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC99) ^ 0x85];
  HIDWORD(v50) = v47 ^ 0x37 ^ v49;
  LODWORD(v50) = v49 << 24;
  int v51 = ((v50 >> 30) ^ 0x9F) << 16;
  uint64_t v52 = (uint64_t)*(&off_1003B8530 + (v46 ^ 0x5D9));
  int v53 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8FLL) ^ 0xBFLL));
  HIDWORD(v50) = v53 ^ 0xA;
  LODWORD(v50) = (v53 ^ 0x80) << 24;
  LOBYTE(v53) = v50 >> 28;
  int v54 = v48[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC95) ^ 0x6FLL];
  HIDWORD(v50) = v54 ^ 0x13;
  LODWORD(v50) = v54 << 24;
  int v55 = ((v50 >> 30) ^ 0x68) << 16;
  int v56 = (char *)*(&off_1003B8530 + v46 - 1275) - 4;
  int v57 = (char *)*(&off_1003B8530 + v46 - 1219) - 8;
  char v58 = v57[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8ELL) ^ 0xD8];
  int v59 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8BLL) ^ 0xBCLL));
  HIDWORD(v50) = v59 ^ 0xA;
  LODWORD(v50) = (v59 ^ 0x80) << 24;
  unsigned __int8 v60 = v50 >> 28;
  int v61 = v55 | ((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC94) ^ 0xDFLL] ^ 0x54) << 8);
  int v62 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v44 - 0x6209C59847B5CC93) ^ 0x98));
  HIDWORD(v50) = v62 ^ 0xA;
  LODWORD(v50) = (v62 ^ 0x80) << 24;
  LOBYTE(v62) = v50 >> 28;
  int v63 = v61 | ((v57[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC96) ^ 0xAFLL] ^ 0xD) << 24);
  int v64 = v51 | ((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC98) ^ 0x49] ^ 0xDE) << 8) | ((v57[*v43 ^ 0xFELL] ^ 0xD4) << 24);
  LODWORD(v52) = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v44 - 0x6209C59847B5CC97) ^ 0xD0));
  HIDWORD(v50) = v52 ^ 0xA;
  LODWORD(v50) = (v52 ^ 0x80) << 24;
  int v65 = v48[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8DLL) ^ 0xB6];
  LOBYTE(v52) = (v50 >> 28) ^ 0x3C;
  HIDWORD(v50) = v65 ^ 0x13;
  LODWORD(v50) = v65 << 24;
  unsigned int v66 = v64 & 0xFFFFFF00 | v52;
  uint64_t v67 = (v50 >> 30) ^ 0x21;
  unint64_t v68 = ((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8CLL) ^ 0xC7] ^ 0x95) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v58 ^ 0xDDu) << 24) | (v67 << 16);
  LODWORD(v++*(void *)(*(void *)(result + 32) + 48) = v48[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC91) ^ 0xC8];
  HIDWORD(v50) = v48 ^ 0x13;
  LODWORD(v50) = v48 << 24;
  LODWORD(v++*(void *)(*(void *)(result + 32) + 48) = v57[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC92) ^ 0x18];
  unsigned int v69 = (((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC8CLL) ^ 0xC7] ^ 0x95) << 8) & 0xFFFF00 | ((v58 ^ 0xDD) << 24) | (v67 << 16) | v60 ^ 0x68) ^ 0xEA3547E1;
  int v70 = (char *)*(&off_1003B8530 + v46 - 1272) - 4;
  int v71 = *(_DWORD *)&v70[4 * (v58 ^ 0xC2)];
  unsigned int v72 = v53 | ((v56[*(unsigned __int8 *)(v44 - 0x6209C59847B5CC90) ^ 0xB7] ^ 0x75) << 8) & 0xFF00FFFF | (((v50 >> 30) ^ 0x37) << 16) | ((v48 ^ 0x92) << 24);
  HIDWORD(v50) = v71 ^ 2;
  LODWORD(v50) = v71 ^ 0x29C6444;
  uint64_t v73 = (uint64_t)*(&off_1003B8530 + (v46 ^ 0x5A5));
  LODWORD(v68) = ((BYTE1(v68) ^ 0x9E) - ((2 * ((v68 >> 8) ^ 0x75F49E)) & 0x138) + 962391452) ^ *(_DWORD *)(v73 + 4 * (BYTE1(v68) ^ 0x6BLL));
  unint64_t v74 = (char *)*(&off_1003B8530 + (int)(v46 & 0xD7CE201B)) - 12;
  LODWORD(v68) = (v50 >> 2) ^ *(_DWORD *)&v74[4 * (v67 ^ 0xDD)] ^ (v68
                                                                               - ((2 * v68) & 0xF1119B56)
                                                                               - 125252181);
  int v75 = v68 - ((2 * v68) & 0x6B4A71D6);
  int v76 = (char *)*(&off_1003B8530 + v46 - 1296) - 4;
  int v77 = v66 ^ *(_DWORD *)&v76[4 * (v60 ^ 0xD9)] ^ 0x668447AB ^ (v75 - 1247463189);
  unsigned int v271 = v66;
  unsigned int v272 = v63 & 0xFFFFFF00 | v62;
  int v78 = v272 - 2 * ((v63 & 0x66844700 | v62 & 0xBB) ^ v62 & 0x10) + 1719945131;
  unsigned int v269 = v72;
  unsigned int v270 = v69;
  int v267 = v78 ^ 0x2789BBD4 ^ v77;
  unsigned int v79 = v72 ^ 0xA3032DE2 ^ v267;
  unsigned int v80 = v79 ^ v69;
  int v81 = *(_DWORD *)&v70[4 * (((v79 ^ v69) >> 24) ^ 0x1D)];
  HIDWORD(v50) = v81 ^ 2;
  LODWORD(v50) = v81 ^ 0x29C6444;
  int v82 = ((v50 >> 2) - ((2 * (v50 >> 2)) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4
                                                                                    * ((v79 ^ v69) ^ 0xCF)];
  unsigned int v83 = *(_DWORD *)(v73 + 4 * (BYTE1(v80) ^ 0xEAu)) ^ *(_DWORD *)&v74[4 * (BYTE2(v80) ^ 0x4D)] ^ ((BYTE1(v80) ^ 0x1F)
                                                                                                  - ((2 * ((v80 >> 8) ^ 0x77641F)) & 0x138)
                                                                                                  + 962391452) ^ (v82 - ((2 * v82) & 0xF1119B56) - 125252181);
  unsigned int v84 = v83 - ((2 * v83) & 0xCD088F56) + 1719945131;
  unsigned int v85 = v78 ^ 0xC7490E10 ^ v84;
  int v265 = v79 ^ v69 ^ 0x307BD24;
  unsigned int v266 = v79;
  int v86 = v85 ^ v79;
  int v87 = *(_DWORD *)&v70[4 * (((v86 ^ v265) >> 24) ^ 0x8F)];
  HIDWORD(v50) = v87 ^ 2;
  LODWORD(v50) = v87 ^ 0x29C6444;
  int v88 = *(_DWORD *)(v73 + 4 * (((unsigned __int16)(v86 ^ v265 ^ 0xB205) >> 8) ^ 0xF5u)) ^ *(_DWORD *)&v74[4 * (((v86 ^ v265) >> 16) ^ 4)] ^ (((unsigned __int16)(v86 ^ v265 ^ 0xB205) >> 8) - (((v86 ^ v265 ^ 0xE52DB205) >> 7) & 0x138) + 962391452) ^ ((v50 >> 2) - ((2 * (v50 >> 2)) & 0xF1119B56) - 125252181);
  int v268 = v77;
  int v263 = v84 ^ v77;
  int v89 = v84 ^ v77 ^ *(_DWORD *)&v76[4 * ((v86 ^ v265) ^ 0x40)] ^ (v88
                                                                                 - ((2 * v88) & 0x6B4A71D6)
                                                                                 - 1247463189);
  unsigned int v264 = v85;
  HIDWORD(v261) = ((v89 ^ 0x516EF336) - ((2 * (v89 ^ 0x516EF336)) & 0x635C8DE4) - 1313978638) ^ v85;
  unsigned int v90 = HIDWORD(v261) ^ 0x8EDEEA78 ^ v86;
  unsigned int v91 = v90 ^ v86 ^ v265 ^ 0xE52DB205;
  int v92 = *(_DWORD *)&v70[4 * (HIBYTE(v91) ^ 0x75)];
  HIDWORD(v50) = v92 ^ 2;
  LODWORD(v50) = v92 ^ 0x29C6444;
  int v93 = (v50 >> 2) ^ *(_DWORD *)(v73 + 4 * (BYTE1(v91) ^ 0xFCu)) ^ ((BYTE1(v91) ^ 9)
                                                                    - ((2 * ((v91 >> 8) ^ 0x1F2609)) & 0x138)
                                                                    + 962391452);
  int v94 = (v93 - ((2 * v93) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4
                                                                      * ((v90 ^ v86 ^ v265 ^ 5) ^ 0x17)];
  int v262 = v89;
  unsigned int v95 = v89 ^ *(_DWORD *)&v74[4 * (BYTE2(v91) ^ 0xF)] ^ (v94 - ((2 * v94) & 0xF1119B56) - 125252181);
  LODWORD(v260) = v95 ^ 0x71A906D4;
  HIDWORD(v260) = v91;
  LODWORD(v261) = v90;
  int v96 = v90 ^ 0x4C5CD1C1;
  HIDWORD(v259) = v95 ^ 0x71A906D4 ^ ((HIDWORD(v261) ^ 0x8EDEEA78)
                                    - ((2 * (HIDWORD(v261) ^ 0x8EDEEA78)) & 0x418FEBC4)
                                    + 549975522);
  LODWORD(v259) = HIDWORD(v259) ^ 0x307C325C ^ v90 ^ 0x4C5CD1C1;
  unsigned int v97 = v259 ^ v91;
  unsigned int v98 = (v259 ^ v91) ^ 0xEE;
  int v99 = *(_DWORD *)&v70[4 * (((v259 ^ v91) >> 24) ^ 0xB6)];
  HIDWORD(v50) = v99 ^ 2;
  LODWORD(v50) = v99 ^ 0x29C6444;
  int v100 = ((v50 >> 2) - ((2 * (v50 >> 2)) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4 * v98];
  unsigned int v101 = *(_DWORD *)(v73 + 4 * (((unsigned __int16)(v97 ^ 0x10AB) >> 8) ^ 0xF5u)) ^ *(_DWORD *)&v74[4 * (BYTE2(v97) ^ 0x67)] ^ v95 ^ (((unsigned __int16)(v97 ^ 0x10AB) >> 8) - (((v97 ^ 0xDC4E10AB) >> 7) & 0x138) + 962391452) ^ (v100 - ((2 * v100) & 0xF1119B56) - 125252181);
  unsigned int v102 = v101 ^ 0xBA7A9889;
  int v103 = v101 ^ v96;
  unsigned int v104 = v101 ^ v96 ^ v97 ^ 0xDC4E10AB;
  int v105 = *(_DWORD *)&v70[4 * (HIBYTE(v104) ^ 0x21)];
  HIDWORD(v50) = v105 ^ 2;
  LODWORD(v50) = v105 ^ 0x29C6444;
  int v106 = ((v50 >> 2) - ((2 * (v50 >> 2)) & 0xF1119B56) - 125252181) ^ *(_DWORD *)&v74[4 * (BYTE2(v104) ^ 0xCE)];
  int v107 = (v106 - ((2 * v106) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4 * (v104 ^ 0xA7)];
  int v108 = ((unsigned __int16)(v104 ^ 0x48E2) >> 8);
  int v109 = (v107 - ((2 * v107) & 0x72B9DB38) + 962391452) ^ *(_DWORD *)(v73 + 4 * (v108 ^ 0xF5u));
  unsigned int v110 = v102 ^ v108 ^ (v109 - ((2 * v109) & 0xD628D77E) - 350983233);
  unint64_t v258 = __PAIR64__(v97, v102);
  unsigned int v111 = v102 ^ ((HIDWORD(v259) ^ 0x307C325C) - ((2 * (HIDWORD(v259) ^ 0x307C325C)) & 0xD628D77E) - 350983233);
  HIDWORD(v256) = v111;
  unint64_t v257 = __PAIR64__(v103, v104);
  LODWORD(v256) = v110 ^ 0x7AC98B1A;
  unsigned int v112 = v110 ^ 0x7AC98B1A ^ (v111 - ((2 * v111) & 0xF5931634) + 2060028698);
  unsigned int v113 = v112 ^ 0xE6F58988 ^ v103;
  unsigned int v114 = v113 ^ v104 ^ 0x4BE748E2;
  LODWORD(v56) = *(_DWORD *)&v70[4 * (HIBYTE(v114) ^ 0x12)];
  HIDWORD(v50) = v56 ^ 2;
  LODWORD(v50) = v56 ^ 0x29C6444;
  LODWORD(v56) = *(_DWORD *)(v73 + 4 * (((unsigned __int16)(v114 ^ 0x8988) >> 8) ^ 0xF5u)) ^ *(_DWORD *)&v74[4 * (BYTE2(v114) ^ 0xDC)] ^ (((unsigned __int16)(v114 ^ 0x8988) >> 8) - (((v114 ^ 0x78F58988) >> 7) & 0x138) + 962391452) ^ ((v50 >> 2) - ((2 * (v50 >> 2)) & 0xF1119B56) - 125252181);
  unsigned int v115 = *(_DWORD *)&v76[4 * ((v113 ^ v104 ^ 0xE2) ^ 0xCD)] ^ v110 ^ 0x48E8229 ^ (v56
                                                                                                 - ((2 * v56) & 0x6B4A71D6)
                                                                                                 - 1247463189);
  LODWORD(v255) = v113 ^ 0x90BB67B0;
  HIDWORD(v255) = v112;
  HIDWORD(v253) = v115 ^ ((v112 ^ 0xE6F58988) - 2 * ((v112 ^ 0xE6F58988) & 0x48E823B ^ v112 & 0x12) + 76448297);
  unsigned int v116 = ((HIDWORD(v253) ^ 0x5BF36347) - ((2 * (HIDWORD(v253) ^ 0x5BF36347)) & 0x83AB290C) - 1042967418) ^ v113 ^ 0x90BB67B0;
  unsigned int v117 = v116 ^ v114 ^ 0x78F58988;
  int v118 = ((BYTE1(v117) ^ 0xBB) - ((2 * ((v117 >> 8) ^ 0x1A89BB)) & 0x138) + 962391452) ^ *(_DWORD *)(v73 + 4 * (BYTE1(v117) ^ 0x4Eu));
  int v119 = (v118 - ((2 * v118) & 0x6B4A71D6) - 1247463189) ^ *(_DWORD *)&v76[4
                                                                         * ((v116 ^ v114 ^ 0x88) ^ 0x91)];
  LODWORD(v56) = *(_DWORD *)&v70[4 * (HIBYTE(v117) ^ 0x70)];
  HIDWORD(v50) = v56 ^ 2;
  LODWORD(v50) = v56 ^ 0x29C6444;
  int v120 = (v50 >> 2) ^ *(_DWORD *)&v74[4 * (BYTE2(v117) ^ 0xA0)] ^ (v119 - ((2 * v119) & 0xF1119B56) - 125252181);
  unint64_t v254 = __PAIR64__(v114, v115);
  LODWORD(v252) = (v120 - ((2 * v120) & 0x91D0452) + 76448297) ^ v115;
  HIDWORD(v252) = v117;
  int v121 = v252 ^ 0x930000ED ^ HIDWORD(v253) ^ 0x5BF36347;
  HIDWORD(v251) = v121;
  LODWORD(v251) = v116 ^ 0x8E942EA5 ^ ((v121 ^ 0x8D06EA22)
                                     - 2 * ((v121 ^ 0x8D06EA22) & 0x29D1FE5E ^ v121 & 4)
                                     - 1445855654);
  unsigned int v122 = v251 ^ v117;
  int v123 = *(_DWORD *)&v70[4 * (HIBYTE(v122) ^ 0x23)];
  HIDWORD(v50) = v123 ^ 2;
  LODWORD(v50) = v123 ^ 0x29C6444;
  int v124 = ((unsigned __int16)(v122 ^ 0x1195) >> 8);
  int v125 = *(_DWORD *)&v76[4 * (v122 ^ 0xD0)] ^ *(_DWORD *)(v73 + 4 * (v124 ^ 0xF5u)) ^ 0x8CF9D577 ^ (v50 >> 2);
  HIDWORD(v250) = v122;
  int v126 = (v125 - ((2 * v125) & 0xF1119B56) - 125252181) ^ *(_DWORD *)&v74[4 * (BYTE2(v122) ^ 0x7E)] ^ v252 ^ 0x930000ED ^ v124;
  LODWORD(v56) = (v121 ^ 0x8D06EA22) - ((2 * (v121 ^ 0x8D06EA22)) & 0xB7557926);
  LODWORD(v253) = v116;
  unsigned int v127 = v126 ^ v116 ^ v122 ^ 0x49571195;
  LODWORD(v70) = *(_DWORD *)&v70[4 * (HIBYTE(v127) ^ 0x63)];
  unsigned int v128 = v127 ^ 0x2745D0FF;
  LODWORD(v250) = v127 ^ 0xB7EC63;
  HIDWORD(v50) = v70 ^ 2;
  LODWORD(v50) = v70 ^ 0x29C6444;
  int v129 = *(_DWORD *)(v73 + 4 * (BYTE1(v128) ^ 0xFDu)) ^ *(_DWORD *)&v76[4 * (~(_BYTE)v127 ^ 0xC4)] ^ ((BYTE1(v128) ^ 8) - 2 * (((v128 >> 8) ^ 0x2E3F08) & 0x9F ^ (v128 >> 8) & 3) + 962391452) ^ ((v50 >> 2) - ((2 * (v50 >> 2)) & 0x6B4A71D6) - 1247463189);
  unsigned int v130 = (v129 - ((2 * v129) & 0xF1119B56) - 125252181) ^ *(_DWORD *)&v74[4
                                                                        * (((v127 ^ 0x2745D0FF) >> 16) ^ 0x16)];
  unsigned int v131 = v130 - ((2 * v130) & 0xB7557926);
  uint64_t v132 = (char *)*(&off_1003B8530 + v46 - 1434) - 12;
  id v133 = (char *)*(&off_1003B8530 + v46 - 1323) - 8;
  id v134 = (char *)*(&off_1003B8530 + v46 - 1378) - 12;
  LODWORD(v++*(void *)(*(void *)(result + 32) + 48) = v134[*(unsigned __int8 *)(v45 - 109) ^ 0xA5];
  HIDWORD(v50) = v48 ^ 0x11;
  LODWORD(v50) = ~v48 << 24;
  CFDataRef v135 = (char *)*(&off_1003B8530 + (v46 ^ 0x514)) - 8;
  v247 = v134;
  v249 = v132;
  v246 = v135;
  v248 = v133;
  int v136 = (((((v50 >> 30) ^ 0xDB) >> 2) | (((v50 >> 30) ^ 0xDB) << 6)) | ((v133[*(unsigned __int8 *)(v45 - 111) ^ 0x7ALL] ^ 0x83) << 16) | ((v135[*(unsigned __int8 *)(v45 - 112) ^ 0x78] ^ 0x34) << 24) | (((v132[*(unsigned __int8 *)(v45 - 110) ^ 0x5DLL] + (*(unsigned char *)(v45 - 110) ^ 0x52) + 89) ^ 0x5D) << 8)) ^ 0x2D977532;
  LODWORD(v++*(void *)(*(void *)(result + 32) + 48) = ((v134[*(unsigned __int8 *)(v45 - 101) ^ 0x60] ^ 0x1A) & 0xFFFF00FF | ((v133[*(unsigned __int8 *)(v45 - 103) ^ 5] ^ 0xD2) << 16) | (((v132[*(unsigned __int8 *)(v45 - 102) ^ 4] + (*(unsigned char *)(v45 - 102) ^ 0xB) + 89) ^ 0x33) << 8) | ((v135[*(unsigned __int8 *)(v45 - 104) ^ 0x1CLL] ^ 0xFFFFFFC1) << 24)) ^ 0x1E9C9774;
  unsigned int v137 = ((v134[*(unsigned __int8 *)(v45 - 105) ^ 0x28] ^ 0xDB) & 0xFFFF00FF | ((((*(unsigned char *)(v45 - 106) ^ 0xAC) + v132[*(unsigned __int8 *)(v45 - 106) ^ 0xA3] + 89) ^ 0xF6) << 8) | ((v135[*(unsigned __int8 *)(v45 - 108) ^ 0xB2] ^ 0x36) << 24) | ((v133[*(unsigned __int8 *)(v45 - 107) ^ 0x27] ^ 0xB6) << 16)) ^ 0x310A9F41;
  unsigned int v138 = ((v134[*(unsigned __int8 *)(v45 - 97) ^ 0x7BLL] ^ 0xAE) & 0xFFFF00FF | ((((*(unsigned char *)(v45 - 98) ^ 0xD0) + v132[*(unsigned __int8 *)(v45 - 98) ^ 0xDFLL] + 89) ^ 0xE4) << 8) | ((v133[*(unsigned __int8 *)(v45 - 99) ^ 0xAALL] ^ 0xE0) << 16) | ((v135[*(unsigned __int8 *)(v45 - 100) ^ 0x45] ^ 0xE) << 24)) ^ 0xA099A32F;
  HIDWORD(v244) = v47 ^ 0x218;
  LODWORD(v244) = v47 ^ 0x2AC;
  HIDWORD(v243) = v47 ^ 0x20E;
  LODWORD(v243) = v126 ^ 0x5BAABC93 ^ (v56 + 1537916051);
  HIDWORD(v245) = v126 ^ 0x5BAABC93;
  LODWORD(v242) = (v131 + 1537916051) ^ v126 ^ 0x5BAABC93;
  HIDWORD(v242) = v47 ^ 0x2A1;
  *(_DWORD *)(v45 - 128) = v47;
  HIDWORD(v241) = v47 ^ 0x2EC;
  HIDWORD(a21) = v126 ^ v116 ^ 0x452FF2BF;
  LODWORD(v245) = (v56 + 1537916051) ^ 0x3DC8BA5D ^ (v131 + 1537916051);
  LODWORD(v241) = v245 ^ HIDWORD(a21);
  v139 = *(unsigned __int8 **)(v45 - 120);
  int v140 = *(_DWORD *)(v45 - 128);
  *(void *)(v45 - 208) = 7;
  LOBYTE(v116) = v139[7];
  *(void *)(v45 - 176) = 12;
  int v141 = v134[(v116 ^ (((v140 - 96) | 0x21) + 28))];
  uint64_t v142 = v139[12] ^ 0x60;
  *(void *)(v45 - 168) = 8;
  *(void *)(v45 - 136) = 1;
  LODWORD(v142) = v135[v142] ^ 0xB5;
  LODWORD(v56) = v135[v139[8] ^ 0xC1] ^ 1;
  LODWORD(v132) = v133[v139[1] ^ 0x66] ^ 0x6F;
  *(void *)(v45 - 144) = 15;
  int v143 = v132 << 16;
  uint64_t v144 = v139[15] ^ 0xE9;
  *(void *)(v45 - 160) = 11;
  LODWORD(v144) = v134[v144] ^ 0xC;
  int v145 = v134[v139[11] ^ 0xC3];
  *(void *)(v45 - 184) = 0;
  LODWORD(v133) = v144 | (v142 << 24);
  int v146 = v143 | ((v135[*v139 ^ 0x30] ^ 0x85) << 24);
  *(void *)(v45 - 152) = 2;
  LOBYTE(v142) = (v249[v139[2] ^ 0xC0] + (v139[2] ^ 0xCF) + 89) ^ 0xF9;
  *(void *)(v45 - 216) = 4;
  unsigned int v147 = v146 & 0xFFFF00FF | (v142 << 8);
  LODWORD(v142) = v135[v139[4] ^ 0xFCLL] ^ 0x3B;
  v141 ^= 0xDCu;
  *(void *)(v45 - 240) = 9;
  *(void *)(v45 - 232) = 5;
  LODWORD(v76) = (v248[v139[9] ^ 0x5DLL] ^ 0xBC) << 16;
  *(void *)(v45 - 200) = 10;
  LODWORD(v76) = v76 & 0xFFFF00FF | (((v249[v139[10] ^ 0xD5] + (v139[10] ^ 0xDA) + 89) ^ 0xCF) << 8);
  *(void *)(v45 - 192) = 14;
  LODWORD(v76) = v76 | v145 ^ 0xC6 | (v56 << 24);
  LODWORD(v56) = v248[v139[5] ^ 0xA9] ^ 0x52;
  LODWORD(v133) = v133 & 0xFFFF00FF | ((v249[v139[14] ^ 0xE4] + (v139[14] ^ 0xEB) - 39) << 8);
  *(void *)(v45 - 224) = 3;
  int v148 = v134[v139[3] ^ 0xDCLL] ^ 0x18 | v147;
  *(void *)(v45 - 2++*(void *)(*(void *)(result + 32) + 48) = 13;
  int v149 = v248[v139[13] ^ 0x92] ^ 0x81;
  *(void *)(v45 - 256) = 6;
  int v150 = (v56 << 16) | (((v249[v139[6] ^ 0x4FLL] + (v139[6] ^ 0x40) + 89) ^ 0xB7) << 8) | v141 | (v142 << 24);
  int v151 = v150 - 2 * (v150 & 0x8B326FA ^ v141 & 2) - 2001525000;
  unsigned int v152 = v136 ^ v271 ^ (v148 - ((2 * v148) & 0x285D9816) - 1808872437);
  unsigned int v153 = v137 ^ v272 ^ v151;
  unsigned int v154 = ((v133 | (v149 << 16)) - ((2 * (v133 | (v149 << 16))) & 0x3240352C) + 421534358) ^ v138;
  unsigned int v155 = (v154 - ((2 * v154) & 0x3F83B22A) - 1614685931) ^ v270;
  LODWORD(v144) = v48 ^ v269 ^ (v76
                                            - 2 * (v76 & 0x27252EDF ^ (v145 ^ 0xC6) & 0x12)
                                            - 1490735411);
  uint64_t v156 = (uint64_t)*(&off_1003B8530 + (int)v244);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x3F));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  uint64_t v157 = (uint64_t)*(&off_1003B8530 + SHIDWORD(v244));
  LODWORD(v133) = (v50 >> 1) ^ ((BYTE2(v155) ^ 0x68)
                              + 1744895299
                              - 2 * ((HIWORD(v155) ^ 0xB768) & 0x53 ^ HIWORD(v155) & 0x10)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v155) ^ 0x34u));
  uint64_t v158 = (uint64_t)*(&off_1003B8530 + v140 - 416);
  LODWORD(v++*(void *)(*(void *)(result + 32) + 48) = *(_DWORD *)(v158 + 4 * (v144 ^ 0xC6u)) ^ ((BYTE2(v152) ^ 0xD5)
                                                                            + 1744895299
                                                                            - ((2 * (HIWORD(v152) ^ 0x6CD5)) & 0x86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v152) ^ 0x89u)) ^ ((v144 ^ 0xAB) - 1482631806 + ((2 * (v144 ^ 0xAB) + 254) & 0x204 ^ 0xEFFBFBFF));
  unsigned int v159 = *(_DWORD *)(v157 + 4 * (BYTE2(v153) ^ 0x8Cu)) ^ *(_DWORD *)(v158 + 4 * (v155 ^ 0xB6u)) ^ ((v155 ^ 0xDB) - 1482631806 + ((2 * (v155 ^ 0xDB) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v153) ^ 0xD0) + 1744895299 - 2 * ((HIWORD(v153) ^ 0xC8D0) & 0x4F ^ HIWORD(v153) & 0xC));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v153) ^ 0xC8));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v56) = v48 - 432032903 - ((2 * v48) & 0xCC7F66F2);
  v160 = (char *)*(&off_1003B8530 + SHIDWORD(v243)) - 8;
  LODWORD(v56) = v56 ^ *(_DWORD *)&v160[4 * (BYTE1(v153) ^ 0x2F)];
  LODWORD(v142) = ((BYTE2(v144) ^ 0xAD) + 1744895299 - ((2 * (WORD1(v144) ^ 0x3FAD)) & 0x86)) ^ *(_DWORD *)(v158 + 4 * (v152 ^ 0x1Cu)) ^ ((v152 ^ 0x71) - 1482631806 + ((2 * (v152 ^ 0x71) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v50 >> 1);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v152) ^ 0x6C));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v142) = v142 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0xF1u));
  int v161 = (v50 >> 1) ^ *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x29)] ^ (v159 - 432032903 - ((2 * v159) & 0xCC7F66F2));
  unsigned int v162 = *(_DWORD *)(v158 + 4 * (v153 ^ 0x7Du)) ^ *(_DWORD *)&v160[4 * (BYTE1(v152) ^ 0xDE)] ^ ((v153 ^ 0x10) - 1482631806 + ((2 * (v153 ^ 0x10) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v133 - 432032903 - ((2 * v133) & 0xCC7F66F2));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v155) ^ 0xB7));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v133) = v162 - 1560072956 - ((2 * v162) & 0x46065A08);
  LOWORD(v153) = (v162 + 11524 - ((2 * v162) & 0x5A08)) ^ v266;
  LODWORD(v144) = (v56 ^ (v50 >> 1)) - ((2 * (v56 ^ (v50 >> 1))) & 0xE8C7455C);
  unsigned int v163 = *(_DWORD *)&v160[4 * (BYTE1(v155) ^ 0x66)] ^ v267 ^ (v142 - 432032903 - ((2 * v142) & 0xCC7F66F2));
  LODWORD(v134) = (v133 ^ v266) >> 16;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v133 ^ ~v266) >> 24));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v76) = v50 >> 1;
  LODWORD(v142) = (v161 + 1719945131 - ((2 * v161) & 0xCD088F56)) ^ v268;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v142) ^ 0x91));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v164 = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v163) ^ 0xA3));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v74) = v164 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v163) ^ 0xF0u)) ^ ((BYTE2(v163) ^ 0xAC)
                                                                         + 1744895299
                                                                         - ((v163 >> 15) & 0x86));
  int v165 = (v50 >> 1) ^ *(_DWORD *)(v158 + 4 * (v142 ^ 0x7Bu)) ^ ((v134 ^ 0x49)
                                                                                 + 1744895299
                                                                                 - 2
                                                                                 * ((v134 ^ 0xFF49) & 0x57 ^ v134 & 0x14)) ^ ((v142 ^ 0x16) - 1482631806 + ((2 * (v142 ^ 0x16) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v157 + 4 * (v134 ^ 0x15u));
  LODWORD(v144) = (v144 + 1952686766) ^ v265;
  unsigned int v166 = (v165 - 432032903 - ((2 * v165) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x70)];
  LODWORD(v74) = (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4
                                                                                               * (BYTE1(v153) ^ 0x2C)];
  unsigned int v167 = v76 ^ *(_DWORD *)(v158 + 4 * (v163 ^ 3u)) ^ *(_DWORD *)(v157
                                                                                                + 4
                                                                                                * (BYTE2(v144) ^ 0xC3u)) ^ ((v163 ^ 0x6E) - 1482631806 + ((2 * (v163 ^ 0x6E) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v144) ^ 0x9F) + 1744895299 - ((2 * (WORD1(v144) ^ 0x259F)) & 0x86));
  LODWORD(v133) = ((BYTE2(v142) ^ 0x72) + 1744895299 - 2 * ((WORD1(v142) ^ 0x9172) & 0x47 ^ WORD1(v142) & 4)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v142) ^ 0x2Eu));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x25));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v168 = ((v153 ^ 0xFC) - 1482631806 + ((2 * (v153 ^ 0xFC) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)&v160[4 * (BYTE1(v163) ^ 0xBD)] ^ *(_DWORD *)(v158 + 4 * (v153 ^ 0x91u)) ^ (v50 >> 1) ^ (v133 - 432032903 - ((2 * v133) & 0xCC7F66F2));
  unsigned int v169 = ((v144 ^ 0xD6) - 1726037377) ^ v263 ^ *(_DWORD *)(v158 + 4 * (v144 ^ 0xBBu)) ^ (v74 + 243405570 - ((2 * v74) & 0x1D042604));
  LODWORD(v144) = *(_DWORD *)&v160[4 * (BYTE1(v142) ^ 0x57)] ^ v86 ^ (v167 - 432032903 - ((2 * v167) & 0xCC7F66F2));
  unsigned int v170 = (v168 - ((2 * v168) & 0xCD9D92B0) + 1724827992) ^ v86 ^ v265;
  LODWORD(v76) = (v166 - 1313978638 - ((2 * v166) & 0x635C8DE4)) ^ v264;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v170) ^ 0xA6));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v142) = ((v166 - 14 - ((2 * v166) & 0xE4)) ^ v264);
  LODWORD(v142) = ((v142 ^ 0xA1) - 1482631806 + ((2 * (v142 ^ 0xA1) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158 + 4 * (v142 ^ 0xCC));
  LODWORD(v74) = *(_DWORD *)(v157 + 4 * (BYTE2(v169) ^ 0xDBu)) ^ ((BYTE2(v169) ^ 0x87)
                                                                  + 1744895299
                                                                  - ((2 * (HIWORD(v169) ^ 0x3A87)) & 0x86)) ^ (v50 >> 1);
  int v171 = (v142 - 432032903 - ((2 * v142) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v169) ^ 0xDE)];
  LODWORD(v142) = ((v169 ^ 0x9E)
                 - 1482631806
                 + ((2 * (v169 ^ 0x9E) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158
                                                                                                  + 4 * (v169 ^ 0xF3u));
  LODWORD(v74) = (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4
                                                                                               * (((unsigned __int16)((v166 + 18162 - ((2 * v166) & 0x8DE4)) ^ v264) >> 8) ^ 0x57)];
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x25));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v172 = *(_DWORD *)(v157 + 4 * (BYTE2(v170) ^ 0x20u)) ^ BYTE2(v170) ^ (v50 >> 1) ^ (v171
                                                                                     + 1744895299
                                                                                     - ((2 * v171) & 0xD001FA86));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v169) ^ 0x3A));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v173 = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0xD7)] ^ BYTE2(v76) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0xF6u)) ^ 0x8E3F4E90 ^ (v50 >> 1);
  unsigned int v174 = ((v170 ^ 0x8B) - 1726037377) ^ v262 ^ *(_DWORD *)(v158 + 4 * (v170 ^ 0xE6u)) ^ (v173 + 243405570 - ((2 * v173) & 0x1D042604));
  LODWORD(v56) = *(_DWORD *)&v160[4 * (BYTE1(v170) ^ 0xB)];
  int v175 = *(_DWORD *)(v158 + 4 * (v144 ^ 0xA1u)) ^ ((v144 ^ 0xCC) - 1726037377) ^ (v74 + 243405570 - ((2 * v74) & 0x1D042604));
  unsigned int v176 = (v175 - ((2 * v175) & 0xBF6A693A) + 1605711005) ^ HIDWORD(v260);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0x7C));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v76) = ((v172 ^ 0x7C) - ((2 * (v172 ^ 0x7C)) & 0x3AC5EEDA) + 493025133) ^ v261;
  LODWORD(v144) = v56 ^ HIDWORD(v261) ^ ((BYTE2(v144) ^ 0xA1)
                                                     + 1744895299
                                                     - ((2 * (WORD1(v144) ^ 0x66A1)) & 0x86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0xFDu)) ^ (v50 >> 1) ^ (v142 - 432032903 - ((2 * v142) & 0xCC7F66F2));
  int v177 = (((v172 ^ 0x7C) - ((2 * (v172 ^ 0x7C)) & 0xDA) + 109) ^ v261);
  unsigned int v178 = ((v177 ^ 0x58) - 1482631806 + ((2 * (v177 ^ 0x58) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158 + 4 * (v177 ^ 0x35u));
  unsigned int v179 = v178 - 432032903 - ((2 * v178) & 0xCC7F66F2);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v174) ^ 0x2D));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v74) = (v50 >> 1) ^ *(_DWORD *)(v158 + 4 * (v176 ^ 0x74u)) ^ ((v176 ^ 0x19)
                                                                                         - 1482631806
                                                                                         + ((2
                                                                                           * (v176 ^ 0x19)
                                                                                           + 254) & 0x204 ^ 0xEFFBFBFF));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v176) ^ 0x65));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v180 = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0xB6));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v181 = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0xB4));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  unsigned int v182 = v181 ^ *(_DWORD *)(v158 + 4 * (v144 ^ 0x8Bu)) ^ ((v144 ^ 0xE6)
                                                                           - 1482631806
                                                                           + ((2 * (v144 ^ 0xE6) + 254) & 0x204 ^ 0xEFFBFBFF));
  LODWORD(v74) = ((BYTE2(v144) ^ 0x59) + 1744895299 - ((2 * (WORD1(v144) ^ 0xB459)) & 0x86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 5u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0x39)] ^ (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2));
  LODWORD(v133) = BYTE2(v174) ^ 0x72;
  LODWORD(v142) = v133 + 1744895299 - ((2 * (HIWORD(v174) ^ 0x2D72)) & 0x86);
  int v183 = v174;
  LODWORD(v56) = (v174 ^ 0x16)
               - 1482631806
               + ((2 * (v174 ^ 0x16) + 254) & 0x204 ^ 0xEFFBFBFF);
  unsigned int v184 = ((BYTE2(v176) ^ 0xC) + 1744895299 - ((v176 >> 15) & 0x86)) ^ v259 ^ *(_DWORD *)&v160[4 * (BYTE1(v174) ^ 0x57)] ^ *(_DWORD *)(v157 + 4 * (BYTE2(v176) ^ 0x50u)) ^ (v182 - 432032903 - ((2 * v182) & 0xCC7F66F2));
  LODWORD(v134) = *(_DWORD *)&v160[4 * (BYTE1(v176) ^ 0x4D)] ^ HIDWORD(v259) ^ ((v50 >> 1)
                                                                              - 432032903
                                                                              - ((2 * (v50 >> 1)) & 0xCC7F66F2)) ^ *(_DWORD *)(v158 + 4 * (v183 ^ 0x7Bu)) ^ v56;
  unsigned int v185 = (v74 + 549975522 - ((2 * v74) & 0x418FEBC4)) ^ v260;
  LODWORD(v76) = v134 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0xF7u)) ^ ((BYTE2(v76) ^ 0xAB)
                                                                                      + 1744895299
                                                                                      - ((2
                                                                                        * ((v76 >> 16) ^ 0xF5AB)) & 0x86));
  LODWORD(v144) = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x34)] ^ HIDWORD(v258) ^ *(_DWORD *)(v157
                                                                                         + 4
                                                                                         * (v133 ^ 0x5C)) ^ v142 ^ v179 ^ v180;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0xF9));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v186 = (v50 >> 1) - 432032903 - ((2 * (v50 >> 1)) & 0xCC7F66F2);
  LODWORD(v74) = ((BYTE2(v76) ^ 0x81)
                + 1744895299
                - 2 * (((v76 >> 16) ^ 0x1481) & 0x5B ^ (v76 >> 16) & 0x18)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0xDDu));
  LODWORD(v133) = ((v76 ^ 0x51)
                 - 1482631806
                 + ((2 * (v76 ^ 0x51) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158
                                                                                                 + 4
                                                                                                 * (v76 ^ 0x3Cu));
  LODWORD(v134) = *(_DWORD *)(v157 + 4 * (BYTE2(v184) ^ 0xDBu)) ^ ((BYTE2(v184) ^ 0x87)
                                                                   + 1744895299
                                                                   - ((2 * (HIWORD(v184) ^ 0x7787)) & 0x86));
  LODWORD(v135) = ((v144 ^ 0xBAD1827D) >> 16) ^ *(_DWORD *)(v157
                                                                                         + 4
                                                                                         * (((v144 ^ 0xBAD1827D) >> 16) ^ 0x5Cu)) ^ (v133 + 1744895299 - ((2 * v133) & 0xD001FA86));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0x14));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v133) = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v185) ^ 0x9A));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v74) = *(_DWORD *)(v158 + 4 * (v144 ^ 0x10u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v184) ^ 0xDE)] ^ (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2)) ^ ((v144 ^ 0x7D) - 1482631806 + ((2 * (v144 ^ 0x7D) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v50 >> 1);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v184) ^ 0x77));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v135) = (v50 >> 1) ^ *(_DWORD *)&v160[4 * (BYTE1(v185) ^ 0x2D)] ^ (v135
                                                                           - 432032903
                                                                           - ((2 * v135) & 0xCC7F66F2));
  unsigned int v187 = *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0x34)] ^ v257 ^ v186 ^ ((v184 ^ 0x9E)
                                                                  - 1482631807
                                                                  - ((2 * (v184 ^ 0x9E) + 306021630) & 0x10040604)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v185) ^ 0xB5u)) ^ ((BYTE2(v185) ^ 0xE9) + 1744895299 - ((2 * (HIWORD(v185) ^ 0x9AE9)) & 0x86)) ^ *(_DWORD *)(v158 + 4 * (v184 ^ 0xF3u));
  LODWORD(v144) = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x60)] ^ HIDWORD(v256) ^ ((v185 ^ 0xA8)
                                                                              - 1482631806
                                                                              + ((2 * (v185 ^ 0xA8)
                                                                                + 254) & 0x204 ^ 0xEFFBFBFF)) ^ v133 ^ (v134 - 432032903 - ((2 * v134) & 0xCC7F66F2)) ^ *(_DWORD *)(v158 + 4 * (v185 ^ 0xC5u));
  unsigned int v188 = (v74 - 350983233 - ((2 * v74) & 0xD628D77E)) ^ v258;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x6D));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v76) = v50 >> 1;
  LODWORD(v142) = *(_DWORD *)(v156 + 4 * (HIBYTE(v188) ^ 0xFD));
  LODWORD(v74) = *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0x52u)) ^ (v142 << 31) ^ (v142 >> 1) ^ ((BYTE2(v144) ^ 0xE) + 1744895299 - ((2 * (WORD1(v144) ^ 0x2E0E)) & 0x86));
  unsigned int v189 = ((v144 ^ 0x4A) - 1482631806 + ((2 * (v144 ^ 0x4A) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158 + 4 * (v144 ^ 0x27u));
  LODWORD(v135) = (v135 - ((2 * v135) & 0x1C931B90) + 239701448) ^ v103;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v135 >> 24) ^ 0xF1));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v190 = (v50 >> 1) ^ *(_DWORD *)&v160[4 * (BYTE1(v188) ^ 0xA4)] ^ (v189 - 432032903 - ((2 * v189) & 0xCC7F66F2));
  LODWORD(v142) = *(_DWORD *)(v157 + 4 * (BYTE2(v187) ^ 0x24u)) ^ BYTE2(v187) ^ (v190
                                                                                 + 1744895299
                                                                                 - ((2 * v190) & 0xD001FA86));
  unsigned int v191 = *(_DWORD *)(v157 + 4 * (BYTE2(v135) ^ 0x1Du)) ^ v76 ^ *(_DWORD *)(v158
                                                                                         + 4
                                                                                         * (v188 ^ 0x4Du)) ^ ((v188 ^ 0x20) - 1482631806 + ((2 * (v188 ^ 0x20) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v135) ^ 0x41) + 1744895299 - ((2 * ((v135 >> 16) ^ 0xF141)) & 0x86));
  LODWORD(v133) = v191 - 432032903 - ((2 * v191) & 0xCC7F66F2);
  unsigned int v192 = ((v187 ^ 0x34) - 1482631806 + ((2 * (v187 ^ 0x34) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v158 + 4 * (v187 ^ 0x59u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v135) ^ 2)];
  LODWORD(v135) = v135;
  LODWORD(v74) = v192 ^ ((v74 ^ 0xC33D422)
                       - 432032903
                       - 2 * ((v74 ^ 0xC33D422) & 0x663FB37D ^ v74 & 4));
  unsigned int v193 = ((v135 ^ 0x4D) - ((2 * (v135 ^ 0x4D) + 4031742) & 0x3D06F2) + 2136897016) ^ *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x65)];
  LODWORD(v135) = (v193 + 243405570 - ((2 * v193) & 0x1D042604)) ^ *(_DWORD *)(v158
                                                                             + 4 * (v135 ^ 0x20u));
  int v194 = *(_DWORD *)(v157 + 4 * (BYTE2(v188) ^ 0x40u)) ^ ((BYTE2(v188) ^ 0x1C) + 1744895299 - ((v188 >> 15) & 0x86));
  unsigned int v195 = v194 ^ 0x87C003F7 ^ (v135 - 992138460 - ((2 * v135) & 0x89BA5648));
  LODWORD(v135) = v135 ^ 0x6500C283;
  int v196 = (v135 + v195 + 1) ^ ((v194 ^ 0x261DEA50) + 1);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v187) ^ 0x6E));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v134) = *(_DWORD *)&v160[4 * (BYTE1(v187) ^ 0x38)];
  LODWORD(v76) = ((v142 ^ 0x78) - 1042967418 - ((2 * v142) & 0x83AB290C)) ^ v255;
  int v197 = ((v194 ^ 0x1D3F3E8B ^ (v196 - 992138460 - ((2 * v196) & 0x89BA5648))) + v135) ^ (v50 >> 1);
  int v198 = v197 - ((2 * v197) & 0x72C99DF8);
  unsigned int v199 = v134 ^ HIDWORD(v255) ^ v133;
  LODWORD(v144) = (v74 + 2060028698 - ((2 * v74) & 0xF5931634)) ^ v256;
  LODWORD(v74) = ((BYTE2(v144) ^ 0xE9) + 1744895299 - 2 * ((WORD1(v144) ^ 0xB8E9) & 0x47 ^ WORD1(v144) & 4)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0xB5u));
  unsigned int v200 = v74 - 432032903 - ((2 * v74) & 0xCC7F66F2);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0x9D));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v134) = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v199) ^ 0x61));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v74) = *(_DWORD *)(v158 + 4 * (v144 ^ 0xC5u)) ^ *(_DWORD *)(v157
                                                                                       + 4 * (BYTE2(v76) ^ 0x28u)) ^ (v50 >> 1) ^ ((v144 ^ 0xA8) - 1482631806 + ((2 * (v144 ^ 0xA8) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v76) ^ 0x74) + 1744895299 - ((2 * ((v76 >> 16) ^ 0x9D74)) & 0x86));
  unsigned int v201 = (v198 - 1184575748) ^ HIDWORD(v254);
  LODWORD(v135) = v134 ^ ((BYTE2(v201) ^ 0xEC)
                                      + 1744895299
                                      - 2 * ((HIWORD(v201) ^ 0x58EC) & 0x53 ^ HIWORD(v201) & 0x10)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v201) ^ 0xB0u));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0xB8));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v202 = v199;
  int v203 = (v199 ^ 0x85) - 1482631807 - ((2 * (v199 ^ 0x85) + 306021630) & 0x10040604);
  int v204 = *(_DWORD *)(v158 + 4 * (((v198 - 4) ^ BYTE4(v254)) ^ 0xE3u)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v199) ^ 0x54u)) ^ ((BYTE2(v199) ^ 8) + 1744895299 - ((v199 >> 15) & 0x86)) ^ (v50 >> 1) ^ ((((v198 - 4) ^ BYTE4(v254)) ^ 0x8E) - 1482631806 + ((2 * (((v198 - 4) ^ BYTE4(v254)) ^ 0x8E) + 254) & 0x204 ^ 0xEFFBFBFF));
  unsigned int v205 = *(_DWORD *)&v160[4 * (BYTE1(v201) ^ 0xE0)] ^ HIDWORD(v253) ^ (v74
                                                                     - 432032903
                                                                     - ((2 * v74) & 0xCC7F66F2));
  unsigned int v206 = (v204 - 432032903 - ((2 * v204) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0xBD)];
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v201) ^ 0x58));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  unsigned int v207 = *(_DWORD *)(v158 + 4 * ((((v142 ^ 0x78) - 122 - ((2 * v142) & 0xC)) ^ v255) ^ 0xB4u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v199) ^ 0x8F)] ^ ((v76 ^ 0xD9) - 1482631806 + ((2 * (v76 ^ 0xD9) + 254) & 0x204 ^ 0xEFFBFBFF));
  int v208 = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x2D)];
  unsigned int v209 = (v206 + 76448297 - ((2 * v206) & 0x91D0452)) ^ v254;
  LODWORD(v144) = ((v207 ^ v200 ^ (v50 >> 1)) - ((2 * (v207 ^ v200 ^ (v50 >> 1))) & 0x32C11410) + 425757192) ^ HIDWORD(v252);
  LODWORD(v76) = v208 ^ v253 ^ v203 ^ *(_DWORD *)(v158 + 4 * (v202 ^ 0xE8u)) ^ (v135
                                                                                - 432032903
                                                                                - ((2 * v135) & 0xCC7F66F2));
  LODWORD(v74) = ((BYTE2(v76) ^ 0x66)
                + 1744895299
                - 2 * (((v76 >> 16) ^ 0xAE66) & 0x5B ^ (v76 >> 16) & 0x18)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0x3Au));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x26));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v210 = ((v50 >> 1) + 1744895299 - ((2 * (v50 >> 1)) & 0xD001FA86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v209) ^ 0x40u));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v209) ^ 0xEF));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v135) = (v50 >> 1) ^ *(_DWORD *)(v158 + 4 * (v144 ^ 0x67u)) ^ ((v144 ^ 0xA)
                                                                                          - 1482631806
                                                                                          + ((2
                                                                                            * (v144 ^ 0xA)
                                                                                            + 254) & 0x204 ^ 0xEFFBFBFF));
  unsigned int v211 = *(_DWORD *)(v158 + 4 * (v205 ^ 0x27u)) ^ ((v205 ^ 0x4A)
                                                                    - 1482631806
                                                                    + ((2 * (v205 ^ 0x4A) + 254) & 0x204 ^ 0xEFFBFBFF));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0xAE));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v212 = (v50 >> 1) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0x2Au)) ^ (v211 + 1744895299 - ((2 * v211) & 0xD001FA86));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v205) ^ 0xDC));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  unsigned int v213 = v210 - 432032903 - ((2 * v210) & 0xCC7F66F2);
  unsigned int v214 = ((BYTE2(v205) ^ 0xE) + 1744895299 - ((2 * (HIWORD(v205) ^ 0xDC0E)) & 0x86)) ^ v252 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v205) ^ 0x52u)) ^ *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0x7C)] ^ (v135 - 432032903 - ((2 * v135) & 0xCC7F66F2));
  LODWORD(v133) = v76;
  LODWORD(v134) = (v76 ^ 0xB3)
                - 1482631806
                + ((2 * (v76 ^ 0xB3) + 254) & 0x204 ^ 0xEFFBFBFF);
  LODWORD(v76) = *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x41)] ^ HIDWORD(v251) ^ *(_DWORD *)(v158
                                                                                        + 4
                                                                                        * (v209 ^ 0x4Du)) ^ (v50 >> 1) ^ ((v209 ^ 0x20) - 1482631806 + ((2 * (v209 ^ 0x20) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2));
  LODWORD(v74) = WORD1(v144);
  LODWORD(v144) = v213 ^ HIDWORD(v250) ^ *(_DWORD *)&v160[4 * (BYTE1(v205) ^ 0x65)] ^ *(_DWORD *)(v158
                                                                                                + 4
                                                                                                * (v133 ^ 0xDE)) ^ v134;
  unsigned int v215 = *(_DWORD *)&v160[4 * (BYTE1(v209) ^ 0xA4)] ^ v251 ^ (v212 - 432032903 - ((2 * v212) & 0xCC7F66F2));
  LODWORD(v74) = (v160[4 * (BYTE1(v209) ^ 0xA4)] ^ v251 ^ (v212 + 121 - ((2 * v212) & 0xF2)) ^ v74);
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (BYTE3(v144) ^ 0x6C));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v135) = v50 >> 1;
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v214) ^ 0xF7));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  LODWORD(v134) = v50 >> 1;
  LODWORD(v142) = ((BYTE2(v144) ^ 0xC8) + 1744895299 - ((2 * (WORD1(v144) ^ 0x6CC8)) & 0x86)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v144) ^ 0x94u));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * (HIBYTE(v215) ^ 0xE7));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  int v216 = v50 >> 1;
  LODWORD(v74) = v135 ^ *(_DWORD *)(v158 + 4 * (v74 ^ 0x3D)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v214) ^ 0xB5u)) ^ ((BYTE2(v214) ^ 0xE9) + 1744895299 - ((2 * (HIWORD(v214) ^ 0xF7E9)) & 0x86)) ^ ((v74 ^ 0x50) - 1482631806 + ((2 * (v74 ^ 0x50) + 254) & 0x204 ^ 0xEFFBFBFF));
  LODWORD(v74) = (v74 - 432032903 - ((2 * v74) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v76) ^ 0xEC)];
  unsigned int v217 = v134 ^ *(_DWORD *)(v157 + 4 * (BYTE2(v76) ^ 0xA7u)) ^ *(_DWORD *)(v158
                                                                                         + 4
                                                                                         * ((v144 ^ BYTE2(v209)) ^ 0x32u)) ^ (((v144 ^ BYTE2(v209)) ^ 0x5F) - 1482631806 + ((2 * ((v144 ^ BYTE2(v209)) ^ 0x5F) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ ((BYTE2(v76) ^ 0xFB) + 1744895299 - ((2 * ((v76 >> 16) ^ 0x57FB)) & 0x86));
  HIDWORD(v50) = *(_DWORD *)(v156 + 4 * ((v76 >> 24) ^ 0x57));
  LODWORD(v50) = HIDWORD(v50) ^ 0x1867A844;
  unsigned int v218 = (v217 - 432032903 - ((2 * v217) & 0xCC7F66F2)) ^ *(_DWORD *)&v160[4 * (BYTE1(v215) ^ 0x6D)];
  LODWORD(v133) = *(_DWORD *)&v160[4 * (BYTE1(v214) ^ 0x2D)];
  int v219 = ((BYTE2(v215) ^ 0x31) + 1744895299 - ((2 * (HIWORD(v215) ^ 0xE731)) & 0x86)) ^ *(_DWORD *)(v158
                                                                                                  + 4 * (v214 ^ 0xC5u)) ^ ((v214 ^ 0xA8) - 1482631806 + ((2 * (v214 ^ 0xA8) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ *(_DWORD *)(v157 + 4 * (BYTE2(v215) ^ 0x6Du)) ^ (v50 >> 1);
  uint64_t v220 = *(void *)(v45 - 120);
  LODWORD(v144) = v243 ^ *(_DWORD *)&v160[4 * (BYTE1(v144) ^ 0x61)] ^ (v219 - 432032903 - ((2 * v219) & 0xCC7F66F2));
  int v221 = v144 ^ 0xADE748E2;
  LODWORD(v160) = (v218 + 1537916051 - ((2 * v218) & 0xB7557926)) ^ HIDWORD(v245);
  unsigned int v222 = (v74 + 164443165 - ((2 * v74) & 0x139A683A)) ^ v127 ^ 0xB7EC63;
  LODWORD(v158) = v133 ^ HIDWORD(a21) ^ v216 ^ *(_DWORD *)(v158 + 4 * (v76 ^ 0x42u)) ^ ((v76 ^ 0x2F) - 1482631806 + ((2 * (v76 ^ 0x2F) + 254) & 0x204 ^ 0xEFFBFBFF)) ^ (v142 - 432032903 - ((2 * v142) & 0xCC7F66F2));
  v223 = (char *)*(&off_1003B8530 + SHIDWORD(v242)) - 8;
  int v224 = *(_DWORD *)(v45 - 128);
  v225 = (char *)*(&off_1003B8530 + v224 - 496) - 4;
  LODWORD(v133) = *(_DWORD *)&v223[4 * (v160 ^ 0xA2)];
  v226 = (char *)*(&off_1003B8530 + v224 - 359) - 8;
  LODWORD(v74) = (*(_DWORD *)&v226[4 * (BYTE2(v160) ^ 0x9E)] - 554352298) ^ (*(_DWORD *)&v223[4
                                                                                            * (v158 ^ 0xC9)]
                                                                           + 1768770673);
  LODWORD(v134) = *(_DWORD *)&v223[4 * (v144 ^ 0xC8)];
  uint64_t v227 = v134 - ((2 * v134 - 757425950) & 0xCAA4CC96);
  uint64_t v228 = (*(_DWORD *)&v226[4 * (BYTE2(v158) ^ 0x38)] - 554352298) ^ (*(_DWORD *)&v225[4 * (BYTE3(v144) ^ 0x89)]
                                                                                 - 748464846);
  LODWORD(v144) = *(_DWORD *)&v223[4 * (v222 ^ 0xB9)];
  uint64_t v229 = *(unsigned int *)&v225[4 * ((v160 >> 24) ^ 0xE7)];
  v230 = (char *)*(&off_1003B8530 + v224 - 552) - 4;
  LODWORD(v56) = *(_DWORD *)&v230[4 * (BYTE1(v160) ^ 0xA0)];
  uint64_t v231 = *(unsigned int *)&v230[4 * (BYTE1(v158) ^ 0xE9)];
  int v232 = *(_DWORD *)&v226[4 * (BYTE2(v221) ^ 0x6B)];
  LODWORD(v74) = (v74 - 447584693 - ((2 * v74) & 0xCAA4CC96)) ^ *(_DWORD *)&v230[4
                                                                                               * (BYTE1(v221) ^ 0x29)] ^ (*(_DWORD *)&v225[4 * (HIBYTE(v222) ^ 0x65)] - 748464846);
  unsigned int v233 = *(_DWORD *)&v230[4 * (BYTE1(v222) ^ 0x74)] ^ v245 ^ ((v228 ^ (v133 + 1768770673))
                                                            - 447584693
                                                            - ((2 * (v228 ^ (v133 + 1768770673))) & 0xCAA4CC96));
  LODWORD(v160) = v245 ^ HIDWORD(a21) ^ v127 ^ 0xB7EC63 ^ (v74 + 164443165 - ((2 * v74) & 0x139A683A));
  LODWORD(v156) = v56 ^ v245 ^ HIDWORD(a21) ^ (v227 + 1321185980) ^ (*(_DWORD *)&v225[4 * (BYTE3(v158) ^ 0xB8)]
                                                                                 - 748464846) ^ (*(_DWORD *)&v226[4 * (BYTE2(v222) ^ 0x1D)]
                                                                                               - 554352298);
  v234 = (char *)*(&off_1003B8530 + SHIDWORD(v241)) - 4;
  *(unsigned char *)(v220 + *(void *)(v45 - 256)) = v234[((unsigned __int16)(*(_WORD *)&v230[4 * (BYTE1(v222) ^ 0x74)] ^ v245 ^ ((v228 ^ ((_WORD)v133 + 19569)) + 26187 - ((2 * (v228 ^ ((_WORD)v133 + 19569))) & 0xCC96))) >> 8) ^ 0x99] ^ 0xCD;
  uint64_t v235 = (uint64_t)*(&off_1003B8530 + v224 - 424);
  *(unsigned char *)(v220 + *(void *)(v45 - 248)) = (*(unsigned char *)(v235 + (BYTE2(v160) ^ 0xADLL)) - 13) ^ 0xC5;
  uint64_t v236 = (uint64_t)*(&off_1003B8530 + v224 - 472);
  *(unsigned char *)(v220 + *(void *)(v45 - 208)) = *(unsigned char *)(v236 + (v233 ^ 0xFCLL)) ^ 0xFD;
  *(unsigned char *)(v220 + *(void *)(v45 - 240)) = (*(unsigned char *)(v235 + (BYTE2(v156) ^ 0x8CLL)) - 13) ^ 0x47;
  v237 = (char *)*(&off_1003B8530 + v224 - 441) - 8;
  *(unsigned char *)(v220 + *(void *)(v45 - 216)) = (v237[HIBYTE(v233) ^ 0xDELL] - 6) ^ 0x1B;
  *(unsigned char *)(v220 + *(void *)(v45 - 232)) = ((*(unsigned char *)(v235 + (BYTE2(v233) ^ 0x15))
                                              + ((*(unsigned char *)(v235 + (BYTE2(v233) ^ 0x15)) - 13) ^ 0xDA)
                                              - 12) ^ 0xFE)
                                            + *(unsigned char *)(v235 + (BYTE2(v233) ^ 0x15))
                                            - 13;
  uint64_t v238 = v242 ^ v231 ^ (v232 - 554352298) ^ (v144 + 1768770673) ^ (v229 - ((2 * v229 - 1496929692) & 0xCAA4CC96) - 1196049539);
  *(unsigned char *)(v220 + *(void *)(v45 - 224)) = *(unsigned char *)(v236 + (v238 ^ 5)) ^ 0xF;
  uint64_t v239 = *(void *)(v45 - 184);
  *(unsigned char *)(v220 + *(void *)(v45 - 176)) = (v237[(v160 >> 24) ^ 0x4ELL] - 6) ^ 0xE6;
  *(unsigned char *)(v220 + *(void *)(v45 - 168)) = (v237[BYTE3(v156) ^ 0x9CLL] - 6) ^ 0xB8;
  *(unsigned char *)(v220 + v239) = (v237[BYTE3(v238) ^ 0x67] - 6) ^ 0x91;
  *(unsigned char *)(v220 + *(void *)(v45 - 160)) = *(unsigned char *)(v236 + (v156 ^ 0xF2)) ^ 5;
  *(unsigned char *)(v220 + *(void *)(v45 - 200)) = v234[BYTE1(v156) ^ 0x1ELL] ^ 0x6E;
  *(unsigned char *)(v220 + *(void *)(v45 - 152)) = v234[BYTE1(v238) ^ 0x33] ^ 0x77;
  *(unsigned char *)(v220 + *(void *)(v45 - 192)) = v234[BYTE1(v160) ^ 0xBCLL] ^ 0xB9;
  *(unsigned char *)(v220 + *(void *)(v45 - 144)) = *(unsigned char *)(v236 + (v160 ^ 0x9FLL)) ^ 0xFD;
  *(unsigned char *)(v220 + *(void *)(v45 - 136)) = (*(unsigned char *)(v235 + (BYTE2(v238) ^ 0xDLL)) - 13) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a43 + 8 * ((30 * (((v239 - 2105325624 - ((2 * v239 + 32) & 0x5068F90) + 16) ^ 0x828347C8) < a41)) ^ (v224 + 3434))))(v236, v238, v239, v227, v226, v229, v228, v231, a9, a10, a11, v241, v242, v243, v244, v245, v246, v247, v248,
           v249,
           a21,
           v250,
           v251,
           v252,
           v253,
           v254,
           v255,
           v256,
           v257,
           v258,
           v259,
           v260,
           v261);
}

uint64_t sub_1001FA488(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * v19) = ((v18 - 1229148694) ^ 0xB6BCB663)
                               + v16
                               - ((2 * ((v18 - 1229148694) ^ 0xB6BCB663)) & 0x608967EC);
  BOOL v21 = a7 + 515644271 > ((v18 - 1734) ^ 0x986) + 383562910 || a7 + 515644271 < a4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 8 * ((1388 * v21) ^ (v18 - 1734))))(a1, a2, a13);
}

uint64_t sub_1001FA4A0@<X0>(uint64_t a1@<X8>)
{
  STACK[0x6C8] = 0;
  STACK[0x678] = 0x79503A3CC44F2EC3;
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((((((v2 - 4400) ^ (a1 == v1)) & 1) == 0) * (((v2 - 4464) | 0x44) - 74)) | v2)))();
}

uint64_t sub_1001FA510()
{
  return sub_100280690();
}

uint64_t sub_1001FA530()
{
  BOOL v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ 0x19EF)))(v0 ^ v1) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((v2 - 1679389708) & 0x64196F7F ^ 0x74D)) ^ v2)))();
}

uint64_t sub_1001FA58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,unsigned int a22,int a23,int a24)
{
  unsigned int v28 = 1314530549 * ((2 * (&a19 & 0x713A91B0) - &a19 + 247819848) ^ 0xBFCCE886);
  a21 = a14;
  a24 = v28 ^ 0x4EA001FD;
  a22 = 864341482 - v28;
  a19 = &STACK[0x70766EB78D2F3F48];
  a20 = (v25 + 1780979362) ^ v28;
  uint64_t v29 = (*(uint64_t (**)(unint64_t **))(v26 + 8 * (v25 + 2975)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((13
                                              * (((v27 + (v25 ^ 0xAA) - 31) ^ (a23 == v24 + 26 * (v25 ^ 0x6AA) - 806)) & 1)) ^ v25)))(v29);
}

uint64_t sub_1001FA680(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24,int a25,int a26)
{
  int v29 = (a26 ^ v28) - ((2 * (a26 ^ v28)) & 0xAD52B76) + 90871227;
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * ((v27 + 979) ^ (7971
                                              * (((v29 << (a24 ^ ((v27 - 113) | 0x48) ^ 0x8F)) & 0xFC7C7BB4 ^ 0x8542B34)
                                               + (v29 ^ 0xFB54A861)
                                               + 1204812672 == a2)))))();
}

uint64_t sub_1001FA738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (v8 + v6);
  long long v12 = *(_OWORD *)(v5 + v11 - 15);
  long long v13 = *(_OWORD *)(v5 + v11 - 31);
  uint64_t v14 = v9 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((150 * (((a5 - 345284377) & 0x149499CF ^ 0x9EF) == (v7 & 0xFFFFFFE0))) ^ (a5 - 1986))))();
}

uint64_t sub_1001FA7A8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a3 + (a5 + v6)) = *(void *)(v7 + (a5 + v6));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 == 0) * v8) ^ a2)))();
}

uint64_t sub_1001FA7D8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((127 * (((v0 ^ 0xF29 ^ (v1 == v2)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_1001FA80C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x8EC]) != -509920247) * ((v0 + 1511) ^ (v0 + 1044) ^ 0x217)) ^ v0)))();
}

uint64_t sub_1001FA850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  *(void *)(&a23 + v25 + a2) = 0x6060606060606060;
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * (((((((v24 ^ 0xDA8u) - 3) ^ 0xFFFFFFFFFFFFF6F9) & v23) != 8) * ((v24 ^ 0xDA8) - 2303)) ^ ((v24 ^ 0xDA8) - 3))))();
}

void sub_1001FA8B0(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x49230D716B37AE00) = (((v2 + v1) * (v3 - 1015681393)) ^ 0x5FEDF8F6)
                                         - 1279313924
                                         + ((2 * (v2 + v1) * (v3 - 1015681393)) & 0xBFDBF1EC);
}

void sub_1001FA93C()
{
  *(unsigned char *)(v0 + 24) = 17;
  *(void *)(v0 + 40) = 0;
  JUMPOUT(0x10027A0B8);
}

uint64_t sub_1001FA960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v9 = a6 + 1203;
  int v10 = a6 - 2465;
  int v11 = a6 - 358;
  unint64_t v12 = STACK[0x6D0];
  unint64_t v13 = STACK[0xAA8];
  int v14 = 366490169 * ((-1882573102 - ((v7 - 224) | 0x8FCA36D2) + ((v7 - 224) | 0x7035C92D)) ^ 0x669B9F69);
  *(void *)(v7 - 224) = STACK[0x7B0];
  *(void *)(v7 - 200) = v12;
  *(void *)(v7 - 192) = v13;
  *(_DWORD *)(v7 - 212) = (a6 + 160) ^ v14;
  *(_DWORD *)(v7 - 208) = 232514998 - v14;
  *(_DWORD *)(v7 - 216) = v14 + 62870437;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v8 + 8 * (a6 ^ 0x1B48)))(v7 - 224);
  unint64_t v16 = STACK[0x258];
  int v17 = *(_DWORD *)(v7 - 204);
  LODWORD(STACK[0x93C]) = v17;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((945 * (v17 == ((v6 + v10 - 1676) ^ v9))) ^ v11)))(v15);
}

uint64_t sub_1001FAA40()
{
  int v4 = v1 + v0 + ((v2 - 992302659) & 0x3B255F9B);
  if (v4 >= 0) {
    unsigned int v5 = v1 + v0 + ((v2 - 992302659) & 0x3B255F9B);
  }
  else {
    unsigned int v5 = -v4;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v5 > 0x82) * (v2 - 959)) ^ v2)))();
}

uint64_t sub_1001FAA84()
{
  int v3 = v0 ^ 0xC5;
  int v4 = (v0 ^ 0xC5) - 1819;
  unint64_t v5 = (v4 ^ 0xC08058A0) + v1;
  STACK[0x9C8] = v5;
  unint64_t v6 = STACK[0x738];
  STACK[0x9D0] = STACK[0x738];
  return (*(uint64_t (**)(void))(v2 + 8 * (((0x2CBDB0E44E133204 - v6 + v5 > 9) * (v4 ^ 0x16F6)) ^ v3)))();
}

uint64_t sub_1001FAB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v16 = 142545853 * (((v15 - 128) & 0x618A89D5 | ~((v15 - 128) | 0x618A89D5)) ^ 0xB48AD945);
  *(void *)(v15 - 120) = a13;
  *(_DWORD *)(v15 - 112) = (v13 - 651) ^ v16;
  *(_DWORD *)(v15 - 128) = (((a6 << 6) & 0xE9F7BC00) - 1960903682 + ((((v13 - 2197) | 0x900) + 1962661148) ^ (32 * a6))) ^ v16;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v13 + 2558)))(v15 - 128);
  return (*(uint64_t (**)(uint64_t))(v14 + 8
                                                  * ((695 * ((*a10 - 330117363) < 0x7FFFFFFF)) ^ v13)))(v17);
}

uint64_t sub_1001FABD8()
{
  uint64_t v7 = v4;
  unsigned int v8 = v0 + 366490169 * ((2 * (&v6 & 0x5A616778) - &v6 + 631150727) ^ 0x3330CEC3) + 3426;
  (*(void (**)(uint64_t *))(v1 + 8 * (v0 ^ 0x1616)))(&v6);
  uint64_t v7 = v5;
  unsigned int v8 = v0
     + 877
     + 366490169 * ((1570847616 - (&v6 | 0x5DA13B80) + (&v6 | 0xA25EC47F)) ^ 0xB4F0923B)
     + 2549;
  (*(void (**)(uint64_t *))(v1 + 8 * ((v0 + 877) ^ 0x15E3)))(&v6);
  return (v2 - 847203058);
}

uint64_t sub_1001FACF4@<X0>(__int16 a1@<W8>)
{
  LOWORD(STACK[0x942]) = a1;
  return sub_1002ACBE0();
}

uint64_t sub_1001FAD08()
{
  *(void *)(v5 - 136) = v3;
  *(_DWORD *)(v5 - 128) = (v2 + 770) ^ (1697562443
                                      * ((((2 * (v5 - 136)) | 0xC83680A4) - (v5 - 136) - 1679507538) ^ 0xB38B78D6));
  *(void *)(v5 - 120) = v0;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x1C55)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((((v2 + 1302532361) & 0xB25CE9F2 ^ ((v2 ^ 0x704) + 3370))
                                                   * (v4 == 163480551)) ^ v2)))(v6);
}

uint64_t sub_1001FADC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, int a20)
{
  unsigned int v22 = 1314530549
      * (((&a15 | 0x9617885) - &a15 + (&a15 & 0xF69E8778)) ^ 0xB868FE4B);
  a15 = &STACK[0x70766EB78D2F3F08];
  a16 = (v21 + 1780979963) ^ v22;
  a18 = 934190171 - v22;
  a20 = v22 ^ 0x4EA001FB;
  a17 = a14;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v20 + 8 * (v21 ^ 0x1608u)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((a19 == 245 * (v21 ^ 0x45E) + 847202568) * ((v21 ^ 0xE6A) - 29)) ^ v21)))(v23);
}

uint64_t sub_1001FAEBC(uint64_t a1)
{
  BOOL v4 = *(_DWORD *)(v2 - 0x69166E42B3299567) - 874765251 != ((v3 - 1052) ^ 0xAF7);
  return (*(uint64_t (**)(uint64_t, void))(v1 + 8 * ((v4 | (2 * v4)) ^ (v3 - 834))))(a1, *(void *)(v2 - 0x69166E42B3299573));
}

uint64_t sub_1001FAF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  if (v50 == 847203058)
  {
    int v53 = (void *)STACK[0x670];
    uint64_t v54 = *(void *)(STACK[0x670] + 8);
    int v55 = (void *)STACK[0x468];
    v55[1] = v54;
    *int v55 = *v53;
    return (*(uint64_t (**)(void))(v51
                                + 8
                                * (((((v54 == 0) ^ (a50 - 37)) & 1) * ((a50 ^ 0x4A4) - 3414)) ^ (a50 + 91))))();
  }
  else if (v50 == 847161006)
  {
    return (*(uint64_t (**)(void))(v51
                                + 8
                                * (((*(void *)(STACK[0x640] - 0x46197683F7D18948) == 0)
                                  * ((28 * (a50 ^ 0x9C2)) ^ (a50 - 2360))) ^ (a50 - 1171))))();
  }
  else
  {
    return (*(uint64_t (**)(void))(v51
                                + 8
                                * (int)(((*(void *)(STACK[0x468] + 24) == 0)
                                       * ((a50 + 827267606) ^ 0x314F22AD ^ (a50 + 827267606) & 0xCEB0DCFF ^ 0x235)) ^ (a50 - 2045))))();
  }
}

uint64_t sub_1001FB058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9)
{
  *int v10 = a1;
  *a9 = v9;
  return sub_100215478();
}

uint64_t sub_1001FB064(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 + 2266) | 0x444) ^ 0x59F) * ((v1 & 0x18) == 0)) ^ (a1 + 1773))))();
}

uint64_t sub_1001FB0A0()
{
  unsigned int v9 = v3 + ((((2 * &v7) | 0x24F4A9F0) - &v7 - 310007032) ^ 0x4D402BC) * v1 + 3748;
  uint64_t v8 = v5;
  (*(void (**)(uint64_t *))(v0 + 8 * (v3 + 3916)))(&v7);
  uint64_t v8 = v6;
  unsigned int v9 = ((v3 + 2305853) & 0xFFDCCFFE) + (&v7 ^ 0x16AE5644) * v1 + 3944;
  (*(void (**)(uint64_t *))(v0 + 8 * (int)((v3 + 2305853) & 0xFFDCCFEE | 0x1010)))(&v7);
  return (v2 - 847203058);
}

uint64_t sub_1001FB188(int a1, uint64_t a2, int a3)
{
  unsigned int v7 = *(unsigned __int8 *)(v4 + 3) + (a1 ^ 0xFFFFFD71);
  return (*(uint64_t (**)(void))(v6 + 8 * ((2193 * ((v3 & (2 * v7)) + (v7 ^ a3) == a3)) ^ v5)))();
}

uint64_t sub_1001FB1D4()
{
  return sub_1002C05F4();
}

uint64_t sub_1001FB1E4@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v2 + 8 * (a1 ^ 0x11B0)))(v1 - 0x6BBE7547D3B34F0FLL);
  STACK[0x7D0] = 0x6BBE7547D3B34F0FLL;
  return sub_1002B97E8();
}

uint64_t sub_1001FB22C()
{
  int v6 = 142545853 * ((v5 - 144) ^ 0x2AFFAF6F);
  *(_DWORD *)(v5 - 136) = v6 ^ 0x7B7C7201;
  *(_DWORD *)(v5 - 132) = v6 + v3 + 699;
  *(void *)(v5 - 144) = v10;
  uint64_t v7 = v0;
  (*(void (**)(uint64_t))(v2 + 8 * (v3 ^ 0x1D17)))(v5 - 144);
  *(_DWORD *)(v5 - 136) = (v3 + 152) ^ (366490169
                                      * ((((v5 - 144) | 0x380977F5) - ((v5 - 144) & 0x380977F5)) ^ 0x2EA721B1));
  *(void *)(v5 - 144) = v10;
  *(void *)(v5 - 112) = v1;
  *(void *)(v5 - 104) = v4;
  *(void *)(v5 - 128) = v7;
  *(void *)(v5 - 120) = v7;
  (*(void (**)(uint64_t))(v2 + 8 * (v3 + 771)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = v3 - 857 + 476588053 * ((v5 + 55115162 - 2 * ((v5 - 144) & 0x348FE2A)) ^ 0xBEB5FA69) - 1971;
  *(void *)(v5 - 144) = v9;
  *(void *)(v5 - 136) = v7;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v3 - 857) ^ 0x1E6E)))(v5 - 144);
}

uint64_t sub_1001FB388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((476 * (v6 < ((a6 - 3193) | 0x530u) - 1368)) ^ a6)))();
}

uint64_t sub_1001FB3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return sub_100222650(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1001FB3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  int v34 = v31 ^ 0xF99;
  int v35 = ((v31 ^ 0xF99) - 1153031234) & 0x44B9D9FA;
  uint64_t v36 = (*(uint64_t (**)(void))(v33 + 8 * (v31 ^ 0x11B4u)))(((v31 ^ 0xF99) - 2181) ^ LODWORD(STACK[0x7E0]) ^ 0xE19B3FA5);
  unint64_t v37 = STACK[0x258];
  STACK[0xA78] = v36 + 0x6BBE7547D3B34F0FLL;
  if (v36) {
    a31 = v32;
  }
  LODWORD(STACK[0xA84]) = a31;
  return (*(uint64_t (**)(void))(v37 + 8 * (((v36 == 0) * (v35 ^ 0x99D)) ^ v34)))();
}

uint64_t sub_1001FB484(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 16) = a5;
  return result;
}

uint64_t sub_1001FB48C(uint64_t a1, uint64_t a2, int a3)
{
  *(unsigned char *)(a1 + (v5 + v4)) = *(unsigned char *)(v3 + (v5 + v4));
  return (*(uint64_t (**)(void))(v8 + 8 * ((289 * (v5 - 1 == (((a3 + v7) | 0x8D5) ^ (v6 - 2637)))) ^ (a3 + v7 + 1180))))();
}

uint64_t sub_1001FB4D4@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = ((1657 * (v2 ^ 0x4AEu)) ^ (unint64_t)(a1 + 975)) + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((88 * (v5 - v4 + 1120029286 > 7)) ^ v2)))();
}

uint64_t sub_1001FB534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  a21 = v21 - (((&a19 | 0x14E2447B) + (~&a19 | 0xEB1DBB84)) ^ 0xD3632433) * v23 + 3093;
  a19 = &STACK[0x75464D914B7248A7];
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v22 + 8 * (v21 + 4116)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((a20 == v25) * (v21 ^ (v24 - 434) ^ (v24 + 11))) | v21)))(v26);
}

uint64_t sub_1001FB5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v14
                              + 8 * (((((a13 == 0) ^ (11 * (v13 ^ 0x38))) & 1) * (v13 - 3821)) ^ v13)))();
}

uint64_t sub_1001FB614(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  __int16 v2 = *(_DWORD *)(result + 4) ^ (11565 * (result ^ 0x1BA8));
  unsigned int v3 = ((v2 & 0x1FF ^ 0xFFFFFF6C) - 539186110 + ((2 * (v2 & 0x1FF)) | 0x4046A77E)) ^ 0x2178712F;
  *(_DWORD *)(v1 - 0x560E26B5DF241DC4) = (((2 * v3) | 0x75D06D4) - v3 - 61768554) ^ 0x494E2748;
  *(void *)(v1 - 0x560E26B5DF241DE4) = 0xB5D9B9B1A6DBE83;
  *(_DWORD *)(v1 - 0x560E26B5DF241DC8) = 666007420;
  int v4 = v2 ^ 3;
  if (v4 == 1)
  {
    int v5 = 666007436;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x560E26B5DF241DCCLL) = -1989060920;
    int v5 = 666007440;
LABEL_5:
    *(void *)(v1 - 0x560E26B5DF241DDCLL) = 0xA56E1CB12DE69439;
    *(void *)(v1 - 0x560E26B5DF241DD4) = 0x5A91E34ED2196BC6;
    *(_DWORD *)(v1 - 0x560E26B5DF241DC8) = v5;
  }
  *(_DWORD *)uint64_t result = 419559555;
  return result;
}

uint64_t sub_1001FB788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,char a62,int a63)
{
  int v103 = LODWORD(STACK[0x274]) | (LODWORD(STACK[0x270]) << 7);
  int v104 = a51 ^ LODWORD(STACK[0x38C]);
  LODWORD(STACK[0x634]) = v104;
  LODWORD(STACK[0x640]) = a57 ^ a56;
  int v105 = LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x414]);
  int v106 = LODWORD(STACK[0x214]) ^ a100;
  LODWORD(STACK[0x62C]) = a58 ^ a59;
  LODWORD(STACK[0x6C4]) = a70 ^ a71;
  LODWORD(STACK[0x610]) = a49 - LODWORD(STACK[0x5DC]);
  int v107 = a52 ^ (LODWORD(STACK[0x494]) >> 20) ^ (LODWORD(STACK[0x480]) >> 1);
  int v108 = ((v107 ^ 0x6A7AE8A5) + 529321637 - 2 * ((v107 ^ 0x6A7AE8A5) & 0x1F8CCEBF ^ v107 & 0x1A)) ^ LODWORD(STACK[0x450]);
  unsigned int v109 = (v108 - 154269092 - ((2 * v108) & 0xED9C14B8)) ^ LODWORD(STACK[0x448]);
  unsigned int v110 = (v109 + 1721825895 - ((2 * v109) & 0xCD41F4CE)) ^ LODWORD(STACK[0x460]);
  int v111 = (v110 - 1159271086 - ((2 * v110) & 0x75CDDAA4)) ^ LODWORD(STACK[0x458]);
  int v112 = (v111 - 1972708357 - ((2 * v111) & 0x14D5B7F6)) ^ LODWORD(STACK[0x44C]);
  unsigned int v113 = (v112 + 1111596090 - ((2 * v112) & 0x84833874)) ^ a54;
  unsigned int v114 = (v113 - 559461437 - ((2 * v113) & 0xBD4E9786)) ^ a53;
  unsigned int v115 = (v114 - 1015101147 - ((2 * v114) & 0x86FD924A)) ^ LODWORD(STACK[0x444]);
  unsigned int v116 = (v115 - 286983159 - ((2 * v115) & 0xDDC9F812)) ^ a55;
  int v117 = (v116 + 3678097 - ((2 * v116) & 0x703F22)) ^ a50;
  unsigned int v118 = (((LODWORD(STACK[0x22C]) >> 26) ^ (SLODWORD(STACK[0x22C]) >= 0))
        - 1707179615
        - 2
        * (((LODWORD(STACK[0x22C]) >> 26) ^ (SLODWORD(STACK[0x22C]) >= 0)) & 0xFFFFFFE7 ^ (LODWORD(STACK[0x22C]) >> 26) & 6)) ^ a102;
  int v119 = (v118 + 1172222702 - ((2 * v118) & 0xBBD65DC)) ^ a97;
  int v120 = (v119 + 1884390729 - ((2 * v119) & 0x60A30A92)) ^ LODWORD(STACK[0x204]);
  int v121 = (v120 + 297407094 - ((2 * v120) & 0x237424EC)) ^ a98;
  int v122 = (v121 - 1258905123 - ((2 * v121) & 0x69ED43BA)) ^ LODWORD(STACK[0x200]);
  int v123 = (v122 + 1662645054 - ((2 * v122) & 0x4633E67C)) ^ a101;
  int v124 = (v123 - 925585231 - ((2 * v123) & 0x11A96162)) ^ a96;
  int v125 = (v124 - 946635153 - ((2 * v124) & 0xF26FCDE)) ^ a103;
  int v126 = (v125 + 1922700219 - ((2 * v125) & 0x65342776)) ^ a94;
  int v127 = a87 ^ a82 ^ (v126 + 1059760205 - ((2 * v126) & 0x7E55509A));
  unsigned int v128 = a95 & 0x17448E2 ^ (LODWORD(STACK[0x22C]) >> 3) ^ 0xC8CD0E ^ (v127 & 0xE68BB71D ^ a95 & 0x8BB71D | v127 & 0x197448E2);
  unsigned int v129 = a86 ^ a85 ^ (v128 - 600090336 - ((2 * v128) & 0xB876B240));
  int v130 = (v129 >> 21) ^ (v129 >> 27);
  int v131 = (2 * LODWORD(STACK[0x22C])) ^ (LODWORD(STACK[0x22C]) << 6) ^ (LODWORD(STACK[0x22C]) << 29) ^ (4 * v129) ^ (v129 << 11) ^ (32 * v129) ^ (4 * v130) ^ (32 * v130) ^ (v130 << 11) ^ 0x4FB9F61C;
  unsigned int v132 = (v131 + 1133738770 - ((2 * v131) & 0x8726F624)) ^ a93;
  int v133 = (v132 + 180164814 - ((2 * v132) & 0x157A319C)) ^ LODWORD(STACK[0x210]);
  int v134 = (v133 - 1620876658 - ((2 * v133) & 0x3EC6C51C)) ^ LODWORD(STACK[0x20C]);
  int v135 = (v134 + 405313023 - ((2 * v134) & 0x30512BFE)) ^ LODWORD(STACK[0x3E0]);
  unsigned int v136 = (v135 - 587868569 - ((2 * v135) & 0xB9EBACCE)) ^ LODWORD(STACK[0x3D8]);
  unsigned int v137 = (v136 - 620410310 - ((2 * v136) & 0xB60A9474)) ^ LODWORD(STACK[0x3D0]);
  unsigned int v138 = (v137 - 95864222 - ((2 * v137) & 0xF49274C4)) ^ LODWORD(STACK[0x3DC]);
  unsigned int v139 = (v138 - 173393929 - ((2 * v138) & 0xEB546FEE)) ^ LODWORD(STACK[0x564]);
  unsigned int v140 = (v139 + 1655271596 - ((2 * v139) & 0xC552E158)) ^ LODWORD(STACK[0x208]);
  int v141 = (v140 - 1151663805 - ((2 * v140) & 0x76B60286)) ^ LODWORD(STACK[0x3CC]);
  unsigned int v142 = (v141 - 228132766 - ((2 * v141) & 0xE4CDF0C4)) ^ LODWORD(STACK[0x3D4]);
  int v143 = (v142 + 696230121 - ((2 * v142) & 0x52FF41D2)) ^ LODWORD(STACK[0x3C4]);
  int v144 = (v143 + 417262884 - ((2 * v143) & 0x31BDDA48)) ^ LODWORD(STACK[0x3C8]);
  int v145 = (v144 - 1481671822 - ((2 * v144) & 0x4F5EF6E4)) ^ LODWORD(STACK[0x560]);
  int v146 = (v145 + 850277926 - ((2 * v145) & 0x655C6C4C)) ^ LODWORD(STACK[0x55C]);
  unsigned int v147 = (v146 - ((2 * v146) & 0xF3E56346) + 2045948323) ^ v129;
  int v148 = a68 ^ (a72 >> 21);
  int v149 = v130 ^ (32 * a83) ^ (16 * a83) ^ (a73 << 30) ^ a84 ^ ((v147 ^ 0x7993CB5C)
                                                             - 2 * ((v147 ^ 0x7993CB5C) & 0x4B860687 ^ v147 & 1)
                                                             - 880408954) ^ (4 * a72) ^ (32 * a72) ^ (a72 << 11) ^ (4 * v148) ^ (32 * v148) ^ (v148 << 11) ^ 0x798E7285;
  int v150 = (v149 + 860205347 - ((2 * v149) & 0x668B6246)) ^ LODWORD(STACK[0x558]);
  int v151 = (v150 - 1132863995 - ((2 * v150) & 0x78F3BC0A)) ^ LODWORD(STACK[0x3A0]);
  int v152 = (v151 + 276375543 - ((2 * v151) & 0x20F24FEE)) ^ LODWORD(STACK[0x550]);
  int v153 = (v152 - 1373621246 - ((2 * v152) & 0x5C406804)) ^ LODWORD(STACK[0x554]);
  unsigned int v154 = (v153 - 427527619 - ((2 * v153) & 0xCD08E47A)) ^ LODWORD(STACK[0x3C0]);
  int v155 = (v154 - 2071525455 - ((2 * v154) & 0x90E0F62)) ^ LODWORD(STACK[0x3B4]);
  int v156 = (v155 - 2071288988 - ((2 * v155) & 0x91546C8)) ^ a77;
  int v157 = (v156 + 195985022 - ((2 * v156) & 0x175CFCFC)) ^ LODWORD(STACK[0x3B0]);
  int v158 = (v157 - 1124479146 - ((2 * v157) & 0x79F39EAC)) ^ LODWORD(STACK[0x3A8]);
  int v159 = (v158 - 1669593928 - ((2 * v158) & 0x38F80970)) ^ LODWORD(STACK[0x3A4]);
  int v160 = (v159 - 1124456693 - ((2 * v159) & 0x79F44E16)) ^ LODWORD(STACK[0x54C]);
  int v161 = (v160 + 674666948 - ((2 * v160) & 0x506D3388)) ^ LODWORD(STACK[0x3AC]);
  unsigned int v162 = (v161 + 1907200932 - ((2 * v161) & 0xE35B2748)) ^ LODWORD(STACK[0x3B8]);
  unsigned int v163 = a72 ^ (v162 - ((2 * v162) & 0xC4FFFC4A) - 494928347) ^ 0xEB21C38C;
  int v164 = v148 ^ (v163 - ((2 * v163) & 0xB1020954) - 662633302) ^ (LODWORD(STACK[0x398]) << 13) ^ (LODWORD(STACK[0x398]) << 12) ^ (~LODWORD(STACK[0x398]) << 31) ^ ((unint64_t)(LODWORD(STACK[0x398]) ^ 0x8DFC95FF) << (((STACK[0x488] & 0xD0 ^ 0xC0 | STACK[0x488] & 0xD0 ^ 0x13) + 63) & 0xFE));
  BOOL v165 = SLODWORD(STACK[0x494]) >= 0;
  LODWORD(STACK[0x630]) = v165;
  unsigned int v166 = v104 ^ (v117 - 54126780 - ((2 * v117) & 0xF98C2E88));
  int v167 = v165 ^ (v166 >> 21) ^ (v166 >> 27);
  int v168 = v164 ^ (4 * v166) ^ (32 * v166) ^ (v166 << 11) ^ (4 * v167) ^ (32 * v167) ^ (v167 << 11) ^ 0x6550B265;
  int v169 = (v168 + 553202206 - ((2 * v168) & 0x41F2643C)) ^ LODWORD(STACK[0x43C]);
  unsigned int v170 = (v169 + 1159377918 - ((2 * v169) & 0x8A3567FC)) ^ LODWORD(STACK[0x58C]);
  int v171 = (v170 + 456852359 - ((2 * v170) & 0x3676070E)) ^ LODWORD(STACK[0x580]);
  unsigned int v172 = (v171 - 651553974 - ((2 * v171) & 0xB2542694)) ^ a61;
  int v173 = (v172 + 283893092 - ((2 * v172) & 0x21D7BAC8)) ^ LODWORD(STACK[0x454]);
  int v174 = (v173 - 1077921990 - ((2 * v173) & 0x7F806E74)) ^ LODWORD(STACK[0x574]);
  unsigned int v175 = (v174 - 620657496 - ((2 * v174) & 0xB6030950)) ^ a60;
  int v176 = (v175 - 1895618757 - ((2 * v175) & 0x1E064E76)) ^ LODWORD(STACK[0x578]);
  int v177 = (v176 - 1297350255 - ((2 * v176) & 0x65580322)) ^ LODWORD(STACK[0x570]);
  unsigned int v178 = (v177 + 2022063456 - ((2 * v177) & 0xF10C7AC0)) ^ LODWORD(STACK[0x394]);
  int v179 = (v178 - 2048376989 - ((2 * v178) & 0xBD07EC6)) ^ LODWORD(STACK[0x390]);
  int v180 = (v179 - 1500687077 - ((2 * v179) & 0x4D1AAA36)) ^ LODWORD(STACK[0x47C]);
  unsigned int v181 = v166 ^ 0xDE14F5DD ^ (v180 - ((2 * v180) & 0xA6B752BE) - 748967585);
  LODWORD(STACK[0x6C8]) = (v181 - ((2 * v181) & 0xABF99536) + 1442630299) ^ v167;
  unsigned int v182 = STACK[0x4B4];
  unsigned int v183 = (LODWORD(STACK[0x4B4]) ^ 0x595D88F0u) >> ((a62 & 0xE ^ 4) + (a62 & 0xE ^ 0xA));
  unsigned int v184 = v183 + 524889249 - ((2 * v183) & 0x3E925942);
  int v185 = HIBYTE(LODWORD(STACK[0x4B8])) ^ (LODWORD(STACK[0x4B8]) >> 17) ^ 0x219;
  int v186 = v185 + 524889249 - ((2 * v185) & 0x5942);
  int v187 = (v184 >> 27) ^ (v184 >> 30);
  int v188 = ((v184 ^ v186) - ((2 * (v184 ^ v186)) & 0x16E96D5A) + 192198317) ^ a57 ^ a56;
  unsigned int v189 = (v188 - 268876769 - ((2 * v188) & 0xDFF2883E)) ^ a65;
  int v190 = (v189 - 1159803385 - ((2 * v189) & 0x75BD9C0E)) ^ a64;
  int v191 = (v190 + 62492704 - ((2 * v190) & 0x7732040)) ^ LODWORD(STACK[0x590]);
  int v192 = (v191 + 899659121 - ((2 * v191) & 0x6B3F6AE2)) ^ LODWORD(STACK[0x490]);
  int v193 = (v192 + 423498404 - ((2 * v192) & 0x327C2548)) ^ a63;
  unsigned int v194 = (v193 - 54608121 - ((2 * v193) & 0xF97D7E0E)) ^ LODWORD(STACK[0x39C]);
  unsigned int v195 = (v194 + 1899054932 - ((2 * v194) & 0xE2628EA8)) ^ LODWORD(STACK[0x48C]);
  unsigned int v196 = (v195 - 991643417 - ((2 * v195) & 0x89C971CE)) ^ LODWORD(STACK[0x4A8]);
  int v197 = (LODWORD(STACK[0x4B4]) >> 9) ^ 0x33289882;
  LODWORD(STACK[0x63C]) = v197;
  int v198 = (v196 + 855914054 - ((2 * v196) & 0x66086C8C)) ^ v197;
  int v199 = (v198 - 1539813646 - ((2 * v198) & 0x48709DE4)) ^ a67;
  unsigned int v200 = (v199 - 63008688 - ((2 * v199) & 0xF87D20A0)) ^ a66;
  int v201 = STACK[0x5B8];
  int v202 = (LODWORD(STACK[0x5B8]) >> 20) ^ (LODWORD(STACK[0x5B8]) >> 1) ^ 0x43A113CD;
  unsigned int v203 = (v202 + 1497968267 - ((2 * v202) & 0xB2925D16)) ^ LODWORD(STACK[0x4C4]);
  unsigned int v204 = (v203 + 1783296369 - ((2 * v203) & 0xD495E2E2)) ^ LODWORD(STACK[0x4C8]);
  unsigned int v205 = (v204 - 718504231 - ((2 * v204) & 0xAA58FDB2)) ^ a92;
  unsigned int v206 = (v205 - 315644501 - ((2 * v205) & 0xDA5F4B56)) ^ LODWORD(STACK[0x4D8]);
  unsigned int v207 = (v206 - 939000836 - ((2 * v206) & 0x900FF7F8)) ^ LODWORD(STACK[0x4CC]);
  unsigned int v208 = (v207 - 1003298429 - ((2 * v207) & 0x8865C306)) ^ LODWORD(STACK[0x4C0]);
  unsigned int v209 = (v208 - 315860220 - ((2 * v208) & 0xDA58B608)) ^ a90;
  int v210 = (v209 + 1036197180 - ((2 * v209) & 0x7B863A78)) ^ a89;
  int v211 = (v210 + 527759126 - ((2 * v210) & 0x3EE9EE2C)) ^ LODWORD(STACK[0x4BC]);
  int v212 = (v211 + 670779244 - ((2 * v211) & 0x4FF68ED8)) ^ a91;
  unsigned int v213 = (v212 - 838232821 - ((2 * v212) & 0x9C132A16)) ^ a88;
  int v214 = LODWORD(STACK[0x27C]) ^ (LODWORD(STACK[0x2C0]) >> 26) ^ 0x39;
  int v215 = (v214 + 734049224 - ((2 * v214) & 0x16) + 3) ^ LODWORD(STACK[0x2B8]);
  int v216 = v215 + 1733877355 - ((2 * v215) & 0x4EB1BCD8) + 1;
  int v217 = ((v216 ^ LODWORD(STACK[0x2A8])) - 1088418481 - 2 * ((v216 ^ LODWORD(STACK[0x2A8])) & 0x3F200D5F ^ v216 & 0x10)) ^ LODWORD(STACK[0x290]);
  int v218 = (v217 + 1426223790 - ((2 * v217) & 0x2A04E55C)) ^ LODWORD(STACK[0x568]);
  int v219 = (v218 + 1422745406 - ((2 * v218) & 0x299ABE7C)) ^ LODWORD(STACK[0x28C]);
  int v220 = (v219 - 1524110087 - ((2 * v219) & 0x4A4FD9F2)) ^ LODWORD(STACK[0x438]);
  int v221 = (v220 + 1974227707 - ((2 * v220) & 0x6B58A5F6)) ^ LODWORD(STACK[0x288]);
  unsigned int v222 = (v221 + 1822947326 - ((2 * v221) & 0xD94FEFFC)) ^ LODWORD(STACK[0x2B4]);
  unsigned int v223 = (v222 + 1239745180 - ((2 * v222) & 0x93CA0538)) ^ LODWORD(STACK[0x284]);
  int v224 = (v223 - 1816698421 - ((2 * v223) & 0x276EC396)) ^ LODWORD(STACK[0x428]);
  int v225 = (v224 + 746750902 - ((2 * v224) & 0x5905076C)) ^ LODWORD(STACK[0x278]);
  int v226 = v105 ^ (v225 + 905121586 - ((2 * v225) & 0x6BE61E64));
  HIDWORD(v227) = v226 ^ 0x19D575F;
  LODWORD(v227) = v226 ^ 0x2000000;
  int v228 = (v227 >> 25) ^ v103;
  HIDWORD(v227) = v228 ^ 0x15;
  LODWORD(v227) = v228 ^ 0x86EF3A80;
  unsigned int v229 = a99 ^ LODWORD(STACK[0x4D0]) ^ (v213 + 1725725859 - ((2 * v213) & 0xCDB8F946));
  unsigned int v230 = ((v227 >> 7) - 480502734 - ((2 * (v227 >> 7)) & 0xC6B83862) - 1) ^ (((LODWORD(STACK[0x2C0]) >> 3) ^ 0x1CEABAFC)
                                                                           - 480502734
                                                                           + (~(2
                                                                              * ((LODWORD(STACK[0x2C0]) >> 3) ^ 0x1CEABAFC)) | 0xF947C79D));
  int v231 = 2 * LODWORD(STACK[0x2C0]);
  int v232 = LODWORD(STACK[0x294]) ^ (LODWORD(STACK[0x2C0]) << 6) ^ v231 ^ (v230 << 11) ^ (32 * v230) ^ (4 * v230) ^ 0x65346384;
  int v233 = (v232 - 413804572 - 2 * (v232 & 0x6755D7E6 ^ v231 & 2)) ^ LODWORD(STACK[0x2C0]);
  unsigned int v234 = (v233 + 1784705111 - ((2 * v233) & 0xD4C0E0AE)) ^ LODWORD(STACK[0x2BC]);
  unsigned int v235 = (v234 - 891714273 - ((2 * v234) & 0x95B30A3E)) ^ LODWORD(STACK[0x2B0]);
  int v236 = (v235 + 882177096 - ((2 * v235) & 0x6929E890)) ^ LODWORD(STACK[0x420]);
  unsigned int v237 = (v236 + 1094166120 - ((2 * v236) & 0x826F4CD0)) ^ LODWORD(STACK[0x430]);
  int v238 = (v237 + 908803902 - ((2 * v237) & 0x6C567E7C)) ^ LODWORD(STACK[0x298]);
  int v239 = (v238 - 1302529583 - ((2 * v238) & 0x64B9F3A2)) ^ LODWORD(STACK[0x2A0]);
  int v240 = (v239 + 664790047 - ((2 * v239) & 0x4F3FC83E)) ^ LODWORD(STACK[0x434]);
  int v241 = (v240 + 163176775 - ((2 * v240) & 0x1373C28E)) ^ LODWORD(STACK[0x2AC]);
  unsigned int v242 = (v241 + 1609538699 - ((2 * v241) & 0xBFDF3916)) ^ LODWORD(STACK[0x418]);
  unsigned int v243 = (v242 + 1190218770 - ((2 * v242) & 0x8DE29824)) ^ LODWORD(STACK[0x424]);
  int v244 = (v243 - 1419727764 - ((2 * v243) & 0x56C158D8)) ^ LODWORD(STACK[0x41C]);
  unsigned int v245 = (v244 - 284365264 - ((2 * v244) & 0xDE19DC60)) ^ LODWORD(STACK[0x42C]);
  int v246 = (v245 + 344900683 + ~(2 * (v245 & 0x148EC44B ^ v242 & 1))) ^ LODWORD(STACK[0x29C]);
  int v247 = (v246 + 816044499 - ((2 * v246) & 0x6147B3A6)) ^ LODWORD(STACK[0x2A4]);
  unsigned int v248 = (v230 >> 27) ^ ((((2 * (v227 >> 7)) & 0xC6B83862) - ((v227 >> 7) - 480502734)) >> 30) ^ (v230 >> 21);
  unsigned int v249 = v230 ^ 0xCFDC229E ^ (v247 - ((2 * v247) & 0xD549432A) - 358309483);
  unsigned int v250 = (LODWORD(STACK[0x26C]) << 30) ^ (32 * LODWORD(STACK[0x268])) ^ (16 * LODWORD(STACK[0x268])) ^ 0xD7A86950;
  int v251 = (v250 + 112677449 - ((2 * v250) & 0xD6EA480)) ^ LODWORD(STACK[0x3F0]);
  int v252 = (v251 - 1593207216 - ((2 * v251) & 0x42132CA0)) ^ LODWORD(STACK[0x3F4]);
  unsigned int v253 = (v252 + 1822475441 - ((2 * v252) & 0xD9418962)) ^ LODWORD(STACK[0x40C]);
  int v254 = (v253 + 705040282 - ((2 * v253) & 0x540C1F34)) ^ LODWORD(STACK[0x410]);
  unsigned int v255 = (v254 - 541107490 - ((2 * v254) & 0xBF7EB5BC)) ^ LODWORD(STACK[0x260]);
  unsigned int v256 = (v255 + 1940648513 - ((2 * v255) & 0xE757E482)) ^ LODWORD(STACK[0x3E8]);
  unsigned int v257 = (v256 - 655151574 - ((2 * v256) & 0xB1E65C54)) ^ LODWORD(STACK[0x23C]);
  unsigned int v258 = (v257 + 2146719144 - ((2 * v257) & 0xFFE8AB50)) ^ LODWORD(STACK[0x240]);
  int v259 = (v258 - 1870594411 - ((2 * v258) & 0x2101FD2A)) ^ LODWORD(STACK[0x408]);
  unsigned int v260 = (v259 + 1371823468 - ((2 * v259) & 0xA388BAD8)) ^ LODWORD(STACK[0x3E4]);
  int v261 = (v260 + 949934875 - ((2 * v260) & 0x713DB636)) ^ LODWORD(STACK[0x404]);
  unsigned int v262 = (v261 - 1031285201 - ((2 * v261) & 0x850FAC5E)) ^ LODWORD(STACK[0x3EC]);
  int v263 = (((LODWORD(STACK[0x26C]) >> 2) ^ 0xE755D7)
        - 2057061940
        - ((2 * ((LODWORD(STACK[0x26C]) >> 2) ^ 0xE755D7)) & 0xAC77398)) ^ LODWORD(STACK[0x258]);
  int v264 = (v263 - 1149203176 - ((2 * v263) & 0x77011A30)) ^ LODWORD(STACK[0x254]);
  unsigned int v265 = (v264 + 1855696375 - ((2 * v264) & 0xDD375BEE)) ^ LODWORD(STACK[0x248]);
  unsigned int v266 = (LODWORD(STACK[0x280]) >> 27) ^ (LODWORD(STACK[0x280]) >> 28) ^ LODWORD(STACK[0x3F8]) ^ 0x317BAAEE ^ (v265 - ((2 * v265) & 0x970D992A) + 1267125397);
  unsigned int v267 = (v266 + 1971817152 - ((2 * v266) & 0xEB0F1580)) ^ LODWORD(STACK[0x264]);
  int v268 = (v267 + 961832436 - ((2 * v267) & 0x72A8CBE8)) ^ LODWORD(STACK[0x244]);
  int v269 = (v268 - 1173035828 - ((2 * v268) & 0x7429C998)) ^ LODWORD(STACK[0x238]);
  int v270 = (v269 + 744613622 - ((2 * v269) & 0x58C3CDEC)) ^ LODWORD(STACK[0x234]);
  int v271 = (v270 + 553112729 - ((2 * v270) & 0x41EFA932)) ^ LODWORD(STACK[0x25C]);
  unsigned int v272 = LODWORD(STACK[0x230]) ^ (v271 - ((2 * v271) & 0x975C090C) + 1269695622) ^ 0x4BB59047;
  int v273 = (v272 - 1271187565 - ((2 * v272) & 0x68766F26)) ^ LODWORD(STACK[0x400]);
  unsigned int v274 = v106 ^ (v273 - ((2 * v273) & 0xF6C488C4) - 77446046);
  int v275 = (v274 >> 27) ^ (v274 >> 21);
  unsigned int v276 = v248 ^ (32 * v248) ^ (4 * v248) ^ (v248 << 11) ^ LODWORD(STACK[0x24C]) ^ (v249
                                                                                 - ((2 * v249) & 0xA36E5D3A)
                                                                                 + 1370959517) ^ (32 * v274) ^ (v274 << 11) ^ (32 * v275) ^ (v275 << 11) ^ (v262 + 86244755 - ((2 * v262) & 0xA47FB26)) ^ (4 * (v275 ^ v274));
  unsigned int v277 = v274 ^ 0x6FEDD6BB ^ ((v276 ^ 0xCE96F87E)
                            - 1773910290
                            + ((2 * ((v276 ^ 0xCE96F87E) & 0x164446FD ^ v276 & 0x10)) ^ 0xFFFFFFDF));
  unsigned int v278 = (v182 << 8) ^ (v182 << 15) ^ a78 ^ a74 ^ 0xE100F000;
  unsigned int v279 = (v278 + 2009317160 - ((2 * v278) & 0xEF877E00)) ^ a80;
  unsigned int v280 = (v279 + 818754411 + (~(2 * v279) | 0x9E659929) + 1) ^ a58 ^ a59;
  unsigned int v281 = (v280 + 1198116858 - ((2 * v280) & 0x8ED39FF4)) ^ a81;
  unsigned int v282 = (a69 ^ 0xEC478000) + 78235345 - ((2 * (a69 ^ 0xEC478000)) & 0x9538000);
  LODWORD(STACK[0x624]) = v282;
  int v283 = (v281 + 78235345 - ((2 * v281) & 0x9538DA2)) ^ v282;
  unsigned int v284 = (v283 + 1179883826 - ((2 * v283) & 0x8CA73264)) ^ LODWORD(STACK[0x4AC]);
  unsigned int v285 = (v284 + 1458572557 - ((2 * v284) & 0xADE01A1A)) ^ LODWORD(STACK[0x4A4]);
  int v286 = (v285 - 1851297230 - ((2 * v285) & 0x234EE464)) ^ a79;
  unsigned int v287 = (v286 - 170632104 - ((2 * v286) & 0xEBA8B8B0)) ^ LODWORD(STACK[0x4A0]);
  int v288 = ((v182 << 23) ^ 0x78000000) + 972017860 - ((2 * ((v182 << 23) ^ 0x78000000)) & 0x73000000);
  LODWORD(STACK[0x628]) = v288;
  unsigned int v289 = (v287 - 799317137 - ((2 * v287) & 0xA0B6C6DE)) ^ LODWORD(STACK[0x598]);
  int v290 = (v289 + 972017860 - ((2 * v289) & 0x73DFA188)) ^ v288;
  unsigned int v291 = (v290 + 1123399325 - ((2 * v290) & 0x85EB6D3A)) ^ LODWORD(STACK[0x3BC]);
  unsigned int v292 = (v291 - 1030295686 - ((2 * v291) & 0x852DDEF4)) ^ LODWORD(STACK[0x498]);
  int v293 = v292 + 618130082 - 2 * (v292 & 0x24D7EAA3 ^ v291 & 1);
  int v294 = (v275 | (LODWORD(STACK[0x218]) << 31)) ^ (v201 << 12) ^ (v277 - ((2 * v277) & 0x2840B36E) - 1809819209);
  BOOL v295 = SLODWORD(STACK[0x5C4]) >= 0;
  LODWORD(STACK[0x618]) = v295;
  int v296 = v295 ^ (v229 >> 21) ^ (v229 >> 27);
  int v297 = (v182 << 27) - (a75 & 0x40000000) - 1529353566;
  LODWORD(STACK[0x620]) = v297;
  int v298 = a76 ^ (v182 >> 5);
  LODWORD(STACK[0x614]) = v298;
  unsigned int v299 = v298 ^ (v200 + 760419377 - ((2 * v200) & 0x5AA62862));
  int v300 = v187 ^ (v299 >> 21);
  LODWORD(STACK[0x638]) = v300;
  int v301 = v294 ^ (32 * v229) ^ (4 * v229) ^ (v229 << 11) ^ (4 * v296) ^ (32 * v296) ^ (v296 << 11) ^ v297 ^ v293 ^ (4 * v299) ^ (32 * v299) ^ (v299 << 11) ^ (4 * v300) ^ (32 * v300) ^ (v300 << 11) ^ 0x3C0E8719;
  int v302 = (v301 - 1710955569 - ((2 * v301) & 0x3409C79E)) ^ LODWORD(STACK[0x5A4]);
  int v303 = (v302 + 933416112 - ((2 * v302) & 0x6F459960)) ^ LODWORD(STACK[0x5BC]);
  unsigned int v304 = (v303 + 1362296504 - ((2 * v303) & 0xA265FD70)) ^ LODWORD(STACK[0x440]);
  int v305 = (v304 + 965007590 - ((2 * v304) & 0x7309B1CC)) ^ LODWORD(STACK[0x5B4]);
  unsigned int v306 = (v305 - 199925685 - ((2 * v305) & 0xE82AC096)) ^ LODWORD(STACK[0x21C]);
  unsigned int v307 = (v306 + 1555159915 - ((2 * v306) & 0xB963B6D6)) ^ LODWORD(STACK[0x5C0]);
  unsigned int v308 = (v307 + 1278548561 - ((2 * v307) & 0x986A34A2)) ^ LODWORD(STACK[0x4E8]);
  int v309 = (v308 - 1627216652 - ((2 * v308) & 0x3E0549E8)) ^ LODWORD(STACK[0x5AC]);
  int v310 = (v309 - 1110910389 - ((2 * v309) & 0x7B91B496)) ^ LODWORD(STACK[0x224]);
  unsigned int v311 = (v310 + 1704981336 - ((2 * v310) & 0xCB3FE6B0)) ^ LODWORD(STACK[0x220]);
  unsigned int v312 = (v311 - 1027996434 - ((2 * v311) & 0x857409DC)) ^ LODWORD(STACK[0x5B0]);
  int v313 = (v312 + 453317453 - ((2 * v312) & 0x360A269A)) ^ LODWORD(STACK[0x228]);
  int v314 = (v313 + 959967829 - ((2 * v313) & 0x726FE4AA)) ^ LODWORD(STACK[0x5A0]);
  int v315 = (v314 + 729530802 - ((2 * v314) & 0x56F78364)) ^ LODWORD(STACK[0x5A8]);
  unsigned int v316 = v229 ^ 0xE97EEC3D ^ (v315 - ((2 * v315) & 0xC2159E94) - 519385270);
  unsigned int v317 = v299 ^ v296 ^ (v316 - ((2 * v316) & 0x5F99C350) + 801956264);
  LODWORD(STACK[0x5EC]) = v317 >> 29;
  int v318 = ((v317 >> 29) ^ HIBYTE(v317) ^ 0x7B) - 659010957 - ((2 * ((v317 >> 29) ^ HIBYTE(v317) ^ 0x7B)) & 0xE6);
  unsigned int v319 = v317;
  unsigned int v320 = (v317 >> 30) ^ 0xD8B84A72;
  LODWORD(STACK[0x5E8]) = v320;
  LODWORD(STACK[0x5FC]) = v319 >> 25;
  LODWORD(STACK[0x5D4]) = v319;
  int v321 = v320 ^ (v319 >> 25) ^ v318;
  LODWORD(STACK[0x604]) = v321;
  int v322 = v321 & 0x10 ^ 0x5AD76BBF;
  v319 >>= 22;
  LODWORD(STACK[0x5F0]) = v319;
  LODWORD(STACK[0x600]) = v319 ^ 0x1E2;
  BOOL v323 = ((v322 + 81) & (v319 ^ 0x1E2)) == 0;
  int v324 = v322 + 65405;
  int v325 = 55003 - v322;
  if (v323) {
    int v325 = v324;
  }
  LODWORD(STACK[0x608]) = v325;
  unsigned int v326 = STACK[0x5D8];
  LODWORD(STACK[0x6A0]) = ((4 * LODWORD(STACK[0x5D8])) ^ 0xE1D81460)
                        - 655586782
                        - 2
                        * (((4 * LODWORD(STACK[0x5D8])) ^ 0xE1D81460) & 0x58EC8A2C ^ (4 * LODWORD(STACK[0x5D8])) & 0xC);
  LODWORD(STACK[0x690]) = ((8 * v326) ^ 0xC3B028C0) - 813570084 - ((2 * ((8 * v326) ^ 0xC3B028C0)) & 0x9F03CFB0);
  LODWORD(STACK[0x6F0]) = ((v326 << 10) ^ 0xD8146000) - 1309487830 - ((2 * ((v326 << 10) ^ 0xD8146000)) & 0x63E59800);
  LODWORD(STACK[0x6AC]) = ((v326 << 22) ^ 0x46000000) - 1433467135 - ((2 * ((v326 << 22) ^ 0x46000000)) & 0x55555555);
  LODWORD(STACK[0x6EC]) = ((v326 << 7) ^ 0x3B028C00) + 147982279 - ((2 * ((v326 << 7) ^ 0x3B028C00)) & 0x11A40F00);
  LODWORD(STACK[0x708]) = ((v326 << 13) ^ 0xC0A30000) - 1000411417 - ((2 * ((v326 << 13) ^ 0xC0A30000)) & 0x88BDC000);
  LODWORD(STACK[0x6E0]) = ((v326 << 16) ^ 0x5180000) + 208285711 - ((2 * ((v326 << 16) ^ 0x5180000)) & 0x18D40000);
  LODWORD(STACK[0x710]) = ((v326 << 20) ^ 0x51800000) - 862990252 - ((2 * ((v326 << 20) ^ 0x51800000)) & 0x99000000);
  LODWORD(STACK[0x6B8]) = ((v326 << 14) ^ 0x81460000) + 1846780249 - ((2 * ((v326 << 14) ^ 0x81460000)) & 0xDC270000);
  LODWORD(STACK[0x68C]) = ((v326 << 24) ^ 0x18000000) - 1066748937 + ((v326 << 25) & 0x80000000);
  LODWORD(STACK[0x6D0]) = ((v326 << 25) ^ 0x30000000) + 523825198 - ((2 * ((v326 << 25) ^ 0x30000000)) & 0x3C000000);
  LODWORD(STACK[0x644]) = ((v326 << 11) ^ 0xB028C000) - 1344141703 - ((2 * ((v326 << 11) ^ 0xB028C000)) & 0x5FC40000);
  int v327 = *(unsigned __int8 *)(STACK[0x718] + 202);
  LODWORD(STACK[0x40C]) = v327;
  LODWORD(STACK[0x55C]) = v326 << 18;
  int v328 = ((v326 << 18) ^ 0x14600000) - 1920167898 - ((2 * ((v326 << 18) ^ 0x14600000)) & 0x1B180000);
  LODWORD(STACK[0x664]) = v328;
  LODWORD(STACK[0x6D8]) = ((v326 << 21) ^ 0xA3000000) - 621968527 - ((2 * ((v326 << 21) ^ 0xA3000000)) & 0xB5C00000);
  LODWORD(STACK[0x6B0]) = ((v326 << 19) ^ 0x28C00000) + 819779363 - ((2 * ((v326 << 19) ^ 0x28C00000)) & 0x61B00000);
  unsigned int v329 = ((v326 << 23) ^ 0x8C000000) + 1004962692 - ((2 * ((v326 << 23) ^ 0x8C000000)) & 0x77000000);
  LODWORD(STACK[0x564]) = v329;
  LODWORD(STACK[0x560]) = v326 << 29;
  LODWORD(STACK[0x65C]) = (v326 << 28) - ((v326 << 29) & 0x60000000);
  unsigned int v330 = ((v326 << 27) ^ 0xC0000000) - 1945866443 - ((v326 << 28) & 0x10000000);
  LODWORD(STACK[0x5DC]) = v330;
  unint64_t v331 = v326 ^ 0x38760518;
  STACK[0x3F8] = v331;
  unsigned int v332 = STACK[0x594];
  int v333 = LODWORD(STACK[0x594]) >> 11;
  unsigned int v334 = v326 >> 10;
  unsigned int v335 = v326;
  int v336 = (LODWORD(STACK[0x594]) >> 27) ^ (LODWORD(STACK[0x594]) >> 28) ^ v333 ^ (v335 >> 2) ^ (v335 >> 10) ^ (unsigned __int16)(v331 >> (v327 & 0x15 ^ 0x11 | v327 & 0x15 ^ 4));
  LODWORD(STACK[0x698]) = v335 ^ 0x8DA148C8;
  unsigned int v337 = ((v335 ^ 0x8DA148C8) >> 30) | 0x4E50EC50;
  LODWORD(STACK[0x434]) = v337;
  int v338 = (v332 >> 29) | 0x3DDFDDB8;
  LODWORD(STACK[0x550]) = v338;
  int v339 = v337 ^ v338;
  int v340 = ((v336 ^ 0xE149203) + 1938764267 - 2 * ((v336 ^ 0xE149203) & 0x738F31FB ^ v336 & 0x10)) ^ v337 ^ v338;
  unsigned int v341 = (v332 >> 19) ^ 0xCCF9B32E;
  unsigned int v342 = (v340 - 856050656 - ((2 * v340) & 0x99F36840)) ^ v341;
  unsigned int v343 = v332 >> 18;
  unsigned int v344 = (v332 >> 18) ^ 0xC71DC17F;
  LODWORD(STACK[0x438]) = v344;
  unsigned int v345 = (v342 - 954347678 - ((2 * v342) & 0x8E3B9EC4)) ^ v344;
  int v346 = (v332 >> 15) ^ 0x1D1824C0;
  LODWORD(STACK[0x54C]) = v346;
  int v347 = (v345 + 488133676 - ((2 * v345) & 0x3A30A858)) ^ v346;
  unsigned int v348 = v332 >> 14;
  unsigned int v349 = (v332 >> 14) ^ 0xABFB2EB6;
  int v350 = (v347 - 1409560722 - ((2 * v347) & 0x57F79EDC)) ^ v349;
  unsigned int v351 = (v332 >> 13) ^ 0xFCDE79CD;
  unsigned int v352 = v332;
  unsigned int v353 = (v350 - 52446595 - ((2 * v350) & 0xF9BF74FA)) ^ v351;
  unsigned int v354 = v335;
  unsigned int v355 = v335 >> 6;
  unsigned int v356 = (v335 >> 6) ^ 0xB0074DAE;
  int v357 = (v353 - 1327065670 - ((2 * v353) & 0x61CD2B74)) ^ v356;
  int v358 = (v354 >> 9) ^ 0x2FBF74C5;
  int v359 = (v357 + 799231943 - ((2 * v357) & 0x5F469F8E)) ^ v358;
  LODWORD(STACK[0x688]) = v356 ^ (v354 >> 4);
  unsigned int v360 = (v354 >> 4) ^ (v354 >> 5) ^ 0x4D031586 ^ (v359 - ((2 * v359) & 0x99814B5C) + 1287693742);
  LODWORD(STACK[0x568]) = v360;
  v360 >>= 21;
  LODWORD(STACK[0x558]) = v360;
  LODWORD(STACK[0x428]) = HIWORD(v352);
  int v361 = v343 ^ (v352 >> 20) ^ HIWORD(v352) ^ (v354 >> 1) ^ (unsigned __int16)(v331 >> ((v360 & 0x16 ^ 2)
                                                                                      + (v360 & 0x16 ^ 0x14)));
  int v362 = (v361 ^ 0x1C3B3760) - 1423486062 - 2 * ((v361 ^ 0x1C3B3760) & 0x2B27539A ^ v361 & 8);
  unsigned int v363 = (v352 >> 21) ^ 0xAB275251;
  int v364 = (v352 >> 25) ^ 0x64DE3FAD;
  unsigned int v365 = ((v362 ^ v363) + 1692286897 - ((2 * (v362 ^ v363)) & 0xC9BC7F62)) ^ v364;
  LODWORD(STACK[0x41C]) = v364;
  LODWORD(STACK[0x554]) = v341;
  unsigned int v366 = (v365 - 856050656 - ((2 * v365) & 0x99F36840)) ^ v341;
  int v367 = (v366 - 1409560722 - ((2 * v366) & 0x57F79EDC)) ^ v349;
  int v368 = (v352 >> 12) ^ 0x200B9E9C;
  int v369 = (v367 + 537401852 - ((2 * v367) & 0x401033F8)) ^ v368;
  LODWORD(STACK[0x414]) = v368;
  unsigned int v370 = (v369 - 52446595 - ((2 * v369) & 0xF9BF74FA)) ^ v351;
  int v371 = v333 ^ 0xF0149FE;
  int v372 = (v370 + 252069694 - ((2 * v370) & 0x1E0C8E7C)) ^ v333 ^ 0xF0149FE;
  unsigned int v373 = (v354 >> 7) ^ 0xE8938DD8;
  LODWORD(STACK[0x410]) = v373;
  unsigned int v374 = (v372 - 387751470 - ((2 * v372) & 0xD1C6C3A4)) ^ v373;
  LODWORD(STACK[0x650]) = v374 - 1327065670 - ((2 * v374) & 0x61CD2B74);
  LODWORD(STACK[0x408]) = v352 >> 22;
  LODWORD(v331) = HIBYTE(v352) ^ (v352 >> 17) ^ (v352 >> 22) ^ v368 ^ ((v348 ^ HIWORD(v352) ^ 0xD9AE)
                                                                     + 537401852
                                                                     - ((2 * (v348 ^ HIWORD(v352) ^ 0xD9AE)) & 0x33F8));
  LODWORD(v331) = ((v331 ^ 0x1CE2) + 1692286897 - 2 * ((v331 ^ 0x1CE2) & 0x64DE3FBD ^ v331 & 0xC)) ^ v364;
  int v375 = (v331 + 1938764267 - ((2 * v331) & 0x671E63D6)) ^ v339;
  int v376 = (v375 - 1423486062 - ((2 * v375) & 0x564EA724)) ^ v363;
  int v377 = (v376 - 856050656 - ((2 * v376) & 0x19F36840)) ^ v341;
  int v378 = (v377 + 252069694 - ((2 * v377) & 0x1E0C8E7C)) ^ v371;
  LODWORD(STACK[0x404]) = v334 ^ 0xC10F2196;
  unsigned int v379 = (v378 - 1056883689 - ((2 * v378) & 0x8202782E)) ^ v334 ^ 0xC10F2196;
  int v380 = (v379 + 799231943 - ((2 * v379) & 0x5F469F8E)) ^ v358;
  unsigned int v381 = (v354 >> 8) ^ 0xEA5B6E08;
  LODWORD(STACK[0x400]) = v381;
  unsigned int v382 = v381 ^ (v354 >> 7) ^ (v380 - 362604531 - ((2 * v380) & 0xD4C6301A));
  unsigned int v383 = (v354 >> 5) ^ v355 ^ v382;
  int v384 = ((unint64_t)(v383 ^ 0x1528436) >> (((v382 & 0x7F ^ 0x75)
                                                                                    + (v382 & 0x7F ^ 0xA)) & ((v382 & 0x9B ^ 0x91) + (v382 & 0x9B ^ 0xA)))) ^ (v383 >> 21);
  unsigned int v385 = LODWORD(STACK[0x6C8]) ^ (v354 << 8) ^ (v354 << 15) ^ ((v330 ^ 0x933C9F1B ^ LODWORD(STACK[0x6D0]))
                                                             - ((2 * (v330 ^ 0x933C9F1B ^ LODWORD(STACK[0x6D0]))) & 0xC6A1C2D4)
                                                             - 481238678) ^ (4 * v383) ^ (32 * v383) ^ (v383 << 11) ^ (4 * v384) ^ (32 * v384) ^ (v384 << 11) ^ 0xA433CF61;
  int v386 = (v385 + 147982279 - ((2 * v385) & 0x11A40F8E)) ^ LODWORD(STACK[0x6EC]);
  unsigned int v387 = (v386 - 655586782 - ((2 * v386) & 0xB1D91444)) ^ LODWORD(STACK[0x6A0]);
  unsigned int v388 = (v387 - 813570084 - ((2 * v387) & 0x9F03CFB8)) ^ LODWORD(STACK[0x690]);
  int v389 = (v388 - 1309487830 - ((2 * v388) & 0x63E59A54)) ^ LODWORD(STACK[0x6F0]);
  int v390 = STACK[0x644];
  int v391 = (v389 - 1344141703 - ((2 * v389) & 0x5FC40CF2)) ^ LODWORD(STACK[0x644]);
  unsigned int v392 = (v391 - 1000411417 - ((2 * v391) & 0x88BDDDCE)) ^ LODWORD(STACK[0x708]);
  int v393 = (v392 + 208285711 - ((2 * v392) & 0x18D4601E)) ^ LODWORD(STACK[0x6E0]);
  int v394 = (v393 - 1920167898 - ((2 * v393) & 0x1B19204C)) ^ v328;
  unsigned int v395 = (v394 - 862990252 - ((2 * v394) & 0x991FA0A8)) ^ LODWORD(STACK[0x710]);
  unsigned int v396 = (v395 - 621968527 - ((2 * v395) & 0xB5DB06E2)) ^ LODWORD(STACK[0x6D8]);
  int v397 = (v396 - 1433467135 - ((2 * v396) & 0x551E0E02)) ^ LODWORD(STACK[0x6AC]);
  int v398 = (v397 + 1004962692 - ((2 * v397) & 0x77CD0708)) ^ v329;
  unsigned int v399 = (v398 - 1066748937 - ((2 * v398) & 0x80D567EE)) ^ LODWORD(STACK[0x68C]);
  int v400 = ((v354 << 26) ^ 0x60000000) - 2128740904;
  LODWORD(STACK[0x660]) = v400;
  int v401 = v383 ^ v400 ^ (v399 - 2128740904 - ((2 * v399) & 0x23BFBB0));
  LODWORD(STACK[0x670]) = v401;
  unsigned int v402 = v401 ^ v384;
  int v403 = v401 ^ v384 ^ 0x5F84BBB0;
  int v404 = ((4 * v403) ^ 0x7B58FE30) - 1188897475 - ((2 * ((4 * v403) ^ 0x7B58FE30)) & 0x7245BA78);
  LODWORD(STACK[0x430]) = v404;
  unsigned int v405 = ((8 * v403) ^ 0xF6B1FC60) - 1194358331 - 2 * (((8 * v403) ^ 0xF6B1FC60) & 0x38CF89C8 ^ (8 * v403) & 8);
  LODWORD(STACK[0x42C]) = v405;
  unsigned int v406 = ((v403 << 11) ^ 0xB1FC6000) - 1615195507 - ((2 * ((v403 << 11) ^ 0xB1FC6000)) & 0x3F742000);
  LODWORD(STACK[0x684]) = v406;
  unsigned int v407 = ((v403 << 18) ^ 0xFE300000) + 76110623 - ((2 * ((v403 << 18) ^ 0xFE300000)) & 0x9100000);
  LODWORD(STACK[0x680]) = v407;
  unsigned int v408 = ((v403 << 21) ^ 0xF1800000) - 758313411 - ((2 * ((v403 << 21) ^ 0xF1800000)) & 0xA5800000);
  LODWORD(STACK[0x67C]) = v408;
  unsigned int v409 = ((v403 << 27) ^ 0x60000000) + 1208710851 - ((2 * ((v403 << 27) ^ 0x60000000)) & 0x90000000);
  LODWORD(STACK[0x424]) = v409;
  LODWORD(v331) = ((v403 << 22) ^ 0xE3000000) - 1307705299 - ((2 * ((v403 << 22) ^ 0xE3000000)) & 0x64000000);
  LODWORD(STACK[0x420]) = v331;
  unsigned int v410 = ((v403 << 23) ^ 0xC6000000) + 2051843745 - ((2 * ((v403 << 23) ^ 0xC6000000)) & 0xF4000000);
  LODWORD(STACK[0x418]) = v410;
  unsigned int v411 = ((v403 << 26) ^ 0x30000000) - 31735370 + ((v403 << 27) ^ 0x9FFFFFFF);
  unsigned int v412 = ((v403 << 7) ^ 0x6B1FC600) + 2039416500 - ((2 * ((v403 << 7) ^ 0x6B1FC600)) & 0xF31E0D00);
  LODWORD(STACK[0x3F4]) = v412;
  unsigned int v413 = ((v403 << 10) ^ 0x58FE3000) + 1861523863 - ((2 * ((v403 << 10) ^ 0x58FE3000)) & 0xDDE93000);
  LODWORD(STACK[0x3F0]) = v413;
  unsigned int v414 = ((v403 << 13) ^ 0xC7F18000) + 1741878678 - ((2 * ((v403 << 13) ^ 0xC7F18000)) & 0xCFA5C000);
  LODWORD(STACK[0x3EC]) = v414;
  unsigned int v415 = ((v403 << 16) ^ 0x3F8C0000) + 1681661840 - ((2 * ((v403 << 16) ^ 0x3F8C0000)) & 0xC8780000);
  LODWORD(STACK[0x3E8]) = v415;
  unsigned int v416 = ((v403 << 20) ^ 0xF8C00000) + 1886906603 - ((2 * ((v403 << 20) ^ 0xF8C00000)) & 0xE0FFFFFF);
  LODWORD(STACK[0x3E4]) = v416;
  int v417 = ((v403 << 25) ^ 0x18000000) - 1660222421 - ((2 * ((v403 << 25) ^ 0x18000000)) & 0x38000000);
  LODWORD(STACK[0x3E0]) = v417;
  unsigned int v418 = v403;
  LODWORD(STACK[0x66C]) = v403;
  unsigned int v419 = (v402 << 24) ^ (v403 << 15) ^ (v403 << 8) ^ 0xF5F98C00;
  int v420 = (v419 - 1194358331 - ((2 * v419) & 0x719F1200)) ^ v405;
  int v421 = (v420 - 1188897475 - ((2 * v420) & 0x7245BA7A)) ^ v404;
  unsigned int v422 = (v421 + 2039416500 - ((2 * v421) & 0xF31E0D68)) ^ v412;
  unsigned int v423 = (v422 + 1861523863 - ((2 * v422) & 0xDDE9332E)) ^ v413;
  unsigned int v424 = (v423 + 1741878678 - ((2 * v423) & 0xCFA5EB2C)) ^ v414;
  int v425 = (v424 - 1615195507 - ((2 * v424) & 0x3F74251A)) ^ v406;
  unsigned int v426 = (v425 + 1681661840 - ((2 * v425) & 0xC8783F20)) ^ v415;
  int v427 = (v426 + 76110623 - ((2 * v426) & 0x912B63E)) ^ v407;
  unsigned int v428 = (v427 + 1886906603 - ((2 * v427) & 0xE0EFD1D6)) ^ v416;
  unsigned int v429 = (v428 - 758313411 - ((2 * v428) & 0xA59A1C7A)) ^ v408;
  int v430 = (v429 - 1307705299 - ((2 * v429) & 0x641C005A)) ^ v331;
  unsigned int v431 = STACK[0x670];
  int v432 = HIBYTE(LODWORD(STACK[0x670])) ^ 0x1522C ^ (LODWORD(STACK[0x670]) >> 17) ^ (v402 >> 8);
  unsigned int v433 = ((LODWORD(STACK[0x670]) >> 29) | 0xF04B430) ^ (LODWORD(STACK[0x670]) >> 30) ^ 0xAE4A5452;
  LODWORD(STACK[0x3A4]) = v433;
  int v434 = (v432 - 1588666270 - ((2 * v432) & 0x9DC0C4)) ^ v433;
  int v435 = (v431 >> 25) ^ 0x2C201450;
  LODWORD(STACK[0x3CC]) = v435;
  int v436 = (v434 + 740299856 - ((2 * v434) & 0x584028A0)) ^ v435;
  int v437 = (v431 >> 21) ^ 0x4BC646F3;
  LODWORD(STACK[0x3C8]) = v437;
  int v438 = (v436 + 1271285497 - ((2 * v436) & 0x178C8DF2)) ^ v437;
  int v439 = (v431 >> 22) ^ 0x5D3A4CA8;
  LODWORD(STACK[0x3B8]) = v439;
  unsigned int v440 = (v438 + 1564101800 + ~((2 * v438) & 0xBA74995A) + 6) ^ v439;
  LODWORD(STACK[0x394]) = v431 >> 19;
  int v441 = (v431 >> 19) ^ 0x47FDF97E;
  LODWORD(STACK[0x3C4]) = v441;
  unsigned int v442 = (v440 + 1207826772 - ((2 * v440) & 0x8FFBF2A8)) ^ v441;
  int v443 = HIWORD(v431) ^ 0x84B7C1;
  LODWORD(STACK[0x3C0]) = v443;
  int v444 = (v442 + 8697491 - ((2 * v442) & 0x1096D26)) ^ v443;
  unsigned int v445 = (v431 >> 14) ^ 0xD2E2332B;
  LODWORD(STACK[0x3BC]) = v445;
  unsigned int v446 = (v444 - 756926879 - ((2 * v444) & 0xA5C46CC2)) ^ v445;
  int v447 = (v431 >> 11) ^ 0x49A24C86;
  LODWORD(STACK[0x3B0]) = v447;
  unsigned int v448 = (v446 + 1235379926 - ((2 * v446) & 0x9344CDAC)) ^ v447;
  int v449 = (v431 >> 12) ^ 0xDE1F571;
  LODWORD(STACK[0x3B4]) = v449;
  int v450 = (v448 + 232906841 - ((2 * v448) & 0x1BC3C0B2)) ^ v449;
  LODWORD(STACK[0x6F4]) = v402;
  int v451 = (v402 >> 10) ^ 0x7C723519;
  LODWORD(STACK[0x390]) = v451;
  unsigned int v452 = (v450 + 2087870904 - ((2 * v450) & 0xF8E4C370)) ^ v451;
  unsigned int v453 = (v430 + 2051843745 - ((2 * v430) & 0xF4994D42)) ^ v410;
  int v454 = (v402 >> 9) ^ 0x1F9A6093;
  LODWORD(STACK[0x38C]) = v454;
  int v455 = (v452 + 530237905 - ((2 * v452) & 0x3F3593A2)) ^ v454;
  unsigned int v456 = (v402 >> 7) ^ 0x8B2BCBDC;
  LODWORD(STACK[0x398]) = v456;
  int v457 = (v455 - 1960218924 - ((2 * v455) & 0x1652DDA8)) ^ v456;
  int v458 = (v453 - 1660222421 - ((2 * v453) & 0x3A160856)) ^ v417;
  unsigned int v459 = v458 - 31735370 - ((2 * v458) & 0xFC37836C);
  LODWORD(STACK[0x2C0]) = v418 >> 5;
  unsigned int v460 = (v402 >> 6) ^ 0x848E77B4;
  LODWORD(STACK[0x3A8]) = v460;
  unsigned int v461 = (v418 >> 5) ^ v460 ^ (v457 - 2071249500 - ((2 * v457) & 0x9167B48));
  LODWORD(STACK[0x668]) = v411 + 1;
  unsigned int v462 = LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x650]);
  int v463 = (LODWORD(STACK[0x594]) >> 31) ^ (v462 >> 21) ^ (v462 >> 27);
  unsigned int v464 = ((LODWORD(STACK[0x5D8]) << 31) | 0x16C12FB0) ^ (LODWORD(STACK[0x5D8]) << 12) ^ v409 ^ (4 * v461) ^ (32 * v461) ^ (v461 << 11) ^ (v461 >> 21) ^ (32 * (v461 >> 21)) ^ (v461 >> 21 << 11) ^ (((4 * (v461 >> 21)) ^ 0x5C) - ((v461 >> 18) & 0x1B40) - 740233821) ^ ((v459 ^ (v411 + 1)) + 1208710851 - ((2 * (v459 ^ (v411 + 1))) & 0x9016ED86)) ^ (4 * v462) ^ (32 * v462) ^ (v462 << 11) ^ (4 * v463) ^ (32 * v463) ^ (v463 << 11);
  unsigned int v465 = (v464 + 1846780249 - ((2 * v464) & 0xDC2742B2)) ^ LODWORD(STACK[0x6B8]);
  int v466 = (v465 + 208285711 - ((2 * v465) & 0x18D4601E)) ^ LODWORD(STACK[0x6E0]);
  int v467 = (v466 + 819779363 - ((2 * v466) & 0x61B9AE46)) ^ LODWORD(STACK[0x6B0]);
  int v468 = (v467 + 147982279 - ((2 * v467) & 0x11A40F8E)) ^ LODWORD(STACK[0x6EC]);
  int v469 = (v468 - 1244181040 - ((2 * v468) & 0x6BAE9BA0)) ^ LODWORD(STACK[0x698]);
  int v470 = (v469 - 1309487830 - ((2 * v469) & 0x63E59A54)) ^ LODWORD(STACK[0x6F0]);
  int v471 = (v470 - 1344141703 - ((2 * v470) & 0x5FC40CF2)) ^ v390;
  unsigned int v472 = (v471 - 1000411417 - ((2 * v471) & 0x88BDDDCE)) ^ LODWORD(STACK[0x708]);
  int v473 = (v472 - 1920167898 - ((2 * v472) & 0x1B19204C)) ^ LODWORD(STACK[0x664]);
  unsigned int v474 = (v473 - 862990252 - ((2 * v473) & 0x991FA0A8)) ^ LODWORD(STACK[0x710]);
  unsigned int v475 = (v474 - 621968527 - ((2 * v474) & 0xB5DB06E2)) ^ LODWORD(STACK[0x6D8]);
  int v476 = (v475 + 523825198 - ((2 * v475) & 0x3E71E05C)) ^ LODWORD(STACK[0x6D0]);
  int v477 = (v476 - 2128740904 - ((2 * v476) & 0x23BFBB0)) ^ LODWORD(STACK[0x660]);
  int v478 = LODWORD(STACK[0x65C]) + 821297847;
  LODWORD(STACK[0x2A0]) = v478;
  int v479 = (v477 - 1326185801 - ((2 * v477) & 0x61E8056E)) ^ v478;
  int v480 = STACK[0x49C];
  unsigned int v481 = LODWORD(STACK[0x49C]) ^ (v479 - ((2 * v479) & 0x1B0A3EBA) + 226828125) ^ 0xC0E8F68E;
  int v482 = (v481 - ((2 * v481) & 0x5C7FC76A) + 775938997) ^ v462;
  int v483 = ((v482 ^ 0x2DB883E4) + 1073905164 - 2 * ((v482 ^ 0x2DB883E4) & 0x40027E1C ^ v482 & 0x10)) ^ v461;
  LODWORD(STACK[0x3DC]) = v483;
  int v484 = v483 ^ v463;
  int v485 = ((8 * (v483 ^ v463)) ^ 0x17A67F60)
       + 871112777
       - 2 * (((8 * (v483 ^ v463)) ^ 0x17A67F60) & 0x33EC2058 ^ (8 * (v483 ^ v463)) & 0x10);
  LODWORD(STACK[0x3D4]) = v485;
  int v486 = ((4 * (v483 ^ v463)) ^ 0xBD33FB0)
       - 247835422
       - 2 * (((4 * (v483 ^ v463)) ^ 0xBD33FB0) & 0x713A54E4 ^ (4 * (v483 ^ v463)) & 4);
  LODWORD(STACK[0x3D0]) = v486;
  int v487 = (((v483 ^ v463) << 7) ^ 0x7A67F600) + 865832934 - ((2 * (((v483 ^ v463) << 7) ^ 0x7A67F600)) & 0x67371F00);
  LODWORD(STACK[0x65C]) = v487;
  unsigned int v488 = (((v483 ^ v463) << 10) ^ 0xD33FB000) - 1046365581 - ((2 * (((v483 ^ v463) << 10) ^ 0xD33FB000)) & 0x83437000);
  LODWORD(STACK[0x650]) = v488;
  int v489 = (((v483 ^ v463) << 14) ^ 0x33FB0000) - 1145993403 - ((2 * (((v483 ^ v463) << 14) ^ 0x33FB0000)) & 0x77630000);
  LODWORD(STACK[0x2B4]) = v489;
  unsigned int v490 = (((v483 ^ v463) << 13) ^ 0x99FD8000) - 341378490 + (~(2 * (((v483 ^ v463) << 13) ^ 0x99FD8000)) | 0x28B23FFF);
  unsigned int v491 = (((v483 ^ v463) << 20) ^ 0xFEC00000) - 93610490 - ((2 * (((v483 ^ v463) << 20) ^ 0xFEC00000)) & 0xF4C00000);
  LODWORD(STACK[0x3AC]) = v491;
  unsigned int v492 = (((v483 ^ v463) << 16) ^ 0xCFEC0000) - 1220807824 - ((2 * (((v483 ^ v463) << 16) ^ 0xCFEC0000)) & 0x6E760000);
  LODWORD(STACK[0x3A0]) = v492;
  unsigned int v493 = (((v483 ^ v463) << 22) ^ 0xFB000000) - 1230024337 - ((2 * (((v483 ^ v463) << 22) ^ 0xFB000000)) & 0x6D000000);
  LODWORD(STACK[0x39C]) = v493;
  unsigned int v494 = (2 * (v483 ^ v463)) ^ ((v483 ^ v463) << 6) ^ ((v483 ^ v463) << 17) ^ 0xA70264D8;
  LODWORD(STACK[0x2B0]) = v484 ^ 0x4E63A47;
  unsigned int v495 = (v494 + 1175647659 - ((2 * v494) & 0x8C25EB54)) ^ v484 ^ 0x4E63A47;
  unsigned int v496 = (v495 - 247835422 - ((2 * v495) & 0xE274A9C4)) ^ v486;
  int v497 = (v496 + 871112777 - ((2 * v496) & 0x67D84092)) ^ v485;
  int v498 = (v497 + 865832934 - ((2 * v497) & 0x67371FCC)) ^ v487;
  unsigned int v499 = (v498 - 1046365581 - ((2 * v498) & 0x834374E6)) ^ v488;
  LODWORD(STACK[0x2B8]) = v490 + 1;
  unsigned int v500 = (((v499 - 341378490 - ((2 * v499) & 0xD74DF48C)) ^ (v490 + 1))
        - 1145993403
        - 2
        * (((v499 - 341378490 - ((2 * v499) & 0xD74DF48C)) ^ (v490 + 1)) & 0x3BB1874D ^ (v499
                                                                                       - 341378490
                                                                                       - ((2 * v499) & 0xD74DF48C)) & 8)) ^ v489;
  unsigned int v501 = ((v484 << 24) ^ 0xEC000000) - 1036582761 - ((2 * ((v484 << 24) ^ 0xEC000000)) & 0x84000000);
  LODWORD(STACK[0x2BC]) = v501;
  int v502 = (v500 - 1220807824 - ((2 * v500) & 0x6E77E6E0)) ^ v492;
  unsigned int v503 = (v502 - 93610490 - ((2 * v502) & 0xF4D73C0C)) ^ v491;
  LODWORD(STACK[0x3D8]) = v484;
  LODWORD(STACK[0x2AC]) = v484 << 26;
  unsigned int v504 = ((v484 << 25) ^ 0xD8000000) + 74754679 - ((v484 << 26) & 0x8000000);
  LODWORD(STACK[0x648]) = v504;
  int v505 = v501 ^ v493 ^ (v503 - 1230024337 - ((2 * v503) & 0x6D5EA2DE));
  LODWORD(STACK[0x2A8]) = v505;
  int v506 = (v504 & 0x8000000 ^ 0x7CAEFFBD) + 2 * (v504 & 0x8000000);
  LODWORD(STACK[0x2A4]) = v506;
  BOOL v323 = ((v505 ^ 0xC0000000) & (v506 - 2091843517)) == 0;
  int v507 = LODWORD(STACK[0x630]) ^ (LODWORD(STACK[0x494]) >> 26) ^ (LODWORD(STACK[0x480]) >> 3) ^ LODWORD(STACK[0x31C]) ^ LODWORD(STACK[0x320]) ^ 0x1BE3A77E;
  int v508 = (v507 + 718184797 - ((v507 << (LODWORD(STACK[0x700]) ^ 0x67)) & 0x159D42BA)) ^ LODWORD(STACK[0x328]);
  int v509 = (v508 - 1927917408 - ((2 * v508) & 0x1A2CA140)) ^ LODWORD(STACK[0x330]);
  int v510 = (v509 + 529321637 - 2 * (v509 & 0x1F8CCEB5 ^ v508 & 0x10)) ^ LODWORD(STACK[0x450]);
  unsigned int v511 = (v510 - 154269092 - ((2 * v510) & 0xED9C14B8)) ^ LODWORD(STACK[0x448]);
  unsigned int v512 = (v511 + 1721825895 - ((2 * v511) & 0xCD41F4CE)) ^ LODWORD(STACK[0x460]);
  int v513 = (v512 - 1159271086 - ((2 * v512) & 0x75CDDAA4)) ^ LODWORD(STACK[0x458]);
  int v514 = (v513 - 1972708357 - ((2 * v513) & 0x14D5B7F6)) ^ LODWORD(STACK[0x44C]);
  int v515 = (v514 - 1229746146 - ((2 * v514) & 0x6D67203C)) ^ LODWORD(STACK[0x32C]);
  unsigned int v516 = (v515 - 1015101147 - ((2 * v515) & 0x86FD924A)) ^ LODWORD(STACK[0x444]);
  unsigned int v517 = (v516 + 1989965297 - ((2 * v516) & 0xED38EBE2)) ^ LODWORD(STACK[0x324]);
  unsigned int v518 = LODWORD(STACK[0x634]) ^ (v517 - 54126780 - ((2 * v517) & 0xF98C2E88));
  int v519 = (v518 >> 21) ^ (v518 >> 27);
  int v520 = (2 * LODWORD(STACK[0x480])) ^ (LODWORD(STACK[0x480]) << 6) ^ (LODWORD(STACK[0x480]) << 29) ^ LODWORD(STACK[0x334]) ^ LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x46C]) ^ (4 * v518) ^ (32 * v518) ^ (v518 << 11) ^ v519 ^ (4 * v519) ^ (32 * v519) ^ (v519 << 11) ^ 0x4ACBC64F;
  int v521 = (v520 + 553202206 - ((2 * v520) & 0x41F2643C)) ^ LODWORD(STACK[0x43C]);
  int v522 = (v521 + 2083732198 + (~(2 * v521) | 0x7998A33) + 1) ^ LODWORD(STACK[0x488]);
  int v523 = (v522 - 2098349310 - ((2 * v522) & 0x5DB7604)) ^ LODWORD(STACK[0x33C]);
  unsigned int v524 = (v523 + 1159377918 - ((2 * v523) & 0x8A3567FC)) ^ LODWORD(STACK[0x58C]);
  int v525 = (v524 + 456852359 - ((2 * v524) & 0x3676070E)) ^ LODWORD(STACK[0x580]);
  unsigned int v526 = (v525 + 2077485557 - ((2 * v525) & 0xF7A7D3EA)) ^ LODWORD(STACK[0x484]);
  int v527 = (v526 + 283893092 - ((2 * v526) & 0x21D7BAC8)) ^ LODWORD(STACK[0x454]);
  int v528 = (v527 - 1077921990 - ((2 * v527) & 0x7F806E74)) ^ LODWORD(STACK[0x574]);
  int v529 = (v528 - 1554416580 - ((2 * v528) & 0x46B2F878)) ^ LODWORD(STACK[0x338]);
  int v530 = (v529 - 1895618757 - ((2 * v529) & 0x1E064E76)) ^ LODWORD(STACK[0x578]);
  int v531 = (v530 - 1297350255 - ((2 * v530) & 0x65580322)) ^ LODWORD(STACK[0x570]);
  int v532 = (v531 - 1500687077 - ((2 * v531) & 0x4D1AAA36)) ^ LODWORD(STACK[0x47C]);
  int v533 = (v532 - ((2 * v532) & 0xEAC316C) - 2024400714) ^ v518;
  LODWORD(STACK[0x43C]) = v533;
  LODWORD(STACK[0x58C]) = (LODWORD(STACK[0x310]) ^ (-1673081951 * LODWORD(STACK[0x2D0])
                                                  + 1633178148
                                                  - ((948803394 * LODWORD(STACK[0x2D0]) + 968328188) & 0x88F9204C)))
                        + LODWORD(STACK[0x2E0]);
  int v534 = -1673081951 * LODWORD(STACK[0x2C4])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2C4]) + 968328188) & 0x233BADBE);
  int v535 = -1673081951 * LODWORD(STACK[0x2CC])
       - 101859492
       - 2
       * ((-1673081951 * LODWORD(STACK[0x2CC]) + 484164094) & 0x5D11FD5F ^ (-1673081951 * LODWORD(STACK[0x2CC])) & 1);
  int v536 = -1673081951 * LODWORD(STACK[0x2D4])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2D4]) + 968328188) & 0x233BADBE);
  unsigned int v537 = -1673081951 * LODWORD(STACK[0x2D8])
       - 101859492
       - ((948803394 * LODWORD(STACK[0x2D8]) + 968328188) & 0xBA23FABC);
  int v538 = -1673081951 * LODWORD(STACK[0x2DC])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2DC]) + 968328188) & 0x233BADBE);
  int v539 = -1673081951 * LODWORD(STACK[0x2E8])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2E8]) + 968328188) & 0x233BADBE);
  int v540 = -1673081951 * LODWORD(STACK[0x2E4])
       - 101859492
       - 2
       * ((-1673081951 * LODWORD(STACK[0x2E4]) + 484164094) & 0x5D11FD5F ^ (-1673081951 * LODWORD(STACK[0x2E4])) & 1);
  int v541 = -1673081951 * LODWORD(STACK[0x2EC])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2EC]) + 968328188) & 0x233BADBE);
  LODWORD(v331) = -1673081951 * LODWORD(STACK[0x2F0])
                - 101859492
                - ((948803394 * LODWORD(STACK[0x2F0]) + 968328188) & 0xBA23FABC);
  int v542 = -1673081951 * LODWORD(STACK[0x2F4])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x2F4]) + 968328188) & 0x233BADBE);
  unsigned int v543 = -1673081951 * LODWORD(STACK[0x2F8])
       - 101859492
       - ((948803394 * LODWORD(STACK[0x2F8]) + 968328188) & 0xBA23FABC);
  unsigned int v544 = -1673081951 * LODWORD(STACK[0x2FC])
       - 101859492
       - ((948803394 * LODWORD(STACK[0x2FC]) + 968328188) & 0xBA23FABC);
  int v545 = -1673081951 * LODWORD(STACK[0x300])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x300]) + 968328188) & 0x233BADBE);
  int v546 = -1673081951 * LODWORD(STACK[0x304])
       - 101859492
       - 2
       * ((-1673081951 * LODWORD(STACK[0x304]) + 484164094) & 0x5D11FD5F ^ (-1673081951 * LODWORD(STACK[0x304])) & 1);
  int v547 = STACK[0x30C];
  LODWORD(STACK[0x580]) = LODWORD(STACK[0x30C]) ^ (-1673081951 * LODWORD(STACK[0x2C8])
                                                 - 101859492
                                                 - ((948803394 * LODWORD(STACK[0x2C8]) + 968328188) & 0xBA23FABC));
  LODWORD(STACK[0x574]) = v547 ^ v535;
  LODWORD(STACK[0x570]) = v547 ^ v537;
  LODWORD(STACK[0x484]) = v547 ^ v540;
  LODWORD(STACK[0x480]) = v547 ^ v331;
  LODWORD(STACK[0x46C]) = v547 ^ v543;
  LODWORD(STACK[0x454]) = v547 ^ v544;
  LODWORD(STACK[0x460]) = v547 ^ v546;
  int v548 = -1673081951 * LODWORD(STACK[0x308])
       - 1367762723
       - ((948803394 * LODWORD(STACK[0x308]) + 968328188) & 0x233BADBE);
  int v549 = STACK[0x318];
  LODWORD(STACK[0x578]) = LODWORD(STACK[0x318]) ^ v534;
  LODWORD(STACK[0x494]) = v549 ^ v536;
  LODWORD(STACK[0x488]) = v549 ^ v538;
  LODWORD(STACK[0x458]) = v549 ^ v539;
  LODWORD(STACK[0x47C]) = v549 ^ v541;
  LODWORD(STACK[0x470]) = v549 ^ v542;
  LODWORD(STACK[0x450]) = v549 ^ v545;
  LODWORD(STACK[0x44C]) = v549 ^ v548;
  unsigned int v550 = (LODWORD(STACK[0x4B8]) >> 28) ^ (LODWORD(STACK[0x4B8]) >> 27) ^ (LODWORD(STACK[0x4B4]) >> 2) ^ LODWORD(STACK[0x34C]);
  int v551 = ((LODWORD(STACK[0x640]) ^ 0x18B60C1E ^ v550)
        + 899659121
        - ((2 * (LODWORD(STACK[0x640]) ^ 0x18B60C1E ^ v550)) & 0x6B3F6AE2)) ^ LODWORD(STACK[0x490]);
  int v552 = (v551 + 62492704 - ((2 * v551) & 0x7732040)) ^ LODWORD(STACK[0x590]);
  int v553 = (v552 + 953064581 - ((2 * v552) & 0x719D390A)) ^ LODWORD(STACK[0x348]);
  int v554 = (v553 - 1533252672 - ((2 * v553) & 0x4938D780)) ^ LODWORD(STACK[0x354]);
  unsigned int v555 = (v554 - 273141708 - ((2 * v554) & 0xDF706068)) ^ LODWORD(STACK[0x340]);
  unsigned int v556 = (v555 + 2103319839 + ~((2 * v555) & 0xFABC57CA) + 3783) ^ LODWORD(STACK[0x344]);
  unsigned int v557 = (v556 + 1899054932 - ((2 * v556) & 0xE2628EA8)) ^ LODWORD(STACK[0x48C]);
  unsigned int v558 = (v557 - 991643417 - ((2 * v557) & 0x89C971CE)) ^ LODWORD(STACK[0x4A8]);
  int v559 = (v558 + 855914054 - ((2 * v558) & 0x66086C8C)) ^ LODWORD(STACK[0x63C]);
  unsigned int v560 = LODWORD(STACK[0x614]) ^ (v559 + 760419377 - ((2 * v559) & 0x5AA62862));
  int v561 = (v560 >> 21) ^ (v550 >> 27);
  unsigned int v562 = ((LODWORD(STACK[0x618]) ^ (LODWORD(STACK[0x5B8]) >> 26) ^ 0x21)
        - 1962966251
        - 2
        * ((LODWORD(STACK[0x618]) ^ (LODWORD(STACK[0x5B8]) >> 26) ^ 0x21) & 0xDDDDDDDD ^ (LODWORD(STACK[0x5B8]) >> 26) & 8)) ^ LODWORD(STACK[0x368]);
  int v563 = (v562 - 1137705847 - ((2 * v562) & 0x785FF912)) ^ LODWORD(STACK[0x36C]);
  int v564 = (v563 + 1497968267 - ((2 * v563) & 0x32925D16)) ^ LODWORD(STACK[0x4C4]);
  int v565 = (v564 + 1783296369 - ((2 * v564) & 0x5495E2E2)) ^ LODWORD(STACK[0x4C8]);
  int v566 = (v565 - 315644501 - ((2 * v565) & 0x5A5F4B56)) ^ LODWORD(STACK[0x4D8]);
  unsigned int v567 = (v566 - 939000836 + (~(2 * v566) | 0xEFF00807) + 1) ^ LODWORD(STACK[0x4CC]);
  int v568 = (v567 - 1003298429 - ((2 * v567) & 0x865C306)) ^ LODWORD(STACK[0x4C0]);
  int v569 = (v568 + 527759126 - ((2 * v568) & 0x3EE9EE2C)) ^ LODWORD(STACK[0x4BC]);
  int v570 = (v569 + 185784055 - ((2 * v569) & 0x1625ADEE)) ^ LODWORD(STACK[0x370]);
  int v571 = (v570 + 490078828 - ((2 * v570) & 0x3A6C04D8)) ^ LODWORD(STACK[0x364]);
  int v572 = LODWORD(STACK[0x6C4]) ^ 0x10E846E ^ (v571 - 1088754824 - ((2 * v571) & 0x7E35D6F0));
  unsigned int v573 = v572
       + (LODWORD(STACK[0x360]) ^ 0x21D08DD)
       - 2 * (v572 & (LODWORD(STACK[0x360]) ^ 0x21D08DD))
       + 1971344670
       - 2
       * ((v572 + (LODWORD(STACK[0x360]) ^ 0x21D08DD) - 2 * (v572 & (LODWORD(STACK[0x360]) ^ 0x21D08DD))) & 0x7580551F ^ (v572 + (LODWORD(STACK[0x360]) ^ 0x21D08DD)) & 1);
  unsigned int v574 = (((LODWORD(STACK[0x5B8]) >> 3) ^ 0x10E846EE)
        + 1971344670
        - 2 * (((LODWORD(STACK[0x5B8]) >> 3) ^ 0x10E846EE) & 0x1580551F ^ (LODWORD(STACK[0x5B8]) >> 3) & 1)) ^ LODWORD(STACK[0x4D0]) ^ v573;
  int v575 = 16 * LODWORD(STACK[0x4B4]);
  unsigned int v576 = (32 * LODWORD(STACK[0x4B4])) ^ (LODWORD(STACK[0x4B4]) << 30) ^ v575 ^ 0xBE699100;
  int v577 = (v576 + 818754411 - 2 * (v576 & 0x30CD3370 ^ v575 & 0x10)) ^ LODWORD(STACK[0x62C]);
  int v578 = (v577 + 78235345 - ((2 * v577) & 0x9538DA2)) ^ LODWORD(STACK[0x624]);
  unsigned int v579 = (v578 + 1179883826 - ((2 * v578) & 0x8CA73264)) ^ LODWORD(STACK[0x4AC]);
  int v580 = (v579 - 1414139173 - ((2 * v579) & 0x576BE5B6)) ^ LODWORD(STACK[0x35C]);
  unsigned int v581 = (v580 + 2027681761 - ((2 * v580) & 0xF1B7EFC2)) ^ LODWORD(STACK[0x358]);
  unsigned int v582 = (v581 + 1458572557 - ((2 * v581) & 0xADE01A1A)) ^ LODWORD(STACK[0x4A4]);
  int v583 = (v582 - 1216850948 - ((2 * v582) & 0x6EF0A7F8)) ^ LODWORD(STACK[0x350]);
  unsigned int v584 = (v583 - 170632104 - ((2 * v583) & 0xEBA8B8B0)) ^ LODWORD(STACK[0x4A0]);
  unsigned int v585 = (v584 - 799317137 - ((2 * v584) & 0xA0B6C6DE)) ^ LODWORD(STACK[0x598]);
  int v586 = (v585 + 972017860 - ((2 * v585) & 0x73DFA188)) ^ LODWORD(STACK[0x628]);
  unsigned int v587 = (v586 - 1030295686 - ((2 * v586) & 0x852DDEF4)) ^ LODWORD(STACK[0x498]);
  int v588 = (v574 >> 27) ^ (v573 >> 30) ^ (v574 >> 21);
  int v589 = (LODWORD(STACK[0x5C4]) << 29) ^ (LODWORD(STACK[0x5B8]) << 6) ^ (2 * LODWORD(STACK[0x5B8])) ^ (4 * v574) ^ (32 * v574) ^ (v574 << 11) ^ (4 * v588) ^ (32 * v588) ^ (v588 << 11) ^ LODWORD(STACK[0x4B0]) ^ (4 * v560) ^ (32 * v560) ^ (v560 << 11) ^ (4 * v561) ^ (32 * v561) ^ (v561 << 11) ^ (((v587 + 618130082 - ((2 * v587) & 0x49AFD544)) ^ LODWORD(STACK[0x620])) - 1806674821 - 2 * (((v587 + 618130082 - ((2 * v587) & 0x49AFD544)) ^ LODWORD(STACK[0x620])) & 0x1450547F ^ (v587 + 618130082 - ((2 * v587) & 0x49AFD544)) & 4)) ^ 0x35505B5A;
  unsigned int v590 = (v589 + 1362296504 - ((2 * v589) & 0xA265FD70)) ^ LODWORD(STACK[0x440]);
  int v591 = (v590 - 1264789834 - ((2 * v590) & 0x6939AD6C)) ^ LODWORD(STACK[0x37C]);
  unsigned int v592 = (v591 - 853511766 - ((2 * v591) & 0x9A40E354)) ^ LODWORD(STACK[0x374]);
  int v593 = (v592 + 933416112 - ((2 * v592) & 0x6F459960)) ^ LODWORD(STACK[0x5BC]);
  int v594 = (v593 + 965007590 - ((2 * v593) & 0x7309B1CC)) ^ LODWORD(STACK[0x5B4]);
  unsigned int v595 = (v594 + 1555159915 - ((2 * v594) & 0xB963B6D6)) ^ LODWORD(STACK[0x5C0]);
  unsigned int v596 = (v595 + 1278548561 - ((2 * v595) & 0x986A34A2)) ^ LODWORD(STACK[0x4E8]);
  int v597 = (v596 - 1627216652 - ((2 * v596) & 0x3E0549E8)) ^ LODWORD(STACK[0x5AC]);
  int v598 = (v597 + 638939765 - ((2 * v597) & 0x4C2AE4EA)) ^ LODWORD(STACK[0x378]);
  unsigned int v599 = (v598 - 1027996434 - ((2 * v598) & 0x857409DC)) ^ LODWORD(STACK[0x5B0]);
  int v600 = (v599 + 533049254 - ((2 * v599) & 0x3F8B5F4C)) ^ LODWORD(STACK[0x4F4]);
  int v601 = (v600 + 195581571 - ((2 * v600) & 0x1750AD06)) ^ LODWORD(STACK[0x4E4]);
  int v602 = (v601 + 959967829 - ((2 * v601) & 0x726FE4AA)) ^ LODWORD(STACK[0x5A0]);
  int v603 = (v602 + 729530802 - ((2 * v602) & 0x56F78364)) ^ LODWORD(STACK[0x5A8]);
  int v604 = (v603 - 1710955569 - ((2 * v603) & 0x3409C79E)) ^ LODWORD(STACK[0x5A4]);
  unsigned int v605 = v574 ^ 0x9F0E05CF ^ (v604 - ((2 * v604) & 0x2EF44D70) - 1753602376);
  unsigned int v606 = v588 ^ 0xABAD46C9 ^ (v605 - 1414707574 - ((2 * v605) & 0x575A8D14));
  unsigned int v607 = (v606 - 118132068 - ((2 * v606) & 0xF1EAE83E) + 387) ^ v560;
  unsigned int v608 = ((v607 ^ 0xFA3F9858) + 849264857 - 2 * ((v607 ^ 0xFA3F9858) & 0x329EC0F9 ^ v607 & 0x20)) ^ v561;
  LODWORD(STACK[0x448]) = v608;
  v609 = (unsigned __int8 *)STACK[0x718];
  LODWORD(STACK[0x498]) = ((*(unsigned __int8 *)(STACK[0x718] + 956) ^ 0xD3) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + 653) ^ 0x85) << 8) | *(unsigned __int8 *)(STACK[0x718] + 350) ^ 0x85;
  int v610 = v609[170] ^ 0xD3 | ((v609[473] ^ 0xD3) << 8);
  int v611 = v610 - ((2 * v610) & 0x967A) - 2037167299;
  unsigned int v612 = (v611 & 0x8496FFFF ^ 0xC79B4B3D)
       + 1459883161
       + ((2 * (v611 & 0x8496FFFF ^ 0xC79B4B3D)) & 0x8081930 ^ 0x79FFFFFF);
  unsigned int v613 = ((v612 << 8) ^ 0x40C9800) - ((2 * ((v612 << 8) ^ 0x40C9800)) & 0x8AC0E200) - 983535147;
  LODWORD(STACK[0x4B0]) = v613 ^ 0x6071D5 | v609[832] ^ 0xD3;
  LOWORD(v612) = ((LODWORD(STACK[0x5C8]) + 29675) | 0x4CC2)
               - ((LODWORD(STACK[0x5C8]) + 29675) & 0xB33D)
               + (v613 & 0xB400 ^ 0x841F)
               + (v613 & 0xB400 ^ 0x3000);
  LODWORD(STACK[0x4B8]) = ((v609[709] ^ 0xD3 ^ (((((unsigned __int16)v611 ^ 0x4B3D)
                                                + 3225
                                                + ~((2 * ((unsigned __int16)v611 ^ 0x4B3D)) & 0x1930)) & 0x7A56 ^ 0x810)
                                              + (v611 & 0x7A56 ^ 0x3042))) << 16) | ((v609[406] ^ 0xD3) << 8) | v609[103] ^ 0xD3;
  LODWORD(STACK[0x4C4]) = v609[585] ^ 0xD3 | ((v609[888] ^ 0xD3) << 8) | ((v609[(unsigned __int16)(v612 + 1)] ^ 0xD3) << 16);
  LODWORD(STACK[0x4AC]) = ((v609[159] ^ 0xD3) << 8) | ((v609[462] ^ 0xD3) << 16) | v609[821] ^ 0xD3;
  LODWORD(STACK[0x490]) = ((v609[641] ^ 0xD3) << 8) | ((v609[944] ^ 0xD3) << 16) | v609[338] ^ 0xD3;
  LODWORD(STACK[0x4C8]) = ((v609[877] ^ 0xD3) << 8) | ((v609[215] ^ 0xD3) << 16) | v609[574] ^ 0xD3;
  LODWORD(STACK[0x4A8]) = ((v609[394] ^ 0xD3) << 8) | ((v609[697] ^ 0xD3) << 16) | v609[91] ^ 0xD3;
  LODWORD(STACK[0x4D0]) = ((v609[933] ^ 0xD3) << 16) | ((v609[630] ^ 0xD3) << 8) | v609[327] ^ 0xD3;
  LODWORD(STACK[0x4CC]) = v609[506] ^ 0xD3 | ((v609[809] ^ 0xD3 | ((v609[450] ^ 0xD3) << 16) | ((v609[147] ^ 0xD3) << 8)) << 8);
  int v614 = ((v609[203] ^ 0xD3) << 16) | ((v609[865] ^ 0xD3) << 8) | v609[562] ^ 0xD3;
  LODWORD(STACK[0x5A0]) = v609[742] ^ 0xD3 | ((((v609[686] ^ 0xD3) << 16) | ((v609[383] ^ 0xD3) << 8) | v609[80] ^ 0xD3) << 8);
  int v615 = (((v609[136] ^ 0xD3) << 8) + 12436911 - (((v609[136] ^ 0xD3) << 9) & 0x18A00)) ^ 0xBDC5AF | ((v609[439] ^ 0xD3) << 16);
  LODWORD(STACK[0x598]) = ((v609[921] ^ 0xD3) << 16) | ((v609[618] ^ 0xD3) << 8) | v609[315] ^ 0xD3;
  LODWORD(STACK[0x4BC]) = (v609[798] ^ 0xD3) + v615;
  LODWORD(STACK[0x4A0]) = v609[259] ^ 0xD3 | (v614 << 8);
  int v616 = v609[248];
  LODWORD(STACK[0x5BC]) = v616 ^ 0xD3 | ((v609[551] ^ 0xD3 | ((v609[854] ^ 0xD3) << 8) | ((v609[192] ^ 0xD3) << 16)) << 8);
  LODWORD(STACK[0x48C]) = ((v609[371] ^ 0xD3) << 8) | ((v609[((v616 & 0x1C ^ 0xCLL) + (v616 & 0x1C ^ 0x10)) ^ 0x2BE] ^ 0xD3) << 16) | v609[68] ^ 0xD3;
  LODWORD(STACK[0x5AC]) = ((v609[910] ^ 0xD3) << 24) | ((v609[607] ^ 0x85) << 16) | ((v609[304] ^ 0xD3) << 8);
  LODWORD(STACK[0x4A4]) = ((v609[124] ^ 0xD3) << 8) | ((v609[427] ^ 0xD3) << 16) | v609[786] ^ 0xD3;
  LODWORD(STACK[0x4B4]) = v609[57] ^ 0xD3 | ((v609[663] ^ 0xD3) << 16) | ((v609[360] ^ 0xD3) << 8);
  LODWORD(STACK[0x4C0]) = ((v609[180] ^ 0xD3) << 16) | ((v609[842] ^ 0xD3) << 8) | v609[539] ^ 0xD3;
  LODWORD(STACK[0x4F4]) = ((v609[416] ^ 0xD3) << 16) | ((v609[113] ^ 0xD3) << 8) | v609[775] ^ 0x85;
  LODWORD(STACK[0x5B8]) = ((v609[595] ^ 0xD3) << 8) | ((v609[898] ^ 0xD3) << 16) | v609[292] ^ 0xD3;
  LODWORD(STACK[0x4E4]) = v609[528] ^ 0xD3 | ((v609[831] ^ 0xD3) << 8) | ((v609[169] ^ 0xD3) << 16);
  LODWORD(STACK[0x4E8]) = v609[45] ^ 0xD3 | ((v609[348] ^ 0xD3) << 8) | ((v609[651] ^ 0xD3) << 16);
  LODWORD(STACK[0x5B4]) = v609[281] ^ 0xD3 | ((v609[584] ^ 0xD3) << 8) | ((v609[887] ^ 0xD3) << 16);
  LODWORD(STACK[0x590]) = ((v609[404] ^ 0xD3) << 16) | ((v609[101] ^ 0xD3) << 8) | v609[763] ^ 0xD3;
  LODWORD(STACK[0x5A8]) = ((v609[640] ^ 0xD3) << 16) | ((v609[337] ^ 0xD3) << 8) | v609[34] ^ 0xD3;
  LODWORD(STACK[0x5C0]) = ((v609[157] ^ 0xD3) << 16) | ((v609[819] ^ 0xD3) << 8) | v609[516] ^ 0xD3;
  LODWORD(STACK[0x5A4]) = ((v609[393] ^ 0xD3) << 16) | ((v609[90] ^ 0xD3) << 8) | v609[752] ^ 0xD3;
  LODWORD(STACK[0x4D8]) = ((v609[875] ^ 0xD3) << 16) | ((v609[572] ^ 0xD3) << 8) | v609[269] ^ 0xD3;
  int v617 = v609[505] ^ 0xD3 | ((v609[808] ^ 0xD3) << 8) | ((v609[146] ^ 0xD3) << 16);
  LODWORD(STACK[0x5C4]) = v609[22] ^ 0xD3 | ((v609[325] ^ 0xD3) << 8) | ((v609[628] ^ 0xD3) << 16);
  int v618 = STACK[0x40C];
  int v619 = (LODWORD(STACK[0x40C]) ^ 0xD3) + 842433194 - ((2 * (LODWORD(STACK[0x40C]) ^ 0xD3)) & 0x55555555);
  LODWORD(STACK[0x440]) = v619;
  LODWORD(STACK[0x830]) = -2009212831 * (LODWORD(STACK[0x56C]) ^ 0xE216619C) - 75026750;
  LODWORD(STACK[0x834]) = -2009212831 * (v608 ^ 0x54448374) - 75026750;
  LODWORD(STACK[0x838]) = -2009212831 * (LODWORD(STACK[0x5D0]) ^ 0x31D5F1AF) - 75026750;
  unsigned int v620 = STACK[0x5D4];
  unsigned int v621 = LODWORD(STACK[0x5D4]) ^ LODWORD(STACK[0x638]);
  uint64_t v622 = v621 ^ 0x78A2DC84;
  LODWORD(STACK[0x83C]) = -2009212831 * v622 - 75026750;
  LODWORD(STACK[0x844]) = -2009212831 * (v480 ^ 0xCD6DE9D3) - 75026750;
  LODWORD(STACK[0x848]) = -2009212831 * (LODWORD(STACK[0x6C8]) ^ 0x88D1417B) - 75026750;
  LODWORD(STACK[0x840]) = -2009212831 * (v533 ^ 0x97CC58CF) - 75026750;
  LOBYTE(v543) = (v619 ^ 0xAA) - 2 * ((v619 ^ 0xAA) & 0xAB ^ (v619 ^ 0xAA) & 2) - 87;
  LODWORD(STACK[0x5B0]) = (v619 ^ 0x323682AA | (v617 << 8))
                        - 2 * ((v619 ^ 0x323682AA | (v617 << 8)) & 0x33BF63AB ^ (v619 ^ 0x323682AA) & 2)
                        - 1279302743;
  LODWORD(STACK[0x6C4]) = (((v621 ^ 0xD75AAA3) << 11) ^ 0xBBB13800)
                        + 627893842
                        - ((2 * (((v621 ^ 0xD75AAA3) << 11) ^ 0xBBB13800)) & 0x4AD9C000);
  LODWORD(STACK[0x84C]) = -2009212831 * STACK[0x3F8] - 75026750;
  LODWORD(STACK[0x618]) = ((8 * (v621 ^ 0xD75AAA3)) ^ 0xAEBBB138)
                        - 1899885269
                        + ~((2 * ((8 * (v621 ^ 0xD75AAA3)) ^ 0xAEBBB138)) & 0x1D841A50);
  int v623 = v609[12];
  LODWORD(STACK[0x49C]) = v623;
  LOBYTE(v575) = (v623 & 0xD ^ 1) + (v623 & 0xD ^ 0xC);
  LODWORD(STACK[0x63C]) = (((v621 ^ 0xD75AAA3) << 14) ^ 0xDD89C000)
                        - 1164799692
                        - ((2 * (((v621 ^ 0xD75AAA3) << 14) ^ 0xDD89C000)) & 0x75250000);
  unsigned int v624 = v620;
  int v625 = (v620 >> 28) ^ (v620 >> 27) ^ LODWORD(STACK[0x5EC]) ^ 0xB;
  LODWORD(STACK[0x6C8]) = (((v621 ^ 0xD75AAA3) << 26) ^ 0x9C000000)
                        - 940627031
                        - ((2 * (((v621 ^ 0xD75AAA3) << 26) ^ 0x9C000000)) & 0x88000000);
  unsigned int v626 = (((v621 ^ 0xD75AAA3) << 18) ^ 0xD89C0000)
       - 839422508
       - ((2 * (((v621 ^ 0xD75AAA3) << 18) ^ 0xD89C0000)) & 0x9BE80000);
  LODWORD(STACK[0x638]) = v626;
  unsigned int v627 = (((v621 ^ 0xD75AAA3) << 19) ^ 0xB1380000)
       - 768473302
       - ((2 * (((v621 ^ 0xD75AAA3) << 19) ^ 0xB1380000)) & 0xA4600000);
  LODWORD(STACK[0x5EC]) = v627;
  LODWORD(STACK[0x614]) = (((v621 ^ 0xD75AAA3) << 22) ^ 0x89C00000)
                        - 721564755
                        - ((2 * (((v621 ^ 0xD75AAA3) << 22) ^ 0x89C00000)) & 0xA9800000);
  int v628 = v609[449];
  LODWORD(STACK[0x640]) = v628;
  unsigned int v629 = (((v621 ^ 0xD75AAA3) << 23) ^ 0x13800000)
       - 827367775
       - ((2 * (((v621 ^ 0xD75AAA3) << 23) ^ 0x13800000)) & 0x9D000000);
  LODWORD(STACK[0x370]) = v629;
  int v630 = v622 << ((~(_BYTE)v543 & 2) + (~(_BYTE)v618 & 2));
  int v631 = v622 << v575;
  uint64_t v632 = v622 << ((v628 & 0x75 ^ 0x51 | v628 & 0x75 ^ 0x24) ^ 0x60u);
  LODWORD(v622) = v622 >> ((((v543 ^ 0x56) - 2 * ((v543 ^ 0x56) & 3) + 3) ^ v618) & 0xB);
  unsigned int v633 = v622 + 668137570 - ((2 * v622) & 0x4FA5F0C4);
  int v634 = (((v621 ^ 0xD75AAA3) << 27) ^ 0x38000000)
       - 1385275551
       - ((2 * (((v621 ^ 0xD75AAA3) << 27) ^ 0x38000000)) & 0x55555555);
  LODWORD(STACK[0x374]) = v634;
  int v635 = (((v621 ^ 0xD75AAA3) << 28) ^ 0x70000000)
       + 556462035
       - ((2 * (((v621 ^ 0xD75AAA3) << 28) ^ 0x70000000)) & 0x40000000);
  LODWORD(STACK[0x444]) = v635;
  unsigned int v636 = LODWORD(STACK[0x5E8]) ^ (v624 >> 15) ^ ((v621 ^ 0xD75AAA3) >> 2) ^ (v625 - 659010957 - ((2 * v625) & 0xFFFFFFE7));
  int v637 = v633 ^ ((v636 ^ 0x1D752CCC) + 668137570 - 2 * ((v636 ^ 0x1D752CCC) & 0x27D2F872 ^ v636 & 0x10));
  int v638 = v637 - 1243315048 - ((2 * v637) & 0x6BC90930);
  unsigned int v639 = (v624 >> 21) ^ 0xB5E4875D;
  int v640 = (v624 >> 19) ^ 0x657B5867;
  unsigned int v641 = ((v638 ^ v639) + 1702582131 - ((2 * (v638 ^ v639)) & 0xCAF6AEE6)) ^ v640;
  unsigned int v642 = (v624 >> 18) ^ 0xBA929F23;
  int v643 = (v641 - 1164803829 - ((2 * v641) & 0x75250216)) ^ v642;
  int v644 = (v624 >> 14) ^ 0x57F17D1F;
  unsigned int v645 = (v643 + 1475387284 - ((2 * v643) & 0xAFE13F28)) ^ v644;
  int v646 = (v624 >> 13) ^ 0x55E2B10A;
  unsigned int v647 = (v645 + 1440838684 - ((2 * v645) & 0xABC2E838)) ^ v646;
  LODWORD(v622) = (v621 >> 10) ^ 0x27D4FA92;
  LODWORD(STACK[0x3F8]) = v622;
  int v648 = (v647 + 667603493 - ((2 * v647) & 0x4F95A44A)) ^ v622;
  LODWORD(v622) = (v621 >> 9) ^ 0xE8BA62E4;
  LODWORD(STACK[0x37C]) = v622;
  int v649 = (v648 - 393858166 - ((2 * v648) & 0xD10C6714)) ^ v622;
  int v650 = v649 + 560884566 - ((2 * v649) & 0x42DCD6AC);
  int v651 = (v621 >> 6) ^ 0x208CE024;
  unsigned int v652 = (v621 ^ 0xD75AAA3) >> 4;
  LODWORD(v622) = (v621 ^ 0xD75AAA3) >> 5;
  LODWORD(STACK[0x378]) = v622;
  int v653 = v622 ^ v652 ^ ((v650 ^ v651) - ((2 * (v650 ^ v651)) & 0x54114F72) + 705210297);
  LODWORD(STACK[0x634]) = (((v621 ^ 0xD75AAA3) << 13) ^ 0xEEC4E000)
                        - 633618699
                        - ((2 * (((v621 ^ 0xD75AAA3) << 13) ^ 0xEEC4E000)) & 0xB4774000);
  int v654 = (32 * (v621 ^ 0xD75AAA3)) ^ (v621 << 30) ^ (16 * (v621 ^ 0xD75AAA3)) ^ ((v621 ^ 0xD75AAA3) << 17) ^ v631 ^ v632 ^ v630;
  unsigned int v655 = ((v653 ^ 0x29A61C08u) >> 27) ^ (v633 >> 30) ^ ((v653 ^ 0x29A61C08u) >> 21);
  int v656 = v654 ^ (4 * (v653 ^ 0x29A61C08)) ^ (32 * (v653 ^ 0x29A61C08)) ^ ((v653 ^ 0x29A61C08) << 11) ^ (32 * v655) ^ (4 * v655);
  int v657 = (~(2 * ((v656 ^ (v655 << 11) ^ 0x16B650F0) & 0xEC20D2E ^ v656 & 4))
        + (v656 ^ (v655 << 11) ^ 0x16B650F0)
        - 1899885269) ^ LODWORD(STACK[0x618]);
  int v658 = (v657 + 627893842 - ((2 * v657) & 0x4AD9CCA4)) ^ LODWORD(STACK[0x6C4]);
  int v659 = (v658 - 1164799692 - ((2 * v658) & 0x75252268)) ^ LODWORD(STACK[0x63C]);
  unsigned int v660 = (v659 - 839422508 - ((2 * v659) & 0x9BEEDBA8)) ^ v626;
  unsigned int v661 = (v660 - 768473302 - ((2 * v660) & 0xA4640E54)) ^ v627;
  unsigned int v662 = (v661 - 721564755 - ((2 * v661) & 0xA9FB975A)) ^ LODWORD(STACK[0x614]);
  unsigned int v663 = (v662 - 827367775 - ((2 * v662) & 0x9D5EBD42)) ^ v629;
  unsigned int v664 = (v663 - 940627031 - ((2 * v663) & 0x8FDE5752)) ^ LODWORD(STACK[0x6C8]);
  int v665 = (v664 + 556462035 - ((2 * v664) & 0x4255DFA6)) ^ v635;
  int v666 = (v665 - 1385275551 - ((2 * v665) & 0x5ADCBEC2)) ^ v634;
  int v667 = (v666 - ((2 * v666) & 0x2A91156E) + 357075639) ^ LODWORD(STACK[0x56C]);
  unsigned int v668 = v653 ^ 0x7051D931 ^ ((v667 ^ 0xF75EEB2B) + 1588245083 - 2 * ((v667 ^ 0xF75EEB2B) & 0x5EAAB25F ^ v667 & 4));
  LODWORD(STACK[0x40C]) = v655 ^ 0x2D1AF099 ^ (v668 + 756740249 - ((2 * v668) & 0x5A35E146) + 10);
  LODWORD(STACK[0x620]) = (((v621 ^ 0xD75AAA3) << 7) ^ 0xEBBB1380)
                        - 1970591332
                        - ((2 * (((v621 ^ 0xD75AAA3) << 7) ^ 0xEBBB1380)) & 0x15165300);
  LODWORD(STACK[0x624]) = (((v621 ^ 0xD75AAA3) << 10) ^ 0x5DD89C00)
                        - 887431072
                        - ((2 * (((v621 ^ 0xD75AAA3) << 10) ^ 0x5DD89C00)) & 0x9635C000);
  unsigned int v669 = (((v621 ^ 0xD75AAA3) << 16) ^ 0x76270000)
       - 388824164
       - ((2 * (((v621 ^ 0xD75AAA3) << 16) ^ 0x76270000)) & 0xD1A60000);
  LODWORD(STACK[0x5E8]) = v669;
  LODWORD(STACK[0x62C]) = (((v621 ^ 0xD75AAA3) << 20) ^ 0x62700000)
                        - 743499446
                        - ((2 * (((v621 ^ 0xD75AAA3) << 20) ^ 0x62700000)) & 0xA7400000);
  LODWORD(STACK[0x630]) = (((v621 ^ 0xD75AAA3) << 25) ^ 0x4E000000)
                        - 381679387
                        - ((2 * (((v621 ^ 0xD75AAA3) << 25) ^ 0x4E000000)) & 0xD0000000);
  LODWORD(STACK[0x628]) = (((v621 ^ 0xD75AAA3) << 21) ^ 0xC4E00000)
                        - 1577686544
                        - ((2 * (((v621 ^ 0xD75AAA3) << 21) ^ 0xC4E00000)) & 0x43C00000);
  unsigned int v670 = (v624 >> 20) ^ ((v621 ^ 0xD75AAA3) >> 1) ^ 0x3AEBBC99;
  unsigned int v671 = HIWORD(v624) ^ 0xA5B68B69;
  int v672 = (v670 - 1514736693 - ((2 * v670) & 0x4B6DE796)) ^ v671;
  int v673 = (v672 - 1164803829 - ((2 * v672) & 0x75250216)) ^ v642;
  unsigned int v674 = LODWORD(STACK[0x5FC]) ^ 0xA7AA4AF0 ^ (v673 - 1482011956 - ((2 * v673) & 0x4F549598));
  unsigned int v675 = LODWORD(STACK[0x5F0]) ^ 0xDDE4B7F9 ^ (v674 - 572213733 - ((2 * v674) & 0xBBC96C36));
  int v676 = (v675 - 1243315048 - ((2 * v675) & 0x6BC90930)) ^ v639;
  unsigned int v677 = (v676 + 1702582131 - ((2 * v676) & 0xCAF6AEE6)) ^ v640;
  unsigned int v678 = (v677 + 1475387284 - ((2 * v677) & 0xAFE13F28)) ^ v644;
  unsigned int v679 = (v678 + 1440838684 - ((2 * v678) & 0xABC2E838)) ^ v646;
  unsigned int v680 = (v624 >> 12) ^ 0xCAA9505F;
  unsigned int v681 = (v679 - 894510478 - ((2 * v679) & 0x955DB4E4)) ^ v680;
  unsigned int v682 = (v624 >> 11) ^ 0xAB072E6D;
  int v683 = (v681 - 1425524170 - ((2 * v681) & 0x5610746C)) ^ v682;
  LODWORD(v632) = (v621 >> 7) ^ 0x7B5E7965;
  int v684 = (v683 + 2075081948 - ((2 * v683) & 0xF75E79B8)) ^ v632;
  unsigned int v685 = v652 ^ v651 ^ (v684 + 560884566 - ((2 * v684) & 0x42DCD6AC));
  LODWORD(STACK[0x5FC]) = v685;
  int v686 = (v685 >> 21) ^ (v624 >> 31) ^ (v685 >> 27);
  LODWORD(STACK[0x5F0]) = v686;
  LODWORD(STACK[0x56C]) = ((4 * v686) ^ 0xE8) - ((2 * ((4 * v686) ^ 0xE8)) & 0x8E8);
  int v687 = (v624 >> 17) ^ (v621 >> 8) ^ STACK[0x604] & 0xEF ^ 0x789EA1 ^ (unsigned __int16)(LODWORD(STACK[0x600])
                                                                                        - 27436
                                                                                        + LODWORD(STACK[0x608]));
  int v688 = (v687 - 1243315048 - ((2 * v687) & 0x1C90930)) ^ v639;
  unsigned int v689 = (v688 + 1702582131 + (~(2 * v688) | 0xB5095119) + 1) ^ v640;
  int v690 = (v689 - 1514736693 - ((2 * v689) & 0x4B6DE796)) ^ v671;
  int v691 = (v690 + 1475387284 - ((2 * v690) & 0x2FE13F28)) ^ v644;
  unsigned int v692 = (v691 - 894510478 - ((2 * v691) & 0x955DB4E4)) ^ v680;
  int v693 = (v692 - 1425524170 - ((2 * v692) & 0x5610746C)) ^ v682;
  int v694 = (v693 + 667603493 - ((2 * v693) & 0x4F95A44A)) ^ LODWORD(STACK[0x3F8]);
  unsigned int v695 = (v694 - 393858166 - ((2 * v694) & 0xD10C6714)) ^ LODWORD(STACK[0x37C]);
  int v696 = (v695 + 2075081948 - ((2 * v695) & 0xF75E79B8)) ^ v632;
  unsigned int v697 = LODWORD(STACK[0x378]) ^ v651 ^ (v696 + 560884566 - ((2 * v696) & 0x42DCD6AC));
  unsigned int v698 = (4 * v621) ^ (v621 << 8) ^ (v621 << 15) ^ (v621 << 24) ^ (4 * v697) ^ 0xA4AF18D4;
  int v699 = v698 - 1899885269 + ~((2 * v698) & 0x1D841A54);
  int v700 = ((v699 ^ LODWORD(STACK[0x618])) - 1970591332 - 2 * ((v699 ^ LODWORD(STACK[0x618])) & 0xA8B299D ^ v699 & 1)) ^ LODWORD(STACK[0x620]);
  unsigned int v701 = (v700 - 887431072 - ((2 * v700) & 0x9635C0C0)) ^ LODWORD(STACK[0x624]);
  unsigned int v702 = (v701 - 388824164 - ((2 * v701) & 0xD1A60738)) ^ v669;
  unsigned int v703 = (v702 - 633618699 - ((2 * v702) & 0xB4777DEA)) ^ LODWORD(STACK[0x634]);
  int v704 = (v703 + 627893842 - ((2 * v703) & 0x4AD9CCA4)) ^ LODWORD(STACK[0x6C4]);
  unsigned int v705 = (v704 - 839422508 - ((2 * v704) & 0x9BEEDBA8)) ^ LODWORD(STACK[0x638]);
  unsigned int v706 = (v705 - 743499446 - ((2 * v705) & 0xA75E3294)) ^ LODWORD(STACK[0x62C]);
  int v707 = (v706 - 1577686544 - ((2 * v706) & 0x43ECD3E0)) ^ LODWORD(STACK[0x628]);
  unsigned int v708 = (v707 - 721564755 - ((2 * v707) & 0xA9FB975A)) ^ LODWORD(STACK[0x614]);
  unsigned int v709 = (v708 - 827367775 - ((2 * v708) & 0x9D5EBD42)) ^ LODWORD(STACK[0x370]);
  unsigned int v710 = (v709 - 381679387 - ((2 * v709) & 0xD28011CA)) ^ LODWORD(STACK[0x630]);
  unsigned int v711 = (v710 - 940627031 - ((2 * v710) & 0x8FDE5752)) ^ LODWORD(STACK[0x6C8]);
  int v712 = (v711 - 1385275551 - ((2 * v711) & 0x5ADCBEC2)) ^ LODWORD(STACK[0x374]);
  unsigned int v713 = v697 ^ LODWORD(STACK[0x5D0]) ^ (v712 - ((2 * v712) & 0xD641F828) - 350159852);
  int v714 = (v697 ^ 0x3AEBBB1) << ((v713 & 5 ^ 5) + (v713 & 5));
  unsigned int v715 = v697 >> 21;
  int v716 = (4 * (v697 >> 21)) ^ (v697 << 11) ^ (32 * (v697 >> 21)) ^ (v697 >> 21 << 11) ^ v713;
  int v717 = STACK[0x5D8];
  LODWORD(v622) = ((LODWORD(STACK[0x5D8]) << 17) ^ 0xA300000) - 720749613 - (STACK[0x55C] & 0xAA140000);
  int v718 = LODWORD(STACK[0x408]) ^ (LODWORD(STACK[0x594]) >> 26) ^ ((LODWORD(STACK[0x594]) >> 31) | 0x70EC04C) ^ (LODWORD(STACK[0x5D8]) >> 3);
  int v719 = (v718 + 1313926224 - ((2 * v718) & 0x1CA1D8A4) + 2) ^ LODWORD(STACK[0x434]);
  int v720 = (v719 + 1038081464 - ((2 * v719) & 0x7BBFBB72) + 1) ^ LODWORD(STACK[0x550]);
  unsigned int v721 = (v720 + 1692286897 - ((2 * v720) & 0xC9BC7F62)) ^ LODWORD(STACK[0x41C]);
  unsigned int v722 = (v721 - 856050656 - ((2 * v721) & 0x99F36840)) ^ LODWORD(STACK[0x554]);
  unsigned int v723 = (v722 - 954347678 - ((2 * v722) & 0x8E3B9EC4)) ^ LODWORD(STACK[0x438]);
  unsigned int v724 = LODWORD(STACK[0x428]) ^ 0xBEE22057 ^ (v723 - 1092478943 - ((2 * v723) & 0x7DC43042));
  int v725 = (v724 + 488133676 - ((2 * v724) & 0x3A30A858)) ^ LODWORD(STACK[0x54C]);
  int v726 = (v725 + 537401852 - ((2 * v725) & 0x401033F8)) ^ LODWORD(STACK[0x414]);
  unsigned int v727 = (v726 - 1056883689 - ((2 * v726) & 0x8202782E)) ^ LODWORD(STACK[0x404]);
  unsigned int v728 = (v727 - 362604531 - ((2 * v727) & 0xD4C6301A)) ^ LODWORD(STACK[0x400]);
  unsigned int v729 = (v728 - 387751470 - ((2 * v728) & 0xD1C6C3A4)) ^ LODWORD(STACK[0x410]);
  unsigned int v730 = LODWORD(STACK[0x688]) ^ (v729 - 1327065670 - ((2 * v729) & 0x61CD2B74));
  int v731 = (2 * LODWORD(STACK[0x5D8])) ^ (LODWORD(STACK[0x5D8]) << 6) ^ LODWORD(STACK[0x560]);
  int v732 = (v730 >> 27) ^ (v730 >> 21);
  LODWORD(STACK[0x688]) = v732;
  int v733 = v731 ^ (4 * v730) ^ (v730 << 11) ^ (32 * v730) ^ (4 * v732) ^ (32 * v732) ^ (v732 << 11) ^ 0x289EACA4;
  int v734 = (v733 - 1244181040 - ((2 * v733) & 0x6BAE9BA0)) ^ LODWORD(STACK[0x698]);
  int v735 = STACK[0x6A0];
  unsigned int v736 = (v734 - 655586782 - ((2 * v734) & 0xB1D91444)) ^ LODWORD(STACK[0x6A0]);
  int v737 = STACK[0x690];
  unsigned int v738 = (v736 - 813570084 - ((2 * v736) & 0x9F03CFB8)) ^ LODWORD(STACK[0x690]);
  int v739 = (v738 + 147982279 - ((2 * v738) & 0x11A40F8E)) ^ LODWORD(STACK[0x6EC]);
  int v740 = (v739 - 1309487830 - ((2 * v739) & 0x63E59A54)) ^ LODWORD(STACK[0x6F0]);
  int v741 = STACK[0x708];
  unsigned int v742 = (v740 - 1000411417 - ((2 * v740) & 0x88BDDDCE)) ^ LODWORD(STACK[0x708]);
  int v743 = STACK[0x6B8];
  unsigned int v744 = (v742 + 1846780249 - ((2 * v742) & 0xDC2742B2)) ^ LODWORD(STACK[0x6B8]);
  int v745 = (v744 + 208285711 - ((2 * v744) & 0x18D4601E)) ^ LODWORD(STACK[0x6E0]);
  int v746 = (v745 - 720749613 - ((2 * v745) & 0xAA1477A6)) ^ v622;
  unsigned int v747 = (v746 - 862990252 - ((2 * v746) & 0x991FA0A8)) ^ LODWORD(STACK[0x710]);
  LODWORD(v331) = STACK[0x6AC];
  int v748 = (v747 - 1433467135 - ((2 * v747) & 0x551E0E02)) ^ LODWORD(STACK[0x6AC]);
  unsigned int v749 = (v748 - 1066748937 - ((2 * v748) & 0x80D567EE)) ^ LODWORD(STACK[0x68C]);
  int v750 = (v749 + 523825198 - ((2 * v749) & 0x3E71E05C)) ^ LODWORD(STACK[0x6D0]);
  int v751 = STACK[0x660];
  int v752 = (v750 - 2128740904 - ((2 * v750) & 0x23BFBB0)) ^ LODWORD(STACK[0x660]);
  int v753 = STACK[0x2A0];
  int v754 = (v752 - 1326185801 - ((2 * v752) & 0x61E8056E)) ^ LODWORD(STACK[0x2A0]);
  unsigned int v755 = v730 ^ 0xCC3684EE ^ (v754 - ((2 * v754) & 0x9F63C97E) - 810425153);
  LODWORD(STACK[0x6F0]) = v755 - ((2 * v755) & 0x943739FC);
  int v756 = STACK[0x568];
  int v757 = LODWORD(STACK[0x558]) ^ (LODWORD(STACK[0x568]) >> 27);
  int v758 = (16 * v717) ^ (32 * v717) ^ (v717 << 30) ^ (4 * LODWORD(STACK[0x568])) ^ (32 * LODWORD(STACK[0x568])) ^ ((LODWORD(STACK[0x568]) ^ v757) << 11);
  LODWORD(STACK[0x6EC]) = v757;
  unsigned int v759 = v758 ^ (32 * v757) ^ (4 * v757) ^ 0xCC531214;
  unsigned int v760 = (v759 - 813570084 - ((2 * v759) & 0x9F03CFBC)) ^ v737;
  unsigned int v761 = (v760 - 655586782 - ((2 * v760) & 0xB1D91444)) ^ v735;
  int v762 = (v761 - 1344141703 - ((2 * v761) & 0x5FC40CF2)) ^ LODWORD(STACK[0x644]);
  unsigned int v763 = (v762 - 1000411417 - ((2 * v762) & 0x88BDDDCE)) ^ v741;
  unsigned int v764 = (v763 + 1846780249 - ((2 * v763) & 0xDC2742B2)) ^ v743;
  int v765 = (v764 - 720749613 - ((2 * v764) & 0xAA1477A6)) ^ v622;
  int v766 = (v765 - 1920167898 - ((2 * v765) & 0x1B19204C)) ^ LODWORD(STACK[0x664]);
  int v767 = (v766 + 819779363 - ((2 * v766) & 0x61B9AE46)) ^ LODWORD(STACK[0x6B0]);
  unsigned int v768 = (v767 - 621968527 - ((2 * v767) & 0xB5DB06E2)) ^ LODWORD(STACK[0x6D8]);
  int v769 = (v768 - 1433467135 - ((2 * v768) & 0x551E0E02)) ^ v331;
  int v770 = (v769 + 1004962692 - ((2 * v769) & 0x77CD0708)) ^ LODWORD(STACK[0x564]);
  int v771 = (v770 - 2128740904 - ((2 * v770) & 0x23BFBB0)) ^ v751;
  int v772 = (v771 - 1326185801 - ((2 * v771) & 0x61E8056E)) ^ v753;
  int v773 = (v772 - 1945866443 - ((2 * v772) & 0x1808DE6A)) ^ LODWORD(STACK[0x5DC]);
  int v774 = (v773 - ((2 * v773) & 0x4DF944F8) - 1493392772) ^ LODWORD(STACK[0x43C]);
  int v775 = ((v774 ^ 0x3130FAB3) + 1128975127 - 2 * ((v774 ^ 0x3130FAB3) & 0x434ACB1F ^ v774 & 8)) ^ v756;
  LODWORD(STACK[0x6E0]) = (v775 ^ 0x40CDAB46) - 2 * ((v775 ^ 0x40CDAB46) & 0x352B352E ^ v775 & 0x20);
  unsigned int v776 = v716 ^ v714;
  unsigned int v777 = v716 ^ v714 ^ 0xC624B04C;
  unsigned int v778 = v777 ^ v715;
  unsigned int v779 = ((4 * (v777 ^ v715)) ^ 0xAA89963C) + 1189105814 - ((2 * ((4 * (v777 ^ v715)) ^ 0xAA89963C)) & 0x8DC0A128);
  LODWORD(STACK[0x710]) = v779;
  unsigned int v780 = v716 ^ ~v714;
  LODWORD(v331) = (((v777 ^ v715) << 16) ^ 0x658F0000)
                - 1372672652
                - ((2 * (((v777 ^ v715) << 16) ^ 0x658F0000)) & 0x5C5C0000);
  LODWORD(STACK[0x660]) = v331;
  int v781 = ((8 * (v777 ^ v715)) ^ 0x55132C78) + 376817305 - ((2 * ((8 * (v777 ^ v715)) ^ 0x55132C78)) & 0x2CEB8D30);
  LODWORD(STACK[0x6D8]) = v781;
  unsigned int v782 = (((v777 ^ v715) << 10) ^ 0x89963C00) - 761061477 - ((2 * (((v777 ^ v715) << 10) ^ 0x89963C00)) & 0xA5463800);
  LODWORD(STACK[0x68C]) = v782;
  unsigned int v783 = (((v777 ^ v715) << 7) ^ 0x5132C780) + 1158880763 - ((2 * (((v777 ^ v715) << 7) ^ 0x5132C780)) & 0x8A263B00);
  LODWORD(STACK[0x664]) = v783;
  unsigned int v784 = (((v777 ^ v715) << 14) ^ 0x9963C000) + 946841568 + (~(2 * (((v777 ^ v715) << 14) ^ 0x9963C000)) | 0x8F20FFFF);
  LODWORD(v609) = (((v777 ^ v715) << 13) ^ 0x4CB1E000)
                + 1492206348
                - ((2 * (((v777 ^ v715) << 13) ^ 0x4CB1E000)) & 0xB1E28000);
  unsigned int v785 = (((v777 ^ v715) << 20) ^ 0x58F00000) + 1154905255 - ((2 * (((v777 ^ v715) << 20) ^ 0x58F00000)) & 0x89A00000);
  LODWORD(STACK[0x644]) = v785;
  unsigned int v786 = (((v777 ^ v715) << 25) ^ 0x1E000000) - 737265925 - ((2 * (((v777 ^ v715) << 25) ^ 0x1E000000)) & 0xA8000000);
  LODWORD(STACK[0x618]) = v786;
  int v787 = (((v777 ^ v715) << 22) ^ 0x63C00000) + 583102547 - ((2 * (((v777 ^ v715) << 22) ^ 0x63C00000)) & 0x45800000);
  LODWORD(STACK[0x708]) = v787;
  unsigned int v788 = (((v777 ^ v715) << 24) ^ 0x8F000000) + 2145764930 - 2 * (((v777 ^ v715) << 24) ^ 0x8F000000);
  LODWORD(STACK[0x6B8]) = v788;
  int v789 = (((v777 ^ v715) << 26) ^ 0x3C000000) - 1438246644 - ((2 * (((v777 ^ v715) << 26) ^ 0x3C000000)) & 0x55555555);
  LODWORD(STACK[0x600]) = v789;
  int v790 = v777 ^ ~v715;
  unsigned int v791 = v777 ^ v715 ^ 0x6AA2658F;
  unsigned int v792 = (2 * v778) ^ (v778 << 6) ^ (v778 << 17) ^ (v790 << 29) ^ (v791 << (STACK[0x440] & 0x1C ^ 0x14 | STACK[0x440] & 0x1C ^ 8)) ^ 0xB6C3A8DE;
  LODWORD(STACK[0x698]) = v778 ^ 0x82BD2C69;
  unsigned int v793 = (v792 - 400602650 - ((2 * v792) & 0xD03E93CC)) ^ v778 ^ 0x82BD2C69;
  unsigned int v794 = (v793 + 1189105814 - ((2 * v793) & 0x8DC0A12C)) ^ v779;
  int v795 = (v794 + 376817305 - ((2 * v794) & 0x2CEB8D32)) ^ v781;
  unsigned int v796 = (v795 + 1158880763 - ((2 * v795) & 0x8A263BF6)) ^ v783;
  unsigned int v797 = (v796 - 761061477 - ((2 * v796) & 0xA5463F36)) ^ v782;
  unsigned int v798 = (v797 + 1492206348 - ((2 * v797) & 0xB1E28618)) ^ v609;
  unsigned int v799 = v784 + 1;
  int v800 = (v798 + 946841568 - ((2 * v798) & 0x70DF4FC0)) ^ (v784 + 1);
  int v801 = (v800 - 1372672652 - ((2 * v800) & 0x5C5D5AE8)) ^ v331;
  unsigned int v802 = (v801 + 1154905255 - ((2 * v801) & 0x89ACE94E)) ^ v785;
  int v803 = (v802 + 583102547 - ((2 * v802) & 0x4582E0A6)) ^ v787;
  unsigned int v804 = (v803 + 2145764930 - ((2 * v803) & 0xFFCB8C84)) ^ v788;
  unsigned int v805 = (v804 - 737265925 - ((2 * v804) & 0xA81C6DF6)) ^ v786;
  unsigned int v806 = v780 >> 31;
  int v807 = (v776 >> 15) ^ (v776 >> 26) ^ (v780 >> 31) ^ (v778 >> 3) ^ 0xD551597;
  int v808 = (v777 >> 30) | 0x341CD268;
  LODWORD(STACK[0x6A0]) = v808;
  int v809 = (v807 + 874304104 - ((2 * v807) & 0x2839A4D2) + 1) ^ v808;
  unsigned int v810 = (v776 >> 29) ^ 0xFE691E82 ^ (v809 - 26665342 - ((2 * v809) & 0xFCD23D0E) + 5);
  unsigned int v811 = (v776 >> 25) ^ 0xE2C52CED;
  unsigned int v812 = (v810 - 490394437 - ((2 * v810) & 0xC58A5976)) ^ v811;
  int v813 = (v776 >> 22) ^ 0x5CDF611A;
  unsigned int v814 = (v812 + 1558143912 - ((2 * v812) & 0xB9BEC750)) ^ v813;
  LODWORD(v632) = (v776 >> 18) ^ 0x81A7073D;
  int v815 = (v814 - 2119750628 - ((2 * v814) & 0x34E5838)) ^ v632;
  unsigned int v816 = (v776 >> 19) ^ 0x96F3CBC0;
  LODWORD(STACK[0x6B0]) = v816;
  int v817 = (v815 - 1762402736 - ((2 * v815) & 0x2DE7BCA0)) ^ v816;
  int v818 = HIWORD(v776) ^ 0x262E2058;
  int v819 = (v817 + 640584926 - ((2 * v817) & 0x4C5D19BC)) ^ v818;
  unsigned int v820 = (v776 >> 12) ^ 0xEF95EAF8;
  LODWORD(v331) = (v819 - 274783595 - ((2 * v819) & 0xDF3E452A)) ^ v820;
  int v821 = a42 ^ (v778 >> 10);
  LODWORD(STACK[0x614]) = v821;
  LODWORD(v331) = (v331 + 1359725072 - ((2 * v331) & 0xA2178420)) ^ v821;
  unsigned int v822 = (v778 >> 8) ^ 0xD233DAA0;
  LODWORD(STACK[0x608]) = v822;
  LODWORD(v331) = (v331 - 765888315 - ((2 * v331) & 0xA4B2F18A)) ^ v822;
  LODWORD(STACK[0x690]) = v778 >> 7;
  LODWORD(v622) = (v778 >> 7) ^ 0xBB270045;
  LODWORD(v331) = (v331 - 1141750642 - ((2 * v331) & 0x77E4891C)) ^ v622;
  int v823 = (v805 - 1438246644 - ((2 * v805) & 0x548C3218)) ^ v789;
  LODWORD(STACK[0x5DC]) = ((v778 << 11) ^ 0x132C7800) - 566460101 - ((2 * ((v778 << 11) ^ 0x132C7800)) & 0xBC790000);
  int v824 = (v778 >> 6) ^ 0x7CFAC299;
  int v825 = v824 ^ (v778 >> 4);
  unsigned int v826 = v825 ^ (v331 + 2102414095 - ((2 * v331) & 0xFAA0961E));
  int v827 = (v826 >> 27) ^ (v826 >> 21);
  LODWORD(STACK[0x6AC]) = v827;
  int v828 = v826 ^ (32 * v826) ^ (v826 << 11) ^ (4 * (v826 ^ v827)) ^ (32 * v827) ^ (v827 << 11) ^ (v823
                                                                                               - (a41 & (2 * v823))
                                                                                               - 813305017) ^ 0x57F0E90B;
  LODWORD(STACK[0x6D0]) = v828 - ((2 * v828) & 0x3038C9EA);
  int v829 = v799 ^ (v778 << 12);
  unsigned int v830 = v609 ^ 0xB939EB13 ^ v829;
  v829 ^= 0x1E3757E0u;
  unsigned int v831 = (v830 + v829 + 1) ^ ((v609 ^ 0xA70EBCF3) + 1);
  unsigned int v832 = v791 >> ((v776 >> 25) & 0x13 ^ 1 | (v776 >> 25) & 0x13 ^ 0x12);
  unsigned int v833 = ((v831 + 1492206348 - ((2 * v831) & 0xB1E28618)) ^ v609) + v829;
  unsigned int v834 = ((v778 << 18) ^ 0x963C0000) + 1309963167 - ((2 * ((v778 << 18) ^ 0x963C0000)) & 0x9C280000);
  unsigned int v835 = ((v778 << 21) ^ 0xB1E00000) + 476222594 - ((2 * ((v778 << 21) ^ 0xB1E00000)) & 0x38C00000);
  LODWORD(STACK[0x604]) = v835;
  int v836 = (v776 >> 13) ^ (v776 >> 20) ^ (v778 >> 1) ^ (unsigned __int16)v832;
  int v837 = ((v836 ^ 0x35545C39) - 490394437 - 2 * ((v836 ^ 0x35545C39) & 0x62C52CBF ^ v836 & 4)) ^ v811;
  unsigned int v838 = (v837 + 1558143912 - ((2 * v837) & 0xB9BEC750)) ^ v813;
  int v839 = (v776 >> 21) ^ 0x438AAC2;
  int v840 = (v838 + 70823846 - ((2 * v838) & 0x8715F4C)) ^ v839;
  int v841 = (v840 - 2119750628 - ((2 * v840) & 0x34E5838)) ^ v632;
  int v842 = (v841 + 640584926 - ((2 * v841) & 0x4C5D19BC)) ^ v818;
  unsigned int v843 = (v776 >> 14) ^ 0xDC6879A6;
  LODWORD(v632) = (v842 - 596980803 - ((2 * v842) & 0xB8D5977A)) ^ v843;
  LODWORD(v632) = (v632 - 274783595 - ((2 * v632) & 0xDF3E452A)) ^ v820;
  int v844 = v632 - 1884952125 - ((2 * v632) & 0x1F4BD386);
  LODWORD(v632) = (v776 >> 11) ^ 0x8FB07919;
  int v845 = ((v844 ^ v632) - 1141750642 - ((2 * (v844 ^ v632)) & 0x77E4891C)) ^ v622;
  unsigned int v846 = v825 ^ (v845 + 2102414095 - ((2 * v845) & 0xFAA0961E));
  int v847 = (v790 << 28) ^ (v778 << 19) ^ (v790 << 31) ^ v833 ^ (LODWORD(STACK[0x40C])
                                                            - ((2 * LODWORD(STACK[0x40C])) & 0x2D04BE5C)
                                                            - 1769840850) ^ v846;
  unsigned int v848 = ((v847 ^ 0xBC507976) - 400602650 + ((2 * ((v847 ^ 0xBC507976) & 0x681F49F6 ^ v847 & 0x10)) ^ 0xFFFFFFDF) + 1) ^ LODWORD(STACK[0x698]);
  LODWORD(v331) = STACK[0x664];
  unsigned int v849 = (v848 + 1158880763 - ((2 * v848) & 0x8A263BF6)) ^ LODWORD(STACK[0x664]);
  int v850 = STACK[0x68C];
  unsigned int v851 = (v849 - 761061477 - ((2 * v849) & 0xA5463F36)) ^ LODWORD(STACK[0x68C]);
  int v852 = STACK[0x5DC];
  unsigned int v853 = (v851 - 566460101 - ((2 * v851) & 0xBC790276)) ^ LODWORD(STACK[0x5DC]);
  int v854 = STACK[0x660];
  int v855 = (v853 - 1372672652 - ((2 * v853) & 0x5C5D5AE8)) ^ LODWORD(STACK[0x660]);
  int v856 = STACK[0x644];
  unsigned int v857 = (v855 + 1154905255 - ((2 * v855) & 0x89ACE94E)) ^ LODWORD(STACK[0x644]);
  int v858 = (v857 + 476222594 - ((2 * v857) & 0x38C52904)) ^ v835;
  unsigned int v859 = (v858 + 1309963167 - ((2 * v858) & 0x9C28E73E)) ^ v834;
  int v860 = STACK[0x618];
  int v861 = STACK[0x600];
  unsigned int v862 = LODWORD(STACK[0x600]) ^ LODWORD(STACK[0x618]) ^ (v859 - 737265925 - ((2 * v859) & 0xA81C6DF6));
  LODWORD(v622) = ((4 * v846) ^ 0xC55FB65D) + 537448643 + ((8 * v846) & 0xBFEE5E78 ^ 0x35401240);
  int v863 = v806 ^ (v846 >> 21) ^ (v846 >> 27);
  LODWORD(STACK[0x698]) = v863;
  unsigned int v864 = (((v776 >> 29) & 3 ^ 1) + 874304104 + ((v776 >> 28) | 0xFFFFFFFD) + 2) ^ LODWORD(STACK[0x6A0]) | ~(v776 >> 29) & 4;
  int v865 = (32 * v846) ^ (v846 << 11) ^ (4 * v863) ^ (32 * v863) ^ ((unint64_t)(v863 ^ 0x35u) << (38 - (v863 & 0x1B ^ 0x11 | v863 & 0x1B ^ 0xAu))) ^ 0x84760D74 ^ ((v862 ^ 0xAA46190C) + v622 - 2 * ((v862 ^ 0x2A46190C) & v622));
  LODWORD(STACK[0x6A0]) = v865 - ((2 * v865) & 0x6183EA76);
  int v866 = (v776 >> 17) ^ HIBYTE(v776) ^ (v778 >> 9) ^ (v778 >> 5) ^ v864 ^ 0x36014F1;
  int v867 = (v866 + 2102414095 - ((2 * v866) & 0x7AA0961E)) ^ v824;
  unsigned int v868 = (v867 - 490394437 - ((2 * v867) & 0xC58A5976)) ^ v811;
  unsigned int v869 = (v868 + 1558143912 - ((2 * v868) & 0xB9BEC750)) ^ v813;
  int v870 = (v869 + 70823846 - ((2 * v869) & 0x8715F4C)) ^ v839;
  int v871 = (v870 - 1762402736 - ((2 * v870) & 0x2DE7BCA0)) ^ LODWORD(STACK[0x6B0]);
  int v872 = (v871 + 640584926 - ((2 * v871) & 0x4C5D19BC)) ^ v818;
  unsigned int v873 = (v872 - 596980803 - ((2 * v872) & 0xB8D5977A)) ^ v843;
  unsigned int v874 = (v873 - 274783595 - ((2 * v873) & 0xDF3E452A)) ^ v820;
  int v875 = (v874 - 1884952125 - ((2 * v874) & 0x1F4BD386)) ^ v632;
  unsigned int v876 = (v875 + 1359725072 - ((2 * v875) & 0xA2178420)) ^ LODWORD(STACK[0x614]);
  unsigned int v877 = LODWORD(STACK[0x608]) ^ LODWORD(STACK[0x690]) ^ (v876 - 765888315 - ((2 * v876) & 0xA4B2F18A));
  unsigned int v878 = (v778 << 15) ^ (v778 << 8) ^ (v778 << 27) ^ (((v778 << 23) ^ 0xC7800000)
                                                    + 2145764930
                                                    - 2 * ((v778 << 23) ^ 0xC7800000)) ^ LODWORD(STACK[0x6B8]) ^ 0xE8A20F00;
  int v879 = (v878 - 1372672652 - ((2 * v878) & 0x5C5D5AE8)) ^ v854;
  int v880 = (v879 + 376817305 - ((2 * v879) & 0x2CEB8D32)) ^ LODWORD(STACK[0x6D8]);
  unsigned int v881 = (v880 + 1189105814 - ((2 * v880) & 0x8DC0A12C)) ^ LODWORD(STACK[0x710]);
  int v882 = (v881 + 1158880763 - ((2 * v881) & 0x8A263BF6)) ^ v331;
  unsigned int v883 = (v882 - 761061477 - ((2 * v882) & 0xA5463F36)) ^ v850;
  unsigned int v884 = (v883 - 566460101 - ((2 * v883) & 0xBC790276)) ^ v852;
  unsigned int v885 = (v884 + 1492206348 - ((2 * v884) & 0xB1E28618)) ^ v609;
  unsigned int v886 = (v885 + 1309963167 - ((2 * v885) & 0x9C28E73E)) ^ v834;
  unsigned int v887 = (v886 + 1154905255 - ((2 * v886) & 0x89ACE94E)) ^ v856;
  int v888 = (v887 + 476222594 - ((2 * v887) & 0x38C52904)) ^ LODWORD(STACK[0x604]);
  int v889 = (v888 + 583102547 - ((2 * v888) & 0x4582E0A6)) ^ LODWORD(STACK[0x708]);
  unsigned int v890 = (v889 - 737265925 - ((2 * v889) & 0xA81C6DF6)) ^ v860;
  int v891 = ((v621 << 31) | 0x285DC053) ^ ((v621 ^ 0xD75AAA3) << 12) ^ (4 * LODWORD(STACK[0x5FC])) ^ (32
                                                                                                 * LODWORD(STACK[0x5FC])) ^ (LODWORD(STACK[0x5FC]) << 11) ^ LODWORD(STACK[0x5F0]) ^ (32 * LODWORD(STACK[0x5F0])) ^ (LODWORD(STACK[0x5F0]) << 11) ^ (LODWORD(STACK[0x56C]) - 242899851) ^ v861 ^ (4 * v877) ^ (32 * v877) ^ (v877 << 11) ^ (4 * (v877 >> 21)) ^ (32 * (v877 >> 21)) ^ (v877 >> 21 << 11) ^ (v890 - 1438246644 - ((2 * v890) & 0x548C3218));
  int v892 = (v891 - 1970591332 - ((2 * v891) & 0x15165338)) ^ LODWORD(STACK[0x620]);
  unsigned int v893 = v621 ^ 0xCD733066 ^ (v892 - ((2 * v892) & 0x6BA3D9C4) - 1244533534);
  unsigned int v894 = (v893 - 887431072 - ((2 * v893) & 0x9635C0C0)) ^ LODWORD(STACK[0x624]);
  int v895 = (v894 + 627893842 - ((2 * v894) & 0x4AD9CCA4)) ^ LODWORD(STACK[0x6C4]);
  unsigned int v896 = (v895 - 633618699 - ((2 * v895) & 0xB4777DEA)) ^ LODWORD(STACK[0x634]);
  int v897 = (v896 - 1164799692 - ((2 * v896) & 0x75252268)) ^ LODWORD(STACK[0x63C]);
  unsigned int v898 = (v897 - 388824164 - ((2 * v897) & 0xD1A60738)) ^ LODWORD(STACK[0x5E8]);
  unsigned int v899 = (v898 - 839422508 - ((2 * v898) & 0x9BEEDBA8)) ^ LODWORD(STACK[0x638]);
  unsigned int v900 = (v899 - 768473302 - ((2 * v899) & 0xA4640E54)) ^ LODWORD(STACK[0x5EC]);
  unsigned int v901 = (v900 - 743499446 - ((2 * v900) & 0xA75E3294)) ^ LODWORD(STACK[0x62C]);
  int v902 = (v901 - 1577686544 - ((2 * v901) & 0x43ECD3E0)) ^ LODWORD(STACK[0x628]);
  unsigned int v903 = (v902 - 381679387 - ((2 * v902) & 0xD28011CA)) ^ LODWORD(STACK[0x630]);
  unsigned int v904 = (v903 - 940627031 - ((2 * v903) & 0x8FDE5752)) ^ LODWORD(STACK[0x6C8]);
  int v905 = (v904 + 556462035 - ((2 * v904) & 0x4255DFA6)) ^ LODWORD(STACK[0x444]);
  unsigned int v906 = LODWORD(STACK[0x5FC]) ^ 0x4C5F1041 ^ (v905 - ((2 * v905) & 0x9604CE46) + 1258448675);
  unsigned int v907 = v877 ^ LODWORD(STACK[0x448]) ^ (v906 - ((2 * v906) & 0x9D66B036) - 827107301);
  unsigned int v908 = v907 ^ (v877 >> 21);
  int v909 = STACK[0x6F4];
  LODWORD(STACK[0x6B8]) = (LODWORD(STACK[0x6F4]) ^ 0x152843C) << ((v908 ^ 0xEA) & 0xD ^ 8) << ((v908 ^ 0xEA) & 0xD ^ 5);
  unsigned int v910 = STACK[0x66C];
  LODWORD(STACK[0x708]) = ((LODWORD(STACK[0x66C]) << 19) ^ 0xFC600000)
                        - 553603112
                        - ((2 * ((LODWORD(STACK[0x66C]) << 19) ^ 0xFC600000)) & 0xBE000000);
  unsigned int v911 = ((v910 << 14) ^ 0x8FE30000) - 1971920457 - ((2 * ((v910 << 14) ^ 0x8FE30000)) & 0x14ED8000);
  LODWORD(STACK[0x6D8]) = v911;
  LODWORD(STACK[0x710]) = ((v909 << 28) ^ 0xC0000000) + 772009851 - ((v909 << 29) & 0x40000000);
  unsigned int v912 = STACK[0x670];
  unsigned int v913 = v910;
  int v914 = (LODWORD(STACK[0x670]) >> 28) ^ (LODWORD(STACK[0x670]) >> 27) ^ (LODWORD(STACK[0x670]) >> 15) ^ LODWORD(STACK[0x394]) ^ (v910 >> 2) ^ 0x17B58D6C;
  int v915 = (v914 - 1588666270 - ((2 * v914) & 0x429DC0C4)) ^ LODWORD(STACK[0x3A4]);
  LODWORD(v632) = STACK[0x3C8];
  unsigned int v916 = (v915 + 1271285497 - ((2 * v915) & 0x978C8DF2)) ^ LODWORD(STACK[0x3C8]);
  int v917 = (LODWORD(STACK[0x670]) >> 18) ^ 0x7345DF37;
  unsigned int v918 = (v916 + 1933959011 - ((2 * v916) & 0xE68BBEC6)) ^ v917;
  int v919 = STACK[0x3BC];
  unsigned int v920 = (v918 - 756926879 - ((2 * v918) & 0xA5C46CC2)) ^ LODWORD(STACK[0x3BC]);
  int v921 = (LODWORD(STACK[0x670]) >> 13) ^ 0x21784C5C;
  int v922 = (v920 + 561530568 - ((2 * v920) & 0x42F08D90)) ^ v921;
  int v923 = STACK[0x3B0];
  unsigned int v924 = (v922 + 1235379926 - ((2 * v922) & 0x9344CDAC)) ^ LODWORD(STACK[0x3B0]);
  unsigned int v925 = (v924 + 2087870904 - ((2 * v924) & 0xF8E4C370)) ^ LODWORD(STACK[0x390]);
  int v926 = (v925 + 530237905 - ((2 * v925) & 0x3F3593A2)) ^ LODWORD(STACK[0x38C]);
  int v927 = STACK[0x3A8];
  int v928 = (v926 - 2071249500 - ((2 * v926) & 0x9167B48)) ^ LODWORD(STACK[0x3A8]);
  unsigned int v929 = (v913 >> 4) ^ LODWORD(STACK[0x2C0]) ^ (v928 - ((2 * v928) & 0xE19CC7A0) + 1892574160);
  LODWORD(STACK[0x6C4]) = v929;
  unsigned int v930 = v929 ^ 0x7238D22C;
  unsigned int v931 = ((v930 >> 27) ^ 0xC76FBF7E) + 4 * (v930 >> 28);
  unsigned int v932 = ((v930 >> 20) & 0x7FE ^ 0x5E) + ((v930 >> 21) ^ 0xCFFB9BD0);
  int v933 = v931 + v932 - 2 * ((v932 + 805594113) & (v931 + 948977794)) + 1754571907;
  LODWORD(STACK[0x6B0]) = (v933 ^ 0x7EFDFDFF) + ((2 * v933) & 0xFDFBFBFE);
  unsigned int v934 = (((v912 >> 20) ^ (v913 >> 1) ^ 0x2F6B1FD3)
        + 1235379926
        - ((2 * ((v912 >> 20) ^ (v913 >> 1) ^ 0x2F6B1FD3)) & 0x9344CDAC)) ^ v923;
  int v935 = (v934 - 1960218924 - ((2 * v934) & 0x1652DDA8)) ^ LODWORD(STACK[0x398]);
  unsigned int v936 = (v935 + 1564101800 - ((2 * v935) & 0xBA74995A) + 5) ^ LODWORD(STACK[0x3B8]);
  int v937 = (v936 + 1271285497 - ((2 * v936) & 0x978C8DF2)) ^ v632;
  int v938 = (v937 + 740299856 - ((2 * v937) & 0x584028A0)) ^ LODWORD(STACK[0x3CC]);
  unsigned int v939 = (v938 + 1207826772 - ((2 * v938) & 0x8FFBF2A8)) ^ LODWORD(STACK[0x3C4]);
  unsigned int v940 = (v939 + 1933959011 - ((2 * v939) & 0xE68BBEC6)) ^ v917;
  int v941 = (v940 + 8697491 - ((2 * v940) & 0x1096D26)) ^ LODWORD(STACK[0x3C0]);
  unsigned int v942 = (v941 - 756926879 - ((2 * v941) & 0xA5C46CC2)) ^ v919;
  int v943 = (v942 + 561530568 - ((2 * v942) & 0x42F08D90)) ^ v921;
  int v944 = (v943 + 232906841 - ((2 * v943) & 0x1BC3C0B2)) ^ LODWORD(STACK[0x3B4]);
  unsigned int v945 = (v913 >> 4) ^ v927 ^ (v944 - 2071249500 - ((2 * v944) & 0x9167B48));
  int v946 = (v945 >> 27) ^ (v912 >> 31) ^ (v945 >> 21);
  int v947 = ((LODWORD(STACK[0x6F4]) << 31) | 0x17D4B8AE) ^ (v913 << 12) ^ (4 * v945) ^ (v945 << 11) ^ (32 * v945) ^ (4 * v946) ^ (v946 << 11) ^ (32 * v946) ^ LODWORD(STACK[0x6EC]) ^ (LODWORD(STACK[0x6E0]) - 1255459570);
  unsigned int v948 = LODWORD(STACK[0x6F4]) ^ 0x885F456C ^ (v947 - ((2 * v947) & 0x121B82A0) - 1995587248);
  unsigned int v949 = (v948 + 2039416500 - ((2 * v948) & 0xF31E0D68)) ^ LODWORD(STACK[0x3F4]);
  unsigned int v950 = (v949 + 1861523863 - ((2 * v949) & 0xDDE9332E)) ^ LODWORD(STACK[0x3F0]);
  int v951 = (v950 - 1615195507 - ((2 * v950) & 0x3F74251A)) ^ LODWORD(STACK[0x684]);
  unsigned int v952 = (v951 + 1741878678 - ((2 * v951) & 0xCFA5EB2C)) ^ LODWORD(STACK[0x3EC]);
  int v953 = (v952 - 1971920457 - ((2 * v952) & 0x14EDC36E)) ^ v911;
  unsigned int v954 = (v953 + 1681661840 - ((2 * v953) & 0xC8783F20)) ^ LODWORD(STACK[0x3E8]);
  int v955 = (v954 + 76110623 - ((2 * v954) & 0x912B63E)) ^ LODWORD(STACK[0x680]);
  unsigned int v956 = (v955 - 553603112 - ((2 * v955) & 0xBE015FB0)) ^ LODWORD(STACK[0x708]);
  unsigned int v957 = (v956 + 1886906603 - ((2 * v956) & 0xE0EFD1D6)) ^ LODWORD(STACK[0x3E4]);
  unsigned int v958 = (v957 - 758313411 - ((2 * v957) & 0xA59A1C7A)) ^ LODWORD(STACK[0x67C]);
  int v959 = (v958 - 1660222421 - ((2 * v958) & 0x3A160856)) ^ LODWORD(STACK[0x3E0]);
  unsigned int v960 = (v959 - 31735370 - ((2 * v959) & 0xFC37836C)) ^ LODWORD(STACK[0x668]);
  int v961 = (v960 + 772009851 - ((2 * v960) & 0x5C07DEF6)) ^ LODWORD(STACK[0x710]);
  LODWORD(STACK[0x6C8]) = v946 ^ v945 ^ (v961 - ((2 * v961) & 0x55F9632) - 2102408423);
  unsigned int v962 = (((v908 ^ 0x969749EA) << 13) ^ 0xBAC90000)
       + 631348713
       - ((2 * (((v908 ^ 0x969749EA) << 13) ^ 0xBAC90000)) & 0x4B430000);
  unsigned int v963 = (((v908 ^ 0x969749EA) << 11) ^ 0xAEB24000)
       + 343725082
       - ((2 * (((v908 ^ 0x969749EA) << 11) ^ 0xAEB24000)) & 0x28F9A000);
  unsigned int v964 = (((v908 ^ 0x969749EA) << 18) ^ 0x59200000)
       - 1243945862
       - ((2 * (((v908 ^ 0x969749EA) << 18) ^ 0x59200000)) & 0x6BB00000);
  LODWORD(STACK[0x6E0]) = (((v908 ^ 0x969749EA) << 27) ^ 0x40000000)
                        - 714955310
                        - ((2 * (((v908 ^ 0x969749EA) << 27) ^ 0x40000000)) & 0xA0000000);
  uint64_t v965 = v908 ^ 0x9A229FA2;
  unsigned int v966 = v965 >> (STACK[0x5D8] & 0xF ^ 8) >> (STACK[0x5D8] & 0xF ^ 7);
  unsigned int v967 = v966 + 50773327 - ((2 * v966) & 0x60D7A9E);
  unsigned int v968 = (((v908 ^ 0x969749EA) << 23) ^ 0x24000000)
       - 2049638018
       - ((2 * (((v908 ^ 0x969749EA) << 23) ^ 0x24000000)) & 0xB000000);
  int v969 = (v907 >> 28) ^ (v907 >> 27) ^ (v907 >> 18) ^ 0x2692;
  unsigned int v970 = (v908 ^ 0x969749EA) << 22;
  unsigned int v971 = (((v908 ^ 0x969749EA) << 21) ^ 0xC9000000) - 1606607233 - (v970 & 0x40404040);
  unsigned int v972 = (((v908 ^ 0x969749EA) << 26) ^ 0x20000000)
       + 816476438
       - ((2 * (((v908 ^ 0x969749EA) << 26) ^ 0x20000000)) & 0x60000000);
  unsigned int v973 = (v970 ^ 0x92000000) - 892558151 - ((2 * (v970 ^ 0x92000000)) & 0x95800000);
  unsigned int v974 = ((v908 ^ 0x969749EA) >> 4) ^ (v907 >> 13) ^ v967 ^ (v969 + 50773327 - ((2 * v969) & 0x7A9E));
  LODWORD(v331) = (v974 ^ 0xCF8C70) - 668312719 - 2 * ((v974 ^ 0xCF8C70) & 0x582A5B7D ^ v974 & 0xC);
  unsigned int v975 = (v907 >> 29) ^ 0xD82A5B77 ^ (v907 >> 30);
  unsigned int v976 = (v907 >> 21) ^ 0xA2F7E5E8;
  LODWORD(v331) = ((v331 ^ v975) - 1560813255 - ((2 * (v331 ^ v975)) & 0x45EFC272)) ^ v976;
  int v977 = (v907 >> 19) ^ 0x1FFDB12E;
  LODWORD(v331) = (v331 + 536715882 - ((2 * v331) & 0x3FFB44D4)) ^ v977;
  LODWORD(v632) = (v907 >> 14) ^ 0x79194800;
  LODWORD(v331) = (v331 + 2031820938 - ((2 * v331) & 0xF2364114)) ^ v632;
  int v978 = (v907 >> 11) ^ 0x17224080;
  LODWORD(v331) = (v331 + 389088467 - ((2 * v331) & 0x2E6209A6)) ^ v978;
  LODWORD(v609) = (v908 >> 10) ^ 0x2E53650D;
  LODWORD(v331) = (v331 + 779480490 - ((2 * v331) & 0x5CEBDB54)) ^ v609;
  unsigned int v979 = (v908 >> 9) ^ 0x9CACCF40;
  LODWORD(v331) = (v331 - 1662919153 - ((2 * v331) & 0x39C3BC1E)) ^ v979;
  unsigned int v980 = (v908 >> 6) ^ ((v908 ^ 0x969749EA) >> 5) ^ 0x8A1BED0F;
  int v981 = v980 ^ (v331 - 2005702799 - ((2 * v331) & 0x10E6CEE2));
  unsigned int v982 = v981 ^ ((v908 ^ 0x969749EA) >> 2);
  int v983 = (v982 >> 27) ^ (v967 >> 30) ^ (v982 >> 21);
  unsigned int v984 = LODWORD(STACK[0x6AC]) ^ (16 * (v908 ^ 0x969749EA)) ^ (32 * (v908 ^ 0x969749EA)) ^ ((v908 ^ 0x969749EA) << 14) ^ ((v908 ^ 0x969749EA) << 17) ^ ((v908 ^ 0x969749EA) << 19) ^ ((v908 ^ 0x969749EA) << 28) ^ ((v908 ^ 0x969749EA) << 30) ^ (4 * v982) ^ (32 * v982) ^ (v983 | (v982 << 11)) ^ (4 * v983) ^ (32 * v983) ^ (v983 << 11) ^ (LODWORD(STACK[0x6D0]) + 404514037) ^ 0x8C5812F2;
  LODWORD(v331) = (4 * (v908 ^ 0x969749EA)) ^ (8 * (v908 ^ 0x969749EA)) ^ 0x8B8E85D9;
  int v985 = (v984 - 587764039 - ((2 * v984) & 0xB9EEDD72)) ^ v331;
  int v986 = (v985 + 343725082 - ((2 * v985) & 0x28F9A834)) ^ v963;
  int v987 = (v986 + 631348713 - ((2 * v986) & 0x4B433BD2)) ^ v962;
  int v988 = (v987 - 1243945862 - ((2 * v987) & 0x6BB5C8F4)) ^ v964;
  int v989 = (v988 - 1606607233 - ((2 * v988) & 0x407A3CFE)) ^ v971;
  unsigned int v990 = (v989 - 892558151 - ((2 * v989) & 0x95994972)) ^ v973;
  int v991 = (v990 - 2049638018 - ((2 * v990) & 0xBAA02FC)) ^ v968;
  int v992 = (v991 + 816476438 - ((2 * v991) & 0x6154E22C)) ^ v972;
  int v993 = STACK[0x6E0];
  LODWORD(STACK[0x6EC]) = v982 ^ LODWORD(STACK[0x6E0]) ^ (v992 - 714955310 - ((2 * v992) & 0xAAC54BA4));
  int v994 = (v907 >> 22) ^ HIBYTE(v907) ^ (v907 >> 25) ^ (v907 >> 17) ^ HIWORD(v907) ^ (v907 >> 12) ^ (v908 >> 7) ^ (v908 >> 8) ^ 0x1A71005;
  int v995 = (v994 - 1560813255 - ((2 * v994) & 0x45EFC272)) ^ v976;
  int v996 = (((v995 - 668312719 - ((2 * v995) & 0x3054B6E2)) ^ v975)
        + 536715882
        - ((2 * ((v995 - 668312719 - ((2 * v995) & 0x3054B6E2)) ^ v975)) & 0x3FFB44D4)) ^ v977;
  int v997 = (v996 + 2031820938 - ((2 * v996) & 0xF2364114)) ^ v632;
  int v998 = (v997 + 389088467 - ((2 * v997) & 0x2E6209A6)) ^ v978;
  unsigned int v999 = (v998 + 779480490 - ((2 * v998) & 0x5CEBDB54)) ^ v609;
  int v1000 = (v999 - 1662919153 - ((2 * v999) & 0x39C3BC1E)) ^ v979;
  unsigned int v1001 = v980 ^ (v1000 - 2005702799 - ((2 * v1000) & 0x10E6CEE2));
  LODWORD(v622) = (LODWORD(STACK[0x698]) | (v908 << 24)) ^ (v908 << 25) ^ ((v908 ^ 0x969749EA) << 8) ^ ((v908 ^ 0x969749EA) << 7) ^ ((v908 ^ 0x969749EA) << 10) ^ ((v908 ^ 0x969749EA) << 16) ^ ((v908 ^ 0x969749EA) << 20);
  int v1002 = ((32 * v1001) ^ 0xCB5D640) + 974731836 - ((2 * ((32 * v1001) ^ 0xCB5D640)) & 0x74327440);
  LOBYTE(v995) = (((32 * v1001) ^ 0x40) + 60 - ((2 * ((32 * v1001) ^ 0x40)) & 0x40)) & 0x80;
  int v1003 = (4 * v1001) ^ (32 * (v1001 >> 21)) ^ __ROR4__(v1001, 21) ^ (v1001 >> 21 << 11) ^ 0x2CE332AB ^ ((unint64_t)((v1001 >> 21) ^ 3) << ((119 * ((v995 ^ 0x8E) + v995)) & 0xFE));
  unsigned int v1004 = v1001 ^ 0x5729C17F ^ (v1003 - ((2 * v1003) & 0xAE98DF9A) + 1464627149);
  int v1005 = v622 ^ v331 ^ (v965 << ((85 * ((v981 & 0xD3 ^ 0x92) + (v981 & 0xD3 ^ 0x41))) | 6u)) ^ (LODWORD(STACK[0x6A0])
                                                                                               - 1329466053) ^ (v1004 - 587764039 - ((2 * v1004) & 0xB9EEDD72));
  LODWORD(STACK[0x6AC]) = v1005;
  unsigned int v1006 = ((v1005 ^ v963 ^ 0xC8116D14) + 631348713 - 2 * ((v1005 ^ v963 ^ 0xC8116D14) & 0x25A19DEB ^ (v1005 ^ v963) & 2)) ^ v962;
  int v1007 = (((v1006 - 1243945862 - ((2 * v1006) & 0x6BB5C8F4)) ^ v964)
         - 1606607233
         - ((2 * ((v1006 - 1243945862 - ((2 * v1006) & 0x6BB5C8F4)) ^ v964)) & 0x407A3CFE)) ^ v971;
  unsigned int v1008 = (v1007 - 892558151 - ((2 * v1007) & 0x95994972)) ^ v973;
  int v1009 = (v1008 - 2049638018 - ((2 * v1008) & 0xBAA02FC)) ^ v968;
  int v1010 = (v1009 + 816476438 - ((2 * v1009) & 0x6154E22C)) ^ v972;
  unsigned int v1011 = v1002 ^ v993 ^ (v1010 - 714955310 - ((2 * v1010) & 0xAAC54BA4));
  int v1012 = LODWORD(STACK[0x2A4]) - 671619473;
  if (!v323) {
    int v1012 = -782899735 - LODWORD(STACK[0x2A4]);
  }
  unsigned int v1013 = (LODWORD(STACK[0x2A8]) ^ 0xC2370097) - 1420224044 + v1012;
  unsigned int v1014 = (LODWORD(STACK[0x2AC]) ^ 0xB0000000) + 1141233441;
  unsigned int v1015 = STACK[0x3D8];
  int v1016 = LODWORD(STACK[0x3D8]) << 27;
  LODWORD(STACK[0x6A0]) = v1016;
  unsigned int v1017 = v1014 - (v1016 & 0x88000000);
  int v1018 = STACK[0x648];
  unsigned int v1019 = (STACK[0x648] & 0xF6000000 ^ v1013 ^ 0x4000000)
        + 1141233441
        - 2 * ((STACK[0x648] & 0xF6000000 ^ v1013 ^ 0x4000000) & 0x4405D723 ^ v1013 & 2);
  unsigned int v1020 = STACK[0x3DC];
  int v1021 = (LODWORD(STACK[0x3DC]) >> 29) ^ (LODWORD(STACK[0x3DC]) >> 31) ^ (LODWORD(STACK[0x3DC]) >> 26) ^ (LODWORD(STACK[0x3DC]) >> 15) ^ (v1015 >> 3);
  unsigned int v1022 = (LODWORD(STACK[0x3DC]) >> 30) ^ 0xF5AF44E7;
  LODWORD(STACK[0x660]) = v1022;
  int v1023 = ((v1021 ^ 0x85E1C06) - 173062938 - 2 * ((v1021 ^ 0x85E1C06) & 0x15AF44EF ^ v1021 & 9)) ^ v1022;
  int v1024 = (v1020 >> 25) ^ 0x2AC6F401;
  int v1025 = (v1023 + 717681696 - ((2 * v1023) & 0x558DE840)) ^ v1024;
  int v1026 = (v1020 >> 22) ^ 0x47318396;
  unsigned int v1027 = (v1025 + 1194427037 - ((2 * v1025) & 0x8E63053A)) ^ v1026;
  unsigned int v1028 = (v1020 >> 19) ^ 0xB47CDF4C;
  int v1029 = (v1027 - 1266886894 - ((2 * v1027) & 0x68F9AE24)) ^ v1028;
  unsigned int v1030 = (v1020 >> 18) ^ 0x6FEC7532 ^ (v1029 + 1877763471 - ((2 * v1029) & 0xDFD8CB1E));
  LODWORD(STACK[0x68C]) = HIWORD(v1020);
  int v1031 = HIWORD(v1020) ^ 0x2711A279;
  int v1032 = (v1030 + 655483021 - ((2 * v1030) & 0x4E23C11A)) ^ v1031;
  unsigned int v1033 = (v1020 >> 12) ^ 0xD626F043;
  unsigned int v1034 = (v1032 - 702357745 - ((2 * v1032) & 0xAC45BE1E)) ^ v1033;
  int v1035 = (v1015 >> 10) ^ 0x5693C6A3;
  LODWORD(STACK[0x644]) = v1035;
  unsigned int v1036 = (v1034 + 1451457424 - ((2 * v1034) & 0xAD06F720)) ^ v1035;
  int v1037 = (v1015 >> 8) ^ 0x23D9BEC2;
  LODWORD(STACK[0x698]) = v1037;
  int v1038 = (v1036 + 597379597 - ((2 * v1036) & 0x4736941A)) ^ v1037;
  unsigned int v1039 = (v1015 >> 7) ^ 0x9F3D86D4;
  int v1040 = (v1038 - 1615302837 - ((2 * v1038) & 0x3F70DE96)) ^ v1039;
  unsigned int v1041 = v1040 + 1681346518 - ((2 * v1040) & 0xC86E9FAC);
  unsigned int v1042 = ((v1015 << 28) ^ 0xC0000000) + 669950951 - ((v1015 << 29) & 0x40000000);
  unsigned int v1043 = ((v1015 << 11) ^ 0xA67F6000) + 1112120503 - ((2 * ((v1015 << 11) ^ 0xA67F6000)) & 0x84933000);
  LODWORD(STACK[0x664]) = v1043;
  int v1044 = (((v1020 >> 20) ^ 0x42F) + 1194427037 - ((2 * ((v1020 >> 20) ^ 0x42F)) & 0x53A)) ^ v1026;
  int v1045 = (v1044 + 717681696 - ((2 * v1044) & 0x558DE840)) ^ v1024;
  int v1046 = v1045 + 892553536 - ((2 * v1045) & 0x6A669280);
  int v1047 = (v1015 >> 6) ^ (v1015 >> 4) ^ 0x653C9CE9;
  unsigned int v1048 = (((v1047 ^ v1041) >> 27) | 0xFCE96C60) ^ ((v1047 ^ v1041) >> 21);
  LODWORD(STACK[0x6E0]) = v1048;
  unsigned int v1049 = v1017;
  LODWORD(STACK[0x690]) = v1017;
  int v1050 = (v1015 << 29) ^ v1017 ^ (32 * (v1047 ^ v1041)) ^ (4 * (v1047 ^ v1041)) ^ ((v1047 ^ v1041) << 11) ^ (4 * v1048) ^ (32 * v1048) ^ (v1048 << 11) ^ v1019 ^ 0x4AD96D1C;
  int v1051 = (v1050 + 669950951 - ((2 * v1050) & 0x4FDD47CE)) ^ v1042;
  int v1052 = v1047 ^ v1041 ^ 0x3BE628F9 ^ (v1051 - ((2 * v1051) & 0x7F92C80E) + 1070162951);
  LODWORD(STACK[0x6D0]) = v1052 - ((2 * v1052) & 0xF6608F1E);
  int v1053 = (v1020 >> 21) ^ 0x35334B57;
  int v1054 = v1028 ^ (v1020 >> 18) ^ ((v1046 ^ v1053) - 1266886894 - ((2 * (v1046 ^ v1053)) & 0x68F9AE24));
  unsigned int v1055 = ((v1015 << 18) ^ 0x3FB00000) - 231855715 - ((2 * ((v1015 << 18) ^ 0x3FB00000)) & 0xE4580000);
  LODWORD(STACK[0x670]) = v1055;
  unsigned int v1056 = ((v1015 << 21) ^ 0xFD800000) + 1560739669 - ((2 * ((v1015 << 21) ^ 0xFD800000)) & 0xBA000000);
  unint64_t v1057 = v1015 ^ 0x42F4CFEC;
  int v1058 = (v1020 >> 13) ^ (v1015 >> 1) ^ 0x21787050 ^ (v1057 >> ((LODWORD(STACK[0x640]) | 0x6E)
                                                               - (STACK[0x640] & 0x91)
                                                               - 99));
  unsigned int v1059 = (v1058 + 655483021 - ((2 * v1058) & 0x4E23C11A)) ^ v1031 ^ v1054;
  int v1060 = ((v1059 ^ (v1020 >> 14) ^ 0x11B6E)
         - 702357745
         - 2 * ((v1059 ^ (v1020 >> 14) ^ 0x11B6E) & 0x5622DF1F ^ (v1059 ^ (v1020 >> 14)) & 0x10)) ^ v1033;
  int v1061 = (v1060 - 1615302837 - ((2 * v1060) & 0x3F70DE96)) ^ v1039;
  unsigned int v1062 = v1047 ^ (v1061 + 1681346518 - ((2 * v1061) & 0xC86E9FAC));
  int v1063 = v1057 << (v1054 & 0x1F ^ 0x1D | v1054 & 0x1F ^ 2);
  int v1064 = (v1015 << 12) ^ (v1015 << 19) ^ 0x339EC000 ^ v1063;
  int v1065 = (v1064 + 865832934 - 2 * (v1064 & 0x339B8FEE ^ v1063 & 8)) ^ LODWORD(STACK[0x65C]);
  unsigned int v1066 = (v1065 + 1175647659 - ((2 * v1065) & 0x8C25EB56)) ^ LODWORD(STACK[0x2B0]);
  unsigned int v1067 = (v1066 - 1046365581 - ((2 * v1066) & 0x834374E6)) ^ LODWORD(STACK[0x650]);
  unsigned int v1068 = (v1067 + 1112120503 - ((2 * v1067) & 0x8493396E)) ^ v1043;
  int v1069 = STACK[0x2B8];
  unsigned int v1070 = (v1068 - 341378490 - ((2 * v1068) & 0xD74DF48C)) ^ LODWORD(STACK[0x2B8]);
  int v1071 = (v1070 - 1145993403 - ((2 * v1070) & 0x77630E8A)) ^ LODWORD(STACK[0x2B4]);
  int v1072 = STACK[0x3A0];
  int v1073 = (v1071 - 1220807824 - ((2 * v1071) & 0x6E77E6E0)) ^ LODWORD(STACK[0x3A0]);
  unsigned int v1074 = (v1073 - 231855715 - ((2 * v1073) & 0xE45C533A)) ^ v1055;
  int v1075 = STACK[0x3AC];
  unsigned int v1076 = (v1074 - 93610490 - ((2 * v1074) & 0xF4D73C0C)) ^ LODWORD(STACK[0x3AC]);
  unsigned int v1077 = (v1076 + 1560739669 - ((2 * v1076) & 0xBA0DFEAA)) ^ v1056;
  int v1078 = (v1077 + 74754679 - ((2 * v1077) & 0x8E954EE)) ^ v1018;
  unsigned int v1079 = (v1078 + 1141233441 - ((2 * v1078) & 0x880BAE42)) ^ v1049;
  int v1080 = STACK[0x6C8];
  LOBYTE(v1064) = STACK[0x6C8] & 0x1D ^ 0xC | STACK[0x6C8] & 0x1D ^ 0x11;
  int v1081 = (unsigned __int16)(LOWORD(STACK[0x6B0]) + 513);
  int v1082 = v1081 - ((2 * (LODWORD(STACK[0x6B0]) + 513)) & 0x4DE2) + 1975854833;
  int v1083 = (v1062 >> 27) ^ (v1059 >> 30) ^ (v1062 >> 21);
  int v1084 = (LODWORD(STACK[0x688]) | (LODWORD(STACK[0x6F4]) << 30)) ^ (16 * LODWORD(STACK[0x66C])) ^ (32
                                                                                                  * LODWORD(STACK[0x66C])) ^ (LODWORD(STACK[0x66C]) << 17) ^ (LODWORD(STACK[0x6F0]) - 904160002) ^ LODWORD(STACK[0x6B8]) ^ (4 * v930) ^ (32 * v930) ^ (v930 << 11) ^ v1081 ^ (4 * v1082) ^ (32 * v1082) ^ (v1082 << 11) ^ v1042 ^ (4 * v1062) ^ (32 * v1062) ^ (v1062 << 11) ^ (4 * v1083);
  LODWORD(STACK[0x6F0]) = v1083;
  unsigned int v1085 = v1084 ^ 0xEA15341A ^ (v1079 + 669950951 - ((2 * v1079) & 0x4FDD47CE));
  int v1086 = (v1085 - 1194358331 - ((2 * v1085) & 0x719F138A)) ^ LODWORD(STACK[0x42C]);
  int v1087 = (v1086 - 1615195507 - ((2 * v1086) & 0x3F74251A)) ^ LODWORD(STACK[0x684]);
  int v1088 = (v1087 - 1188897475 - ((2 * v1087) & 0x7245BA7A)) ^ LODWORD(STACK[0x430]);
  int v1089 = (v1088 - 1971920457 - ((2 * v1088) & 0x14EDC36E)) ^ LODWORD(STACK[0x6D8]);
  int v1090 = (v1089 + 76110623 - ((2 * v1089) & 0x912B63E)) ^ LODWORD(STACK[0x680]);
  unsigned int v1091 = (v1090 - 553603112 - ((2 * v1090) & 0xBE015FB0)) ^ LODWORD(STACK[0x708]);
  unsigned int v1092 = (v1091 - 758313411 - ((2 * v1091) & 0xA59A1C7A)) ^ LODWORD(STACK[0x67C]);
  int v1093 = (v1092 - 1307705299 - ((2 * v1092) & 0x641C005A)) ^ LODWORD(STACK[0x420]);
  unsigned int v1094 = (v1093 + 2051843745 - ((2 * v1093) & 0xF4994D42)) ^ LODWORD(STACK[0x418]);
  unsigned int v1095 = (((v1094 - 31735370 - ((2 * v1094) & 0xFC37836C)) ^ LODWORD(STACK[0x668]))
         + 1208710851
         - 2
         * (((v1094 - 31735370 - ((2 * v1094) & 0xFC37836C)) ^ LODWORD(STACK[0x668])) & 0x480B76CB ^ (v1094 - 31735370 - ((2 * v1094) & 0xFC37836C)) & 8)) ^ LODWORD(STACK[0x424]);
  int v1096 = (v1095 + 772009851 - ((2 * v1095) & 0x5C07DEF6)) ^ LODWORD(STACK[0x710]);
  unsigned int v1097 = LODWORD(STACK[0x6C4]) ^ 0x2534B08C ^ (v1096 - ((2 * v1096) & 0xA5C202B0) + 1390477656);
  LODWORD(STACK[0x708]) = v1083 ^ v1062 ^ (v1097 - ((2 * v1097) & 0xF086E87E) - 129797057);
  int v1098 = STACK[0x6AC];
  unsigned int v1099 = v1057 >> v1064;
  LODWORD(v1057) = v1057 >> (STACK[0x6AC] & 9 ^ 1 | STACK[0x6AC] & 9 ^ 8);
  int v1100 = (v1020 >> 17) ^ HIBYTE(v1020) ^ (v1020 >> 11) ^ LODWORD(STACK[0x68C]) ^ (((v1015 >> 5) ^ 0x217A67F)
                                                                                 - (a40 & (2 * ((v1015 >> 5) ^ 0x217A67F)))
                                                                                 + 1429150128) ^ v1099 ^ 0x552724E5 ^ v1057;
  unsigned int v1101 = (v1100 - 173062938 - ((2 * v1100) & 0xEB5E89CC)) ^ LODWORD(STACK[0x660]);
  int v1102 = (v1101 + 717681696 - ((2 * v1101) & 0x558DE840)) ^ v1024;
  unsigned int v1103 = (v1102 + 1194427037 - ((2 * v1102) & 0x8E63053A)) ^ v1026;
  int v1104 = (v1103 + 892553536 - ((2 * v1103) & 0x6A669280)) ^ v1053;
  int v1105 = (v1104 - 1266886894 - ((2 * v1104) & 0x68F9AE24)) ^ v1028;
  unsigned int v1106 = (v1020 >> 14) ^ 0xFE061D72 ^ (v1105 - ((2 * v1105) & 0xFC0E2D42) - 33089887);
  unsigned int v1107 = (v1106 - 702357745 - ((2 * v1106) & 0xAC45BE1E)) ^ v1033;
  unsigned int v1108 = (v1107 + 1451457424 - ((2 * v1107) & 0xAD06F720)) ^ LODWORD(STACK[0x644]);
  int v1109 = (v1108 + 597379597 - ((2 * v1108) & 0x4736941A)) ^ LODWORD(STACK[0x698]);
  unsigned int v1110 = v1039 ^ (v1015 >> 6) ^ (v1109 - 1615302837 - ((2 * v1109) & 0x3F70DE96));
  int v1111 = ((v1110 >> 20) & 0xF1E ^ 0x10) + ((v1110 >> 21) ^ 0x5E799F87);
  LODWORD(v1057) = ((v1057 >> 30) ^ (v1057 >> 27))
                 + v1111
                 - 2 * ((v1111 + 17) & ((v1057 >> 30) ^ (v1057 >> 27)))
                 - 1585029007;
  LODWORD(STACK[0x6F4]) = ((v1011 << 10) ^ 0x64E8F000) - 882459817 - ((2 * ((v1011 << 10) ^ 0x64E8F000)) & 0x96CD7000);
  LODWORD(v1057) = (v1057 ^ 0x7AFDFDDB) + ((2 * v1057) & 0xF5FBFBB6) + 549;
  LODWORD(v1057) = (v1015 << 15) ^ (v1015 << 8) ^ (v1015 << 23) ^ LODWORD(STACK[0x6A0]) ^ (4 * v1110) ^ (32 * v1110) ^ (v1110 << 11) ^ (unsigned __int16)v1057 ^ (4 * ((unsigned __int16)v1057 - ((2 * v1057) & 0x13BA2) - 502161967)) ^ (32 * ((unsigned __int16)v1057 - ((2 * v1057) & 0x13BA2) - 502161967)) ^ (((unsigned __int16)v1057 - ((2 * v1057) & 0x13BA2) - 502161967) << 11) ^ 0x386E7A78;
  LODWORD(v1057) = (v1057 + 1112120503 - ((2 * v1057) & 0x8493396E)) ^ LODWORD(STACK[0x664]);
  int v1112 = (v1057 - 341378490 - ((2 * v1057) & 0xD74DF48C)) ^ v1069;
  LODWORD(v1057) = (v1112 - 247835422 - 2 * (v1112 & 0x713A54E3 ^ v1057 & 1)) ^ LODWORD(STACK[0x3D0]);
  LODWORD(v1057) = (v1057 + 871112777 - ((2 * v1057) & 0x67D84092)) ^ LODWORD(STACK[0x3D4]);
  LODWORD(v1057) = (v1057 + 865832934 - ((2 * v1057) & 0x67371FCC)) ^ LODWORD(STACK[0x65C]);
  LODWORD(v1057) = (v1057 - 1046365581 - ((2 * v1057) & 0x834374E6)) ^ LODWORD(STACK[0x650]);
  LODWORD(v1057) = (v1057 - 1220807824 - ((2 * v1057) & 0x6E77E6E0)) ^ v1072;
  LODWORD(v1057) = (v1057 - 231855715 - ((2 * v1057) & 0xE45C533A)) ^ LODWORD(STACK[0x670]);
  LODWORD(v1057) = (v1057 - 93610490 - ((2 * v1057) & 0xF4D73C0C)) ^ v1075;
  LODWORD(v1057) = (v1057 + 1560739669 - ((2 * v1057) & 0xBA0DFEAA)) ^ v1056;
  LODWORD(v1057) = (v1057 - 1230024337 - ((2 * v1057) & 0x6D5EA2DE)) ^ LODWORD(STACK[0x39C]);
  LODWORD(v1057) = (v1057 - 1036582761 - ((2 * v1057) & 0x846E012E)) ^ LODWORD(STACK[0x2BC]);
  LODWORD(v1057) = (v1057 + 74754679 - ((2 * v1057) & 0x8E954EE)) ^ LODWORD(STACK[0x648]);
  LODWORD(v1057) = (v1057 + 1141233441 - ((2 * v1057) & 0x880BAE42)) ^ LODWORD(STACK[0x690]);
  unsigned int v1113 = v1110 ^ v1080 ^ (v1057 - ((2 * v1057) & 0xEADB9B1A) - 177353331);
  int v1114 = ((v1011 << 14) ^ 0x4E8F0000) + 928986583 - ((2 * ((v1011 << 14) ^ 0x4E8F0000)) & 0x6EBE0000);
  int v1115 = ((v1011 << 13) ^ 0x27478000) + 933547407 - ((2 * ((v1011 << 13) ^ 0x27478000)) & 0x6F498000);
  unsigned int v1116 = (v1011 >> 19) ^ 0xCFDA72F3;
  LODWORD(v1057) = (((v1011 >> 18) ^ 0xE86) - 807766608 - ((2 * ((v1011 >> 18) ^ 0xE86)) & 0x6B60)) ^ v1116;
  LODWORD(v1057) = (v1011 >> 22) ^ 0xAB7AEE9F ^ (v1057 - 1418006921 - ((2 * v1057) & 0x56F5DCEE));
  unsigned int v1117 = ((v1011 << 20) ^ 0xA3C00000) + 336342894 - ((v1011 << 21) & 0x28000000);
  unsigned int v1118 = ((v1011 << 26) ^ 0xF0000000) - 1385153441 - ((2 * ((v1011 << 26) ^ 0xF0000000)) & 0x58000000);
  unsigned int v1119 = HIWORD(v1011) ^ 0xA89384E4;
  LODWORD(v1057) = a39 ^ (v1011 >> 31) ^ (v1011 >> 30) ^ (v1011 >> 29) ^ (v1011 >> 26) ^ (v1011 >> 15) ^ (v1011 >> 10) ^ (v1011 >> 12) ^ (v1011 >> 25) ^ v1119 ^ (v1057 - 1466712323 - ((2 * v1057) & 0x51277DFA));
  unsigned int v1120 = ((v1011 << 25) ^ 0x78000000) - 151142457 - ((2 * ((v1011 << 25) ^ 0x78000000)) & 0xEC000000);
  LODWORD(v1057) = ((v1011 ^ 0x3A193A3C) >> (STACK[0x708] & 7) >> (STACK[0x708] & 7 ^ 7)) ^ (v1057
                                                                                           + ((v1011 >> 8) ^ 0x3A193A)
                                                                                           - 2
                                                                                           * (v1057 & ((v1011 >> 8) ^ 0x3A193A)));
  unsigned int v1121 = ((v1098 << 28) ^ 0xE0000000) - 1588303964 - ((2 * ((v1098 << 28) ^ 0xE0000000)) & 0x40000000);
  int v1122 = (((v1011 >> 3) ^ 0x7432747) - 1537193961 - ((2 * ((v1011 >> 3) ^ 0x7432747)) & 0x8C0902E)) ^ 0xA4604817 ^ v1057;
  int v1123 = (v1011 >> 6) ^ (v1011 >> 4) ^ 0x2640ACF4;
  unsigned int v1124 = v1123 ^ (v1122 + 648595484 - ((2 * v1122) & 0x4D519038));
  LODWORD(v1057) = (v1124 >> 27) ^ (v1057 >> 30) ^ (v1124 >> 21);
  int v1125 = (v1098 << 29) ^ (v1011 << 24) ^ (v1011 << 22) ^ (v1011 << 17) ^ (v1011 << 6) ^ (8 * v1011) ^ (4 * v1011) ^ (2 * v1011) ^ (32 * v1124) ^ (4 * v1124);
  int v1126 = v1057 ^ v1124;
  LODWORD(v1057) = v1125 ^ (v1126 << 11) ^ (32 * v1057) ^ (4 * v1057) ^ 0xBB800B50;
  LODWORD(v1057) = (v1057 + 16691736 - 2 * (v1057 & 0xFEB21A ^ (2 * v1011) & 2)) ^ v1011 ^ 0x3AE78824;
  unsigned int v1127 = ((v1011 << 7) ^ 0xC9D1E00) + 1861307301 - ((2 * ((v1011 << 7) ^ 0xC9D1E00)) & 0xDDE29700);
  LODWORD(v1057) = (v1057 + 1861307301 - ((2 * v1057) & 0xDDE2974A)) ^ v1127;
  int v1128 = STACK[0x6F4];
  LODWORD(v1057) = (v1057 - 882459817 - ((2 * v1057) & 0x96CD76AE)) ^ LODWORD(STACK[0x6F4]);
  LODWORD(v1057) = (v1057 + 928986583 - ((2 * v1057) & 0x6EBE6BAE)) ^ v1114;
  LODWORD(v1057) = (v1057 + 933547407 - ((2 * v1057) & 0x6F499B1E)) ^ v1115;
  LODWORD(v1057) = (v1057 - 1864909348 - ((2 * v1057) & 0x21AF7BB8)) ^ (((v1011 << 16) ^ 0x3A3C0000)
                                                                      - 1864909348
                                                                      - ((2 * ((v1011 << 16) ^ 0x3A3C0000)) & 0x21AE0000));
  LODWORD(v1057) = (v1057 + 336342894 - ((2 * v1057) & 0x28185EDC)) ^ v1117;
  LODWORD(v1057) = (v1057 - 151142457 - ((2 * v1057) & 0xEDFB7F8E)) ^ v1120;
  LODWORD(v1057) = (v1057 - 1385153441 - ((2 * v1057) & 0x5AE078BE)) ^ v1118;
  LODWORD(v1057) = (v1057 - 1588303964 - ((2 * v1057) & 0x42A8CF48)) ^ v1121;
  LODWORD(STACK[0x710]) = v1126 ^ (v1057 - ((2 * v1057) & 0x5E451176) - 1356691269);
  unsigned int v1129 = (v1011 >> 21) ^ (v1011 >> 20) ^ (v1011 >> 14) ^ (v1011 >> 11) ^ (v1011 >> 13) ^ (v1011 >> 7) ^ (v1011 >> 1);
  int v1130 = (v1011 >> 18) ^ (v1011 >> 12) ^ (v1011 >> 22) ^ 0x1D7D796C ^ v1129;
  unsigned int v1131 = (v1011 >> 25) ^ 0xE770DF8F ^ (v1130 - 412033137 - ((2 * v1130) & 0xCEE1BF24) + 3);
  unsigned int v1132 = (v1131 - 807766608 - ((2 * v1131) & 0x9FB4EB60)) ^ v1116;
  int v1133 = (v1132 - 1466712323 - ((2 * v1132) & 0x51277DFA)) ^ v1119;
  unsigned int v1134 = v1123 ^ (v1133 + 648595484 - ((2 * v1133) & 0x4D519038));
  int v1135 = ((v1098 << 31) | 0x24E22000) ^ (v1011 << 11) ^ (v1011 << 12) ^ (v1011 << 18) ^ (v1011 << 19) ^ (v1011 << 21);
  int v1136 = (v1135 + 933547407 - ((2 * v1135) & 0x6F499B3E)) ^ v1115;
  unsigned int v1137 = (v1136 + 1861307301 - ((2 * v1136) & 0xDDE2974A)) ^ v1127;
  int v1138 = (v1137 + 16691736 - ((2 * v1137) & 0x1FD6430)) ^ v1011 ^ 0x3AE78824;
  unsigned int v1139 = (v1138 - 882459817 - ((2 * v1138) & 0x96CD76AE)) ^ v1128;
  int v1140 = (v1139 + 928986583 - ((2 * v1139) & 0x6EBE6BAE)) ^ v1114;
  int v1141 = (v1140 - 1864909348 - ((2 * v1140) & 0x21AF7BB8)) ^ (((v1011 << 16) ^ 0x3A3C0000)
                                                             - 1864909348
                                                             - ((2 * ((v1011 << 16) ^ 0x3A3C0000)) & 0x21AE0000));
  int v1142 = (v1141 + 336342894 - ((2 * v1141) & 0x28185EDC)) ^ v1117;
  unsigned int v1143 = (v1142 - 151142457 - ((2 * v1142) & 0xEDFB7F8E)) ^ v1120;
  int v1144 = v1118 ^ v1121 ^ (v1143 - 1385153441 - ((2 * v1143) & 0x5AE078BE));
  int v1145 = LODWORD(STACK[0x6EC]) ^ 0x5DE3437B ^ v1144;
  v1144 ^= 0xA15467A4;
  unsigned int v1146 = (v1145 + v1144 + 1) ^ ((LODWORD(STACK[0x6EC]) ^ 0xFCB724DF) + 1);
  int v1147 = (v1134 >> 27) ^ (v1129 >> 30) ^ (v1134 >> 21);
  LODWORD(STACK[0x6F4]) = v1134 ^ (v1134 << 11) ^ (4 * v1134) ^ v1147 ^ (32 * v1147) ^ (v1147 << 11) ^ (((32 * v1134) ^ 0x74327414 ^ (4 * v1147)) - ((2 * ((32 * v1134) ^ 0x74327414 ^ (4 * v1147))) & 0x2BEFC1B0) + 368566489) ^ ((LODWORD(STACK[0x6EC]) ^ 0xAF365217 ^ (v1146 - ((2 * v1146) & 0x58FD126E) - 1400993481)) + v1144);
  int v1148 = ((v1113 << 11) ^ 0x25B3E000) - 1094051288 - ((2 * ((v1113 << 11) ^ 0x25B3E000)) & 0x7D943000);
  unsigned int v1149 = ((v1113 << 18) ^ 0xD9F00000) + 1819803390 - ((2 * ((v1113 << 18) ^ 0xD9F00000)) & 0xD8E80000);
  unsigned int v1150 = ((v1113 << 21) ^ 0xCF800000) - 423305437 - ((2 * ((v1113 << 21) ^ 0xCF800000)) & 0xCD800000);
  unsigned int v1151 = ((v1113 << 22) ^ 0x9F000000) - 119970905 - ((2 * ((v1113 << 22) ^ 0x9F000000)) & 0xF1800000);
  unsigned int v1152 = ((v1113 << 26) ^ 0xF0000000) - 1811828674 - ((2 * ((v1113 << 26) ^ 0xF0000000)) & 0x28000000);
  unsigned int v1153 = ((v1113 << 27) ^ 0xE0000000) + 1130843624 + (((v1113 << 27) ^ 0xE0000000) >> 30 << 31);
  LODWORD(v1057) = (v1113 >> 14) ^ 0x700AACB6;
  LODWORD(STACK[0x6EC]) = v1057;
  unsigned int v1154 = (v1113 >> 4) ^ (v1113 >> 2) ^ (v1113 >> 27) ^ (v1113 >> 28) ^ (v1113 >> 13) ^ v1057 ^ (((v1113 >> 15) ^ (v1113 >> 18) ^ 0xFA80)
                                                                                               + 1879793700
                                                                                               - ((2
                                                                                                 * ((v1113 >> 15) ^ (v1113 >> 18) ^ 0xFA80)) & 0x2C048));
  unsigned int v1155 = v1113 >> 30;
  unsigned int v1156 = (v1113 >> 29) ^ 0xB76E9F67;
  int v1157 = (((v1113 >> 30) ^ 0x1BF8FFD5 ^ v1154) - 1217487004 - ((2 * ((v1113 >> 30) ^ 0x1BF8FFD5 ^ v1154)) & 0x6EDD3EC8)) ^ v1156;
  unsigned int v1158 = (v1113 >> 21) ^ 0xC43D7DD2;
  unsigned int v1159 = (v1157 - 1002602933 - ((2 * v1157) & 0x887AFC96)) ^ v1158;
  int v1160 = (v1113 >> 19) ^ 0xC72BA8D;
  int v1161 = (v1159 + 208844009 - ((2 * v1159) & 0x18E569D2)) ^ v1160;
  int v1162 = v1161 + 241204138 - ((2 * v1161) & 0x1CC0F754);
  int v1163 = (v1113 >> 11) ^ 0xE6E1F3C;
  unsigned int v1164 = (v1162 ^ v1163) - 110632265 - ((2 * (v1162 ^ v1163)) & 0xF2CFC56E);
  unsigned int v1165 = (v1113 >> 10) ^ 0xF97B2B9A;
  int v1166 = (v1113 >> 9) ^ 0x471A13F9;
  unsigned int v1167 = ((v1164 ^ v1165) + 1193509282 - ((2 * (v1164 ^ v1165)) & 0x8E470344)) ^ v1166;
  unsigned int v1168 = (v1113 >> 6) ^ (v1113 >> 5) ^ 0xD5B53287;
  unsigned int v1169 = v1168 ^ (v1167 - 730226594 - ((2 * v1167) & 0xA8F340BC));
  int v1170 = (v1169 >> 21) ^ (v1154 >> 27);
  int v1171 = LODWORD(STACK[0x6E0]) ^ (LODWORD(STACK[0x6D0]) + 2066761615) ^ (16 * v1113) ^ (32 * v1113) ^ (v1113 << 14) ^ (v1113 << 17) ^ (v1113 << 19) ^ (v1113 << 28) ^ (v1113 << 30) ^ (4 * v1169) ^ (32 * v1169) ^ (v1169 << 11) ^ (4 * v1170) ^ (32 * v1170) ^ (v1170 << 11) ^ 0x57EEC0BE;
  int v1172 = (8 * v1113) ^ (4 * v1113) ^ 0x32F397C8;
  unsigned int v1173 = (v1171 + 1732574680 - ((2 * v1171) & 0xCE89FBB0)) ^ v1172;
  int v1174 = (v1173 - 1094051288 - ((2 * v1173) & 0x7D943450)) ^ v1148;
  int v1175 = (v1174 + 473178689 - ((2 * v1174) & 0x38684482)) ^ ((a38 ^ (v1113 << 13))
                                                            + 473178689
                                                            - ((2 * (a38 ^ (v1113 << 13))) & 0x38684000));
  unsigned int v1176 = (v1175 + 1819803390 - ((2 * v1175) & 0xD8EFFDFC)) ^ v1149;
  unsigned int v1177 = (v1176 - 423305437 - ((2 * v1176) & 0xCD89BE46)) ^ v1150;
  unsigned int v1178 = (v1177 - 119970905 - ((2 * v1177) & 0xF1B2C74E)) ^ v1151;
  unsigned int v1179 = (v1178 + 1303802545 - ((2 * v1178) & 0x9B6CE562)) ^ (((v1113 << 23) ^ 0x3E000000)
                                                             + 1303802545
                                                             - ((2 * ((v1113 << 23) ^ 0x3E000000)) & 0x9B000000));
  unsigned int v1180 = ((v1113 << 23) ^ 0x3E000000) + 1303802545 - ((2 * ((v1113 << 23) ^ 0x3E000000)) & 0x9B000000);
  int v1181 = (v1179 - 1811828674 - ((2 * v1179) & 0x2803607C)) ^ v1152;
  unsigned int v1182 = (v1181 + 1130843624 - ((2 * v1181) & 0x86CE9BD0)) ^ v1153;
  int v1183 = v1170 ^ v1169 ^ (v1182 - ((2 * v1182) & 0x32133FC2) + 420061153);
  unsigned int v1184 = (v1113 << 7) ^ (v1113 << 8) ^ (v1113 << 10) ^ (v1113 << 15) ^ (v1113 << 16) ^ (v1113 << 20) ^ (v1113 << 24) ^ (v1113 << 25) ^ v1153 ^ v1152 ^ 0xFDD04FD6;
  unsigned int v1185 = (v1184 + 1732574680 - ((2 * v1184) & 0xCE89FBB0)) ^ v1172;
  int v1186 = (v1185 - 1094051288 - ((2 * v1185) & 0x7D943450)) ^ v1148;
  int v1187 = (v1186 + 473178689 - ((2 * v1186) & 0x38684482)) ^ ((a38 ^ (v1113 << 13))
                                                            + 473178689
                                                            - ((2 * (a38 ^ (v1113 << 13))) & 0x38684000));
  unsigned int v1188 = (v1187 + 1819803390 - ((2 * v1187) & 0xD8EFFDFC)) ^ v1149;
  unsigned int v1189 = (v1188 - 423305437 - ((2 * v1188) & 0xCD89BE46)) ^ v1150;
  unsigned int v1190 = (v1189 - 119970905 - ((2 * v1189) & 0xF1B2C74E)) ^ v1151;
  int v1191 = (v1113 >> 8) ^ (v1113 >> 7) ^ (v1113 >> 22) ^ HIBYTE(v1113) ^ (v1113 >> 25) ^ (v1113 >> 17) ^ HIWORD(v1113) ^ (v1113 >> 12);
  int v1192 = ((v1191 ^ 0x9214A1) - 1002602933 - 2 * ((v1191 ^ 0x9214A1) & 0x443D7E5B ^ v1191 & 0x10)) ^ v1158;
  int v1193 = (v1192 - 1217487004 - ((2 * v1192) & 0x6EDD3EC8)) ^ v1156;
  int v1194 = v1155 ^ 0x7CCE51CB ^ (v1193 + 2093896138 - ((2 * v1193) & 0x799CA394));
  int v1195 = (v1194 + 208844009 - ((2 * v1194) & 0x18E569D2)) ^ v1160;
  unsigned int v1196 = (v1195 + 1879793700 - ((2 * v1195) & 0xE016C048)) ^ LODWORD(STACK[0x6EC]);
  int v1197 = (v1196 + 241204138 - ((2 * v1196) & 0x1CC0F754)) ^ v1163;
  unsigned int v1198 = (v1197 - 110632265 - ((2 * v1197) & 0xF2CFC56E)) ^ v1165;
  unsigned int v1199 = (v1198 + 1193509282 - ((2 * v1198) & 0x8E470344)) ^ v1166;
  unsigned int v1200 = v1168 ^ (v1199 - 730226594 - ((2 * v1199) & 0xA8F340BC));
  unsigned int v1201 = (32 * LODWORD(STACK[0x6F0])) ^ (LODWORD(STACK[0x6F0]) << 11) ^ v1180 ^ (v1190
                                                                                + 1303802545
                                                                                - ((2 * v1190) & 0x9B6CE562)) ^ (4 * v1200) ^ (32 * v1200) ^ (v1200 << 11) ^ (4 * (v1200 >> 21)) ^ (32 * (v1200 >> 21)) ^ (v1200 >> 21 << 11) ^ 0xB46C577C;
  unsigned int v1202 = LODWORD(STACK[0x708]) ^ 0xC65DF826 ^ (v1201 - ((2 * v1201) & 0x7463818C) + 976339142);
  unsigned int v1203 = (v1200 >> 21) ^ v1200 ^ (v1202 - 1962775842 + (~(2 * v1202) | 0xE9FB2A45));
  unsigned int v1204 = LODWORD(STACK[0x44C]) - 5220136 - ((2 * LODWORD(STACK[0x44C])) & 0xFF60B1B0);
  unsigned int v1205 = LODWORD(STACK[0x450]) - 5220136 - ((2 * LODWORD(STACK[0x450])) & 0xFF60B1B0);
  int v1206 = LODWORD(STACK[0x454]) + 483905654 - ((2 * LODWORD(STACK[0x454])) & 0x39AFA0EC);
  int v1207 = LODWORD(STACK[0x710]) ^ 0x20AB8C66;
  int v1208 = -2009212831
        * (v1207 ^ (LODWORD(STACK[0x52C]) - ((2 * LODWORD(STACK[0x52C]) + 148162052) & 0x18512EC6) + 278067813))
        - 75026750;
  LODWORD(STACK[0x728]) = -2009212831
                        * (v1207 ^ (LODWORD(STACK[0x5C8])
                                  - ((2 * LODWORD(STACK[0x5C8]) + 472964400) & 0x18512EC6)
                                  + 708904443))
                        - 75026750;
  LODWORD(STACK[0x72C]) = v1208;
  int v1209 = LODWORD(STACK[0x520]) - ((2 * LODWORD(STACK[0x520]) + 61666746) & 0x18512EC6);
  unsigned int v1210 = LODWORD(STACK[0x458]) - 5220136 - ((2 * LODWORD(STACK[0x458])) & 0xFF60B1B0);
  int v1211 = LODWORD(STACK[0x460]) ^ v1203;
  LODWORD(STACK[0x788]) = -2009212831 * (v1211 ^ 0x889B4F72) - 75026750;
  LODWORD(STACK[0x78C]) = -2009212831 * (v1203 ^ 0x944C9F04 ^ v1206) - 75026750;
  int v1212 = LODWORD(STACK[0x46C]) + 483905654 - ((2 * LODWORD(STACK[0x46C])) & 0x39AFA0EC);
  unsigned int v1213 = LODWORD(STACK[0x6F4]) ^ 0xEBFD9693;
  LODWORD(STACK[0x768]) = -2009212831 * (v1213 ^ v1204) - 75026750;
  LODWORD(STACK[0x76C]) = -2009212831 * (v1213 ^ v1205) - 75026750;
  int v1214 = LODWORD(STACK[0x500]) - ((2 * LODWORD(STACK[0x500]) + 255759382) & 0x18512EC6);
  int v1215 = -2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x504]) - 1860504193)) - 75026750;
  LODWORD(STACK[0x748]) = -2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x53C]) - 914564212)) - 75026750;
  LODWORD(STACK[0x74C]) = v1215;
  unsigned int v1216 = LODWORD(STACK[0x470]) - 5220136 - ((2 * LODWORD(STACK[0x470])) & 0xFF60B1B0);
  int v1217 = LODWORD(STACK[0x59C]) - ((2 * LODWORD(STACK[0x59C]) + 51057590) & 0x18512EC6);
  int v1218 = LODWORD(STACK[0x480]) + 483905654 - ((2 * LODWORD(STACK[0x480])) & 0x39AFA0EC);
  unsigned int v1219 = LODWORD(STACK[0x47C]) - 5220136 - ((2 * LODWORD(STACK[0x47C])) & 0xFF60B1B0);
  int v1220 = LODWORD(STACK[0x484]) + 483905654 - ((2 * LODWORD(STACK[0x484])) & 0x39AFA0EC);
  LODWORD(STACK[0x730]) = -75026750 - 2009212831 * (v1207 ^ (v1209 - 1644228032));
  LODWORD(STACK[0x734]) = -75026750 - 2009212831 * (v1207 ^ (v1214 + 1674043758));
  LODWORD(STACK[0x790]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1212);
  LODWORD(STACK[0x794]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1218);
  LODWORD(STACK[0x770]) = -75026750 - 2009212831 * (v1213 ^ v1210);
  LODWORD(STACK[0x774]) = -75026750 - 2009212831 * (v1213 ^ v1216);
  int v1221 = -75026750 - 2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x510]) - 854318884));
  LODWORD(STACK[0x750]) = -75026750 - 2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x4FC]) - 1413920139));
  LODWORD(STACK[0x754]) = v1221;
  unsigned int v1222 = LODWORD(STACK[0x488]) - 5220136 - ((2 * LODWORD(STACK[0x488])) & 0xFF60B1B0);
  int v1223 = LODWORD(STACK[0x530]) - ((2 * LODWORD(STACK[0x530]) + 140913692) & 0x18512EC6);
  int v1224 = LODWORD(STACK[0x570]) + 483905654 - ((2 * LODWORD(STACK[0x570])) & 0x39AFA0EC);
  unsigned int v1225 = LODWORD(STACK[0x494]) - 5220136 - ((2 * LODWORD(STACK[0x494])) & 0xFF60B1B0);
  int v1226 = -75026750
        - 2009212831
        * (v1207 ^ (LODWORD(STACK[0x538]) - ((2 * LODWORD(STACK[0x538]) + 152213364) & 0x18512EC6) + 1890706205));
  LODWORD(STACK[0x738]) = -75026750 - 2009212831 * (v1207 ^ (v1217 - 1649532610));
  LODWORD(STACK[0x73C]) = v1226;
  LODWORD(STACK[0x798]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1220);
  LODWORD(STACK[0x79C]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1224);
  int v1227 = -75026750 - 2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x50C]) - 428185709));
  LODWORD(STACK[0x75C]) = -75026750 - 2009212831 * (v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x51C]) - 1311771137));
  LODWORD(STACK[0x758]) = v1227;
  int v1228 = LODWORD(STACK[0x574]) + 483905654 - ((2 * LODWORD(STACK[0x574])) & 0x39AFA0EC);
  LODWORD(STACK[0x778]) = -75026750 - 2009212831 * (v1213 ^ v1219);
  LODWORD(STACK[0x77C]) = -75026750 - 2009212831 * (v1213 ^ v1222);
  int v1229 = LODWORD(STACK[0x4F8]) - ((2 * LODWORD(STACK[0x4F8]) + 525958974) & 0x18512EC6);
  int v1230 = v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x508]) - 609556220);
  LODWORD(STACK[0x6F0]) = v1183 ^ 0x1A90BA4D ^ (LODWORD(STACK[0x540]) - 1171275847);
  LODWORD(STACK[0x708]) = (v1230 + 1663319554)
                        * (v1211 & 0x883DD061 ^ 0x88194060 ^ ((v1211 & 0x883DD861 ^ 0x249001) + (~v1211 & 0x800)));
  v1231 = (unsigned __int8 *)STACK[0x718];
  int v1232 = *(unsigned __int8 *)(STACK[0x718] + 47) ^ 0xD3;
  int v1233 = (v1232 | (LODWORD(STACK[0x498]) << 8))
        - 5220136
        - 2 * ((v1232 | (LODWORD(STACK[0x498]) << 8)) & 0x7FB058D9 ^ v1232 & 1);
  unsigned int v1234 = LODWORD(STACK[0x578]) - 5220136 - ((2 * LODWORD(STACK[0x578])) & 0xFF60B1B0);
  int v1235 = LODWORD(STACK[0x580]) + 483905654 - ((2 * LODWORD(STACK[0x580])) & 0x39AFA0EC);
  LODWORD(STACK[0x740]) = -75026750 - 2009212831 * (v1207 ^ (v1223 - 1336169103));
  LODWORD(STACK[0x744]) = -75026750 - 2009212831 * (v1207 ^ (v1229 + 735401730));
  unsigned int v1236 = LODWORD(STACK[0x610]) - ((2 * LODWORD(STACK[0x610]) - 420564468) & 0xED988058);
  int v1237 = LODWORD(STACK[0x58C]) - 1943496861 - ((2 * LODWORD(STACK[0x58C])) & 0x18512EC6);
  LODWORD(STACK[0x780]) = -75026750 - 2009212831 * (v1213 ^ v1225);
  LODWORD(STACK[0x784]) = -75026750 - 2009212831 * (v1213 ^ v1234);
  LODWORD(STACK[0x828]) = -75026750 - 2009212831 * (v1207 ^ v1237);
  int v1238 = v1231[529] ^ 0xD3;
  int v1239 = v1238 | (LODWORD(STACK[0x4B0]) << 8);
  LODWORD(STACK[0x6EC]) = 483905662;
  LODWORD(STACK[0x7A0]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1228);
  LODWORD(STACK[0x7A4]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1235);
  int v1240 = (v1231[35] ^ 0xD3 | (LODWORD(STACK[0x490]) << 8))
        + 483905654
        - 2 * ((v1231[35] ^ 0xD3 | (LODWORD(STACK[0x490]) << 8)) & 0x1CD7D077 ^ (v1231[35] ^ 0xD3) & 1);
  int v1241 = (v1231[765] ^ 0xD3 | (LODWORD(STACK[0x4B8]) << 8))
        - 1943496861
        - 2 * ((v1231[765] ^ 0xD3 | (LODWORD(STACK[0x4B8]) << 8)) & 0xC289777 ^ (v1231[765] ^ 0xD3) & 0x14);
  int v1242 = (v1231[518] ^ 0xD3 | (LODWORD(STACK[0x4AC]) << 8))
        - 5220136
        - 2 * ((v1231[518] ^ 0xD3 | (LODWORD(STACK[0x4AC]) << 8)) & 0x7FB058DF ^ (v1231[518] ^ 0xD3) & 7);
  int v1243 = (v1231[282] ^ 0xD3 | (LODWORD(STACK[0x4C4]) << 8))
        + 1993097260
        - 2 * ((v1231[282] ^ 0xD3 | (LODWORD(STACK[0x4C4]) << 8)) & 0x76CC403E ^ (v1231[282] ^ 0xD3) & 0x12);
  int v1244 = (v1231[753] ^ 0xD3 | (LODWORD(STACK[0x4A8]) << 8))
        + 1993097260
        - 2 * ((v1231[753] ^ 0xD3 | (LODWORD(STACK[0x4A8]) << 8)) & 0x76CC402D ^ (v1231[753] ^ 0xD3) & 1);
  int v1245 = v1183 ^ 0x6C5CFA61;
  LODWORD(STACK[0x82C]) = -75026750 - 2009212831 * (v1183 ^ 0x6C5CFA61 ^ (v1236 + 1782815026));
  int v1246 = v1241 ^ 0x565656 ^ v1207;
  int v1247 = (v1231[271] ^ 0xD3 | (LODWORD(STACK[0x4C8]) << 8))
        - 1943496861
        - 2 * ((v1231[271] ^ 0xD3 | (LODWORD(STACK[0x4C8]) << 8)) & 0xC289767 ^ (v1231[271] ^ 0xD3) & 4);
  int v1248 = (v1231[730] ^ 0xD3 | (LODWORD(STACK[0x48C]) << 8))
        + 1993097260
        - 2 * ((v1231[730] ^ 0xD3 | (LODWORD(STACK[0x48C]) << 8)) & 0x76CC402F ^ (v1231[730] ^ 0xD3) & 3);
  unsigned int v1249 = LODWORD(STACK[0x4A0]) + 1993097260 - ((2 * LODWORD(STACK[0x4A0])) & 0xED988058);
  int v1250 = LODWORD(STACK[0x4CC]) + 483905654 - ((2 * LODWORD(STACK[0x4CC])) & 0x39AFA0EC);
  int v1251 = ((v1231[24] ^ 0xD3 | (LODWORD(STACK[0x4D0]) << 8)) ^ 0x56560000)
        - 5220136
        - 2 * (((v1231[24] ^ 0xD3 | (LODWORD(STACK[0x4D0]) << 8)) ^ 0x56560000) & 0x7FB058DF ^ (v1231[24] ^ 0xD3) & 7);
  LODWORD(STACK[0x7A8]) = -75026750 - 2009212831 * (v1233 ^ 0x56000056 ^ v1213);
  LODWORD(STACK[0x7AC]) = -75026750 - 2009212831 * v1246;
  int v1252 = STACK[0x6F4];
  unsigned int v1253 = LODWORD(STACK[0x6F4]) ^ 0xBDABC0C5;
  LODWORD(STACK[0x6E0]) = v1253;
  int v1254 = STACK[0x710];
  int v1255 = LODWORD(STACK[0x710]) ^ 0x76FDDA30;
  LODWORD(STACK[0x7B0]) = -75026750 - 2009212831 * (v1253 ^ v1242);
  LODWORD(STACK[0x7B4]) = -75026750 - 2009212831 * (v1255 ^ v1247);
  unsigned int v1256 = v1252 ^ 0xEBFDC0C5 ^ (((v1231[495] ^ 0xD3 | (LODWORD(STACK[0x4BC]) << 8)) ^ 0x56560000)
                              - 5220136
                              - 2
                              * (((v1231[495] ^ 0xD3 | (LODWORD(STACK[0x4BC]) << 8)) ^ 0x56560000) & 0x7FB058DE ^ (v1231[495] ^ 0xD3) & 6));
  LODWORD(STACK[0x7E8]) = -75026750
                        - 2009212831 * (v1203 ^ 0x944C9F04 ^ (v1239 + 483905654 - 2 * (v1239 & 0x1CD7D07E ^ v1238 & 8)));
  LODWORD(STACK[0x7EC]) = -75026750 - 2009212831 * (v1245 ^ v1243);
  int v1257 = LODWORD(STACK[0x5A0]) - 1943496861 - ((2 * LODWORD(STACK[0x5A0])) & 0x18512EC6);
  int v1258 = (v1231[483] ^ 0xD3 | (LODWORD(STACK[0x4A4]) << 8))
        + 483905654
        - 2 * ((v1231[483] ^ 0xD3 | (LODWORD(STACK[0x4A4]) << 8)) & 0x1CD7D077 ^ (v1231[483] ^ 0xD3) & 1);
  LODWORD(STACK[0x7F4]) = -75026750 - 2009212831 * (v1245 ^ v1244);
  LODWORD(STACK[0x7F0]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1240);
  int v1259 = (LODWORD(STACK[0x49C]) ^ 0xD3 | (LODWORD(STACK[0x598]) << 8))
        + 483905654
        - 2
        * ((LODWORD(STACK[0x49C]) ^ 0xD3 | (LODWORD(STACK[0x598]) << 8)) & 0x1CD7D077 ^ (LODWORD(STACK[0x49C]) ^ 0xD3) & 1);
  int v1260 = (v1231[719] ^ 0xD3 | (LODWORD(STACK[0x4B4]) << 8))
        - 1943496861
        - 2 * ((v1231[719] ^ 0xD3 | (LODWORD(STACK[0x4B4]) << 8)) & 0xC28977F ^ (v1231[719] ^ 0xD3) & 0x1C);
  LODWORD(STACK[0x7B8]) = -75026750 - 2009212831 * (v1252 ^ 0xEBFDC0C5 ^ v1251);
  LODWORD(STACK[0x7BC]) = -75026750 - 2009212831 * (v1255 ^ v1257);
  int v1261 = (v1231[236] ^ 0xD3 | (LODWORD(STACK[0x4C0]) << 8))
        + 1993097260
        - 2 * ((v1231[236] ^ 0xD3 | (LODWORD(STACK[0x4C0]) << 8)) & 0x76CC403D ^ (v1231[236] ^ 0xD3) & 0x11111111);
  LODWORD(STACK[0x7F8]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1250);
  LODWORD(STACK[0x7FC]) = -75026750 - 2009212831 * (v1245 ^ v1249);
  int v1262 = (LODWORD(STACK[0x5AC]) | v1231[1] ^ 0xD3)
        - 5220136
        - 2 * ((LODWORD(STACK[0x5AC]) | v1231[1] ^ 0xD3) & 0x7FB058D9 ^ (v1231[1] ^ 0xD3) & 1);
  unsigned int v1263 = -2009212831
        * (((2 * (v1254 ^ LODWORD(STACK[0x5BC]))) & 0xC6487C04 ^ 0xC4081804)
         + (v1254 ^ LODWORD(STACK[0x5BC]) ^ 0x99F17351));
  LODWORD(STACK[0x7C0]) = -75026750 - 2009212831 * v1256;
  LODWORD(STACK[0x7C4]) = v1263;
  int v1264 = v1262 ^ 0x56005656 ^ v1213;
  int v1265 = ((v1231[472] ^ 0xD3 | (LODWORD(STACK[0x4F4]) << 8))
         - 5220136
         - 2 * ((v1231[472] ^ 0xD3 | (LODWORD(STACK[0x4F4]) << 8)) & 0x7FB058DF ^ (v1231[472] ^ 0xD3) & 7)) ^ 0x56560056 ^ v1213;
  int v1266 = (v1231[225] ^ 0xD3 | (LODWORD(STACK[0x4E4]) << 8))
        - 1943496861
        - 2 * ((v1231[225] ^ 0xD3 | (LODWORD(STACK[0x4E4]) << 8)) & 0xC289777 ^ (v1231[225] ^ 0xD3) & 0x14);
  int v1267 = (v1231[707] ^ 0xD3 | (LODWORD(STACK[0x4E8]) << 8))
        + 1993097260
        - 2 * ((v1231[707] ^ 0xD3 | (LODWORD(STACK[0x4E8]) << 8)) & 0x76CC403D ^ (v1231[707] ^ 0xD3) & 0x11111111);
  int v1268 = LODWORD(STACK[0x700]) ^ 0xECD;
  LODWORD(STACK[0x800]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1259);
  int v1269 = v1231[954] ^ 0xD3;
  int v1270 = v1269 | (LODWORD(STACK[0x5B8]) << 8);
  LODWORD(STACK[0x804]) = -75026750 - 2009212831 * (v1245 ^ v1248);
  int v1271 = v1231[460] ^ 0xD3;
  int v1272 = v1271 | (LODWORD(STACK[0x590]) << 8);
  LODWORD(STACK[0x808]) = -75026750 - 2009212831 * (v1203 ^ 0x944C9F04 ^ v1258);
  int v1273 = v1231[943] ^ 0xD3;
  int v1274 = v1273 | (LODWORD(STACK[0x5B4]) << 8);
  LODWORD(STACK[0x80C]) = -75026750 - 2009212831 * (v1245 ^ v1261);
  int v1275 = v1231[696] ^ 0xD3;
  int v1276 = v1275 | (LODWORD(STACK[0x5A8]) << 8);
  int v1277 = v1274 - 5220136 - 2 * (v1274 & 0x7FB058DD ^ v1273 & 5);
  int v1278 = v1231[213] ^ 0xD3;
  int v1279 = -75026750 - 2009212831 * LODWORD(STACK[0x6F0]);
  LODWORD(STACK[0x760]) = STACK[0x708];
  int v1280 = v1231[931] ^ 0xD3;
  int v1281 = v1280 | (LODWORD(STACK[0x4D8]) << 8);
  int v1282 = LODWORD(STACK[0x640]) ^ 0xD3;
  int v1283 = v1282 | (LODWORD(STACK[0x5A4]) << 8);
  LODWORD(v1231) = v1231[684] ^ 0xD3;
  LODWORD(STACK[0x764]) = v1279;
  int v1284 = -75026750 - 2009212831 * v1265;
  LODWORD(STACK[0x7CC]) = -75026750 - 2009212831 * (v1255 ^ v1260);
  LODWORD(STACK[0x7C8]) = -75026750 - 2009212831 * v1264;
  unsigned int v1285 = ((v1279 & 0x883DD861 ^ 0x883DD861) + (v1279 & 0x883DD861))
        * ((v1203 ^ 0x944C9F04 ^ (v1270 + 483905654 - 2 * (v1270 & 0x1CD7D077 ^ v1269 & 1))) + 1663319554);
  unsigned int v1286 = v1203 ^ 0x944C9F04 ^ (v1272 + 483905654 - 2 * (v1272 & STACK[0x6EC] ^ v1271 & 8));
  int v1287 = v1276 & 0xC28976B ^ v1275 & 8;
  unsigned int v1288 = v1203 ^ 0x944C9F04 ^ (v1281 + 483905654 - 2 * (v1281 & STACK[0x6EC] ^ v1280 & 8));
  int v1289 = STACK[0x6E0];
  int v1290 = v1278 | (LODWORD(STACK[0x5C0]) << 8);
  LODWORD(STACK[0x810]) = v1285;
  LODWORD(STACK[0x814]) = -75026750 - 2009212831 * (v1245 ^ v1267);
  LODWORD(STACK[0x7D0]) = v1284;
  LODWORD(STACK[0x7D4]) = -75026750 - 2009212831 * (v1255 ^ v1266);
  unint64_t v1291 = STACK[0x6F8];
  LODWORD(STACK[0x818]) = -75026750 - 2009212831 * v1286;
  LODWORD(STACK[0x81C]) = -75026750
                        - 2009212831 * (v1245 ^ (v1290 + 1993097260 - 2 * (v1290 & 0x76CC403D ^ v1278 & 0x11111111)));
  LODWORD(v1057) = LODWORD(STACK[0x5B0]) ^ 0x496A2EFA ^ LODWORD(STACK[0x710]);
  LODWORD(STACK[0x7D8]) = -75026750 - 2009212831 * (v1289 ^ v1277);
  LODWORD(STACK[0x7DC]) = -75026750 - 2009212831 * (v1255 ^ (v1276 - 1943496861 - 2 * v1287));
  unsigned int v1292 = v1231 | (LODWORD(STACK[0x5C4]) << 8);
  LODWORD(STACK[0x7E4]) = -75026750 - 2009212831 * v1057;
  LODWORD(STACK[0x7E0]) = -75026750 - 2009212831 * (v1289 ^ (v1283 - 5220136 - 2 * (v1283 & 0x7FB058DB ^ v1282 & 3)));
  LODWORD(STACK[0x820]) = -75026750 - 2009212831 * v1288;
  LODWORD(STACK[0x824]) = -75026750 - 2009212831 * (v1245 ^ (v1292 + 1993097260 - ((2 * v1292) & 0xED988058)));
  STACK[0x720] -= 2112;
  return (*(uint64_t (**)(void))(v1291
                              + 8
                              * (((((751 * (v1268 ^ 0xCA9) - 1326) | 0x14A) ^ 0x1D97) * (*(void *)STACK[0x380] == 0)) ^ v1268)))();
}