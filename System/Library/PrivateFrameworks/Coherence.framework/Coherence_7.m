uint64_t sub_1C442EB00()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(void *)(AssociatedTypeWitness - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(void *)(v2 + 64);
  v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C442EBE0()
{
  swift_getAssociatedTypeWitness();
  return sub_1C442BF24();
}

uint64_t sub_1C442EC88()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for Capsule();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  swift_release();
  v6 = (uint64_t *)(v0 + v4);
  unint64_t v7 = *(void *)(v0 + v4 + 8);
  if (v7 >> 60 != 15) {
    sub_1C3F7E2CC(*v6, v7);
  }
  v8 = (char *)v6 + *(int *)(v2 + 36);
  uint64_t v9 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v1)) {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v1);
  }
  unint64_t v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  return MEMORY[0x1F4186498](v0, v10 + 8, v3 | 7);
}

uint64_t sub_1C442EE1C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = *(void *)(type metadata accessor for Capsule() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0[6];
  uint64_t v8 = *(void *)((char *)v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C442CE70(v7, (uint64_t)v0 + v6, v8, v1, v2, v3, v4);
}

uint64_t type metadata accessor for CRPeerSyncManager.PeerInfo()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of CRPeer.peerID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CRPeer.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1C442EF38()
{
  type metadata accessor for Capsule();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBC00F0);
  uint64_t result = sub_1C4496CE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C442F004()
{
  uint64_t result = sub_1C4496678();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Capsule();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for CRPeerSyncManager()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for CRPeerSyncManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CRPeerSyncManager);
}

uint64_t dispatch thunk of CRPeerSyncManager.__allocating_init(_:model:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t type metadata accessor for CRPeerSyncManager.CRPeerPublisher()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C442F184()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    type metadata accessor for Capsule();
    uint64_t result = sub_1C4497B38();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

void *sub_1C442F294(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_1C442F2C8()
{
  return swift_release();
}

void *sub_1C442F2D4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1C442F318(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1C442F350(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1C442F3AC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C442F3FC(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 == 3) {
    return (*a1 >> 3) + 3;
  }
  else {
    return v1;
  }
}

void *sub_1C442F418(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1C442F428(unint64_t *result, uint64_t a2)
{
  if (a2 < 3)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 3);
    unint64_t v3 = 0xC000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

uint64_t type metadata accessor for CRPeerSyncManager.PeerState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C442F46C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C442F488()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C442F4A8()
{
  uint64_t v1 = *(void *)(type metadata accessor for Capsule() - 8);
  uint64_t v2 = *(uint64_t **)(v0 + 48);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C442D334(v2, v3);
}

uint64_t objectdestroy_47Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for Capsule();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  swift_release();
  unint64_t v6 = (uint64_t *)(v0 + v4);
  unint64_t v7 = *(void *)(v0 + v4 + 8);
  if (v7 >> 60 != 15) {
    sub_1C3F7E2CC(*v6, v7);
  }
  uint64_t v8 = (char *)v6 + *(int *)(v2 + 36);
  uint64_t v9 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v1)) {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v1);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, v4 + v5, v3 | 7);
}

uint64_t sub_1C442F69C()
{
  uint64_t v1 = *(void *)(type metadata accessor for Capsule() - 8);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C442A5B8(v2, v3);
}

uint64_t sub_1C442F738(uint64_t a1, uint64_t a2)
{
  uint64_t v103 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v91 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v87 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a1 + 56;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v90 = v3;
  uint64_t v94 = v4;
  uint64_t v96 = v8;
  unint64_t v10 = v7;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v11 = (v10 - 1) & v10;
  unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
  int64_t v13 = v9;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_143;
  }
LABEL_23:
  unint64_t v88 = v11;
  int64_t v89 = v13;
  v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v12);
  uint64_t v19 = *v17;
  unint64_t v18 = v17[1];
  sub_1C44985F8();
  sub_1C3F7E324(v19, v18);
  unint64_t v97 = v18;
  sub_1C4496568();
  uint64_t v20 = sub_1C4498628();
  uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v22 = v20 & ~v21;
  if (((*(void *)(v8 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
  {
LABEL_140:
    sub_1C3F7E2CC(v19, v97);
    uint64_t v2 = 0;
    goto LABEL_141;
  }
  unint64_t v23 = v18 >> 62;
  uint64_t v98 = ~v21;
  BOOL v24 = __OFSUB__(HIDWORD(v19), v19);
  BOOL v95 = v24;
  uint64_t v92 = (v19 >> 32) - (int)v19;
  uint64_t v93 = v19 >> 32;
  while (2)
  {
    v25 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    unint64_t v26 = v25[1];
    uint64_t v28 = 0;
    switch(v26 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v27), v27))
        {
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
        }
        uint64_t v28 = HIDWORD(v27) - (int)v27;
LABEL_36:
        sub_1C3F7E324(v27, v26);
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v27 + 16);
        uint64_t v29 = *(void *)(v27 + 24);
        uint64_t v28 = v29 - v30;
        if (!__OFSUB__(v29, v30)) {
          goto LABEL_36;
        }
        goto LABEL_146;
      case 3uLL:
        break;
      default:
        uint64_t v28 = BYTE6(v26);
        break;
    }
    uint64_t v31 = BYTE6(v97);
    switch((int)v23)
    {
      case 1:
        uint64_t v31 = HIDWORD(v19) - (int)v19;
        if (v95) {
          goto LABEL_147;
        }
        goto LABEL_41;
      case 2:
        uint64_t v33 = *(void *)(v19 + 16);
        uint64_t v32 = *(void *)(v19 + 24);
        BOOL v34 = __OFSUB__(v32, v33);
        uint64_t v31 = v32 - v33;
        if (!v34) {
          goto LABEL_41;
        }
        goto LABEL_148;
      case 3:
        if (v28) {
          goto LABEL_29;
        }
        goto LABEL_137;
      default:
LABEL_41:
        if (v28 != v31)
        {
LABEL_29:
          sub_1C3F7E2CC(v27, v26);
          goto LABEL_30;
        }
        if (v28 >= 1)
        {
          switch(v26 >> 62)
          {
            case 1uLL:
              if ((int)v27 > v27 >> 32) {
                goto LABEL_149;
              }
              uint64_t v39 = sub_1C4496298();
              if (v39)
              {
                uint64_t v40 = v39;
                uint64_t v41 = sub_1C44962C8();
                if (__OFSUB__((int)v27, v41)) {
                  goto LABEL_151;
                }
                v42 = (const void *)(v40 + (int)v27 - v41);
                sub_1C44962B8();
                if (!v23)
                {
LABEL_92:
                  *(void *)__s1 = v19;
                  *(_DWORD *)&__s1[8] = v97;
                  *(_WORD *)&__s1[12] = WORD2(v97);
                  if (!v42) {
                    goto LABEL_176;
                  }
                  int v57 = memcmp(v42, __s1, BYTE6(v97));
                  goto LABEL_134;
                }
              }
              else
              {
                v42 = 0;
                sub_1C44962B8();
                if (!v23) {
                  goto LABEL_92;
                }
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_159;
                }
                swift_retain();
                uint64_t v43 = sub_1C4496298();
                if (v43)
                {
                  uint64_t v44 = sub_1C44962C8();
                  if (__OFSUB__((int)v19, v44)) {
                    goto LABEL_168;
                  }
                  v43 += (int)v19 - v44;
                }
                uint64_t v45 = sub_1C44962B8();
                uint64_t v46 = (v19 >> 32) - (int)v19;
                if (v45 < v92) {
                  uint64_t v46 = v45;
                }
                if (!v42) {
                  goto LABEL_171;
                }
                if (!v43) {
                  goto LABEL_172;
                }
                size_t v47 = v46;
                v48 = v42;
                v49 = (const void *)v43;
LABEL_88:
                int v57 = memcmp(v48, v49, v47);
                sub_1C3F7E2CC(v19, v97);
              }
              else
              {
                uint64_t v79 = *(void *)(v19 + 16);
                uint64_t v78 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                v80 = (char *)sub_1C4496298();
                if (v80)
                {
                  uint64_t v81 = sub_1C44962C8();
                  if (__OFSUB__(v79, v81)) {
                    goto LABEL_167;
                  }
                  v80 += v79 - v81;
                }
                BOOL v34 = __OFSUB__(v78, v79);
                int64_t v82 = v78 - v79;
                if (v34) {
                  goto LABEL_161;
                }
                uint64_t v83 = sub_1C44962B8();
                if (v83 >= v82) {
                  size_t v84 = v82;
                }
                else {
                  size_t v84 = v83;
                }
                if (!v42) {
                  goto LABEL_182;
                }
                uint64_t v3 = v90;
                uint64_t v4 = v94;
                if (!v80) {
                  goto LABEL_183;
                }
                int v57 = memcmp(v42, v80, v84);
                swift_release();
LABEL_133:
                swift_release();
              }
LABEL_134:
              sub_1C3F7E2CC(v27, v26);
LABEL_135:
              uint64_t v8 = v96;
              if (!v57) {
                goto LABEL_138;
              }
              break;
            case 2uLL:
              uint64_t v50 = *(void *)(v27 + 16);
              swift_retain();
              swift_retain();
              v51 = (char *)sub_1C4496298();
              if (!v51) {
                goto LABEL_68;
              }
              uint64_t v52 = sub_1C44962C8();
              if (__OFSUB__(v50, v52)) {
                goto LABEL_150;
              }
              v51 += v50 - v52;
LABEL_68:
              sub_1C44962B8();
              uint64_t v4 = v94;
              if (!v23)
              {
                *(void *)__s1 = v19;
                *(_DWORD *)&__s1[8] = v97;
                *(_WORD *)&__s1[12] = WORD2(v97);
                if (!v51) {
                  goto LABEL_179;
                }
                int v57 = memcmp(v51, __s1, BYTE6(v97));
                swift_release();
                goto LABEL_133;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_154;
                }
                swift_retain();
                v53 = (char *)sub_1C4496298();
                if (v53)
                {
                  uint64_t v54 = sub_1C44962C8();
                  if (__OFSUB__((int)v19, v54)) {
                    goto LABEL_166;
                  }
                  v53 += (int)v19 - v54;
                }
                uint64_t v55 = sub_1C44962B8();
                size_t v56 = (v19 >> 32) - (int)v19;
                if (v55 < v92) {
                  size_t v56 = v55;
                }
                if (!v51) {
                  goto LABEL_173;
                }
                if (!v53) {
                  goto LABEL_174;
                }
                int v57 = memcmp(v51, v53, v56);
                sub_1C3F7E2CC(v19, v97);
                swift_release();
              }
              else
              {
                uint64_t v72 = *(void *)(v19 + 16);
                uint64_t v86 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                v73 = (char *)sub_1C4496298();
                if (v73)
                {
                  uint64_t v74 = sub_1C44962C8();
                  if (__OFSUB__(v72, v74)) {
                    goto LABEL_165;
                  }
                  v73 += v72 - v74;
                }
                BOOL v34 = __OFSUB__(v86, v72);
                int64_t v75 = v86 - v72;
                if (v34) {
                  goto LABEL_160;
                }
                uint64_t v76 = sub_1C44962B8();
                if (v76 >= v75) {
                  size_t v77 = v75;
                }
                else {
                  size_t v77 = v76;
                }
                if (!v51) {
                  goto LABEL_180;
                }
                uint64_t v3 = v90;
                if (!v73) {
                  goto LABEL_181;
                }
                int v57 = memcmp(v51, v73, v77);
                swift_release();
                swift_release();
LABEL_121:
                swift_release();
              }
              swift_release();
              sub_1C3F7E2CC(v27, v26);
              uint64_t v4 = v94;
              goto LABEL_135;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v23) {
                goto LABEL_89;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_153;
                }
                sub_1C3F7E324(v19, v97);
                uint64_t v58 = sub_1C4496298();
                if (!v58) {
                  goto LABEL_175;
                }
                uint64_t v36 = v58;
                uint64_t v59 = sub_1C44962C8();
                uint64_t v38 = (int)v19 - v59;
                if (__OFSUB__((int)v19, v59)) {
                  goto LABEL_158;
                }
LABEL_84:
                uint64_t v60 = sub_1C44962B8();
                v49 = (const void *)(v36 + v38);
                if (v60 >= v92) {
                  size_t v47 = (v19 >> 32) - (int)v19;
                }
                else {
                  size_t v47 = v60;
                }
                v48 = __s1;
                goto LABEL_88;
              }
              uint64_t v68 = *(void *)(v19 + 16);
              uint64_t v69 = *(void *)(v19 + 24);
              swift_retain();
              swift_retain();
              v64 = (char *)sub_1C4496298();
              if (v64)
              {
                uint64_t v70 = sub_1C44962C8();
                if (__OFSUB__(v68, v70)) {
                  goto LABEL_164;
                }
                v64 += v68 - v70;
              }
              BOOL v34 = __OFSUB__(v69, v68);
              int64_t v66 = v69 - v68;
              if (v34) {
                goto LABEL_156;
              }
              uint64_t v67 = sub_1C44962B8();
              if (!v64) {
                goto LABEL_178;
              }
LABEL_105:
              if (v67 >= v66) {
                size_t v71 = v66;
              }
              else {
                size_t v71 = v67;
              }
              int v57 = memcmp(__s1, v64, v71);
              goto LABEL_121;
            default:
              *(void *)__s1 = v27;
              *(_WORD *)&__s1[8] = v26;
              __s1[10] = BYTE2(v26);
              __s1[11] = BYTE3(v26);
              __s1[12] = BYTE4(v26);
              __s1[13] = BYTE5(v26);
              if (!v23)
              {
LABEL_89:
                uint64_t __s2 = v19;
                int v100 = v97;
                __int16 v101 = WORD2(v97);
                int v61 = memcmp(__s1, &__s2, BYTE6(v97));
                sub_1C3F7E2CC(v27, v26);
                if (!v61) {
                  goto LABEL_138;
                }
                break;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_152;
                }
                sub_1C3F7E324(v19, v97);
                uint64_t v35 = sub_1C4496298();
                if (!v35)
                {
                  sub_1C44962B8();
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  sub_1C44962B8();
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
                  JUMPOUT(0x1C4430260);
                }
                uint64_t v36 = v35;
                uint64_t v37 = sub_1C44962C8();
                uint64_t v38 = (int)v19 - v37;
                if (__OFSUB__((int)v19, v37)) {
                  goto LABEL_157;
                }
                goto LABEL_84;
              }
              uint64_t v62 = *(void *)(v19 + 16);
              uint64_t v63 = *(void *)(v19 + 24);
              swift_retain();
              swift_retain();
              v64 = (char *)sub_1C4496298();
              if (v64)
              {
                uint64_t v65 = sub_1C44962C8();
                if (__OFSUB__(v62, v65)) {
                  goto LABEL_163;
                }
                v64 += v62 - v65;
              }
              BOOL v34 = __OFSUB__(v63, v62);
              int64_t v66 = v63 - v62;
              if (v34) {
                goto LABEL_155;
              }
              uint64_t v67 = sub_1C44962B8();
              if (!v64) {
                goto LABEL_177;
              }
              goto LABEL_105;
          }
LABEL_30:
          unint64_t v22 = (v22 + 1) & v98;
          if (((*(void *)(v8 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            goto LABEL_140;
          }
          continue;
        }
LABEL_137:
        sub_1C3F7E2CC(v27, v26);
LABEL_138:
        sub_1C3F7E2CC(v19, v97);
        int64_t v9 = v89;
        unint64_t v10 = v88;
        if (v88) {
          goto LABEL_7;
        }
LABEL_9:
        int64_t v14 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_162;
        }
        if (v14 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v14);
        int64_t v13 = v9 + 1;
        if (v15) {
          goto LABEL_22;
        }
        int64_t v13 = v9 + 2;
        if (v9 + 2 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v13);
        if (v15) {
          goto LABEL_22;
        }
        int64_t v13 = v9 + 3;
        if (v9 + 3 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v13);
        if (v15) {
          goto LABEL_22;
        }
        int64_t v16 = v9 + 4;
        if (v9 + 4 >= v87)
        {
LABEL_144:
          uint64_t v2 = 1;
          goto LABEL_141;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v16);
        if (!v15)
        {
          while (1)
          {
            int64_t v13 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              goto LABEL_169;
            }
            if (v13 >= v87) {
              goto LABEL_144;
            }
            unint64_t v15 = *(void *)(v91 + 8 * v13);
            ++v16;
            if (v15) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v9 + 4;
LABEL_22:
        uint64_t v11 = (v15 - 1) & v15;
        unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
        if (*(void *)(v4 + 16)) {
          goto LABEL_23;
        }
LABEL_143:
        uint64_t v2 = 0;
LABEL_141:
        sub_1C3F7FCE8();
        return v2;
    }
  }
}

uint64_t sub_1C4430290(uint64_t a1)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 128)) = a1;
  swift_retain();
  swift_release();
  return sub_1C44253D8();
}

void *sub_1C44302EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = a1;
  uint64_t v5 = (void *)*v2;
  uint64_t v6 = sub_1C4497A38();
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v21 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C4497A08();
  MEMORY[0x1F4188790](v20);
  v19[2] = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C4496DA8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = v5[13];
  uint64_t v11 = v5[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v15 = (char *)v19 - v14;
  *(void *)((char *)v3 + v5[16]) = 0xC000000000000000;
  v19[1] = (char *)v3 + *(void *)(*v3 + 136);
  swift_weakInit();
  *((unsigned char *)v3 + *(void *)(*v3 + 144)) = 0;
  int64_t v16 = (char *)v3 + *(void *)(*v3 + 152);
  uint64_t v17 = type metadata accessor for Capsule();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v19[0] = sub_1C3FF32D4(0, (unint64_t *)&qword_1EBBC1290);
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_1C4497268();
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v11, v10);
  sub_1C44982A8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  sub_1C4496D88();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C3F70A60(qword_1EBBC1060, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC1040);
  sub_1C3F70AF0((unint64_t *)&qword_1EBBC1050, (uint64_t *)&unk_1EBBC1040);
  sub_1C4497BF8();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v21, *MEMORY[0x1E4FBCC58], v23);
  *(void *)((char *)v3 + *(void *)(*v3 + 120)) = sub_1C4497A78();
  swift_weakAssign();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))((char *)v3 + *(void *)(*v3 + 112), a2, v11);
  return v3;
}

unint64_t sub_1C44307B0()
{
  unint64_t result = qword_1EA3A0CD0;
  if (!qword_1EA3A0CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3A0CD0);
  }
  return result;
}

uint64_t type metadata accessor for CRPeerDataConsumer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C443081C()
{
  swift_release();
  sub_1C3F7E2CC(*(void *)(v0 + 56), *(void *)(v0 + 64));
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C443085C()
{
  return sub_1C4428424(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1C4430870(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C44308D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C4430938()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for Capsule();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v14 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = *(void *)(v5 + 64);
  swift_release();
  uint64_t v7 = (uint64_t *)(v0 + v4);
  unint64_t v8 = *(void *)(v0 + v4 + 8);
  if (v8 >> 60 != 15) {
    sub_1C3F7E2CC(*v7, v8);
  }
  uint64_t v9 = (char *)v7 + *(int *)(v2 + 36);
  uint64_t v10 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v1)) {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v1);
  }
  uint64_t v11 = (v4 + v14 + v6) & ~v6;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v11, AssociatedTypeWitness);
  return MEMORY[0x1F4186498](v0, v11 + v13, v3 | v6 | 7);
}

uint64_t sub_1C4430B64()
{
  uint64_t v1 = (void (**)(char *, uint64_t, uint64_t))v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (char *)v0[5];
  uint64_t v5 = *(void *)(type metadata accessor for Capsule() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v0[6];
  uint64_t v10 = (uint64_t)v0 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_1C442C4AC(v9, (uint64_t)v0 + v6, v10, v1, v2, v3, v4);
}

uint64_t sub_1C4430C7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C442C90C(v1, a1);
}

uint64_t sub_1C4430C98()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C4430D74()
{
  return sub_1C442610C(*(void *)(v0 + 48), *(void **)(v0 + 56), *(uint64_t **)(v0 + 64), *(void *)(v0 + 72), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));
}

uint64_t sub_1C4430DB8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release();
  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t sub_1C4430E54()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80);
  return sub_1C4426DD0(v0 + v1, *(uint64_t **)(v0+ ((*(void *)(*(void *)(*(void *)(v0 + 24) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C4430EBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C442B590(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C4430ED8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C4430F68(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C44310C4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C44312DCLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        int64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_1C4431304(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void (*sub_1C44313C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  BOOL v9 = malloc(0x50uLL);
  *a1 = v9;
  v9[1] = a4;
  v9[2] = v4;
  *BOOL v9 = a3;
  uint64_t v10 = sub_1C44985B8();
  v9[3] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[4] = v11;
  size_t v12 = *(void *)(v11 + 64);
  v9[5] = malloc(v12);
  int v13 = malloc(v12);
  v9[6] = v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_1C4497978();
  v9[7] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15;
  v9[8] = v15;
  v9[9] = malloc(*(void *)(v15 + 64));
  (*(void (**)(void))(v16 + 16))();
  sub_1C443173C(a2, a3, a4, (uint64_t)v13);
  return sub_1C4431594;
}

void sub_1C4431594(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 64);
  uint64_t v5 = *(void **)(*(void *)a1 + 72);
  unsigned int v7 = *(void **)(*(void *)a1 + 48);
  uint64_t v10 = *(void *)(*(void *)a1 + 56);
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    (*(void (**)(void *, void *, void))(v4 + 16))(v3, v7, v2[3]);
    swift_getWitnessTable();
    sub_1C4498078();
    BOOL v9 = *(void (**)(void *, uint64_t))(v4 + 8);
    v9(v3, v8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v5, v10);
    v9(v7, v8);
  }
  else
  {
    swift_getWitnessTable();
    sub_1C4498078();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v5, v10);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v7, v8);
  }
  free(v5);
  free(v7);
  free(v3);
  free(v2);
}

uint64_t sub_1C443173C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v52 = a4;
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  size_t v47 = (char *)&v44 - v12;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v44 - v17;
  swift_getAssociatedConformanceWitness();
  uint64_t v19 = sub_1C4497978();
  uint64_t v48 = *(void *)(v19 - 8);
  uint64_t v49 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v46 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v44 - v22;
  sub_1C44977D8();
  uint64_t v53 = v4;
  uint64_t v50 = v6;
  uint64_t v51 = a2;
  sub_1C4497818();
  uint64_t result = sub_1C44970D8();
  if (result)
  {
    uint64_t v25 = v13;
    unint64_t v26 = v16;
    uint64_t v27 = TupleTypeMetadata2;
    uint64_t v28 = v47;
    uint64_t v29 = &v47[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v45 = v23;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v30(v47, v18, AssociatedTypeWitness);
    uint64_t v31 = v29;
    v30(v29, v26, AssociatedTypeWitness);
    uint64_t v32 = &v10[*(int *)(v27 + 48)];
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v33(v10, v28, AssociatedTypeWitness);
    v33(v32, v31, AssociatedTypeWitness);
    BOOL v34 = v46;
    v30(v46, v10, AssociatedTypeWitness);
    uint64_t v44 = *(void (**)(char *, uint64_t))(v25 + 8);
    v44(v32, AssociatedTypeWitness);
    uint64_t v35 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
    v30(v10, v28, AssociatedTypeWitness);
    v30(v35, v31, AssociatedTypeWitness);
    uint64_t v36 = (void (*)(uint64_t, char *, uint64_t))v30;
    uint64_t v37 = v49;
    v30(&v34[*(int *)(v49 + 36)], v35, AssociatedTypeWitness);
    v44(v10, AssociatedTypeWitness);
    uint64_t v38 = v48;
    uint64_t v39 = v45;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v34, v37);
    uint64_t v40 = v53;
    uint64_t v41 = v51;
    sub_1C44977E8();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
    uint64_t v42 = sub_1C44985B8();
    uint64_t v43 = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v52 + *(int *)(v42 + 40), v40, v41);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v39, v55, v37);
    v36(v43, v39, AssociatedTypeWitness);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v43 + *(int *)(v42 + 36), &v39[*(int *)(v37 + 36)], AssociatedTypeWitness);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C4431C24()
{
}

uint64_t sub_1C4431C70(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBBF40);
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(&v5, *((uint64_t *)&v6 + 1));
    uint64_t v3 = sub_1C4498088();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
  }
  else
  {
    uint64_t v7 = 0;
    long long v5 = 0u;
    long long v6 = 0u;
    sub_1C3F962E0((uint64_t)&v5, (uint64_t *)&unk_1EA39D498);
    return 63;
  }
  return v3;
}

uint64_t sub_1C4431DB0()
{
  return sub_1C4498608();
}

uint64_t sub_1C4431E28(uint64_t a1, uint64_t a2)
{
  if ((sub_1C4497178() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for CROrderedSetElement() + 36);
  return _s9Coherence9TimestampV2eeoiySbAC_ACtFZ_0(a1 + v4, a2 + v4);
}

uint64_t sub_1C4431EA8()
{
  return sub_1C4498628();
}

uint64_t sub_1C4431EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for CROrderedSet.DeduplicatedInfo() + 44);
  uint64_t v5 = sub_1C44967E8();
  long long v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  return v6(v4, a2, v5);
}

uint64_t sub_1C4431F84()
{
  return sub_1C4498628();
}

uint64_t sub_1C4431FCC(uint64_t a1, uint64_t a2)
{
  return sub_1C4431E28(a1, a2);
}

void sub_1C4431FD8()
{
}

void sub_1C4431FE8()
{
}

void sub_1C4432034(unsigned char *a1@<X8>)
{
}

uint64_t CROrderedSet.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)v6 + 16))
  {
    uint64_t v10 = MEMORY[0x1F4188790](v6);
    uint64_t v11 = a2[2];
    uint64_t v12 = a2[3];
    v21[-4] = v11;
    v21[-3] = v12;
    uint64_t v13 = a2[4];
    v21[-2] = v13;
    v21[-1] = v10;
    v21[0] = CROrderedSet.map<A>(_:)((void (*)(uint64_t))sub_1C41041D8, (uint64_t)&v21[-6], (uint64_t)a2);
    uint64_t v14 = sub_1C4497528();
    swift_getWitnessTable();
    uint64_t v15 = (char *)v21;
    uint64_t v16 = a3;
    uint64_t v17 = v11;
    uint64_t v18 = v14;
  }
  else
  {
    (*(void (**)(char *, uint64_t, void *))(v7 + 16))(v9, v3, a2);
    uint64_t v19 = a2[2];
    uint64_t v12 = a2[3];
    uint64_t v13 = a2[4];
    swift_getWitnessTable();
    uint64_t v16 = a3;
    uint64_t v15 = v9;
    uint64_t v17 = v19;
    uint64_t v18 = (uint64_t)a2;
  }
  return CROrderedSet.init<A>(_:)((uint64_t)v15, v17, v18, v12, v13, v16);
}

uint64_t CROrderedSet.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v6 = a1;
  swift_bridgeObjectRetain();
  CROrderedSet.copy(renamingReferences:)((uint64_t)&v6, a2, a3);
  return swift_bridgeObjectRelease();
}

void CROrderedSet.init(_:)(void *a1@<X0>, void *a2@<X8>)
{
  CROrderedSet.init()(a2);
}

uint64_t CROrderedSet.init<A>(_:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v14 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v16);
  CROrderedSet.init<A>(_:)((uint64_t)v16, a3, a4, a5, a6, a7);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a2, a4);
}

uint64_t CROrderedSet.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  sub_1C40811FC(v4, v4);
  uint64_t v5 = *(void *)(v4 - 8);
  swift_allocObject();
  uint64_t v6 = sub_1C4497428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1C408045C();
  uint64_t v11 = v6;
  uint64_t v8 = sub_1C4497528();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1C3F5C408((uint64_t)&v11, 0, 1, a2, v8, WitnessTable);
  return swift_bridgeObjectRelease();
}

uint64_t CROrderedSet.merge(_:)(uint64_t *a1, uint64_t a2)
{
  v20[0] = *a1;
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  uint64_t v5 = sub_1C4377C10(v20, 1);
  uint64_t v21 = a1[1];
  uint64_t v6 = type metadata accessor for CRSet();
  uint64_t v7 = sub_1C4158CE0();
  uint64_t result = sub_1C4158CE0();
  if (v7 == result) {
    goto LABEL_8;
  }
  uint64_t v17 = v5;
  uint64_t v18 = v2;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = (void *)sub_1C4385090((uint64_t)&v21, v6, WitnessTable);
  uint64_t v11 = sub_1C4158CE0();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v11 + 24);
  uint64_t v12 = *(void *)(v11 + 32);
  swift_beginAccess();
  uint64_t v14 = v10[3];
  uint64_t v19 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1C41136F0(v15, &v19, v12);
  sub_1C41136F0(v14, &v19, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19 != 3)
  {
    if (v19 == 1)
    {
      sub_1C438AC7C((uint64_t)v10);
      swift_release();
      if (v17 == 2)
      {
        uint64_t v16 = *(void *)(a2 - 8);
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, a2);
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v16 + 16))(v18, a1, a2);
      }
      return sub_1C3F85354(0, a2);
    }
    swift_release();
    uint64_t result = swift_release();
    uint64_t v5 = v17;
LABEL_8:
    if (v5 == 1) {
      return result;
    }
    return sub_1C3F85354(0, a2);
  }
  sub_1C4389144();
  sub_1C4158CE0();
  swift_retain();
  sub_1C4380528(v10);
  swift_release();
  swift_release();
  swift_release();
  return sub_1C3F85354(0, a2);
}

uint64_t sub_1C443280C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CROrderedSet.DeduplicatedInfo();
  uint64_t v4 = sub_1C4497B38();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = v1 + *(int *)(a1 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v12, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  sub_1C43778A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v12, 1, 1, v3);
}

uint64_t CROrderedSet.finalizeTimestamps(_:)(uint64_t a1)
{
  return CRSet.finalizeTimestamps(_:)(a1);
}

uint64_t CROrderedSet.insert(_:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  sub_1C40811FC(v6, v6);
  uint64_t v7 = *(void *)(v6 - 8);
  swift_allocObject();
  uint64_t v8 = sub_1C4497428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1C408045C();
  uint64_t v13 = v8;
  uint64_t v10 = sub_1C4497528();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1C3F5C408((uint64_t)&v13, a2, 0, a3, v10, WitnessTable);
  return swift_bridgeObjectRelease();
}

uint64_t CROrderedSet.insert<A>(contentsOf:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C3F5C408(a1, a2, 0, a3, a4, a5);
}

Swift::Void __swiftcall CROrderedSet.remove(at:)(Swift::Int at)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](at);
  uint64_t v20 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v8 + 32);
  uint64_t v9 = type metadata accessor for CROrderedSetElement();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v17 - v11;
  uint64_t v21 = sub_1C4497B38();
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v14 = (char *)v17 - v13;
  uint64_t v18 = v2;
  sub_1C443280C(v3);
  uint64_t v23 = *v2;
  v17[1] = type metadata accessor for CRSequence();
  CRSequence.subscript.getter();
  uint64_t v15 = (uint64_t)v20;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v20, v12, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = type metadata accessor for CRSet();
  CRSet.remove(_:)(v15, v16, (uint64_t)v14);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v21);
  CRSequence.remove(at:)(at);
}

uint64_t CROrderedSet.remove(atOffsets:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC150);
  MEMORY[0x1F4188790](v4 - 8);
  int v57 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC148);
  uint64_t v6 = MEMORY[0x1F4188790](v58);
  size_t v56 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v55 - v9;
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v60 = *(void (***)(uint64_t, uint64_t))(v11 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v70 = *(void *)(a2 + 32);
  size_t v71 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CROrderedSetElement();
  uint64_t v62 = *(void (***)(char *, uint64_t))(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v69 = (char *)v55 - v14;
  uint64_t v72 = v11;
  uint64_t v68 = sub_1C4497B38();
  uint64_t v59 = *(void (***)(uint64_t, uint64_t))(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v67 = (uint64_t)v55 - v15;
  uint64_t v16 = sub_1C44967E8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  int64_t v66 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C4496688();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v76 = (char *)v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  int64_t v75 = (char *)v55 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF188);
  uint64_t v25 = v24 - 8;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a2;
  sub_1C443280C(a2);
  v55[1] = a1;
  sub_1C44966C8();
  uint64_t v79 = &v27[*(int *)(v25 + 44)];
  v80 = v27;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v77 = v20 + 16;
  uint64_t v28 = (void (**)(char *, uint64_t))(v20 + 8);
  v64 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v63 = (void (**)(char *, char *, uint64_t))(v60 + 2);
  ++v62;
  int v61 = v78 + 1;
  ++v60;
  for (++v59; ; (*v59)(v41, v68))
  {
    uint64_t v29 = v13;
    uint64_t v30 = v75;
    v74(v75, v79, v19);
    sub_1C443CCA8(qword_1EBBBBCE8, MEMORY[0x1E4F27D00]);
    uint64_t v31 = v76;
    sub_1C4497818();
    sub_1C443CCA8(&qword_1EBBBBCD0, MEMORY[0x1E4F27CC8]);
    char v32 = sub_1C4497178();
    uint64_t v33 = *v28;
    (*v28)(v31, v19);
    v33(v30, v19);
    if (v32) {
      break;
    }
    uint64_t v34 = (uint64_t)v80;
    uint64_t v35 = (void (*)(void *, void))sub_1C44978C8();
    v35(v81, 0);
    uint64_t v36 = v66;
    (*v65)(v66, v34, v16);
    sub_1C4497828();
    (*v64)(v36, v16);
    v81[0] = *v78;
    type metadata accessor for CRSequence();
    uint64_t v37 = v69;
    uint64_t v13 = v29;
    CRSequence.subscript.getter();
    uint64_t v39 = (uint64_t)v71;
    uint64_t v38 = v72;
    (*v63)(v71, v37, v72);
    (*v62)(v37, v13);
    uint64_t v40 = type metadata accessor for CRSet();
    uint64_t v41 = v67;
    CRSet.remove(_:)(v39, v40, v67);
    (*v60)(v39, v38);
  }
  sub_1C3F962E0((uint64_t)v80, &qword_1EBBBF188);
  uint64_t v42 = v57;
  sub_1C44967C8();
  uint64_t v43 = sub_1C44967A8();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = (uint64_t)v56;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v56, v42, v43);
  sub_1C443CCA8((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
  sub_1C4497818();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v43);
  uint64_t v46 = v58;
  *(void *)(v45 + *(int *)(v58 + 36)) = v81[0];
  sub_1C3F961BC(v45, (uint64_t)v10, &qword_1EBBBC148);
  size_t v47 = &v10[*(int *)(v46 + 36)];
  uint64_t v48 = *(void *)v47;
  sub_1C44977D8();
  if (v48 != v81[0])
  {
    sub_1C443CCA8(qword_1EA39D5B8, MEMORY[0x1E4F27CE0]);
    do
    {
      sub_1C4497098();
      uint64_t v49 = (void (*)(void *, void))sub_1C44978C8();
      uint64_t v51 = *v50;
      uint64_t v52 = v50[1];
      v49(v81, 0);
      type metadata accessor for CRSequence();
      CRSequence.removeSubrange(_:)(v51, v52);
      uint64_t v53 = *(void *)v47;
      sub_1C44977D8();
    }
    while (v53 != v81[0]);
  }
  return sub_1C3F962E0((uint64_t)v10, &qword_1EBBBC148);
}

uint64_t sub_1C443383C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a5;
  uint64_t v59 = a6;
  uint64_t v55 = *(void *)(a5 - 8);
  uint64_t v56 = a3;
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  int v57 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = *(void *)(v17 + 32);
  uint64_t v69 = type metadata accessor for CROrderedSetElement();
  uint64_t v18 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v20 = (char *)&v53 - v19;
  uint64_t v66 = v13;
  uint64_t v21 = sub_1C4497B38();
  uint64_t v53 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v68 = (uint64_t *)a4;
  uint64_t result = sub_1C443280C(a4);
  uint64_t v60 = a1;
  if (a1 == a2) {
    goto LABEL_6;
  }
  uint64_t v25 = v60;
  if (a2 < v60)
  {
    __break(1u);
  }
  else if (v60 < a2)
  {
    uint64_t v65 = v6 + 1;
    uint64_t v26 = type metadata accessor for CRSequence();
    uint64_t v63 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v64 = v26;
    int v61 = (void (**)(uint64_t, uint64_t))(v14 + 8);
    uint64_t v62 = (void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v27 = (void (**)(char *, uint64_t))(v53 + 8);
    uint64_t v28 = v25;
    do
    {
      uint64_t v29 = v28 + 1;
      uint64_t v70 = *v6;
      CRSequence.subscript.getter();
      uint64_t v30 = v16;
      uint64_t v31 = v20;
      uint64_t v32 = v21;
      uint64_t v33 = v20;
      uint64_t v34 = (uint64_t)v16;
      uint64_t v35 = v66;
      (*v63)(v30, v31, v66);
      (*v62)(v33, v69);
      uint64_t v36 = type metadata accessor for CRSet();
      CRSet.remove(_:)(v34, v36, (uint64_t)v23);
      uint64_t v37 = v34;
      uint64_t v38 = v35;
      uint64_t v16 = (char *)v34;
      uint64_t v20 = v33;
      uint64_t v21 = v32;
      (*v61)(v37, v38);
      (*v27)(v23, v32);
      uint64_t v28 = v29;
    }
    while (a2 != v29);
LABEL_6:
    uint64_t v54 = v6;
    uint64_t v39 = v58;
    uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 16))(v57, v56, v58);
    MEMORY[0x1F4188790](v40);
    uint64_t v41 = v66;
    uint64_t v42 = v67;
    *(&v53 - 6) = v66;
    *(&v53 - 5) = v39;
    uint64_t v43 = v68[3];
    *(&v53 - 4) = v43;
    *(&v53 - 3) = v42;
    uint64_t v44 = v59;
    *(&v53 - 2) = v59;
    *(&v53 - 1) = (uint64_t)v6;
    uint64_t v45 = sub_1C4497338();
    uint64_t v68 = &v53;
    uint64_t v70 = v45;
    MEMORY[0x1F4188790](v45);
    *(&v53 - 6) = v41;
    *(&v53 - 5) = v39;
    *(&v53 - 4) = v43;
    *(&v53 - 3) = v42;
    uint64_t v46 = v54;
    *(&v53 - 2) = v44;
    *(&v53 - 1) = (uint64_t)v46;
    uint64_t v47 = sub_1C4497528();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v50 = sub_1C41275E0((void (*)(char *, char *))sub_1C443EC6C, (uint64_t)(&v53 - 8), v47, v69, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v49);
    swift_bridgeObjectRelease();
    uint64_t v70 = v50;
    uint64_t v51 = type metadata accessor for CRSequence();
    uint64_t v52 = sub_1C4497528();
    swift_getWitnessTable();
    CRSequence.replaceSubrange<A>(_:with:)(v60, a2, (uint64_t)&v70, v51, v52);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4433D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRSet();
  char v9 = CRSet.insert(_:)(v7, a1, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a3);
  return v9 & 1;
}

uint64_t sub_1C4433E74@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Timestamp(0);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, a1, a3);
  v17[1] = *a2;
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  sub_1C4373544((uint64_t)v12);
  *(void *)&v12[*(int *)(type metadata accessor for Replica() + 20)] = 0;
  *(void *)&v12[*(int *)(v9 + 28)] = 0;
  return sub_1C3F8A474((uint64_t)v14, (uint64_t)v12, a3, a4);
}

Swift::Void __swiftcall CROrderedSet.removeAll()()
{
  uint64_t v2 = v0;
  type metadata accessor for CRSet();
  CRSet.removeAll(keepingCapacity:)(0);
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  CRSequence.removeAll()();
  uint64_t v3 = v1 + *(int *)(v2 + 48);
  uint64_t v4 = type metadata accessor for CROrderedSet.DeduplicatedInfo();
  uint64_t v5 = sub_1C4497B38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v6(v3, 1, 1, v4);
}

uint64_t CROrderedSet.removeAll(where:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v41 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v7;
  uint64_t v8 = type metadata accessor for CROrderedSetElement();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v48 = sub_1C4497B38();
  uint64_t v10 = *(void *)(v48 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v48);
  uint64_t v47 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = sub_1C44967E8();
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v38 = (uint64_t)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C44967D8();
  uint64_t v34 = a3;
  uint64_t v35 = v3;
  uint64_t v50 = sub_1C3F87134(a3);
  uint64_t v17 = sub_1C4497528();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C877FF50](&v51, v17, WitnessTable);
  swift_bridgeObjectRelease();
  uint64_t v50 = v51;
  sub_1C4497F98();
  sub_1C4497F68();
  uint64_t v19 = sub_1C4497F88();
  uint64_t v20 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v45 = TupleTypeMetadata2 - 8;
  uint64_t v46 = v19;
  uint64_t v21 = (void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v39 = v8 - 8;
  uint64_t v40 = v8;
  uint64_t v22 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v23 = v41;
  while (1)
  {
    uint64_t v24 = v47;
    sub_1C4497F78();
    (*v20)(v14, v24, v48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = v38;
      CROrderedSet.remove(atOffsets:)(v38, v34);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v31, v37);
    }
    uint64_t v25 = TupleTypeMetadata2;
    uint64_t v26 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v27 = v44;
    (*v21)(v23, v26, v44);
    (*(void (**)(char *))(*(void *)(v40 - 8) + 8))(v26);
    uint64_t v28 = v49;
    char v29 = v42(v23);
    uint64_t v49 = v28;
    if (v28) {
      break;
    }
    char v30 = v29;
    (*v22)(v23, v27);
    TupleTypeMetadata2 = v25;
    if (v30) {
      sub_1C4496748();
    }
  }
  (*v22)(v23, v27);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v38, v37);
}

uint64_t CROrderedSet.remove(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v6 = a2[2];
  uint64_t v7 = sub_1C4497B38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v9);
  char v30 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v3;
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  uint64_t v16 = type metadata accessor for CRSet();
  uint64_t v31 = a1;
  CRSet.remove(_:)(a1, v16, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v17 = 1;
    uint64_t v18 = v33;
  }
  else
  {
    uint64_t v19 = v30;
    char v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v29(v30, v11, v6);
    uint64_t v20 = v32;
    uint64_t v21 = sub_1C443280C((uint64_t)a2);
    uint64_t v34 = *v20;
    MEMORY[0x1F4188790](v21);
    *(&v28 - 4) = v6;
    *(&v28 - 3) = v14;
    uint64_t v22 = v31;
    *(&v28 - 2) = v15;
    *(&v28 - 1) = v22;
    type metadata accessor for CROrderedSetElement();
    uint64_t v23 = type metadata accessor for CRSequence();
    swift_retain();
    swift_getWitnessTable();
    Swift::Int v24 = sub_1C4373740((uint64_t (*)(char *))sub_1C443CCF0, (uint64_t)(&v28 - 6), v23);
    char v26 = v25;
    swift_release();
    if ((v26 & 1) == 0) {
      CRSequence.remove(at:)(v24);
    }
    uint64_t v18 = v33;
    v29(v33, v19, v6);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v18, v17, 1, v6);
}

Swift::Void __swiftcall CROrderedSet.move(from:to:)(Swift::Int from, Swift::Int to)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](from);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for Timestamp(0);
  uint64_t v11 = MEMORY[0x1F4188790](v37);
  uint64_t v35 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v34 = *(void *)(v5 + 32);
  uint64_t v15 = type metadata accessor for CROrderedSetElement();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v31 - v20;
  if (from < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v32 = v19;
  uint64_t v33 = v10;
  Swift::Int v22 = CROrderedSet.count.getter(v5);
  if (to < 0 || v22 <= from) {
    goto LABEL_14;
  }
  if (CROrderedSet.count.getter(v5) < to)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (from == to || to - 1 == from) {
    return;
  }
  Swift::Int v31 = to - 1;
  sub_1C443280C(v5);
  uint64_t v38 = *v4;
  type metadata accessor for CRSequence();
  CRSequence.subscript.getter();
  CRSequence.remove(at:)(from);
  uint64_t v38 = *v4;
  sub_1C4373544((uint64_t)v14);
  *(void *)&v14[*(int *)(type metadata accessor for Replica() + 20)] = 0;
  uint64_t v23 = *(int *)(v37 + 20);
  uint64_t v24 = *(void *)&v21[*(int *)(v15 + 36) + v23];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    return;
  }
  if (from >= (unint64_t)to) {
    Swift::Int v27 = to;
  }
  else {
    Swift::Int v27 = v31;
  }
  *(void *)&v14[v23] = v26;
  uint64_t v28 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v21, v8);
  uint64_t v29 = v35;
  sub_1C3F86C30((uint64_t)v14, v35, type metadata accessor for Timestamp);
  sub_1C3F8A474(v28, v29, v8, (uint64_t)v18);
  CRSequence.insert(_:at:)((uint64_t)v18, v27);
  char v30 = *(void (**)(char *, uint64_t))(v32 + 8);
  v30(v18, v15);
  sub_1C3F86DB8((uint64_t)v14, type metadata accessor for Timestamp);
  v30(v21, v15);
}

Swift::Void __swiftcall CROrderedSet.swapAt(_:_:)(Swift::Int a1, Swift::Int a2)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = v2;
  Swift::Int v6 = CROrderedSet.count.getter(v2);
  if (a2 < 0 || v6 <= a1) {
    goto LABEL_13;
  }
  if (CROrderedSet.count.getter(v3) <= a2)
  {
LABEL_14:
    __break(1u);
    return;
  }
  if (a2 >= (unint64_t)a1)
  {
    Swift::Int v7 = a1;
    if (a1 >= (unint64_t)a2) {
      return;
    }
  }
  else
  {
    Swift::Int v7 = a2;
    a2 = a1;
  }
  CROrderedSet.move(from:to:)(a2, v7 + 1);
  CROrderedSet.move(from:to:)(v7, a2 + 1);
}

BOOL CROrderedSet.contains(_:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRSet();
  return CRSet.contains(_:)(a1, v2);
}

uint64_t CROrderedSet.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CRSet();
  return CRSet.subscript.getter(a1, v4, a2);
}

uint64_t CROrderedSet.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v41 = a1;
  uint64_t v34 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = sub_1C4497B38();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v40 = (uint64_t)&v33 - v9;
  uint64_t v10 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v39 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *(void *)(a2 + 32);
  uint64_t v12 = type metadata accessor for CROrderedSetElement();
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = *(void *)(a2 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v33 - v20;
  Swift::Int v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v38 = v4;
  v22((char *)&v33 - v20, v4, a2);
  v22(v19, (uint64_t)v21, a2);
  if (v41 < 0)
  {
    uint64_t v32 = *(void (**)(char *, uint64_t))(v16 + 8);
    v32(v19, a2);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v21, a2);
    goto LABEL_6;
  }
  uint64_t v23 = v41;
  uint64_t v24 = CROrderedSet.count.getter(a2);
  BOOL v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v19, a2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v21, a2);
  if (v24 <= v23)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v27 = *(void *)(v38 + 8);
  swift_retain();
  sub_1C3F87134(a2);
  uint64_t v28 = v36;
  sub_1C4497568();
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v15, v6);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v28);
  uint64_t v42 = v27;
  uint64_t v30 = type metadata accessor for CRSet();
  uint64_t v31 = v40;
  CRSet.subscript.getter(v29, v30, v40);
  swift_release();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v31, 1, v6);
  if (result != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v29, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v34, v31, v6);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C443518C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = type metadata accessor for CROrderedSet();
  return CROrderedSet.subscript.getter(v3, v4, a2);
}

uint64_t sub_1C44351E4(uint64_t a1, uint64_t a2, Swift::Int *a3)
{
  Swift::Int v4 = *a3;
  uint64_t v5 = type metadata accessor for CROrderedSet();
  return sub_1C443CD2C(a1, v4, v5);
}

uint64_t CROrderedSet.subscript.setter(uint64_t a1, Swift::Int a2, uint64_t a3)
{
  sub_1C443CD2C(a1, a2, a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8);
  return v5(a1);
}

void (*CROrderedSet.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(Swift::Int **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  v7[2] = v3;
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v7[6] = v11;
  CROrderedSet.subscript.getter(a2, a3, (uint64_t)v11);
  return sub_1C4435384;
}

void sub_1C4435384(Swift::Int **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  Swift::Int v4 = (void *)(*a1)[6];
  Swift::Int v5 = (*a1)[3];
  Swift::Int v6 = (*a1)[4];
  uint64_t v7 = (*a1)[1];
  Swift::Int v8 = **a1;
  if (a2)
  {
    (*(void (**)(Swift::Int, void *, Swift::Int))(v6 + 16))((*a1)[5], v4, v5);
    sub_1C443CD2C((uint64_t)v3, v8, v7);
    uint64_t v9 = *(void (**)(void *, Swift::Int))(v6 + 8);
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    sub_1C443CD2C((*a1)[6], v8, v7);
    (*(void (**)(void *, Swift::Int))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t CROrderedSet.index(where:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v27 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v35 = sub_1C4497B38();
  uint64_t v8 = *(void *)(v35 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v26 - v11);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_1C4497F98();
  MEMORY[0x1F4188790](v14);
  MEMORY[0x1C877FF50](a3, WitnessTable);
  sub_1C4497F68();
  uint64_t v15 = sub_1C4497F88();
  uint64_t v32 = (void (**)(uint64_t *, char *, uint64_t))(v8 + 32);
  uint64_t v33 = v15;
  uint64_t v31 = TupleTypeMetadata2 - 8;
  uint64_t v26 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v16 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v17 = v28;
  while (1)
  {
    uint64_t v18 = v34;
    sub_1C4497F78();
    (*v32)(v12, v18, v35);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)break; {
    uint64_t v19 = *v12;
    }
    uint64_t v20 = TupleTypeMetadata2;
    uint64_t v21 = (char *)v12 + *(int *)(TupleTypeMetadata2 + 48);
    Swift::Int v22 = v27;
    (*v26)(v27, v21, v17);
    uint64_t v23 = v36;
    char v24 = v29(v22);
    (*v16)(v22, v17);
    uint64_t v36 = v23;
    if (!v23)
    {
      TupleTypeMetadata2 = v20;
      if ((v24 & 1) == 0) {
        continue;
      }
    }
    goto LABEL_7;
  }
  uint64_t v19 = 0;
LABEL_7:
  swift_release();
  swift_bridgeObjectRelease();
  return v19;
}

void CROrderedSet.actionUndoingDifference(from:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (CROrderedSet.hasDelta(from:)(v3, v10))
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    CRDT.merging(_:)((uint64_t)a1, a2, WitnessTable, (uint64_t)v9);
    CROrderedSet.actionUndoingDifference(from:)(a1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a2);
  }
  else
  {
    uint64_t v12 = v3[1];
    uint64_t v18 = a1[1];
    uint64_t v19 = v12;
    uint64_t v13 = (void *)type metadata accessor for CRSet();
    CRSet.actionUndoingDifference(from:)(&v18, v13, v20);
    uint64_t v14 = v20[0];
    uint64_t v15 = v20[1];
    uint64_t v16 = *v3;
    uint64_t v18 = *a1;
    uint64_t v19 = v16;
    type metadata accessor for CROrderedSetElement();
    type metadata accessor for CRSequence();
    CRSequence.actionUndoingDifference(from:)(&v18, v20);
    uint64_t v17 = v20[0];
    if (v14 | v20[0])
    {
      *a3 = v14;
      a3[1] = v15;
      a3[2] = v17;
    }
    else
    {
      *a3 = 1;
      a3[1] = 0;
      a3[2] = 0;
    }
  }
}

void CROrderedSet.apply(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  if (*(void *)a1 != 1)
  {
    uint64_t v4 = *(void **)(a1 + 8);
    v8[0] = *(id *)(a1 + 16);
    id v5 = v8[0];
    sub_1C3FE3ADC((uint64_t)v2);
    type metadata accessor for CROrderedSetElement();
    type metadata accessor for CRSequence();
    id v6 = v8[0];
    if (sub_1C4374290(v8))
    {
      v8[0] = v2;
      v8[1] = v4;
      uint64_t v7 = type metadata accessor for CRSet();
      CRSet.apply(_:)((uint64_t *)v8, v7);
      sub_1C3F85354(1, a2);
    }
    sub_1C4215594((uint64_t)v2, (uint64_t)v4, v5);
  }
}

uint64_t CROrderedSet.hasDelta(from:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v33 - v10);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = (void **)MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = *v2;
  uint64_t v41 = *v15;
  uint64_t v42 = v18;
  uint64_t v20 = *(void *)(a2 + 32);
  uint64_t v37 = *(void *)(v19 + 16);
  uint64_t v38 = v20;
  type metadata accessor for CROrderedSetElement();
  uint64_t v36 = type metadata accessor for CRSequence();
  BOOL v21 = sub_1C4373E7C(&v41);
  Swift::Int v22 = *(void (**)(char *, void *, uint64_t))(v6 + 16);
  v22(v17, v3, a2);
  uint64_t v39 = a1;
  v22(v14, a1, a2);
  if (v21)
  {
    uint64_t v34 = *((void *)v17 + 1);
    uint64_t v35 = v11;
    uint64_t v23 = *((void *)v14 + 1);
    char v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v17, a2);
    v24(v14, a2);
    BOOL v25 = v34 == v23;
    uint64_t v11 = v35;
    if (v25)
    {
      char v26 = 0;
      return v26 & 1;
    }
  }
  else
  {
    char v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v17, a2);
    v24(v14, a2);
  }
  uint64_t v27 = v3[1];
  uint64_t v28 = v39;
  uint64_t v41 = (void *)v39[1];
  uint64_t v42 = v27;
  type metadata accessor for CRSet();
  char v29 = CRSet.hasDelta(from:)(&v41);
  v22((char *)v11, v3, a2);
  uint64_t v30 = v40;
  v22(v40, v28, a2);
  if (v29)
  {
    v24(v30, a2);
    v24((char *)v11, a2);
    char v26 = 1;
  }
  else
  {
    uint64_t v31 = *v11;
    uint64_t v41 = *(void **)v30;
    uint64_t v42 = v31;
    char v26 = CRSequence.hasDelta(from:)((uint64_t *)&v41);
    v24(v30, a2);
    v24((char *)v11, a2);
  }
  return v26 & 1;
}

uint64_t CROrderedSet.delta(_:from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = v3[1];
  uint64_t v21 = a2[1];
  uint64_t v22 = v7;
  type metadata accessor for CRSet();
  swift_retain();
  swift_retain();
  CRSet.delta(_:from:)(a1, &v21, &v23);
  swift_release();
  swift_release();
  uint64_t v8 = v23;
  uint64_t v19 = v24;
  uint64_t v20 = *((void *)&v23 + 1);
  uint64_t v9 = v27;
  uint64_t v17 = v26;
  uint64_t v18 = v25;
  uint64_t v10 = *v3;
  uint64_t v21 = *a2;
  uint64_t v22 = v10;
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  swift_retain();
  swift_retain();
  CRSequence.delta(_:from:)(a1, &v21, &v23);
  swift_release();
  uint64_t result = swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = v8 | v23;
  if (v8 | (unint64_t)v23)
  {
    uint64_t v14 = v19;
    uint64_t v13 = v20;
    uint64_t v16 = v17;
    uint64_t v15 = v18;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v9 = 0;
    uint64_t v12 = 0;
    uint64_t v8 = 1;
  }
  *a3 = v8;
  a3[1] = v13;
  a3[2] = v14;
  a3[3] = v15;
  a3[4] = v16;
  a3[5] = v9;
  a3[6] = v12;
  return result;
}

uint64_t CROrderedSet.canMerge(delta:)(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 48);
  if (*(void *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v11 = v1[1];
    uint64_t v7 = v2;
    long long v5 = *(_OWORD *)(a1 + 24);
    long long v8 = *(_OWORD *)(a1 + 8);
    long long v9 = v5;
    uint64_t v10 = v4;
    type metadata accessor for CRSet();
    if ((CRSet.canMerge(delta:)(&v7) & 1) == 0) {
      return 0;
    }
  }
  if (v3
    && (uint64_t v7 = *v1,
        uint64_t v11 = v3,
        type metadata accessor for CROrderedSetElement(),
        type metadata accessor for CRSequence(),
        (CRSequence.canMerge(delta:)(&v11) & 1) == 0))
  {
    return 0;
  }
  else
  {
    return 1;
  }
}

uint64_t CROrderedSet.merge(delta:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v12 = *a1;
  uint64_t v13 = v4;
  uint64_t v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = v8;
  uint64_t v17 = v7;
  uint64_t v18 = v9;
  char v10 = CROrderedSet.canMerge(delta:)((uint64_t)&v12);
  if (v10)
  {
    if (v3)
    {
      uint64_t v12 = v3;
      uint64_t v13 = v4;
      uint64_t v14 = v5;
      uint64_t v15 = v6;
      uint64_t v16 = v8;
      uint64_t v17 = v7;
      type metadata accessor for CRSet();
      CRSet.merge(delta:)(&v12);
    }
    if (v9)
    {
      uint64_t v12 = v9;
      type metadata accessor for CROrderedSetElement();
      type metadata accessor for CRSequence();
      CRSequence.merge(delta:)(&v12);
    }
    sub_1C3F85354(0, a2);
  }
  return v10 & 1;
}

uint64_t CROrderedSet.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = *(a3 - 1);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((CROrderedSet.hasDelta(from:)(v4, v12) & 1) == 0) {
    return sub_1C4436AFC(v4, a2, a3, a4);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  CRDT.merging(_:)(a1, (uint64_t)a3, WitnessTable, (uint64_t)v11);
  sub_1C4436AFC(v11, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t *, void *))(v9 + 8))(v11, a3);
}

void CROrderedSet.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static CROrderedSet.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for CROrderedSet();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (void *)((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (void *)((char *)v23 - v13);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v24 = *(void **)(a2 + 8);
  uint64_t v25 = v15;
  v23[1] = a5;
  char v16 = static CRSet.== infix(_:_:)((uint64_t)&v25, &v24);
  uint64_t v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, a1, v8);
  v17(v12, a2, v8);
  if (v16)
  {
    uint64_t v18 = *v14;
    uint64_t v24 = (void *)*v12;
    uint64_t v25 = v18;
    type metadata accessor for CROrderedSetElement();
    swift_getWitnessTable();
    char v19 = sub_1C4378B7C(&v25, (uint64_t *)&v24);
    uint64_t v20 = *(void (**)(void **, uint64_t))(v9 + 8);
    v20((void **)v12, v8);
    v20((void **)v14, v8);
  }
  else
  {
    uint64_t v21 = *(void (**)(void **, uint64_t))(v9 + 8);
    v21((void **)v12, v8);
    v21((void **)v14, v8);
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1C44364F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static CROrderedSet.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

id CROrderedSet.filter(_:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v11 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(a4, v6);
  id result = sub_1C44365D8(a1, a2, a3);
  if (v5) {
    return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a4, a3);
  }
  return result;
}

id sub_1C44365D8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  sub_1C443280C(a3);
  uint64_t v8 = type metadata accessor for CRSet();
  swift_retain();
  CRSet.filter(_:)(a1, a2, v8, &v11);
  id result = (id)swift_release();
  if (!v5)
  {
    uint64_t v10 = swift_release();
    *(void *)(v3 + 8) = v11;
    MEMORY[0x1F4188790](v10);
    type metadata accessor for CROrderedSetElement();
    type metadata accessor for CRSequence();
    return sub_1C43781CC();
  }
  return result;
}

uint64_t CROrderedSet.ObservableDifference.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CROrderedSet.ObservableDifference.removed.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = sub_1C44967E8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CROrderedSet.ObservableDifference.moved.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CROrderedSet.ObservableDifference.added.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t v5 = sub_1C44967E8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CROrderedSet.ObservableDifference.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  v12((char *)&v19 - v10, v3, a2);
  v12(v9, (uint64_t *)v11, a2);
  if (a1 < 0)
  {
    uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    v18(v11, a2);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v9, a2);
  }
  else
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v14 = sub_1C4496F68();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v15(v11, a2);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v9, a2);
    if (v14 > a1)
    {
      uint64_t v17 = *v3;
      uint64_t v20 = a1;
      return MEMORY[0x1C877FC90](&v20, v17, MEMORY[0x1E4FBB550], AssociatedTypeWitness, MEMORY[0x1E4FBB560]);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4436A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  uint64_t v9 = (int *)type metadata accessor for CROrderedSet.ObservableDifference();
  uint64_t v10 = (char *)a5 + v9[11];
  uint64_t v11 = sub_1C44967E8();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t))v14)((void *)(v11 - 8), v10, a2, v11);
  *(void *)((char *)a5 + v9[12]) = a3;
  uint64_t v12 = (char *)a5 + v9[13];
  return v14(v12, a4, v11);
}

uint64_t sub_1C4436AFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  v360 = a1;
  v340 = a4;
  uint64_t v7 = a3[2];
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v351 = (uint64_t)v334 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v362 = (uint64_t)v334 - v11;
  uint64_t v12 = a3[3];
  uint64_t v353 = *(void *)(v12 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v344 = sub_1C4497B38();
  uint64_t v337 = *(void *)(v344 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v344);
  v343 = (char *)v334 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  v350 = (char *)v334 - v17;
  uint64_t v355 = AssociatedTypeWitness;
  uint64_t v336 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v16);
  v342 = (char *)v334 - v18;
  uint64_t v19 = a3[4];
  uint64_t v20 = type metadata accessor for CROrderedSetElement();
  uint64_t v21 = sub_1C4497B38();
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v363 = (uint64_t)v334 - v23;
  uint64_t v383 = *(void *)(v20 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v352 = (char *)v334 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v367 = (uint64_t)v334 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  *(void *)&long long v391 = (char *)v334 - v29;
  uint64_t v358 = v30;
  uint64_t v31 = MEMORY[0x1F4188790](v28);
  v389 = (char *)v334 - v32;
  uint64_t v341 = *(void *)(v7 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  v361 = (char *)v334 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  v373 = (char *)v334 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  v388 = (char *)v334 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  v386 = (char *)v334 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  *(void *)&long long v392 = (char *)v334 - v42;
  MEMORY[0x1F4188790](v41);
  v387 = (char *)v334 - v43;
  TupleTypeMetadata2 = (int *)swift_getTupleTypeMetadata2();
  v382 = (void (**)(void, void, void))sub_1C4497B38();
  uint64_t v371 = (uint64_t)*(v382 - 1);
  uint64_t v44 = MEMORY[0x1F4188790](v382);
  v349 = (char *)v334 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  v374 = (void *)((char *)v334 - v47);
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  v380 = (char *)v334 - v49;
  MEMORY[0x1F4188790](v48);
  uint64_t v51 = (void *)((char *)v334 - v50);
  uint64_t v396 = v7;
  uint64_t v52 = a3;
  uint64_t v354 = v12;
  uint64_t v393 = v19;
  uint64_t v390 = type metadata accessor for CROrderedSet.DeduplicatedInfo();
  *(void *)&long long v385 = sub_1C4497B38();
  uint64_t v384 = *(void *)(v385 - 8);
  uint64_t v53 = MEMORY[0x1F4188790](v385);
  v375 = (char *)v334 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v53);
  v381 = (char *)v334 - v55;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09D0);
  uint64_t v57 = MEMORY[0x1F4188790](v56 - 8);
  v376 = (char *)v334 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v57);
  v372 = (char *)v334 - v59;
  uint64_t v346 = sub_1C44967E8();
  uint64_t v345 = *(void *)(v346 - 8);
  uint64_t v60 = MEMORY[0x1F4188790](v346);
  v339 = (char *)v334 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  v338 = (char *)v334 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  v369 = (char *)v334 - v65;
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  v370 = (char *)v334 - v67;
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  v368 = (char *)v334 - v69;
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  v366 = (char *)v334 - v71;
  uint64_t v72 = *(a3 - 1);
  uint64_t v73 = MEMORY[0x1F4188790](v70);
  v379 = (char *)v334 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = MEMORY[0x1F4188790](v73);
  v377 = (char *)v334 - v76;
  uint64_t v77 = MEMORY[0x1F4188790](v75);
  uint64_t v79 = (void *)((char *)v334 - v78);
  MEMORY[0x1F4188790](v77);
  uint64_t v81 = (void *)((char *)v334 - v80);
  uint64_t v356 = a2;
  uint64_t v82 = *(void *)(a2 + 24);
  uint64_t v83 = *(void (**)(char *))(v72 + 16);
  v357 = v4;
  v83((char *)v334 - v80);
  v394 = v52;
  ((void (*)(uint64_t *, uint64_t *, void *))v83)(v79, v360, v52);
  uint64_t v395 = v20;
  if (v82)
  {
    size_t v84 = *(void (**)(void))(v72 + 8);
    v85 = v394;
    ((void (*)(uint64_t *, void *))v84)(v79, v394);
    ((void (*)(uint64_t *, void *))v84)(v81, v85);
    uint64_t v86 = v377;
    int64_t v87 = v357;
    ((void (*)(char *, uint64_t *, void *))v83)(v377, v357, v85);
    unint64_t v88 = v379;
    ((void (*)(char *, uint64_t *, void *))v83)(v379, v360, v85);
    uint64_t v89 = v390;
    uint64_t v90 = v86;
    uint64_t v91 = v84;
LABEL_8:
    v105 = v394;
    ((void (*)(char *, void *))v91)(v90, v394);
    ((void (*)(char *, void *))v91)(v88, v105);
    v102 = v381;
    goto LABEL_9;
  }
  uint64_t v92 = *v81;
  uint64_t v91 = *(void (**)(void))(v72 + 8);
  swift_retain();
  uint64_t v93 = v394;
  ((void (*)(uint64_t *, void *))v91)(v81, v394);
  uint64_t v406 = v92;
  uint64_t v94 = *v79;
  swift_retain();
  ((void (*)(uint64_t *, void *))v91)(v79, v93);
  uint64_t v403 = v94;
  type metadata accessor for CRSequence();
  BOOL v95 = sub_1C4373E7C(&v403);
  swift_release();
  swift_release();
  uint64_t v96 = v377;
  int64_t v87 = v357;
  ((void (*)(char *, uint64_t *, void *))v83)(v377, v357, v93);
  unint64_t v88 = v379;
  ((void (*)(char *, uint64_t *, void *))v83)(v379, v360, v93);
  uint64_t v90 = v96;
  if (!v95)
  {
    uint64_t v89 = v390;
    goto LABEL_8;
  }
  uint64_t v97 = *((void *)v96 + 1);
  uint64_t v98 = v87;
  uint64_t v99 = *((void *)v88 + 1);
  int v100 = v394;
  v91();
  ((void (*)(char *, void *))v91)(v88, v100);
  BOOL v101 = v97 == v99;
  int64_t v87 = v98;
  uint64_t v89 = v390;
  v102 = v381;
  if (v101)
  {
    uint64_t v103 = type metadata accessor for CROrderedSet.ObservableDifference();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v340, 1, 1, v103);
  }
LABEL_9:
  uint64_t v412 = *v87;
  v106 = (char *)v87 + *((int *)v394 + 12);
  uint64_t v107 = v384;
  uint64_t v108 = v385;
  v381 = *(char **)(v384 + 16);
  ((void (*)(char *, char *, void))v381)(v102, v106, v385);
  v109 = *(char **)(v89 - 8);
  v379 = (char *)*((void *)v109 + 6);
  int v110 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v102, 1, v89);
  v377 = v109;
  if (v110 == 1)
  {
    v111 = *(void (**)(char *, uint64_t))(v107 + 8);
    swift_retain();
    v111(v102, v108);
    v112 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v345 + 56);
    v113 = v372;
    v112(v372, 1, 1, v346);
    v114 = v375;
LABEL_13:
    sub_1C3F962E0((uint64_t)v113, (uint64_t *)&unk_1EBBC09D0);
    goto LABEL_15;
  }
  v115 = &v102[*(int *)(v89 + 44)];
  uint64_t v116 = v345;
  v117 = v102;
  v113 = v372;
  uint64_t v118 = v346;
  (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v372, v115, v346);
  v119 = (void (*)(char *, uint64_t))*((void *)v109 + 1);
  swift_retain();
  v120 = v117;
  uint64_t v89 = v390;
  v119(v120, v390);
  v112 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
  v112(v113, 0, 1, v118);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v113, 1, v118) == 1)
  {
    v114 = v375;
    uint64_t v108 = v385;
    uint64_t v107 = v384;
    goto LABEL_13;
  }
  v121 = v366;
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v366, v113, v118);
  type metadata accessor for CRSequence();
  sub_1C43778A0();
  uint64_t v89 = v390;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v121, v118);
  v114 = v375;
  uint64_t v108 = v385;
  uint64_t v107 = v384;
LABEL_15:
  uint64_t v411 = *v360;
  ((void (*)(char *, char *, uint64_t))v381)(v114, (char *)v360 + *((int *)v394 + 12), v108);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v379)(v114, 1, v89) == 1)
  {
    v122 = *(void (**)(char *, uint64_t))(v107 + 8);
    swift_retain();
    v122(v114, v108);
    uint64_t v123 = (uint64_t)v376;
    v112(v376, 1, 1, v346);
LABEL_18:
    sub_1C3F962E0(v123, (uint64_t *)&unk_1EBBC09D0);
    goto LABEL_20;
  }
  uint64_t v124 = v345;
  uint64_t v123 = (uint64_t)v376;
  uint64_t v125 = v346;
  (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v376, &v114[*(int *)(v89 + 44)], v346);
  v126 = (void (*)(char *, uint64_t))*((void *)v377 + 1);
  swift_retain();
  v126(v114, v89);
  v112((char *)v123, 0, 1, v125);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v123, 1, v125) == 1) {
    goto LABEL_18;
  }
  v127 = v368;
  (*(void (**)(char *, uint64_t, uint64_t))(v124 + 32))(v368, v123, v125);
  type metadata accessor for CRSequence();
  sub_1C43778A0();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v127, v125);
LABEL_20:
  uint64_t v128 = v393;
  v129 = v387;
  uint64_t v130 = v412;
  uint64_t v403 = v411;
  uint64_t v410 = v412;
  uint64_t v131 = type metadata accessor for CRSequence();
  swift_retain();
  swift_retain();
  uint64_t v390 = v131;
  CRSequence.observableDifference(from:with:)((uint64_t)&v410, &v406);
  swift_release();
  swift_release();
  uint64_t v365 = v406;
  if (!v406)
  {
    type metadata accessor for _NSRange(255);
    type metadata accessor for CRSequenceStorage();
    sub_1C4497B38();
    swift_getTupleTypeMetadata3();
    uint64_t v365 = sub_1C4497478();
  }
  uint64_t v132 = v371;
  uint64_t v410 = sub_1C4496EA8();
  uint64_t v133 = v128;
  uint64_t v409 = sub_1C4496EA8();
  uint64_t v406 = v130;
  uint64_t v134 = v390;
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C877FF50](&v403, v134, WitnessTable);
  uint64_t v405 = v403;
  v334[1] = sub_1C4497F98();
  sub_1C4497F68();
  uint64_t v335 = WitnessTable;
  uint64_t v136 = sub_1C4497F88();
  v381 = (char *)(v132 + 32);
  v137 = TupleTypeMetadata2;
  uint64_t v384 = v341 + 16;
  v394 = (void *)(v383 + 8);
  v368 = (char *)v136;
  uint64_t v138 = v396;
  while (1)
  {
    v139 = v380;
    sub_1C4497F78();
    v140 = *(char **)v381;
    (*(void (**)(uint64_t *, char *, void))v381)(v51, v139, v382);
    uint64_t v141 = *((void *)v137 - 1);
    v142 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v141 + 48);
    v143 = (char *)(v141 + 48);
    if (v142(v51, 1, v137) == 1) {
      break;
    }
    uint64_t v144 = *v51;
    v145 = (char *)v51 + v137[12];
    (*(void (**)(char *, char *, uint64_t))v384)(v129, v145, v138);
    ((void (*)(char *, uint64_t))*v394)(v145, v395);
    uint64_t v403 = v144;
    char v404 = 0;
    uint64_t v133 = v393;
    sub_1C4497008();
    sub_1C4497048();
  }
  v376 = v143;
  v377 = v140;
  swift_bridgeObjectRelease();
  sub_1C44967D8();
  sub_1C44967D8();
  type metadata accessor for _NSRange(255);
  type metadata accessor for CRSequenceStorage();
  sub_1C4497B38();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v147 = v365;
  if (MEMORY[0x1C8780110](v365, TupleTypeMetadata3) < 1)
  {
    swift_bridgeObjectRelease();
    v374 = (uint64_t *)MEMORY[0x1E4FBC860];
    uint64_t v232 = v133;
    v150 = (void (**)(char *, char *, uint64_t))v384;
    goto LABEL_164;
  }
  v375 = (char *)v142;
  uint64_t v405 = sub_1C4496EC8();
  uint64_t v402 = sub_1C4496EC8();
  uint64_t v148 = swift_bridgeObjectRetain();
  uint64_t v149 = MEMORY[0x1C8780160](v148, TupleTypeMetadata3);
  v150 = (void (**)(char *, char *, uint64_t))v384;
  uint64_t v364 = TupleTypeMetadata3;
  if (!v149)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    uint64_t v401 = sub_1C4496EA8();
    v366 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39ECE0);
    uint64_t v400 = sub_1C4496EA8();
    uint64_t v181 = MEMORY[0x1C8780160](v147, TupleTypeMetadata3);
    v182 = (char *)MEMORY[0x1E4FBC860];
    if (v181)
    {
      uint64_t v371 = 0;
      uint64_t v183 = 0;
      uint64_t v184 = 0;
      uint64_t v347 = v147 + 32;
      *(void *)&long long v391 = v341 + 8;
      while (1)
      {
        char v185 = sub_1C44974A8();
        uint64_t result = sub_1C4497438();
        if ((v185 & 1) == 0) {
          break;
        }
        if (__OFADD__(v184, 1)) {
          goto LABEL_209;
        }
        v186 = (uint64_t *)(v347 + 32 * v184);
        uint64_t v187 = *v186;
        *(void *)&long long v385 = v186[1];
        uint64_t v188 = v187 + v385;
        if (__OFADD__(v187, (void)v385)) {
          goto LABEL_210;
        }
        if (v188 < v187) {
          goto LABEL_211;
        }
        uint64_t v190 = v186[2];
        v189 = (char *)v186[3];
        *(void *)&long long v392 = v187;
        uint64_t v358 = v184 + 1;
        uint64_t v359 = v190;
        v379 = v189;
        if (v187 != v188)
        {
          if (v187 >= v188) {
            goto LABEL_218;
          }
          v219 = v189;
          uint64_t v220 = 0;
          while (1)
          {
            uint64_t v221 = v187 + v220 + v371;
            if (__OFADD__(v187 + v220, v371)) {
              break;
            }
            uint64_t v406 = v412;
            v222 = v389;
            CRSequence.subscript.getter();
            v223 = *v150;
            (*v150)(v386, v222, v396);
            v224 = v222;
            v225 = v386;
            ((void (*)(char *, uint64_t))*v394)(v224, v395);
            swift_bridgeObjectRetain();
            char v226 = sub_1C4497738();
            swift_bridgeObjectRelease();
            if (v226)
            {
              uint64_t v227 = v183 + v392;
              if (__OFADD__(v183, (void)v392)) {
                goto LABEL_198;
              }
              MEMORY[0x1C877FC90](&v406, v225, v401, v396, MEMORY[0x1E4FBB550], v393);
              if (v407)
              {
                uint64_t v228 = v396;
                v223(v387, v386, v396);
                uint64_t v406 = v221;
                uint64_t v407 = v227;
                char v408 = 0;
                sub_1C4497008();
                sub_1C4497048();
                uint64_t result = (*(uint64_t (**)(char *, uint64_t))v391)(v386, v228);
              }
              else
              {
                unint64_t v229 = v406;
                if (swift_isUniquelyReferenced_nonNull_native())
                {
                  if ((v229 & 0x8000000000000000) != 0) {
                    goto LABEL_200;
                  }
                }
                else
                {
                  v182 = (char *)sub_1C423282C(v182);
                  if ((v229 & 0x8000000000000000) != 0) {
                    goto LABEL_200;
                  }
                }
                if (v229 >= *((void *)v182 + 2)) {
                  goto LABEL_201;
                }
                v230 = &v182[32 * v229];
                *((void *)v230 + 4) = v221;
                *((void *)v230 + 5) = v227;
                uint64_t result = (*(uint64_t (**)(char *, uint64_t))v391)(v225, v396);
              }
              BOOL v179 = __OFADD__(v183++, 1);
              if (v179) {
                goto LABEL_199;
              }
            }
            else
            {
              sub_1C4496748();
              uint64_t result = (*(uint64_t (**)(char *, uint64_t))v391)(v225, v396);
            }
            uint64_t v187 = v392;
            if ((void)v385 == ++v220) {
              goto LABEL_60;
            }
          }
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
          goto LABEL_202;
        }
        uint64_t result = v189;
LABEL_60:
        v191 = v379;
        if (v379)
        {
          uint64_t v192 = v393;
          uint64_t v406 = sub_1C4379E5C();
          uint64_t v193 = sub_1C4497528();
          id v348 = v191;
          uint64_t v194 = swift_getWitnessTable();
          MEMORY[0x1C877FF50](&v403, v193, v194);
          v399 = (void *)v403;
          sub_1C4497F98();
          sub_1C4497F68();
          v379 = (char *)sub_1C4497F88();
          v195 = v374;
          while (1)
          {
            v197 = v380;
            sub_1C4497F78();
            ((void (*)(uint64_t *, char *, void))v377)(v195, v197, v382);
            v198 = TupleTypeMetadata2;
            if (((unsigned int (*)(uint64_t *, uint64_t, int *))v375)(v195, 1, TupleTypeMetadata2) == 1) {
              break;
            }
            uint64_t v199 = *v195;
            v200 = (char *)v195 + v198[12];
            v201 = *v150;
            (*v150)(v388, v200, v396);
            ((void (*)(char *, uint64_t))*v394)(v200, v395);
            swift_bridgeObjectRetain();
            uint64_t v202 = v192;
            char v203 = sub_1C4497738();
            swift_bridgeObjectRelease();
            if (v203)
            {
              uint64_t v204 = v392 + v183;
              if (__OFADD__((void)v392, v183)) {
                goto LABEL_190;
              }
              uint64_t v205 = v204 + v199;
              if (__OFADD__(v204, v199)) {
                goto LABEL_193;
              }
              v206 = v388;
              uint64_t v207 = v396;
              v201(v387, v388, v396);
              v372 = v182;
              uint64_t v403 = *((void *)v182 + 2);
              char v404 = 0;
              sub_1C4497008();
              sub_1C4497048();
              uint64_t v208 = (uint64_t)v373;
              v201(v373, v206, v207);
              uint64_t v209 = v400;
              uint64_t v210 = *(void *)(v400 + 16);
              *(void *)&long long v211 = -1;
              *((void *)&v211 + 1) = -1;
              long long v385 = v211;
              if (v210)
              {
                unint64_t v212 = sub_1C3F88430(v208, v207, v202);
                if (v213) {
                  long long v385 = *(_OWORD *)(*(void *)(v209 + 56) + 16 * v212);
                }
              }
              v214 = *(void (**)(char *, uint64_t))v391;
              (*(void (**)(char *, uint64_t))v391)(v373, v396);
              BOOL v179 = __OFADD__((void)v392, v199);
              uint64_t v215 = v392 + v199;
              v150 = (void (**)(char *, char *, uint64_t))v384;
              v182 = v372;
              if (v179) {
                goto LABEL_194;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                v182 = (char *)sub_1C3FF1BF8(0, *((void *)v182 + 2) + 1, 1, v182);
              }
              unint64_t v217 = *((void *)v182 + 2);
              unint64_t v216 = *((void *)v182 + 3);
              if (v217 >= v216 >> 1) {
                v182 = (char *)sub_1C3FF1BF8((void *)(v216 > 1), v217 + 1, 1, v182);
              }
              *((void *)v182 + 2) = v217 + 1;
              v196 = &v182[32 * v217];
              *((_OWORD *)v196 + 2) = v385;
              *((void *)v196 + 6) = v205;
              *((void *)v196 + 7) = v215;
              uint64_t v192 = v393;
              v214(v388, v396);
            }
            else
            {
              if (__OFADD__(v199, (void)v392)) {
                goto LABEL_191;
              }
              sub_1C4496748();
              v150 = (void (**)(char *, char *, uint64_t))v384;
              (*(void (**)(char *, uint64_t))v391)(v388, v396);
            }
            BOOL v179 = __OFSUB__(v183--, 1);
            v195 = v374;
            if (v179) {
              goto LABEL_186;
            }
          }
          id v218 = v348;

          uint64_t result = swift_bridgeObjectRelease();
        }
        BOOL v179 = __OFSUB__(v371, v359);
        v371 -= v359;
        if (v179) {
          goto LABEL_212;
        }
        uint64_t v231 = MEMORY[0x1C8780160](v365, v364);
        uint64_t v184 = v358;
        if (v358 == v231) {
          goto LABEL_101;
        }
      }
LABEL_208:
      uint64_t result = sub_1C4497DA8();
      __break(1u);
LABEL_209:
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
      goto LABEL_213;
    }
LABEL_101:
    uint64_t result = swift_bridgeObjectRelease();
    v398 = (void *)MEMORY[0x1E4FBC860];
    v399 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v233 = *((void *)v182 + 2);
    if (v233)
    {
      v234 = v182;
      unint64_t v235 = 0;
      v236 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v237 = *((void *)v182 + 2);
      v238 = (void *)MEMORY[0x1E4FBC860];
      *(void *)&long long v392 = v233;
      while (v235 < v237)
      {
        uint64_t v239 = (uint64_t)&v234[32 * v235 + 32];
        uint64_t v242 = *(void *)(v239 + 8);
        v241 = (uint64_t *)(v239 + 8);
        uint64_t v240 = v242;
        uint64_t v243 = v238[2];
        if (v243)
        {
          uint64_t v244 = 0;
          v245 = v238 + 4;
          uint64_t v246 = v238[2];
          while (1)
          {
            uint64_t v247 = *v245++;
            if (v240 >= v247)
            {
              BOOL v179 = __OFADD__(v244++, 1);
              if (v179) {
                goto LABEL_192;
              }
            }
            if (!--v246) {
              goto LABEL_112;
            }
          }
        }
        uint64_t v244 = 0;
LABEL_112:
        uint64_t v248 = v236[2];
        if (v248)
        {
          v249 = v236 + 4;
          uint64_t v250 = v236[2];
          do
          {
            uint64_t v251 = *v249++;
            if (v251 < v240)
            {
              BOOL v179 = __OFSUB__(v244--, 1);
              if (v179) {
                goto LABEL_195;
              }
            }
          }
          while (--v250);
        }
        uint64_t v252 = *(void *)&v234[32 * v235 + 48];
        uint64_t v253 = 0;
        if (v243)
        {
          v254 = v238 + 4;
          do
          {
            uint64_t v255 = *v254++;
            if (v252 >= v255)
            {
              BOOL v179 = __OFADD__(v253++, 1);
              if (v179) {
                goto LABEL_196;
              }
            }
          }
          while (--v243);
        }
        if (v248)
        {
          v256 = v236 + 4;
          do
          {
            uint64_t v257 = *v256++;
            if (v257 < v252)
            {
              BOOL v179 = __OFSUB__(v253--, 1);
              if (v179) {
                goto LABEL_197;
              }
            }
          }
          while (--v248);
        }
        swift_beginAccess();
        v238 = v399;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v238 = sub_1C3FF1BEC(0, v238[2] + 1, 1, v238);
        }
        unint64_t v259 = v238[2];
        unint64_t v258 = v238[3];
        if (v259 >= v258 >> 1) {
          v238 = sub_1C3FF1BEC((void *)(v258 > 1), v259 + 1, 1, v238);
        }
        v238[2] = v259 + 1;
        v238[v259 + 4] = v252;
        v399 = v238;
        uint64_t result = swift_endAccess();
        if (v235 >= *((void *)v234 + 2)) {
          goto LABEL_214;
        }
        uint64_t v260 = *v241;
        swift_beginAccess();
        v236 = v398;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v236 = sub_1C3FF1BEC(0, v236[2] + 1, 1, v236);
        }
        unint64_t v262 = v236[2];
        unint64_t v261 = v236[3];
        if (v262 >= v261 >> 1) {
          v236 = sub_1C3FF1BEC((void *)(v261 > 1), v262 + 1, 1, v236);
        }
        v236[2] = v262 + 1;
        v236[v262 + 4] = v260;
        v398 = v236;
        swift_endAccess();
        v263 = v234;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1C423282C(v234);
          v263 = (void *)result;
        }
        unint64_t v237 = v263[2];
        if (v235 >= v237) {
          goto LABEL_215;
        }
        uint64_t v264 = (uint64_t)&v263[4 * v235 + 4];
        uint64_t v265 = *(void *)(v264 + 8);
        uint64_t v266 = v265 + v244;
        if (__OFADD__(v265, v244)) {
          goto LABEL_216;
        }
        *(void *)(v264 + 8) = v266;
        uint64_t v268 = *(void *)(v264 + 16);
        v267 = (void *)(v264 + 16);
        uint64_t v269 = v268 + v253;
        if (__OFADD__(v268, v253)) {
          goto LABEL_217;
        }
        v234 = (char *)v263;
        ++v235;
        void *v267 = v269;
        v270 = v382;
        v271 = (uint64_t *)v349;
        if (v235 == (void)v392)
        {
          uint64_t result = swift_bridgeObjectRetain();
          v272 = v263 + 6;
          uint64_t v273 = MEMORY[0x1E4FBC860];
          do
          {
            long long v279 = *((_OWORD *)v272 - 1);
            uint64_t v280 = *(v272 - 1);
            uint64_t v281 = *v272;
            if (v280 != *v272)
            {
              BOOL v179 = __OFSUB__(v281, 1);
              uint64_t v282 = v281 - 1;
              if (v179) {
                goto LABEL_219;
              }
              if (v280 != v282)
              {
                long long v391 = *(_OWORD *)v272;
                long long v392 = v279;
                uint64_t result = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v406 = v273;
                if ((result & 1) == 0)
                {
                  uint64_t result = sub_1C4012808(0, *(void *)(v273 + 16) + 1, 1);
                  uint64_t v273 = v406;
                }
                long long v274 = v392;
                long long v275 = v391;
                unint64_t v277 = *(void *)(v273 + 16);
                unint64_t v276 = *(void *)(v273 + 24);
                if (v277 >= v276 >> 1)
                {
                  uint64_t result = sub_1C4012808(v276 > 1, v277 + 1, 1);
                  long long v275 = v391;
                  long long v274 = v392;
                  uint64_t v273 = v406;
                }
                *(void *)(v273 + 16) = v277 + 1;
                uint64_t v278 = v273 + 32 * v277;
                *(_OWORD *)(v278 + 32) = v274;
                *(_OWORD *)(v278 + 48) = v275;
              }
            }
            v272 += 4;
            --v237;
          }
          while (v237);
          v374 = (uint64_t *)v273;
          swift_bridgeObjectRelease();
          goto LABEL_160;
        }
      }
LABEL_213:
      __break(1u);
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      __break(1u);
LABEL_219:
      __break(1u);
LABEL_220:
      __break(1u);
LABEL_221:
      __break(1u);
LABEL_222:
      __break(1u);
      return result;
    }
    v374 = (uint64_t *)MEMORY[0x1E4FBC860];
    v270 = v382;
    v271 = (uint64_t *)v349;
LABEL_160:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v406 = v411;
    MEMORY[0x1C877FF50](&v403, v390, v335);
    uint64_t v397 = v403;
    sub_1C4497F68();
    v283 = v380;
    sub_1C4497F78();
    ((void (*)(uint64_t *, char *, void))v377)(v271, v283, v270);
    v284 = TupleTypeMetadata2;
    int v285 = ((uint64_t (*)(uint64_t *, uint64_t, int *))v375)(v271, 1, TupleTypeMetadata2);
    v286 = v387;
    uint64_t v287 = v393;
    if (v285 != 1)
    {
      *(void *)&long long v392 = *v150;
      do
      {
        uint64_t v288 = *v271;
        v289 = (char *)v271 + v284[12];
        ((void (*)(char *, char *, uint64_t))v392)(v286, v289, v396);
        ((void (*)(char *, uint64_t))*v394)(v289, v395);
        uint64_t v403 = v288;
        uint64_t v287 = v393;
        char v404 = 0;
        sub_1C4497008();
        sub_1C4497048();
        sub_1C4497F78();
        v284 = TupleTypeMetadata2;
        ((void (*)(uint64_t *, char *, void))v377)(v271, v283, v270);
      }
      while (((unsigned int (*)(uint64_t *, uint64_t, int *))v375)(v271, 1, v284) != 1);
    }
    uint64_t v232 = v287;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_164:
    v290 = v360;
    uint64_t v405 = sub_1C4496EA8();
    uint64_t v403 = v411;
    CRSequence.makeIterator()(&v406);
    uint64_t v291 = v395;
    uint64_t v292 = type metadata accessor for CRSequence.Iterator();
    uint64_t v293 = v363;
    CRSequence.Iterator.next()(v292, v363);
    uint64_t v294 = v293;
    v295 = (char *)(v383 + 48);
    *(void *)&long long v392 = *(void *)(v383 + 48);
    int v296 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v392)(v293, 1, v291);
    v297 = (void (**)(uint64_t, uint64_t))v394;
    if (v296 != 1)
    {
      *(void *)&long long v391 = *(void *)(v383 + 32);
      v383 += 32;
      v389 = (char *)(v341 + 48);
      v386 = (char *)(v341 + 8);
      *(void *)&long long v385 = v353 + 40;
      uint64_t v384 = v336 + 48;
      v382 = (void (**)(void, void, void))(v336 + 32);
      v381 = (char *)(v336 + 16);
      v380 = (char *)(v336 + 56);
      v379 = (char *)(v336 + 8);
      TupleTypeMetadata2 = (int *)(v337 + 8);
      v388 = (char *)v292;
      v387 = v295;
      do
      {
        uint64_t v308 = v367;
        ((void (*)(uint64_t, uint64_t, uint64_t))v391)(v367, v294, v291);
        MEMORY[0x1C877FC90](&v403, v308, v410, v396, MEMORY[0x1E4FBB550], v232);
        if (v404 == 1)
        {
          (*v297)(v308, v291);
        }
        else
        {
          uint64_t v309 = v403;
          uint64_t v310 = v290[1];
          uint64_t v403 = v412;
          swift_retain();
          v311 = v352;
          CRSequence.subscript.getter();
          uint64_t v312 = (uint64_t)v361;
          uint64_t v313 = v396;
          (*v150)(v361, v311, v396);
          v314 = *v297;
          v314((uint64_t)v311, v291);
          uint64_t v403 = v310;
          uint64_t v315 = type metadata accessor for CRSet();
          uint64_t v316 = v362;
          CRSet.subscript.getter(v312, v315, v362);
          swift_release();
          v317 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v389;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))v389)(v316, 1, v313);
          if (result == 1) {
            goto LABEL_221;
          }
          uint64_t v403 = v357[1];
          uint64_t v318 = v351;
          CRSet.subscript.getter(v367, v315, v351);
          uint64_t result = v317(v318, 1, v396);
          v319 = v350;
          if (result == 1) {
            goto LABEL_222;
          }
          v320 = *(void (**)(uint64_t, uint64_t))v386;
          uint64_t v321 = v396;
          (*(void (**)(char *, uint64_t))v386)(v361, v396);
          uint64_t v322 = v362;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v353 + 40))(v318, v356, v321);
          v320(v318, v321);
          v320(v322, v321);
          uint64_t v323 = v355;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v384)(v319, 1, v355) == 1)
          {
            v324 = (void (**)(uint64_t, uint64_t))v394;
            uint64_t v291 = v395;
            v314(v367, v395);
            v297 = v324;
            (*(void (**)(char *, uint64_t))TupleTypeMetadata2)(v319, v344);
            uint64_t v232 = v393;
          }
          else
          {
            v325 = v342;
            (*v382)(v342, v319, v323);
            uint64_t v326 = v367;
            uint64_t v327 = v393;
            MEMORY[0x1C877FC90](&v403, v367, v409, v396, MEMORY[0x1E4FBB550], v393);
            if (v404) {
              uint64_t v328 = v309;
            }
            else {
              uint64_t v328 = v403;
            }
            v329 = v343;
            (*(void (**)(char *, char *, uint64_t))v381)(v343, v325, v323);
            (*(void (**)(char *, void, uint64_t, uint64_t))v380)(v329, 0, 1, v323);
            uint64_t v403 = v328;
            uint64_t v232 = v327;
            sub_1C4497008();
            sub_1C4497048();
            (*(void (**)(char *, uint64_t))v379)(v325, v323);
            v330 = (void (**)(uint64_t, uint64_t))v394;
            uint64_t v291 = v395;
            v314(v326, v395);
            v297 = v330;
          }
          v290 = v360;
          uint64_t v292 = (uint64_t)v388;
        }
        uint64_t v307 = v363;
        CRSequence.Iterator.next()(v292, v363);
        uint64_t v294 = v307;
      }
      while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v392)(v307, 1, v291) != 1);
    }
    swift_bridgeObjectRelease();
    if (sub_1C44966F8() <= 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v298 = sub_1C4496F68();
      swift_bridgeObjectRelease();
      if (v298 <= 0 && !v374[2]) {
        goto LABEL_187;
      }
    }
    swift_release();
    swift_release();
    uint64_t v299 = v346;
    uint64_t v300 = v345;
    goto LABEL_169;
  }
  *(void *)&long long v385 = 0;
  v151 = 0;
  uint64_t v359 = v147 + 32;
  v152 = (void (**)(char *, uint64_t))(v341 + 8);
  v379 = (char *)(v383 + 16);
  while (1)
  {
    char v153 = sub_1C44974A8();
    sub_1C4497438();
    if ((v153 & 1) == 0)
    {
LABEL_202:
      sub_1C4497DA8();
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
      goto LABEL_208;
    }
    if (__OFADD__(v151, 1)) {
      goto LABEL_203;
    }
    v154 = (void *)(v359 + 32 * (void)v151);
    uint64_t v156 = *v154;
    uint64_t v155 = v154[1];
    uint64_t v157 = *v154 + v155;
    if (__OFADD__(*v154, v155)) {
      goto LABEL_204;
    }
    if (v157 < v156) {
      goto LABEL_205;
    }
    uint64_t v159 = v154[2];
    v158 = (char *)v154[3];
    v366 = v151 + 1;
    uint64_t v371 = v159;
    v372 = v158;
    if (v156 != v157) {
      break;
    }
    v160 = v158;
LABEL_38:
    v164 = v372;
    if (v372)
    {
      uint64_t v165 = sub_1C4379E5C();
      v372 = v164;
      uint64_t v166 = swift_bridgeObjectRetain();
      uint64_t v167 = v395;
      if (MEMORY[0x1C8780160](v166, v395))
      {
        uint64_t v168 = 0;
        do
        {
          char v169 = sub_1C44974A8();
          sub_1C4497438();
          if (v169)
          {
            (*(void (**)(void, unint64_t, uint64_t))(v383 + 16))(v391, v165+ ((*(unsigned __int8 *)(v383 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v383 + 80))+ *(void *)(v383 + 72) * v168, v167);
            uint64_t v170 = v168 + 1;
            if (__OFADD__(v168, 1)) {
              goto LABEL_185;
            }
          }
          else
          {
            uint64_t result = sub_1C4497DA8();
            if (v358 != 8) {
              goto LABEL_220;
            }
            uint64_t v406 = result;
            (*(void (**)(void, uint64_t *, uint64_t))v379)(v391, &v406, v167);
            swift_unknownObjectRelease();
            uint64_t v170 = v168 + 1;
            if (__OFADD__(v168, 1)) {
              goto LABEL_185;
            }
          }
          v171 = *v150;
          uint64_t v172 = v391;
          v173 = v150;
          uint64_t v174 = v396;
          v171((char *)v392, (char *)v391, v396);
          uint64_t v175 = v172;
          uint64_t v167 = v395;
          ((void (*)(uint64_t, uint64_t))*v394)(v175, v395);
          sub_1C4497748();
          v176 = v387;
          sub_1C44976F8();
          uint64_t v177 = v174;
          v150 = v173;
          (*v152)(v176, v177);
          ++v168;
        }
        while (v170 != MEMORY[0x1C8780160](v165, v167));
      }
      v178 = v372;

      swift_bridgeObjectRelease();
      v129 = v387;
    }
    BOOL v179 = __OFSUB__((void)v385, v371);
    *(void *)&long long v385 = v385 - v371;
    if (v179) {
      goto LABEL_206;
    }
    uint64_t v147 = v365;
    TupleTypeMetadata3 = v364;
    uint64_t v180 = MEMORY[0x1C8780160](v365, v364);
    v151 = v366;
    if (v366 == (char *)v180) {
      goto LABEL_52;
    }
  }
  if (v156 >= v157) {
    goto LABEL_207;
  }
  v161 = v158;
  while (!__OFADD__(v156, (void)v385))
  {
    ++v156;
    uint64_t v406 = v412;
    v162 = v389;
    CRSequence.subscript.getter();
    uint64_t v163 = v396;
    (*v150)((char *)v392, v162, v396);
    sub_1C4497748();
    sub_1C44976F8();
    (*v152)(v129, v163);
    ((void (*)(char *, uint64_t))*v394)(v162, v395);
    if (!--v155) {
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  uint64_t v331 = sub_1C44966F8();
  swift_release();
  swift_release();
  uint64_t v299 = v346;
  uint64_t v300 = v345;
  if (v331 >= 1)
  {
LABEL_169:
    uint64_t v301 = v405;
    v302 = *(void (**)(char *, char *, uint64_t))(v300 + 32);
    uint64_t v303 = (uint64_t)v338;
    v302(v338, v369, v299);
    uint64_t v304 = (uint64_t)v339;
    v302(v339, v370, v299);
    v305 = v340;
    sub_1C4436A10(v301, v303, (uint64_t)v374, v304, v340);
    uint64_t v306 = type metadata accessor for CROrderedSet.ObservableDifference();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v306 - 8) + 56))(v305, 0, 1, v306);
    goto LABEL_170;
  }
  swift_bridgeObjectRelease();
  v332 = *(void (**)(char *, uint64_t))(v300 + 8);
  v332(v369, v299);
  v332(v370, v299);
  uint64_t v333 = type metadata accessor for CROrderedSet.ObservableDifference();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v333 - 8) + 56))(v340, 1, 1, v333);
  swift_bridgeObjectRelease();
LABEL_170:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t CROrderedSet.MergeableDelta.merge(delta:)()
{
  return sub_1C3FBC9F8();
}

uint64_t CROrderedSet.MergeableDelta.canMerge(delta:)()
{
  return 0;
}

uint64_t CROrderedSet.MergeableDelta.visitReferences(_:)(uint64_t result)
{
  uint64_t v2 = result;
  uint64_t v3 = v1[6];
  if (*v1)
  {
    uint64_t v4 = type metadata accessor for CRSet.Partial();
    uint64_t result = CRSet.Partial.visitReferences(_:)(v2, v4);
  }
  if (v3)
  {
    type metadata accessor for CROrderedSetElement();
    uint64_t v5 = type metadata accessor for CRSequence.MergeableDelta();
    return CRSequence.MergeableDelta.visitReferences(_:)(v2, v5);
  }
  return result;
}

void CROrderedSet.MergeableDelta.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v155 = a4;
  uint64_t v156 = a3;
  uint64_t v157 = a2;
  uint64_t v134 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC06E8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  v137 = (char *)v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v142 = (char *)v130 - v9;
  uint64_t v146 = type metadata accessor for Proto_Sequence(0);
  uint64_t v149 = *(void *)(v146 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v146);
  uint64_t v136 = (char *)v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v144 = (char *)v130 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0748);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v158 = (uint64_t)v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Proto_Set(0);
  uint64_t v151 = *(void *)(v15 - 8);
  uint64_t v152 = v15;
  MEMORY[0x1F4188790](v15);
  char v153 = (char *)v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v138 = (uint64_t)v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v143 = (uint64_t)v130 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v140 = (uint64_t)v130 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v130 - v24;
  uint64_t v154 = type metadata accessor for Proto_OrderedSet(0);
  uint64_t v26 = MEMORY[0x1F4188790](v154);
  uint64_t v135 = (uint64_t)v130 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v145 = (uint64_t)v130 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v148 = (uint64_t *)((char *)v130 - v31);
  MEMORY[0x1F4188790](v30);
  uint64_t v159 = (char *)v130 - v32;
  uint64_t v33 = type metadata accessor for Proto_CRDT(0);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v139 = (uint64_t)v130 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v141 = (uint64_t)v130 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v147 = (char *)v130 - v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v42 = (char *)v130 - v41;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v43 - 8);
  uint64_t v45 = (char *)v130 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a1;
  uint64_t v47 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v47, (uint64_t)v45, &qword_1EBBC04F8);
  LODWORD(v47) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v45, 1, v33);
  sub_1C3F962E0((uint64_t)v45, &qword_1EBBC04F8);
  if (v47 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v48 = 0xD000000000000014;
    *(void *)(v48 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v48 + 16) = 0;
    swift_willThrow();
LABEL_18:
    swift_release();
    return;
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v46;
  *(void *)(inited + 24) = 0;
  *(unsigned char *)(inited + 32) = 1;
  swift_retain();
  sub_1C3FBA924((uint64_t)v42);
  uint64_t v50 = *(void *)&v42[*(int *)(v33 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v50, (uint64_t)v25, &qword_1EBBC0648);
  uint64_t v51 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  v130[1] = v52 + 48;
  uint64_t v131 = v53;
  unsigned int v54 = v53((uint64_t)v25, 1, v51);
  uint64_t v55 = v46;
  uint64_t v132 = v51;
  uint64_t v133 = v33;
  if (v54 == 1)
  {
    uint64_t v56 = v46;
    sub_1C3F962E0((uint64_t)v25, &qword_1EBBC0648);
    uint64_t v57 = v154;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v57 = v154;
    if (EnumCaseMultiPayload == 8)
    {
      uint64_t v59 = v159;
      sub_1C3F896D0((uint64_t)v25, (uint64_t)v159, type metadata accessor for Proto_OrderedSet);
      uint64_t v60 = (uint64_t)v153;
      goto LABEL_11;
    }
    uint64_t v56 = v55;
    sub_1C3F86DB8((uint64_t)v25, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  uint64_t v59 = v159;
  sub_1C4496888();
  uint64_t v61 = v57;
  uint64_t v62 = *(int *)(v57 + 20);
  uint64_t v60 = (uint64_t)v153;
  if (qword_1EBBBC060 != -1) {
    swift_once();
  }
  *(void *)&v59[v62] = qword_1EBBBC058;
  swift_retain();
  uint64_t v57 = v61;
  uint64_t v55 = v56;
LABEL_11:
  sub_1C3F86DB8((uint64_t)v42, type metadata accessor for Proto_CRDT);
  uint64_t v63 = *(void *)&v59[*(int *)(v57 + 20)]
      + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  uint64_t v64 = v63;
  uint64_t v65 = v158;
  sub_1C3F970C4(v64, v158, (uint64_t *)&unk_1EBBC0748);
  uint64_t v66 = v152;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v65, 1, v152) == 1)
  {
    sub_1C4496888();
    uint64_t v67 = *(int *)(v66 + 20);
    uint64_t v68 = v155;
    uint64_t v69 = v150;
    if (qword_1EBBC01E8 != -1) {
      swift_once();
    }
    *(void *)(v60 + v67) = qword_1EBBC01E0;
    swift_retain();
    sub_1C3F962E0(v158, (uint64_t *)&unk_1EBBC0748);
  }
  else
  {
    sub_1C3F896D0(v65, v60, type metadata accessor for Proto_Set);
    uint64_t v68 = v155;
    uint64_t v69 = v150;
  }
  sub_1C3F86DB8((uint64_t)v159, type metadata accessor for Proto_OrderedSet);
  swift_retain();
  sub_1C438C630(v60, v55, v157, v156, v68, &v161);
  if (v69)
  {
    swift_release();
    swift_setDeallocating();
    goto LABEL_18;
  }
  uint64_t v70 = *((void *)&v161 + 1);
  uint64_t v71 = v162;
  uint64_t v72 = v163;
  uint64_t v73 = v164;
  uint64_t v74 = v165;
  v130[0] = v161;
  swift_bridgeObjectRetain();
  uint64_t v150 = v70;
  swift_bridgeObjectRetain();
  uint64_t v151 = v71;
  swift_bridgeObjectRetain();
  uint64_t v152 = v72;
  swift_bridgeObjectRetain();
  char v153 = v73;
  swift_bridgeObjectRetain();
  uint64_t v158 = v74;
  swift_bridgeObjectRetain();
  uint64_t v75 = v147;
  uint64_t v159 = (char *)inited;
  sub_1C3FBA924((uint64_t)v147);
  uint64_t v76 = *(void *)&v75[*(int *)(v133 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v77 = v140;
  sub_1C3F970C4(v76, v140, &qword_1EBBC0648);
  if (v131(v77, 1, v132) == 1)
  {
    sub_1C3F962E0(v77, &qword_1EBBC0648);
    uint64_t v78 = v146;
    uint64_t v79 = (uint64_t)v144;
    uint64_t v80 = (uint64_t)v142;
    uint64_t v81 = (uint64_t)v148;
  }
  else
  {
    BOOL v82 = swift_getEnumCaseMultiPayload() == 8;
    uint64_t v83 = v77;
    uint64_t v78 = v146;
    uint64_t v79 = (uint64_t)v144;
    uint64_t v80 = (uint64_t)v142;
    uint64_t v81 = (uint64_t)v148;
    if (v82)
    {
      sub_1C3F896D0(v83, (uint64_t)v148, type metadata accessor for Proto_OrderedSet);
      goto LABEL_27;
    }
    sub_1C3F86DB8(v83, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v84 = *(int *)(v57 + 20);
  if (qword_1EBBBC060 != -1) {
    swift_once();
  }
  *(void *)(v81 + v84) = qword_1EBBBC058;
  swift_retain();
LABEL_27:
  sub_1C3F86DB8((uint64_t)v147, type metadata accessor for Proto_CRDT);
  uint64_t v85 = *(void *)(v81 + *(int *)(v57 + 20))
      + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  sub_1C3F970C4(v85, v80, &qword_1EBBC06E8);
  uint64_t v86 = *(uint64_t **)(v149 + 48);
  v149 += 48;
  uint64_t v147 = (char *)v86;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86)(v80, 1, v78) == 1)
  {
    sub_1C4496888();
    uint64_t v87 = *(int *)(v78 + 20);
    if (qword_1EBBBC000 != -1) {
      swift_once();
    }
    uint64_t v88 = v55;
    *(void *)(v79 + v87) = qword_1EBBBBFF0;
    swift_retain();
    sub_1C3F962E0(v80, &qword_1EBBC06E8);
  }
  else
  {
    uint64_t v88 = v55;
    sub_1C3F896D0(v80, v79, type metadata accessor for Proto_Sequence);
  }
  sub_1C3F86DB8((uint64_t)v148, type metadata accessor for Proto_OrderedSet);
  uint64_t v89 = *(void *)(v79 + *(int *)(v78 + 20));
  swift_beginAccess();
  uint64_t v90 = *(void *)(v89 + 32);
  swift_bridgeObjectRetain();
  sub_1C3F86DB8(v79, type metadata accessor for Proto_Sequence);
  uint64_t v91 = v141;
  sub_1C3FBA924(v141);
  uint64_t v92 = *(void *)(v91 + *(int *)(v133 + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v93 = v92;
  uint64_t v94 = v143;
  sub_1C3F970C4(v93, v143, &qword_1EBBC0648);
  unsigned int v95 = v131(v94, 1, v132);
  uint64_t v96 = v155;
  if (v95 == 1)
  {
    sub_1C3F962E0(v94, &qword_1EBBC0648);
    uint64_t v97 = v145;
  }
  else
  {
    int v98 = swift_getEnumCaseMultiPayload();
    uint64_t v97 = v145;
    if (v98 == 8)
    {
      sub_1C3F896D0(v94, v145, type metadata accessor for Proto_OrderedSet);
      goto LABEL_40;
    }
    sub_1C3F86DB8(v94, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v99 = *(int *)(v57 + 20);
  if (qword_1EBBBC060 != -1) {
    swift_once();
  }
  *(void *)(v97 + v99) = qword_1EBBBC058;
  swift_retain();
LABEL_40:
  sub_1C3F86DB8(v91, type metadata accessor for Proto_CRDT);
  int v100 = (uint64_t *)(*(void *)(v97 + *(int *)(v57 + 20))
                   + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
  swift_beginAccess();
  uint64_t v101 = *v100;
  swift_bridgeObjectRetain();
  uint64_t v102 = sub_1C3F86DB8(v97, type metadata accessor for Proto_OrderedSet);
  uint64_t v148 = v130;
  v160[3] = v90;
  v160[4] = v101;
  MEMORY[0x1F4188790](v102);
  uint64_t v103 = v156;
  v130[-4] = v157;
  v130[-3] = v103;
  v130[-2] = v96;
  v130[-1] = v88;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A0D78);
  v105 = (char *)type metadata accessor for CROrderedSetElement();
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
  unint64_t v107 = sub_1C443D05C();
  uint64_t v108 = sub_1C3F7182C((void (*)(char *, char *))sub_1C443D038, (uint64_t)&v130[-6], v104, v105, v106, v107, MEMORY[0x1E4FBC0F0], (uint64_t)v160);
  uint64_t v109 = v88;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v110 = v139;
  sub_1C3FBA924(v139);
  uint64_t v111 = *(void *)(v110 + *(int *)(v133 + 20))
       + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v112 = v111;
  uint64_t v113 = v138;
  sub_1C3F970C4(v112, v138, &qword_1EBBC0648);
  if (v131(v113, 1, v132) == 1)
  {
    sub_1C3F962E0(v113, &qword_1EBBC0648);
    uint64_t v115 = (uint64_t)v136;
    uint64_t v114 = (uint64_t)v137;
    uint64_t v116 = v135;
LABEL_45:
    sub_1C4496888();
    uint64_t v118 = *(int *)(v154 + 20);
    if (qword_1EBBBC060 != -1) {
      swift_once();
    }
    *(void *)(v116 + v118) = qword_1EBBBC058;
    swift_retain();
    goto LABEL_48;
  }
  int v117 = swift_getEnumCaseMultiPayload();
  uint64_t v115 = (uint64_t)v136;
  uint64_t v114 = (uint64_t)v137;
  uint64_t v116 = v135;
  if (v117 != 8)
  {
    sub_1C3F86DB8(v113, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_45;
  }
  sub_1C3F896D0(v113, v135, type metadata accessor for Proto_OrderedSet);
LABEL_48:
  sub_1C3F86DB8(v139, type metadata accessor for Proto_CRDT);
  uint64_t v119 = *(void *)(v116 + *(int *)(v154 + 20))
       + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  sub_1C3F970C4(v119, v114, &qword_1EBBC06E8);
  uint64_t v120 = v146;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v147)(v114, 1, v146) == 1)
  {
    sub_1C4496888();
    uint64_t v121 = *(int *)(v120 + 20);
    if (qword_1EBBBC000 != -1) {
      swift_once();
    }
    *(void *)(v115 + v121) = qword_1EBBBBFF0;
    swift_retain();
    sub_1C3F962E0(v114, &qword_1EBBC06E8);
  }
  else
  {
    sub_1C3F896D0(v114, v115, type metadata accessor for Proto_Sequence);
  }
  sub_1C3F86DB8(v116, type metadata accessor for Proto_OrderedSet);
  sub_1C43792F8(v115, v109, v108, (uint64_t)v105, (uint64_t)&off_1F1F9B310, &v166);
  uint64_t v122 = v152;
  swift_setDeallocating();
  swift_release();
  uint64_t v123 = v166;
  uint64_t v124 = v130[0];
  uint64_t v126 = v150;
  uint64_t v125 = v151;
  v127 = v153;
  uint64_t v128 = v158;
  sub_1C443D138(v130[0]);
  uint64_t v159 = v123;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v129 = v134;
  *uint64_t v134 = v124;
  v129[1] = v126;
  v129[2] = v125;
  v129[3] = v122;
  v129[4] = (uint64_t)v127;
  v129[5] = v128;
  v129[6] = (uint64_t)v123;
  sub_1C443D0B8(v124);
}

uint64_t sub_1C443ACF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v49 = a6;
  uint64_t v41 = a7;
  uint64_t v42 = a5;
  uint64_t v11 = type metadata accessor for Timestamp(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v40 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v47 = (uint64_t)&v40 - v15;
  uint64_t v45 = *(void *)(a3 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v44 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A0E88);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v48 = (uint64_t)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v40 - v24;
  uint64_t v26 = *(int *)(v23 + 48);
  uint64_t v27 = (char *)&v40 + v26 - v24;
  uint64_t v28 = a1 + v26;
  uint64_t v46 = a1;
  sub_1C3F86C30(a1, (uint64_t)&v40 - v24, type metadata accessor for Proto_Value);
  uint64_t v43 = v28;
  sub_1C3F86C30(v28, (uint64_t)v27, type metadata accessor for Proto_Timestamp);
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3F974B0((uint64_t)v25, a2);
  swift_release();
  sub_1C3F86DB8((uint64_t)v27, type metadata accessor for Proto_Timestamp);
  uint64_t v29 = *(void *)(*(void *)(a4 + 8) + 8);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 8);
  uint64_t v31 = swift_retain();
  uint64_t v32 = v50;
  v30(v31, a3, v29);
  if (v32)
  {
    uint64_t result = swift_release();
    void *v49 = v32;
  }
  else
  {
    uint64_t v34 = v19;
    uint64_t v36 = (uint64_t)v44;
    uint64_t v35 = v45;
    uint64_t v37 = (unint64_t *)(v48 + *(int *)(v20 + 48));
    sub_1C3F86C30(v46, v48, type metadata accessor for Proto_Value);
    sub_1C3F86C30(v43, (uint64_t)v37, type metadata accessor for Proto_Timestamp);
    swift_retain();
    uint64_t v38 = v47;
    sub_1C3F8A234(v37, a2, v47);
    swift_release();
    sub_1C3F86DB8(v48, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v36, v34, a3);
    uint64_t v39 = v40;
    sub_1C3F896D0(v38, v40, type metadata accessor for Timestamp);
    return sub_1C3F8A474(v36, v39, a3, v41);
  }
  return result;
}

void CROrderedSet.MergeableDelta.encode(to:)(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v122 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0748);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v99 = (uint64_t)&v85 - v10;
  uint64_t v98 = type metadata accessor for Proto_Set(0);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v114 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC06E8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v100 = (uint64_t)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v112 = (uint64_t)&v85 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v111 = (uint64_t)&v85 - v17;
  uint64_t v18 = type metadata accessor for Proto_Sequence(0);
  uint64_t v109 = *(void *)(v18 - 8);
  uint64_t v110 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v103 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v85 - v21;
  uint64_t v23 = type metadata accessor for Proto_OrderedSet(0);
  uint64_t v24 = v23 - 8;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v96 = (uint64_t)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v85 - v27;
  uint64_t v113 = *v2;
  uint64_t v108 = v2[1];
  unint64_t v107 = v2[2];
  uint64_t v106 = v2[3];
  v105 = v2[4];
  uint64_t v29 = v2[6];
  uint64_t v104 = v2[5];
  sub_1C4496888();
  uint64_t v30 = *(int *)(v24 + 28);
  if (qword_1EBBBC060 != -1) {
    swift_once();
  }
  *(void *)&v28[v30] = qword_1EBBBC058;
  if (!v29)
  {
    swift_retain();
    goto LABEL_7;
  }
  uint64_t v101 = v28;
  uint64_t v95 = v30;
  uint64_t v94 = v9;
  uint64_t v116 = (uint64_t)v29;
  uint64_t v31 = v122[2];
  uint64_t v32 = a1;
  uint64_t v33 = v122[4];
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence.MergeableDelta();
  swift_retain();
  id v34 = v29;
  sub_1C43796F0((uint64_t)v22);
  uint64_t v102 = v3;
  if (v3)
  {
    sub_1C3F86DB8((uint64_t)v101, type metadata accessor for Proto_OrderedSet);

    return;
  }
  uint64_t v90 = v31;
  uint64_t v91 = v33;
  id v93 = v34;
  uint64_t v92 = v32;
  uint64_t v30 = v95;
  uint64_t v28 = v101;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_OrderedSet._StorageClass(0);
    swift_allocObject();
    uint64_t v42 = swift_retain();
    *(void *)&v28[v30] = sub_1C3F7BD98(v42);
    swift_release();
  }
  uint64_t v43 = *(void *)&v28[v30];
  uint64_t v44 = v111;
  sub_1C3F896D0((uint64_t)v22, v111, type metadata accessor for Proto_Sequence);
  uint64_t v45 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56);
  uint64_t v87 = v109 + 56;
  uint64_t v86 = v45;
  v45(v44, 0, 1, v110);
  uint64_t v46 = v44;
  uint64_t v47 = v112;
  sub_1C3F961BC(v46, v112, &qword_1EBBC06E8);
  uint64_t v48 = v43 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v47, v48, &qword_1EBBC06E8);
  swift_endAccess();
  swift_release();
  id v49 = objc_msgSend(v93, sel_attributedString);
  type metadata accessor for CRSequenceStorage();
  swift_dynamicCastClassUnconditional();
  uint64_t v50 = sub_1C4379E5C();
  swift_bridgeObjectRetain();
  uint64_t v51 = swift_unknownObjectRelease();
  uint64_t v116 = v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = v122[3];
  *(&v85 - 4) = v90;
  *(&v85 - 3) = v52;
  uint64_t v88 = v52;
  uint64_t v53 = v92;
  *(&v85 - 2) = v91;
  *(&v85 - 1) = v53;
  uint64_t v54 = sub_1C4497528();
  uint64_t v55 = type metadata accessor for Proto_Timestamp(0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v56 = v102;
  uint64_t v58 = sub_1C41275E0((void (*)(char *, char *))sub_1C443D1B8, (uint64_t)(&v85 - 6), v54, v55, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v57);
  uint64_t v102 = v56;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_OrderedSet._StorageClass(0);
    swift_allocObject();
    uint64_t v59 = swift_retain();
    *(void *)&v28[v30] = sub_1C3F7BD98(v59);
    swift_release();
  }
  uint64_t v60 = (uint64_t *)(*(void *)&v28[v30]
                  + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
  swift_beginAccess();
  *uint64_t v60 = v58;
  uint64_t v61 = swift_bridgeObjectRelease();
  uint64_t v116 = v50;
  MEMORY[0x1F4188790](v61);
  uint64_t v62 = v88;
  *(&v85 - 4) = v90;
  *(&v85 - 3) = v62;
  a1 = v92;
  *(&v85 - 2) = v91;
  *(&v85 - 1) = a1;
  uint64_t v63 = type metadata accessor for Proto_Value(0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
  uint64_t v65 = v102;
  uint64_t v66 = sub_1C41275E0((void (*)(char *, char *))sub_1C412B6AC, (uint64_t)(&v85 - 6), v54, v63, v64, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v115);
  if (!v65)
  {
    uint64_t v67 = v66;
    uint64_t v4 = 0;
    swift_bridgeObjectRelease();
    uint64_t v68 = *(void *)&v28[v30]
        + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
    swift_beginAccess();
    uint64_t v69 = v68;
    uint64_t v70 = v100;
    sub_1C3F970C4(v69, v100, &qword_1EBBC06E8);
    uint64_t v71 = v110;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v70, 1, v110) == 1)
    {
      uint64_t v72 = v103;
      sub_1C4496888();
      uint64_t v73 = *(int *)(v71 + 20);
      uint64_t v9 = v94;
      if (qword_1EBBBC000 != -1) {
        swift_once();
      }
      *(void *)(v72 + v73) = qword_1EBBBBFF0;
      swift_retain();
      sub_1C3F962E0(v100, &qword_1EBBC06E8);
      uint64_t v74 = v72;
    }
    else
    {
      uint64_t v75 = v70;
      uint64_t v74 = v103;
      sub_1C3F896D0(v75, v103, type metadata accessor for Proto_Sequence);
      uint64_t v9 = v94;
    }
    uint64_t v76 = *(int *)(v71 + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Sequence._StorageClass(0);
      swift_allocObject();
      uint64_t v77 = (void *)swift_retain();
      uint64_t v78 = sub_1C3F7C6CC(v77);
      uint64_t v74 = v103;
      *(void *)(v103 + v76) = v78;
      swift_release();
    }
    uint64_t v79 = *(void *)(v74 + v76);
    swift_beginAccess();
    *(void *)(v79 + 32) = v67;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_OrderedSet._StorageClass(0);
      swift_allocObject();
      uint64_t v80 = swift_retain();
      *(void *)&v28[v30] = sub_1C3F7BD98(v80);
      swift_release();
    }
    uint64_t v81 = *(void *)&v28[v30];
    uint64_t v82 = v111;
    sub_1C3F896D0(v103, v111, type metadata accessor for Proto_Sequence);
    v86(v82, 0, 1, v71);
    uint64_t v83 = v112;
    sub_1C3F961BC(v82, v112, &qword_1EBBC06E8);
    uint64_t v84 = v81
        + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v83, v84, &qword_1EBBC06E8);
    swift_endAccess();

    swift_release();
LABEL_7:
    uint64_t v35 = (uint64_t)v114;
    if (v113)
    {
      uint64_t v116 = (uint64_t)v113;
      int v117 = v108;
      uint64_t v118 = v107;
      uint64_t v119 = v106;
      uint64_t v120 = v105;
      uint64_t v121 = v104;
      type metadata accessor for CRSet.Partial();
      sub_1C438CBA4(a1, v35);
      if (v4)
      {
LABEL_14:
        sub_1C3F86DB8((uint64_t)v28, type metadata accessor for Proto_OrderedSet);
        return;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_OrderedSet._StorageClass(0);
        swift_allocObject();
        uint64_t v36 = swift_retain();
        *(void *)&v28[v30] = sub_1C3F7BD98(v36);
        swift_release();
      }
      uint64_t v37 = *(void *)&v28[v30];
      uint64_t v38 = v35;
      uint64_t v39 = v99;
      sub_1C3F896D0(v38, v99, type metadata accessor for Proto_Set);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56))(v39, 0, 1, v98);
      sub_1C3F961BC(v39, (uint64_t)v9, (uint64_t *)&unk_1EBBC0748);
      uint64_t v40 = v37 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338((uint64_t)v9, v40, (uint64_t *)&unk_1EBBC0748);
      swift_endAccess();
      swift_release();
    }
    sub_1C3F62C10();
    if (!v4)
    {
      uint64_t v41 = v96;
      sub_1C3F86C30((uint64_t)v28, v96, type metadata accessor for Proto_OrderedSet);
      swift_beginAccess();
      swift_retain();
      sub_1C3F59F38(v41);
      swift_release();
    }
    goto LABEL_14;
  }
  sub_1C3F86DB8((uint64_t)v28, type metadata accessor for Proto_OrderedSet);
  swift_bridgeObjectRelease();
}

void sub_1C443BDEC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
}

void sub_1C443BE10(uint64_t a1, void *a2)
{
}

uint64_t sub_1C443BE28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t CROrderedSet.startIndex.getter(uint64_t a1)
{
  return 0;
}

uint64_t CROrderedSet.endIndex.getter(uint64_t a1)
{
  return sub_1C3F5ED60(a1, MEMORY[0x1E4FBB318]);
}

Swift::Int __swiftcall CROrderedSet.index(after:)(Swift::Int after)
{
  sub_1C3F87134(v1);
  swift_bridgeObjectRelease();
  Swift::Int result = after + 1;
  if (__OFADD__(after, 1)) {
    __break(1u);
  }
  return result;
}

uint64_t CROrderedSet.replaceSubrange<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1C44967E8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C4497808())
  {
    sub_1C4496698();
    CROrderedSet.remove(atOffsets:)((uint64_t)v15, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    return sub_1C443383C(a1, a2, a3, a4, a5, a6);
  }
}

uint64_t sub_1C443C050(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C443C3B8(a1, a2, a3, a4, (void (*)(uint64_t, void))sub_1C443CD2C);
}

uint64_t (*sub_1C443C068(void *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = CROrderedSet.subscript.modify(v6, *a2, a3);
  return sub_1C406188C;
}

uint64_t sub_1C443C0D8(uint64_t a1)
{
  sub_1C443CFA0();
  swift_getWitnessTable();
  uint64_t v2 = sub_1C44985B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1C443C178()
{
  return sub_1C4497148();
}

void sub_1C443C1F8(Swift::Int *a1, Swift::Int *a2)
{
}

void sub_1C443C208(void *a1@<X8>)
{
}

uint64_t sub_1C443C218(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CROrderedSet.replaceSubrange<A>(_:with:)(*a1, a1[1], a2, a5, a3, a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);
  return v7(a2, a3);
}

uint64_t sub_1C443C2A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, void *a4@<X8>)
{
  return CROrderedSet.init<A>(_:)(a1, a3[2], a2, a3[3], a3[4], a4);
}

uint64_t sub_1C443C2B8(uint64_t a1, uint64_t a2)
{
  CROrderedSet.append(_:)(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

uint64_t sub_1C443C324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CROrderedSet.append<A>(contentsOf:)(a1, a4, a2, a3);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8);
  return v6(a1, a2);
}

uint64_t sub_1C443C3A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C443C3B8(a1, a2, a3, a4, (void (*)(uint64_t, void))CROrderedSet.insert(_:at:));
}

uint64_t sub_1C443C3B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void))
{
  a5(a1, *a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8);
  return v7(a1);
}

uint64_t sub_1C443C42C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CROrderedSet.insert<A>(contentsOf:at:)(a1, *a2, a5, a3, *(void *)(a4 + 8));
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);
  return v7(a1, a3);
}

uint64_t sub_1C443C4C4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return CROrderedSet.removeAll(where:)(a1, a2, a3);
}

uint64_t sub_1C443C4DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = CROrderedSet.startIndex.getter(a1);
  *a2 = 0;
  return result;
}

uint64_t sub_1C443C504@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = CROrderedSet.endIndex.getter(a1);
  *a2 = result;
  return result;
}

void (*sub_1C443C52C(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1C443C59C(v6, *a2, a3);
  return sub_1C4108048;
}

void (*sub_1C443C59C(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *a1 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  a1[1] = v7;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  a1[2] = v8;
  CROrderedSet.subscript.getter(a2, a3, (uint64_t)v8);
  return sub_1C4108148;
}

uint64_t sub_1C443C654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1C443173C(a1, a2, WitnessTable, a3);
}

uint64_t sub_1C443C6BC()
{
  swift_getWitnessTable();
  return sub_1C44977B8();
}

Swift::Int sub_1C443C728@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = CROrderedSet.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_1C443C754(Swift::Int *a1)
{
  Swift::Int result = CROrderedSet.index(after:)(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1C443C780()
{
  swift_getWitnessTable();
  return sub_1C4497798();
}

uint64_t sub_1C443C7F0(void *a1)
{
  swift_getWitnessTable();
  uint64_t result = sub_1C4497798();
  *a1 = v3;
  return result;
}

uint64_t sub_1C443C860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];
  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C443C8E4()
{
  swift_getWitnessTable();
  return sub_1C4497788();
}

uint64_t sub_1C443C968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];
  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t CROrderedSet<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v27 = a3;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C4497B38();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v23 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C4498688();
  uint64_t v14 = sub_1C3F87134(a2);
  uint64_t v15 = *(void *)(v4 + 8);
  uint64_t v28 = v14;
  uint64_t v29 = 0;
  uint64_t v30 = v15;
  uint64_t v16 = type metadata accessor for CROrderedSet.Iterator();
  swift_retain();
  CROrderedSet.Iterator.next()(v16, (uint64_t)v13);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v17(v13, 1, v7) != 1)
  {
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v26 = v10;
    v23[1] = v8 + 32;
    uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
    do
    {
      uint64_t v18 = v7;
      uint64_t v19 = v26;
      v25(v26, v13, v18);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
      uint64_t v20 = v33;
      sub_1C4498158();
      uint64_t v21 = v19;
      uint64_t v7 = v18;
      (*v24)(v21, v18);
      if (v20) {
        break;
      }
      uint64_t v33 = 0;
      CROrderedSet.Iterator.next()(v16, (uint64_t)v13);
    }
    while (v17(v13, 1, v18) != 1);
  }
  swift_release();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t sub_1C443CC8C(void *a1, uint64_t a2, uint64_t a3)
{
  return CROrderedSet<>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_1C443CCA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C443CCF0()
{
  return sub_1C4497178() & 1;
}

uint64_t sub_1C443CD2C(uint64_t a1, Swift::Int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(void *)(v12 + 32);
  uint64_t v13 = type metadata accessor for CROrderedSetElement();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v22 - v16;
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v22[0] = a1;
  Swift::Int v23 = a2;
  uint64_t result = CROrderedSet.count.getter(a3);
  if (result <= v23)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_1C443280C(a3);
  uint64_t v24 = *v4;
  type metadata accessor for CRSequence();
  CRSequence.subscript.getter();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v17, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v18 = v22[0];
  char v19 = sub_1C4497178();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v19 & 1) == 0)
  {
    uint64_t v24 = v4[1];
    uint64_t v20 = type metadata accessor for CRSet();
    uint64_t result = CRSet.contains(_:)(v18, v20);
    if ((result & 1) == 0)
    {
      uint64_t v21 = v23;
      CROrderedSet.remove(at:)(v23);
      return CROrderedSet.insert(_:at:)(v18, v21, a3);
    }
  }
  return result;
}

uint64_t sub_1C443CFA0()
{
  sub_1C44985B8();
  swift_getWitnessTable();
  return sub_1C4498078();
}

uint64_t sub_1C443D038@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C443ACF8(a1, v3[5], v3[2], v3[3], v3[4], a2, a3);
}

unint64_t sub_1C443D05C()
{
  unint64_t result = qword_1EA3A0D80[0];
  if (!qword_1EA3A0D80[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA3A0D78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA3A0D80);
  }
  return result;
}

uint64_t sub_1C443D0B8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C443D138(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C443D1B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C3F6682C(a1, a2);
}

uint64_t type metadata accessor for CROrderedSet.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

_UNKNOWN **sub_1C443D1F4()
{
  return &protocol witness table for CROrderedSet<A>.MergeableDelta;
}

uint64_t sub_1C443D200(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C443D23C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443D258()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443D274()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443D2D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443D2F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443D358()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443D3BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443D3D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443D444()
{
  return 24;
}

__n128 sub_1C443D450(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1C443D464()
{
  type metadata accessor for CROrderedSet.DeduplicatedInfo();
  uint64_t result = sub_1C4497B38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C443D51C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 48);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for CROrderedSet.DeduplicatedInfo();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
    swift_retain();
    swift_retain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_1C4497B38();
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v13 = *(int *)(v9 + 44);
      uint64_t v14 = (char *)v7 + v13;
      uint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_1C44967E8();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

void *sub_1C443D6EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for CROrderedSet.DeduplicatedInfo();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *uint64_t v7 = *v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(int *)(v9 + 44);
      uint64_t v22 = (char *)v7 + v21;
      Swift::Int v23 = (char *)v8 + v21;
      uint64_t v24 = sub_1C44967E8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v19 = sub_1C4497B38();
    memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *uint64_t v7 = *v8;
  uint64_t v14 = *(int *)(v9 + 44);
  uint64_t v15 = (char *)v7 + v14;
  uint64_t v16 = (char *)v8 + v14;
  uint64_t v17 = sub_1C44967E8();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1C443D924(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 48);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for CROrderedSet.DeduplicatedInfo();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_1C4497B38();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    *uint64_t v5 = *v6;
    uint64_t v10 = *(int *)(v7 + 44);
    uint64_t v11 = (char *)v5 + v10;
    int v12 = (char *)v6 + v10;
    uint64_t v13 = sub_1C44967E8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1C443DA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for CROrderedSet.DeduplicatedInfo();
    uint64_t v8 = sub_1C4497B38();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C443DB38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for CROrderedSet.DeduplicatedInfo();
    uint64_t v7 = sub_1C4497B38();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C443DBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_3Tm);
}

uint64_t sub_1C443DC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_4Tm);
}

uint64_t type metadata accessor for CROrderedSet.ObservableDifference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *sub_1C443DC3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  if (!v4)
  {
    if (v5)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v5)
  {
    uint64_t v6 = type metadata accessor for CRSet.MutatingAction();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v7 = (void *)a1[2];
  uint64_t v8 = (void *)a2[2];
  a1[2] = (uint64_t)v8;
  id v9 = v8;

  return a1;
}

void *sub_1C443DD24(void *a1, uint64_t a2)
{
  if (!*a1) {
    goto LABEL_5;
  }
  if (!*(void *)a2)
  {
    uint64_t v4 = type metadata accessor for CRSet.MutatingAction();
    (*(void (**)(void *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v5 = (void *)a1[2];
  a1[2] = *(void *)(a2 + 16);

  return a1;
}

uint64_t type metadata accessor for CROrderedSet.MutatingAction()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C443DDEC(void *a1)
{
  if (*a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = (void *)a1[6];
}

void *sub_1C443DE54(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    uint64_t v5 = a2[2];
    *a1 = *a2;
    a1[1] = v4;
    uint64_t v6 = a2[3];
    uint64_t v7 = a2[4];
    a1[2] = v5;
    a1[3] = v6;
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v9;
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  uint64_t v10 = (void *)a2[6];
  a1[6] = v10;
  id v11 = v10;
  return a1;
}

void *sub_1C443DF00(void *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  if (!v4)
  {
    if (v5)
    {
      *a1 = v5;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *(_OWORD *)a2;
    long long v8 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v8;
    *(_OWORD *)a1 = v7;
    goto LABEL_8;
  }
  if (!v5)
  {
    uint64_t v6 = type metadata accessor for CRSet.Partial();
    (*(void (**)(void *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  long long v9 = (void *)a1[6];
  uint64_t v10 = (void *)a2[6];
  a1[6] = v10;
  id v11 = v10;

  return a1;
}

uint64_t sub_1C443E0A0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)a1) {
    goto LABEL_5;
  }
  if (!*(void *)a2)
  {
    uint64_t v4 = type metadata accessor for CRSet.Partial();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
LABEL_5:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

uint64_t sub_1C443E198(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1C443E1F4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for CROrderedSet.MergeableDelta()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C443E26C()
{
  uint64_t result = sub_1C44967E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C443E308(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    long long v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    long long v5 = a1;
    uint64_t v6 = *(int *)(a3 + 44);
    long long v7 = (char *)a1 + v6;
    long long v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C44967E8();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1C443E3EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_1C44967E8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1C443E464(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C44967E8();
  long long v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_1C443E4FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C44967E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1C443E590(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C44967E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1C443E60C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C44967E8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C443E6A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Timestamp(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C443E76C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1C4496678();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  uint64_t v12 = v7 + v11;
  uint64_t v13 = (v7 + v11) & ~v11;
  uint64_t v14 = *(void *)(v9 + 64) + 7;
  unint64_t v15 = (((v14 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v13 + 8;
  uint64_t v16 = *(_DWORD *)(v6 + 80) & 0xF8 | v11;
  int v17 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v16 != 7 || v17 != 0 || v15 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  else
  {
    uint64_t v21 = v8;
    uint64_t v22 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v23 = ((unint64_t)a1 + v12) & v22;
    unint64_t v24 = ((unint64_t)a2 + v12) & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v23, v24, v21);
    *(void *)((v14 + v23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
    *(void *)(v23 + (v14 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)(v24 + (v14 & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  return a1;
}

uint64_t sub_1C443E928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  *(void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *(void *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8 + v12) = *(void *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8 + v13);
  return a1;
}

uint64_t sub_1C443EA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  *(void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *(void *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8 + v12) = *(void *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8 + v13);
  return a1;
}

uint64_t sub_1C443EB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  *(void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *(void *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8 + v12) = *(void *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8 + v13);
  return a1;
}

uint64_t sub_1C443EC28()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C443EC44(uint64_t a1)
{
  return sub_1C4433D80(a1, *(void *)(v1 + 56), *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1C443EC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C443ECB0(a1, a2);
}

uint64_t sub_1C443EC84()
{
  return (*(uint64_t (**)(void))(v0 + 40))() & 1;
}

uint64_t sub_1C443ECB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C4433E74(a1, *(void **)(v2 + 56), *(void *)(v2 + 16), a2);
}

BOOL sub_1C443ECE4(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(_WORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 17; ; ++i)
  {
    uint64_t v5 = i - 15;
    if (__OFADD__(i - 16, 1)) {
      break;
    }
    int v6 = *(unsigned __int16 *)(a2 + 2 * i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C443ED44(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73746E65746E6F63;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73746E65746E6F63;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C44982E8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t Capsule.versionUUID.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(result + 40));
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_versionUUID;
    swift_beginAccess();
    uint64_t v6 = sub_1C4496678();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, v5, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Capsule.merge<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 40);
  uint64_t v5 = *(void *)(v2 + v4);
  uint64_t v6 = *(void *)(a1 + *(int *)(type metadata accessor for Capsule() + 40));
  if (!v5) {
    goto LABEL_9;
  }
  if (v6) {
    BOOL v7 = v5 == v6;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7) {
    return 0;
  }
  uint64_t result = sub_1C3F6C718(a2);
  uint64_t v2 = *(void *)(v2 + v4);
  if (v2)
  {
    if (v6)
    {
LABEL_11:
      BOOL v9 = sub_1C4055DD4(v6, 0, 0, 0);
      sub_1C3F7D128(0, 0);
      return v9;
    }
    __break(1u);
LABEL_9:
    if (v6)
    {
      uint64_t result = sub_1C3F6C718(a2);
      if (*(void *)(v2 + v4)) {
        goto LABEL_11;
      }
      goto LABEL_13;
    }
    return 0;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1C443EF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1C3F6C718(a2);
  if (*(void *)(v4 + *(int *)(a2 + 40)))
  {
    uint64_t result = sub_1C4058634(a1, a3, a4);
    if (!v5) {
      return sub_1C3F7D128(0, 0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C443EFBC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = type metadata accessor for Capsule();
  uint64_t v12 = (char *)a5 + *(int *)(v11 + 36);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v12, 1, 1, a4);
  uint64_t v13 = *(int *)(v11 + 40);
  *(void *)((char *)a5 + v13) = 0;
  *a5 = v9;
  a5[1] = v10;
  uint64_t v14 = sub_1C4497B38();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, a2, v14);
  uint64_t result = swift_release();
  *(void *)((char *)a5 + v13) = a3;
  return result;
}

uint64_t Capsule<>.root.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C4445170(a1, a2, (void (*)(uint64_t))Capsule.Ref<>.root.getter);
}

{
  return sub_1C4445170(a1, a2, (void (*)(uint64_t))Capsule.Ref<>.root.getter);
}

uint64_t sub_1C443F0C8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(*v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C443F128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_versionUUID;
  swift_beginAccess();
  uint64_t v4 = sub_1C4496678();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Capsule<>.delta(_:from:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = *(int *)(a3 + 40);
  if (*(void *)(v4 + v5))
  {
    uint64_t v6 = *(void *)(a2 + v5);
    if (v6) {
      return sub_1C405DB2C(result, v6, a4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *Capsule<>.merge(delta:)(uint64_t *result, uint64_t a2)
{
  uint64_t v3 = *(int *)(a2 + 40);
  if (*(void *)(v2 + v3))
  {
    uint64_t v5 = *result;
    uint64_t v6 = result[1];
    uint64_t v7 = result[2];
    uint64_t v8 = result[3];
    uint64_t v10 = result[4];
    uint64_t v9 = result[5];
    uint64_t v11 = result[6];
    uint64_t v15 = *result;
    uint64_t v16 = v6;
    uint64_t v17 = v7;
    uint64_t v18 = v8;
    uint64_t v19 = v10;
    uint64_t v20 = v9;
    uint64_t v13 = v11;
    uint64_t v14 = v9;
    uint64_t v21 = v11;
    char v12 = sub_1C405EA6C((uint64_t)&v15);
    if ((v12 & 1) == 0) {
      return (uint64_t *)(v12 & 1);
    }
    uint64_t result = (uint64_t *)sub_1C3F6C718(a2);
    if (*(void *)(v2 + v3))
    {
      uint64_t v15 = v5;
      uint64_t v16 = v6;
      uint64_t v17 = v7;
      uint64_t v18 = v8;
      uint64_t v19 = v10;
      uint64_t v20 = v14;
      uint64_t v21 = v13;
      sub_1C405F1D0(&v15);
      return (uint64_t *)(v12 & 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *Capsule.subscript.getter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C443F90C(a1, a2, a3, a4, (void (*)(void *, uint64_t, uint64_t))sub_1C4054DC4);
}

{
  return sub_1C443F90C(a1, a2, a3, a4, (void (*)(void *, uint64_t, uint64_t))sub_1C405557C);
}

uint64_t Capsule<>.ObservableDifference.subscript.getter@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1C4446398(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Ref, a4);
}

{
  return sub_1C4446398(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for WeakRef, a4);
}

uint64_t sub_1C443F2FC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 120) = a4;
  *(void *)(v5 + 128) = v4;
  *(unsigned char *)(v5 + 176) = a2;
  *(void *)(v5 + 104) = a1;
  *(void *)(v5 + 112) = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0990);
  *(void *)(v5 + 136) = v6;
  *(void *)(v5 + 144) = *(void *)(v6 - 8);
  *(void *)(v5 + 152) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C443F3C8, 0, 0);
}

uint64_t sub_1C443F3C8()
{
  *(void *)(v0 + 160) = *(void *)(*(void *)(v0 + 128) + 24);
  return MEMORY[0x1F4188298](sub_1C443F3F0, 0, 0);
}

uint64_t sub_1C443F3F0()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  v0[2] = v0;
  v0[3] = sub_1C443F51C;
  uint64_t v4 = swift_continuation_init();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  v0[10] = &unk_1EA3A1170;
  v0[11] = v5;
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09A8);
  sub_1C44975E8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C443F51C()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v10 = (void *)*v0;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA39ED38 + dword_1EA39ED38);
  uint64_t v3 = (void *)swift_task_alloc();
  v2[21] = v3;
  *uint64_t v3 = v10;
  v3[1] = sub_1C443F6A0;
  uint64_t v4 = v1[15];
  uint64_t v5 = v1[14];
  uint64_t v6 = *((unsigned __int8 *)v2 + 176);
  uint64_t v7 = v1[13];
  return v9(v7, v6, v5, v4);
}

uint64_t sub_1C443F6A0(char a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7(a1 & 1);
  }
}

uint64_t Capsule.hasDelta(from:)(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(int *)(a2 + 40);
  if (*(void *)(v2 + v3))
  {
    uint64_t result = *(void *)(result + v3);
    if (result) {
      return sub_1C405315C(result) & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C443F848()
{
  dword_1EA3B8950 = 0;
}

uint64_t sub_1C443F854()
{
  swift_release();
  sub_1C3F6C6F0(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C443F89C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1C3F6B5F8(a1, a2, a3);
  return v6;
}

uint64_t *sub_1C443F90C(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t, uint64_t))
{
  if (*(void *)(v5 + *(int *)(a2 + 40)))
  {
    uint64_t v10 = *result;
    unint64_t v9 = result[1];
    v11[0] = v10;
    v11[1] = v9;
    sub_1C3F7E324(v10, v9);
    a5(v11, a3, a4);
    return (uint64_t *)sub_1C3F7E2CC(v10, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Capsule.copy()@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(uint64_t *)((char *)v2 + *(int *)(result + 40)))
  {
    uint64_t v4 = result;
    uint64_t v5 = *v2;
    unint64_t v6 = v2[1];
    v8[0] = v5;
    v8[1] = v6;
    uint64_t v7 = (uint64_t)v2 + *(int *)(result + 36);
    sub_1C3F6C704(v5, v6);
    sub_1C40503F0(v8, v7, *(void *)(v4 + 16), *(void *)(v4 + 24), a2);
    return sub_1C3F6C6F0(v5, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Capsule.copyAssets(to:)(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0990);
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C443FB0C, 0, 0);
}

uint64_t sub_1C443FB0C()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = sub_1C3F6C718(v1);
  uint64_t v6 = *(void *)(v2 + *(int *)(v1 + 40));
  *(void *)(v0 + 152) = v6;
  if (v6)
  {
    uint64_t v7 = sub_1C444AE20(*(void *)(v0 + 112));
    uint64_t v8 = v7;
    *(void *)(v0 + 160) = v7;
    char v9 = *(unsigned char *)(v7 + 32);
    *(unsigned char *)(v0 + 240) = v9;
    uint64_t v10 = v7 + 64;
    uint64_t v11 = 1 << v9;
    uint64_t v12 = -1;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    unint64_t v13 = v12 & *(void *)(v7 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v3 = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v16 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v17 = v16 | (v15 << 6);
      }
      else
      {
        int64_t v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          break;
        }
        if (v20 >= v14) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v20);
        ++v15;
        if (!v21)
        {
          int64_t v15 = v20 + 1;
          if (v20 + 1 >= v14) {
            goto LABEL_25;
          }
          unint64_t v21 = *(void *)(v10 + 8 * v15);
          if (!v21)
          {
            int64_t v15 = v20 + 2;
            if (v20 + 2 >= v14) {
              goto LABEL_25;
            }
            unint64_t v21 = *(void *)(v10 + 8 * v15);
            if (!v21)
            {
              int64_t v22 = v20 + 3;
              if (v22 >= v14)
              {
LABEL_25:
                swift_release();
                swift_release();
                swift_task_dealloc();
                uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
                return v27();
              }
              unint64_t v21 = *(void *)(v10 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  int64_t v15 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_29;
                  }
                  if (v15 >= v14) {
                    goto LABEL_25;
                  }
                  unint64_t v21 = *(void *)(v10 + 8 * v15);
                  ++v22;
                  if (v21) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v15 = v22;
            }
          }
        }
LABEL_21:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v17 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      *(void *)(v0 + 168) = v15;
      *(void *)(v0 + 176) = v13;
      uint64_t v18 = *(void *)(v0 + 104);
      uint64_t v19 = *(void *)(*(void *)(v8 + 56) + 16 * v17);
      *(void *)(v0 + 184) = v19;
      if (*(void *)(v19 + 32) != v18)
      {
        unint64_t v23 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v17);
        uint64_t v24 = *v23;
        *(void *)(v0 + 192) = *v23;
        unint64_t v25 = v23[1];
        *(void *)(v0 + 200) = v25;
        swift_retain_n();
        sub_1C3F7E324(v24, v25);
        swift_retain();
        swift_retain();
        sub_1C3F7E324(v24, v25);
        uint64_t v26 = *(void *)(v19 + 32);
        *(void *)(v0 + 208) = v26;
        *(void *)(v0 + 216) = *(void *)(v26 + 24);
        swift_retain();
        swift_retain();
        uint64_t v3 = (uint64_t)sub_1C443FD98;
        uint64_t v4 = 0;
        uint64_t v5 = 0;
        return MEMORY[0x1F4188298](v3, v4, v5);
      }
    }
  }
  __break(1u);
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C443FD98()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  v0[2] = v0;
  v0[3] = sub_1C443FED0;
  uint64_t v4 = swift_continuation_init();
  uint64_t v5 = swift_allocObject();
  v0[10] = &unk_1EA39ED20;
  *(void *)(v5 + 16) = v4;
  v0[11] = v5;
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09A8);
  sub_1C44975E8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C443FED0()
{
  return MEMORY[0x1F4188298](sub_1C443FFB0, 0, 0);
}

uint64_t sub_1C443FFB0()
{
  uint64_t v1 = v0[24];
  unint64_t v2 = v0[25];
  uint64_t v3 = v0[19];
  swift_retain();
  swift_retain();
  sub_1C3F7E324(v1, v2);
  uint64_t v11 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA39FF88 + dword_1EA39FF88);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[28] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C44400B4;
  uint64_t v5 = v0[27];
  uint64_t v6 = v0[24];
  uint64_t v7 = v0[25];
  uint64_t v8 = v0[23];
  uint64_t v9 = v0[13];
  return v11(v8, 0, v5, v8, v9, v3, v6, v7);
}

uint64_t sub_1C44400B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1C3F7E2CC(*(void *)(v2 + 192), *(void *)(v2 + 200));
    swift_release();
    swift_release();
    swift_release();
    uint64_t v3 = sub_1C44404AC;
  }
  else
  {
    unint64_t v4 = *(void *)(v2 + 200);
    uint64_t v5 = *(void *)(v2 + 192);
    sub_1C3F7E2CC(v5, v4);
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release();
    sub_1C3F7E2CC(v5, v4);
    uint64_t v3 = sub_1C4440258;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C4440258()
{
  uint64_t v1 = *(void *)(v0 + 192);
  unint64_t v2 = *(void *)(v0 + 200);
  swift_release_n();
  uint64_t v3 = (uint64_t (*)())sub_1C3F7E2CC(v1, v2);
  int64_t v6 = *(void *)(v0 + 168);
  unint64_t v7 = *(void *)(v0 + 176);
  while (v7)
  {
    unint64_t v8 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v9 = v8 | (v6 << 6);
    uint64_t v3 = *(uint64_t (**)())(v0 + 160);
LABEL_3:
    *(void *)(v0 + 168) = v6;
    *(void *)(v0 + 176) = v7;
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(*((void *)v3 + 7) + 16 * v9);
    *(void *)(v0 + 184) = v11;
    if (*(void *)(v11 + 32) != v10)
    {
      unint64_t v17 = (uint64_t *)(*((void *)v3 + 6) + 16 * v9);
      uint64_t v18 = *v17;
      *(void *)(v0 + 192) = *v17;
      unint64_t v19 = v17[1];
      *(void *)(v0 + 200) = v19;
      swift_retain_n();
      sub_1C3F7E324(v18, v19);
      swift_retain();
      swift_retain();
      sub_1C3F7E324(v18, v19);
      uint64_t v20 = *(void *)(v11 + 32);
      *(void *)(v0 + 208) = v20;
      *(void *)(v0 + 216) = *(void *)(v20 + 24);
      swift_retain();
      swift_retain();
      uint64_t v3 = sub_1C443FD98;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      return MEMORY[0x1F4188298](v3, v4, v5);
    }
  }
  int64_t v12 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  int64_t v13 = (unint64_t)((1 << *(unsigned char *)(v0 + 240)) + 63) >> 6;
  uint64_t v3 = *(uint64_t (**)())(v0 + 160);
  if (v12 >= v13) {
    goto LABEL_22;
  }
  int64_t v14 = (char *)v3 + 64;
  unint64_t v15 = *((void *)v3 + v12 + 8);
  ++v6;
  if (v15) {
    goto LABEL_18;
  }
  int64_t v6 = v12 + 1;
  if (v12 + 1 >= v13) {
    goto LABEL_22;
  }
  unint64_t v15 = *(void *)&v14[8 * v6];
  if (v15) {
    goto LABEL_18;
  }
  int64_t v6 = v12 + 2;
  if (v12 + 2 >= v13) {
    goto LABEL_22;
  }
  unint64_t v15 = *(void *)&v14[8 * v6];
  if (v15)
  {
LABEL_18:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v9 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_3;
  }
  int64_t v16 = v12 + 3;
  if (v16 < v13)
  {
    unint64_t v15 = *(void *)&v14[8 * v16];
    if (!v15)
    {
      while (1)
      {
        int64_t v6 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v6 >= v13) {
          goto LABEL_22;
        }
        unint64_t v15 = *(void *)&v14[8 * v6];
        ++v16;
        if (v15) {
          goto LABEL_18;
        }
      }
LABEL_26:
      __break(1u);
      return MEMORY[0x1F4188298](v3, v4, v5);
    }
    int64_t v6 = v16;
    goto LABEL_18;
  }
LABEL_22:
  swift_release();
  swift_release();
  swift_task_dealloc();
  unint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1C44404AC()
{
  unint64_t v1 = v0[25];
  uint64_t v2 = v0[24];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C3F7E2CC(v2, v1);
  sub_1C3F7E2CC(v2, v1);
  swift_release();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C444058C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  return MEMORY[0x1F4188298](sub_1C44405B4, 0, 0);
}

uint64_t sub_1C44405B4()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 104) + 32) + 56;
  sub_1C3F970C4(v1, v0 + 16, qword_1EBBC0C90);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_1C3F962E0(v0 + 16, qword_1EBBC0C90);
  if (v2
    || (sub_1C3F970C4(*(void *)(v0 + 112) + 56, v0 + 16, qword_1EBBC0C90),
        uint64_t v3 = *(void *)(v0 + 40),
        sub_1C3F962E0(v0 + 16, qword_1EBBC0C90),
        v3))
  {
    sub_1C3F970C4(v1, v0 + 56, qword_1EBBC0C90);
    if (*(void *)(v0 + 80))
    {
      sub_1C3F6DE94((long long *)(v0 + 56), v0 + 16);
      uint64_t v4 = sub_1C44964B8();
      unint64_t v6 = v5;
      uint64_t v7 = *(void *)(v0 + 40);
      uint64_t v8 = *(void *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v7);
      uint64_t v14 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 16))(v4, v6, v7, v8);
      unint64_t v16 = v15;
      uint64_t v17 = *(void *)(v0 + 104);
      uint64_t v18 = *(void *)(v17 + 16);
      unint64_t v19 = *(void *)(v17 + 24);
      sub_1C3F7E324(v18, v19);
      sub_1C43C5FE4(v18, v19, v14, v16, v29);
      sub_1C3F7E2CC(v14, v16);
      sub_1C3F7E2CC(v4, v6);
      sub_1C3F7E2CC(v18, v19);
      uint64_t v20 = v29[0];
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    }
    else
    {
      uint64_t v9 = *(void *)(v0 + 96);
      sub_1C3F962E0(v0 + 56, qword_1EBBC0C90);
      sub_1C43CEAE8(v9, 0, v29);
      uint64_t v20 = v29[0];
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v12 = *(void *)(v10 + 16);
    unint64_t v13 = *(void *)(v10 + 24);
    sub_1C3F7E324(v12, v13);
    sub_1C43C6B58(v12, v13, v11, v29);
    sub_1C3F7E2CC(v12, v13);
    uint64_t v20 = v29[0];
  }
  uint64_t v22 = *(void *)(v0 + 128);
  unint64_t v21 = *(void *)(v0 + 136);
  swift_beginAccess();
  sub_1C3F7E324(v22, v21);
  uint64_t v24 = sub_1C4050298((void *)(v0 + 16), v22, v21);
  uint64_t v26 = *(void *)(v0 + 128);
  unint64_t v25 = *(void *)(v0 + 136);
  if (*v23)
  {
    *uint64_t v23 = v20;
    swift_retain();
    ((void (*)(uint64_t, void))v24)(v0 + 16, 0);
    swift_endAccess();
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v26, v25);
  }
  else
  {
    ((void (*)(uint64_t, void))v24)(v0 + 16, 0);
    swift_endAccess();
    sub_1C3F7E2CC(v26, v25);
    swift_release();
  }
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t Capsule.copyAssetsSync(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v149 = *MEMORY[0x1E4F143B8];
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0990);
  uint64_t v5 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v108 = (char *)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1C4496678();
  uint64_t v7 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v106 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1C4496498();
  uint64_t v9 = *(void *)(v105 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v105);
  uint64_t v104 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v103 = (char *)v99 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v121 = (uint64_t)v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v131 = (uint64_t)v99 - v16;
  sub_1C3F6C718(a2);
  uint64_t v17 = *(void *)(v2 + *(int *)(a2 + 40));
  if (!v17) {
    goto LABEL_54;
  }
  uint64_t v18 = sub_1C444AE20(a2);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v122 = v18 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  uint64_t v125 = a1 + 56;
  uint64_t v117 = v17 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets;
  uint64_t v23 = a1 + OBJC_IVAR____TtC9Coherence14CRAssetManager_temporaryDirectory;
  int64_t v123 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v101 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v100 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  v99[1] = &v142;
  v99[0] = v5 + 8;
  swift_bridgeObjectRetain();
  uint64_t v115 = v17;
  swift_retain();
  int64_t v24 = 0;
  long long v120 = xmmword_1C44ABB60;
  uint64_t v119 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v126 = a1;
  uint64_t v118 = v18;
  uint64_t v102 = v23;
  while (1)
  {
    do
    {
      if (v22)
      {
        unint64_t v25 = __clz(__rbit64(v22));
        v22 &= v22 - 1;
        unint64_t v26 = v25 | (v24 << 6);
      }
      else
      {
        if (__OFADD__(v24++, 1))
        {
          __break(1u);
          goto LABEL_53;
        }
        if (v24 >= v123) {
          goto LABEL_50;
        }
        unint64_t v28 = *(void *)(v122 + 8 * v24);
        if (!v28)
        {
          int64_t v29 = v24 + 1;
          if (v24 + 1 >= v123) {
            goto LABEL_50;
          }
          unint64_t v28 = *(void *)(v122 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v24 + 2;
            if (v24 + 2 >= v123) {
              goto LABEL_50;
            }
            unint64_t v28 = *(void *)(v122 + 8 * v29);
            if (!v28)
            {
              int64_t v29 = v24 + 3;
              if (v24 + 3 >= v123)
              {
LABEL_50:
                swift_release();
                return swift_release();
              }
              unint64_t v28 = *(void *)(v122 + 8 * v29);
              if (!v28)
              {
                while (1)
                {
                  int64_t v24 = v29 + 1;
                  if (__OFADD__(v29, 1)) {
                    break;
                  }
                  if (v24 >= v123) {
                    goto LABEL_50;
                  }
                  unint64_t v28 = *(void *)(v122 + 8 * v24);
                  ++v29;
                  if (v28) {
                    goto LABEL_19;
                  }
                }
LABEL_53:
                __break(1u);
LABEL_54:
                __break(1u);
              }
            }
          }
          int64_t v24 = v29;
        }
LABEL_19:
        unint64_t v22 = (v28 - 1) & v28;
        unint64_t v26 = __clz(__rbit64(v28)) + (v24 << 6);
      }
      uint64_t v30 = 16 * v26;
      uint64_t v31 = *(void *)(*(void *)(v18 + 56) + v30);
      uint64_t v32 = *(void *)(v31 + 32);
    }
    while (v32 == a1);
    unint64_t v127 = v22;
    int64_t v128 = v24;
    uint64_t v33 = (uint64_t *)(*(void *)(v18 + 48) + v30);
    uint64_t v35 = *v33;
    unint64_t v34 = v33[1];
    type metadata accessor for AssetWrapper();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = 0;
    v129 = (uint64_t *)(v36 + 16);
    *(void *)(v36 + 24) = 0;
    *(_OWORD *)(v36 + 32) = v120;
    swift_retain_n();
    uint64_t v132 = v35;
    unint64_t v134 = v34;
    sub_1C3F7E324(v35, v34);
    uint64_t v37 = a1;
    dispatch_semaphore_t v38 = dispatch_semaphore_create(0);
    sub_1C3F970C4(v32 + 56, (uint64_t)v148, qword_1EBBC0C90);
    uint64_t v39 = sub_1C44975A8();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = v131;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v131, 1, 1, v39);
    sub_1C3F970C4((uint64_t)v148, (uint64_t)&v145, qword_1EBBC0C90);
    sub_1C3F970C4(v125, (uint64_t)&v141, qword_1EBBC0C90);
    uint64_t v42 = (void *)swift_allocObject();
    v42[2] = 0;
    uint64_t v130 = v42 + 2;
    v42[3] = 0;
    v42[4] = v31;
    sub_1C3F961BC((uint64_t)&v145, (uint64_t)(v42 + 5), qword_1EBBC0C90);
    sub_1C3F961BC((uint64_t)&v141, (uint64_t)(v42 + 10), qword_1EBBC0C90);
    v42[15] = v36;
    v42[16] = v37;
    v42[17] = v38;
    uint64_t v43 = v41;
    uint64_t v44 = v121;
    sub_1C3F970C4(v43, v121, (uint64_t *)&unk_1EBBC0980);
    uint64_t v45 = v39;
    LODWORD(v39) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v44, 1, v39);
    uint64_t v133 = v31;
    swift_retain();
    uint64_t v46 = v36;
    swift_retain();
    swift_retain();
    uint64_t v47 = v38;
    if (v39 == 1)
    {
      sub_1C3F962E0(v44, (uint64_t *)&unk_1EBBC0980);
    }
    else
    {
      sub_1C4497598();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v44, v45);
    }
    if (*v130)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v48 = sub_1C4497578();
      uint64_t v50 = v49;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v48 = 0;
      uint64_t v50 = 0;
    }
    uint64_t v51 = v46;
    uint64_t v52 = v132;
    unint64_t v53 = v134;
    if (v50 | v48)
    {
      uint64_t v136 = 0;
      uint64_t v135 = 0;
      uint64_t v137 = v48;
      uint64_t v138 = v50;
    }
    a1 = v126;
    swift_task_create();
    swift_release();
    sub_1C3F962E0(v131, (uint64_t *)&unk_1EBBC0980);
    sub_1C4497AD8();
    uint64_t v54 = v51;
    unint64_t v55 = *(void *)(v51 + 32);
    if (v55 >> 60 == 15) {
      goto LABEL_36;
    }
    uint64_t v116 = v54;
    uint64_t v56 = *(void *)(v54 + 24);
    sub_1C3F970C4((uint64_t)v148, (uint64_t)&v141, qword_1EBBC0C90);
    if (!v143)
    {
      sub_1C3F962E0((uint64_t)&v141, qword_1EBBC0C90);
      uint64_t v54 = v116;
      unint64_t v53 = v134;
LABEL_36:
      uint64_t v79 = *(void *)(v54 + 40);
      if (v79)
      {
        uint64_t v80 = v79 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url;
        swift_retain();
        sub_1C43CEAE8(v80, 0, &v145);
        uint64_t v81 = v129;
        uint64_t *v129 = v145;
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v81 = v129;
      }
      goto LABEL_46;
    }
    sub_1C3F6DE94(&v141, (uint64_t)&v145);
    uint64_t v57 = v146;
    uint64_t v58 = v147;
    __swift_project_boxed_opaque_existential_1(&v145, v146);
    uint64_t v59 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v58 + 16);
    sub_1C3F7E324(v56, v55);
    uint64_t v113 = v56;
    unint64_t v114 = v55;
    uint64_t v60 = v124;
    uint64_t v61 = v59(v56, v55, v57, v58);
    uint64_t v130 = v62;
    if (v60)
    {
      sub_1C3F6C6F0(v113, v114);
      swift_release();
      sub_1C3F7E2CC(v52, v134);
      swift_release_n();
      swift_release();

      sub_1C3F962E0((uint64_t)v148, qword_1EBBC0C90);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
    }
    uint64_t v63 = v61;
    uint64_t v112 = v47;
    uint64_t v124 = 0;
    uint64_t v64 = *(void *)(v133 + 16);
    unint64_t v65 = *(void *)(v133 + 24);
    type metadata accessor for CRAssetRef();
    uint64_t v66 = (void *)swift_allocObject();
    v66[2] = v64;
    v66[3] = v65;
    uint64_t v110 = v66;
    v66[4] = v126;
    uint64_t v67 = self;
    sub_1C3F7E324(v64, v65);
    swift_retain();
    uint64_t v111 = v64;
    sub_1C3F7E324(v64, v65);
    id v68 = objc_msgSend(v67, sel_defaultManager);
    uint64_t v69 = (void *)sub_1C4496418();
    *(void *)&long long v141 = 0;
    uint64_t v70 = objc_msgSend(v68, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v69, 1, 0, &v141);

    unint64_t v53 = v134;
    if ((v70 & 1) == 0) {
      break;
    }
    id v71 = (id)v141;
    uint64_t v72 = v106;
    sub_1C4496668();
    sub_1C44965F8();
    (*v101)(v72, v107);
    uint64_t v73 = v103;
    sub_1C4496438();
    swift_bridgeObjectRelease();
    sub_1C3F970C4(v125, (uint64_t)&v139, qword_1EBBC0C90);
    if (v140)
    {
      sub_1C3F6DE94(&v139, (uint64_t)&v141);
      uint64_t v74 = v143;
      uint64_t v75 = v144;
      __swift_project_boxed_opaque_existential_1(&v141, v143);
      uint64_t v76 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v75 + 8))(v63, v130, v74, v75);
      unint64_t v78 = v77;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
    }
    else
    {
      sub_1C3F962E0((uint64_t)&v139, qword_1EBBC0C90);
      unint64_t v78 = (unint64_t)v130;
      sub_1C3F7E324(v63, (unint64_t)v130);
      uint64_t v76 = v63;
    }
    uint64_t v82 = v63;
    uint64_t v83 = v124;
    sub_1C4496578();
    uint64_t v124 = v83;
    uint64_t v84 = v76;
    unint64_t v85 = v78;
    if (v83) {
      goto LABEL_56;
    }
    sub_1C3F7E2CC(v76, v78);
    uint64_t v86 = *v100;
    uint64_t v87 = v104;
    uint64_t v88 = v105;
    (*v100)(v104, v73, v105);
    type metadata accessor for CRFileSnapshot();
    uint64_t v89 = swift_allocObject();
    v86((char *)(v89 + OBJC_IVAR____TtC9Coherence14CRFileSnapshot_url), v87, v88);
    a1 = v126;
    uint64_t v90 = (void *)swift_allocObject();
    uint64_t v91 = v111;
    v90[2] = v111;
    v90[3] = v65;
    v90[4] = v89;
    *(void *)&long long v141 = &unk_1EA39FF80;
    *((void *)&v141 + 1) = v90;
    swift_weakInit();
    sub_1C3F7E324(v91, v65);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09A8);
    uint64_t v92 = v108;
    sub_1C44975E8();
    (*(void (**)(char *, uint64_t))v99[0])(v92, v109);
    swift_release();
    swift_release();
    sub_1C3F6C6F0(v113, v114);
    sub_1C3F7E2CC(v82, (unint64_t)v130);
    sub_1C3F7E2CC(v91, v65);
    uint64_t v81 = v129;
    uint64_t *v129 = (uint64_t)v110;
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
    uint64_t v52 = v132;
    uint64_t v47 = v112;
LABEL_46:
    uint64_t v93 = *v81;
    if (!*v81)
    {
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v96 = 0xD000000000000014;
      *(void *)(v96 + 8) = 0x80000001C44B5A50;
      *(unsigned char *)(v96 + 16) = 3;
      swift_willThrow();
      swift_release();
      sub_1C3F7E2CC(v52, v53);
      swift_release_n();
      swift_release();

      sub_1C3F962E0((uint64_t)v148, qword_1EBBC0C90);
      return swift_release();
    }
    swift_beginAccess();
    sub_1C3F7E324(v52, v53);
    swift_retain();
    uint64_t v95 = sub_1C4050298(&v145, v52, v53);
    if (*v94)
    {
      *uint64_t v94 = v93;
      swift_retain();
      ((void (*)(uint64_t *, void))v95)(&v145, 0);
      swift_endAccess();
      swift_release();
      swift_release();
      sub_1C3F7E2CC(v52, v53);
      swift_release_n();
      swift_release();

      sub_1C3F7E2CC(v52, v53);
    }
    else
    {
      ((void (*)(uint64_t *, void))v95)(&v145, 0);
      swift_endAccess();
      sub_1C3F7E2CC(v52, v53);
      swift_release();
      sub_1C3F7E2CC(v52, v53);
      swift_release_n();
      swift_release();
    }
    sub_1C3F962E0((uint64_t)v148, qword_1EBBC0C90);
    uint64_t v18 = v118;
    int64_t v24 = v128;
    unint64_t v22 = v127;
  }
  id v98 = (id)v141;
  sub_1C44963A8();

  swift_willThrow();
  uint64_t v84 = swift_unexpectedError();
  __break(1u);
LABEL_56:
  sub_1C3F7E2CC(v84, v85);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C4441908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v10;
  v8[4] = a6;
  v8[5] = a7;
  uint64_t v8[2] = a4;
  v8[3] = a5;
  return MEMORY[0x1F4188298](sub_1C4441938, 0, 0);
}

uint64_t sub_1C4441938()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 32) = v3;
  *(void *)(v2 + 48) = v1;
  *(void *)(v0 + 72) = *(void *)(v1 + 32);
  uint64_t v7 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t))((char *)&dword_1EA3A1160 + dword_1EA3A1160);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C4441A40;
  uint64_t v5 = *(void *)(v0 + 16);
  return v7(v5, 0, (uint64_t)&unk_1EA3A1158, v2);
}

uint64_t sub_1C4441A40()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v2 = sub_1C4441BE4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C4441B80;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C4441B80()
{
  sub_1C4497AE8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C4441BE4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C4441C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[7] = a2;
  v7[8] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  v7[13] = swift_task_alloc();
  uint64_t v8 = sub_1C4496498();
  v7[14] = v8;
  v7[15] = *(void *)(v8 - 8);
  v7[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C4441D40, 0, 0);
}

uint64_t sub_1C4441D40()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void *)(v0[8] + 24);
  sub_1C3F970C4(v0[9], (uint64_t)(v0 + 2), qword_1EBBC0C90);
  uint64_t v2 = v1 | v0[5];
  sub_1C3F962E0((uint64_t)(v0 + 2), qword_1EBBC0C90);
  if (v2)
  {
    if (v1)
    {
      uint64_t v8 = sub_1C44964B8();
      uint64_t v18 = v0[10];
      uint64_t v19 = *(void *)(v18 + 24);
      unint64_t v20 = *(void *)(v18 + 32);
      *(void *)(v18 + 24) = v8;
      *(void *)(v18 + 32) = v21;
      sub_1C3F6C6F0(v19, v20);
      goto LABEL_7;
    }
    uint64_t v10 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v12 = v0[13];
    uint64_t v11 = v0[14];
    uint64_t v14 = v0[10];
    uint64_t v13 = v0[11];
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v15(v9, v0[7], v11);
    v15(v12, v13 + OBJC_IVAR____TtC9Coherence14CRAssetManager_temporaryDirectory, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v11);
    *(void *)(v14 + 40) = sub_1C437282C(v9, 0, 0, 0, v12);
  }
  else
  {
    uint64_t v3 = v0[12];
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[7];
    uint64_t v6 = *(void *)(v3 + 16);
    unint64_t v7 = *(void *)(v3 + 24);
    sub_1C3F7E324(v6, v7);
    sub_1C43C6B58(v6, v7, v5, &v22);
    sub_1C3F7E2CC(v6, v7);
    *(void *)(v4 + 16) = v22;
  }
  swift_release();
LABEL_7:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t Capsule.in(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a1;
  v4[3] = a2;
  return Capsule.mutate<A>(_:)((void (*)(uint64_t))sub_1C444B03C, (uint64_t)v4, a3, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
}

uint64_t Capsule.mutate<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v7[2] = a4;
  v7[3] = a1;
  v7[4] = a2;
  sub_1C3F6B448((void (*)(uint64_t))sub_1C444B064, (uint64_t)v7, a3, a4, a5);
  return sub_1C3F5865C(v5);
}

uint64_t sub_1C444205C(uint64_t a1, void (*a2)(void *))
{
  v5[3] = type metadata accessor for Capsule.Ref();
  v5[4] = &protocol witness table for Capsule<A>.Ref;
  v5[0] = a1;
  swift_retain();
  a2(v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t Capsule.callAsFunction<A>(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Capsule.mutate<A>(_:)(a1, a2, a3, a4, a5);
}

{
  return Capsule.mutate<A>(_:)(a1, a2, a3, a4, a5);
}

uint64_t Capsule.mutateCachedValues(_:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = *(void *)(v3 + v4);
  if (v5)
  {
    uint64_t v8 = result;
    uint64_t v9 = (uint64_t *)(v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_isUpdated);
    uint64_t v10 = swift_beginAccess();
    uint64_t v11 = *v9;
    MEMORY[0x1F4188790](v10);
    v14[2] = v8;
    v14[3] = a2;
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C3F6B448((void (*)(uint64_t))sub_1C444DACC, (uint64_t)v14, a3, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
    uint64_t v12 = *(void *)(v3 + v4);
    if (v12)
    {
      uint64_t v13 = (void *)(v12 + OBJC_IVAR____TtC9Coherence10CapsuleRef_isUpdated);
      swift_beginAccess();
      *uint64_t v13 = v11;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id Capsule.context.getter()
{
  uint64_t v3 = 0;
  memset(v2, 0, sizeof(v2));
  id v0 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v2);
  sub_1C3F962E0((uint64_t)v2, qword_1EBBC0C90);
  return v0;
}

uint64_t Capsule.mergeCopied(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *v2;
  unint64_t v8 = v2[1];
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a2);
  if (v8 >> 60 == 15)
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, a2);
  }
  else
  {
    uint64_t v10 = *v7;
    unint64_t v11 = v7[1];
    if (v11 >> 60 == 15)
    {
      sub_1C3F7E324(v9, v8);
      sub_1C3F7E324(v9, v8);
      (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, a2);
      sub_1C3F7E2CC(v9, v8);
      sub_1C3F6C6F0(v9, v8);
      sub_1C3F6C6F0(v10, v11);
    }
    else
    {
      sub_1C3F6C704(v9, v8);
      sub_1C3F6C704(v9, v8);
      sub_1C3F6C704(v10, v11);
      char v12 = sub_1C3FAD630(v9, v8, v10, v11);
      sub_1C3F6C6F0(v10, v11);
      (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, a2);
      sub_1C3F7E2CC(v9, v8);
      sub_1C3F6C6F0(v9, v8);
      if (v12) {
        return Capsule.merge<A>(_:)(a1, a2);
      }
    }
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v5 + 24))(v2, a1, a2);
}

uint64_t Capsule.merging<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, v3, a2);
  return Capsule.merge<A>(_:)(a1, a2);
}

uint64_t Capsule.encapsulate<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  void (*v19)(uint64_t *__return_ptr, unint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t AssociatedConformanceWitness;
  uint64_t v29[2];
  void (*v30)(uint64_t *__return_ptr, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;

  uint64_t v7 = v6;
  uint64_t v36 = a5;
  uint64_t v12 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v34 = (char *)v29 - v16;
  uint64_t v17 = *(void *)(v7 + *(int *)(a2 + 40));
  if (!v17)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v18 = v17 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F520(v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v19 = *(void (**)(uint64_t *__return_ptr, unint64_t, uint64_t))(a4 + 48);
  uint64_t v31 = a1;
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v30 = v19;
  ((void (*)(uint64_t *__return_ptr, unint64_t))v19)(&v37, a3);
  uint64_t v5 = v37;
  a3 = v38;
  unint64_t v20 = *(void *)&v14[*(int *)(v12 + 20)];
  if (!*(void *)(v20 + 16))
  {
LABEL_8:
    sub_1C3F7E2CC(v5, a3);
    uint64_t result = sub_1C3F8F634((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    __break(1u);
    goto LABEL_9;
  }
  v29[0] = a2;
  v29[1] = v7;
  sub_1C3F7E324(v37, v38);
  uint64_t v21 = sub_1C3F850CC(v5, a3);
  if ((v22 & 1) == 0)
  {
LABEL_7:
    sub_1C3F7E2CC(v5, a3);
    goto LABEL_8;
  }
  uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 48 * v21);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v5, a3);
  sub_1C3F7E2CC(v5, a3);
  sub_1C3F8F634((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v23)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v23 + 88))(&v39, result);
    swift_release();
    unint64_t v25 = (uint64_t)v34;
    swift_dynamicCast();
    v30(&v39, v33, v32);
    unint64_t v26 = v39;
    uint64_t v27 = v40;
    uint64_t v37 = v39;
    dispatch_semaphore_t v38 = v40;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    Capsule.encapsulate<A>(crdt:id:)(v25, v29[0], AssociatedTypeWitness, AssociatedConformanceWitness, v36);
    sub_1C3F7E2CC(v26, v27);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v25, AssociatedTypeWitness);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t Capsule.encapsulate<A>(crdt:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v20 = a3;
  uint64_t v21 = a5;
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)v9;
  unint64_t v13 = *(void *)(v9 + 8);
  uint64_t v15 = *(void *)v5;
  unint64_t v14 = *(void *)(v5 + 8);
  if (v14 >> 60 == 15)
  {
    sub_1C3F7E324(*(void *)v9, *(void *)(v9 + 8));
    sub_1C3F6C6F0(v15, v14);
    uint64_t result = sub_1C3F6C6F0(v12, v13);
  }
  else
  {
    sub_1C3F6C704(*(void *)v5, *(void *)(v5 + 8));
    sub_1C3F6C704(v15, v14);
    sub_1C3F7E324(v12, v13);
    char v17 = sub_1C3FAD630(v15, v14, v12, v13);
    sub_1C3F7E2CC(v12, v13);
    sub_1C3F7E2CC(v15, v14);
    uint64_t result = sub_1C3F6C6F0(v15, v14);
    if (v17)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v5, a2);
      type metadata accessor for Capsule();
      return swift_dynamicCast();
    }
  }
  if (*(void *)(v5 + *(int *)(a2 + 40)))
  {
    v22[0] = v12;
    v22[1] = v13;
    return sub_1C4051690(v19, v22, v20, a4, v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Capsule.hashState<A>(from:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;

  uint64_t v10 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v36 = v4;
  uint64_t v37 = (char *)&v29 - v15;
  uint64_t v35 = *(int *)(a2 + 40);
  uint64_t v16 = *(void *)(v4 + v35);
  if (!v16)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v17 = v16 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F520(v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v18 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 48);
  uint64_t v33 = a1;
  unint64_t v34 = a3;
  uint64_t v32 = v18;
  v18(&v38, a3, a4);
  uint64_t v5 = v38;
  a1 = v39;
  uint64_t v19 = *(void *)&v12[*(int *)(v10 + 20)];
  if (!*(void *)(v19 + 16))
  {
LABEL_9:
    sub_1C3F7E2CC(v5, a1);
    uint64_t result = sub_1C3F8F634((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v30 = v14;
  uint64_t v31 = a4;
  sub_1C3F7E324(v38, v39);
  uint64_t v20 = sub_1C3F850CC(v5, a1);
  if ((v21 & 1) == 0)
  {
LABEL_8:
    sub_1C3F7E2CC(v5, a1);
    goto LABEL_9;
  }
  uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 48 * v20);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v5, a1);
  sub_1C3F7E2CC(v5, a1);
  sub_1C3F8F634((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v22)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v22 + 88))(&v40, result);
  swift_release();
  uint64_t v24 = (uint64_t)v37;
  uint64_t result = swift_dynamicCast();
  if (*(void *)(v36 + v35))
  {
    v32(&v40, v34, v31);
    unint64_t v25 = v40;
    unint64_t v26 = v41;
    dispatch_semaphore_t v38 = v40;
    uint64_t v39 = v41;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unint64_t v28 = sub_1C4052514(v24, &v38, AssociatedTypeWitness, AssociatedConformanceWitness);
    sub_1C3F7E2CC(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v24, AssociatedTypeWitness);
    return v28;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t Capsule.encapsulateTransient<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C4497B38();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 48))(&v16, a2, a3);
  long long v15 = v16;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  uint64_t v14 = *(void *)(v4 + *(int *)(a1 + 40));
  if (v14)
  {
    swift_getAssociatedConformanceWitness();
    swift_retain();
    return sub_1C443EFBC((uint64_t *)&v15, (uint64_t)v12, v14, AssociatedTypeWitness, a4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall Capsule.finalizeTimestamps()()
{
  uint64_t v1 = v0;
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  id v2 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v3);
  sub_1C3F962E0((uint64_t)v3, qword_1EBBC0C90);
  Capsule.finalizeTimestamps(_:)((uint64_t)v2, v1);
}

uint64_t Capsule.hasDelta(to:)(uint64_t a1, uint64_t a2)
{
  return Capsule.hasDelta(from:)(v2, a2) & 1;
}

uint64_t Capsule.actionUndoing(deltaTo:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return Capsule.actionUndoingDifference(from:)(v2, a1, a2);
}

uint64_t Capsule.actionUndoingDifference(from:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(int *)(a2 + 40);
  if (!*(void *)(v3 + v5))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = *(void *)(result + v5);
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t result = sub_1C405353C(result, v9);
  uint64_t v6 = v9[0];
  if (v9[0])
  {
    uint64_t v8 = v9[1];
    uint64_t v7 = v9[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C444B288(v6, v8, v7, MEMORY[0x1E4FBC898]);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
  a3[2] = v7;
  return result;
}

uint64_t *Capsule.apply(_:)(uint64_t *result, uint64_t a2)
{
  uint64_t v3 = *result;
  if (*result)
  {
    uint64_t v5 = result[1];
    uint64_t v6 = result[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t *)sub_1C3F6C718(a2);
    if (*(void *)(v2 + *(int *)(a2 + 40)))
    {
      v7[0] = v3;
      v7[1] = v5;
      v7[2] = v6;
      sub_1C405C1D8(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t *)sub_1C3F7D128(1, 0);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[3];

  uint64_t v3 = *result;
  if (*result)
  {
    uint64_t v5 = result[1];
    uint64_t v6 = result[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t *)sub_1C3F6C718(a2);
    if (*(void *)(v2 + *(int *)(a2 + 40)))
    {
      v7[0] = v3;
      v7[1] = v5;
      v7[2] = v6;
      sub_1C405C1D8(v7);
      sub_1C444B288(v3, v5, v6, MEMORY[0x1E4FBC898]);
      return (uint64_t *)sub_1C3F7D128(1, 0);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t Capsule.applying(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v6 = *a1;
  if (*a1)
  {
    uint64_t v8 = a1[1];
    uint64_t v7 = a1[2];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, v4, a2);
    v11[0] = v6;
    v11[1] = v8;
    void v11[2] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Capsule.apply(_:)(v11, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
    return v10(a3, v4, a2);
  }
}

uint64_t Capsule.actionUndoingDifference(from:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(int *)(a2 + 40);
  if (*(void *)(v3 + v4))
  {
    uint64_t result = *(void *)(result + v4);
    if (result) {
      return sub_1C405353C(result, a3);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *Capsule.applying(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  if (*a1)
  {
    uint64_t v7 = a1[1];
    uint64_t v6 = a1[2];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, v3, a2);
    v10[0] = v5;
    v10[1] = v7;
    v10[2] = v6;
    return Capsule.apply(_:)(v10, a2);
  }
  else
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
    return (uint64_t *)v9(a3, v3, a2);
  }
}

uint64_t Capsule.getCachedValue<A>(forKey:recompute:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = (uint64_t *)MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v13 = *v10;
  unint64_t v14 = v10[1];
  if (qword_1EA39AFD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_1EA3B8950);
  uint64_t result = swift_endAccess();
  uint64_t v16 = *(void *)(v5 + *(int *)(a3 + 40));
  if (v16)
  {
    uint64_t v17 = (uint64_t *)(v16 + OBJC_IVAR____TtC9Coherence10CapsuleRef_caches);
    swift_beginAccess();
    uint64_t v18 = *v17;
    if (*(void *)(v18 + 16))
    {
      sub_1C3F7E324(v13, v14);
      uint64_t v19 = sub_1C3F850CC(v13, v14);
      if (v20)
      {
        sub_1C3F5E790(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v25);
      }
      else
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
      sub_1C3F7E2CC(v13, v14);
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
    }
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock((os_unfair_lock_t)&dword_1EA3B8950);
    uint64_t v21 = swift_endAccess();
    if (*((void *)&v26 + 1))
    {
      sub_1C3F961BC((uint64_t)&v25, (uint64_t)v24, (uint64_t *)&unk_1EA39AE20);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA39AE20);
      return swift_dynamicCast();
    }
    else
    {
      a2(v21);
      swift_beginAccess();
      os_unfair_lock_lock((os_unfair_lock_t)&dword_1EA3B8950);
      swift_endAccess();
      v24[3] = a4;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
      (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(boxed_opaque_existential_1, v12, a4);
      swift_beginAccess();
      sub_1C3F7E324(v13, v14);
      sub_1C441474C((uint64_t)v24, v13, v14);
      swift_endAccess();
      swift_beginAccess();
      os_unfair_lock_unlock((os_unfair_lock_t)&dword_1EA3B8950);
      swift_endAccess();
      sub_1C3F962E0((uint64_t)&v25, (uint64_t *)&unk_1EA39AE20);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23, v12, a4);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Capsule.getCachedValue<A>(forKey:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *a1;
  unint64_t v8 = a1[1];
  if (qword_1EA39AFD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_1EA3B8950);
  uint64_t result = swift_endAccess();
  uint64_t v11 = *(void *)(v4 + *(int *)(a2 + 40));
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC9Coherence10CapsuleRef_caches);
    swift_beginAccess();
    uint64_t v13 = *v12;
    if (*(void *)(v13 + 16))
    {
      sub_1C3F7E324(v9, v8);
      uint64_t v14 = sub_1C3F850CC(v9, v8);
      if (v15)
      {
        sub_1C3F5E790(*(void *)(v13 + 56) + 32 * v14, (uint64_t)&v18);
      }
      else
      {
        long long v18 = 0u;
        long long v19 = 0u;
      }
      sub_1C3F7E2CC(v9, v8);
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
    }
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock((os_unfair_lock_t)&dword_1EA3B8950);
    swift_endAccess();
    sub_1C3F961BC((uint64_t)&v18, (uint64_t)&v17, (uint64_t *)&unk_1EA39AE20);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA39AE20);
    int v16 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v16 ^ 1u, 1, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Capsule.setCachedValue<A>(_:forKey:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a2;
  unint64_t v9 = a2[1];
  if (qword_1EA39AFD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_1EA3B8950);
  uint64_t result = swift_endAccess();
  if (*(void *)(v4 + *(int *)(a3 + 40)))
  {
    v12[3] = a4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
    swift_beginAccess();
    sub_1C3F7E324(v8, v9);
    sub_1C441474C((uint64_t)v12, v8, v9);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock((os_unfair_lock_t)&dword_1EA3B8950);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Capsule.clearCachedValue(forKey:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  if (qword_1EA39AFD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_1EA3B8950);
  uint64_t result = swift_endAccess();
  if (*(void *)(v2 + *(int *)(a2 + 40)))
  {
    memset(v7, 0, sizeof(v7));
    swift_beginAccess();
    sub_1C3F7E324(v4, v5);
    sub_1C441474C((uint64_t)v7, v4, v5);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock((os_unfair_lock_t)&dword_1EA3B8950);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Capsule<>.init(_:_:id:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  (*(void (**)(char *))(v10 + 16))(v12);
  v17[0] = v14;
  v17[1] = v15;
  Capsule<>.init(_:id:)((uint64_t)v12, v17, a3, a4, a5);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, a3);
}

uint64_t Capsule<>.init(_:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v20 = a3;
  uint64_t v6 = sub_1C4497208();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a2);
  v21[0] = sub_1C3F5E0D0((uint64_t)&unk_1F1F9D040);
  v21[1] = v14;
  sub_1C44971F8();
  uint64_t v15 = sub_1C44971C8();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v17 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_1C4496588();
    sub_1C3F6C6F0(v15, v17);
    Capsule<>.init(_:id:)((uint64_t)v13, v21, a2, v20, v19);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, a2);
  }
  return result;
}

void Capsule<>.init<A>(_:initClosure:)(void *a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  Capsule<>.init<A>(initClosure:)(a2, a3, a4, a5, a6, a7);
}

void (*Capsule<>.init<A>(initClosure:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>))(uint64_t *, void)
{
  uint64_t v46 = a5;
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v45 = a4;
  uint64_t v41 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v43 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1C4496678();
  uint64_t v49 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)a6 = xmmword_1C449BDD0;
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = type metadata accessor for Capsule();
  uint64_t v15 = *(int *)(v14 + 36);
  uint64_t v16 = v14;
  uint64_t v44 = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a6 + v15, 1, 1, a3);
  uint64_t v17 = *(int *)(v16 + 40);
  *(void *)(a6 + v17) = 0;
  sub_1C3F75BA4((uint64_t)v13);
  type metadata accessor for ReplicaState();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v18 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v20 = type metadata accessor for Replica();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  uint64_t v22 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v18 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v13, v42);
  *(void *)(v18 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v18 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  v21((uint64_t)v11, 1, 1, v20);
  uint64_t v23 = v43;
  swift_beginAccess();
  sub_1C3F6722C((uint64_t)v11, v19);
  swift_endAccess();
  uint64_t v24 = sub_1C3F74BE8(v18);
  swift_release();
  *(void *)(a6 + v17) = v24;
  sub_1C4496668();
  uint64_t v50 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9CF50);
  unint64_t v51 = v25;
  uint64_t v26 = sub_1C3F5DF48();
  unint64_t v28 = v27;
  sub_1C4496588();
  sub_1C3F7E2CC(v26, v28);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v22);
  uint64_t v29 = v50;
  unint64_t v30 = v51;
  sub_1C3F6C6F0(*(void *)a6, *(void *)(a6 + 8));
  *(void *)a6 = v29;
  *(void *)(a6 + 8) = v30;
  sub_1C3F6B308(v44);
  v48();
  uint64_t v31 = v45;
  swift_release();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v46 + 48))(&v50, v31);
  uint64_t result = (void (*)(uint64_t *, void))sub_1C3F7E2CC(v29, v30);
  uint64_t v33 = v50;
  unint64_t v34 = v51;
  *(void *)a6 = v50;
  *(void *)(a6 + 8) = v34;
  if (!*(void *)(a6 + v17))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v34 >> 60 == 15)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1C3F7E324(v33, v34);
  swift_beginAccess();
  uint64_t v52 = v33;
  unint64_t v53 = v34;
  swift_retain();
  uint64_t result = (void (*)(uint64_t *, void))sub_1C3F84D7C(&v50, &v52);
  if (*(void *)(v35 + 16))
  {
    uint64_t v36 = *(void *)(v35 + 8);
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (!v37)
    {
      *(void *)(v35 + 8) = v38;
      result(&v50, 0);
      swift_endAccess();
      swift_release();
      uint64_t result = (void (*)(uint64_t *, void))sub_1C3F7E2CC(v52, v53);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_10;
  }
  result(&v50, 0);
  sub_1C3F7E2CC(v52, v53);
  swift_endAccess();
  uint64_t result = (void (*)(uint64_t *, void))swift_release();
LABEL_7:
  unint64_t v39 = *(void *)(a6 + 8);
  if (v39 >> 60 != 15)
  {
    uint64_t v40 = *(void *)a6;
    sub_1C3F7E324(*(void *)a6, *(void *)(a6 + 8));
    swift_beginAccess();
    swift_retain();
    sub_1C3F81BF8(v54, v40, v39);
    swift_endAccess();
    swift_release();
    sub_1C3F7E2CC(v54[0], v54[1]);
    swift_retain();
    sub_1C3F7D128(1, 1);
    swift_release();
    return (void (*)(uint64_t *, void))(*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v23, v31);
  }
LABEL_12:
  __break(1u);
  return result;
}

void Capsule<>.init(_:id:initClosure:)(void *a1@<X0>, long long *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  long long v8 = *a2;
  Capsule<>.init(id:initClosure:)((uint64_t *)&v8, a3, a4, a5, a6, a7);
}

uint64_t Capsule<>.init(id:initClosure:)@<X0>(uint64_t *a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v50 = a5;
  uint64_t v52 = a3;
  unint64_t v53 = a2;
  uint64_t v47 = *(void *)(a4 - 8);
  uint64_t v9 = v47;
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  unint64_t v51 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v54 = (char *)&v43 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v46 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1C4496678();
  uint64_t v15 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v48 = a1[1];
  uint64_t v49 = v18;
  *(_OWORD *)a6 = xmmword_1C449BDD0;
  uint64_t v45 = a4;
  uint64_t v19 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a6 + *(int *)(v19 + 36), 1, 1, a4);
  uint64_t v20 = *(int *)(v19 + 40);
  *(void *)(a6 + v20) = 0;
  sub_1C3F75BA4((uint64_t)v17);
  type metadata accessor for ReplicaState();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v21 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v23 = type metadata accessor for Replica();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v22, 1, 1, v23);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v21 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v17, v44);
  *(void *)(v21 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v21 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  uint64_t v25 = (uint64_t)v46;
  v24((uint64_t)v46, 1, 1, v23);
  swift_beginAccess();
  sub_1C3F6722C(v25, v22);
  swift_endAccess();
  uint64_t v26 = sub_1C3F74BE8(v21);
  swift_release();
  *(void *)(a6 + v20) = v26;
  uint64_t v27 = v45;
  sub_1C3F6C6F0(*(void *)a6, *(void *)(a6 + 8));
  uint64_t v28 = v48;
  *(void *)a6 = v49;
  *(void *)(a6 + 8) = v28;
  uint64_t v29 = v19;
  uint64_t v30 = v47;
  sub_1C3F6B308(v29);
  uint64_t v31 = v54;
  v53();
  swift_release();
  uint64_t v32 = (uint64_t)v51;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v51, v31, v27);
  swift_retain();
  sub_1C3F6BC4C(v32, v27, (uint64_t **)&v57);
  uint64_t v33 = v57;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  unint64_t v35 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v36 = sub_1C3F7E37C(v34);
  sub_1C3F7E4A4(v34);
  sub_1C3F7E37C(v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = MEMORY[0x1E4FBC868];
  uint64_t result = swift_bridgeObjectRelease_n();
  *(void *)&long long v57 = v33;
  *((void *)&v57 + 1) = 1;
  uint64_t v58 = v37;
  uint64_t v59 = v37;
  unint64_t v60 = v35;
  unint64_t v61 = v36;
  unint64_t v39 = *(void *)(a6 + 8);
  if (v39 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v40 = *(void *)a6;
    sub_1C3F7E324(*(void *)a6, *(void *)(a6 + 8));
    v56[0] = v40;
    v56[1] = v39;
    swift_beginAccess();
    sub_1C3F6C8F4(&v57, v56);
    swift_endAccess();
    swift_release();
    sub_1C3F7E2CC(v40, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_release();
    unint64_t v41 = *(void *)(a6 + 8);
    if (v41 >> 60 != 15)
    {
      uint64_t v42 = *(void *)a6;
      sub_1C3F7E324(*(void *)a6, *(void *)(a6 + 8));
      swift_beginAccess();
      swift_retain();
      sub_1C3F81BF8(v55, v42, v41);
      swift_endAccess();
      swift_release();
      sub_1C3F7E2CC(v55[0], v55[1]);
      swift_retain();
      sub_1C3F7D128(1, 1);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v54, v27);
    }
  }
  __break(1u);
  return result;
}

uint64_t Capsule<>.init(id:initClosure:)@<X0>(uint64_t *a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v58 = a3;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  v50[0] = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v68 = (char *)v50 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v55 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1C4496678();
  uint64_t v16 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v18 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  uint64_t v56 = a1[1];
  uint64_t v57 = v19;
  uint64_t v20 = a6;
  *a6 = xmmword_1C449BDD0;
  v50[1] = a5;
  uint64_t v21 = type metadata accessor for Capsule();
  uint64_t v22 = (char *)v20 + *(int *)(v21 + 36);
  uint64_t v52 = v10;
  unint64_t v53 = v20;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v51 = a4;
  v23(v22, 1, 1, a4);
  uint64_t v24 = *(int *)(v21 + 40);
  *(void *)((char *)v20 + v24) = 0;
  sub_1C3F75BA4((uint64_t)v18);
  type metadata accessor for ReplicaState();
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v25 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v27 = type metadata accessor for Replica();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v25 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v18, v54);
  *(void *)(v25 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v25 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  uint64_t v29 = (uint64_t)v55;
  v28((uint64_t)v55, 1, 1, v27);
  swift_beginAccess();
  uint64_t v30 = v26;
  uint64_t v31 = v53;
  sub_1C3F6722C(v29, v30);
  swift_endAccess();
  uint64_t v32 = sub_1C3F74BE8(v25);
  swift_release();
  *(void *)((char *)v31 + v24) = v32;
  uint64_t v33 = v68;
  sub_1C3F6C6F0(*(void *)v31, *((void *)v31 + 1));
  uint64_t v34 = v56;
  *(void *)uint64_t v31 = v57;
  *((void *)v31 + 1) = v34;
  sub_1C3F6B308(v21);
  uint64_t v35 = v60;
  v59();
  if (v35)
  {
    swift_release();
    return (*(uint64_t (**)(_OWORD *, uint64_t))(*(void *)(v21 - 8) + 8))(v31, v21);
  }
  swift_release();
  uint64_t v37 = v50[0];
  uint64_t v38 = v33;
  uint64_t v39 = v51;
  (*(void (**)(void, char *, uint64_t))(v52 + 16))(v50[0], v38, v51);
  swift_retain();
  sub_1C3F6BC4C(v37, v39, (uint64_t **)&v63);
  uint64_t v40 = v63;
  uint64_t v41 = MEMORY[0x1E4FBC860];
  unint64_t v42 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v43 = sub_1C3F7E37C(v41);
  sub_1C3F7E4A4(v41);
  sub_1C3F7E37C(v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = MEMORY[0x1E4FBC868];
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v60 = v40;
  *(void *)&long long v63 = v40;
  *((void *)&v63 + 1) = 1;
  uint64_t v64 = v44;
  uint64_t v65 = v44;
  unint64_t v66 = v42;
  unint64_t v67 = v43;
  unint64_t v45 = *((void *)v31 + 1);
  if (v45 >> 60 == 15)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v46 = v31;
  uint64_t v47 = *(void *)v31;
  sub_1C3F7E324(v47, v45);
  v62[0] = v47;
  v62[1] = v45;
  swift_beginAccess();
  sub_1C3F6C8F4(&v63, v62);
  swift_endAccess();
  swift_release();
  sub_1C3F7E2CC(v47, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_release();
  unint64_t v48 = *((void *)v46 + 1);
  if (v48 >> 60 == 15)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v49 = *(void *)v46;
  sub_1C3F7E324(*(void *)v46, *((void *)v46 + 1));
  swift_beginAccess();
  swift_retain();
  sub_1C3F81BF8(v61, v49, v48);
  swift_endAccess();
  swift_release();
  sub_1C3F7E2CC(v61[0], v61[1]);
  swift_retain();
  sub_1C3F7D128(1, 1);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v68, v39);
}

uint64_t sub_1C4445170(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_1C3F6B308(a1);
  a3(a2);
  return swift_release();
}

uint64_t Capsule<>.observableDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v26 = a4;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = sub_1C4497B38();
  uint64_t v10 = *(void *)(v25 - 8);
  uint64_t result = MEMORY[0x1F4188790](v25);
  uint64_t v13 = (char *)&v24 - v12;
  unint64_t v14 = *(void *)(v5 + 8);
  if (v14 >> 60 == 15)
  {
    __break(1u);
    goto LABEL_8;
  }
  _s27CapsuleReferenceDifferencerCMa();
  unint64_t v15 = *(void *)v5;
  sub_1C3F7E324(*(void *)v5, v14);
  v27.n128_u64[0] = v15;
  v27.n128_u64[1] = v14;
  uint64_t result = (uint64_t)sub_1C444B214((uint64_t *)&v27, a1, v5);
  unint64_t v16 = *(void *)(v5 + 8);
  if (v16 >> 60 == 15)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v17 = (void *)result;
  unint64_t v18 = *(void *)v5;
  sub_1C3F7E324(*(void *)v5, *(void *)(v5 + 8));
  v28.n128_u64[0] = v18;
  v28.n128_u64[1] = v16;
  Ref.init(id:)(&v28, &v27);
  __n128 v19 = v27;
  __n128 v28 = v27;
  sub_1C4445470((uint64_t *)&v28, v8, a3, v13);
  sub_1C3F7E2CC(v19.n128_i64[0], v19.n128_u64[1]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v13, 1, AssociatedTypeWitness) == 1)
  {
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v25);
    uint64_t v20 = 0;
    unint64_t v21 = 0;
    uint64_t v22 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v25);
    swift_beginAccess();
    uint64_t v20 = v17[2];
    unint64_t v21 = v17[3];
    uint64_t v22 = v17[4];
    sub_1C3F7E324(v20, v21);
    swift_bridgeObjectRetain();
    uint64_t result = swift_release();
  }
  uint64_t v23 = v26;
  *uint64_t v26 = v20;
  v23[1] = v21;
  void v23[2] = v22;
  return result;
}

uint64_t Capsule<>.delta(to:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return Capsule<>.observableDifference(from:)(v3, a1, a2, a3);
}

uint64_t sub_1C4445470@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v64 = a4;
  uint64_t v7 = *v4;
  uint64_t v56 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = sub_1C4497B38();
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v52);
  uint64_t v60 = (char *)v50 - v10;
  uint64_t v61 = AssociatedTypeWitness;
  uint64_t v59 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v53 = (char *)v50 - v12;
  uint64_t v57 = *(void *)(a2 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v62 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)v50 - v15;
  uint64_t v16 = *a1;
  unint64_t v17 = a1[1];
  *(void *)&long long v71 = v16;
  *((void *)&v71 + 1) = v17;
  uint64_t v58 = a2;
  uint64_t v18 = type metadata accessor for Ref();
  uint64_t WitnessTable = swift_getWitnessTable();
  Reference.identity.getter(v18, WitnessTable);
  long long v20 = v68;
  long long v63 = v4 + 2;
  swift_beginAccess();
  uint64_t v21 = v4[4];
  long long v66 = v20;
  sub_1C3F7E324(v20, *((unint64_t *)&v20 + 1));
  uint64_t v22 = *(void *)(v7 + 88);
  uint64_t v55 = *(void *)(v7 + 80);
  uint64_t v54 = v22;
  uint64_t v23 = _s20ObservableDifferenceV19ReferenceDifferenceOMa();
  unint64_t v24 = sub_1C3F782A0();
  swift_bridgeObjectRetain();
  MEMORY[0x1C877FC90](&v71, &v66, v21, &type metadata for CRKeyPath, v23, v24);
  swift_bridgeObjectRelease();
  sub_1C3F7E2CC(v20, *((unint64_t *)&v20 + 1));
  if (v72 == 2)
  {
    uint64_t v25 = sub_1C4497B38();
    (*(void (**)(long long *, uint64_t))(*(void *)(v25 - 8) + 8))(&v71, v25);
    long long v68 = 0u;
    long long v69 = 0u;
    long long v66 = v20;
    swift_beginAccess();
    v50[0] = *((void *)&v20 + 1);
    sub_1C3F7E324(v20, *((unint64_t *)&v20 + 1));
    v50[1] = sub_1C4497008();
    void v50[2] = v4 + 4;
    sub_1C4497048();
    swift_endAccess();
    uint64_t v26 = (uint64_t)v4 + *(void *)(*v4 + 104);
    *(void *)&long long v68 = v16;
    *((void *)&v68 + 1) = v17;
    sub_1C3F7E324(v16, v17);
    Ref.subscript.getter(v26, v18);
    sub_1C3F7E2CC(v16, v17);
    uint64_t v27 = (uint64_t)v4 + *(void *)(*v4 + 112);
    *(void *)&long long v68 = v16;
    *((void *)&v68 + 1) = v17;
    sub_1C3F7E324(v16, v17);
    Ref.subscript.getter(v27, v18);
    sub_1C3F7E2CC(v16, v17);
    *((void *)&v69 + 1) = _s27CapsuleReferenceDifferencerCMa();
    uint64_t v70 = &off_1F1F9CF38;
    *(void *)&long long v68 = v4;
    uint64_t v28 = v56;
    uint64_t v29 = *(void (**)(char *, long long *, uint64_t, uint64_t))(v56 + 40);
    swift_retain();
    uint64_t v30 = v60;
    uint64_t v31 = v58;
    v29(v65, &v68, v58, v28);
    sub_1C3F962E0((uint64_t)&v68, &qword_1EBBBC198);
    uint64_t v32 = v59;
    uint64_t v33 = v61;
    int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48))(v30, 1, v61);
    uint64_t v35 = v32;
    if (v34 == 1)
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v60, v52);
      long long v68 = 0uLL;
      *(void *)&long long v69 = 0;
      *((void *)&v69 + 1) = 1;
      unint64_t v36 = v50[0];
      *(void *)&long long v66 = v20;
      *((void *)&v66 + 1) = v50[0];
      swift_beginAccess();
      sub_1C3F7E324(v20, v36);
      sub_1C4497048();
      swift_endAccess();
      sub_1C3F7E2CC(v20, v36);
      uint64_t v37 = *(void (**)(char *, uint64_t))(v57 + 8);
      v37(v62, v31);
      v37(v65, v31);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v64, 1, 1, v33);
    }
    else
    {
      unint64_t v43 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      uint64_t v44 = v53;
      v43(v53, v60, v33);
      *((void *)&v69 + 1) = v33;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v68);
      (*(void (**)(uint64_t *, char *, uint64_t))(v32 + 16))(boxed_opaque_existential_1, v44, v33);
      unint64_t v46 = v50[0];
      *(void *)&long long v66 = v20;
      *((void *)&v66 + 1) = v50[0];
      swift_beginAccess();
      sub_1C3F7E324(v20, v46);
      sub_1C4497048();
      swift_endAccess();
      sub_1C3F7E2CC(v20, v46);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v57 + 8);
      v47(v62, v31);
      v47(v65, v31);
      unint64_t v48 = v64;
      v43(v64, v44, v33);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v48, 0, 1, v33);
    }
  }
  else
  {
    uint64_t v39 = v59;
    uint64_t v40 = v61;
    sub_1C3F7E2CC(v20, *((unint64_t *)&v20 + 1));
    uint64_t v41 = *(void *)(v23 - 8);
    unint64_t v42 = *(void (**)(long long *, long long *, uint64_t))(v41 + 32);
    v42(&v68, &v71, v23);
    v42(&v66, &v68, v23);
    if (v67 >= 2)
    {
      sub_1C3FF2864(&v66, &v71);
      sub_1C3FF2864(&v71, &v66);
      uint64_t v49 = v64;
      swift_dynamicCast();
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v49, 0, 1, v40);
    }
    else
    {
      (*(void (**)(long long *, uint64_t))(v41 + 8))(&v66, v23);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v64, 1, 1, v40);
    }
  }
}

uint64_t sub_1C4445CF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v54 = a4;
  uint64_t v9 = *v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = sub_1C4497B38();
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  unint64_t v43 = (char *)&v43 - v10;
  uint64_t v48 = a2;
  uint64_t v11 = sub_1C4497B38();
  uint64_t v49 = *(void (**)(void, void))(v11 - 8);
  uint64_t v50 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v51 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v43 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v19 = *a1;
  unint64_t v20 = a1[1];
  uint64_t v21 = (uint64_t)v5 + *(void *)(v9 + 104);
  v56.n128_u64[0] = v19;
  v56.n128_u64[1] = v20;
  sub_1C3F7E324(v19, v20);
  uint64_t v45 = a3;
  uint64_t v22 = type metadata accessor for WeakRef();
  WeakRef.subscript.getter(v21, v22);
  sub_1C3F7E2CC(v19, v20);
  uint64_t v23 = (uint64_t)v5 + *(void *)(*v5 + 112);
  v56.n128_u64[0] = v19;
  v56.n128_u64[1] = v20;
  sub_1C3F7E324(v19, v20);
  uint64_t v25 = v49;
  uint64_t v24 = v50;
  WeakRef.subscript.getter(v23, v22);
  sub_1C3F7E2CC(v19, v20);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48);
  unint64_t v53 = v18;
  uint64_t v27 = v18;
  uint64_t v28 = v48;
  LODWORD(v9) = v26(v27, 1, v48);
  uint64_t v29 = (void (*)(void))*((void *)v25 + 2);
  uint64_t v52 = v16;
  uint64_t v30 = v51;
  v29();
  if (v9 == 1 || v26(v30, 1, v28) == 1)
  {
    uint64_t v31 = (void (*)(char *, uint64_t))*((void *)v25 + 1);
    v31(v30, v24);
    uint64_t v32 = v52;
    if (v26(v52, 1, v28) != 1)
    {
      v31(v32, v24);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v53, v24);
      long long v36 = xmmword_1C44A3FC0;
      goto LABEL_9;
    }
    uint64_t v33 = v53;
    int v34 = v26(v53, 1, v28);
    v31(v32, v24);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v33, v24);
    if (v34 != 1)
    {
      long long v36 = xmmword_1C44ABB70;
LABEL_9:
      *uint64_t v54 = v36;
      return result;
    }
LABEL_8:
    long long v36 = xmmword_1C44ABB80;
    goto LABEL_9;
  }
  uint64_t v49 = (void (*)(void, void))*((void *)v25 + 1);
  v49(v30, v24);
  v55.n128_u64[0] = v19;
  v55.n128_u64[1] = v20;
  uint64_t v37 = v45;
  Ref.init(id:)(&v55, &v56);
  __n128 v38 = v56;
  __n128 v55 = v56;
  sub_1C3F7E324(v19, v20);
  uint64_t v39 = v43;
  sub_1C4445470((uint64_t *)&v55, v28, v37, v43);
  sub_1C3F7E2CC(v38.n128_i64[0], v38.n128_u64[1]);
  int v40 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v39, 1);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v47);
  uint64_t v41 = (uint64_t (*)(char *, uint64_t))v49;
  v49(v52, v24);
  uint64_t result = v41(v53, v24);
  if (v40 == 1) {
    goto LABEL_8;
  }
  unint64_t v42 = v54;
  *(void *)uint64_t v54 = v19;
  *((void *)v42 + 1) = v20;
  return sub_1C3F7E324(v19, v20);
}

uint64_t sub_1C444621C()
{
  sub_1C3F7E2CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = type metadata accessor for Capsule();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(void *)(*(void *)v0 + 112), v2);
  return v0;
}

uint64_t sub_1C444630C()
{
  return sub_1C3F5C1A4((void (*)(void))sub_1C444621C);
}

uint64_t sub_1C4446324@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  return sub_1C4445470(a1, a2, a3, a4);
}

uint64_t sub_1C4446348@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X8>)
{
  return sub_1C4445CF0(a1, a2, a3, a4);
}

uint64_t sub_1C4446398@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(void, uint64_t, uint64_t)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v31 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1C4497B38();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = *(void *)(v5 + 16);
  long long v33 = *a1;
  uint64_t v15 = a4(0, a2, a3);
  uint64_t WitnessTable = swift_getWitnessTable();
  Reference.identity.getter(v15, WitnessTable);
  uint64_t v17 = v35;
  unint64_t v18 = v36;
  v32[0] = v35;
  v32[1] = v36;
  uint64_t v19 = _s20ObservableDifferenceV19ReferenceDifferenceOMa();
  unint64_t v20 = sub_1C3F782A0();
  MEMORY[0x1C877FC90](&v33, v32, v14, &type metadata for CRKeyPath, v19, v20);
  sub_1C3F7E2CC(v17, v18);
  if (v34 < 2) {
    goto LABEL_5;
  }
  if (v34 == 2)
  {
    uint64_t v19 = sub_1C4497B38();
LABEL_5:
    (*(void (**)(long long *, uint64_t))(*(void *)(v19 - 8) + 8))(&v33, v19);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v31, 1, 1, AssociatedTypeWitness);
  }
  sub_1C3FF2864(&v33, v37);
  sub_1C3FF2864(v37, &v33);
  int v22 = swift_dynamicCast();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  if (v22)
  {
    uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
    v23(v13, 0, 1, AssociatedTypeWitness);
    uint64_t v25 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v31, v13, AssociatedTypeWitness);
    uint64_t v26 = v25;
    uint64_t v27 = 0;
  }
  else
  {
    v23(v13, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
    uint64_t v26 = v31;
    uint64_t v27 = 1;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v26, v27, 1, AssociatedTypeWitness);
}

uint64_t Capsule<>.ObservableDifference.subscript.getter(void *a1)
{
  uint64_t v2 = *(void *)(*a1 + *MEMORY[0x1E4FBBC10]);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = *((void *)v1 + 2);
  long long v8 = *v1;
  uint64_t v9 = v6;
  Capsule<>.ObservableDifference.root.getter();
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Capsule<>.ObservableDifference.root.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  v7[0] = v1;
  v7[1] = v2;
  sub_1C3F7E324(v1, v2);
  uint64_t v4 = _s20ObservableDifferenceV19ReferenceDifferenceOMa();
  unint64_t v5 = sub_1C3F782A0();
  MEMORY[0x1C877FC90](&v8, v7, v3, &type metadata for CRKeyPath, v4, v5);
  sub_1C3F7E2CC(v1, v2);
  if (v9 >= 2)
  {
    if (v9 != 2)
    {
      sub_1C3FF2864(&v8, v10);
      sub_1C3FF2864(v10, &v8);
      swift_getAssociatedTypeWitness();
      return swift_dynamicCast();
    }
    uint64_t v4 = sub_1C4497B38();
  }
  (*(void (**)(long long *, uint64_t))(*(void *)(v4 - 8) + 8))(&v8, v4);
  uint64_t result = sub_1C4497F58();
  __break(1u);
  return result;
}

void Capsule<>.init(_:initClosure:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  Capsule<>.init(initClosure:)(a2, a3, a4, a5, a6);
}

void (*Capsule<>.init(initClosure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>))(void *, void)
{
  uint64_t v64 = a4;
  uint64_t v65 = a2;
  uint64_t v66 = a1;
  uint64_t v7 = sub_1C4497B38();
  uint64_t v67 = *(void *)(v7 - 8);
  int64_t v68 = v7;
  MEMORY[0x1F4188790](v7);
  long long v63 = (char *)&v57 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1C4496678();
  uint64_t v12 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a5 = xmmword_1C449BDD0;
  uint64_t v15 = type metadata accessor for Capsule();
  uint64_t v16 = *(int *)(v15 + 36);
  uint64_t v17 = v15;
  uint64_t v58 = v15;
  uint64_t v62 = (char *)a5 + v16;
  uint64_t v60 = a3;
  uint64_t v18 = *(void *)(a3 - 8);
  uint64_t v59 = *(void (**)(void))(v18 + 56);
  uint64_t v61 = v18 + 56;
  v59();
  uint64_t v19 = *(int *)(v17 + 40);
  *(void *)((char *)a5 + v19) = 0;
  sub_1C3F75BA4((uint64_t)v14);
  type metadata accessor for ReplicaState();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v20 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v22 = type metadata accessor for Replica();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v14, v57);
  *(void *)(v20 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v20 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  v23((uint64_t)v11, 1, 1, v22);
  swift_beginAccess();
  sub_1C3F6722C((uint64_t)v11, v21);
  swift_endAccess();
  uint64_t v24 = sub_1C3F74BE8(v20);
  swift_release();
  uint64_t v25 = v19;
  *(void *)((char *)a5 + v19) = v24;
  uint64_t v26 = a5;
  sub_1C3F6B308(v58);
  uint64_t v27 = v63;
  ((void (*)(void))v66)();
  swift_release();
  ((void (*)(char *, void, uint64_t, uint64_t))v59)(v27, 0, 1, v60);
  uint64_t v28 = v68;
  (*(void (**)(char *, char *, int64_t))(v67 + 40))(v62, v27, v68);
  uint64_t v29 = type metadata accessor for RetainVisitor();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  unint64_t v32 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v33 = sub_1C3F7E37C(v31);
  *(void *)(v30 + 16) = v32;
  *(void *)(v30 + 24) = v33;
  v71[3] = v29;
  v71[4] = &off_1F1F982A0;
  v71[0] = v30;
  uint64_t v66 = v30;
  swift_retain();
  Optional<A>.visitReferences(_:)((uint64_t)v71, v28, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  swift_beginAccess();
  uint64_t v34 = *(void *)(v30 + 16);
  uint64_t v35 = *(void *)(v34 + 64);
  uint64_t v67 = v34 + 64;
  uint64_t v36 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & v35;
  int64_t v68 = (unint64_t)(v36 + 63) >> 6;
  uint64_t result = (void (*)(void *, void))swift_bridgeObjectRetain();
  int64_t v40 = 0;
  if (v38) {
    goto LABEL_24;
  }
LABEL_6:
  int64_t v41 = v40 + 1;
  if (__OFADD__(v40, 1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v41 < v68)
  {
    unint64_t v42 = *(void *)(v67 + 8 * v41);
    ++v40;
    if (v42) {
      goto LABEL_19;
    }
    int64_t v40 = v41 + 1;
    if (v41 + 1 < v68)
    {
      unint64_t v42 = *(void *)(v67 + 8 * v40);
      if (v42) {
        goto LABEL_19;
      }
      int64_t v40 = v41 + 2;
      if (v41 + 2 < v68)
      {
        unint64_t v42 = *(void *)(v67 + 8 * v40);
        if (v42) {
          goto LABEL_19;
        }
        int64_t v43 = v41 + 3;
        if (v43 < v68)
        {
          unint64_t v42 = *(void *)(v67 + 8 * v43);
          if (v42)
          {
            int64_t v40 = v43;
LABEL_19:
            unint64_t v38 = (v42 - 1) & v42;
            unint64_t v44 = __clz(__rbit64(v42)) + (v40 << 6);
            while (*(void *)((char *)v26 + v25))
            {
              uint64_t v45 = (uint64_t *)(*(void *)(v34 + 48) + 16 * v44);
              uint64_t v47 = *v45;
              unint64_t v46 = v45[1];
              uint64_t v48 = *(void *)(*(void *)(v34 + 56) + 8 * v44);
              swift_beginAccess();
              uint64_t v69 = v47;
              unint64_t v70 = v46;
              sub_1C3F7E324(v47, v46);
              sub_1C3F7E324(v47, v46);
              swift_retain();
              uint64_t result = (void (*)(void *, void))sub_1C3F84D7C(v71, &v69);
              if (*(void *)(v49 + 16))
              {
                uint64_t v50 = *(void *)(v49 + 8);
                BOOL v51 = __OFADD__(v50, v48);
                uint64_t v52 = v50 + v48;
                if (v51)
                {
                  __break(1u);
                  goto LABEL_28;
                }
                *(void *)(v49 + 8) = v52;
                result(v71, 0);
                swift_endAccess();
                swift_release();
                sub_1C3F7E2CC(v47, v46);
                uint64_t result = (void (*)(void *, void))sub_1C3F7E2CC(v69, v70);
                if (!v38) {
                  goto LABEL_6;
                }
              }
              else
              {
                result(v71, 0);
                sub_1C3F7E2CC(v69, v70);
                swift_endAccess();
                sub_1C3F7E2CC(v47, v46);
                uint64_t result = (void (*)(void *, void))swift_release();
                if (!v38) {
                  goto LABEL_6;
                }
              }
LABEL_24:
              unint64_t v53 = __clz(__rbit64(v38));
              v38 &= v38 - 1;
              unint64_t v44 = v53 | (v40 << 6);
            }
            goto LABEL_30;
          }
          while (1)
          {
            int64_t v40 = v43 + 1;
            if (__OFADD__(v43, 1)) {
              break;
            }
            if (v40 >= v68) {
              goto LABEL_25;
            }
            unint64_t v42 = *(void *)(v67 + 8 * v40);
            ++v43;
            if (v42) {
              goto LABEL_19;
            }
          }
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
      }
    }
  }
LABEL_25:
  uint64_t result = (void (*)(void *, void))swift_release();
  uint64_t v54 = *(void *)((char *)v26 + v25);
  if (v54)
  {
    uint64_t v55 = *(void *)(v66 + 24);
    __n128 v56 = (void *)(v54 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
    swift_beginAccess();
    *__n128 v56 = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1C3F7D128(1, 1);
    swift_release();
    return (void (*)(void *, void))swift_release();
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1C44470AC()
{
}

void RefContainer.mutate<A>(_:)()
{
}

uint64_t *sub_1C4447108(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Capsule.subscript.getter(a1, a4, a2, a3);
}

uint64_t *sub_1C444711C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Capsule.subscript.getter(a1, a4, a2, a3);
}

uint64_t sub_1C4447130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Capsule.mutate<A>(_:)(a1, a2, a4, a3, a5);
}

uint64_t sub_1C4447154(void (*a1)(void *))
{
  return Capsule.Ref.mutate<A>(_:)(a1);
}

uint64_t Capsule.Ref.mutate<A>(_:)(void (*a1)(void *))
{
  v4[3] = *v1;
  v4[4] = &protocol witness table for Capsule<A>.Ref;
  v4[0] = v1;
  swift_retain();
  a1(v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

void Capsule<>.init(_:serializedData:)(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
}

uint64_t Capsule<>.init(serializedData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBFC98);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = (char *)&v23 + *(int *)(v13 + 64) - v14;
  sub_1C3FACEA0((unsigned char *)&v23 - v14, (uint64_t)v16, a1, a2);
  if (v5) {
    return sub_1C3F7E2CC(a1, a2);
  }
  __int16 v19 = v17;
  uint64_t v24 = a5;
  *((_WORD *)v15 + 1) = v17;
  uint64_t v20 = (uint64_t)&v12[*(int *)(v9 + 64)];
  char v21 = *v15;
  *uint64_t v12 = *v15;
  *((_WORD *)v12 + 1) = v17;
  sub_1C3F8F520((uint64_t)v16, v20, type metadata accessor for Proto_Document);
  char v27 = v21;
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_1EBBC5A30;
  swift_retain();
  sub_1C3F74E7C(&v27, v19, v20, 0, v22, v25, v26, v24);
  sub_1C3F7E2CC(a1, a2);
  return sub_1C3F962E0((uint64_t)v15, &qword_1EBBBFC98);
}

uint64_t Capsule<>.serializedData()(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  id v4 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v7);
  sub_1C3F962E0((uint64_t)v7, qword_1EBBC0C90);
  LOBYTE(v7[0]) = 1;
  uint64_t v5 = Capsule<>.serializedData(_:version:allowedAppFormats:)((uint64_t)v4, v7, 0, a1, a2);

  return v5;
}

uint64_t Capsule<>.serializedData(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = 1;
  return Capsule<>.serializedData(_:version:allowedAppFormats:)(a1, &v4, 0, a2, a3);
}

uint64_t Capsule<>.serializedData(_:version:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v5 = *a2;
  return Capsule<>.serializedData(_:version:allowedAppFormats:)(a1, &v5, 0, a3, a4);
}

uint64_t sub_1C4447538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Capsule.merge<A>(_:)(a1, a2, *(void *)(a2 + 16), *(void *)(*(void *)(a3 - 8) + 16));
}

uint64_t sub_1C4447548(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  return Capsule<>.serializedData(_:version:)(a1, a2, a3, *(void *)(a4 - 8));
}

uint64_t sub_1C4447564@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Capsule<>.init(serializedData:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t sub_1C4447584(char *a1, char *a2)
{
  return sub_1C443ED44(*a1, *a2);
}

uint64_t sub_1C4447590()
{
  return sub_1C4498628();
}

uint64_t sub_1C4447608()
{
  sub_1C4497248();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C444766C()
{
  return sub_1C4498628();
}

uint64_t sub_1C44476E0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C4498018();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C4447740(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 0x73746E65746E6F63;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C4447774()
{
  if (*v0) {
    return 0x73746E65746E6F63;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1C44477A4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C4498018();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C4447808(uint64_t a1)
{
  unint64_t v2 = sub_1C444D6BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C4447844(uint64_t a1)
{
  unint64_t v2 = sub_1C444D6BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C4447880(void *a1)
{
  size_t v3 = v2;
  uint64_t v140 = *MEMORY[0x1E4F143B8];
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1128);
  unint64_t v105 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v107 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v113 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v95 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C4498688();
  uint64_t v11 = type metadata accessor for Capsule();
  unint64_t v12 = *(void *)(v3 + 8);
  if (v12 >> 60 == 15) {
    goto LABEL_150;
  }
  uint64_t v13 = (void (**)(char *, uint64_t))v11;
  uint64_t v1 = *(void *)v3;
  sub_1C3F7E324(*(void *)v3, *(void *)(v3 + 8));
  uint64_t v133 = v1;
  uint64_t v134 = v12;
  sub_1C3FB05E4((uint64_t)v13, (uint64_t)v10);
  sub_1C3F7E324(v1, v12);
  uint64_t v14 = *(void *)&v10[*(int *)(v6 + 20)];
  if (!*(void *)(v14 + 16)) {
    goto LABEL_152;
  }
  uint64_t v106 = v13;
  unint64_t v111 = v6;
  size_t v112 = v3;
  sub_1C3F7E324(v1, v12);
  uint64_t v15 = sub_1C3F850CC(v1, v12);
  if ((v16 & 1) == 0) {
    goto LABEL_151;
  }
  __int16 v17 = (uint64_t *)(*(void *)(v14 + 56) + 48 * v15);
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  char v21 = (char *)v17[2];
  uint64_t v20 = v17[3];
  uint64_t v23 = v17[4];
  uint64_t v22 = v17[5];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v1, v12);
  sub_1C3F7E2CC(v1, v12);
  sub_1C3F8F634((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  *(void *)&long long __s1 = v18;
  *((void *)&__s1 + 1) = v19;
  int64_t v128 = v21;
  uint64_t v129 = v20;
  uint64_t v130 = v23;
  uint64_t v131 = v22;
  uint64_t v24 = v114;
  sub_1C4448994(&v133, (uint64_t *)&__s1, (uint64_t)v138);
  if (!v24)
  {
    uint64_t v110 = v1;
    unint64_t v109 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C3F7E2CC(v133, v134);
    uint64_t v25 = v113;
    sub_1C3FB05E4((uint64_t)v106, v113);
    uint64_t v26 = *(void *)(v25 + *(int *)(v111 + 20));
    uint64_t v27 = -1 << *(unsigned char *)(v26 + 32);
    uint64_t v28 = ~v27;
    uint64_t v29 = -v27;
    if (v29 < 64) {
      uint64_t v30 = ~(-1 << v29);
    }
    else {
      uint64_t v30 = -1;
    }
    uint64_t v31 = v30 & *(void *)(v26 + 64);
    swift_bridgeObjectRetain();
    sub_1C3F8F634(v25, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v133 = v26;
    uint64_t v134 = v26 + 64;
    uint64_t v135 = v28;
    uint64_t v136 = 0;
    uint64_t v137 = v31;
    sub_1C3FB0038((uint64_t)&__s1);
    uint64_t v1 = v130;
    if (!v130)
    {
LABEL_125:
      sub_1C3F7FCE8();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
    }
    unint64_t v12 = *((void *)&__s1 + 1);
    uint64_t v32 = __s1;
    uint64_t v10 = v128;
    uint64_t v33 = v131;
    uint64_t v34 = v132;
    uint64_t v106 = (void (**)(char *, uint64_t))(v105 + 8);
    unint64_t v35 = v109;
    unint64_t v36 = v109 >> 62;
    uint64_t v37 = v110;
    unint64_t v100 = HIDWORD(v110);
    BOOL v38 = __OFSUB__(HIDWORD(v110), v110);
    BOOL v104 = v38;
    size_t v103 = HIDWORD(v110) - (int)v110;
    size_t v112 = BYTE6(v109);
    unint64_t v105 = v109 & 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v102 = (int)v110;
    uint64_t v99 = v110 >> 32;
    uint64_t v98 = (v110 >> 32) - (int)v110;
    unint64_t v111 = v109 >> 62;
    while (1)
    {
      uint64_t v113 = v34;
      uint64_t v114 = v33;
      sub_1C3F7E324(v37, v35);
      uint64_t v39 = 0;
      switch(v12 >> 62)
      {
        case 1uLL:
          LODWORD(v39) = HIDWORD(v32) - v32;
          if (__OFSUB__(HIDWORD(v32), v32))
          {
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            sub_1C3F7E2CC(v1, v12);
LABEL_152:
            sub_1C3F7E2CC(v1, v12);
            sub_1C3F8F634((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
            __break(1u);
          }
          uint64_t v39 = (int)v39;
LABEL_22:
          size_t v43 = v112;
          switch((int)v36)
          {
            case 1:
              size_t v43 = v103;
              if (v104) {
                goto LABEL_129;
              }
              goto LABEL_26;
            case 2:
              uint64_t v45 = *(void *)(v37 + 16);
              uint64_t v44 = *(void *)(v37 + 24);
              BOOL v42 = __OFSUB__(v44, v45);
              size_t v43 = v44 - v45;
              if (!v42) {
                goto LABEL_26;
              }
              goto LABEL_130;
            case 3:
              if (v39) {
                goto LABEL_37;
              }
              goto LABEL_14;
            default:
LABEL_26:
              if (v39 != v43)
              {
LABEL_37:
                sub_1C3F7E2CC(v37, v35);
LABEL_38:
                swift_beginAccess();
                __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v138, v139);
                sub_1C444D6BC();
                uint64_t v50 = v107;
                sub_1C4498148();
                swift_endAccess();
                *(void *)&long long __s1 = v32;
                *((void *)&__s1 + 1) = v12;
                LOBYTE(__s2) = 0;
                sub_1C444D710();
                uint64_t v51 = v108;
                sub_1C4498048();
                *(void *)&long long __s1 = v10;
                LOBYTE(__s2) = 1;
                swift_retain();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1140);
                sub_1C444D764();
                sub_1C4498048();
                swift_release();
                (*v106)(v50, v51);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                sub_1C3F7E2CC(v32, v12);
                unint64_t v35 = v109;
                uint64_t v37 = v110;
                goto LABEL_16;
              }
              if (v39 < 1)
              {
LABEL_14:
                sub_1C3F7E2CC(v37, v35);
                goto LABEL_15;
              }
              break;
          }
          switch(v12 >> 62)
          {
            case 1uLL:
              if ((int)v32 > v32 >> 32) {
                goto LABEL_131;
              }
              sub_1C3F7E324(v32, v12);
              uint64_t v52 = sub_1C4496298();
              if (v52)
              {
                uint64_t v53 = v52;
                uint64_t v54 = sub_1C44962C8();
                if (__OFSUB__((int)v32, v54)) {
                  goto LABEL_133;
                }
                uint64_t v101 = (char *)(v53 + (int)v32 - v54);
              }
              else
              {
                uint64_t v101 = 0;
              }
              unint64_t v35 = v109;
              sub_1C44962B8();
              uint64_t v37 = v110;
              if (v111)
              {
                if (v111 == 1)
                {
                  if (v99 < v102) {
                    goto LABEL_142;
                  }
                  swift_retain();
                  unint64_t v70 = (char *)sub_1C4496298();
                  if (v70)
                  {
                    uint64_t v71 = sub_1C44962C8();
                    if (__OFSUB__(v102, v71)) {
                      goto LABEL_149;
                    }
                    v70 += v102 - v71;
                  }
                  uint64_t v72 = sub_1C44962B8();
                  size_t v73 = v98;
                  if (v72 < v98) {
                    size_t v73 = v72;
                  }
                  if (!v101) {
                    goto LABEL_157;
                  }
                  if (!v70) {
                    goto LABEL_158;
                  }
                  int v63 = memcmp(v101, v70, v73);
                  uint64_t v37 = v110;
                  sub_1C3F7E2CC(v110, v35);
                }
                else
                {
                  uint64_t v88 = *(void *)(v110 + 16);
                  uint64_t v97 = *(char **)(v110 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v89 = (char *)sub_1C4496298();
                  if (v89)
                  {
                    uint64_t v90 = sub_1C44962C8();
                    if (__OFSUB__(v88, v90)) {
                      goto LABEL_148;
                    }
                    v89 += v88 - v90;
                  }
                  BOOL v42 = __OFSUB__(v97, v88);
                  uint64_t v91 = &v97[-v88];
                  if (v42) {
                    goto LABEL_143;
                  }
                  uint64_t v92 = sub_1C44962B8();
                  if (v92 >= (uint64_t)v91) {
                    size_t v93 = (size_t)v91;
                  }
                  else {
                    size_t v93 = v92;
                  }
                  if (!v101) {
                    goto LABEL_165;
                  }
                  unint64_t v35 = v109;
                  if (!v89) {
                    goto LABEL_166;
                  }
                  int v63 = memcmp(v101, v89, v93);
                  swift_release();
                  uint64_t v37 = v110;
                  swift_release();
                }
              }
              else
              {
                LODWORD(__s1) = v110;
                BYTE4(__s1) = v100;
                *(_WORD *)((char *)&__s1 + 5) = *(_WORD *)((char *)&v110 + 5);
                BYTE7(__s1) = HIBYTE(v110);
                WORD4(__s1) = v35;
                BYTE10(__s1) = BYTE2(v35);
                BYTE11(__s1) = BYTE3(v35);
                BYTE12(__s1) = BYTE4(v35);
                BYTE13(__s1) = BYTE5(v35);
                if (!v101) {
                  goto LABEL_164;
                }
                int v63 = memcmp(v101, &__s1, v112);
              }
              uint64_t v64 = v32;
              unint64_t v65 = v12;
              goto LABEL_122;
            case 2uLL:
              uint64_t v55 = *(void *)(v32 + 16);
              swift_retain();
              swift_retain();
              uint64_t v56 = sub_1C4496298();
              uint64_t v101 = (char *)(v12 & 0x3FFFFFFFFFFFFFFFLL);
              if (v56)
              {
                uint64_t v57 = v56;
                uint64_t v58 = sub_1C44962C8();
                if (__OFSUB__(v55, v58)) {
                  goto LABEL_132;
                }
                uint64_t v97 = (char *)(v57 + v55 - v58);
              }
              else
              {
                uint64_t v97 = 0;
              }
              unint64_t v35 = v109;
              uint64_t v37 = v110;
              sub_1C44962B8();
              if (v111)
              {
                if (v111 != 1)
                {
                  uint64_t v82 = *(void *)(v37 + 16);
                  uint64_t v96 = *(void *)(v37 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v83 = (char *)sub_1C4496298();
                  if (v83)
                  {
                    uint64_t v84 = sub_1C44962C8();
                    if (__OFSUB__(v82, v84)) {
                      goto LABEL_146;
                    }
                    v83 += v82 - v84;
                  }
                  BOOL v42 = __OFSUB__(v96, v82);
                  int64_t v85 = v96 - v82;
                  if (v42) {
                    goto LABEL_141;
                  }
                  uint64_t v86 = sub_1C44962B8();
                  if (v86 >= v85) {
                    size_t v87 = v85;
                  }
                  else {
                    size_t v87 = v86;
                  }
                  if (!v97) {
                    goto LABEL_162;
                  }
                  unint64_t v35 = v109;
                  if (!v83) {
                    goto LABEL_163;
                  }
                  int v63 = memcmp(v97, v83, v87);
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v37 = v110;
                  swift_release();
                  goto LABEL_123;
                }
                if (v99 < v102) {
                  goto LABEL_136;
                }
                swift_retain();
                uint64_t v66 = (char *)sub_1C4496298();
                if (v66)
                {
                  uint64_t v67 = sub_1C44962C8();
                  if (__OFSUB__(v102, v67)) {
                    goto LABEL_147;
                  }
                  v66 += v102 - v67;
                }
                uint64_t v68 = sub_1C44962B8();
                size_t v69 = v98;
                if (v68 < v98) {
                  size_t v69 = v68;
                }
                if (!v97) {
                  goto LABEL_155;
                }
                if (!v66) {
                  goto LABEL_156;
                }
                int v63 = memcmp(v97, v66, v69);
                uint64_t v37 = v110;
                sub_1C3F7E2CC(v110, v35);
              }
              else
              {
                LOWORD(__s1) = v37;
                BYTE2(__s1) = BYTE2(v37);
                BYTE3(__s1) = BYTE3(v37);
                BYTE4(__s1) = v100;
                BYTE5(__s1) = BYTE5(v37);
                BYTE6(__s1) = BYTE6(v37);
                BYTE7(__s1) = HIBYTE(v37);
                WORD4(__s1) = v35;
                BYTE10(__s1) = BYTE2(v35);
                BYTE11(__s1) = BYTE3(v35);
                BYTE12(__s1) = BYTE4(v35);
                BYTE13(__s1) = BYTE5(v35);
                if (!v97) {
                  goto LABEL_161;
                }
                int v63 = memcmp(v97, &__s1, v112);
              }
              swift_release();
              swift_release();
              goto LABEL_123;
            case 3uLL:
              *(void *)((char *)&__s1 + 6) = 0;
              *(void *)&long long __s1 = 0;
              if (!v36) {
                goto LABEL_55;
              }
              if (v36 == 1)
              {
                if (v99 < v102) {
                  goto LABEL_135;
                }
                sub_1C3F7E324(v37, v35);
                uint64_t v59 = sub_1C4496298();
                if (!v59) {
                  goto LABEL_154;
                }
                uint64_t v47 = v59;
                uint64_t v60 = sub_1C44962C8();
                uint64_t v49 = v102 - v60;
                if (__OFSUB__(v102, v60)) {
                  goto LABEL_140;
                }
LABEL_51:
                uint64_t v61 = sub_1C44962B8();
                if (v61 >= v98) {
                  size_t v62 = v98;
                }
                else {
                  size_t v62 = v61;
                }
                int v63 = memcmp(&__s1, (const void *)(v47 + v49), v62);
                uint64_t v37 = v110;
                uint64_t v64 = v110;
                unint64_t v35 = v109;
                unint64_t v65 = v109;
LABEL_122:
                sub_1C3F7E2CC(v64, v65);
LABEL_123:
                sub_1C3F7E2CC(v37, v35);
                if (v63) {
                  goto LABEL_38;
                }
                goto LABEL_15;
              }
              uint64_t v79 = *(void *)(v37 + 16);
              uint64_t v101 = *(char **)(v37 + 24);
              swift_retain();
              swift_retain();
              uint64_t v75 = (char *)sub_1C4496298();
              if (v75)
              {
                uint64_t v80 = sub_1C44962C8();
                if (__OFSUB__(v79, v80)) {
                  goto LABEL_145;
                }
                v75 += v79 - v80;
              }
              BOOL v42 = __OFSUB__(v101, v79);
              unint64_t v77 = &v101[-v79];
              if (v42) {
                goto LABEL_138;
              }
              uint64_t v78 = sub_1C44962B8();
              if (!v75) {
                goto LABEL_160;
              }
LABEL_91:
              if (v78 >= (uint64_t)v77) {
                size_t v81 = (size_t)v77;
              }
              else {
                size_t v81 = v78;
              }
              LODWORD(v101) = memcmp(&__s1, v75, v81);
              swift_release();
              uint64_t v37 = v110;
              swift_release();
              unint64_t v35 = v109;
              sub_1C3F7E2CC(v37, v109);
              if (v101) {
                goto LABEL_38;
              }
LABEL_15:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              sub_1C3F7E2CC(v32, v12);
LABEL_16:
              sub_1C3FB0038((uint64_t)&__s1);
              unint64_t v12 = *((void *)&__s1 + 1);
              uint64_t v32 = __s1;
              uint64_t v10 = v128;
              uint64_t v1 = v130;
              uint64_t v33 = v131;
              uint64_t v34 = v132;
              LODWORD(v36) = v111;
              if (!v130) {
                goto LABEL_125;
              }
              break;
            default:
              *(void *)&long long __s1 = v32;
              WORD4(__s1) = v12;
              BYTE10(__s1) = BYTE2(v12);
              BYTE11(__s1) = BYTE3(v12);
              BYTE12(__s1) = BYTE4(v12);
              BYTE13(__s1) = BYTE5(v12);
              if (!v36)
              {
LABEL_55:
                __int16 __s2 = v37;
                char v116 = BYTE2(v37);
                char v117 = BYTE3(v37);
                char v118 = v100;
                char v119 = BYTE5(v37);
                char v120 = BYTE6(v37);
                char v121 = HIBYTE(v37);
                __int16 v122 = v35;
                char v123 = BYTE2(v35);
                char v124 = BYTE3(v35);
                char v125 = BYTE4(v35);
                char v126 = BYTE5(v35);
                int v63 = memcmp(&__s1, &__s2, v112);
                goto LABEL_123;
              }
              if (v36 == 1)
              {
                if (v99 < v102) {
                  goto LABEL_134;
                }
                sub_1C3F7E324(v37, v35);
                uint64_t v46 = sub_1C4496298();
                if (!v46)
                {
                  sub_1C44962B8();
                  __break(1u);
LABEL_154:
                  sub_1C44962B8();
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
LABEL_157:
                  __break(1u);
LABEL_158:
                  __break(1u);
LABEL_159:
                  __break(1u);
LABEL_160:
                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
LABEL_164:
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
                  JUMPOUT(0x1C4448964);
                }
                uint64_t v47 = v46;
                uint64_t v48 = sub_1C44962C8();
                uint64_t v49 = v102 - v48;
                if (__OFSUB__(v102, v48)) {
                  goto LABEL_139;
                }
                goto LABEL_51;
              }
              uint64_t v74 = *(void *)(v37 + 16);
              uint64_t v101 = *(char **)(v37 + 24);
              swift_retain();
              swift_retain();
              uint64_t v75 = (char *)sub_1C4496298();
              if (v75)
              {
                uint64_t v76 = sub_1C44962C8();
                if (__OFSUB__(v74, v76)) {
                  goto LABEL_144;
                }
                v75 += v74 - v76;
              }
              BOOL v42 = __OFSUB__(v101, v74);
              unint64_t v77 = &v101[-v74];
              if (v42) {
                goto LABEL_137;
              }
              uint64_t v78 = sub_1C44962B8();
              if (!v75) {
                goto LABEL_159;
              }
              goto LABEL_91;
          }
          break;
        case 2uLL:
          uint64_t v41 = *(void *)(v32 + 16);
          uint64_t v40 = *(void *)(v32 + 24);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v39 = v40 - v41;
          if (!v42) {
            goto LABEL_22;
          }
          goto LABEL_128;
        case 3uLL:
          goto LABEL_22;
        default:
          uint64_t v39 = BYTE6(v12);
          goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C3F7E2CC(v133, v134);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
}

uint64_t sub_1C4448994(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1128);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v14 = *a2;
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1(a3, *(void *)(a3 + 24));
  sub_1C444D6BC();
  sub_1C4498148();
  swift_endAccess();
  uint64_t v15 = v12;
  uint64_t v16 = v11;
  char v17 = 0;
  sub_1C444D710();
  sub_1C4498048();
  if (!v3)
  {
    uint64_t v15 = v14;
    char v17 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1140);
    sub_1C444D764();
    sub_1C4498048();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C4448B60(void *a1)
{
  return sub_1C4447880(a1);
}

uint64_t Capsule<>.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = type metadata accessor for _CapsuleCodable();
  uint64_t v14 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v15[-v10 - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  uint64_t v12 = type metadata accessor for Capsule();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v11, v8, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C4498698();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
  swift_getWitnessTable();
  sub_1C4498348();
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v11, v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1C4448DB4(void *a1, uint64_t a2)
{
  return Capsule<>.encode(to:)(a1, a2);
}

double CapsuleMergeableDelta.init<A>(_:serializedData:in:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  id v26 = a1;
  uint64_t v23 = a7;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - v15, a4, v13);
  CapsuleMergeableDelta.init<A>(serializedData:in:)(a2, a3, (uint64_t)v16, a5, a6, (uint64_t)v24);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  if (!v7)
  {
    uint64_t v18 = v25;
    double result = *(double *)v24;
    long long v19 = v24[1];
    long long v20 = v24[2];
    char v21 = v23;
    *uint64_t v23 = v24[0];
    v21[1] = v19;
    uint64_t v21[2] = v20;
    *((void *)v21 + 6) = v18;
  }
  return result;
}

double CapsuleMergeableDelta.init<A>(serializedData:in:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  type metadata accessor for CRDecoder(0);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = v14;
  uint64_t v15 = MEMORY[0x1E4FBC868];
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v15;
  *(unsigned char *)(v13 + 48) = 0;
  *(void *)(v13 + 56) = 0;
  uint64_t v16 = v13 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  uint64_t v17 = type metadata accessor for Proto_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = v13 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  uint64_t v19 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)(v13 + 16) = 0;
  swift_release();
  *(unsigned char *)(v13 + 49) = 2;
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  long long v20 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))qword_1EBBC5A30;
  swift_retain();
  sub_1C3FFD070(a1, a2, a3, v20, a4, a5, v26);
  swift_release();
  swift_setDeallocating();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3F962E0(v13 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
  sub_1C3F962E0(v13 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
  swift_deallocClassInstance();
  sub_1C3F7E2CC(a1, a2);
  uint64_t v21 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a3, v21);
  if (!v6)
  {
    uint64_t v23 = v27;
    double result = *(double *)v26;
    long long v24 = v26[1];
    long long v25 = v26[2];
    *(_OWORD *)a6 = v26[0];
    *(_OWORD *)(a6 + 16) = v24;
    *(_OWORD *)(a6 + 32) = v25;
    *(void *)(a6 + 48) = v23;
  }
  return result;
}

double CapsuleMergeableDelta.init<A>(serializedData:version:in:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  uint64_t v30 = a7;
  char v13 = *a3;
  type metadata accessor for CRDecoder(0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = v15;
  uint64_t v16 = MEMORY[0x1E4FBC868];
  *(void *)(v14 + 32) = v15;
  *(void *)(v14 + 40) = v16;
  *(unsigned char *)(v14 + 48) = 0;
  *(void *)(v14 + 56) = 0;
  uint64_t v17 = v14 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  uint64_t v18 = type metadata accessor for Proto_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = v14 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  uint64_t v20 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *(void *)(v14 + 16) = 0;
  swift_release();
  *(unsigned char *)(v14 + 49) = v13;
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  uint64_t v21 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))qword_1EBBC5A30;
  swift_retain();
  sub_1C3FFD070(a1, a2, a4, v21, a5, a6, v28);
  swift_release();
  swift_setDeallocating();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3F962E0(v14 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
  sub_1C3F962E0(v14 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
  swift_deallocClassInstance();
  sub_1C3F7E2CC(a1, a2);
  uint64_t v22 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a4, v22);
  if (!v7)
  {
    uint64_t v24 = v29;
    double result = *(double *)v28;
    long long v25 = v28[1];
    long long v26 = v28[2];
    uint64_t v27 = v30;
    *uint64_t v30 = v28[0];
    v27[1] = v25;
    v27[2] = v26;
    *((void *)v27 + 6) = v24;
  }
  return result;
}

uint64_t CapsuleMergeableDelta.serializedData(context:version:)(void *a1, unsigned __int8 *a2)
{
  unsigned __int8 v3 = *a2;
  return CapsuleMergeableDelta.deltaSerializedData(_:version:)(a1, &v3);
}

uint64_t CapsuleMergeableDelta.deltaSerializedData(_:version:)(void *a1, unsigned __int8 *a2)
{
  uint64_t v48 = a1;
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v46 = type metadata accessor for Proto_Document(0);
  uint64_t v4 = MEMORY[0x1F4188790](v46);
  uint64_t v47 = (uint64_t)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v45 - v6;
  int v50 = *a2;
  uint64_t v9 = *v2;
  uint64_t v8 = v2[1];
  uint64_t v11 = v2[2];
  uint64_t v10 = v2[3];
  uint64_t v13 = v2[4];
  uint64_t v12 = v2[5];
  uint64_t v14 = v2[6];
  *(void *)&long long v59 = *v2;
  *((void *)&v59 + 1) = v8;
  uint64_t v60 = v11;
  uint64_t v61 = v10;
  uint64_t v62 = v13;
  uint64_t v63 = v12;
  uint64_t v64 = v14;
  if (CapsuleMergeableDelta.needsToFinalizeTimestamps()())
  {
    *(void *)&long long v59 = v9;
    *((void *)&v59 + 1) = v8;
    uint64_t v60 = v11;
    uint64_t v61 = v10;
    uint64_t v62 = v13;
    uint64_t v63 = v12;
    uint64_t v64 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v48;
    CapsuleMergeableDelta.finalizeTimestamps(_:)();
    type metadata accessor for CREncoder();
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v18 = MEMORY[0x1E4FBC868];
    *(void *)(v16 + 32) = MEMORY[0x1E4FBC868];
    *(void *)(v16 + 40) = v17;
    *(void *)(v16 + 48) = v17;
    *(void *)(v16 + 56) = v18;
    *(void *)(v16 + 64) = v17;
    *(void *)(v16 + 80) = 0;
    *(void *)(v16 + 88) = 0;
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = v17;
    *(unsigned char *)(v16 + 72) = v50;
    uint64_t v19 = *((void *)&v59 + 1);
    uint64_t v20 = v60;
    uint64_t v21 = v61;
    uint64_t v22 = v7;
    uint64_t v24 = v62;
    uint64_t v23 = v63;
    uint64_t v25 = v64;
    uint64_t v47 = v59;
    long long v53 = v59;
    uint64_t v54 = v60;
    uint64_t v55 = v61;
    uint64_t v56 = v62;
    uint64_t v57 = v63;
    uint64_t v58 = v64;
    id v26 = v15;
    uint64_t v48 = v22;
    uint64_t v27 = (uint64_t)v22;
    uint64_t v28 = v16;
    uint64_t v29 = v49;
    sub_1C4006A2C(v26, (uint64_t)&v53, v27);
    if (!v29)
    {
      v45[0] = v25;
      v45[1] = v23;
      v45[2] = v24;
      v45[3] = v21;
      v45[4] = v20;
      uint64_t v49 = v19;
      memset(v51, 0, sizeof(v51));
      unsigned __int8 v52 = 8;
      sub_1C3F73B18((uint64_t)v51, (uint64_t)&v51[8], (v50 + 4), 0);
      *(void *)&long long v53 = *(void *)v51;
      *((void *)&v53 + 1) = *(unsigned int *)&v51[8] | ((unint64_t)v51[12] << 32) | ((unint64_t)v51[13] << 40) | ((unint64_t)v52 << 48);
      sub_1C442412C();
      uint64_t v37 = (uint64_t)v48;
      uint64_t v42 = sub_1C4496AA8();
      unint64_t v44 = v43;
      sub_1C4496588();
      sub_1C3F7E2CC(v42, v44);
      uint64_t v28 = v53;
      sub_1C3F8F634(v37, type metadata accessor for Proto_Document);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for CREncoder();
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v32 = MEMORY[0x1E4FBC868];
    *(void *)(v30 + 32) = MEMORY[0x1E4FBC868];
    *(void *)(v30 + 40) = v31;
    *(void *)(v30 + 48) = v31;
    *(void *)(v30 + 56) = v32;
    *(void *)(v30 + 64) = v31;
    *(void *)(v30 + 80) = 0;
    *(void *)(v30 + 88) = 0;
    uint64_t v33 = v48;
    *(void *)(v30 + 16) = v48;
    *(void *)(v30 + 24) = v31;
    *(unsigned char *)(v30 + 72) = v50;
    *(void *)&long long v59 = v9;
    *((void *)&v59 + 1) = v8;
    uint64_t v60 = v11;
    uint64_t v61 = v10;
    uint64_t v62 = v13;
    uint64_t v63 = v12;
    uint64_t v64 = v14;
    id v34 = v33;
    uint64_t v35 = v47;
    uint64_t v28 = v30;
    uint64_t v36 = v49;
    sub_1C4006A2C(v34, (uint64_t)&v59, v47);
    if (!v36)
    {
      *(void *)((char *)&v53 + 6) = 0;
      *(void *)&long long v53 = 0;
      BYTE14(v53) = 8;
      sub_1C3F73B18((uint64_t)&v53, (uint64_t)&v53 + 8, (v50 + 4), 0);
      *(void *)&long long v59 = v53;
      *((void *)&v59 + 1) = DWORD2(v53) | ((unint64_t)BYTE12(v53) << 32) | ((unint64_t)BYTE13(v53) << 40) | ((unint64_t)BYTE14(v53) << 48);
      sub_1C442412C();
      uint64_t v39 = sub_1C4496AA8();
      unint64_t v41 = v40;
      sub_1C4496588();
      sub_1C3F7E2CC(v39, v41);
      uint64_t v28 = v59;
      sub_1C3F8F634(v35, type metadata accessor for Proto_Document);
    }
    swift_release();
  }
  return v28;
}

Swift::Bool __swiftcall CapsuleMergeableDelta.needsToFinalizeTimestamps()()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v35 = *(void *)(v0 + 40);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v36 = (unint64_t)(v3 + 63) >> 6;
  Swift::Bool result = swift_bridgeObjectRetain_n();
  int64_t v7 = 0;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    uint64_t v13 = *(void *)(*(void *)(v1 + 56) + 24 * v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C3F7E324(v11, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = *(void *)(v13 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v11, v12);
    swift_release();
    swift_bridgeObjectRelease();
    Swift::Bool result = swift_bridgeObjectRelease();
    if (v14)
    {
      Swift::Bool v18 = 1;
LABEL_52:
      swift_release();
      swift_bridgeObjectRelease();
      return v18;
    }
  }
  int64_t v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v15 >= v36) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v2 + 8 * v15);
  ++v7;
  if (v16) {
    goto LABEL_24;
  }
  int64_t v7 = v15 + 1;
  if (v15 + 1 >= v36) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v2 + 8 * v7);
  if (v16) {
    goto LABEL_24;
  }
  int64_t v7 = v15 + 2;
  if (v15 + 2 >= v36) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v2 + 8 * v7);
  if (v16) {
    goto LABEL_24;
  }
  int64_t v7 = v15 + 3;
  if (v15 + 3 >= v36) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v2 + 8 * v7);
  if (v16) {
    goto LABEL_24;
  }
  int64_t v7 = v15 + 4;
  if (v15 + 4 >= v36) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v2 + 8 * v7);
  if (v16)
  {
LABEL_24:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v9 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v15 + 5;
  if (v17 < v36)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v7 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (v7 >= v36) {
          goto LABEL_26;
        }
        unint64_t v16 = *(void *)(v2 + 8 * v7);
        ++v17;
        if (v16) {
          goto LABEL_24;
        }
      }
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    int64_t v7 = v17;
    goto LABEL_24;
  }
LABEL_26:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = v35 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(v35 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v35 + 64);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  Swift::Bool result = swift_bridgeObjectRetain_n();
  int64_t v24 = 0;
  while (v22)
  {
    unint64_t v25 = __clz(__rbit64(v22));
    v22 &= v22 - 1;
    unint64_t v26 = v25 | (v24 << 6);
LABEL_30:
    uint64_t v27 = (uint64_t *)(*(void *)(v35 + 48) + 16 * v26);
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    uint64_t v30 = *(void *)(*(void *)(v35 + 56) + 24 * v26 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C3F7E324(v28, v29);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = *(void *)(v30 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v28, v29);
    swift_release();
    swift_bridgeObjectRelease();
    Swift::Bool result = swift_bridgeObjectRelease();
    if (v31)
    {
      Swift::Bool v18 = 1;
      goto LABEL_52;
    }
  }
  int64_t v32 = v24 + 1;
  if (__OFADD__(v24, 1)) {
    goto LABEL_54;
  }
  if (v32 >= v23)
  {
LABEL_51:
    Swift::Bool v18 = 0;
    goto LABEL_52;
  }
  unint64_t v33 = *(void *)(v19 + 8 * v32);
  ++v24;
  if (v33) {
    goto LABEL_49;
  }
  int64_t v24 = v32 + 1;
  if (v32 + 1 >= v23) {
    goto LABEL_51;
  }
  unint64_t v33 = *(void *)(v19 + 8 * v24);
  if (v33) {
    goto LABEL_49;
  }
  int64_t v24 = v32 + 2;
  if (v32 + 2 >= v23) {
    goto LABEL_51;
  }
  unint64_t v33 = *(void *)(v19 + 8 * v24);
  if (v33) {
    goto LABEL_49;
  }
  int64_t v24 = v32 + 3;
  if (v32 + 3 >= v23) {
    goto LABEL_51;
  }
  unint64_t v33 = *(void *)(v19 + 8 * v24);
  if (v33) {
    goto LABEL_49;
  }
  int64_t v24 = v32 + 4;
  if (v32 + 4 >= v23) {
    goto LABEL_51;
  }
  unint64_t v33 = *(void *)(v19 + 8 * v24);
  if (v33)
  {
LABEL_49:
    unint64_t v22 = (v33 - 1) & v33;
    unint64_t v26 = __clz(__rbit64(v33)) + (v24 << 6);
    goto LABEL_30;
  }
  int64_t v34 = v32 + 5;
  if (v34 >= v23) {
    goto LABEL_51;
  }
  unint64_t v33 = *(void *)(v19 + 8 * v34);
  if (v33)
  {
    int64_t v24 = v34;
    goto LABEL_49;
  }
  while (1)
  {
    int64_t v24 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v24 >= v23) {
      goto LABEL_51;
    }
    unint64_t v33 = *(void *)(v19 + 8 * v24);
    ++v34;
    if (v33) {
      goto LABEL_49;
    }
  }
LABEL_56:
  __break(1u);
  return result;
}

uint64_t CapsuleMergeableDelta.finalizeTimestamps(_:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v100 = MEMORY[0x1E4FBC868];
  uint64_t v101 = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1C410D0A4(v4);
  sub_1C410D0A4(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v93 = v5 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_22;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v93 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v9) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v93 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v9) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v93 + 8 * v10);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v9) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v93 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v10 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_121;
              }
              if (v10 >= v9) {
                break;
              }
              unint64_t v15 = *(void *)(v93 + 8 * v10);
              ++v16;
              if (v15) {
                goto LABEL_21;
              }
            }
LABEL_24:
            swift_release();
            uint64_t v20 = *(void *)(v1 + 40);
            uint64_t v94 = v20 + 64;
            uint64_t v21 = 1 << *(unsigned char *)(v20 + 32);
            uint64_t v22 = -1;
            if (v21 < 64) {
              uint64_t v22 = ~(-1 << v21);
            }
            unint64_t v23 = v22 & *(void *)(v20 + 64);
            int64_t v24 = (unint64_t)(v21 + 63) >> 6;
            swift_bridgeObjectRetain();
            int64_t v25 = 0;
            uint64_t v26 = MEMORY[0x1E4FBC868];
            while (1)
            {
              if (v23)
              {
                unint64_t v28 = __clz(__rbit64(v23));
                v23 &= v23 - 1;
                unint64_t v29 = v28 | (v25 << 6);
              }
              else
              {
                int64_t v30 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_120;
                }
                if (v30 >= v24) {
                  goto LABEL_47;
                }
                unint64_t v31 = *(void *)(v94 + 8 * v30);
                ++v25;
                if (!v31)
                {
                  int64_t v25 = v30 + 1;
                  if (v30 + 1 >= v24) {
                    goto LABEL_47;
                  }
                  unint64_t v31 = *(void *)(v94 + 8 * v25);
                  if (!v31)
                  {
                    int64_t v25 = v30 + 2;
                    if (v30 + 2 >= v24) {
                      goto LABEL_47;
                    }
                    unint64_t v31 = *(void *)(v94 + 8 * v25);
                    if (!v31)
                    {
                      int64_t v32 = v30 + 3;
                      if (v32 >= v24) {
                        goto LABEL_47;
                      }
                      unint64_t v31 = *(void *)(v94 + 8 * v32);
                      if (!v31)
                      {
                        while (1)
                        {
                          int64_t v25 = v32 + 1;
                          if (__OFADD__(v32, 1)) {
                            goto LABEL_122;
                          }
                          if (v25 >= v24) {
                            break;
                          }
                          unint64_t v31 = *(void *)(v94 + 8 * v25);
                          ++v32;
                          if (v31) {
                            goto LABEL_44;
                          }
                        }
LABEL_47:
                        swift_release();
                        uint64_t v35 = qword_1EBBC10F0;
                        swift_bridgeObjectRetain();
                        uint64_t v36 = swift_bridgeObjectRetain();
                        if (v35 == -1) {
                          goto LABEL_48;
                        }
                        goto LABEL_123;
                      }
                      int64_t v25 = v32;
                    }
                  }
                }
LABEL_44:
                unint64_t v23 = (v31 - 1) & v31;
                unint64_t v29 = __clz(__rbit64(v31)) + (v25 << 6);
              }
              uint64_t v33 = *(void *)(*(void *)(v20 + 56) + 24 * v29 + 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v34 = *(void *)(v33 + 16);
              swift_retain();
              if (v34)
              {
                uint64_t v27 = swift_bridgeObjectRetain();
                sub_1C410D0A4(v27);
                sub_1C410D0A4(v26);
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_release();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
          int64_t v10 = v16;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_22:
    uint64_t v17 = *(void *)(*(void *)(v5 + 56) + 24 * v13 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = *(void *)(v17 + 16);
    swift_retain();
    if (v18)
    {
      uint64_t v19 = swift_bridgeObjectRetain();
      sub_1C410D0A4(v19);
      sub_1C410D0A4(v11);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  uint64_t v36 = swift_once();
LABEL_48:
  MEMORY[0x1F4188790](v36);
  swift_retain();
  sub_1C4497A58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  unsigned int v92 = BYTE8(v98);
  uint64_t v95 = v98;
  uint64_t v96 = v99;
  uint64_t v37 = *(void *)(v1 + 32);
  uint64_t v88 = v37 + 64;
  uint64_t v38 = 1 << *(unsigned char *)(v37 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & *(void *)(v37 + 64);
  int64_t v90 = (unint64_t)(v38 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v41 = 0;
  if (v40)
  {
LABEL_51:
    unint64_t v42 = __clz(__rbit64(v40));
    v40 &= v40 - 1;
    unint64_t v43 = v42 | (v41 << 6);
    goto LABEL_70;
  }
  while (1)
  {
    int64_t v44 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      goto LABEL_117;
    }
    if (v44 >= v90) {
      goto LABEL_81;
    }
    unint64_t v45 = *(void *)(v88 + 8 * v44);
    ++v41;
    if (!v45)
    {
      int64_t v41 = v44 + 1;
      if (v44 + 1 >= v90) {
        goto LABEL_81;
      }
      unint64_t v45 = *(void *)(v88 + 8 * v41);
      if (!v45)
      {
        int64_t v41 = v44 + 2;
        if (v44 + 2 >= v90) {
          goto LABEL_81;
        }
        unint64_t v45 = *(void *)(v88 + 8 * v41);
        if (!v45)
        {
          int64_t v41 = v44 + 3;
          if (v44 + 3 >= v90) {
            goto LABEL_81;
          }
          unint64_t v45 = *(void *)(v88 + 8 * v41);
          if (!v45)
          {
            int64_t v41 = v44 + 4;
            if (v44 + 4 >= v90) {
              goto LABEL_81;
            }
            unint64_t v45 = *(void *)(v88 + 8 * v41);
            if (!v45) {
              break;
            }
          }
        }
      }
    }
LABEL_69:
    unint64_t v40 = (v45 - 1) & v45;
    unint64_t v43 = __clz(__rbit64(v45)) + (v41 << 6);
LABEL_70:
    uint64_t v47 = (uint64_t *)(*(void *)(v37 + 48) + 16 * v43);
    uint64_t v48 = *v47;
    unint64_t v49 = v47[1];
    sub_1C3F7E324(*v47, v49);
    sub_1C3F7E324(v48, v49);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v97[0] = *(void *)(v1 + 32);
    uint64_t v51 = v97[0];
    *(void *)(v1 + 32) = 0x8000000000000000;
    sub_1C3F7E324(v48, v49);
    uint64_t v53 = sub_1C3F850CC(v48, v49);
    uint64_t v54 = *(void *)(v51 + 16);
    BOOL v55 = (v52 & 1) == 0;
    uint64_t v56 = v54 + v55;
    if (__OFADD__(v54, v55))
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    char v57 = v52;
    if (*(void *)(v51 + 24) >= v56)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v52 & 1) == 0) {
          goto LABEL_80;
        }
      }
      else
      {
        sub_1C406A514();
        if ((v57 & 1) == 0) {
          goto LABEL_80;
        }
      }
    }
    else
    {
      sub_1C4066578(v56, isUniquelyReferenced_nonNull_native);
      uint64_t v58 = sub_1C3F850CC(v48, v49);
      if ((v57 & 1) != (v59 & 1)) {
        goto LABEL_126;
      }
      uint64_t v53 = v58;
      if ((v57 & 1) == 0)
      {
LABEL_80:
        __break(1u);
LABEL_81:
        swift_release();
        uint64_t v62 = *(void *)(v1 + 40);
        uint64_t v89 = v62 + 64;
        uint64_t v63 = 1 << *(unsigned char *)(v62 + 32);
        uint64_t v64 = -1;
        if (v63 < 64) {
          uint64_t v64 = ~(-1 << v63);
        }
        unint64_t v65 = v64 & *(void *)(v62 + 64);
        int64_t v91 = (unint64_t)(v63 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v66 = 0;
        if (v65)
        {
LABEL_84:
          unint64_t v67 = __clz(__rbit64(v65));
          v65 &= v65 - 1;
          unint64_t v68 = v67 | (v66 << 6);
          goto LABEL_103;
        }
        while (1)
        {
          int64_t v69 = v66 + 1;
          if (__OFADD__(v66, 1)) {
            goto LABEL_119;
          }
          if (v69 >= v91) {
            goto LABEL_114;
          }
          unint64_t v70 = *(void *)(v89 + 8 * v69);
          ++v66;
          if (!v70)
          {
            int64_t v66 = v69 + 1;
            if (v69 + 1 >= v91) {
              goto LABEL_114;
            }
            unint64_t v70 = *(void *)(v89 + 8 * v66);
            if (!v70)
            {
              int64_t v66 = v69 + 2;
              if (v69 + 2 >= v91) {
                goto LABEL_114;
              }
              unint64_t v70 = *(void *)(v89 + 8 * v66);
              if (!v70)
              {
                int64_t v66 = v69 + 3;
                if (v69 + 3 >= v91) {
                  goto LABEL_114;
                }
                unint64_t v70 = *(void *)(v89 + 8 * v66);
                if (!v70)
                {
                  int64_t v66 = v69 + 4;
                  if (v69 + 4 >= v91) {
                    goto LABEL_114;
                  }
                  unint64_t v70 = *(void *)(v89 + 8 * v66);
                  if (!v70)
                  {
                    int64_t v71 = v69 + 5;
                    if (v71 >= v91) {
                      goto LABEL_114;
                    }
                    unint64_t v70 = *(void *)(v89 + 8 * v71);
                    if (!v70)
                    {
                      while (1)
                      {
                        int64_t v66 = v71 + 1;
                        if (__OFADD__(v71, 1)) {
                          goto LABEL_125;
                        }
                        if (v66 >= v91) {
                          goto LABEL_114;
                        }
                        unint64_t v70 = *(void *)(v89 + 8 * v66);
                        ++v71;
                        if (v70) {
                          goto LABEL_102;
                        }
                      }
                    }
                    int64_t v66 = v71;
                  }
                }
              }
            }
          }
LABEL_102:
          unint64_t v65 = (v70 - 1) & v70;
          unint64_t v68 = __clz(__rbit64(v70)) + (v66 << 6);
LABEL_103:
          uint64_t v72 = (uint64_t *)(*(void *)(v62 + 48) + 16 * v68);
          uint64_t v73 = *v72;
          unint64_t v74 = v72[1];
          sub_1C3F7E324(*v72, v74);
          sub_1C3F7E324(v73, v74);
          char v75 = swift_isUniquelyReferenced_nonNull_native();
          v97[0] = *(void *)(v1 + 40);
          uint64_t v76 = v97[0];
          *(void *)(v1 + 40) = 0x8000000000000000;
          sub_1C3F7E324(v73, v74);
          uint64_t v78 = sub_1C3F850CC(v73, v74);
          uint64_t v79 = *(void *)(v76 + 16);
          BOOL v80 = (v77 & 1) == 0;
          uint64_t v81 = v79 + v80;
          if (__OFADD__(v79, v80)) {
            goto LABEL_116;
          }
          char v82 = v77;
          if (*(void *)(v76 + 24) >= v81)
          {
            if (v75)
            {
              if ((v77 & 1) == 0) {
                goto LABEL_113;
              }
            }
            else
            {
              sub_1C406A508();
              if ((v82 & 1) == 0) {
                goto LABEL_113;
              }
            }
          }
          else
          {
            sub_1C406656C(v81, v75);
            uint64_t v83 = sub_1C3F850CC(v73, v74);
            if ((v82 & 1) != (v84 & 1)) {
              goto LABEL_126;
            }
            uint64_t v78 = v83;
            if ((v82 & 1) == 0)
            {
LABEL_113:
              __break(1u);
LABEL_114:
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1C3F8D910(v95, v92, v96);
              sub_1C3F8D910(v95, v92, v96);
              return swift_bridgeObjectRelease();
            }
          }
          uint64_t v85 = *(void *)(v97[0] + 56) + 24 * v78;
          uint64_t v86 = *(void *)(v85 + 16);
          long long v98 = *(_OWORD *)v85;
          uint64_t v99 = v86;
          sub_1C3F8D910(v95, v92, v96);
          sub_1C406C854((uint64_t *)&v98, 1, v97, v78, v73, v74);
          sub_1C444B288(v98, *((uint64_t *)&v98 + 1), v99, MEMORY[0x1E4FBC8D0]);
          sub_1C3F7E2CC(v73, v74);
          *(void *)(v1 + 40) = v97[0];
          sub_1C3F7E2CC(v73, v74);
          sub_1C3F7E2CC(v73, v74);
          if (v65) {
            goto LABEL_84;
          }
        }
      }
    }
    uint64_t v60 = *(void *)(v97[0] + 56) + 24 * v53;
    uint64_t v61 = *(void *)(v60 + 16);
    long long v98 = *(_OWORD *)v60;
    uint64_t v99 = v61;
    sub_1C3F8D910(v95, v92, v96);
    sub_1C406C854((uint64_t *)&v98, 1, v97, v53, v48, v49);
    sub_1C444B288(v98, *((uint64_t *)&v98 + 1), v99, MEMORY[0x1E4FBC8D0]);
    sub_1C3F7E2CC(v48, v49);
    *(void *)(v1 + 32) = v97[0];
    sub_1C3F7E2CC(v48, v49);
    sub_1C3F7E2CC(v48, v49);
    if (v40) {
      goto LABEL_51;
    }
  }
  int64_t v46 = v44 + 5;
  if (v46 >= v90) {
    goto LABEL_81;
  }
  unint64_t v45 = *(void *)(v88 + 8 * v46);
  if (v45)
  {
    int64_t v41 = v46;
    goto LABEL_69;
  }
  while (1)
  {
    int64_t v41 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v41 >= v90) {
      goto LABEL_81;
    }
    unint64_t v45 = *(void *)(v88 + 8 * v41);
    ++v46;
    if (v45) {
      goto LABEL_69;
    }
  }
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

uint64_t CapsuleMergeableDelta.visitReferences(_:)(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v5 = v4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v17 >= v9) {
      goto LABEL_21;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v11;
    if (!v18)
    {
      int64_t v11 = v17 + 1;
      if (v17 + 1 >= v9) {
        goto LABEL_21;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v11);
      if (!v18)
      {
        int64_t v11 = v17 + 2;
        if (v17 + 2 >= v9) {
          goto LABEL_21;
        }
        unint64_t v18 = *(void *)(v5 + 8 * v11);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_5:
    uint64_t v34 = *(void *)(*(void *)(v4 + 56) + 24 * v13 + 16);
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    int64_t v16 = __swift_project_boxed_opaque_existential_1(a1, v14);
    uint64_t result = sub_1C44691F0((uint64_t)v16, (uint64_t)&v34, v14, v15);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v9)
  {
LABEL_21:
    swift_release();
    uint64_t v20 = v3 + 64;
    uint64_t v21 = 1 << *(unsigned char *)(v3 + 32);
    uint64_t v22 = -1;
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    unint64_t v23 = v22 & *(void *)(v3 + 64);
    int64_t v24 = (unint64_t)(v21 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v25 = 0;
    while (1)
    {
      if (v23)
      {
        unint64_t v26 = __clz(__rbit64(v23));
        v23 &= v23 - 1;
        unint64_t v27 = v26 | (v25 << 6);
      }
      else
      {
        int64_t v31 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          goto LABEL_45;
        }
        if (v31 >= v24)
        {
LABEL_41:
          return swift_release();
        }
        unint64_t v32 = *(void *)(v20 + 8 * v31);
        ++v25;
        if (!v32)
        {
          int64_t v25 = v31 + 1;
          if (v31 + 1 >= v24) {
            goto LABEL_41;
          }
          unint64_t v32 = *(void *)(v20 + 8 * v25);
          if (!v32)
          {
            int64_t v25 = v31 + 2;
            if (v31 + 2 >= v24) {
              goto LABEL_41;
            }
            unint64_t v32 = *(void *)(v20 + 8 * v25);
            if (!v32)
            {
              int64_t v33 = v31 + 3;
              if (v33 >= v24) {
                goto LABEL_41;
              }
              unint64_t v32 = *(void *)(v20 + 8 * v33);
              if (!v32)
              {
                while (1)
                {
                  int64_t v25 = v33 + 1;
                  if (__OFADD__(v33, 1)) {
                    goto LABEL_47;
                  }
                  if (v25 >= v24) {
                    goto LABEL_41;
                  }
                  unint64_t v32 = *(void *)(v20 + 8 * v25);
                  ++v33;
                  if (v32) {
                    goto LABEL_40;
                  }
                }
              }
              int64_t v25 = v33;
            }
          }
        }
LABEL_40:
        unint64_t v23 = (v32 - 1) & v32;
        unint64_t v27 = __clz(__rbit64(v32)) + (v25 << 6);
      }
      uint64_t v34 = *(void *)(*(void *)(v3 + 56) + 24 * v27 + 16);
      uint64_t v28 = a1[3];
      uint64_t v29 = a1[4];
      int64_t v30 = __swift_project_boxed_opaque_existential_1(a1, v28);
      uint64_t result = sub_1C4469148((uint64_t)v30, (uint64_t)&v34, v28, v29);
    }
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v11 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_21;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v11);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t _s20ObservableDifferenceV19ReferenceDifferenceOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C444AE20(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(result + 40));
  if (v2)
  {
    uint64_t v3 = v2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets;
    swift_beginAccess();
    return *(void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C444AE78()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t type metadata accessor for AssetWrapper()
{
  return self;
}

uint64_t sub_1C444AEAC()
{
  swift_unknownObjectRelease();
  swift_release();
  if (*(void *)(v0 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  }
  if (*(void *)(v0 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  }
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_1C444AF24()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 120);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1C40182C8;
  *(void *)(v4 + 56) = v3;
  *(_OWORD *)(v4 + 40) = v5;
  *(void *)(v4 + 24) = v0 + 40;
  *(void *)(v4 + 32) = v0 + 80;
  *(void *)(v4 + 16) = v2;
  return MEMORY[0x1F4188298](sub_1C4441938, 0, 0);
}

uint64_t sub_1C444AFFC()
{
  sub_1C3F7E2CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C444B03C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C444B064(uint64_t a1)
{
  return sub_1C444205C(a1, *(void (**)(void *))(v1 + 24));
}

uint64_t _s27CapsuleReferenceDifferencerCMa()
{
  return __swift_instantiateGenericMetadata();
}

char *sub_1C444B09C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1[1];
  uint64_t v12 = *a1;
  uint64_t v7 = &v3[*(void *)(*(void *)v3 + 104)];
  uint64_t v8 = type metadata accessor for Capsule();
  int64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  v9(v7, a2, v8);
  v9(&v3[*(void *)(*(void *)v3 + 112)], a3, v8);
  _s20ObservableDifferenceV19ReferenceDifferenceOMa();
  swift_getTupleTypeMetadata2();
  sub_1C4497478();
  sub_1C3F782A0();
  uint64_t v10 = sub_1C4496F28();
  *((void *)v3 + 2) = v12;
  *((void *)v3 + 3) = v6;
  *((void *)v3 + 4) = v10;
  return v3;
}

char *sub_1C444B214(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C444B09C(a1, a2, a3);
}

uint64_t type metadata accessor for _CapsuleCodable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C444B288(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a4(a3);
  }
  return result;
}

ValueMetadata *type metadata accessor for CapsuleUndoAction()
{
  return &type metadata for CapsuleUndoAction;
}

uint64_t sub_1C444B30C()
{
  return type metadata accessor for CapsuleRef();
}

uint64_t sub_1C444B314()
{
  uint64_t result = type metadata accessor for PartiallyOrderedReferenceMap();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C4496678();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1C444B410()
{
  uint64_t result = sub_1C4497B38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C444B4B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6 = a1[1];
  uint64_t v7 = a2[1];
  uint64_t v8 = v7 & 0x3000000000000000;
  if ((v6 & 0x3000000000000000) != 0)
  {
    if (!v8)
    {
      uint64_t v9 = *a2;
      sub_1C3F7E324(*a2, a2[1]);
      *a1 = v9;
      a1[1] = v7;
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1C3F7E2CC(*a1, v6);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_7;
  }
  uint64_t v21 = *a2;
  sub_1C3F7E324(*a2, a2[1]);
  uint64_t v22 = *a1;
  unint64_t v23 = a1[1];
  *a1 = v21;
  a1[1] = v7;
  sub_1C3F7E2CC(v22, v23);
LABEL_7:
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (void *)(((unint64_t)a1 + v12 + 16) & ~v12);
  uint64_t v14 = (void *)(((unint64_t)a2 + v12 + 16) & ~v12);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v16 = v15(v13, 1, v10);
  int v17 = v15(v14, 1, v10);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v13, v14, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
      goto LABEL_19;
    }
    int v18 = *(_DWORD *)(v11 + 84);
    size_t v19 = *(void *)(v11 + 64);
  }
  else
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v13, v14, v10);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
    int v18 = *(_DWORD *)(v11 + 84);
    size_t v19 = *(void *)(v11 + 64);
  }
  if (v18) {
    size_t v20 = v19;
  }
  else {
    size_t v20 = v19 + 1;
  }
  memcpy(v13, v14, v20);
LABEL_19:
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v24 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v24 = *(void *)(v11 + 64) + 1;
  }
  *(void *)(((unint64_t)v13 + v24 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1C444B6F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 16) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 16) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    unint64_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  *(void *)(((unint64_t)v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t *sub_1C444B840(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6 = a1[1];
  if ((v6 & 0x3000000000000000) != 0) {
    goto LABEL_4;
  }
  uint64_t v7 = a2[1];
  if ((v7 & 0x3000000000000000) != 0)
  {
    sub_1C3F7E2CC(*a1, v6);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_5;
  }
  uint64_t v19 = *a1;
  *a1 = *a2;
  a1[1] = v7;
  sub_1C3F7E2CC(v19, v6);
LABEL_5:
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  size_t v11 = (void *)(((unint64_t)a1 + v10 + 16) & ~v10);
  uint64_t v12 = (void *)(((unint64_t)a2 + v10 + 16) & ~v10);
  unint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v14 = v13(v11, 1, v8);
  int v15 = v13(v12, 1, v8);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      goto LABEL_17;
    }
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_17:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v20 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v9 + 64) + 1;
  }
  *(void *)(((unint64_t)v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C444BA4C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = v10 + 7;
  if (v8 < a2)
  {
    unint64_t v12 = ((v11 + ((v9 + 16) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v13 = a2 - v8;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      LODWORD(v16) = 4;
    }
    else {
      LODWORD(v16) = 2;
    }
    if (v15 < 0x100) {
      LODWORD(v16) = 1;
    }
    if (v15 >= 2) {
      uint64_t v16 = v16;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v12);
        if (!v17) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v17) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C444BBF8);
      case 4:
        int v17 = *(_DWORD *)((char *)a1 + v12);
        if (!v17) {
          break;
        }
LABEL_27:
        int v19 = v17 - 1;
        if (v14)
        {
          int v19 = 0;
          LODWORD(v14) = *a1;
        }
        return v8 + (v14 | v19) + 1;
      default:
        break;
    }
  }
  uint64_t v20 = ((unint64_t)a1 + v9 + 16) & ~v9;
  if (v7 < 0x7FFFFFFE)
  {
    unint64_t v22 = *(void *)((v11 + v20) & 0xFFFFFFFFFFFFFFF8);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    if ((v22 + 1) >= 2) {
      return v22;
    }
    else {
      return 0;
    }
  }
  else
  {
    unsigned int v21 = (*(uint64_t (**)(uint64_t))(v5 + 48))(v20);
    if (v21 >= 2) {
      return v21 - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_1C444BC0C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v12 + 7 + ((v11 + 16) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v10 < a3)
  {
    unsigned int v14 = a3 - v10;
    if (((v12 + 7 + ((v11 + 16) & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v15 = v14 + 1;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v15 >= 0x10000) {
      int v16 = 4;
    }
    else {
      int v16 = 2;
    }
    if (v15 < 0x100) {
      int v16 = 1;
    }
    if (v15 >= 2) {
      int v6 = v16;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v10)
  {
    if (((v12 + 7 + ((v11 + 16) & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v17 = a2 - v10;
    }
    else {
      int v17 = 1;
    }
    if (((v12 + 7 + ((v11 + 16) & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      unsigned int v18 = ~v10 + a2;
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v17;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v13] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x1C444BEBCLL);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        unint64_t v19 = (unint64_t)&a1[v11 + 16] & ~v11;
        if (v9 < 0x7FFFFFFE)
        {
          unint64_t v23 = (void *)((v12 + 7 + v19) & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *unint64_t v23 = 0;
            *(_DWORD *)unint64_t v23 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *unint64_t v23 = a2;
          }
        }
        else if (v9 >= a2)
        {
          uint64_t v24 = a2 + 1;
          int64_t v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
          unint64_t v26 = (unint64_t)&a1[v11 + 16] & ~v11;
          v25(v26, v24);
        }
        else
        {
          if (v12 <= 3) {
            int v20 = ~(-1 << (8 * v12));
          }
          else {
            int v20 = -1;
          }
          if (v12)
          {
            int v21 = v20 & (~v9 + a2);
            if (v12 <= 3) {
              int v22 = v12;
            }
            else {
              int v22 = 4;
            }
            bzero((void *)((unint64_t)&a1[v11 + 16] & ~v11), v12);
            switch(v22)
            {
              case 2:
                *(_WORD *)unint64_t v19 = v21;
                break;
              case 3:
                *(_WORD *)unint64_t v19 = v21;
                *(unsigned char *)(v19 + 2) = BYTE2(v21);
                break;
              case 4:
                *(_DWORD *)unint64_t v19 = v21;
                break;
              default:
                *(unsigned char *)unint64_t v19 = v21;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_1C444BEF4()
{
  uint64_t result = sub_1C4497B38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Capsule.Ref(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Capsule.Ref);
}

uint64_t type metadata accessor for Capsule.UndoAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C444BFD0()
{
  uint64_t result = type metadata accessor for Capsule();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C444C078(uint64_t a1)
{
  sub_1C3F7E2CC(*(void *)a1, *(void *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1C444C0B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C3F7E324(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1C444C108(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C3F7E324(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1C3F7E2CC(v6, v7);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1C444C16C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C3F7E2CC(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for Capsule<>.ObservableDifference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of RefContainer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of RefContainer.mutate<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of MutableRefContainer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of MutableRefContainer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of MutableRefContainer.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t destroy for CapsuleMergeableDelta()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CapsuleMergeableDelta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CapsuleMergeableDelta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CapsuleMergeableDelta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CapsuleMergeableDelta(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CapsuleMergeableDelta(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CapsuleMergeableDelta()
{
  return &type metadata for CapsuleMergeableDelta;
}

void *initializeWithCopy for CapsuleReference(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CapsuleReference(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CapsuleReference(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CapsuleReference(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CapsuleReference(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CapsuleReference()
{
  return &type metadata for CapsuleReference;
}

uint64_t sub_1C444C7BC()
{
  uint64_t result = type metadata accessor for Capsule();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C444C850(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  int v10 = v8 + 16;
  if (*(_DWORD *)(v6 + 84)) {
    size_t v11 = *(void *)(v6 + 64);
  }
  else {
    size_t v11 = *(void *)(v6 + 64) + 1;
  }
  unint64_t v12 = ((v11 + 7 + ((v8 + 16) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v9 & 0xF8 ^ 0x1F8) & v10));
  }
  else
  {
    uint64_t v17 = ~v9;
    uint64_t v18 = a2[1];
    if ((v18 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v19 = *a2;
      sub_1C3F7E324(*a2, a2[1]);
      *uint64_t v4 = v19;
      v4[1] = v18;
    }
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a2 + v9 + 16) & v17, 1, v5))
    {
      memcpy((void *)(((unint64_t)v4 + v9 + 16) & v17), (const void *)(((unint64_t)a2 + v9 + 16) & v17), v11);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9 + 16) & v17, ((unint64_t)a2 + v9 + 16) & v17, v5);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v4 + v9 + 16) & v17, 0, 1, v5);
    }
    *(void *)((v11 + 7 + (((unint64_t)v4 + v9 + 16) & v17)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + 7 + (((unint64_t)a2 + v9 + 16) & v17)) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v4;
}

_OWORD *sub_1C444CA14(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 16) & ~v6);
  int v8 = (const void *)(((unint64_t)a2 + v6 + 16) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    int v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  *(void *)(((unint64_t)v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t *sub_1C444CB68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6 = a1[1];
  uint64_t v7 = a2[1];
  if ((v6 & 0x3000000000000000) != 0) {
    goto LABEL_4;
  }
  if ((v7 & 0x3000000000000000) != 0)
  {
    sub_1C3F7E2CC(*a1, v6);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_5;
  }
  uint64_t v19 = *a1;
  *a1 = *a2;
  a1[1] = v7;
  sub_1C3F7E2CC(v19, v6);
LABEL_5:
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  size_t v11 = (void *)(((unint64_t)a1 + v10 + 16) & ~v10);
  uint64_t v12 = (void *)(((unint64_t)a2 + v10 + 16) & ~v10);
  int v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v14 = v13(v11, 1, v8);
  int v15 = v13(v12, 1, v8);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      goto LABEL_17;
    }
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_17:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v20 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v9 + 64) + 1;
  }
  *(void *)(((unint64_t)v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C444CD74(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = v10 + 7;
  if (v8 < a2)
  {
    unint64_t v12 = ((v11 + ((v9 + 16) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v13 = a2 - v8;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      LODWORD(v16) = 4;
    }
    else {
      LODWORD(v16) = 2;
    }
    if (v15 < 0x100) {
      LODWORD(v16) = 1;
    }
    if (v15 >= 2) {
      uint64_t v16 = v16;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v12);
        if (!v17) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v17) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C444CF20);
      case 4:
        int v17 = *(_DWORD *)((char *)a1 + v12);
        if (!v17) {
          break;
        }
LABEL_27:
        int v19 = v17 - 1;
        if (v14)
        {
          int v19 = 0;
          LODWORD(v14) = *a1;
        }
        return v8 + (v14 | v19) + 1;
      default:
        break;
    }
  }
  uint64_t v20 = ((unint64_t)a1 + v9 + 16) & ~v9;
  if (v7 < 0x7FFFFFFE)
  {
    unint64_t v22 = *(void *)((v11 + v20) & 0xFFFFFFFFFFFFFFF8);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    if ((v22 + 1) >= 2) {
      return v22;
    }
    else {
      return 0;
    }
  }
  else
  {
    unsigned int v21 = (*(uint64_t (**)(uint64_t))(v5 + 48))(v20);
    if (v21 >= 2) {
      return v21 - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_1C444CF34(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v12 + 7 + ((v11 + 16) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v10 < a3)
  {
    unsigned int v14 = a3 - v10;
    if (((v12 + 7 + ((v11 + 16) & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v15 = v14 + 1;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v15 >= 0x10000) {
      int v16 = 4;
    }
    else {
      int v16 = 2;
    }
    if (v15 < 0x100) {
      int v16 = 1;
    }
    if (v15 >= 2) {
      int v6 = v16;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v10)
  {
    if (((v12 + 7 + ((v11 + 16) & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v17 = a2 - v10;
    }
    else {
      int v17 = 1;
    }
    if (((v12 + 7 + ((v11 + 16) & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      unsigned int v18 = ~v10 + a2;
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v17;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v13] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x1C444D1E4);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        unint64_t v19 = (unint64_t)&a1[v11 + 16] & ~v11;
        if (v9 < 0x7FFFFFFE)
        {
          unint64_t v23 = (void *)((v12 + 7 + v19) & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *unint64_t v23 = 0;
            *(_DWORD *)unint64_t v23 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *unint64_t v23 = a2;
          }
        }
        else if (v9 >= a2)
        {
          uint64_t v24 = a2 + 1;
          int64_t v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
          unint64_t v26 = (unint64_t)&a1[v11 + 16] & ~v11;
          v25(v26, v24);
        }
        else
        {
          if (v12 <= 3) {
            int v20 = ~(-1 << (8 * v12));
          }
          else {
            int v20 = -1;
          }
          if (v12)
          {
            int v21 = v20 & (~v9 + a2);
            if (v12 <= 3) {
              int v22 = v12;
            }
            else {
              int v22 = 4;
            }
            bzero((void *)((unint64_t)&a1[v11 + 16] & ~v11), v12);
            switch(v22)
            {
              case 2:
                *(_WORD *)unint64_t v19 = v21;
                break;
              case 3:
                *(_WORD *)unint64_t v19 = v21;
                *(unsigned char *)(v19 + 2) = BYTE2(v21);
                break;
              case 4:
                *(_DWORD *)unint64_t v19 = v21;
                break;
              default:
                *(unsigned char *)unint64_t v19 = v21;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_1C444D21C(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t sub_1C444D244(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  else
  {
    *(void *)(a1 + 24) = v3;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t sub_1C444D2B4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *unint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1C444D584(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t sub_1C444D5CC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C444D620(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1C444D680(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C444D698(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[3] = (a2 - 1);
  }
  return result;
}

unint64_t sub_1C444D6BC()
{
  unint64_t result = qword_1EA3A1130;
  if (!qword_1EA3A1130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3A1130);
  }
  return result;
}

unint64_t sub_1C444D710()
{
  unint64_t result = qword_1EA3A1138;
  if (!qword_1EA3A1138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3A1138);
  }
  return result;
}

unint64_t sub_1C444D764()
{
  unint64_t result = qword_1EA3A1148;
  if (!qword_1EA3A1148)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA3A1140);
    sub_1C4246A44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA3A1148);
  }
  return result;
}

uint64_t sub_1C444D7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1C40185EC;
  return sub_1C4441C48(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_1C444D8B0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unsigned char *storeEnumTagSinglePayload for CRReferenceCodingKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C444D98CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRReferenceCodingKey()
{
  return &type metadata for CRReferenceCodingKey;
}

unint64_t sub_1C444D9C8()
{
  unint64_t result = qword_1EA3A1178;
  if (!qword_1EA3A1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3A1178);
  }
  return result;
}

unint64_t sub_1C444DA20()
{
  unint64_t result = qword_1EA3A1180;
  if (!qword_1EA3A1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3A1180);
  }
  return result;
}

unint64_t sub_1C444DA78()
{
  unint64_t result = qword_1EA3A1188[0];
  if (!qword_1EA3A1188[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA3A1188);
  }
  return result;
}

uint64_t sub_1C444DACC()
{
  return sub_1C444B03C();
}

uint64_t sub_1C444DAE4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C4496678();
  __swift_allocate_value_buffer(v3, qword_1EA3B9178);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EA3B9178);
  sub_1C44965E8();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C444DC14()
{
  uint64_t v0 = sub_1C4497A38();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C4497A08();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1C4496DA8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1C3F60AA0();
  sub_1C4496D88();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1C444DFB8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC1040);
  sub_1C3FD9798();
  sub_1C4497BF8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1C4497A78();
  qword_1EBBBFCA0 = result;
  return result;
}

uint64_t sub_1C444DE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  swift_beginAccess();
  return sub_1C3F66D38(v3, a2);
}

uint64_t sub_1C444DE7C()
{
  return type metadata accessor for ReplicaState();
}

void sub_1C444DE84()
{
  sub_1C4496678();
  if (v0 <= 0x3F)
  {
    sub_1C444DF60();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1C444DF60()
{
  if (!qword_1EBBC0FA8)
  {
    type metadata accessor for Replica();
    unint64_t v0 = sub_1C4497B38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBBC0FA8);
    }
  }
}

unint64_t sub_1C444DFB8()
{
  unint64_t result = qword_1EBBC1060[0];
  if (!qword_1EBBC1060[0])
  {
    sub_1C4497A08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBBC1060);
  }
  return result;
}

uint64_t sub_1C444E010(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1C444E1B0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1C444E3ECLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          int v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TreeNode()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C444E42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned int v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v11 - v8, a1, v6);
  sub_1C444E528((uint64_t)v9, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t sub_1C444E528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = MEMORY[0x1F4188790](*(void *)(a2 - 8));
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v6;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, a2) == 1)
  {
    uint64_t v9 = sub_1C4497B38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    size_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v10(a3, 1, 1, a2);
  }
  else
  {
    unsigned int v12 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
    v12(v8, a1, a2);
    v12(a3, (uint64_t)v8, a2);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, a2);
  }
}

uint64_t sub_1C444E6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  unsigned int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

uint64_t sub_1C444E840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_1C444E528(a1, *(void *)(a2 + 16), a3);
  unsigned int v5 = *(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v5(a3, 0, 1, a2);
}

uint64_t sub_1C444E8B0()
{
  return sub_1C4498388() & 1;
}

uint64_t sub_1C444E95C()
{
  return sub_1C44973B8();
}

uint64_t sub_1C444E9F8()
{
  return sub_1C44973D8();
}

uint64_t sub_1C444EAA0()
{
  return sub_1C44973C8();
}

uint64_t sub_1C444EB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - v8;
  sub_1C444E6E0(a2, (uint64_t)&v11 - v8);
  Optional<A>.encode(to:)(a1, v6, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C444EC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C444EB48(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_1C444EC68()
{
  return swift_getWitnessTable();
}

uint64_t AnyCRDT.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v212 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1210);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v190 = (uint64_t)&v179 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1218);
  uint64_t v188 = *(void *)(v189 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v189);
  long long v211 = (char *)&v179 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v204 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v179 - v7);
  uint64_t v201 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1F4188790](v201);
  uint64_t v202 = (uint64_t)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v193);
  v195 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v179 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v199 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v199);
  uint64_t v203 = (uint64_t)&v179 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v200 = (uint64_t)&v179 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v209 = (char *)&v179 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1220);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v210 = (char *)&v179 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1228);
  uint64_t v184 = *(void *)(v185 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v185);
  uint64_t v183 = (uint64_t)&v179 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v192 = (uint64_t)&v179 - v19;
  uint64_t v196 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1F4188790](v196);
  uint64_t v205 = (uint64_t)&v179 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v197 = (uint64_t)&v179 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v216 = (uint64_t)&v179 - v24;
  uint64_t v25 = type metadata accessor for Proto_CRDT(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v207 = (uint64_t)&v179 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v198 = (uint64_t)&v179 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v186 = (uint64_t)&v179 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v194 = (uint64_t)&v179 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v206 = (uint64_t)&v179 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v187 = (uint64_t)&v179 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v208 = (char *)&v179 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v191 = (uint64_t)&v179 - v42;
  MEMORY[0x1F4188790](v41);
  uint64_t v214 = (uint64_t)&v179 - v43;
  uint64_t v215 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v217 = *(void *)(v215 - 8);
  uint64_t v44 = MEMORY[0x1F4188790](v215);
  int64_t v46 = (char *)&v179 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  uint64_t v48 = (char *)&v179 - v47;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v50 = MEMORY[0x1F4188790](v49 - 8);
  char v52 = (char *)&v179 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  uint64_t v54 = (char *)&v179 - v53;
  uint64_t v221 = a1;
  uint64_t v55 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v55, (uint64_t)v54, &qword_1EBBC04F8);
  char v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v56 = v26 + 48;
  uint64_t v58 = v25;
  uint64_t v59 = v25;
  uint64_t v60 = v57;
  LODWORD(v55) = v57((uint64_t)v54, 1, v59);
  sub_1C3F962E0((uint64_t)v54, &qword_1EBBC04F8);
  if (v55 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v61 = 0xD000000000000014;
    *(void *)(v61 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v61 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  BOOL v179 = v60;
  uint64_t v180 = v52;
  uint64_t v181 = v56;
  v182 = v46;
  uint64_t v63 = (uint64_t)v48;
  type metadata accessor for CRDecoder.CRDTContainer();
  uint64_t inited = swift_initStackObject();
  uint64_t v65 = v221;
  *(void *)(inited + 16) = v221;
  *(void *)(inited + 24) = 0;
  *(unsigned char *)(inited + 32) = 1;
  swift_retain();
  uint64_t v66 = v214;
  sub_1C3FBA924(v214);
  uint64_t v67 = v58;
  uint64_t v68 = *(void *)(v66 + *(int *)(v58 + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v69 = v216;
  sub_1C3F970C4(v68, v216, &qword_1EBBC0648);
  sub_1C3F924DC(v66, type metadata accessor for Proto_CRDT);
  uint64_t v71 = v217 + 48;
  unint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v217 + 48);
  uint64_t v72 = v215;
  if (v70(v69, 1, v215) == 1)
  {
    swift_release();
    swift_release();
    sub_1C3F962E0(v69, &qword_1EBBC0648);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1230);
    uint64_t v73 = swift_allocObject();
    *(unsigned char *)(v73 + 16) = 1;
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(v73 + 16) = 0;
    *unint64_t v212 = v73;
    return result;
  }
  uint64_t v217 = v71;
  sub_1C446A41C(v69, v63, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  uint64_t v216 = v63;
  sub_1C446A3B4(v63, (uint64_t)v182, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  uint64_t v74 = v72;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v76 = (uint64_t)v211;
  uint64_t v77 = (uint64_t)v210;
  uint64_t v78 = (uint64_t)v209;
  uint64_t v79 = (uint64_t)v208;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v91 = v206;
      sub_1C3FBA924(v206);
      uint64_t v92 = *(void *)(inited + 16);
      swift_retain();
      uint64_t v93 = v92;
      uint64_t v94 = v213;
      sub_1C445301C(v91, v93, v220);
      if (v94) {
        goto LABEL_31;
      }
      uint64_t v95 = v220[0];
      uint64_t v96 = (uint64_t *)&unk_1EA3A1288;
      goto LABEL_28;
    case 2:
      uint64_t v97 = v216;
      uint64_t v98 = v203;
      sub_1C446A41C((uint64_t)v182, v203, type metadata accessor for Proto_Set);
      uint64_t v99 = v65;
      uint64_t v100 = *(void *)(v98 + *(int *)(v199 + 20))
           + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
      swift_beginAccess();
      uint64_t v101 = v200;
      sub_1C3F970C4(v100, v200, &qword_1EBBC0620);
      uint64_t v102 = type metadata accessor for Proto_Timestamp(0);
      LODWORD(v100) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 48))(v101, 1, v102);
      sub_1C3F962E0(v101, &qword_1EBBC0620);
      if (v100 == 1 && *(unsigned char *)(v99 + 49) != 1)
      {
        uint64_t v163 = v186;
        sub_1C3FBA924(v186);
        uint64_t v164 = *(void *)(inited + 16);
        swift_retain();
        uint64_t v165 = v164;
        uint64_t v166 = v213;
        sub_1C4453580(v163, v165, (uint64_t *)&v219);
        if (!v166)
        {
          uint64_t v107 = v219;
          uint64_t v108 = (uint64_t *)&unk_1EA3A1278;
          goto LABEL_64;
        }
      }
      else
      {
        uint64_t v103 = v194;
        sub_1C3FBA924(v194);
        uint64_t v104 = *(void *)(inited + 16);
        swift_retain();
        uint64_t v105 = v104;
        uint64_t v106 = v213;
        sub_1C4453288(v103, v105, &v219);
        if (!v106)
        {
          uint64_t v107 = v219;
          uint64_t v108 = (uint64_t *)&unk_1EA3A1280;
LABEL_64:
          __swift_instantiateConcreteTypeFromMangledName(v108);
          uint64_t v119 = swift_allocObject();
          *(void *)(v119 + 16) = 0;
          swift_beginAccess();
          *(void *)(v119 + 16) = v107;
          swift_release();
          swift_release();
          swift_release();
          sub_1C3F924DC(v98, type metadata accessor for Proto_Set);
          uint64_t v159 = v212;
          uint64_t v158 = v97;
          goto LABEL_46;
        }
      }
      swift_release();
      swift_release();
      sub_1C3F924DC(v98, type metadata accessor for Proto_Set);
      return sub_1C3F924DC(v97, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    case 3:
      uint64_t v109 = v198;
      sub_1C3FBA924(v198);
      uint64_t v110 = *(void *)(v109 + *(int *)(v67 + 20))
           + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
      swift_beginAccess();
      uint64_t v111 = v110;
      uint64_t v112 = v197;
      sub_1C3F970C4(v111, v197, &qword_1EBBC0648);
      if (v70(v112, 1, v74) == 1)
      {
        uint64_t v113 = v65;
        swift_retain();
        sub_1C3F962E0(v112, &qword_1EBBC0648);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          uint64_t v144 = v112;
          uint64_t v145 = v195;
          sub_1C446A41C(v144, (uint64_t)v195, type metadata accessor for Proto_Struct);
          uint64_t v113 = v65;
          swift_retain();
          uint64_t v146 = v213;
          uint64_t v147 = v216;
          goto LABEL_53;
        }
        uint64_t v113 = v65;
        swift_retain();
        sub_1C3F924DC(v112, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
      }
      uint64_t v146 = v213;
      uint64_t v145 = v195;
      uint64_t v147 = v216;
      uint64_t v167 = MEMORY[0x1E4FBC860];
      void *v195 = MEMORY[0x1E4FBC860];
      v145[1] = v167;
      v145[2] = v167;
      sub_1C4496888();
LABEL_53:
      uint64_t v168 = sub_1C4469F30((uint64_t)v145, v113);
      if (v146)
      {
        sub_1C3F924DC(v109, type metadata accessor for Proto_CRDT);
        swift_release();
        swift_release();
        uint64_t v135 = v147;
        goto LABEL_32;
      }
      uint64_t v169 = v168;
      sub_1C3F924DC(v109, type metadata accessor for Proto_CRDT);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1270);
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = 0;
      swift_beginAccess();
      *(void *)(v119 + 16) = v169;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v157 = v147;
      goto LABEL_44;
    case 4:
      uint64_t v114 = v202;
      sub_1C446A41C((uint64_t)v182, v202, type metadata accessor for Proto_Sequence);
      uint64_t v115 = *(void *)(v114 + *(int *)(v201 + 20))
           + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__attributeRuns;
      swift_beginAccess();
      if (!*(void *)(*(void *)v115 + 16))
      {
        uint64_t v148 = v213;
        sub_1C4000610(&v219);
        uint64_t v117 = v216;
        if (!v148)
        {
          uint64_t v175 = v219;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1268);
          uint64_t v119 = swift_allocObject();
          *(void *)(v119 + 16) = 0;
          swift_beginAccess();
          *(void *)(v119 + 16) = v175;
          swift_release();
          swift_release();
          goto LABEL_58;
        }
LABEL_40:
        swift_release();
        swift_release();
        sub_1C3F924DC(v114, type metadata accessor for Proto_Sequence);
        return sub_1C3F924DC(v117, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
      }
      uint64_t v116 = v213;
      sub_1C4453BA4((uint64_t *)&v219);
      uint64_t v117 = v216;
      if (v116) {
        goto LABEL_40;
      }
      char v118 = v219;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1260);
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = 1;
      swift_beginAccess();
      uint64_t v120 = *(void *)(v119 + 16);
      *(void *)(v119 + 16) = v118;
      swift_retain();
      sub_1C4469B14(v120);
      swift_release();
      swift_release();
LABEL_58:
      swift_release();
      sub_1C3F924DC(v114, type metadata accessor for Proto_Sequence);
      uint64_t v159 = v212;
      uint64_t v158 = v117;
LABEL_46:
      uint64_t result = sub_1C3F924DC(v158, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
      *uint64_t v159 = v119;
      return result;
    case 5:
      uint64_t v121 = v213;
      sub_1C4454094(v220);
      if (v121) {
        goto LABEL_31;
      }
      uint64_t v122 = v220[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1250);
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = 1;
      swift_beginAccess();
      uint64_t v123 = *(void *)(v119 + 16);
      *(void *)(v119 + 16) = v122;
      swift_retain();
      sub_1C4469B14(v123);
      swift_release();
      goto LABEL_25;
    case 6:
      uint64_t v124 = v213;
      sub_1C445388C(v220);
      if (v124) {
        goto LABEL_31;
      }
      uint64_t v125 = v220[0];
      uint64_t v126 = v220[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1258);
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 24) = 0;
      *(void *)(v119 + 16) = 0;
      swift_beginAccess();
      uint64_t v127 = *(void *)(v119 + 16);
      uint64_t v128 = *(void *)(v119 + 24);
      *(void *)(v119 + 16) = v125;
      *(void *)(v119 + 24) = v126;
      swift_retain();
      swift_retain();
      sub_1C4469AD0(v127, v128);
      swift_release();
      swift_release();
LABEL_25:
      swift_release();
      goto LABEL_29;
    case 7:
      uint64_t v129 = v207;
      sub_1C3FBA924(v207);
      uint64_t v130 = *(void *)(inited + 16);
      swift_retain();
      uint64_t v131 = v130;
      uint64_t v132 = v213;
      sub_1C43B6AFC(v129, v131, v220);
      if (v132) {
        goto LABEL_31;
      }
      uint64_t v95 = v220[0];
      uint64_t v96 = (uint64_t *)&unk_1EA3A1248;
LABEL_28:
      __swift_instantiateConcreteTypeFromMangledName(v96);
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = 0;
      swift_beginAccess();
      *(void *)(v119 + 16) = v95;
      swift_release();
      swift_release();
LABEL_29:
      swift_release();
      goto LABEL_43;
    case 8:
      uint64_t v133 = v204;
      uint64_t v134 = v213;
      sub_1C4454568(v204);
      if (v134) {
        goto LABEL_31;
      }
      sub_1C3F970C4((uint64_t)v133, v76, &qword_1EA3A1218);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1240);
      uint64_t v150 = v76;
      uint64_t v151 = swift_allocObject();
      uint64_t v152 = v151 + *(void *)(*(void *)v151 + 280);
      char v153 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v188 + 56);
      uint64_t v154 = v189;
      v153(v152, 1, 1, v189);
      uint64_t v155 = v150;
      uint64_t v156 = v190;
      sub_1C3F961BC(v155, v190, &qword_1EA3A1218);
      v153(v156, 0, 1, v154);
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v156, v152, &qword_1EA3A1210);
      swift_endAccess();
      swift_release();
      swift_release();
      uint64_t v119 = v151;
      swift_release();
      sub_1C3F962E0((uint64_t)v204, &qword_1EA3A1218);
      goto LABEL_43;
    case 9:
      uint64_t v136 = swift_retain();
      uint64_t v137 = v213;
      uint64_t v138 = sub_1C41618CC(v136);
      if (v137)
      {
LABEL_31:
        swift_release();
        swift_release();
        uint64_t v135 = v216;
LABEL_32:
        sub_1C3F924DC(v135, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
        return sub_1C3F924DC((uint64_t)v182, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
      }
      uint64_t v149 = v138;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1238);
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = 0;
      swift_beginAccess();
      *(void *)(v119 + 16) = v149;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_43:
      uint64_t v157 = v216;
LABEL_44:
      sub_1C3F924DC(v157, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
      uint64_t v158 = (uint64_t)v182;
      goto LABEL_45;
    default:
      uint64_t v80 = v205;
      sub_1C446A41C((uint64_t)v182, v205, type metadata accessor for Proto_Register);
      uint64_t v81 = *(int *)(v196 + 20);
      uint64_t v82 = *(void *)(v80 + v81)
          + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
      swift_beginAccess();
      uint64_t v83 = (uint64_t)v180;
      sub_1C3F970C4(v82, (uint64_t)v180, &qword_1EBBC04F8);
      LODWORD(v82) = v179(v83, 1, v67);
      sub_1C3F962E0(v83, &qword_1EBBC04F8);
      if (v82 == 1)
      {
        uint64_t v84 = *(void *)(v80 + v81)
            + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
        swift_beginAccess();
        sub_1C3F970C4(v84, v78, &qword_1EBBC0620);
        uint64_t v85 = type metadata accessor for Proto_Timestamp(0);
        LODWORD(v84) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v78, 1, v85);
        sub_1C3F962E0(v78, &qword_1EBBC0620);
        if (v84 == 1)
        {
          uint64_t v86 = v187;
          sub_1C3FBA924(v187);
          uint64_t v87 = *(void *)(inited + 16);
          swift_retain();
          uint64_t v88 = v87;
          uint64_t v89 = v213;
          sub_1C4452A14(v86, v88, &v218);
          uint64_t v90 = v216;
          if (v89) {
            goto LABEL_48;
          }
          uint64_t v176 = v218;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1290);
          uint64_t v119 = swift_allocObject();
          *(void *)(v119 + 16) = 0;
          swift_beginAccess();
          *(void *)(v119 + 16) = v176;
          uint64_t v158 = v90;
          swift_release();
          swift_release();
        }
        else
        {
          sub_1C3FBA924(v79);
          uint64_t v160 = *(void *)(inited + 16);
          swift_retain();
          uint64_t v161 = v160;
          uint64_t v162 = v213;
          sub_1C4450740(v79, v161, &v218);
          uint64_t v90 = v216;
          if (v162)
          {
LABEL_48:
            swift_release();
            swift_release();
            sub_1C3F924DC(v205, type metadata accessor for Proto_Register);
            return sub_1C3F924DC(v90, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
          }
          uint64_t v177 = v218;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1298);
          uint64_t v119 = swift_allocObject();
          *(void *)(v119 + 16) = 1;
          swift_beginAccess();
          uint64_t v178 = *(void *)(v119 + 16);
          *(void *)(v119 + 16) = v177;
          swift_retain();
          sub_1C4469B14(v178);
          swift_release();
          uint64_t v158 = v90;
          swift_release();
        }
        swift_release();
      }
      else
      {
        uint64_t v139 = v191;
        sub_1C3FBA924(v191);
        uint64_t v140 = *(void *)(inited + 16);
        swift_retain();
        uint64_t v141 = v192;
        uint64_t v142 = v140;
        uint64_t v143 = v213;
        sub_1C4452018(v139, v142, v192);
        if (v143)
        {
          swift_release();
          swift_release();
          sub_1C3F924DC(v205, type metadata accessor for Proto_Register);
          return sub_1C3F924DC(v216, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
        }
        uint64_t v170 = v183;
        sub_1C3F970C4(v141, v183, &qword_1EA3A1228);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A12A0);
        uint64_t v171 = swift_allocObject();
        uint64_t v172 = v171 + *(void *)(*(void *)v171 + 280);
        v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v184 + 56);
        uint64_t v174 = v185;
        v173(v172, 1, 1, v185);
        sub_1C3F961BC(v170, v77, &qword_1EA3A1228);
        v173(v77, 0, 1, v174);
        uint64_t v158 = v216;
        swift_beginAccess();
        swift_retain();
        sub_1C3F98338(v77, v172, &qword_1EA3A1220);
        swift_endAccess();
        swift_release();
        swift_release();
        uint64_t v119 = v171;
        swift_release();
        sub_1C3F962E0(v192, &qword_1EA3A1228);
      }
      sub_1C3F924DC(v205, type metadata accessor for Proto_Register);
LABEL_45:
      uint64_t v159 = v212;
      goto LABEL_46;
  }
}

uint64_t AnyCRDT.visitReferences(_:)(void *a1)
{
  return sub_1C4456C64(a1, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_1C4469148);
}

uint64_t AnyCRDT.initPartialCRDT(from:)()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232))();
}

uint64_t sub_1C4450740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v200 = a3;
  uint64_t v203 = a2;
  uint64_t v4 = type metadata accessor for Proto_CRDT(0);
  uint64_t v192 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v172 = (uint64_t)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v177 = (uint64_t)&v162 - v7;
  uint64_t v196 = type metadata accessor for Proto_Value(0);
  uint64_t v199 = *(void *)(v196 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v196);
  v173 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v190 = (char *)&v162 - v10;
  uint64_t v195 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v198 = *(void *)(v195 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v195);
  uint64_t v178 = (unint64_t *)((char *)&v162 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v183 = (unint64_t *)((char *)&v162 - v14);
  MEMORY[0x1F4188790](v13);
  uint64_t v188 = (unint64_t *)((char *)&v162 - v15);
  uint64_t v16 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v167 = (uint64_t)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  BOOL v179 = (char *)&v162 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v184 = (uint64_t)&v162 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v174 = (uint64_t)&v162 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v189 = (char *)&v162 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v27 = MEMORY[0x1F4188790](v26 - 8);
  uint64_t v176 = (char *)&v162 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v182 = (uint64_t)&v162 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v186 = (uint64_t)&v162 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v162 - v33;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v36 = MEMORY[0x1F4188790](v35 - 8);
  uint64_t v169 = (uint64_t)&v162 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v180 = (uint64_t)&v162 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v185 = (uint64_t)&v162 - v41;
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)&v162 - v42;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v45 = MEMORY[0x1F4188790](v44 - 8);
  uint64_t v171 = (uint64_t)&v162 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  uint64_t v187 = (char *)&v162 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v191 = (uint64_t)&v162 - v50;
  MEMORY[0x1F4188790](v49);
  char v52 = (char *)&v162 - v51;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  uint64_t v54 = MEMORY[0x1F4188790](v53 - 8);
  uint64_t v168 = (uint64_t)&v162 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  uint64_t v175 = (uint64_t)&v162 - v57;
  MEMORY[0x1F4188790](v56);
  uint64_t v59 = (char *)&v162 - v58;
  uint64_t v194 = type metadata accessor for Proto_Register(0);
  uint64_t v60 = MEMORY[0x1F4188790](v194);
  uint64_t v170 = (uint64_t)&v162 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  uint64_t v181 = (uint64_t)&v162 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  uint64_t v66 = (char *)&v162 - v65;
  MEMORY[0x1F4188790](v64);
  uint64_t v197 = (uint64_t)&v162 - v67;
  uint64_t v193 = v4;
  uint64_t v68 = *(int *)(v4 + 20);
  uint64_t v202 = a1;
  uint64_t v69 = *(void *)(a1 + v68)
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v69, (uint64_t)v59, &qword_1EBBC0648);
  uint64_t v70 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  uint64_t v73 = v71 + 48;
  if (v72(v59, 1, v70) == 1)
  {
    sub_1C3F962E0((uint64_t)v59, &qword_1EBBC0648);
LABEL_6:
    if (swift_conformsToProtocol2()) {
      uint64_t v76 = &type metadata for AnyCRValue;
    }
    else {
      uint64_t v76 = 0;
    }
    if (v76)
    {
      swift_release();
      uint64_t result = sub_1C3F924DC(v202, type metadata accessor for Proto_CRDT);
      void *v200 = 0;
      return result;
    }
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v78 = 0xD00000000000001CLL;
    *(void *)(v78 + 8) = 0x80000001C44B3190;
    *(unsigned char *)(v78 + 16) = 0;
    swift_willThrow();
    swift_release();
    uint64_t v79 = type metadata accessor for Proto_CRDT;
    uint64_t v80 = v202;
    return sub_1C3F924DC(v80, v79);
  }
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v74 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf;
    uint64_t v75 = (uint64_t)v59;
LABEL_5:
    sub_1C3F924DC(v75, v74);
    goto LABEL_6;
  }
  uint64_t v162 = v73;
  uint64_t v163 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v72;
  uint64_t v164 = v70;
  uint64_t v81 = v197;
  sub_1C446A41C((uint64_t)v59, v197, type metadata accessor for Proto_Register);
  uint64_t v82 = v194;
  uint64_t v166 = *(int *)(v194 + 20);
  uint64_t v83 = *(void *)(v81 + v166)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v83, (uint64_t)v52, &qword_1EBBC0540);
  uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v199 + 48);
  v199 += 48;
  uint64_t v165 = v84;
  LODWORD(v83) = v84((uint64_t)v52, 1, v196);
  uint64_t v85 = (uint64_t)v52;
  uint64_t v86 = v81;
  sub_1C3F962E0(v85, &qword_1EBBC0540);
  sub_1C446A3B4(v81, (uint64_t)v66, type metadata accessor for Proto_Register);
  if (v83 == 1)
  {
    uint64_t v87 = *(void *)&v66[*(int *)(v82 + 20)]
        + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    sub_1C3F970C4(v87, (uint64_t)v43, &qword_1EBBC04F8);
    LODWORD(v87) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v192 + 48))(v43, 1, v193);
    sub_1C3F962E0((uint64_t)v43, &qword_1EBBC04F8);
    sub_1C3F924DC((uint64_t)v66, type metadata accessor for Proto_Register);
    uint64_t v88 = v195;
    if (v87 == 1)
    {
      uint64_t v74 = type metadata accessor for Proto_Register;
      uint64_t v75 = v81;
      goto LABEL_5;
    }
  }
  else
  {
    sub_1C3F924DC((uint64_t)v66, type metadata accessor for Proto_Register);
    uint64_t v88 = v195;
  }
  uint64_t v89 = v166;
  uint64_t v90 = *(void *)(v86 + v166)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1C3F970C4(v90, (uint64_t)v34, &qword_1EBBC0620);
  uint64_t v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v198 + 48);
  v198 += 48;
  LODWORD(v90) = v91(v34, 1, v88);
  sub_1C3F962E0((uint64_t)v34, &qword_1EBBC0620);
  uint64_t v92 = v203;
  if (v90 == 1)
  {
    sub_1C3F924DC(v86, type metadata accessor for Proto_Register);
    goto LABEL_6;
  }
  uint64_t v93 = *(void *)(v86 + v89)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v94 = v191;
  sub_1C3F970C4(v93, v191, &qword_1EBBC0540);
  LODWORD(v93) = v165(v94, 1, v196);
  sub_1C3F962E0(v94, &qword_1EBBC0540);
  uint64_t v95 = *(void *)(v86 + v89);
  if (v93 == 1)
  {
    uint64_t v96 = v95 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    uint64_t v97 = v185;
    sub_1C3F970C4(v96, v185, &qword_1EBBC04F8);
    uint64_t v98 = v193;
    uint64_t v99 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v192 + 48);
    LODWORD(v96) = v99(v97, 1, v193);
    sub_1C3F962E0(v97, &qword_1EBBC04F8);
    if (v96 == 1)
    {
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v100 = 0xD00000000000001CLL;
      *(void *)(v100 + 8) = 0x80000001C44B3190;
      *(unsigned char *)(v100 + 16) = 0;
      swift_willThrow();
LABEL_35:
      swift_release();
      sub_1C3F924DC(v202, type metadata accessor for Proto_CRDT);
      uint64_t v79 = type metadata accessor for Proto_Register;
      uint64_t v80 = v197;
      return sub_1C3F924DC(v80, v79);
    }
    uint64_t v104 = *(void *)(v197 + v166)
         + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    uint64_t v105 = v182;
    sub_1C3F970C4(v104, v182, &qword_1EBBC0620);
    if (v91((char *)v105, 1, v195) == 1)
    {
      uint64_t v106 = v183;
      *uint64_t v183 = 0;
      v106[1] = 0;
      sub_1C4496888();
      sub_1C3F962E0(v105, &qword_1EBBC0620);
    }
    else
    {
      uint64_t v106 = v183;
      sub_1C446A41C(v105, (uint64_t)v183, type metadata accessor for Proto_Timestamp);
    }
    uint64_t v115 = v201;
    uint64_t v116 = v184;
    swift_retain();
    sub_1C43A3E60(v106, v92, v116);
    if (v115) {
      goto LABEL_35;
    }
    uint64_t v118 = *(void *)(v197 + v166)
         + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    uint64_t v119 = v118;
    uint64_t v120 = v180;
    sub_1C3F970C4(v119, v180, &qword_1EBBC04F8);
    if (v99(v120, 1, v98) == 1)
    {
      uint64_t v121 = v177;
      sub_1C4496888();
      uint64_t v122 = *(int *)(v98 + 20);
      if (qword_1EBBC0668 != -1) {
        swift_once();
      }
      *(void *)(v121 + v122) = qword_1EBBC0660;
      swift_retain();
      sub_1C3F962E0(v180, &qword_1EBBC04F8);
    }
    else
    {
      uint64_t v121 = v177;
      sub_1C446A41C(v120, v177, type metadata accessor for Proto_CRDT);
    }
    uint64_t v127 = *(void *)(v121 + *(int *)(v98 + 20))
         + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v128 = v175;
    sub_1C3F970C4(v127, v175, &qword_1EBBC0648);
    if (v163(v128, 1, v164) == 1)
    {
      sub_1C3F962E0(v128, &qword_1EBBC0648);
      uint64_t v129 = (uint64_t)v176;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v131 = v128;
      uint64_t v129 = (uint64_t)v176;
      if (!EnumCaseMultiPayload)
      {
        uint64_t v135 = v181;
        sub_1C446A41C(v131, v181, type metadata accessor for Proto_Register);
        goto LABEL_50;
      }
      sub_1C3F924DC(v131, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    uint64_t v132 = v181;
    sub_1C4496888();
    uint64_t v133 = v132;
    uint64_t v134 = *(int *)(v194 + 20);
    if (qword_1EBBBF248 != -1) {
      swift_once();
    }
    *(void *)(v133 + v134) = qword_1EBBBF238;
    swift_retain();
    uint64_t v135 = v133;
LABEL_50:
    sub_1C3F924DC(v121, type metadata accessor for Proto_CRDT);
    uint64_t v136 = *(void *)(v135 + *(int *)(v194 + 20))
         + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    sub_1C3F970C4(v136, v129, &qword_1EBBC0620);
    if (v91((char *)v129, 1, v195) == 1)
    {
      uint64_t v137 = v178;
      unint64_t *v178 = 0;
      v137[1] = 0;
      sub_1C4496888();
      sub_1C3F962E0(v129, &qword_1EBBC0620);
    }
    else
    {
      uint64_t v137 = v178;
      sub_1C446A41C(v129, (uint64_t)v178, type metadata accessor for Proto_Timestamp);
    }
    uint64_t v138 = v197;
    uint64_t v139 = (uint64_t)v179;
    sub_1C3F924DC(v181, type metadata accessor for Proto_Register);
    uint64_t v140 = v203;
    swift_retain();
    sub_1C43A3E60(v137, v140, v139);
    uint64_t v141 = *(void *)(v138 + v166)
         + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    uint64_t v142 = v169;
    sub_1C3F970C4(v141, v169, &qword_1EBBC04F8);
    uint64_t v143 = v193;
    if (v99(v142, 1, v193) == 1)
    {
      uint64_t v144 = v172;
      sub_1C4496888();
      uint64_t v145 = *(int *)(v143 + 20);
      uint64_t v146 = (uint64_t)v173;
      if (qword_1EBBC0668 != -1) {
        swift_once();
      }
      *(void *)(v144 + v145) = qword_1EBBC0660;
      swift_retain();
      sub_1C3F962E0(v142, &qword_1EBBC04F8);
    }
    else
    {
      uint64_t v144 = v172;
      sub_1C446A41C(v142, v172, type metadata accessor for Proto_CRDT);
      uint64_t v146 = (uint64_t)v173;
    }
    uint64_t v147 = *(void *)(v144 + *(int *)(v193 + 20))
         + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v148 = v147;
    uint64_t v149 = v168;
    sub_1C3F970C4(v148, v168, &qword_1EBBC0648);
    if (v163(v149, 1, v164) == 1)
    {
      sub_1C3F962E0(v149, &qword_1EBBC0648);
    }
    else
    {
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v150 = v170;
        sub_1C446A41C(v149, v170, type metadata accessor for Proto_Register);
LABEL_66:
        uint64_t v152 = v203;
        sub_1C3F924DC(v144, type metadata accessor for Proto_CRDT);
        uint64_t v153 = *(void *)(v150 + *(int *)(v194 + 20))
             + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
        swift_beginAccess();
        uint64_t v154 = v171;
        sub_1C3F970C4(v153, v171, &qword_1EBBC0540);
        uint64_t v155 = v196;
        if (v165(v154, 1, v196) == 1)
        {
          sub_1C4496888();
          uint64_t v156 = *(int *)(v155 + 20);
          if (qword_1EBBBF8C8 != -1) {
            swift_once();
          }
          *(void *)(v146 + v156) = qword_1EBBBF8B8;
          swift_retain();
          sub_1C3F962E0(v154, &qword_1EBBC0540);
        }
        else
        {
          sub_1C446A41C(v154, v146, type metadata accessor for Proto_Value);
        }
        sub_1C3F924DC(v150, type metadata accessor for Proto_Register);
        type metadata accessor for CRDecoder(0);
        swift_allocObject();
        swift_retain();
        uint64_t v157 = sub_1C3F974B0(v146, v152);
        swift_release();
        AnyCRValue.init(from:)(v157, &v205);
        swift_release();
        sub_1C3F924DC(v202, type metadata accessor for Proto_CRDT);
        sub_1C3F924DC(v138, type metadata accessor for Proto_Register);
        uint64_t v158 = v205;
        uint64_t v159 = v174;
        sub_1C446A41C(v184, v174, type metadata accessor for FinalizedTimestamp);
        uint64_t v160 = v167;
        sub_1C446A41C(v139, v167, type metadata accessor for FinalizedTimestamp);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A13B0);
        uint64_t v161 = (void *)swift_allocObject();
        v161[2] = v158;
        sub_1C446A41C(v159, (uint64_t)v161 + *(void *)(*v161 + 216), type metadata accessor for FinalizedTimestamp);
        uint64_t result = sub_1C446A41C(v160, (uint64_t)v161 + *(void *)(*v161 + 224), type metadata accessor for FinalizedTimestamp);
        void *v200 = v161;
        return result;
      }
      sub_1C3F924DC(v149, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    uint64_t v150 = v170;
    sub_1C4496888();
    uint64_t v151 = *(int *)(v194 + 20);
    if (qword_1EBBBF248 != -1) {
      swift_once();
    }
    *(void *)(v150 + v151) = qword_1EBBBF238;
    swift_retain();
    goto LABEL_66;
  }
  uint64_t v101 = v95 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  uint64_t v102 = v186;
  sub_1C3F970C4(v101, v186, &qword_1EBBC0620);
  if (v91((char *)v102, 1, v88) == 1)
  {
    uint64_t v103 = v188;
    *uint64_t v188 = 0;
    v103[1] = 0;
    sub_1C4496888();
    sub_1C3F962E0(v102, &qword_1EBBC0620);
  }
  else
  {
    uint64_t v103 = v188;
    sub_1C446A41C(v102, (uint64_t)v188, type metadata accessor for Proto_Timestamp);
  }
  uint64_t v107 = v201;
  uint64_t v108 = v197;
  uint64_t v110 = (uint64_t)v189;
  uint64_t v109 = (uint64_t)v190;
  uint64_t v111 = (uint64_t)v187;
  swift_retain();
  sub_1C43A3E60(v103, v92, v110);
  if (v107)
  {
    swift_release();
    sub_1C3F924DC(v202, type metadata accessor for Proto_CRDT);
    uint64_t v79 = type metadata accessor for Proto_Register;
    uint64_t v80 = v108;
    return sub_1C3F924DC(v80, v79);
  }
  uint64_t v112 = *(void *)(v108 + v166)
       + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v112, v111, &qword_1EBBC0540);
  uint64_t v113 = v196;
  if (v165(v111, 1, v196) == 1)
  {
    sub_1C4496888();
    uint64_t v114 = *(int *)(v113 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)(v109 + v114) = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0(v111, &qword_1EBBC0540);
  }
  else
  {
    sub_1C446A41C(v111, v109, type metadata accessor for Proto_Value);
  }
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  uint64_t v117 = sub_1C3F974B0(v109, v92);
  swift_release();
  AnyCRValue.init(from:)(v117, v204);
  swift_release();
  sub_1C3F924DC(v202, type metadata accessor for Proto_CRDT);
  sub_1C3F924DC(v108, type metadata accessor for Proto_Register);
  uint64_t v123 = v204[0];
  uint64_t v124 = v110;
  uint64_t v125 = v174;
  sub_1C446A41C(v124, v174, type metadata accessor for FinalizedTimestamp);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A13B8);
  uint64_t v126 = (void *)swift_allocObject();
  v126[2] = v123;
  uint64_t result = sub_1C446A41C(v125, (uint64_t)v126 + *(void *)(*v126 + 216), type metadata accessor for FinalizedTimestamp);
  void *v200 = v126;
  return result;
}

uint64_t sub_1C4452018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v63 = a3;
  uint64_t v4 = type metadata accessor for Proto_CRDT(0);
  uint64_t v72 = *(void **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v65 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v64 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v66 = (uint64_t)&v62 - v9;
  uint64_t v10 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v70 = (unint64_t *)((char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v68 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v69 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v73 = (char *)&v62 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v4;
  uint64_t v28 = *(int *)(v4 + 20);
  uint64_t v75 = a1;
  uint64_t v29 = *(void *)(a1 + v28)
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v29, (uint64_t)v24, &qword_1EBBC0648);
  uint64_t v30 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v24, 1, v30) == 1)
  {
    sub_1C3F962E0((uint64_t)v24, &qword_1EBBC0648);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1C446A41C((uint64_t)v24, (uint64_t)v27, type metadata accessor for Proto_Register);
      goto LABEL_8;
    }
    sub_1C3F924DC((uint64_t)v24, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v31 = *(int *)(v25 + 20);
  if (qword_1EBBBF248 != -1) {
    swift_once();
  }
  *(void *)&v27[v31] = qword_1EBBBF238;
  swift_retain();
LABEL_8:
  uint64_t v32 = *(int *)(v25 + 20);
  uint64_t v33 = *(void *)&v27[v32]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1C3F970C4(v33, (uint64_t)v17, &qword_1EBBC0620);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v33) = v34(v17, 1, v10);
  sub_1C3F962E0((uint64_t)v17, &qword_1EBBC0620);
  if (v33 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v35 = 0xD000000000000021;
    *(void *)(v35 + 8) = 0x80000001C44B3720;
    *(unsigned char *)(v35 + 16) = 0;
    swift_willThrow();
    swift_release();
    sub_1C3F924DC(v75, type metadata accessor for Proto_CRDT);
    uint64_t v36 = (uint64_t)v27;
    return sub_1C3F924DC(v36, type metadata accessor for Proto_Register);
  }
  uint64_t v37 = *(void *)&v27[v32]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  uint64_t v38 = v37;
  uint64_t v39 = v68;
  sub_1C3F970C4(v38, v68, &qword_1EBBC0620);
  int v40 = v34((char *)v39, 1, v10);
  uint64_t v41 = v74;
  uint64_t v42 = v27;
  uint64_t v43 = v70;
  if (v40 == 1)
  {
    *uint64_t v70 = 0;
    v43[1] = 0;
    sub_1C4496888();
    sub_1C3F962E0(v39, &qword_1EBBC0620);
  }
  else
  {
    sub_1C446A41C(v39, (uint64_t)v70, type metadata accessor for Proto_Timestamp);
  }
  uint64_t v44 = v72;
  uint64_t v45 = (uint64_t)v73;
  uint64_t v46 = (uint64_t)v69;
  swift_retain();
  uint64_t v47 = v71;
  sub_1C43A3E60(v43, v41, v46);
  if (v47)
  {
    swift_release();
    sub_1C3F924DC(v75, type metadata accessor for Proto_CRDT);
    uint64_t v36 = (uint64_t)v42;
    return sub_1C3F924DC(v36, type metadata accessor for Proto_Register);
  }
  sub_1C446A41C(v46, v45, type metadata accessor for FinalizedTimestamp);
  uint64_t v48 = *(void *)&v42[v32]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  uint64_t v73 = v42;
  uint64_t v49 = v66;
  sub_1C3F970C4(v48, v66, &qword_1EBBC04F8);
  uint64_t v50 = v67;
  uint64_t v72 = (void *)v44[6];
  LODWORD(v48) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v72)(v49, 1, v67);
  sub_1C3F962E0(v49, &qword_1EBBC04F8);
  if (v48 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v51 = 0xD000000000000016;
    *(void *)(v51 + 8) = 0x80000001C44B3750;
    *(unsigned char *)(v51 + 16) = 0;
    swift_willThrow();
    swift_release();
    sub_1C3F924DC(v75, type metadata accessor for Proto_CRDT);
    sub_1C3F924DC(v45, type metadata accessor for FinalizedTimestamp);
    uint64_t v36 = (uint64_t)v73;
    return sub_1C3F924DC(v36, type metadata accessor for Proto_Register);
  }
  uint64_t v52 = v45;
  uint64_t v53 = (uint64_t)v73;
  uint64_t v54 = *(void *)&v73[v32]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  uint64_t v55 = v64;
  sub_1C3F970C4(v54, v64, &qword_1EBBC04F8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v72)(v55, 1, v50) == 1)
  {
    uint64_t v56 = v65;
    sub_1C4496888();
    uint64_t v57 = *(int *)(v50 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)(v56 + v57) = qword_1EBBC0660;
    swift_retain();
    sub_1C3F962E0(v55, &qword_1EBBC04F8);
  }
  else
  {
    uint64_t v56 = v65;
    sub_1C446A41C(v55, v65, type metadata accessor for Proto_CRDT);
  }
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  uint64_t v58 = sub_1C3FB9A38(v56, v41);
  swift_release();
  AnyCRDT.init(from:)(&v76, v58);
  swift_release();
  sub_1C3F924DC(v75, type metadata accessor for Proto_CRDT);
  sub_1C3F924DC(v53, type metadata accessor for Proto_Register);
  uint64_t v59 = v76;
  uint64_t v60 = v63;
  sub_1C446A41C(v52, v63, type metadata accessor for FinalizedTimestamp);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1228);
  *(void *)(v60 + *(int *)(result + 36)) = v59;
  return result;
}

uint64_t sub_1C4452A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v4 = type metadata accessor for Proto_Value(0);
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  uint64_t v41 = a1;
  uint64_t v20 = *(void *)(a1 + v19)
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v15, &qword_1EBBC0648);
  uint64_t v21 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
    sub_1C3F962E0((uint64_t)v15, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v22 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf;
      uint64_t v23 = (uint64_t)v15;
    }
    else
    {
      sub_1C446A41C((uint64_t)v15, (uint64_t)v18, type metadata accessor for Proto_Register);
      uint64_t v24 = *(int *)(v16 + 20);
      uint64_t v25 = *(void *)&v18[v24]
          + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
      swift_beginAccess();
      sub_1C3F970C4(v25, (uint64_t)v12, &qword_1EBBC0540);
      uint64_t v38 = *(void *)(v38 + 48);
      LODWORD(v25) = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v12, 1, v4);
      sub_1C3F962E0((uint64_t)v12, &qword_1EBBC0540);
      if (v25 != 1)
      {
        uint64_t v33 = *(void *)&v18[v24]
            + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
        swift_beginAccess();
        sub_1C3F970C4(v33, (uint64_t)v10, &qword_1EBBC0540);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v38)(v10, 1, v4) == 1)
        {
          sub_1C4496888();
          uint64_t v34 = *(int *)(v4 + 20);
          if (qword_1EBBBF8C8 != -1) {
            swift_once();
          }
          *(void *)&v6[v34] = qword_1EBBBF8B8;
          swift_retain();
          sub_1C3F962E0((uint64_t)v10, &qword_1EBBC0540);
        }
        else
        {
          sub_1C446A41C((uint64_t)v10, (uint64_t)v6, type metadata accessor for Proto_Value);
        }
        type metadata accessor for CRDecoder(0);
        swift_allocObject();
        uint64_t v35 = v40;
        swift_retain();
        uint64_t v36 = sub_1C3F974B0((uint64_t)v6, v35);
        swift_release();
        uint64_t v37 = v42;
        uint64_t v31 = sub_1C41678F4(v36);
        swift_release();
        sub_1C3F924DC(v41, type metadata accessor for Proto_CRDT);
        uint64_t result = sub_1C3F924DC((uint64_t)v18, type metadata accessor for Proto_Register);
        if (!v37) {
          goto LABEL_19;
        }
        return result;
      }
      uint64_t v22 = type metadata accessor for Proto_Register;
      uint64_t v23 = (uint64_t)v18;
    }
    sub_1C3F924DC(v23, v22);
  }
  uint64_t v26 = swift_conformsToProtocol2();
  if (v26) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v26) {
    uint64_t v28 = &type metadata for AnyCRBuiltInComparable;
  }
  else {
    uint64_t v28 = 0;
  }
  if (v28)
  {
    uint64_t v29 = *(void (**)(ValueMetadata *, uint64_t))(v27 + 16);
    *((void *)&v44 + 1) = v28;
    uint64_t v45 = v27;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
    v29(v28, v27);
  }
  else
  {
    uint64_t v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBBBF20);
  if (swift_dynamicCast())
  {
    swift_release();
    uint64_t result = sub_1C3F924DC(v41, type metadata accessor for Proto_CRDT);
    uint64_t v31 = v46;
LABEL_19:
    *uint64_t v39 = v31;
    return result;
  }
  sub_1C3FE3FF0();
  swift_allocError();
  *(void *)uint64_t v32 = 0xD000000000000020;
  *(void *)(v32 + 8) = 0x80000001C44B2880;
  *(unsigned char *)(v32 + 16) = 0;
  swift_willThrow();
  swift_release();
  return sub_1C3F924DC(v41, type metadata accessor for Proto_CRDT);
}

uint64_t sub_1C445301C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v9, &qword_1EBBC0648);
  uint64_t v14 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v9, 1, v14) == 1)
  {
    sub_1C3F962E0((uint64_t)v9, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C446A41C((uint64_t)v9, (uint64_t)v12, type metadata accessor for Proto_Set);
      goto LABEL_9;
    }
    sub_1C3F924DC((uint64_t)v9, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v15 = *(int *)(v10 + 20);
  if (qword_1EBBC01E8 != -1) {
    swift_once();
  }
  *(void *)&v12[v15] = qword_1EBBC01E0;
  swift_retain();
LABEL_9:
  sub_1C445C68C((uint64_t)v12, a2, &v18);
  uint64_t result = sub_1C3F924DC(a1, type metadata accessor for Proto_CRDT);
  if (!v3) {
    *a3 = v18;
  }
  return result;
}

uint64_t sub_1C4453288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v9, &qword_1EBBC0648);
  uint64_t v14 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v9, 1, v14) == 1)
  {
    sub_1C3F962E0((uint64_t)v9, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1C446A41C((uint64_t)v9, (uint64_t)v12, type metadata accessor for Proto_Set);
      goto LABEL_9;
    }
    sub_1C3F924DC((uint64_t)v9, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v15 = *(int *)(v10 + 20);
  if (qword_1EBBC01E8 != -1) {
    swift_once();
  }
  *(void *)&v12[v15] = qword_1EBBC01E0;
  swift_retain();
LABEL_9:
  sub_1C4459228((uint64_t)v12, a2, 0, 0, (void (*)(void (*)(uint64_t), uint64_t))sub_1C446A484, &qword_1EA39C130, (void (*)(BOOL, unint64_t, uint64_t))sub_1C40125BC, (void (*)(uint64_t, uint64_t))sub_1C445A878, &v18, &qword_1EA39CBC8, (void (*)(void, void, void))sub_1C4468C10, (uint64_t)sub_1C3F53D40, &qword_1EA3A13C8);
  uint64_t result = sub_1C3F924DC(a1, type metadata accessor for Proto_CRDT);
  if (!v3) {
    *a3 = v18;
  }
  return result;
}

uint64_t sub_1C4453580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v9, &qword_1EBBC0648);
  uint64_t v14 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v9, 1, v14) == 1)
  {
    sub_1C3F962E0((uint64_t)v9, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1C446A41C((uint64_t)v9, (uint64_t)v12, type metadata accessor for Proto_Set);
      goto LABEL_9;
    }
    sub_1C3F924DC((uint64_t)v9, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v15 = *(int *)(v10 + 20);
  if (qword_1EBBC01E8 != -1) {
    swift_once();
  }
  *(void *)&v12[v15] = qword_1EBBC01E0;
  swift_retain();
LABEL_9:
  uint64_t v16 = sub_1C4467024((uint64_t)v12, a2, 0, 0);
  if (v3)
  {
    swift_release();
    sub_1C3F924DC(a1, type metadata accessor for Proto_CRDT);
    return sub_1C3F924DC((uint64_t)v12, type metadata accessor for Proto_Set);
  }
  else
  {
    uint64_t v18 = v16;
    sub_1C3F924DC((uint64_t)v12, type metadata accessor for Proto_Set);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A13D0);
    uint64_t v19 = swift_allocObject();
    sub_1C4496668();
    *(void *)(v19 + 16) = v18;
    swift_release();
    uint64_t result = sub_1C3F924DC(a1, type metadata accessor for Proto_CRDT);
    *a3 = v19;
  }
  return result;
}

uint64_t sub_1C445388C@<X0>(void *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_OrderedSet(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24[-1] - v10;
  uint64_t v12 = type metadata accessor for Proto_CRDT(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v24[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v15);
  uint64_t v16 = *(void *)&v15[*(int *)(v13 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v5, &qword_1EBBC0648);
  uint64_t v17 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v5, 1, v17) == 1)
  {
    sub_1C3F962E0((uint64_t)v5, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_1C446A41C((uint64_t)v5, (uint64_t)v11, type metadata accessor for Proto_OrderedSet);
      goto LABEL_9;
    }
    sub_1C3F924DC((uint64_t)v5, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v18 = *(int *)(v6 + 20);
  if (qword_1EBBBC060 != -1) {
    swift_once();
  }
  *(void *)&v11[v18] = qword_1EBBBC058;
  swift_retain();
LABEL_9:
  sub_1C3F924DC((uint64_t)v15, type metadata accessor for Proto_CRDT);
  uint64_t v19 = *(void *)(v1 + 16);
  sub_1C446A3B4((uint64_t)v11, (uint64_t)v9, type metadata accessor for Proto_OrderedSet);
  swift_retain();
  sub_1C4455158((uint64_t)v9, v19, v24);
  uint64_t result = sub_1C3F924DC((uint64_t)v11, type metadata accessor for Proto_OrderedSet);
  if (!v2)
  {
    uint64_t v21 = v24[1];
    uint64_t v22 = v25;
    void *v25 = v24[0];
    v22[1] = v21;
  }
  return result;
}

uint64_t sub_1C4453BA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v12);
  uint64_t v13 = *(void *)&v12[*(int *)(v10 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v5, &qword_1EBBC0648);
  uint64_t v14 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14) == 1)
  {
    sub_1C3F962E0((uint64_t)v5, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_1C446A41C((uint64_t)v5, (uint64_t)v8, type metadata accessor for Proto_Sequence);
      goto LABEL_9;
    }
    sub_1C3F924DC((uint64_t)v5, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v15 = *(int *)(v6 + 20);
  if (qword_1EBBBC000 != -1) {
    swift_once();
  }
  *(void *)&v8[v15] = qword_1EBBBBFF0;
  swift_retain();
LABEL_9:
  sub_1C3F924DC((uint64_t)v12, type metadata accessor for Proto_CRDT);
  uint64_t v16 = *(void *)(v1 + 16);
  swift_retain();
  return sub_1C4453E40((uint64_t)v8, v16, a1);
}

uint64_t sub_1C4453E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a3;
  v22[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for Proto_Sequence(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v20 - v9;
  sub_1C446A3B4(a1, (uint64_t)&v20 - v9, type metadata accessor for Proto_Sequence);
  type metadata accessor for CRAttributedStringRef();
  uint64_t v11 = swift_allocObject();
  sub_1C446A3B4((uint64_t)v10, (uint64_t)v8, type metadata accessor for Proto_Sequence);
  id v12 = objc_allocWithZone((Class)type metadata accessor for CRAttributedStringDecoder(0));
  id v13 = sub_1C4131B78((uint64_t)v8, a2, (uint64_t)&type metadata for CRAttributeStringEmptyScope, (uint64_t)&off_1F1F9C010);
  id v14 = objc_allocWithZone((Class)CRTTMergeableString);
  v22[0] = 0;
  id v15 = objc_msgSend(v14, sel_initWithDecoder_error_, v13, v22);
  if (v15)
  {
    id v16 = v15;
    id v17 = v22[0];
    swift_release();

    sub_1C3F924DC((uint64_t)v10, type metadata accessor for Proto_Sequence);
    *(void *)(v11 + 16) = v16;
    uint64_t result = sub_1C3F924DC(a1, type metadata accessor for Proto_Sequence);
    *uint64_t v21 = v11;
  }
  else
  {
    id v19 = v22[0];
    sub_1C44963A8();

    swift_willThrow();
    swift_release();

    sub_1C3F924DC((uint64_t)v10, type metadata accessor for Proto_Sequence);
    swift_deallocPartialClassInstance();
    return sub_1C3F924DC(a1, type metadata accessor for Proto_Sequence);
  }
  return result;
}

uint64_t sub_1C4454094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v12);
  uint64_t v13 = *(void *)&v12[*(int *)(v10 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v5, &qword_1EBBC0648);
  uint64_t v14 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14) == 1)
  {
    sub_1C3F962E0((uint64_t)v5, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_1C446A41C((uint64_t)v5, (uint64_t)v8, type metadata accessor for Proto_Sequence);
      goto LABEL_9;
    }
    sub_1C3F924DC((uint64_t)v5, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v15 = *(int *)(v6 + 20);
  if (qword_1EBBBC000 != -1) {
    swift_once();
  }
  *(void *)&v8[v15] = qword_1EBBBBFF0;
  swift_retain();
LABEL_9:
  sub_1C3F924DC((uint64_t)v12, type metadata accessor for Proto_CRDT);
  uint64_t v16 = *(void *)(v1 + 16);
  swift_retain();
  return sub_1C4454330((uint64_t)v8, v16, a1);
}

uint64_t sub_1C4454330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v18[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C446A3B4(a1, (uint64_t)v8, type metadata accessor for Proto_Sequence);
  objc_allocWithZone((Class)type metadata accessor for CRSequenceDecoder(0));
  swift_retain_n();
  id v9 = sub_1C3F8D024((uint64_t)v8, a2, (uint64_t)sub_1C446A2C8, a2);
  swift_release_n();
  id v10 = objc_allocWithZone((Class)CRTTMergeableString);
  v18[0] = 0;
  id v11 = v9;
  id v12 = objc_msgSend(v10, sel_initWithDecoder_error_, v11, v18);
  if (v12)
  {
    id v13 = v12;
    id v14 = v18[0];

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1400);
    uint64_t v15 = swift_allocObject();
    sub_1C4496668();
    *(void *)(v15 + qword_1EBBC59D0) = v13;

    swift_release();
    uint64_t result = sub_1C3F924DC(a1, type metadata accessor for Proto_Sequence);
    *a3 = v15;
  }
  else
  {
    id v17 = v18[0];
    sub_1C44963A8();

    swift_willThrow();
    swift_release();

    return sub_1C3F924DC(a1, type metadata accessor for Proto_Sequence);
  }
  return result;
}

uint64_t sub_1C4454568@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_OrderedSet(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v12);
  uint64_t v13 = *(void *)&v12[*(int *)(v10 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v5, &qword_1EBBC0648);
  uint64_t v14 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14) == 1)
  {
    sub_1C3F962E0((uint64_t)v5, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_1C446A41C((uint64_t)v5, (uint64_t)v8, type metadata accessor for Proto_OrderedSet);
      goto LABEL_9;
    }
    sub_1C3F924DC((uint64_t)v5, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v15 = *(int *)(v6 + 20);
  if (qword_1EBBBC060 != -1) {
    swift_once();
  }
  *(void *)&v8[v15] = qword_1EBBBC058;
  swift_retain();
LABEL_9:
  sub_1C3F924DC((uint64_t)v12, type metadata accessor for Proto_CRDT);
  uint64_t v16 = *(void *)(v1 + 16);
  swift_retain();
  return sub_1C4454804((uint64_t)v8, v16, a1);
}

uint64_t sub_1C4454804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC06E8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v69 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for Proto_Sequence(0);
  uint64_t v62 = *(void *)(v65 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v65);
  uint64_t v60 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = (char *)&v60 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0748);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v60 - v16;
  uint64_t v18 = type metadata accessor for Proto_Set(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v67 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v60 - v22;
  uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1218) + 48);
  uint64_t v64 = a3;
  uint64_t v25 = (uint64_t)a3 + v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1410);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v66 = v25;
  v27(v25, 1, 1, v26);
  unint64_t v74 = MEMORY[0x1E4FBC860];
  uint64_t v28 = *(int *)(type metadata accessor for Proto_OrderedSet(0) + 20);
  uint64_t v72 = a1;
  uint64_t v61 = v28;
  uint64_t v29 = *(void *)(a1 + v28);
  uint64_t v30 = v29 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  sub_1C3F970C4(v30, (uint64_t)v17, (uint64_t *)&unk_1EBBC0748);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v31(v17, 1, v18) == 1)
  {
    sub_1C4496888();
    uint64_t v32 = *(int *)(v18 + 20);
    if (qword_1EBBC01E8 != -1) {
      swift_once();
    }
    *(void *)&v23[v32] = qword_1EBBC01E0;
    swift_retain();
    sub_1C3F962E0((uint64_t)v17, (uint64_t *)&unk_1EBBC0748);
  }
  else
  {
    sub_1C446A41C((uint64_t)v17, (uint64_t)v23, type metadata accessor for Proto_Set);
  }
  uint64_t v33 = (uint64_t)v67;
  uint64_t v34 = (uint64_t *)(*(void *)&v23[*(int *)(v18 + 20)]
                  + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
  swift_beginAccess();
  uint64_t v35 = *v34;
  swift_bridgeObjectRetain();
  sub_1C3F924DC((uint64_t)v23, type metadata accessor for Proto_Set);
  unint64_t v36 = *(void *)(v35 + 16);
  swift_bridgeObjectRelease();
  unint64_t v37 = MEMORY[0x1E4FBC860];
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v36 > *(void *)(v37 + 24) >> 1)
  {
    if (*(void *)(v37 + 16) <= v36) {
      int64_t v39 = v36;
    }
    else {
      int64_t v39 = *(void *)(v37 + 16);
    }
    unint64_t v37 = sub_1C3FF13CC(isUniquelyReferenced_nonNull_native, v39, 0, v37);
  }
  unint64_t v74 = v37;
  uint64_t v40 = v29 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  sub_1C3F970C4(v40, (uint64_t)v15, (uint64_t *)&unk_1EBBC0748);
  if (v31(v15, 1, v18) == 1)
  {
    sub_1C4496888();
    uint64_t v41 = *(int *)(v18 + 20);
    uint64_t v43 = v71;
    uint64_t v42 = v72;
    uint64_t v44 = (uint64_t)v69;
    if (qword_1EBBC01E8 != -1) {
      swift_once();
    }
    *(void *)(v33 + v41) = qword_1EBBC01E0;
    swift_retain();
    uint64_t v45 = sub_1C3F962E0((uint64_t)v15, (uint64_t *)&unk_1EBBC0748);
    uint64_t v46 = (uint64_t)v70;
  }
  else
  {
    uint64_t v45 = sub_1C446A41C((uint64_t)v15, v33, type metadata accessor for Proto_Set);
    uint64_t v43 = v71;
    uint64_t v42 = v72;
    uint64_t v44 = (uint64_t)v69;
    uint64_t v46 = (uint64_t)v70;
  }
  MEMORY[0x1F4188790](v45);
  *(&v60 - 4) = v43;
  *(&v60 - 3) = v42;
  *(&v60 - 2) = (uint64_t)&v74;
  swift_retain();
  uint64_t v47 = v68;
  sub_1C445D1E4(v33, sub_1C446A2E4, &v60 - 6, v43, &v73);
  if (v47)
  {
    swift_release();
    sub_1C3F924DC(v42, type metadata accessor for Proto_OrderedSet);
    swift_bridgeObjectRelease();
    return sub_1C3F962E0(v66, &qword_1EA3A1418);
  }
  else
  {
    uint64_t v49 = v64;
    v64[1] = v73;
    uint64_t v50 = *(void *)(v42 + v61)
        + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
    swift_beginAccess();
    sub_1C3F970C4(v50, v44, &qword_1EBBC06E8);
    uint64_t v51 = v65;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v44, 1, v65) == 1)
    {
      sub_1C4496888();
      uint64_t v52 = *(int *)(v51 + 20);
      if (qword_1EBBBC000 != -1) {
        swift_once();
      }
      *(void *)(v46 + v52) = qword_1EBBBBFF0;
      swift_retain();
      sub_1C3F962E0(v44, &qword_1EBBC06E8);
      uint64_t v51 = v65;
    }
    else
    {
      sub_1C446A41C(v44, v46, type metadata accessor for Proto_Sequence);
    }
    uint64_t v53 = v74;
    uint64_t v54 = *(void *)(v46 + *(int *)(v51 + 20))
        + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    uint64_t v55 = v54;
    uint64_t v56 = v63;
    sub_1C3F970C4(v55, v63, &qword_1EBBC0578);
    uint64_t v57 = type metadata accessor for Proto_Version(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v56, 1, v57) == 1)
    {
      sub_1C3F962E0(v56, &qword_1EBBC0578);
      sub_1C3F924DC(v46, type metadata accessor for Proto_Sequence);
      uint64_t v58 = 0;
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C3F962E0(v56, &qword_1EBBC0578);
      uint64_t v59 = v60;
      sub_1C446A3B4(v46, v60, type metadata accessor for Proto_Sequence);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1420);
      swift_allocObject();
      uint64_t v58 = sub_1C445C0F0(v59, v53, v43, (uint64_t)&unk_1F1FA2E08, (uint64_t)sub_1C446A304);
      sub_1C3F924DC(v46, type metadata accessor for Proto_Sequence);
    }
    void *v49 = v58;
    sub_1C445D9AC(0);
    swift_release();
    sub_1C3F924DC(v42, type metadata accessor for Proto_OrderedSet);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C4455158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v47 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v52 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC06E8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v50 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for Proto_Sequence(0);
  uint64_t v49 = *(void *)(v51 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v51);
  uint64_t v46 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v48 = (uint64_t)&v45 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0748);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Set(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  uint64_t v56 = v18;
  *(void *)(v18 + 16) = 0;
  uint64_t v19 = (uint64_t *)(v18 + 16);
  uint64_t v20 = *(int *)(type metadata accessor for Proto_OrderedSet(0) + 20);
  uint64_t v21 = a1;
  uint64_t v22 = *(void *)(a1 + v20)
      + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  sub_1C3F970C4(v22, (uint64_t)v13, (uint64_t *)&unk_1EBBC0748);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C4496888();
    uint64_t v23 = *(int *)(v14 + 20);
    if (qword_1EBBC01E8 != -1) {
      swift_once();
    }
    *(void *)&v17[v23] = qword_1EBBC01E0;
    swift_retain();
    sub_1C3F962E0((uint64_t)v13, (uint64_t *)&unk_1EBBC0748);
  }
  else
  {
    sub_1C446A41C((uint64_t)v13, (uint64_t)v17, type metadata accessor for Proto_Set);
  }
  uint64_t v24 = v53;
  uint64_t v25 = v54;
  uint64_t v26 = v56;
  swift_retain();
  swift_retain();
  sub_1C4459228((uint64_t)v17, v25, (void (*)(void))sub_1C446A280, v26, (void (*)(void (*)(uint64_t), uint64_t))sub_1C3F7E5BC, &qword_1EA39C160, (void (*)(BOOL, unint64_t, uint64_t))sub_1C401256C, (void (*)(uint64_t, uint64_t))sub_1C4459E08, v55, &qword_1EA39CBD8, (void (*)(void, void, void))sub_1C4468170, (uint64_t)sub_1C3F53D40, &qword_1EA3A13F8);
  if (v24)
  {
    swift_release();
    sub_1C3F924DC(v21, type metadata accessor for Proto_OrderedSet);
    return swift_release();
  }
  uint64_t v27 = v55[0];
  uint64_t result = swift_beginAccess();
  uint64_t v29 = *v19;
  if (v29)
  {
    uint64_t v30 = v21;
    uint64_t v31 = (uint64_t *)(*(void *)(v21 + v20)
                    + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
    swift_beginAccess();
    uint64_t v32 = *v31;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C4456450(v29, v32, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C446A288, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void *)(v30 + v20)
        + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
    swift_beginAccess();
    uint64_t v35 = v50;
    sub_1C3F970C4(v34, v50, &qword_1EBBC06E8);
    uint64_t v36 = v51;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v35, 1, v51) == 1)
    {
      uint64_t v37 = v48;
      sub_1C4496888();
      uint64_t v38 = *(int *)(v36 + 20);
      if (qword_1EBBBC000 != -1) {
        swift_once();
      }
      *(void *)(v37 + v38) = qword_1EBBBBFF0;
      swift_retain();
      sub_1C3F962E0(v35, &qword_1EBBC06E8);
    }
    else
    {
      uint64_t v37 = v48;
      sub_1C446A41C(v35, v48, type metadata accessor for Proto_Sequence);
    }
    uint64_t v39 = *(void *)(v37 + *(int *)(v36 + 20))
        + OBJC_IVAR____TtCV9Coherence14Proto_SequenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    uint64_t v40 = v52;
    sub_1C3F970C4(v39, v52, &qword_1EBBC0578);
    uint64_t v41 = type metadata accessor for Proto_Version(0);
    LODWORD(v39) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41);
    sub_1C3F962E0(v40, &qword_1EBBC0578);
    if (v39 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C3F924DC(v37, type metadata accessor for Proto_Sequence);
      uint64_t v42 = 0;
    }
    else
    {
      uint64_t v43 = v46;
      sub_1C446A3B4(v37, v46, type metadata accessor for Proto_Sequence);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A13E0);
      swift_allocObject();
      uint64_t v42 = sub_1C445C0F0(v43, v33, v25, (uint64_t)&unk_1F1FA2DE0, (uint64_t)sub_1C446A2A4);
      sub_1C3F924DC(v37, type metadata accessor for Proto_Sequence);
    }
    sub_1C3F924DC(v30, type metadata accessor for Proto_OrderedSet);
    swift_retain();
    swift_release();
    uint64_t v44 = v47;
    *uint64_t v47 = v42;
    v44[1] = v27;
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

void *sub_1C4455994(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v4 = type metadata accessor for Proto_Value(0);
  uint64_t v5 = v4 - 8;
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for Proto_RepeatedValue(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v39 - v17);
  uint64_t v19 = *(int *)(v5 + 28);
  uint64_t v42 = a1;
  uint64_t v20 = *(void *)(a1 + v19);
  uint64_t v21 = v20 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v21, (uint64_t)v12, &qword_1EBBBF8A0);
  uint64_t v22 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  if (v41(v12, 1, v22) == 1)
  {
    sub_1C3F962E0((uint64_t)v12, &qword_1EBBBF8A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_1C446A41C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_RepeatedValue);
      goto LABEL_7;
    }
    sub_1C3F924DC((uint64_t)v12, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  *uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1C4496888();
LABEL_7:
  uint64_t v23 = *v18;
  swift_bridgeObjectRetain();
  sub_1C3F924DC((uint64_t)v18, type metadata accessor for Proto_RepeatedValue);
  int64_t v24 = *(void *)(v23 + 16);
  swift_bridgeObjectRelease();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v26 = sub_1C3FF13B8(0, v24, 0, MEMORY[0x1E4FBC860]);
  uint64_t v27 = v20 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v27, (uint64_t)v10, &qword_1EBBBF8A0);
  if (v41(v10, 1, v22) == 1)
  {
    sub_1C3F962E0((uint64_t)v10, &qword_1EBBBF8A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_1C446A41C((uint64_t)v10, (uint64_t)v16, type metadata accessor for Proto_RepeatedValue);
      goto LABEL_13;
    }
    sub_1C3F924DC((uint64_t)v10, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  *uint64_t v16 = v25;
  sub_1C4496888();
LABEL_13:
  uint64_t v28 = *v16;
  swift_bridgeObjectRetain();
  sub_1C3F924DC((uint64_t)v16, type metadata accessor for Proto_RepeatedValue);
  uint64_t v29 = *(void *)(v28 + 16);
  uint64_t v41 = (unsigned int (*)(char *, uint64_t, uint64_t))v28;
  if (v29)
  {
    uint64_t v30 = v28 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    uint64_t v31 = *(void *)(v40 + 72);
    while (1)
    {
      uint64_t v32 = v43;
      sub_1C446A3B4(v30, v43, type metadata accessor for Proto_Value);
      type metadata accessor for CRDecoder(0);
      swift_allocObject();
      uint64_t v33 = v44;
      swift_retain();
      sub_1C3F974B0(v32, v33);
      swift_release();
      uint64_t v34 = swift_retain();
      AnyCRValue.init(from:)(&v45, v34);
      if (v2) {
        break;
      }
      uint64_t v35 = v45;
      unint64_t v37 = v26[2];
      unint64_t v36 = v26[3];
      if (v37 >= v36 >> 1) {
        uint64_t v26 = sub_1C3FF13B8((void *)(v36 > 1), v37 + 1, 1, v26);
      }
      v26[2] = v37 + 1;
      v26[v37 + 4] = v35;
      swift_release();
      v30 += v31;
      if (!--v29) {
        goto LABEL_19;
      }
    }
    swift_release();
    swift_release();
    sub_1C3F924DC(v42, type metadata accessor for Proto_Value);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_19:
    swift_release();
    sub_1C3F924DC(v42, type metadata accessor for Proto_Value);
    swift_bridgeObjectRelease();
  }
  return v26;
}

uint64_t AnyCRDT.encode(to:)()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

{
  uint64_t v0;
  void v2[4];
  void v3[4];

  (*(void (**)(void *__return_ptr))(**(void **)v0 + 88))(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39DE70);
  swift_dynamicCast();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C4497068();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t AnyCRDT.MergeableDelta.encode(to:)()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

uint64_t AnyCRDT.copy(renamingReferences:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 80))();
  *a1 = result;
  return result;
}

uint64_t AnyCRDT.actionUndoingDifference(from:)(void *a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 128))(*a1);
}

uint64_t AnyCRDT.merge(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = *v1;
  if (*v1 != v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      *uint64_t v1 = (*(uint64_t (**)(void))(*(void *)*v1 + 160))();
      swift_release();
    }
    return (*(uint64_t (**)(uint64_t))(*(void *)*v1 + 96))(v2);
  }
  return result;
}

uint64_t sub_1C44560B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v4;
  *(void *)&v23[0] = *v4;
  if ((*(uint64_t (**)(_OWORD *))(v12 + 16))(v23))
  {
    *a4 = v11;
    return swift_retain();
  }
  else
  {
    v21[0] = v8;
    v21[1] = v10;
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    id v14 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v23);
    sub_1C3F962E0((uint64_t)v23, qword_1EBBC0C90);
    type metadata accessor for CREncoder();
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t v17 = MEMORY[0x1E4FBC868];
    *(void *)(v15 + 32) = MEMORY[0x1E4FBC868];
    *(void *)(v15 + 40) = v16;
    *(void *)(v15 + 48) = v16;
    *(void *)(v15 + 56) = v17;
    *(void *)(v15 + 64) = v16;
    *(void *)(v15 + 80) = 0;
    *(void *)(v15 + 88) = 0;
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = v16;
    *(unsigned char *)(v15 + 72) = 2;
    uint64_t v18 = *(void (**)(uint64_t))(*(void *)v11 + 176);
    id v22 = v14;
    v18(v15);
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    uint64_t v19 = swift_retain();
    uint64_t v20 = sub_1C4017E00(v19);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(v20, a2, a3);

    swift_release();
    return swift_release();
  }
}

uint64_t sub_1C4456450(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C150);
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v70 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v58 = (uint64_t)&v54 - v9;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C160);
  uint64_t v66 = *(void *)(v63 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v63);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (uint64_t)&v54 - v13;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A13F0);
  uint64_t v14 = MEMORY[0x1F4188790](v62);
  uint64_t v59 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v56 = (uint64_t)&v54 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v55 = (uint64_t)&v54 - v18;
  unint64_t v19 = *(void *)(a1 + 16);
  unint64_t v68 = *(void *)(a2 + 16);
  unint64_t v69 = v19;
  if (v68 >= v19) {
    int64_t v20 = v19;
  }
  else {
    int64_t v20 = v68;
  }
  uint64_t v72 = MEMORY[0x1E4FBC860];
  sub_1C401253C(0, v20, 0);
  uint64_t v61 = a1;
  uint64_t v67 = a2;
  if (v20)
  {
    uint64_t v21 = v72;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v24 = &qword_1EA39C160;
    unint64_t v25 = v69;
    while (v25 != v23)
    {
      uint64_t v26 = v24;
      uint64_t result = sub_1C3F970C4(a1+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v23, (uint64_t)v12, v24);
      if (v68 == v23) {
        goto LABEL_37;
      }
      uint64_t v27 = *(void *)(type metadata accessor for Proto_Timestamp(0) - 8);
      uint64_t v28 = a2
          + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
          + *(void *)(v27 + 72) * v23;
      uint64_t v29 = v59 + *(int *)(v62 + 48);
      uint64_t v30 = v12;
      uint64_t v31 = (uint64_t)v12;
      uint64_t v32 = v26;
      uint64_t v33 = v26;
      uint64_t v34 = v59;
      sub_1C3F961BC(v31, v59, v33);
      sub_1C446A3B4(v28, v29, type metadata accessor for Proto_Timestamp);
      uint64_t v35 = v71;
      v64(v34, v34 + *(int *)(v63 + 48), v29);
      uint64_t v71 = v35;
      if (v35)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_1C3F962E0(v34, &qword_1EA3A13F0);
      }
      sub_1C3F962E0(v34, &qword_1EA3A13F0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C401253C(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v72;
      }
      unint64_t v25 = v69;
      unint64_t v36 = v30;
      unint64_t v38 = *(void *)(v21 + 16);
      unint64_t v37 = *(void *)(v21 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1C401253C(v37 > 1, v38 + 1, 1);
        unint64_t v25 = v69;
        uint64_t v21 = v72;
      }
      ++v23;
      *(void *)(v21 + 16) = v38 + 1;
      uint64_t result = sub_1C3F961BC(v70, v21+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v38, &qword_1EA39C150);
      a1 = v61;
      a2 = v67;
      uint64_t v24 = v32;
      uint64_t v12 = v36;
      if (v20 == v23) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v25 = v69;
LABEL_16:
    int64_t v39 = v20;
    unint64_t v40 = v68;
    if (v25 <= v68)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v72;
    }
    if (v39 <= (uint64_t)v68) {
      unint64_t v41 = v68;
    }
    else {
      unint64_t v41 = v39;
    }
    uint64_t v42 = v71;
    uint64_t v43 = v62;
    while (v25 != v39)
    {
      uint64_t v44 = v57;
      uint64_t result = sub_1C3F970C4(a1+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v39, v57, &qword_1EA39C160);
      if (v40 == v39)
      {
        sub_1C3F962E0(v44, &qword_1EA39C160);
        goto LABEL_34;
      }
      if (v41 == v39) {
        goto LABEL_39;
      }
      uint64_t v45 = *(void *)(type metadata accessor for Proto_Timestamp(0) - 8);
      uint64_t v46 = v67
          + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
          + *(void *)(v45 + 72) * v39;
      uint64_t v47 = v56;
      uint64_t v48 = v56 + *(int *)(v43 + 48);
      sub_1C3F961BC(v44, v56, &qword_1EA39C160);
      sub_1C446A3B4(v46, v48, type metadata accessor for Proto_Timestamp);
      uint64_t v49 = v47;
      uint64_t v50 = v55;
      sub_1C3F961BC(v49, v55, &qword_1EA3A13F0);
      v64(v50, v50 + *(int *)(v63 + 48), v50 + *(int *)(v43 + 48));
      sub_1C3F962E0(v50, &qword_1EA3A13F0);
      if (v42)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      uint64_t v51 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C401253C(0, *(void *)(v51 + 16) + 1, 1);
        uint64_t v51 = v72;
      }
      unint64_t v40 = v68;
      unint64_t v53 = *(void *)(v51 + 16);
      unint64_t v52 = *(void *)(v51 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_1C401253C(v52 > 1, v53 + 1, 1);
        uint64_t v51 = v72;
      }
      ++v39;
      *(void *)(v51 + 16) = v53 + 1;
      uint64_t result = sub_1C3F961BC(v58, v51+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v53, &qword_1EA39C150);
      unint64_t v25 = v69;
      a1 = v61;
      if (v69 == v39) {
        goto LABEL_34;
      }
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t AnyCRDT.apply(_:)(uint64_t a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *(void *)uint64_t v1 = (*(uint64_t (**)(void))(**(void **)v1 + 160))();
    swift_release();
  }
  return (*(uint64_t (**)(uint64_t))(**(void **)v1 + 136))(a1);
}

uint64_t AnyCRDT.delta(_:from:)(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(**(void **)v2 + 208))(a1, *a2);
}

uint64_t AnyCRDT.MergeableDelta.visitReferences(_:)(void *a1)
{
  return sub_1C4456C64(a1, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_1C44691F0);
}

uint64_t sub_1C4456C64(void *a1, uint64_t (*a2)(void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a1, v3);
  return a2(v5, v2, v3, v4);
}

uint64_t AnyCRDT.canMerge(delta:)(uint64_t *a1)
{
  uint64_t v2 = *v1;
  uint64_t v4 = *a1;
  return (*(uint64_t (**)(uint64_t *))(*(void *)v2 + 216))(&v4) & 1;
}

uint64_t AnyCRDT.merge(delta:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v1 = (*(uint64_t (**)(void))(*(void *)*v1 + 160))();
    swift_release();
  }
  uint64_t v3 = *v1;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(uint64_t *))(*(void *)v3 + 224))(&v5) & 1;
}

uint64_t sub_1C4456DCC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Proto_Value(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = type metadata accessor for Proto_CustomCRValue(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v35 = (void **)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v36 = (uint64_t)&v35 - v16;
  uint64_t v17 = a1;
  uint64_t v18 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v12, &qword_1EBBC0540);
  unint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(a1) = v19(v12, 1, v4);
  sub_1C3F962E0((uint64_t)v12, &qword_1EBBC0540);
  if (a1 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v20 = 0xD000000000000017;
    unint64_t v21 = 0x80000001C44B0F00;
    goto LABEL_11;
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  *(void *)(swift_initStackObject() + 16) = v17;
  sub_1C3F970C4(v18, (uint64_t)v10, &qword_1EBBC0540);
  uint64_t result = v19(v10, 1, v4);
  if (result != 1)
  {
    uint64_t v23 = v17;
    uint64_t v24 = v37;
    sub_1C446A41C((uint64_t)v10, v37, type metadata accessor for Proto_Value);
    swift_retain();
    swift_release();
    uint64_t v25 = *(void *)(v24 + *(int *)(v4 + 20))
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v26 = v25;
    uint64_t v27 = v39;
    sub_1C3F970C4(v26, v39, &qword_1EBBBF8A0);
    sub_1C3F924DC(v24, type metadata accessor for Proto_Value);
    uint64_t v28 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 1, v28) == 1)
    {
      sub_1C3F962E0(v27, &qword_1EBBBF8A0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        uint64_t v29 = v36;
        sub_1C446A41C(v27, v36, type metadata accessor for Proto_CustomCRValue);
        uint64_t v30 = v35;
        sub_1C446A3B4(v29, (uint64_t)v35, type metadata accessor for Proto_CustomCRValue);
        uint64_t v31 = type metadata accessor for CRStructDecoder();
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v23;
        uint64_t v33 = (unint64_t **)(v32 + OBJC_IVAR____TtC9Coherence15CRStructDecoder_value);
        sub_1C446A3B4((uint64_t)v30, v32 + OBJC_IVAR____TtC9Coherence15CRStructDecoder_value, type metadata accessor for Proto_CustomCRValue);
        if (*(void *)(*v30 + 16))
        {
          swift_retain();
          sub_1C3F924DC((uint64_t)v30, type metadata accessor for Proto_CustomCRValue);
        }
        else
        {
          uint64_t v34 = sub_1C3F8B454(0, *(void *)(v30[1] + 16));
          swift_retain();
          sub_1C3F924DC((uint64_t)v30, type metadata accessor for Proto_CustomCRValue);
          *uint64_t v33 = v34;
          swift_bridgeObjectRelease();
        }
        v38[3] = v31;
        v38[4] = sub_1C3F8B6F8((unint64_t *)&qword_1EBBBF1B8, (void (*)(uint64_t))type metadata accessor for CRStructDecoder);
        v38[0] = v32;
        unint64_t v19 = (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C411EB80(v38);
        swift_release();
        sub_1C3F924DC(v29, type metadata accessor for Proto_CustomCRValue);
        return (uint64_t)v19;
      }
      sub_1C3F924DC(v27, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v20 = 0xD00000000000001FLL;
    unint64_t v21 = 0x80000001C44B26F0;
LABEL_11:
    *(void *)(v20 + 8) = v21;
    *(unsigned char *)(v20 + 16) = 0;
    swift_willThrow();
    swift_release();
    return (uint64_t)v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C44573B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v44 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_Value(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v40 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = type metadata accessor for Proto_CustomCRValue(0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v37 = (uint64_t *)((char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v38 = (uint64_t)&v36 - v17;
  uint64_t v18 = a1;
  uint64_t v19 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v19, (uint64_t)v13, &qword_1EBBC0540);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  LODWORD(a1) = v20(v13, 1, v5);
  sub_1C3F962E0((uint64_t)v13, &qword_1EBBC0540);
  if (a1 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v21 = 0xD000000000000017;
    unint64_t v22 = 0x80000001C44B0F00;
LABEL_11:
    *(void *)(v21 + 8) = v22;
    *(unsigned char *)(v21 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  *(void *)(swift_initStackObject() + 16) = v18;
  sub_1C3F970C4(v19, (uint64_t)v11, &qword_1EBBC0540);
  uint64_t result = v20(v11, 1, v5);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v24 = v18;
  uint64_t v25 = v40;
  sub_1C446A41C((uint64_t)v11, v40, type metadata accessor for Proto_Value);
  swift_retain();
  swift_release();
  uint64_t v26 = *(void *)(v25 + *(int *)(v5 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v27 = v26;
  uint64_t v28 = v44;
  sub_1C3F970C4(v27, v44, &qword_1EBBBF8A0);
  sub_1C3F924DC(v25, type metadata accessor for Proto_Value);
  uint64_t v29 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) == 1)
  {
    sub_1C3F962E0(v28, &qword_1EBBBF8A0);
LABEL_10:
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v21 = 0xD00000000000001FLL;
    unint64_t v22 = 0x80000001C44B26F0;
    goto LABEL_11;
  }
  if (swift_getEnumCaseMultiPayload() != 13)
  {
    sub_1C3F924DC(v28, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_10;
  }
  uint64_t v30 = v38;
  sub_1C446A41C(v28, v38, type metadata accessor for Proto_CustomCRValue);
  uint64_t v31 = v37;
  sub_1C446A3B4(v30, (uint64_t)v37, type metadata accessor for Proto_CustomCRValue);
  uint64_t v32 = type metadata accessor for CRStructDecoder();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v24;
  uint64_t v34 = (unint64_t **)(v33 + OBJC_IVAR____TtC9Coherence15CRStructDecoder_value);
  sub_1C446A3B4((uint64_t)v31, v33 + OBJC_IVAR____TtC9Coherence15CRStructDecoder_value, type metadata accessor for Proto_CustomCRValue);
  if (*(void *)(*v31 + 16))
  {
    swift_retain();
    sub_1C3F924DC((uint64_t)v31, type metadata accessor for Proto_CustomCRValue);
  }
  else
  {
    uint64_t v35 = sub_1C3F8B454(0, *(void *)(v31[1] + 16));
    swift_retain();
    sub_1C3F924DC((uint64_t)v31, type metadata accessor for Proto_CustomCRValue);
    *uint64_t v34 = v35;
    swift_bridgeObjectRelease();
  }
  sub_1C4496498();
  uint64_t v42 = v32;
  uint64_t v43 = sub_1C3F8B6F8((unint64_t *)&qword_1EBBBF1B8, (void (*)(uint64_t))type metadata accessor for CRStructDecoder);
  uint64_t v41 = v33;
  sub_1C3F8B6F8(qword_1EA39DA08, MEMORY[0x1E4F276F0]);
  sub_1C4497678();
  swift_release();
  return sub_1C3F924DC(v30, type metadata accessor for Proto_CustomCRValue);
}

uint64_t AnyCRValue.visitReferences(_:)()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t AnyCRValue.copy(renamingReferences:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 104))();
  *a1 = result;
  return result;
}

uint64_t AnyCRValue.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v160 = a2;
  uint64_t v153 = type metadata accessor for Proto_TaggedValue(0);
  MEMORY[0x1F4188790](v153);
  uint64_t v155 = (uint64_t)v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for Proto_Optional(0);
  MEMORY[0x1F4188790](v152);
  uint64_t v156 = (uint64_t)v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1F4188790](v149);
  uint64_t v154 = (uint64_t)v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Version(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v148 = (void *)((char *)v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v150 = (uint64_t)v138 - v9;
  uint64_t v143 = sub_1C4496678();
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  uint64_t v141 = (char *)v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v165 = (uint64_t)v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_Value(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v151 = (uint64_t)v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v147 = (uint64_t)v138 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v139 = (uint64_t)v138 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v163 = (uint64_t)v138 - v21;
  uint64_t v164 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v162 = *(void *)(v164 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v164);
  uint64_t v158 = (void *)((char *)v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22);
  uint64_t v159 = (uint64_t)v138 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v145 = (uint64_t)v138 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v157 = (uint64_t)v138 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v146 = (uint64_t)v138 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v140 = (uint64_t)v138 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v144 = (uint64_t)v138 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v38 = (char *)v138 - v37;
  MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)v138 - v39;
  uint64_t v41 = a1;
  uint64_t v42 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v42, (uint64_t)v40, &qword_1EBBC0540);
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v44 = v14 + 48;
  uint64_t v43 = v45;
  LODWORD(a1) = v45(v40, 1, v13);
  sub_1C3F962E0((uint64_t)v40, &qword_1EBBC0540);
  if (a1 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v46 = 0xD000000000000017;
    *(void *)(v46 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v46 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  v138[1] = type metadata accessor for CRDecoder.CRValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v41;
  sub_1C3F970C4(v42, (uint64_t)v38, &qword_1EBBC0540);
  v138[2] = v44;
  if (v43(v38, 1, v13) == 1)
  {
    __break(1u);
LABEL_74:
    __break(1u);
    JUMPOUT(0x1C44591A8);
  }
  uint64_t v49 = v163;
  sub_1C446A41C((uint64_t)v38, v163, type metadata accessor for Proto_Value);
  uint64_t v50 = v13;
  uint64_t v51 = *(void *)(v49 + *(int *)(v13 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v52 = v165;
  sub_1C3F970C4(v51, v165, &qword_1EBBBF8A0);
  swift_retain();
  sub_1C3F924DC(v49, type metadata accessor for Proto_Value);
  uint64_t v53 = v41;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48))(v52, 1, v164) == 1)
  {
    swift_release();
    swift_release();
    sub_1C3F962E0(v52, &qword_1EBBBF8A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A12A8);
    uint64_t result = swift_allocObject();
LABEL_6:
    uint64_t *v160 = result;
    return result;
  }
  uint64_t v54 = v159;
  sub_1C446A41C(v52, v159, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  uint64_t v55 = v158;
  sub_1C446A3B4(v54, (uint64_t)v158, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_release();
      swift_release();
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      unint64_t v59 = *v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1318);
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v59;
      goto LABEL_6;
    case 2u:
      uint64_t v60 = *(void *)(v53 + 32);
      unint64_t v61 = *(void *)(v60 + 16);
      if (v61 && *v55 < v61)
      {
        uint64_t v62 = v60 + 16 * *v55;
        uint64_t v64 = *(void *)(v62 + 32);
        uint64_t v63 = *(void *)(v62 + 40);
        swift_bridgeObjectRetain();
        swift_release();
        swift_release();
        sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1308);
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v64;
        *(void *)(result + 24) = v63;
        goto LABEL_6;
      }
      sub_1C3FE3FF0();
      swift_allocError();
      long long v118 = xmmword_1C449B6C0;
      goto LABEL_46;
    case 3u:
      swift_release();
      swift_release();
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      unint64_t v65 = *v55;
      unint64_t v66 = v55[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1300);
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v65;
      *(void *)(result + 24) = v66;
      goto LABEL_6;
    case 4u:
      swift_release();
      swift_release();
      unint64_t v56 = *v55;
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      goto LABEL_16;
    case 5u:
      uint64_t v67 = *(void *)(v53 + 24);
      unint64_t v68 = *(void *)(v67 + 16);
      if (v68 && *v55 < v68)
      {
        uint64_t v69 = v142;
        uint64_t v70 = v141;
        uint64_t v71 = v143;
        (*(void (**)(char *, unint64_t, uint64_t))(v142 + 16))(v141, v67+ ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))+ *(void *)(v142 + 72) * *v55, v143);
        swift_release();
        swift_release();
        sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A12F8);
        uint64_t v72 = swift_allocObject();
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v69 + 32))(v72 + *(void *)(*(void *)v72 + 224), v70, v71);
        uint64_t *v160 = v72;
        return result;
      }
      sub_1C3FE3FF0();
      swift_allocError();
      long long v118 = xmmword_1C44A0890;
LABEL_46:
      *(_OWORD *)uint64_t v117 = v118;
      *(unsigned char *)(v117 + 16) = 0;
      swift_willThrow();
      swift_release();
      swift_release();
      return sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 6u:
      uint64_t v73 = v150;
      sub_1C446A41C((uint64_t)v55, v150, type metadata accessor for Proto_Version);
      unint64_t v74 = v148;
      sub_1C446A3B4(v73, (uint64_t)v148, type metadata accessor for Proto_Version);
      uint64_t v75 = v161;
      sub_1C3F8F9D0(v74, v53, &v169);
      if (v75)
      {
        swift_release();
        uint64_t v76 = type metadata accessor for Proto_Version;
        uint64_t v77 = v73;
        goto LABEL_65;
      }
      swift_release();
      sub_1C3F924DC(v73, type metadata accessor for Proto_Version);
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A12F0);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = v169;
      goto LABEL_72;
    case 7u:
      uint64_t v78 = v53;
      uint64_t v79 = v154;
      sub_1C446A41C((uint64_t)v55, v154, type metadata accessor for Proto_Reference);
      uint64_t v80 = *(void *)(v79 + *(int *)(v149 + 20));
      swift_beginAccess();
      if (*(unsigned char *)(v80 + 32) != 1)
      {
        sub_1C3FE3FF0();
        swift_allocError();
        *(void *)uint64_t v119 = 0xD00000000000001FLL;
        *(void *)(v119 + 8) = 0x80000001C44B5C20;
        *(unsigned char *)(v119 + 16) = 0;
        swift_willThrow();
        swift_release();
        goto LABEL_48;
      }
      if (*(void *)(v80 + 24))
      {
        uint64_t v81 = v161;
        sub_1C4465D64(v78, &v167);
        if (!v81)
        {
          swift_release();
          sub_1C3F924DC(v79, type metadata accessor for Proto_Reference);
          sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
          uint64_t v82 = v167;
          uint64_t v83 = v168;
          uint64_t v84 = (uint64_t *)&unk_1EA3A12E0;
          goto LABEL_69;
        }
LABEL_48:
        swift_release();
        uint64_t v76 = type metadata accessor for Proto_Reference;
        uint64_t v77 = v79;
        goto LABEL_65;
      }
      uint64_t v134 = v161;
      sub_1C445B2FC(v78, &v167);
      if (v134) {
        goto LABEL_48;
      }
      swift_release();
      sub_1C3F924DC(v79, type metadata accessor for Proto_Reference);
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      uint64_t v82 = v167;
      uint64_t v83 = v168;
      uint64_t v84 = (uint64_t *)&unk_1EA3A12E8;
LABEL_69:
      __swift_instantiateConcreteTypeFromMangledName(v84);
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v82;
      *(void *)(result + 24) = v83;
LABEL_72:
      uint64_t *v160 = result;
      return result;
    case 8u:
      uint64_t v164 = inited;
      uint64_t v165 = v53;
      uint64_t v105 = v156;
      sub_1C446A41C((uint64_t)v55, v156, type metadata accessor for Proto_Optional);
      uint64_t v106 = *(int *)(v152 + 20);
      uint64_t v107 = *(void *)(v105 + v106)
           + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
      swift_beginAccess();
      uint64_t v108 = v144;
      sub_1C3F970C4(v107, v144, &qword_1EBBC0540);
      LODWORD(v107) = v43((char *)v108, 1, v50);
      sub_1C3F962E0(v108, &qword_1EBBC0540);
      if (v107 == 1)
      {
        swift_release();
        swift_release();
        sub_1C3F924DC(v105, type metadata accessor for Proto_Optional);
        sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A12D8);
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        goto LABEL_6;
      }
      uint64_t v124 = *(void *)(v105 + v106)
           + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
      swift_beginAccess();
      uint64_t v125 = v140;
      sub_1C3F970C4(v124, v140, &qword_1EBBC0540);
      uint64_t v89 = v105;
      if (v43((char *)v125, 1, v50) == 1)
      {
        uint64_t v126 = v139;
        sub_1C4496888();
        uint64_t v127 = *(int *)(v50 + 20);
        uint64_t v128 = v161;
        if (qword_1EBBBF8C8 != -1) {
          swift_once();
        }
        *(void *)(v126 + v127) = qword_1EBBBF8B8;
        swift_retain();
        sub_1C3F962E0(v125, &qword_1EBBC0540);
      }
      else
      {
        uint64_t v126 = v139;
        sub_1C446A41C(v125, v139, type metadata accessor for Proto_Value);
        uint64_t v128 = v161;
      }
      type metadata accessor for CRDecoder(0);
      swift_allocObject();
      uint64_t v132 = v165;
      swift_retain();
      uint64_t v133 = sub_1C3F974B0(v126, v132);
      swift_release();
      AnyCRValue.init(from:)(&v166, v133);
      if (v128)
      {
        swift_release();
        swift_release();
        uint64_t v122 = type metadata accessor for Proto_Optional;
        goto LABEL_64;
      }
      swift_release();
      swift_release();
      sub_1C3F924DC(v105, type metadata accessor for Proto_Optional);
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      uint64_t v137 = v166;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A12D8);
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v137;
      goto LABEL_72;
    case 9u:
      uint64_t v85 = v161;
      uint64_t v86 = sub_1C4134778(v53);
      if (v85) {
        goto LABEL_54;
      }
      uint64_t v87 = (void *)v86;
      swift_release();
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      uint64_t v88 = (uint64_t *)&unk_1EA3A12D0;
      goto LABEL_43;
    case 0xAu:
      uint64_t v109 = *(void *)(inited + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
      swift_beginAccess();
      uint64_t v110 = v109;
      uint64_t v111 = v146;
      sub_1C3F970C4(v110, v146, &qword_1EBBC0540);
      if (v43((char *)v111, 1, v50) == 1) {
        goto LABEL_74;
      }
      uint64_t v112 = v111;
      uint64_t v113 = v147;
      sub_1C446A41C(v112, v147, type metadata accessor for Proto_Value);
      uint64_t v114 = v161;
      uint64_t v115 = sub_1C4455994(v113, v53);
      if (v114) {
        goto LABEL_54;
      }
      uint64_t v87 = v115;
      swift_release();
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      uint64_t v88 = (uint64_t *)&unk_1EA3A12C8;
LABEL_43:
      __swift_instantiateConcreteTypeFromMangledName(v88);
      uint64_t v116 = swift_allocObject();
      *(void *)(v116 + 16) = v87;
      uint64_t result = sub_1C3F924DC((uint64_t)v55, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      uint64_t *v160 = v116;
      return result;
    case 0xBu:
      uint64_t v89 = v155;
      sub_1C446A41C((uint64_t)v55, v155, type metadata accessor for Proto_TaggedValue);
      uint64_t v165 = *(int *)(v153 + 20);
      uint64_t v90 = *(void *)(v89 + v165)
          + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
      swift_beginAccess();
      uint64_t v91 = v90;
      uint64_t v92 = v157;
      sub_1C3F970C4(v91, v157, &qword_1EBBC0540);
      if (v43((char *)v92, 1, v50) == 1)
      {
        uint64_t v93 = v151;
        sub_1C4496888();
        uint64_t v94 = *(int *)(v50 + 20);
        if (qword_1EBBBF8C8 != -1) {
          swift_once();
        }
        uint64_t v95 = v53;
        *(void *)(v93 + v94) = qword_1EBBBF8B8;
        swift_retain();
        sub_1C3F962E0(v157, &qword_1EBBC0540);
      }
      else
      {
        uint64_t v95 = v53;
        uint64_t v93 = v151;
        sub_1C446A41C(v92, v151, type metadata accessor for Proto_Value);
      }
      uint64_t v120 = v161;
      type metadata accessor for CRDecoder(0);
      swift_allocObject();
      swift_retain();
      uint64_t v121 = sub_1C3F974B0(v93, v95);
      swift_release();
      AnyCRValue.init(from:)(&v167, v121);
      if (!v120)
      {
        swift_release();
        swift_release();
        uint64_t v129 = v167;
        uint64_t v130 = *(void *)(v89 + v165);
        swift_beginAccess();
        uint64_t v131 = *(void *)(v130 + 16);
        sub_1C3F924DC(v89, type metadata accessor for Proto_TaggedValue);
        sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A12C0);
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v131;
        *(void *)(result + 24) = v129;
        goto LABEL_72;
      }
      swift_release();
      swift_release();
      uint64_t v122 = type metadata accessor for Proto_TaggedValue;
LABEL_64:
      uint64_t v76 = v122;
      uint64_t v77 = v89;
LABEL_65:
      sub_1C3F924DC(v77, v76);
      return sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 0xCu:
      uint64_t v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v43;
      uint64_t v97 = v53;
      uint64_t v98 = v42;
      uint64_t v99 = v145;
      sub_1C3F970C4(v98, v145, &qword_1EBBC0540);
      int v100 = v96(v99, 1, v50);
      sub_1C3F962E0(v99, &qword_1EBBC0540);
      if (v100 == 1)
      {
        sub_1C3FE3FF0();
        swift_allocError();
        *(void *)uint64_t v101 = 0xD000000000000017;
        *(void *)(v101 + 8) = 0x80000001C44B0F00;
        *(unsigned char *)(v101 + 16) = 0;
        swift_willThrow();
      }
      else
      {
        *(void *)(swift_initStackObject() + 16) = v97;
        uint64_t v123 = v161;
        sub_1C4003154(&v169);
        if (!v123)
        {
          swift_release();
          swift_release();
          uint64_t v135 = v169;
          sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A12B8);
          uint64_t v136 = swift_allocObject();
          *(void *)(v136 + 16) = v135;
          uint64_t result = sub_1C3F924DC((uint64_t)v55, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
          uint64_t *v160 = v136;
          return result;
        }
      }
      swift_release();
LABEL_54:
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      swift_release();
      return sub_1C3F924DC((uint64_t)v55, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 0xDu:
      uint64_t v102 = v161;
      uint64_t v103 = sub_1C4456DCC(v53);
      if (v102) {
        goto LABEL_54;
      }
      uint64_t v87 = (void *)v103;
      swift_release();
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      uint64_t v88 = (uint64_t *)&unk_1EA3A12B0;
      goto LABEL_43;
    case 0xEu:
      swift_release();
      swift_release();
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      int v104 = *(_DWORD *)v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1310);
      uint64_t result = swift_allocObject();
      *(_DWORD *)(result + 16) = v104;
      goto LABEL_6;
    default:
      swift_release();
      unint64_t v56 = *v55;
      int v57 = *(unsigned __int8 *)(v53 + 49);
      swift_release();
      sub_1C3F924DC(v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      if (v57 == 1) {
LABEL_16:
      }
        uint64_t v58 = (uint64_t *)&unk_1EA3A1328;
      else {
        uint64_t v58 = (uint64_t *)&unk_1EA3A1320;
      }
      __swift_instantiateConcreteTypeFromMangledName(v58);
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v56;
      goto LABEL_6;
  }
}

uint64_t AnyCRValue.encode(to:)()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

{
  uint64_t v0;
  void v2[4];
  void v3[4];

  (*(void (**)(void *__return_ptr))(**(void **)v0 + 80))(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39DE70);
  swift_dynamicCast();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C4497068();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1C4459228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, void (*a5)(void (*)(uint64_t), uint64_t)@<X4>, uint64_t *a6@<X5>, void (*a7)(BOOL, unint64_t, uint64_t)@<X6>, void (*a8)(uint64_t, uint64_t)@<X7>, void *a9@<X8>, uint64_t *a10, void (*a11)(void, void, void), uint64_t a12, uint64_t *a13)
{
  uint64_t v87 = a8;
  uint64_t v86 = a6;
  uint64_t v98 = a5;
  uint64_t v99 = a4;
  uint64_t v102 = a3;
  uint64_t v84 = a9;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v90 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v89 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v88 = (unint64_t *)((char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v83 = (uint64_t)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v79 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v96 = (uint64_t)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for Proto_Version(0);
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v91 = (uint64_t *)((char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C4496678();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  uint64_t v34 = *(void *)(a1 + v97);
  swift_beginAccess();
  uint64_t v35 = *(void *)(a2 + 24);
  unint64_t v36 = *(void *)(v35 + 16);
  if (!v36 || (unint64_t v37 = *(void *)(v34 + 16), v37 >= v36))
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(_OWORD *)uint64_t v48 = xmmword_1C44A0890;
    *(unsigned char *)(v48 + 16) = 0;
    swift_willThrow();
    uint64_t v49 = v102;
LABEL_9:
    v98(v49, v99);
    swift_release();
    return sub_1C3F924DC(a1, type metadata accessor for Proto_Set);
  }
  uint64_t v80 = a7;
  uint64_t v81 = v23;
  uint64_t v82 = a2;
  (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v33, v35+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v37, v30);
  type metadata accessor for ReplicaState();
  uint64_t v38 = swift_allocObject();
  uint64_t v85 = a1;
  uint64_t v39 = v38 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v40 = type metadata accessor for Replica();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  v41(v39, 1, 1, v40);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v38 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v33, v30);
  *(void *)(v38 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v38 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  v41((uint64_t)v29, 1, 1, v40);
  swift_beginAccess();
  uint64_t v42 = v39;
  a1 = v85;
  sub_1C3F98338((uint64_t)v29, v42, &qword_1EBBC0FA0);
  swift_endAccess();
  uint64_t v43 = *(void *)(a1 + v97)
      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  uint64_t v44 = v43;
  uint64_t v45 = v96;
  sub_1C3F970C4(v44, v96, &qword_1EBBC0578);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v45, 1, v95) == 1)
  {
    uint64_t v46 = MEMORY[0x1E4FBC860];
    uint64_t v47 = v91;
    *uint64_t v91 = MEMORY[0x1E4FBC860];
    v47[1] = v46;
    sub_1C4496888();
    sub_1C3F962E0(v45, &qword_1EBBC0578);
  }
  else
  {
    uint64_t v47 = v91;
    sub_1C446A41C(v45, (uint64_t)v91, type metadata accessor for Proto_Version);
  }
  uint64_t v50 = v82;
  uint64_t v51 = v102;
  uint64_t v52 = v93;
  uint64_t v53 = v92;
  swift_retain();
  sub_1C3F8F9D0(v47, v50, &v101);
  if (v53)
  {
    swift_release();
    uint64_t v49 = v51;
    goto LABEL_9;
  }
  uint64_t v56 = *((void *)&v101 + 1);
  uint64_t v55 = v101;
  uint64_t v57 = *(void *)(a1 + v97)
      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  uint64_t v58 = v57;
  uint64_t v59 = v90;
  sub_1C3F970C4(v58, v90, &qword_1EBBC0620);
  int v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v59, 1, v52);
  unint64_t v61 = v98;
  if (v60 == 1)
  {
    uint64_t v96 = v56;
    uint64_t v62 = v98;
    uint64_t v63 = v55;
    uint64_t v64 = v88;
    *uint64_t v88 = 0;
    v64[1] = 0;
    sub_1C4496888();
    uint64_t v65 = v59;
    unint64_t v66 = v64;
    uint64_t v55 = v63;
    unint64_t v61 = v62;
    uint64_t v56 = v96;
    sub_1C3F962E0(v65, &qword_1EBBC0620);
  }
  else
  {
    uint64_t v67 = v59;
    unint64_t v66 = v88;
    sub_1C446A41C(v67, (uint64_t)v88, type metadata accessor for Proto_Timestamp);
  }
  swift_retain();
  sub_1C43A3E60(v66, v50, (uint64_t)v81);
  uint64_t v95 = v55;
  swift_beginAccess();
  swift_retain();
  uint64_t v68 = swift_bridgeObjectRetain();
  uint64_t v69 = sub_1C4469400(v68, v50, v86, v80, v87);
  uint64_t v97 = (uint64_t)a11;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v70 = v102;
  if (v102)
  {
    uint64_t v71 = v99;
    swift_retain();
    v70(v69);
    v61(v70, v71);
  }
  uint64_t v72 = *(void *)(v69 + 16);
  uint64_t v73 = MEMORY[0x1E4FBC868];
  uint64_t v96 = v56;
  if (v72)
  {
    __swift_instantiateConcreteTypeFromMangledName(a10);
    uint64_t v73 = sub_1C4497FD8();
  }
  v100[0] = v73;
  ((void (*)(uint64_t, uint64_t, uint64_t *))v97)(v69, 1, v100);
  uint64_t v74 = v100[0];
  uint64_t v97 = v38;
  if (qword_1EBBC10F0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C4497A58();
  swift_release();
  uint64_t v94 = v100[0];
  uint64_t v75 = (uint64_t)v81;
  uint64_t v76 = v83;
  sub_1C446A3B4((uint64_t)v81, v83, type metadata accessor for FinalizedTimestamp);
  __swift_instantiateConcreteTypeFromMangledName(a13);
  uint64_t v77 = (void *)swift_allocObject();
  swift_retain();
  sub_1C4496668();
  sub_1C446A3B4(v76, (uint64_t)v77 + qword_1EBBC59A8, type metadata accessor for FinalizedTimestamp);
  swift_release();
  uint64_t v78 = MEMORY[0x1E4FBC868];
  v77[3] = MEMORY[0x1E4FBC868];
  v77[4] = v78;
  v77[5] = v78;
  v77[6] = 0;
  v77[2] = v97;
  swift_beginAccess();
  v77[3] = v95;
  v77[4] = v96;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v77[5] = v74;
  swift_bridgeObjectRelease();
  v77[6] = v94;
  sub_1C3F924DC(v76, type metadata accessor for FinalizedTimestamp);
  v61(v102, v99);
  swift_release();
  sub_1C3F924DC(v85, type metadata accessor for Proto_Set);
  uint64_t result = sub_1C3F924DC(v75, type metadata accessor for FinalizedTimestamp);
  *uint64_t v84 = v77;
  return result;
}

uint64_t sub_1C4459E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v65 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v69 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for Proto_Version(0);
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v70 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = MEMORY[0x1F4188790](v61);
  unint64_t v66 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v71 = (uint64_t)&v59 - v9;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC0);
  MEMORY[0x1F4188790](v63);
  uint64_t v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_CRDT(0);
  uint64_t v72 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C4496678();
  uint64_t v74 = *(void *)(v17 - 8);
  uint64_t v75 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v78 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Proto_Value(0);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  uint64_t v62 = a1;
  uint64_t v60 = v26;
  uint64_t v73 = *(void *)(a1 + v26);
  uint64_t v27 = v73 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v27, (uint64_t)v21, &qword_1EBBC0540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1C4496888();
    uint64_t v28 = *(int *)(v22 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)&v25[v28] = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0((uint64_t)v21, &qword_1EBBC0540);
  }
  else
  {
    sub_1C446A41C((uint64_t)v21, (uint64_t)v25, type metadata accessor for Proto_Value);
  }
  uint64_t v30 = v77;
  uint64_t v29 = (uint64_t)v78;
  uint64_t v31 = v76;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3F974B0((uint64_t)v25, v30);
  swift_release();
  uint64_t v32 = swift_retain();
  UUID.init(from:)(v32, v29);
  if (v31) {
    return swift_release();
  }
  uint64_t v33 = v73;
  uint64_t v34 = v73 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v34, (uint64_t)v13, &qword_1EBBC04F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v13, 1, v14) == 1)
  {
    sub_1C4496888();
    uint64_t v35 = *(int *)(v14 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)&v16[v35] = qword_1EBBC0660;
    swift_retain();
    sub_1C3F962E0((uint64_t)v13, &qword_1EBBC04F8);
  }
  else
  {
    sub_1C446A41C((uint64_t)v13, (uint64_t)v16, type metadata accessor for Proto_CRDT);
  }
  swift_retain();
  uint64_t v36 = sub_1C4450740((uint64_t)v16, v30, &v80);
  uint64_t v38 = v80;
  if ((void)v80)
  {
    uint64_t v39 = v33;
    uint64_t v40 = v66;
    (*(void (**)(uint64_t))(*(void *)v80 + 120))(v36);
    uint64_t v41 = (uint64_t)v40;
    uint64_t v42 = v71;
    uint64_t v43 = sub_1C446A41C(v41, v71, type metadata accessor for FinalizedTimestamp);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v38 + 96))(&v83, v43);
    uint64_t v44 = v70;
  }
  else
  {
    uint64_t v45 = v71;
    uint64_t v44 = v70;
    if (qword_1EBBBBF18 != -1) {
      swift_once();
    }
    uint64_t v46 = __swift_project_value_buffer(v61, (uint64_t)qword_1EBBC58A8);
    sub_1C446A3B4(v46, v45, type metadata accessor for FinalizedTimestamp);
    uint64_t v47 = &type metadata for AnyCRValue;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (!v48) {
      uint64_t v47 = 0;
    }
    if (v47)
    {
      uint64_t v50 = *(void (**)(ValueMetadata *, uint64_t))(v49 + 16);
      *((void *)&v81 + 1) = v47;
      uint64_t v82 = v49;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v80);
      v50(v47, v49);
      uint64_t v44 = v70;
    }
    else
    {
      uint64_t v82 = 0;
      long long v80 = 0u;
      long long v81 = 0u;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBBBF20);
    if (!swift_dynamicCast())
    {
      uint64_t result = sub_1C4497F58();
      __break(1u);
      return result;
    }
    uint64_t v83 = v79;
    uint64_t v39 = *(void *)(v62 + v60);
    uint64_t v42 = v71;
  }
  uint64_t v51 = v39 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  uint64_t v52 = v51;
  uint64_t v53 = v69;
  sub_1C3F970C4(v52, v69, &qword_1EBBC0578);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v53, 1, v68) == 1)
  {
    uint64_t v54 = MEMORY[0x1E4FBC860];
    *uint64_t v44 = MEMORY[0x1E4FBC860];
    v44[1] = v54;
    sub_1C4496888();
    sub_1C3F962E0(v53, &qword_1EBBC0578);
  }
  else
  {
    sub_1C446A41C(v53, (uint64_t)v44, type metadata accessor for Proto_Version);
  }
  swift_retain();
  sub_1C3F8F9D0(v44, v30, &v79);
  swift_release();
  swift_release();
  uint64_t v55 = v63;
  uint64_t v56 = (uint64_t)v64;
  *(void *)&v64[*(int *)(v63 + 36)] = v83;
  sub_1C446A41C(v42, v56, type metadata accessor for FinalizedTimestamp);
  *(_OWORD *)(v56 + *(int *)(v55 + 40)) = v79;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C160);
  uint64_t v58 = v65 + *(int *)(v57 + 48);
  (*(void (**)(void))(v74 + 32))();
  return sub_1C3F961BC(v56, v58, &qword_1EA39CBC0);
}

uint64_t sub_1C445A878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v62 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for Proto_Version(0);
  uint64_t v64 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  unint64_t v66 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = MEMORY[0x1F4188790](v58);
  uint64_t v63 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v67 = (uint64_t)&v57 - v9;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC0);
  MEMORY[0x1F4188790](v60);
  uint64_t v61 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_CRDT(0);
  uint64_t v68 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Proto_Value(0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  uint64_t v59 = a1;
  uint64_t v57 = v24;
  uint64_t v69 = *(void *)(a1 + v24);
  uint64_t v25 = v69 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v25, (uint64_t)v19, &qword_1EBBC0540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1C4496888();
    uint64_t v26 = *(int *)(v20 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)&v23[v26] = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0((uint64_t)v19, &qword_1EBBC0540);
  }
  else
  {
    sub_1C446A41C((uint64_t)v19, (uint64_t)v23, type metadata accessor for Proto_Value);
  }
  uint64_t v27 = v71;
  uint64_t v28 = v72;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3F974B0((uint64_t)v23, v28);
  swift_release();
  uint64_t v29 = swift_retain();
  AnyCRValue.init(from:)(v29, &v78);
  if (v27) {
    return swift_release();
  }
  uint64_t v30 = v69;
  uint64_t v31 = v69 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v31, (uint64_t)v13, &qword_1EBBC04F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v13, 1, v14) == 1)
  {
    sub_1C4496888();
    uint64_t v32 = *(int *)(v14 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)&v16[v32] = qword_1EBBC0660;
    swift_retain();
    sub_1C3F962E0((uint64_t)v13, &qword_1EBBC04F8);
  }
  else
  {
    sub_1C446A41C((uint64_t)v13, (uint64_t)v16, type metadata accessor for Proto_CRDT);
  }
  uint64_t v33 = v70;
  swift_retain();
  uint64_t v34 = sub_1C4450740((uint64_t)v16, v28, &v74);
  uint64_t v35 = v74;
  if ((void)v74)
  {
    uint64_t v36 = v30;
    unint64_t v37 = v63;
    (*(void (**)(uint64_t))(*(void *)v74 + 120))(v34);
    uint64_t v38 = (uint64_t)v37;
    uint64_t v39 = v67;
    uint64_t v40 = sub_1C446A41C(v38, v67, type metadata accessor for FinalizedTimestamp);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v35 + 96))(&v77, v40);
    uint64_t v41 = v66;
  }
  else
  {
    uint64_t v42 = v67;
    uint64_t v41 = v66;
    if (qword_1EBBBBF18 != -1) {
      swift_once();
    }
    uint64_t v43 = __swift_project_value_buffer(v58, (uint64_t)qword_1EBBC58A8);
    sub_1C446A3B4(v43, v42, type metadata accessor for FinalizedTimestamp);
    uint64_t v44 = &type metadata for AnyCRValue;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (!v45) {
      uint64_t v44 = 0;
    }
    if (v44)
    {
      uint64_t v47 = *(void (**)(ValueMetadata *, uint64_t))(v46 + 16);
      *((void *)&v75 + 1) = v44;
      uint64_t v76 = v46;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v74);
      v47(v44, v46);
      uint64_t v41 = v66;
    }
    else
    {
      uint64_t v76 = 0;
      long long v74 = 0u;
      long long v75 = 0u;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBBBF20);
    if (!swift_dynamicCast())
    {
      uint64_t result = sub_1C4497F58();
      __break(1u);
      return result;
    }
    uint64_t v77 = v73;
    uint64_t v36 = *(void *)(v59 + v57);
    uint64_t v39 = v67;
  }
  uint64_t v48 = v36 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  uint64_t v49 = v48;
  uint64_t v50 = v65;
  sub_1C3F970C4(v49, v65, &qword_1EBBC0578);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v50, 1, v33) == 1)
  {
    uint64_t v51 = MEMORY[0x1E4FBC860];
    *uint64_t v41 = MEMORY[0x1E4FBC860];
    v41[1] = v51;
    sub_1C4496888();
    sub_1C3F962E0(v50, &qword_1EBBC0578);
  }
  else
  {
    sub_1C446A41C(v50, (uint64_t)v41, type metadata accessor for Proto_Version);
  }
  swift_retain();
  sub_1C3F8F9D0(v41, v28, &v73);
  swift_release();
  swift_release();
  uint64_t v52 = v60;
  uint64_t v53 = (uint64_t)v61;
  *(void *)&v61[*(int *)(v60 + 36)] = v77;
  sub_1C446A41C(v39, v53, type metadata accessor for FinalizedTimestamp);
  *(_OWORD *)(v53 + *(int *)(v52 + 40)) = v73;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C130);
  uint64_t v55 = (uint64_t)v62 + *(int *)(v54 + 48);
  *uint64_t v62 = v78;
  return sub_1C3F961BC(v53, v55, &qword_1EA39CBC0);
}

void AnyCRValue.observableDifference(from:with:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C445B2FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v52 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v53 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v47 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1F4188790](v48);
  uint64_t v49 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Proto_Value(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v19 = a1;
  uint64_t v20 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v18, &qword_1EBBC0540);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a1) = v21(v18, 1, v10);
  sub_1C3F962E0((uint64_t)v18, &qword_1EBBC0540);
  if (a1 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v22 = 0xD000000000000017;
    *(void *)(v22 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v22 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  *(void *)(swift_initStackObject() + 16) = v19;
  sub_1C3F970C4(v20, (uint64_t)v16, &qword_1EBBC0540);
  uint64_t result = v21(v16, 1, v10);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v24 = v19;
  uint64_t v25 = v57;
  sub_1C446A41C((uint64_t)v16, v57, type metadata accessor for Proto_Value);
  uint64_t v26 = *(void *)(v25 + *(int *)(v10 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v27 = v26;
  uint64_t v28 = v47;
  sub_1C3F970C4(v27, v47, &qword_1EBBBF8A0);
  uint64_t v29 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) == 1)
  {
    swift_retain();
    sub_1C3F962E0(v28, &qword_1EBBBF8A0);
    uint64_t v31 = v51;
    uint64_t v30 = (uint64_t)v52;
    uint64_t v33 = v49;
    uint64_t v32 = v50;
    uint64_t v34 = v48;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v34 = v48;
    uint64_t v33 = v49;
    if (EnumCaseMultiPayload == 7)
    {
      sub_1C446A41C(v28, v49, type metadata accessor for Proto_Reference);
      uint64_t v30 = (uint64_t)v52;
      uint64_t v36 = v53;
      uint64_t v32 = v50;
      uint64_t v31 = v51;
      goto LABEL_12;
    }
    swift_retain();
    sub_1C3F924DC(v28, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    uint64_t v31 = v51;
    uint64_t v30 = (uint64_t)v52;
    uint64_t v32 = v50;
  }
  sub_1C4496888();
  uint64_t v37 = *(int *)(v34 + 20);
  uint64_t v36 = v53;
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v33 + v37) = qword_1EBBBC808;
LABEL_12:
  swift_retain();
  sub_1C3F924DC(v57, type metadata accessor for Proto_Value);
  uint64_t v38 = *(void *)(v33 + *(int *)(v34 + 20))
      + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  sub_1C3F970C4(v38, v30, &qword_1EBBC0560);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    *uint64_t v36 = MEMORY[0x1E4FBC860];
    v36[1] = sub_1C4496868();
    v36[2] = v39;
    sub_1C4496888();
    sub_1C3F962E0(v30, &qword_1EBBC0560);
  }
  else
  {
    sub_1C446A41C(v30, (uint64_t)v36, type metadata accessor for Proto_KeyPath);
  }
  uint64_t v40 = v54;
  sub_1C3F924DC(v33, type metadata accessor for Proto_Reference);
  swift_retain();
  uint64_t result = sub_1C3F766DC((uint64_t)v36, &v55);
  if (v40)
  {
    swift_release();
    swift_setDeallocating();
    return swift_release();
  }
  uint64_t v41 = *(void *)(v24 + 16);
  if (v41)
  {
    uint64_t v43 = v55;
    unint64_t v42 = v56;
    uint64_t v44 = *(void (**)(ValueMetadata *, uint64_t *, uint64_t, void, ValueMetadata *, _UNKNOWN **))(*(void *)v41 + 176);
    sub_1C3F7E324(v55, v56);
    swift_retain();
    v44(&type metadata for AnyCRDT, &v55, v24, 0, &type metadata for AnyCRDT, &protocol witness table for AnyCRDT);
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = sub_1C3F7E2CC(v43, v42);
    uint64_t v45 = v46;
    *uint64_t v46 = v43;
    v45[1] = v42;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1C445BA34(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 16) = a1;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C445BA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v30 = a5;
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for Proto_Timestamp(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (unint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Timestamp(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C160);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = (char *)&v30 + *(int *)(v16 + 48) - v17;
  uint64_t v20 = sub_1C4496678();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v18, v31, v20);
  sub_1C3F970C4(v32, (uint64_t)v19, &qword_1EA39CBC0);
  sub_1C446A3B4(v33, (uint64_t)v8, type metadata accessor for Proto_Timestamp);
  swift_retain();
  uint64_t v22 = v34;
  sub_1C3F8A234(v8, a4, (uint64_t)v11);
  if (v22)
  {
    uint64_t v23 = &qword_1EA39C160;
    uint64_t v24 = (uint64_t)v18;
  }
  else
  {
    uint64_t v25 = (uint64_t)&v15[*(int *)(v12 + 48)];
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v26(v15, v18, v20);
    sub_1C3F961BC((uint64_t)v19, v25, &qword_1EA39CBC0);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C150);
    uint64_t v28 = v30;
    sub_1C446A41C((uint64_t)v11, (uint64_t)&v30[*(int *)(v27 + 36)], type metadata accessor for Timestamp);
    v26(v28, v15, v20);
    uint64_t v24 = v25;
    uint64_t v23 = &qword_1EA39CBC0;
  }
  return sub_1C3F962E0(v24, v23);
}

uint64_t AnyCRDT.finalizeTimestamps(_:)(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)v1 + 144);
  uint64_t v4 = swift_retain();
  LOBYTE(v3) = v3(v4);
  uint64_t result = swift_release();
  if (v3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      *(void *)uint64_t v1 = (*(uint64_t (**)(void))(**(void **)v1 + 160))();
      swift_release();
    }
    return (*(uint64_t (**)(uint64_t))(**(void **)v1 + 152))(a1);
  }
  return result;
}

uint64_t sub_1C445BE18(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C4496678();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496668();
  if (a1)
  {
    uint64_t v8 = *(void **)(a1 + qword_1EBBC59D0);
    swift_retain();
    objc_msgSend(v8, sel_copy);
    sub_1C4497BA8();
    swift_unknownObjectRelease();
    swift_release_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0190);
    swift_dynamicCast();
    *(void *)(v2 + qword_1EBBC59D0) = v20[1];
  }
  else
  {
    uint64_t v9 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1428);
    id v10 = objc_msgSend(objc_allocWithZone(v9), sel_init);
    v21[3] = v9;
    v21[0] = v10;
    sub_1C4496668();
    if (v9)
    {
      uint64_t v11 = __swift_project_boxed_opaque_existential_1(v21, (uint64_t)v9);
      uint64_t v12 = *((void *)v9 - 1);
      MEMORY[0x1F4188790](v11);
      uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v14);
      uint64_t v15 = sub_1C44982D8();
      (*(void (**)(char *, objc_class *))(v12 + 8))(v14, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
    else
    {
      uint64_t v15 = 0;
    }
    id v16 = objc_allocWithZone((Class)CRTTMergeableString);
    uint64_t v17 = (void *)sub_1C4496608();
    id v18 = objc_msgSend(v16, sel_initWithStorage_uuid_, v15, v17);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v2 + qword_1EBBC59D0) = v18;
  }
  return v2;
}

void *sub_1C445C0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  v26[1] = *(id *)MEMORY[0x1E4F143B8];
  v25[1] = *v7;
  uint64_t v11 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (char *)v7 + qword_1EBBC59C8;
  sub_1C4496668();
  sub_1C446A3B4(a1, (uint64_t)v13, type metadata accessor for Proto_Sequence);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  id v16 = objc_allocWithZone((Class)type metadata accessor for CRSequenceDecoder(0));
  swift_retain();
  id v17 = sub_1C3F8D024((uint64_t)v13, a3, a5, v15);
  swift_release();
  swift_release();
  id v18 = objc_allocWithZone((Class)CRTTMergeableString);
  v26[0] = 0;
  id v19 = objc_msgSend(v18, sel_initWithDecoder_error_, v17, v26);
  if (v19)
  {
    id v20 = v19;
    id v21 = v26[0];
    swift_release();

    sub_1C3F924DC(a1, type metadata accessor for Proto_Sequence);
    *(void *)((char *)v7 + qword_1EBBC59D0) = v20;
  }
  else
  {
    id v22 = v26[0];
    sub_1C44963A8();

    swift_willThrow();
    swift_release();

    sub_1C3F924DC(a1, type metadata accessor for Proto_Sequence);
    uint64_t v23 = sub_1C4496678();
    (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v14, v23);
    swift_deallocPartialClassInstance();
  }
  return v7;
}

id sub_1C445C3A8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[qword_1EA39F538] = a1;
  v8.receiver = v6;
  v8.super_class = v5;
  swift_bridgeObjectRetain();
  id result = objc_msgSendSuper2(&v8, sel_init);
  a3[3] = v5;
  *a3 = result;
  return result;
}

id sub_1C445C42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for Proto_Value(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v26 = (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v23 = a3;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C401250C(0, v10, 0);
    uint64_t v11 = v29;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v24 = a1;
    uint64_t v25 = v13;
    while (1)
    {
      uint64_t v14 = v26;
      sub_1C446A3B4(v12, v26, type metadata accessor for Proto_Value);
      type metadata accessor for CRDecoder(0);
      swift_allocObject();
      swift_retain();
      uint64_t v15 = sub_1C3F974B0(v14, a2);
      swift_release();
      AnyCRValue.init(from:)(v15, &v28);
      if (v3) {
        break;
      }
      uint64_t v16 = v28;
      uint64_t v29 = v11;
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1C401250C(v17 > 1, v18 + 1, 1);
        uint64_t v11 = v29;
      }
      *(void *)(v11 + 16) = v18 + 1;
      *(void *)(v11 + 8 * v18 + 32) = v16;
      v12 += v25;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        swift_release();
        a3 = v23;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    return (id)swift_release();
  }
  else
  {
LABEL_9:
    id v20 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1408);
    id v21 = (char *)objc_allocWithZone(v20);
    *(void *)&v21[qword_1EA39F538] = v11;
    v27.receiver = v21;
    v27.super_class = v20;
    id result = objc_msgSendSuper2(&v27, sel_init);
    a3[3] = v20;
    *a3 = result;
  }
  return result;
}

uint64_t sub_1C445C68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v51 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for Proto_Version(0);
  uint64_t v8 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v49 = (void **)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C4496678();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  uint64_t v17 = *(void *)(a1 + v55);
  swift_beginAccess();
  uint64_t v18 = *(void *)(a2 + 24);
  unint64_t v19 = *(void *)(v18 + 16);
  if (!v19 || (unint64_t v20 = *(void *)(v17 + 16), v20 >= v19))
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(_OWORD *)uint64_t v33 = xmmword_1C44A0890;
    *(unsigned char *)(v33 + 16) = 0;
    swift_willThrow();
LABEL_9:
    swift_release();
    return sub_1C3F924DC(a1, type metadata accessor for Proto_Set);
  }
  uint64_t v45 = a3;
  uint64_t v48 = a2;
  (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v16, v18+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v20, v13);
  type metadata accessor for ReplicaState();
  uint64_t v21 = swift_allocObject();
  uint64_t v46 = v8;
  uint64_t v22 = v21;
  uint64_t v23 = v21 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v24 = type metadata accessor for Replica();
  uint64_t v47 = a1;
  uint64_t v25 = v24;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  v26(v23, 1, 1, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v16, v13);
  *(void *)(v22 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v22 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  uint64_t v27 = v25;
  a1 = v47;
  v26((uint64_t)v12, 1, 1, v27);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v12, v23, &qword_1EBBC0FA0);
  swift_endAccess();
  uint64_t v28 = *(void *)(a1 + v55)
      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  uint64_t v29 = v28;
  uint64_t v30 = v51;
  sub_1C3F970C4(v29, v51, &qword_1EBBC0578);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v30, 1, v50) == 1)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v32 = v49;
    void *v49 = MEMORY[0x1E4FBC860];
    v32[1] = v31;
    sub_1C4496888();
    sub_1C3F962E0(v30, &qword_1EBBC0578);
  }
  else
  {
    uint64_t v32 = v49;
    sub_1C446A41C(v30, (uint64_t)v49, type metadata accessor for Proto_Version);
  }
  uint64_t v34 = v48;
  swift_retain();
  uint64_t v35 = v52;
  sub_1C3F8F9D0(v32, v34, &v54);
  if (v35)
  {
    swift_release();
    goto LABEL_9;
  }
  long long v37 = v54;
  swift_beginAccess();
  swift_retain();
  uint64_t v38 = swift_bridgeObjectRetain();
  uint64_t v39 = (void *)sub_1C4469298(v38, v34);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v40 = MEMORY[0x1E4FBC868];
  if (v39[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBB8);
    uint64_t v41 = sub_1C4497FD8();
  }
  else
  {
    uint64_t v41 = MEMORY[0x1E4FBC868];
  }
  v53[0] = v41;
  sub_1C4467D9C(v39, 1, v53);
  uint64_t v42 = v53[0];
  uint64_t v43 = v40;
  if (qword_1EBBC10F0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C4497A58();
  swift_release();
  uint64_t v55 = v53[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A13C0);
  uint64_t v44 = (void *)swift_allocObject();
  v44[3] = v43;
  v44[4] = v43;
  v44[5] = v43;
  v44[6] = 0;
  v44[2] = v22;
  swift_beginAccess();
  *(_OWORD *)(v44 + 3) = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v44[5] = v42;
  swift_bridgeObjectRelease();
  v44[6] = v55;
  swift_release();
  uint64_t result = sub_1C3F924DC(v47, type metadata accessor for Proto_Set);
  *uint64_t v45 = v44;
  return result;
}

double sub_1C445CDD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_Version(0);
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_Value(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_Set.Element(0) + 20));
  uint64_t v18 = v17 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v12, &qword_1EBBC0540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1C4496888();
    uint64_t v19 = *(int *)(v13 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)&v16[v19] = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0((uint64_t)v12, &qword_1EBBC0540);
  }
  else
  {
    sub_1C446A41C((uint64_t)v12, (uint64_t)v16, type metadata accessor for Proto_Value);
  }
  uint64_t v20 = v34;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3F974B0((uint64_t)v16, a2);
  swift_release();
  uint64_t v21 = swift_retain();
  uint64_t v22 = v32;
  AnyCRValue.init(from:)(v21, (uint64_t *)v20);
  if (v22)
  {
    swift_release();
  }
  else
  {
    uint64_t v23 = v17
        + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
    swift_beginAccess();
    uint64_t v24 = v23;
    uint64_t v25 = v31;
    sub_1C3F970C4(v24, v31, &qword_1EBBC0578);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v25, 1, v30) == 1)
    {
      uint64_t v26 = MEMORY[0x1E4FBC860];
      *uint64_t v9 = MEMORY[0x1E4FBC860];
      v9[1] = v26;
      sub_1C4496888();
      sub_1C3F962E0(v25, &qword_1EBBC0578);
    }
    else
    {
      sub_1C446A41C(v25, (uint64_t)v9, type metadata accessor for Proto_Version);
    }
    swift_retain();
    sub_1C3F8F9D0(v9, a2, v33);
    swift_release();
    double result = v33[0];
    *(_OWORD *)(v20 + 8) = *(_OWORD *)v33;
  }
  return result;
}

uint64_t sub_1C445D1E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v56 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Proto_Version(0);
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v54 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (void **)((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C4496678();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  uint64_t v20 = *(void *)(a1 + v52);
  swift_beginAccess();
  uint64_t v21 = *(void *)(a4 + 24);
  unint64_t v22 = *(void *)(v21 + 16);
  if (!v22 || (unint64_t v23 = *(void *)(v20 + 16), v23 >= v22))
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(_OWORD *)uint64_t v34 = xmmword_1C44A0890;
    *(unsigned char *)(v34 + 16) = 0;
    swift_willThrow();
LABEL_9:
    swift_release();
    return sub_1C3F924DC(a1, type metadata accessor for Proto_Set);
  }
  uint64_t v48 = a3;
  uint64_t v47 = a5;
  uint64_t v51 = a4;
  (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, v21+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v23, v16);
  type metadata accessor for ReplicaState();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v24 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v26 = type metadata accessor for Replica();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v49 = a1;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v28(v25, 1, 1, v26);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v19, v16);
  *(void *)(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  v28((uint64_t)v15, 1, 1, v26);
  a1 = v49;
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v15, v25, &qword_1EBBC0FA0);
  swift_endAccess();
  uint64_t v29 = *(void *)(a1 + v52)
      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  uint64_t v30 = v29;
  uint64_t v31 = v56;
  sub_1C3F970C4(v30, v56, &qword_1EBBC0578);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v31, 1, v54) == 1)
  {
    uint64_t v32 = MEMORY[0x1E4FBC860];
    uint64_t v33 = v55;
    *uint64_t v55 = MEMORY[0x1E4FBC860];
    v33[1] = v32;
    sub_1C4496888();
    sub_1C3F962E0(v31, &qword_1EBBC0578);
  }
  else
  {
    uint64_t v33 = v55;
    sub_1C446A41C(v31, (uint64_t)v55, type metadata accessor for Proto_Version);
  }
  uint64_t v35 = v51;
  uint64_t v36 = v59;
  swift_retain();
  sub_1C3F8F9D0(v33, v35, &v58);
  if (v36)
  {
    swift_release();
    goto LABEL_9;
  }
  long long v38 = v58;
  uint64_t v39 = swift_beginAccess();
  MEMORY[0x1F4188790](v39);
  uint64_t v40 = v48;
  *(&v47 - 2) = v50;
  *(&v47 - 1) = v40;
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_1C44695F8(v41, (void (*)(long long *, char *, void, char *))sub_1C446A38C, (uint64_t)(&v47 - 4));
  swift_bridgeObjectRelease();
  uint64_t v43 = MEMORY[0x1E4FBC868];
  if (*(void *)(v42 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBB8);
    uint64_t v44 = sub_1C4497FD8();
  }
  else
  {
    uint64_t v44 = MEMORY[0x1E4FBC868];
  }
  v57[0] = v44;
  sub_1C44698F8(v42, 1, v57);
  swift_bridgeObjectRelease();
  uint64_t v59 = v57[0];
  if (qword_1EBBC10F0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C4497A58();
  swift_release();
  uint64_t v45 = v57[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A13C0);
  uint64_t v46 = (void *)swift_allocObject();
  v46[3] = v43;
  v46[4] = v43;
  v46[5] = v43;
  v46[6] = 0;
  v46[2] = v24;
  swift_beginAccess();
  *(_OWORD *)(v46 + 3) = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v46[5] = v59;
  swift_bridgeObjectRelease();
  v46[6] = v45;
  swift_release();
  uint64_t result = sub_1C3F924DC(v49, type metadata accessor for Proto_Set);
  *uint64_t v47 = v46;
  return result;
}

uint64_t AnyCRValue.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for CRValueBoxHelper();
  uint64_t result = sub_1C4464A6C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C445D9AC(int a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC150);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v236 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC148);
  uint64_t v6 = MEMORY[0x1F4188790](v245);
  unint64_t v277 = (char *)&v236 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v236 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v236 - v11;
  uint64_t v250 = type metadata accessor for Replica();
  uint64_t v13 = MEMORY[0x1F4188790](v250);
  uint64_t v249 = (uint64_t)&v236 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v248 = (uint64_t)&v236 - v15;
  uint64_t v256 = type metadata accessor for Timestamp(0);
  uint64_t v260 = *(void *)(v256 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v256);
  uint64_t v275 = (uint64_t)&v236 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v264 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))((char *)&v236 - v19);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v265 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))((char *)&v236 - v21);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v271 = (uint64_t *)((char *)&v236 - v23);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v236 - v25;
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v253 = (uint64_t)&v236 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v252 = (uint64_t)&v236 - v29;
  uint64_t v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC128);
  MEMORY[0x1F4188790](v267);
  uint64_t v278 = (uint64_t)&v236 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC120);
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  uint64_t v272 = (uint64_t)&v236 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v258 = (uint64_t)&v236 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v259 = (uint64_t)&v236 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v257 = (uint64_t)&v236 - v39;
  MEMORY[0x1F4188790](v38);
  uint64_t v273 = (uint64_t)&v236 - v40;
  uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BFF0);
  uint64_t v280 = *(void *)(v281 - 8);
  uint64_t v41 = MEMORY[0x1F4188790](v281);
  uint64_t v43 = (char *)&v236 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x1F4188790](v41);
  uint64_t v266 = (uint64_t *)((char *)&v236 - v45);
  MEMORY[0x1F4188790](v44);
  long long v274 = (uint64_t *)((char *)&v236 - v46);
  uint64_t v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1430);
  uint64_t v47 = *(void *)(v269 - 8);
  MEMORY[0x1F4188790](v269);
  uint64_t v255 = (char *)&v236 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1438);
  uint64_t v50 = MEMORY[0x1F4188790](v49 - 8);
  long long v279 = (unint64_t *)((char *)&v236 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v50);
  uint64_t v268 = (uint64_t *)((char *)&v236 - v52);
  uint64_t v247 = sub_1C44967E8();
  uint64_t v246 = *(void *)(v247 - 8);
  uint64_t result = MEMORY[0x1F4188790](v247);
  unint64_t v261 = (char *)&v236 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = v1;
  if (!*v1) {
    return result;
  }
  id v55 = objc_msgSend(*(id *)(*v1 + qword_1EBBC59D0), sel_attributedString);
  uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1428);
  uint64_t v56 = swift_dynamicCastClassUnconditional();
  uint64_t v276 = (uint64_t)v43;
  uint64_t v57 = (uint64_t *)(v56 + qword_1EA39F538);
  swift_beginAccess();
  uint64_t v58 = *v57;
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v59 = *(void *)(v58 + 16);
  uint64_t v60 = (uint64_t *)v276;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v59) {
    return result;
  }
  uint64_t v242 = v10;
  uint64_t v251 = v26;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1218);
  uint64_t v62 = v282;
  uint64_t v63 = (uint64_t)v282 + *(int *)(v61 + 48);
  sub_1C3F962E0(v63, &qword_1EA3A1418);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1410);
  uint64_t v65 = *(void *)(v64 - 8);
  unint64_t v66 = *(void (**)(void, void, void))(v65 + 56);
  uint64_t v239 = (unint64_t *)v63;
  uint64_t v238 = v64;
  unint64_t v237 = (void (*)(unint64_t *, void, uint64_t, uint64_t))v66;
  uint64_t v236 = v65 + 56;
  v66(v63, 1, 1);
  v284 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v67 = *v62;
  if (v67)
  {
    objc_msgSend(objc_msgSend(*(id *)(v67 + qword_1EBBC59D0), sel_attributedString), sel_length);
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA3A1440);
    sub_1C4496F18();
    id v68 = objc_msgSend(*(id *)(v67 + qword_1EBBC59D0), sel_attributedString);
    uint64_t v69 = (uint64_t *)(swift_dynamicCastClassUnconditional() + qword_1EA39F538);
    swift_beginAccess();
    uint64_t v70 = *v69;
    uint64_t v60 = (uint64_t *)v276;
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA3A1440);
    sub_1C4496F18();
    uint64_t v70 = MEMORY[0x1E4FBC860];
  }
  uint64_t v71 = v273;
  uint64_t v72 = *(void *)(v70 + 16);
  uint64_t v243 = v5;
  int v241 = a1;
  if (v72)
  {
    uint64_t v254 = v47;
    unint64_t v73 = (*(unsigned __int8 *)(v280 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v280 + 80);
    uint64_t v240 = v70;
    uint64_t v74 = v70 + v73;
    v270 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56);
    uint64_t v75 = *(void *)(v280 + 72);
    uint64_t v76 = &qword_1EA39BFF0;
    uint64_t v77 = v274;
    uint64_t i = v75;
    while (1)
    {
      uint64_t v78 = v76;
      sub_1C3F970C4(v74, (uint64_t)v60, v76);
      uint64_t v79 = v282[1];
      uint64_t v80 = *v60;
      swift_beginAccess();
      if (*(void *)(*(void *)(v79 + 40) + 16))
      {
        swift_bridgeObjectRetain();
        sub_1C4061A7C(v80);
        char v82 = v81;
        swift_bridgeObjectRelease();
        if (v82)
        {
          uint64_t v83 = v284;
          uint64_t v84 = (uint64_t *)v276;
          if (!v284[2]) {
            goto LABEL_22;
          }
          unint64_t v85 = sub_1C4061A7C(v80);
          if (v86)
          {
            uint64_t v87 = v83[7];
            v263 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 72);
            uint64_t v88 = v84;
            uint64_t v89 = v265;
            sub_1C446A3B4(v87 + (void)v263 * v85, (uint64_t)v265, type metadata accessor for Timestamp);
            uint64_t v90 = (uint64_t)v89;
            uint64_t v91 = v271;
            sub_1C446A41C(v90, (uint64_t)v271, type metadata accessor for Timestamp);
            uint64_t v92 = v91;
            uint64_t v93 = (uint64_t)v88 + *(int *)(v281 + 36);
            uint64_t v94 = *(int *)(v256 + 20);
            uint64_t v95 = *(void *)((char *)v92 + v94);
            uint64_t v96 = *(void *)(v93 + v94);
            BOOL v97 = v95 < v96;
            if (v95 == v96
              && (uint64_t v98 = *(int *)(v250 + 20),
                  uint64_t v99 = *(void *)((char *)v92 + v98),
                  uint64_t v100 = *(void *)(v93 + v98),
                  BOOL v97 = v99 < v100,
                  v99 == v100))
            {
              char v101 = sub_1C410BE0C();
              uint64_t v92 = v271;
              if (v101) {
                goto LABEL_33;
              }
            }
            else if (v97)
            {
LABEL_33:
              sub_1C446A3B4(v93, (uint64_t)v264, type metadata accessor for Timestamp);
              swift_retain();
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v283 = v83;
              unint64_t v125 = sub_1C4061A7C(v80);
              uint64_t v126 = v83[2];
              BOOL v127 = (v124 & 1) == 0;
              uint64_t v128 = v126 + v127;
              uint64_t v75 = i;
              if (__OFADD__(v126, v127)) {
                goto LABEL_132;
              }
              char v129 = v124;
              if (v83[3] >= v128)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  sub_1C4068F08();
                }
              }
              else
              {
                sub_1C4064198(v128, isUniquelyReferenced_nonNull_native);
                unint64_t v130 = sub_1C4061A7C(v80);
                if ((v129 & 1) != (v131 & 1)) {
                  goto LABEL_136;
                }
                unint64_t v125 = v130;
              }
              uint64_t v77 = v274;
              uint64_t v132 = v283;
              if (v129)
              {
                sub_1C446A328((uint64_t)v264, v283[7] + v125 * (void)v263);
              }
              else
              {
                v283[(v125 >> 6) + 8] |= 1 << v125;
                *(void *)(v132[6] + 8 * v125) = v80;
                sub_1C446A41C((uint64_t)v264, v132[7] + v125 * (void)v263, type metadata accessor for Timestamp);
                uint64_t v133 = v132[2];
                BOOL v121 = __OFADD__(v133, 1);
                uint64_t v134 = v133 + 1;
                if (v121) {
                  goto LABEL_133;
                }
                v132[2] = v134;
                swift_retain();
              }
              uint64_t v71 = v273;
              v284 = v132;
              swift_release();
              swift_bridgeObjectRelease();
              sub_1C3F924DC((uint64_t)v271, type metadata accessor for Timestamp);
              goto LABEL_10;
            }
            sub_1C3F924DC((uint64_t)v92, type metadata accessor for Timestamp);
            uint64_t v84 = (uint64_t *)v276;
            uint64_t v75 = i;
          }
          if (v83[2] && (unint64_t v102 = sub_1C4061A7C(*v84), (v103 & 1) != 0))
          {
            uint64_t v104 = v83[7];
            uint64_t v105 = v260;
            uint64_t v106 = v272;
            sub_1C446A3B4(v104 + *(void *)(v260 + 72) * v102, v272, type metadata accessor for Timestamp);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v106, 0, 1, v256);
            sub_1C3F962E0(v106, &qword_1EBBBC120);
          }
          else
          {
LABEL_22:
            uint64_t v107 = v272;
            (*v270)(v272, 1, 1, v256);
            sub_1C3F962E0(v107, &qword_1EBBBC120);
            uint64_t v108 = *v84;
            sub_1C446A3B4((uint64_t)v84 + *(int *)(v281 + 36), v275, type metadata accessor for Timestamp);
            swift_retain();
            uint64_t v109 = v284;
            int v110 = swift_isUniquelyReferenced_nonNull_native();
            v283 = v109;
            unint64_t v112 = sub_1C4061A7C(v108);
            uint64_t v113 = v109[2];
            BOOL v114 = (v111 & 1) == 0;
            uint64_t v115 = v113 + v114;
            if (__OFADD__(v113, v114)) {
              goto LABEL_130;
            }
            char v116 = v111;
            if (v109[3] >= v115)
            {
              if ((v110 & 1) == 0) {
                sub_1C4068F08();
              }
            }
            else
            {
              sub_1C4064198(v115, v110);
              unint64_t v117 = sub_1C4061A7C(v108);
              if ((v116 & 1) != (v118 & 1)) {
                goto LABEL_136;
              }
              unint64_t v112 = v117;
            }
            uint64_t v77 = v274;
            uint64_t v119 = v283;
            if (v116)
            {
              sub_1C446A328(v275, v283[7] + *(void *)(v260 + 72) * v112);
            }
            else
            {
              v283[(v112 >> 6) + 8] |= 1 << v112;
              *(void *)(v119[6] + 8 * v112) = v108;
              sub_1C446A41C(v275, v119[7] + *(void *)(v260 + 72) * v112, type metadata accessor for Timestamp);
              uint64_t v120 = v119[2];
              BOOL v121 = __OFADD__(v120, 1);
              uint64_t v122 = v120 + 1;
              if (v121) {
                goto LABEL_131;
              }
              v119[2] = v122;
              swift_retain();
            }
            v284 = v119;
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v71 = v273;
          }
        }
      }
LABEL_10:
      uint64_t v60 = (uint64_t *)v276;
      uint64_t v76 = v78;
      sub_1C3F962E0(v276, v78);
      v74 += v75;
      if (!--v72)
      {
        swift_bridgeObjectRelease();
        uint64_t v47 = v254;
        goto LABEL_46;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v77 = v274;
LABEL_46:
  sub_1C44967D8();
  if (*v282)
  {
    id v135 = objc_msgSend(*(id *)(*v282 + qword_1EBBC59D0), sel_attributedString);
    uint64_t v136 = (uint64_t *)(swift_dynamicCastClassUnconditional() + qword_1EA39F538);
    swift_beginAccess();
    uint64_t v137 = *v136;
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v137 = MEMORY[0x1E4FBC860];
  }
  uint64_t v138 = v278;
  uint64_t v139 = v279;
  LODWORD(v276) = 0;
  unint64_t v140 = 0;
  uint64_t v254 = v137;
  uint64_t v141 = *(void *)(v137 + 16);
  uint64_t v265 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v47 + 56);
  uint64_t v264 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v47 + 48);
  v271 = (void *)(v260 + 48);
  v263 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56);
  v270 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((v260 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
  uint64_t v142 = v256;
  uint64_t v143 = v257;
  uint64_t v144 = v269;
  for (i = v141; ; uint64_t v141 = i)
  {
    if (v140 == v141)
    {
      uint64_t v145 = 1;
      uint64_t v275 = v141;
    }
    else
    {
      if (v140 >= *(void *)(v254 + 16)) {
        goto LABEL_129;
      }
      uint64_t v146 = v140 + 1;
      unint64_t v147 = v140;
      uint64_t v148 = (uint64_t)&v255[*(int *)(v144 + 48)];
      sub_1C3F970C4(v254+ ((*(unsigned __int8 *)(v280 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v280 + 80))+ *(void *)(v280 + 72) * v140, v148, &qword_1EA39BFF0);
      uint64_t v149 = (uint64_t)v279 + *(int *)(v144 + 48);
      *long long v279 = v147;
      uint64_t v150 = v148;
      uint64_t v139 = v279;
      sub_1C3F961BC(v150, v149, &qword_1EA39BFF0);
      uint64_t v145 = 0;
      uint64_t v275 = v146;
      uint64_t v138 = v278;
    }
    (*v265)(v139, v145, 1, v144);
    uint64_t v151 = (uint64_t)v139;
    uint64_t v152 = v268;
    sub_1C3F961BC(v151, (uint64_t)v268, &qword_1EA3A1438);
    if ((*v264)(v152, 1, v144) == 1) {
      break;
    }
    uint64_t v272 = *v152;
    sub_1C3F961BC((uint64_t)v152 + *(int *)(v144 + 48), (uint64_t)v77, &qword_1EA39BFF0);
    uint64_t v153 = v284;
    if (v284[2] && (unint64_t v154 = sub_1C4061A7C(*v77), (v155 & 1) != 0))
    {
      uint64_t v156 = v153[7];
      uint64_t v157 = v260;
      sub_1C446A3B4(v156 + *(void *)(v260 + 72) * v154, v71, type metadata accessor for Timestamp);
      uint64_t v158 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56);
      v158(v71, 0, 1, v142);
    }
    else
    {
      uint64_t v158 = *v263;
      (*v263)(v71, 1, 1, v142);
    }
    sub_1C446A3B4((uint64_t)v77 + *(int *)(v281 + 36), v143, type metadata accessor for Timestamp);
    v158(v143, 0, 1, v142);
    uint64_t v159 = v138 + *(int *)(v267 + 48);
    sub_1C3F970C4(v71, v138, &qword_1EBBBC120);
    sub_1C3F970C4(v143, v159, &qword_1EBBBC120);
    uint64_t v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*v271;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v271)(v138, 1, v142) == 1)
    {
      sub_1C3F962E0(v143, &qword_1EBBBC120);
      sub_1C3F962E0(v71, &qword_1EBBBC120);
      int v161 = v160(v159, 1, v142);
      uint64_t v162 = &qword_1EBBBC128;
      uint64_t v163 = v266;
      if (v161 == 1)
      {
        sub_1C3F962E0(v278, &qword_1EBBBC120);
        goto LABEL_74;
      }
      goto LABEL_72;
    }
    uint64_t v164 = v259;
    sub_1C3F970C4(v138, v259, &qword_1EBBBC120);
    int v165 = v160(v159, 1, v142);
    uint64_t v162 = &qword_1EBBBC128;
    uint64_t v163 = v266;
    if (v165 == 1) {
      goto LABEL_71;
    }
    uint64_t v166 = v252;
    sub_1C446A41C(v159, v252, type metadata accessor for Timestamp);
    uint64_t v167 = *(int *)(v142 + 20);
    uint64_t v168 = *(void *)(v164 + v167);
    uint64_t v169 = *(void *)(v166 + v167);
    uint64_t v170 = v164;
    uint64_t v171 = v253;
    sub_1C446A3B4(v170, v253, type metadata accessor for Timestamp);
    uint64_t v172 = (uint64_t)v251;
    sub_1C446A3B4(v166, (uint64_t)v251, type metadata accessor for Timestamp);
    if (v168 != v169) {
      goto LABEL_70;
    }
    uint64_t v173 = *(int *)(v250 + 20);
    uint64_t v174 = *(void *)(v171 + v173);
    uint64_t v175 = *(void *)(v172 + v173);
    uint64_t v176 = v248;
    sub_1C446A3B4(v171, v248, (uint64_t (*)(void))type metadata accessor for Replica);
    uint64_t v177 = v249;
    sub_1C446A3B4(v172, v249, (uint64_t (*)(void))type metadata accessor for Replica);
    if (v174 != v175)
    {
      sub_1C3F924DC(v177, (uint64_t (*)(void))type metadata accessor for Replica);
      sub_1C3F924DC(v176, (uint64_t (*)(void))type metadata accessor for Replica);
      uint64_t v166 = v252;
      uint64_t v171 = v253;
LABEL_70:
      sub_1C3F924DC(v172, type metadata accessor for Timestamp);
      sub_1C3F924DC(v171, type metadata accessor for Timestamp);
      sub_1C3F924DC(v166, type metadata accessor for Timestamp);
      uint64_t v162 = &qword_1EBBBC120;
      uint64_t v142 = v256;
      uint64_t v164 = v259;
LABEL_71:
      uint64_t v179 = v257;
      sub_1C3F962E0(v257, &qword_1EBBBC120);
      sub_1C3F962E0(v273, &qword_1EBBBC120);
      uint64_t v180 = v164;
      uint64_t v143 = v179;
      sub_1C3F924DC(v180, type metadata accessor for Timestamp);
LABEL_72:
      sub_1C3F962E0(v278, v162);
LABEL_73:
      sub_1C4496748();
      goto LABEL_74;
    }
    char v178 = sub_1C4496618();
    sub_1C3F924DC(v177, (uint64_t (*)(void))type metadata accessor for Replica);
    sub_1C3F924DC(v176, (uint64_t (*)(void))type metadata accessor for Replica);
    sub_1C3F924DC(v172, type metadata accessor for Timestamp);
    sub_1C3F924DC(v253, type metadata accessor for Timestamp);
    sub_1C3F924DC(v252, type metadata accessor for Timestamp);
    uint64_t v143 = v257;
    sub_1C3F962E0(v257, &qword_1EBBBC120);
    sub_1C3F962E0(v273, &qword_1EBBBC120);
    sub_1C3F924DC(v259, type metadata accessor for Timestamp);
    sub_1C3F962E0(v278, &qword_1EBBBC120);
    uint64_t v142 = v256;
    if ((v178 & 1) == 0) {
      goto LABEL_73;
    }
LABEL_74:
    uint64_t v181 = (uint64_t)v274;
    sub_1C3F970C4((uint64_t)v274, (uint64_t)v163, &qword_1EA39BFF0);
    if (v276)
    {
      sub_1C3F962E0((uint64_t)v163, &qword_1EA39BFF0);
      sub_1C3F962E0(v181, &qword_1EA39BFF0);
      LODWORD(v276) = 1;
      uint64_t v138 = v278;
      uint64_t v71 = v273;
      uint64_t v77 = (uint64_t *)v181;
    }
    else
    {
      uint64_t v182 = v284;
      if (v284[2] && (unint64_t v183 = sub_1C4061A7C(*v163), (v184 & 1) != 0))
      {
        sub_1C446A3B4(v182[7] + *(void *)(v260 + 72) * v183, v258, type metadata accessor for Timestamp);
        uint64_t v185 = 0;
      }
      else
      {
        uint64_t v185 = 1;
      }
      uint64_t v138 = v278;
      uint64_t v186 = v258;
      v158(v258, v185, 1, v142);
      sub_1C3F962E0((uint64_t)v163, &qword_1EA39BFF0);
      uint64_t v187 = (uint64_t)v274;
      sub_1C3F962E0((uint64_t)v274, &qword_1EA39BFF0);
      int v188 = v160(v186, 1, v142);
      uint64_t v77 = (uint64_t *)v187;
      LODWORD(v276) = v188 == 1;
      sub_1C3F962E0(v186, &qword_1EBBBC120);
      uint64_t v71 = v273;
    }
    uint64_t v144 = v269;
    uint64_t v139 = v279;
    unint64_t v140 = v275;
  }
  swift_bridgeObjectRelease();
  uint64_t v189 = v261;
  if (sub_1C4496768())
  {
    (*(void (**)(char *, uint64_t))(v246 + 8))(v189, v247);
    return swift_bridgeObjectRelease();
  }
  if (((v241 | v276) & 1) == 0)
  {
    uint64_t v192 = v245;
    uint64_t v200 = v243;
    uint64_t v201 = v242;
    if (*v282)
    {
      id v206 = objc_msgSend(*(id *)(*v282 + qword_1EBBC59D0), sel_attributedString);
      uint64_t v207 = (unint64_t *)(swift_dynamicCastClassUnconditional() + qword_1EA39F538);
      swift_beginAccess();
      unint64_t v208 = *v207;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
    }
    else
    {
LABEL_96:
      unint64_t v208 = MEMORY[0x1E4FBC860];
    }
    uint64_t v209 = (uint64_t)v277;
    sub_1C44967C8();
    uint64_t v210 = sub_1C44967A8();
    uint64_t v211 = *(void *)(v210 - 8);
    (*(void (**)(char *, void *, uint64_t))(v211 + 16))(v201, v200, v210);
    sub_1C3F8B6F8((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
    sub_1C4497818();
    (*(void (**)(void *, uint64_t))(v211 + 8))(v200, v210);
    *(void *)&v201[*(int *)(v192 + 36)] = v283;
    sub_1C3F961BC((uint64_t)v201, v209, &qword_1EBBBC148);
    unint64_t v212 = (unint64_t *)(v209 + *(int *)(v192 + 36));
    uint64_t v213 = (void *)*v212;
    sub_1C44977D8();
    if (v213 == v283)
    {
LABEL_121:
      sub_1C3F962E0(v209, &qword_1EBBBC148);
      v234 = v239;
      sub_1C3F962E0((uint64_t)v239, &qword_1EA3A1418);
      unint64_t *v234 = v208;
      uint64_t v235 = v238;
      (*(void (**)(char *, char *, uint64_t))(v246 + 32))((char *)v234 + *(int *)(v238 + 44), v261, v247);
      v237(v234, 0, 1, v235);
      return swift_bridgeObjectRelease();
    }
    uint64_t v282 = (uint64_t *)sub_1C3F8B6F8(qword_1EA39D5B8, MEMORY[0x1E4F27CE0]);
    long long v279 = v212;
    while (1)
    {
      sub_1C4497098();
      uint64_t v215 = v210;
      uint64_t v216 = (void (*)(void **, void))sub_1C44978C8();
      uint64_t v218 = *v217;
      int64_t v219 = v217[1];
      v216(&v283, 0);
      if (v218 < 0) {
        break;
      }
      int64_t v220 = *(void *)(v208 + 16);
      if (v220 < v219) {
        goto LABEL_123;
      }
      uint64_t v221 = v219 - v218;
      if (__OFSUB__(v219, v218)) {
        goto LABEL_124;
      }
      uint64_t v222 = v218 - v219;
      if (__OFSUB__(0, v221)) {
        goto LABEL_125;
      }
      int64_t v223 = v220 - v221;
      if (__OFADD__(v220, v222)) {
        goto LABEL_126;
      }
      int v224 = swift_isUniquelyReferenced_nonNull_native();
      if (!v224 || v223 > *(void *)(v208 + 24) >> 1)
      {
        if (v220 <= v223) {
          int64_t v225 = v220 + v222;
        }
        else {
          int64_t v225 = v220;
        }
        unint64_t v208 = sub_1C3FF13CC(v224, v225, 1, v208);
      }
      unint64_t v226 = v208 + ((*(unsigned __int8 *)(v280 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v280 + 80));
      uint64_t v227 = *(void *)(v280 + 72);
      uint64_t v228 = v227 * v218;
      unint64_t v229 = v226 + v227 * v218;
      swift_arrayDestroy();
      if (v221)
      {
        uint64_t v230 = *(void *)(v208 + 16);
        uint64_t v231 = v230 - v219;
        if (__OFSUB__(v230, v219)) {
          goto LABEL_127;
        }
        if (v231 < 0) {
          goto LABEL_135;
        }
        if (v228 < v227 * v219 || v229 >= v226 + v227 * v219 + v231 * v227)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v228 != v227 * v219)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v232 = *(void *)(v208 + 16);
        BOOL v121 = __OFADD__(v232, v222);
        uint64_t v233 = v232 - v221;
        if (v121) {
          goto LABEL_128;
        }
        *(void *)(v208 + 16) = v233;
      }
      uint64_t v214 = (void *)*v279;
      uint64_t v209 = (uint64_t)v277;
      uint64_t v210 = v215;
      sub_1C44977D8();
      if (v214 == v283) {
        goto LABEL_121;
      }
    }
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  char isUniquelyReferenced_native = swift_isUniquelyReferenced_native();
  uint64_t v191 = v245;
  uint64_t v192 = (uint64_t)v243;
  uint64_t v193 = (uint64_t)v242;
  if ((isUniquelyReferenced_native & 1) == 0)
  {
    uint64_t v194 = v282;
    uint64_t v195 = *v282;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A1420);
    swift_allocObject();
    *uint64_t v194 = sub_1C445BE18(v195);
  }
  sub_1C44967C8();
  uint64_t v196 = sub_1C44967A8();
  uint64_t v197 = *(void *)(v196 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v197 + 16))(v193, v192, v196);
  sub_1C3F8B6F8((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
  sub_1C4497818();
  (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v192, v196);
  *(void *)(v193 + *(int *)(v191 + 36)) = v283;
  sub_1C3F961BC(v193, (uint64_t)v12, &qword_1EBBBC148);
  uint64_t v198 = &v12[*(int *)(v191 + 36)];
  uint64_t v199 = *(void **)v198;
  uint64_t v200 = &v283;
  sub_1C44977D8();
  if (v199 == v283)
  {
LABEL_92:
    sub_1C3F962E0((uint64_t)v12, &qword_1EBBBC148);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v261, v247);
    return swift_bridgeObjectRelease();
  }
  sub_1C3F8B6F8(qword_1EA39D5B8, MEMORY[0x1E4F27CE0]);
  uint64_t v201 = (char *)&unk_1E64C2000;
  while (1)
  {
    sub_1C4497098();
    uint64_t v202 = (void (*)(void **, void))sub_1C44978C8();
    uint64_t v204 = *v203;
    uint64_t v205 = v203[1];
    v202(&v283, 0);
    if (!*v282) {
      break;
    }
    if (__OFSUB__(v205, v204))
    {
      __break(1u);
      goto LABEL_96;
    }
    objc_msgSend(*(id *)(*v282 + qword_1EBBC59D0), sel_removeObjectsInRange_, v204, v205 - v204);
    uint64_t v192 = *(void *)v198;
    sub_1C44977D8();
    if ((void *)v192 == v283) {
      goto LABEL_92;
    }
  }
LABEL_134:
  __break(1u);
LABEL_135:
  sub_1C4497FE8();
  __break(1u);
LABEL_136:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

uint64_t sub_1C445F948(void *a1, _OWORD *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void **a7)
{
  uint64_t v63 = a5;
  uint64_t v52 = a7;
  uint64_t v58 = a6;
  unint64_t v59 = a3;
  uint64_t v51 = a2;
  uint64_t v50 = a1;
  uint64_t v8 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v55 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v56 = (unint64_t *)((char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for Timestamp(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v57 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BFF0);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v48);
  uint64_t v53 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v54 = (uint64_t *)((char *)&v48 - v14);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Proto_Version(0);
  uint64_t v60 = *(void *)(v18 - 8);
  uint64_t v61 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Proto_Value(0);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(a4 + *(int *)(type metadata accessor for Proto_Set.Element(0) + 20));
  uint64_t v29 = v28 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v29, (uint64_t)v23, &qword_1EBBC0540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_1C4496888();
    uint64_t v30 = *(int *)(v24 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)&v27[v30] = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0((uint64_t)v23, &qword_1EBBC0540);
  }
  else
  {
    sub_1C446A41C((uint64_t)v23, (uint64_t)v27, type metadata accessor for Proto_Value);
  }
  uint64_t v31 = v63;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3F974B0((uint64_t)v27, v31);
  swift_release();
  uint64_t v32 = swift_retain();
  uint64_t v33 = v62;
  AnyCRValue.init(from:)(v32, &v65);
  if (v33) {
    return swift_release();
  }
  uint64_t v34 = v28 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  sub_1C3F970C4(v34, (uint64_t)v17, &qword_1EBBC0578);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v17, 1, v61) == 1)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    *uint64_t v20 = MEMORY[0x1E4FBC860];
    v20[1] = v35;
    sub_1C4496888();
    sub_1C3F962E0((uint64_t)v17, &qword_1EBBC0578);
  }
  else
  {
    sub_1C446A41C((uint64_t)v17, (uint64_t)v20, type metadata accessor for Proto_Version);
  }
  swift_retain();
  sub_1C3F8F9D0(v20, v31, &v64);
  long long v37 = v64;
  uint64_t v38 = v65;
  uint64_t v39 = (void *)(*(void *)(v58 + *(int *)(type metadata accessor for Proto_OrderedSet(0) + 20))
                 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
  swift_beginAccess();
  if ((v59 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (*(void *)(*v39 + 16) <= v59)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v40 = v56;
  sub_1C446A3B4(*v39+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v59, (uint64_t)v56, type metadata accessor for Proto_Timestamp);
  swift_retain();
  swift_retain();
  uint64_t v41 = v57;
  sub_1C3F8A234(v40, v31, v57);
  uint64_t v42 = v41;
  uint64_t v43 = v54;
  *uint64_t v54 = v38;
  sub_1C446A41C(v42, (uint64_t)v43 + *(int *)(v48 + 36), type metadata accessor for Timestamp);
  sub_1C3F970C4((uint64_t)v43, v53, &qword_1EA39BFF0);
  uint64_t v44 = v52;
  uint64_t v39 = *v52;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v44 = v39;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_20:
    uint64_t v39 = (void *)sub_1C3FF13CC(0, v39[2] + 1, 1, (unint64_t)v39);
    *uint64_t v52 = v39;
  }
  unint64_t v47 = v39[2];
  unint64_t v46 = v39[3];
  if (v47 >= v46 >> 1)
  {
    uint64_t v39 = (void *)sub_1C3FF13CC(v46 > 1, v47 + 1, 1, (unint64_t)v39);
    *uint64_t v52 = v39;
  }
  v39[2] = v47 + 1;
  sub_1C3F961BC(v53, (uint64_t)v39+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v47, &qword_1EA39BFF0);
  swift_release();
  uint64_t result = sub_1C3F962E0((uint64_t)v54, &qword_1EA39BFF0);
  *uint64_t v50 = v65;
  _OWORD *v51 = v37;
  return result;
}

uint64_t AnyCRDT.minAppFormatVersion.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

void sub_1C4460118()
{
}

void sub_1C4460174()
{
}

void sub_1C44601D0()
{
}

void sub_1C446022C()
{
}

void sub_1C4460288()
{
}

void sub_1C44602E4()
{
}

void sub_1C4460340()
{
}

void sub_1C446039C()
{
}

void sub_1C44603F8()
{
}

void sub_1C4460454()
{
}

void sub_1C44604B0()
{
}

void sub_1C446050C()
{
}

void sub_1C4460568()
{
}

void sub_1C44605C4()
{
}

void sub_1C4460620()
{
}

void sub_1C446067C()
{
}

void sub_1C44606D8()
{
}

void sub_1C4460734()
{
}

void sub_1C4460790()
{
}

uint64_t *sub_1C44607EC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 264);
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v16 - v12;
  uint64_t v14 = (uint64_t)v1 + *(void *)(v3 + 280);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v14, v6);
  uint64_t result = (uint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + 272) + 16) + 24))(a1, v5);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v5);
    return sub_1C3F6BD4C((uint64_t)v13);
  }
  return result;
}

uint64_t sub_1C4460A18(uint64_t *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 264);
  uint64_t v5 = sub_1C4497B38();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v18 - v8;
  if (v1 != a1)
  {
    uint64_t v10 = swift_dynamicCastClass();
    if (v10)
    {
      uint64_t v11 = v10 + *(void *)(*(void *)v10 + 280);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v11, v5);
      uint64_t v12 = *(void *)(v4 - 8);
      uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
      if (v13((uint64_t)v9, 1, v4) == 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v14 = (uint64_t)v1 + *(void *)(*v1 + 280);
        swift_beginAccess();
        if (v13(v14, 1, v4) != 1)
        {
          uint64_t v15 = *(void *)(*(void *)(v3 + 272) + 8);
          uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 8);
          swift_retain();
          v16(v9, v4, v15);
          swift_endAccess();
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v4);
        }
      }
      __break(1u);
    }
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    sub_1C4497D28();
    swift_bridgeObjectRelease();
    v18[1] = 0xD00000000000001BLL;
    id v18[2] = 0x80000001C44B5D20;
    sub_1C44986E8();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1C4497268();
    (*(void (**)(void *__return_ptr, uint64_t))(*a1 + 88))(v19, v17);
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    sub_1C44986E8();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C4497268();
    uint64_t result = sub_1C4497F58();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C4460D98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 264);
  uint64_t v46 = sub_1C4497B38();
  uint64_t v9 = *(void *)(v46 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v46);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v43 = *(void *)(*(void *)(v6 + 272) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1C4497B38();
  uint64_t result = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v38 - v18;
  if (v3 == a1)
  {
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
    return result;
  }
  uint64_t v39 = result;
  uint64_t v40 = v19;
  uint64_t v38 = v17;
  uint64_t v41 = a3;
  uint64_t v42 = a1;
  uint64_t v20 = swift_dynamicCastClass();
  if (!v20) {
    goto LABEL_12;
  }
  uint64_t v21 = v20;
  uint64_t v22 = (uint64_t)v3 + *(void *)(v7 + 280);
  swift_beginAccess();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v24 = v46;
  v23(v14, v22, v46);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v14, 1, v8) == 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v27 = v21 + *(void *)(*(void *)v21 + 280);
  swift_beginAccess();
  v23(v12, v27, v24);
  if (v26(v12, 1, v8) == 1)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    v49[0] = 0;
    v49[1] = 0xE000000000000000;
    sub_1C4497D28();
    swift_bridgeObjectRelease();
    unint64_t v47 = 0xD00000000000001DLL;
    unint64_t v48 = 0x80000001C44B5D00;
    sub_1C44986E8();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_1C4497268();
    (*(void (**)(void *__return_ptr, uint64_t))(*v42 + 88))(v49, v37);
    __swift_project_boxed_opaque_existential_1(v49, v49[3]);
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    sub_1C44986E8();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C4497268();
    uint64_t result = sub_1C4497F58();
    __break(1u);
    return result;
  }
  uint64_t v28 = v43;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 40);
  swift_retain();
  uint64_t v30 = v40;
  v29(v12, v45, v8, v28);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v25 + 8);
  v31(v12, v8);
  v31(v14, v8);
  uint64_t v32 = AssociatedTypeWitness;
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, AssociatedTypeWitness) == 1)
  {
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v30, v39);
    uint64_t v34 = v41;
    *(_OWORD *)uint64_t v41 = 0u;
    *((_OWORD *)v34 + 1) = 0u;
  }
  else
  {
    uint64_t v35 = v41;
    v41[3] = v32;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
    (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(boxed_opaque_existential_1, v30, v32);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C44612E8(uint64_t *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 264);
  uint64_t v5 = sub_1C4497B38();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v23 - v10;
  if (v1 == a1)
  {
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v24 = v3;
    uint64_t v14 = (uint64_t)v1 + *(void *)(v3 + 280);
    swift_beginAccess();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v15(v11, v14, v5);
    uint64_t v16 = *(void *)(v4 - 8);
    uint64_t v25 = v5;
    a1 = (uint64_t *)(v16 + 48);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v11, 1, v4) == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = v13 + *(void *)(*(void *)v13 + 280);
      swift_beginAccess();
      v15(v9, v18, v25);
      if (v17(v9, 1, v4) != 1)
      {
        char v19 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v24 + 272) + 72))(v9, v4);
        uint64_t v20 = *(void (**)(char *, uint64_t))(v16 + 8);
        v20(v9, v4);
        v20(v11, v4);
        return v19 & 1;
      }
    }
    __break(1u);
  }
  v28[0] = 0;
  v28[1] = 0xE000000000000000;
  sub_1C4497D28();
  swift_bridgeObjectRelease();
  unint64_t v26 = 0xD00000000000001DLL;
  unint64_t v27 = 0x80000001C44B5D00;
  sub_1C44986E8();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1C4497268();
  (*(void (**)(void *__return_ptr, uint64_t))(*a1 + 88))(v28, v22);
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  sub_1C44986E8();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  uint64_t result = sub_1C4497F58();
  __break(1u);
  return result;
}

uint64_t sub_1C44616B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 264);
  uint64_t v7 = sub_1C4497B38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v37 = *(void *)(v4 + 272);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_1C4497B38();
  uint64_t v35 = *(void *)(v14 - 8);
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v38 = (char *)&v34 - v15;
  uint64_t v41 = a1;
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16) {
    goto LABEL_10;
  }
  uint64_t v17 = v16;
  uint64_t v18 = (uint64_t)v2 + *(void *)(v5 + 280);
  swift_beginAccess();
  char v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v42 = v7;
  v19(v13, v18, v7);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v13, 1, v6) == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v22 = v17 + *(void *)(*(void *)v17 + 280);
  swift_beginAccess();
  v19(v11, v22, v42);
  if (v21(v11, 1, v6) == 1)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    v45[0] = 0;
    v45[1] = 0xE000000000000000;
    sub_1C4497D28();
    swift_bridgeObjectRelease();
    unint64_t v43 = 0xD00000000000001DLL;
    unint64_t v44 = 0x80000001C44B5D00;
    sub_1C44986E8();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_1C4497268();
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v41 + 88))(v45, v33);
    __swift_project_boxed_opaque_existential_1(v45, v45[3]);
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    sub_1C44986E8();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C4497268();
    uint64_t result = sub_1C4497F58();
    __break(1u);
    return result;
  }
  uint64_t v23 = v37;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 56);
  swift_retain();
  uint64_t v25 = v38;
  v24(v11, v6, v23);
  unint64_t v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  v26(v11, v6);
  v26(v13, v6);
  uint64_t v27 = AssociatedTypeWitness;
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v25, 1, AssociatedTypeWitness) == 1)
  {
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v25, v36);
    uint64_t v30 = v40;
    *(_OWORD *)uint64_t v40 = 0u;
    *((_OWORD *)v30 + 1) = 0u;
  }
  else
  {
    uint64_t v31 = v40;
    v40[3] = v27;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
    (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 32))(boxed_opaque_existential_1, v25, v27);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C4461BE4(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 272);
  uint64_t v4 = *(void *)(*(void *)v1 + 264);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1C3F970C4(a1, (uint64_t)&v13, (uint64_t *)&unk_1EA39AE20);
  if (!v14) {
    return sub_1C3F962E0((uint64_t)&v13, (uint64_t *)&unk_1EA39AE20);
  }
  sub_1C3FF2864(&v13, v15);
  sub_1C3F5E790((uint64_t)v15, (uint64_t)&v13);
  swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 0, 1, AssociatedTypeWitness);
  uint64_t v10 = v1 + *(void *)(*(void *)v1 + 280);
  swift_beginAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v10, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 64))(v9, v4, v3);
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_1C4461E40(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)v1 + *(void *)(*v1 + 280);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 264);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + 272) + 16) + 64))(a1, v6);
    return swift_endAccess();
  }
  return result;
}

uint64_t *sub_1C4461F54()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 264);
  uint64_t v3 = sub_1C4497B38();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (uint64_t)v0 + *(void *)(v1 + 280);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t result = (uint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v6, 1, v2);
  if (result != 1) {
    return sub_1C3F6BD4C((uint64_t)v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C44620DC@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 264);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v9 = *(void *)(*(void *)(*(void *)(v8 + 272) + 16) + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  uint64_t v11 = swift_retain();
  uint64_t result = v10(v11, v5, v9);
  if (!v3) {
    return sub_1C3F6BC4C((uint64_t)v7, v5, a2);
  }
  return result;
}

uint64_t sub_1C44621D0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 264);
  uint64_t v4 = sub_1C4497B38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = (uint64_t)v0 + *(void *)(v1 + 280);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)(v2 + 272) + 16) + 8) + 32))(v3);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_1C44623AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 264);
  uint64_t v4 = sub_1C4497B38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = (uint64_t)v0 + *(void *)(v1 + 280);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)(v2 + 272) + 16) + 8) + 40))(v3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v3);
    return v11;
  }
  return result;
}

uint64_t sub_1C4462588@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 264);
  uint64_t v60 = sub_1C4497B38();
  uint64_t v9 = *(void *)(v60 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v60);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = *(void *)(v6 + 272);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_1C4497B38();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v58 = (char *)&v47 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  if (v3 == a2)
  {
    uint64_t result = 0;
LABEL_10:
    *a3 = result;
    return result;
  }
  uint64_t v56 = a3;
  uint64_t v57 = v12;
  unint64_t v48 = (char *)&v47 - v22;
  uint64_t v49 = v24;
  uint64_t v51 = v21;
  uint64_t v52 = v25;
  uint64_t v50 = v23;
  uint64_t v53 = AssociatedTypeWitness;
  uint64_t v54 = v15;
  uint64_t v55 = a2;
  uint64_t v26 = swift_dynamicCastClass();
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = (uint64_t)v3 + *(void *)(v7 + 280);
    swift_beginAccess();
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v30 = v60;
    v29(v14, v28, v60);
    uint64_t v31 = *(void *)(v8 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    if (v32(v14, 1, v8) == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v33 = v27 + *(void *)(*(void *)v27 + 280);
      swift_beginAccess();
      uint64_t v34 = v57;
      v29(v57, v33, v30);
      uint64_t v35 = v34;
      if (v32(v34, 1, v8) != 1)
      {
        uint64_t v36 = v54;
        uint64_t v37 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v54 + 80);
        swift_retain();
        uint64_t v38 = v58;
        v37(v59, v35, v8, v36);
        swift_release();
        uint64_t v39 = *(void (**)(char *, uint64_t))(v31 + 8);
        v39(v35, v8);
        v39(v14, v8);
        uint64_t v41 = v52;
        uint64_t v40 = v53;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v38, 1, v53) == 1)
        {
          (*(void (**)(char *, uint64_t))(v49 + 8))(v38, v51);
          uint64_t result = 0;
        }
        else
        {
          unint64_t v43 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
          unint64_t v44 = v48;
          v43(v48, v38, v40);
          type metadata accessor for AnyCRDT.MergeableDeltaBoxHelper();
          uint64_t v45 = v50;
          v43((char *)v50, v44, v40);
          swift_allocObject();
          uint64_t result = sub_1C4464008(v45);
        }
        a3 = v56;
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  v63[0] = 0;
  v63[1] = 0xE000000000000000;
  sub_1C4497D28();
  swift_bridgeObjectRelease();
  unint64_t v61 = 0xD00000000000001DLL;
  unint64_t v62 = 0x80000001C44B5D00;
  sub_1C44986E8();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_1C4497268();
  (*(void (**)(void *__return_ptr, uint64_t))(*v55 + 88))(v63, v46);
  __swift_project_boxed_opaque_existential_1(v63, v63[3]);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  sub_1C44986E8();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  uint64_t result = sub_1C4497F58();
  __break(1u);
  return result;
}

uint64_t sub_1C4462B8C(uint64_t a1)
{
  return sub_1C4464008(a1);
}

uint64_t sub_1C4462BC8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 264);
  uint64_t v6 = sub_1C4497B38();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v26 = *(void *)(v4 + 272);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C4497B38();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  uint64_t v18 = (char *)&v25 - v17;
  (*(void (**)(void *__return_ptr, uint64_t))(**(void **)a1 + 80))(v29, v16);
  int v19 = swift_dynamicCast();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (!v19)
  {
    v20(v14, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    char v24 = 0;
    return v24 & 1;
  }
  v20(v14, 0, 1, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v14, AssociatedTypeWitness);
  uint64_t v21 = (uint64_t)v2 + *(void *)(*v2 + 280);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v8, v21, v28);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v8, 1, v5);
  if (result != 1)
  {
    char v24 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v18, v5);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    return v24 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4462F84(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v2 + 272);
  uint64_t v5 = *(void *)(*(void *)v2 + 264);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v9);
  uint64_t v15 = (char *)v21 - v14;
  (*(void (**)(void *__return_ptr, uint64_t))(**(void **)a1 + 80))(v21, v13);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (!v16)
  {
    v17(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    char v20 = 0;
    return v20 & 1;
  }
  v17(v11, 0, 1, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, AssociatedTypeWitness);
  uint64_t v18 = v2 + *(void *)(*(void *)v2 + 280);
  swift_beginAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v18, 1, v5);
  if (result != 1)
  {
    char v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 96))(v15, v5, v4);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, AssociatedTypeWitness);
    return v20 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4463284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v13 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v2 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  uint64_t v9 = swift_retain();
  uint64_t v10 = v14;
  uint64_t result = v8(v9, AssociatedTypeWitness, v7);
  if (!v10)
  {
    type metadata accessor for AnyCRDT.MergeableDeltaBoxHelper();
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v4, v6, AssociatedTypeWitness);
    swift_allocObject();
    uint64_t result = sub_1C4464008((uint64_t)v4);
    *uint64_t v13 = result;
  }
  return result;
}

uint64_t sub_1C4463464()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 280);
  uint64_t v2 = sub_1C4497B38();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

uint64_t AnyCRDT.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v7 = a1;
  uint64_t v5 = *(uint64_t (**)(unint64_t *))(*(void *)v4 + 80);
  swift_bridgeObjectRetain();
  *a2 = v5(&v7);
  return swift_bridgeObjectRelease();
}

uint64_t AnyCRDT.observableDifference(from:with:)(void *a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 104))(*a1);
}

uint64_t AnyCRDT.hasDelta(from:)(void *a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 112))(*a1) & 1;
}

Swift::Bool __swiftcall AnyCRDT.needToFinalizeTimestamps()()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))() & 1;
}

uint64_t AnyCRDT.minEncodingVersion.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

uint64_t sub_1C4463784(void *a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 128))(*a1);
}

uint64_t sub_1C44637CC(uint64_t a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *(void *)uint64_t v1 = (*(uint64_t (**)(void))(**(void **)v1 + 160))();
    swift_release();
  }
  return (*(uint64_t (**)(uint64_t))(**(void **)v1 + 136))(a1);
}

uint64_t sub_1C4463868(void *a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 112))(*a1) & 1;
}

uint64_t sub_1C44638B4(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(**(void **)v2 + 208))(a1, *a2);
}

uint64_t sub_1C44638FC(uint64_t *a1)
{
  uint64_t v2 = *v1;
  uint64_t v4 = *a1;
  return (*(uint64_t (**)(uint64_t *))(*(void *)v2 + 216))(&v4) & 1;
}

uint64_t sub_1C4463958(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *uint64_t v1 = (*(uint64_t (**)(void))(*(void *)*v1 + 160))();
    swift_release();
  }
  uint64_t v3 = *v1;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(uint64_t *))(*(void *)v3 + 224))(&v5) & 1;
}

uint64_t sub_1C4463A04()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

BOOL sub_1C4463A48(void **a1)
{
  return **v1 == **a1;
}

uint64_t sub_1C4463AA8()
{
  (*(void (**)(void *__return_ptr))(**(void **)v0 + 88))(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39DE70);
  swift_dynamicCast();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C4497068();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1C4463B74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 80))();
  *a1 = result;
  return result;
}

uint64_t sub_1C4463BC0@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v7 = a1;
  uint64_t v5 = *(uint64_t (**)(unint64_t *))(*(void *)v4 + 80);
  swift_bridgeObjectRetain();
  *a2 = v5(&v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4463C64(void *a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 104))(*a1);
}

uint64_t sub_1C4463CAC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_1C4463CF0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))() & 1;
}

uint64_t sub_1C4463D40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return AnyCRDT.init(from:)(a1, a2);
}

uint64_t sub_1C4463D58()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_1C4463D9C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

uint64_t sub_1C4463DE0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 200))();
}

void sub_1C4463E24()
{
}

void sub_1C4463E80()
{
}

void sub_1C4463EDC()
{
}

uint64_t sub_1C4463F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 136);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  a1[3] = AssociatedTypeWitness;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(boxed_opaque_existential_1, v3, AssociatedTypeWitness);
}

uint64_t sub_1C4464008(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 136);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v3, a1, AssociatedTypeWitness);
  return v1;
}

uint64_t sub_1C44640C4(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v4 = swift_checkMetadataState();
  return v3(a1, v4, v2);
}

uint64_t sub_1C44641C0(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  uint64_t v4 = swift_checkMetadataState();
  return v3(a1, v4, AssociatedConformanceWitness);
}

uint64_t sub_1C44642B4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(v1, AssociatedTypeWitness);
}

uint64_t sub_1C4464368()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_1C4464414()
{
  sub_1C4464368();
  return swift_deallocClassInstance();
}

void AnyCRDT.MergeableDelta.init(from:)()
{
}

void AnyCRDT.MergeableDelta.merge(delta:)()
{
}

void AnyCRDT.MergeableDelta.canMerge(delta:)()
{
}

void sub_1C446454C()
{
}

void sub_1C4464598()
{
}

uint64_t sub_1C44645E4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))();
}

void sub_1C4464628()
{
}

uint64_t sub_1C4464674()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

void sub_1C44646B8()
{
}

void sub_1C4464714()
{
}

void sub_1C4464770()
{
}

void sub_1C44647CC()
{
}

void sub_1C4464828()
{
}

void sub_1C4464884()
{
}

void sub_1C44648E0()
{
}

void sub_1C446493C()
{
}

void sub_1C4464998()
{
}

void sub_1C44649F4()
{
}

uint64_t sub_1C4464A50()
{
  return 0x6C61565243796E41;
}

uint64_t sub_1C4464A6C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 200) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 224), a1);
  return v2;
}

uint64_t sub_1C4464B00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 224);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 200);
  a1[3] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v4, v5);
}

uint64_t sub_1C4464BB0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 200);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (uint64_t)v1 + *(void *)(v2 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_1C4497088();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C4464CF8(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 200);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v18[-v8];
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (uint64_t)v1 + *(void *)(v2 + 224);
    swift_beginAccess();
    uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
    v13(v9, v12, v3);
    uint64_t v14 = v11 + *(void *)(*(void *)v11 + 224);
    swift_beginAccess();
    v13(v7, v14, v3);
    char v15 = sub_1C4497178();
    int v16 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
    v16(v7, v3);
    v16(v9, v3);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C4464EF0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 200);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v11 = (uint64_t)v1 + *(void *)(v3 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v11, v4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 208) + 8) + 24))(a1, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return sub_1C4464A6C((uint64_t)v10);
}

uint64_t sub_1C44650B0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 200);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = (uint64_t)v1 + *(void *)(v3 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 208) + 8) + 48))(a1, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C446520C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 200);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = (uint64_t)v1 + *(void *)(v2 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  char v8 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + 208) + 8) + 56))(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8 & 1;
}

uint64_t sub_1C4465360(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)(v3 + 208) + 8) + 64))(a1, *(void *)(v3 + 200));
  return swift_endAccess();
}

uint64_t sub_1C4465410(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 200);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v7 = v1 + *(void *)(v6 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  return sub_1C4464A6C((uint64_t)v5);
}

uint64_t sub_1C4465540(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 200);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = (uint64_t)v1 + *(void *)(v3 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)(v3 + 208) + 8) + 8) + 16))(a1, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C44656B0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 200);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (uint64_t)v1 + *(void *)(v2 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)(v2 + 208) + 8) + 8) + 32))(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C4465810()
{
  return sub_1C4465860(&qword_1EBBBBF40, MEMORY[0x1E4FBBDF8], (uint64_t *)&unk_1EA39D498);
}

uint64_t sub_1C4465838()
{
  return sub_1C4465860(&qword_1EA39DE98, MEMORY[0x1E4FBBF30], qword_1EA39DEA0);
}

uint64_t sub_1C4465860(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 200);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v12 = v3 + *(void *)(v11 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  if (swift_dynamicCast())
  {
    uint64_t v13 = *((void *)&v19 + 1);
    uint64_t v14 = v20;
    __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
    uint64_t v15 = a2(v13, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  }
  else
  {
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    sub_1C3F962E0((uint64_t)&v18, a3);
    return 0x6C61565243796E41;
  }
  return v15;
}

uint64_t sub_1C4465A04()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 200) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 224));
}

uint64_t sub_1C4465A5C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 200) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 224));
  return swift_deallocClassInstance();
}

uint64_t AnyCRValue.hash(into:)()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88))();
}

uint64_t static AnyCRValue.== infix(_:_:)(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 96))(*a2) & 1;
}

uint64_t AnyCRValue.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v7 = a1;
  uint64_t v5 = *(uint64_t (**)(unint64_t *))(*(void *)v4 + 104);
  swift_bridgeObjectRetain();
  *a2 = v5(&v7);
  return swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall AnyCRValue.needToFinalizeTimestamps()()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))() & 1;
}

uint64_t AnyCRValue.finalizeTimestamps(_:)(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)v1 + 128);
  uint64_t v4 = swift_retain();
  LOBYTE(v3) = v3(v4);
  uint64_t result = swift_release();
  if (v3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      *(void *)uint64_t v1 = (*(uint64_t (**)(void))(**(void **)v1 + 144))();
      swift_release();
    }
    return (*(uint64_t (**)(uint64_t))(**(void **)v1 + 136))(a1);
  }
  return result;
}

void sub_1C4465D64(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char v81 = a2;
  uint64_t v95 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  char v86 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  unint64_t v85 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v93 = (uint64_t)&v76 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v83 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v91 = (uint64_t)&v76 - v11;
  uint64_t v97 = type metadata accessor for Proto_Reference(0);
  uint64_t v12 = MEMORY[0x1F4188790](v97);
  uint64_t v84 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v92 = (uint64_t)&v76 - v14;
  uint64_t v15 = type metadata accessor for Proto_Value(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v89 = (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v90 = (uint64_t)&v76 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v88 = (uint64_t)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v76 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v76 - v26;
  uint64_t v28 = a1;
  uint64_t v29 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v29, (uint64_t)v27, &qword_1EBBC0540);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v31 = v16 + 48;
  uint64_t v30 = v32;
  unsigned int v33 = v32(v27, 1, v15);
  sub_1C3F962E0((uint64_t)v27, &qword_1EBBC0540);
  if (v33 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v34 = 0xD000000000000017;
    *(void *)(v34 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v34 + 16) = 0;
    swift_willThrow();
    swift_release();
    return;
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v28;
  sub_1C3F970C4(v29, (uint64_t)v25, &qword_1EBBC0540);
  unsigned int v35 = v30(v25, 1, v15);
  uint64_t v79 = v31;
  if (v35 == 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v36 = v90;
  sub_1C446A41C((uint64_t)v25, v90, type metadata accessor for Proto_Value);
  uint64_t v37 = *(void *)(v36 + *(int *)(v15 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v38 = v37;
  uint64_t v39 = v91;
  sub_1C3F970C4(v38, v91, &qword_1EBBBF8A0);
  uint64_t v40 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48);
  int v41 = v77(v39, 1, v40);
  uint64_t v80 = v28;
  uint64_t v78 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v30;
  if (v41 == 1)
  {
    swift_retain();
    sub_1C3F962E0(v39, &qword_1EBBBF8A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      uint64_t v42 = v15;
      uint64_t v43 = v92;
      sub_1C446A41C(v39, v92, type metadata accessor for Proto_Reference);
      goto LABEL_12;
    }
    swift_retain();
    sub_1C3F924DC(v39, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  uint64_t v42 = v15;
  uint64_t v43 = v92;
  sub_1C4496888();
  uint64_t v44 = *(int *)(v97 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v43 + v44) = qword_1EBBBC808;
LABEL_12:
  swift_retain();
  sub_1C3F924DC(v36, type metadata accessor for Proto_Value);
  uint64_t v45 = *(void *)(v43 + *(int *)(v97 + 20))
      + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  uint64_t v46 = v93;
  sub_1C3F970C4(v45, v93, &qword_1EBBC0560);
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  LODWORD(v45) = v47(v46, 1, v95);
  sub_1C3F962E0(v46, &qword_1EBBC0560);
  sub_1C3F924DC(v43, type metadata accessor for Proto_Reference);
  if (v45 == 1)
  {
    sub_1C3FE3FF0();
    unint64_t v48 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v49 = xmmword_1C44AC140;
    *(unsigned char *)(v49 + 16) = 0;
    swift_willThrow();
    uint64_t v50 = v80;
LABEL_27:
    uint64_t v70 = swift_retain();
    CRKeyPath.init(from:)(v70, v96);
    uint64_t v69 = 0;

    goto LABEL_28;
  }
  uint64_t v51 = *(void *)(inited + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  uint64_t v52 = v51;
  uint64_t v53 = v88;
  sub_1C3F970C4(v52, v88, &qword_1EBBC0540);
  if (v78(v53, 1, v42) == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v54 = v53;
  uint64_t v55 = v89;
  sub_1C446A41C(v54, v89, type metadata accessor for Proto_Value);
  uint64_t v56 = *(void *)(v55 + *(int *)(v42 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v57 = v56;
  uint64_t v58 = v83;
  sub_1C3F970C4(v57, v83, &qword_1EBBBF8A0);
  int v59 = v77(v58, 1, v40);
  uint64_t v60 = (uint64_t)v84;
  if (v59 == 1)
  {
    sub_1C3F962E0(v58, &qword_1EBBBF8A0);
    unint64_t v61 = v86;
    uint64_t v62 = v95;
    uint64_t v63 = (uint64_t)v85;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v63 = (uint64_t)v85;
    if (EnumCaseMultiPayload == 7)
    {
      sub_1C446A41C(v58, v60, type metadata accessor for Proto_Reference);
      unint64_t v61 = v86;
      uint64_t v62 = v95;
      uint64_t v65 = &qword_1EBBBC000;
      goto LABEL_23;
    }
    sub_1C3F924DC(v58, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    unint64_t v61 = v86;
    uint64_t v62 = v95;
  }
  uint64_t v65 = &qword_1EBBBC000;
  sub_1C4496888();
  uint64_t v66 = *(int *)(v97 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v60 + v66) = qword_1EBBBC808;
  swift_retain();
LABEL_23:
  sub_1C3F924DC(v89, type metadata accessor for Proto_Value);
  uint64_t v67 = *(void *)(v60 + *(int *)(v97 + 20)) + v65[261];
  swift_beginAccess();
  sub_1C3F970C4(v67, v63, &qword_1EBBC0560);
  if (v47(v63, 1, v62) == 1)
  {
    *unint64_t v61 = MEMORY[0x1E4FBC860];
    v61[1] = sub_1C4496868();
    v61[2] = v68;
    sub_1C4496888();
    sub_1C3F962E0(v63, &qword_1EBBC0560);
  }
  else
  {
    sub_1C446A41C(v63, (uint64_t)v61, type metadata accessor for Proto_KeyPath);
  }
  uint64_t v50 = v80;
  unint64_t v48 = v87;
  sub_1C3F924DC(v60, type metadata accessor for Proto_Reference);
  swift_retain();
  sub_1C3F766DC((uint64_t)v61, v96);
  uint64_t v69 = v48;
  if (v48) {
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v71 = v96[0];
  unint64_t v72 = v96[1];
  uint64_t v73 = *(void *)(v50 + 16);
  if (!v73)
  {
LABEL_34:
    __break(1u);
    return;
  }
  uint64_t v74 = *(void (**)(ValueMetadata *, uint64_t *, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **))(*(void *)v73 + 176);
  swift_retain();
  sub_1C3F7E324(v71, v72);
  v74(&type metadata for AnyCRDT, v96, v50, 1, &type metadata for AnyCRDT, &protocol witness table for AnyCRDT);
  if (v69)
  {
    sub_1C3F7E2CC(v71, v72);
    swift_release();
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v71, v72);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v71, v72);
    uint64_t v75 = v81;
    *char v81 = v71;
    v75[1] = v72;
  }
}

uint64_t AnyCRValue.minEncodingVersion.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t AnyCRValue.description.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t AnyCRValue.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t AnyCRValue.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1C44985F8();
  (*(void (**)(unsigned char *))(*(void *)v1 + 88))(v3);
  return sub_1C4498628();
}

uint64_t sub_1C4466A80()
{
  uint64_t v1 = *v0;
  sub_1C44985F8();
  (*(void (**)(unsigned char *))(*(void *)v1 + 88))(v3);
  return sub_1C4498628();
}

uint64_t sub_1C4466AE4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88))();
}

uint64_t sub_1C4466B28()
{
  uint64_t v1 = *v0;
  sub_1C44985F8();
  (*(void (**)(unsigned char *))(*(void *)v1 + 88))(v3);
  return sub_1C4498628();
}

uint64_t sub_1C4466B88()
{
  (*(void (**)(void *__return_ptr))(**(void **)v0 + 80))(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39DE70);
  swift_dynamicCast();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C4497068();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1C4466C54()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_1C4466C98()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t sub_1C4466CDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 104))();
  *a1 = result;
  return result;
}

uint64_t sub_1C4466D28@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v7 = a1;
  uint64_t v5 = *(uint64_t (**)(unint64_t *))(*(void *)v4 + 104);
  swift_bridgeObjectRetain();
  *a2 = v5(&v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4466DCC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_1C4466E10()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))() & 1;
}

uint64_t sub_1C4466E58(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)v1 + 128);
  uint64_t v4 = swift_retain();
  LOBYTE(v3) = v3(v4);
  uint64_t result = swift_release();
  if (v3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      *(void *)uint64_t v1 = (*(uint64_t (**)(void))(**(void **)v1 + 144))();
      swift_release();
    }
    return (*(uint64_t (**)(uint64_t))(**(void **)v1 + 136))(a1);
  }
  return result;
}

uint64_t sub_1C4466F38(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 96))(*a2) & 1;
}

uint64_t sub_1C4466F84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return AnyCRValue.init(from:)(a1, a2);
}

uint64_t sub_1C4466F9C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t sub_1C4466FE0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

void *sub_1C4467024(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v54 = (uint64_t)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for Proto_Version(0);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v47 = (void *)((char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (void *)((char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1C4496678();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  uint64_t v50 = a1;
  uint64_t v48 = v19;
  uint64_t v20 = *(void *)(a1 + v19);
  swift_beginAccess();
  uint64_t v21 = *(void *)(a2 + 24);
  unint64_t v22 = *(void *)(v21 + 16);
  if (v22 && (unint64_t v23 = *(void *)(v20 + 16), v23 < v22))
  {
    uint64_t v46 = v4;
    v43[1] = a4;
    uint64_t v44 = a3;
    uint64_t v45 = a2;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, v21+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v23, v15);
    type metadata accessor for ReplicaState();
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v24 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
    uint64_t v26 = type metadata accessor for Replica();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    v27(v25, 1, 1, v26);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v18, v15);
    *(void *)(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
    *(void *)(v24 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
    v27((uint64_t)v14, 1, 1, v26);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v14, v25, &qword_1EBBC0FA0);
    swift_endAccess();
    uint64_t v14 = *(void **)(v50 + v48);
    uint64_t v28 = (char *)v14
        + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    uint64_t v29 = (uint64_t)v28;
    uint64_t v30 = v54;
    sub_1C3F970C4(v29, v54, &qword_1EBBC0578);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v30, 1, v51) == 1)
    {
      uint64_t v31 = MEMORY[0x1E4FBC860];
      uint64_t v32 = v47;
      *uint64_t v47 = MEMORY[0x1E4FBC860];
      v32[1] = v31;
      sub_1C4496888();
      sub_1C3F962E0(v30, &qword_1EBBC0578);
    }
    else
    {
      uint64_t v32 = v47;
      sub_1C446A41C(v30, (uint64_t)v47, type metadata accessor for Proto_Version);
    }
    uint64_t v34 = v45;
    swift_retain();
    uint64_t v35 = v46;
    sub_1C3F8F9D0(v32, v34, &v53);
    if (v35)
    {
      swift_release();
    }
    else
    {
      long long v36 = v53;
      swift_beginAccess();
      swift_retain();
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v38 = sub_1C4469DDC(v37, v34);
      swift_bridgeObjectRelease();
      swift_release();
      if (v44) {
        v44(v38);
      }
      uint64_t v39 = MEMORY[0x1E4FBC868];
      if (*(void *)(v38 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBD0);
        uint64_t v40 = sub_1C4497FD8();
      }
      else
      {
        uint64_t v40 = MEMORY[0x1E4FBC868];
      }
      v52[0] = v40;
      sub_1C44687BC(v38, 1, v52);
      uint64_t v41 = v52[0];
      if (qword_1EBBC10F0 != -1) {
        swift_once();
      }
      swift_retain();
      sub_1C4497A58();
      swift_release();
      uint64_t v54 = v52[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3A13D8);
      uint64_t v14 = (void *)swift_allocObject();
      v14[3] = v39;
      v14[4] = v39;
      void v14[5] = v39;
      v14[6] = 0;
      v14[2] = v24;
      swift_beginAccess();
      *(_OWORD *)(v14 + 3) = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      void v14[5] = v41;
      swift_bridgeObjectRelease();
      v14[6] = v54;
    }
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(_OWORD *)uint64_t v33 = xmmword_1C44A0890;
    *(unsigned char *)(v33 + 16) = 0;
    swift_willThrow();
  }
  return v14;
}

__n128 sub_1C4467708@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  long long v36 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v38 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Proto_Version(0);
  uint64_t v37 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v39 = (__n128 **)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Proto_CRDT(0);
  uint64_t v40 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v41 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Value(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_Set.Element(0) + 20));
  uint64_t v20 = v43 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v15, &qword_1EBBC0540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1C4496888();
    uint64_t v21 = *(int *)(v16 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)&v19[v21] = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0((uint64_t)v15, &qword_1EBBC0540);
  }
  else
  {
    sub_1C446A41C((uint64_t)v15, (uint64_t)v19, type metadata accessor for Proto_Value);
  }
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3F974B0((uint64_t)v19, a2);
  swift_release();
  uint64_t v22 = swift_retain();
  uint64_t v23 = v44;
  AnyCRValue.init(from:)(v22, (uint64_t *)&v47);
  if (v23)
  {
    swift_release();
  }
  else
  {
    uint64_t v24 = v43 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
    swift_beginAccess();
    sub_1C3F970C4(v24, (uint64_t)v10, &qword_1EBBC04F8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v25 = v41;
      sub_1C4496888();
      uint64_t v26 = *(int *)(v11 + 20);
      if (qword_1EBBC0668 != -1) {
        swift_once();
      }
      *(void *)(v25 + v26) = qword_1EBBC0660;
      swift_retain();
      sub_1C3F962E0((uint64_t)v10, &qword_1EBBC04F8);
    }
    else
    {
      uint64_t v25 = v41;
      sub_1C446A41C((uint64_t)v10, v41, type metadata accessor for Proto_CRDT);
    }
    swift_allocObject();
    swift_retain();
    sub_1C3FB9A38(v25, a2);
    swift_release();
    uint64_t v27 = swift_retain();
    AnyCRDT.init(from:)(&v46, v27);
    uint64_t v28 = v42;
    unint64_t v29 = v46;
    uint64_t v30 = v43
        + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
    swift_beginAccess();
    uint64_t v31 = v38;
    sub_1C3F970C4(v30, v38, &qword_1EBBC0578);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v31, 1, v28) == 1)
    {
      uint64_t v32 = MEMORY[0x1E4FBC860];
      uint64_t v33 = v39;
      *uint64_t v39 = MEMORY[0x1E4FBC860];
      v33[1] = v32;
      swift_retain();
      sub_1C4496888();
      sub_1C3F962E0(v31, &qword_1EBBC0578);
    }
    else
    {
      uint64_t v33 = v39;
      sub_1C446A41C(v31, (uint64_t)v39, type metadata accessor for Proto_Version);
      swift_retain();
    }
    swift_retain();
    sub_1C3F8F9D0(v33, a2, &v45);
    swift_release();
    swift_release();
    swift_release();
    __n128 result = v45;
    uint64_t v35 = v36;
    v36->n128_u64[0] = v47;
    v35->n128_u64[1] = v29;
    v35[1] = result;
  }
  return result;
}

void sub_1C4467D9C(void *a1, char a2, void *a3)
{
  uint64_t v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_24;
  }
  uint64_t v8 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v9 = a1[4];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_24;
  }
  uint64_t v10 = (void *)*a3;
  unint64_t v12 = sub_1C4061A7C(v9);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  char v16 = v11;
  if (v10[3] >= v15)
  {
    if (a2)
    {
      if ((v11 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1C406918C();
      if ((v16 & 1) == 0) {
        goto LABEL_13;
      }
    }
LABEL_10:
    sub_1C3FE3FF0();
    uint64_t v19 = (void *)swift_allocError();
    *(void *)uint64_t v20 = 0xD000000000000016;
    *(void *)(v20 + 8) = 0x80000001C44B3A10;
    *(unsigned char *)(v20 + 16) = 0;
    swift_willThrow();
    id v21 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

      return;
    }
    goto LABEL_30;
  }
  sub_1C406458C(v15, a2 & 1);
  unint64_t v17 = sub_1C4061A7C(v9);
  if ((v16 & 1) != (v18 & 1))
  {
LABEL_29:
    sub_1C4498558();
    __break(1u);
LABEL_30:
    sub_1C4497D28();
    sub_1C4497268();
    sub_1C4497E88();
    sub_1C4497268();
    sub_1C4497F58();
    __break(1u);
    return;
  }
  unint64_t v12 = v17;
  if (v16) {
    goto LABEL_10;
  }
LABEL_13:
  uint64_t v22 = (void *)*a3;
  *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
  *(void *)(v22[6] + 8 * v12) = v9;
  uint64_t v23 = (void *)(v22[7] + 16 * v12);
  *uint64_t v23 = v8;
  v23[1] = v7;
  uint64_t v24 = v22[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v22[2] = v26;
  if (v6 != 1)
  {
    uint64_t v27 = a1 + 9;
    unint64_t v28 = 1;
    while (v28 < a1[2])
    {
      uint64_t v30 = *(v27 - 1);
      uint64_t v29 = *v27;
      uint64_t v31 = *(v27 - 2);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v31) {
        goto LABEL_24;
      }
      uint64_t v32 = (void *)*a3;
      unint64_t v33 = sub_1C4061A7C(v31);
      uint64_t v35 = v32[2];
      BOOL v36 = (v34 & 1) == 0;
      BOOL v25 = __OFADD__(v35, v36);
      uint64_t v37 = v35 + v36;
      if (v25) {
        goto LABEL_26;
      }
      char v38 = v34;
      if (v32[3] < v37)
      {
        sub_1C406458C(v37, 1);
        unint64_t v33 = sub_1C4061A7C(v31);
        if ((v38 & 1) != (v39 & 1)) {
          goto LABEL_29;
        }
      }
      if (v38) {
        goto LABEL_10;
      }
      uint64_t v40 = (void *)*a3;
      *(void *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      *(void *)(v40[6] + 8 * v33) = v31;
      uint64_t v41 = (void *)(v40[7] + 16 * v33);
      *uint64_t v41 = v30;
      v41[1] = v29;
      uint64_t v42 = v40[2];
      BOOL v25 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (v25) {
        goto LABEL_27;
      }
      ++v28;
      v40[2] = v43;
      v27 += 3;
      if (v6 == v28) {
        goto LABEL_24;
      }
    }
    goto LABEL_28;
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
}

void sub_1C4468170(uint64_t a1, int a2, void *a3)
{
  LODWORD(v63) = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC0);
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C4496678();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C160);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v59[1] = v3;
  uint64_t v19 = (uint64_t)&v17[*(int *)(v14 + 48)];
  v59[0] = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = a1 + v59[0];
  uint64_t v65 = *(void *)(v15 + 72);
  uint64_t v61 = a1;
  swift_bridgeObjectRetain();
  sub_1C3F970C4(v20, (uint64_t)v17, &qword_1EA39C160);
  uint64_t v60 = v10;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v69 = v9;
  uint64_t v67 = v10 + 32;
  v68(v12, v17, v9);
  uint64_t v64 = v19;
  uint64_t v66 = v8;
  sub_1C3F961BC(v19, (uint64_t)v8, &qword_1EA39CBC0);
  id v21 = a3;
  uint64_t v22 = *a3;
  unint64_t v24 = sub_1C3FA1598((uint64_t)v12);
  uint64_t v25 = *(void *)(v22 + 16);
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_24;
  }
  char v28 = v23;
  if (*(void *)(v22 + 24) >= v27)
  {
    if (v63)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C4069358();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    char v34 = (void *)*a3;
    *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v35 = v34[6];
    uint64_t v63 = *(void *)(v60 + 72);
    v68((char *)(v35 + v63 * v24), v12, v69);
    uint64_t v36 = v34[7];
    uint64_t v62 = *(void *)(v62 + 72);
    uint64_t v37 = v36 + v62 * v24;
    uint64_t v38 = (uint64_t)v66;
    sub_1C3F961BC((uint64_t)v66, v37, &qword_1EA39CBC0);
    uint64_t v39 = v34[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v34[2] = v41;
    uint64_t v42 = v18 - 1;
    if (v18 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v43 = v61 + v65 + v59[0];
    uint64_t v44 = &qword_1EA39CBC0;
    while (1)
    {
      sub_1C3F970C4(v43, (uint64_t)v17, &qword_1EA39C160);
      v68(v12, v17, v69);
      __n128 v45 = v44;
      sub_1C3F961BC(v64, v38, v44);
      unint64_t v46 = (void *)*v21;
      unint64_t v48 = sub_1C3FA1598((uint64_t)v12);
      uint64_t v49 = v46[2];
      BOOL v50 = (v47 & 1) == 0;
      uint64_t v51 = v49 + v50;
      if (__OFADD__(v49, v50)) {
        break;
      }
      char v52 = v47;
      if (v46[3] < v51)
      {
        sub_1C40648B0(v51, 1);
        unint64_t v53 = sub_1C3FA1598((uint64_t)v12);
        if ((v52 & 1) != (v54 & 1)) {
          goto LABEL_26;
        }
        unint64_t v48 = v53;
      }
      if (v52) {
        goto LABEL_10;
      }
      uint64_t v55 = (void *)*v21;
      *(void *)(*v21 + 8 * (v48 >> 6) + 64) |= 1 << v48;
      v68((char *)(v55[6] + v63 * v48), v12, v69);
      uint64_t v56 = v55[7] + v62 * v48;
      uint64_t v38 = (uint64_t)v66;
      uint64_t v44 = v45;
      sub_1C3F961BC((uint64_t)v66, v56, v45);
      uint64_t v57 = v55[2];
      BOOL v40 = __OFADD__(v57, 1);
      uint64_t v58 = v57 + 1;
      if (v40) {
        goto LABEL_25;
      }
      void v55[2] = v58;
      v43 += v65;
      if (!--v42) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1C40648B0(v27, v63 & 1);
  unint64_t v29 = sub_1C3FA1598((uint64_t)v12);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    sub_1C3FE3FF0();
    uint64_t v31 = (void *)swift_allocError();
    *(void *)uint64_t v32 = 0xD00000000000001DLL;
    *(void *)(v32 + 8) = 0x80000001C44B2E90;
    *(unsigned char *)(v32 + 16) = 0;
    swift_willThrow();
    id v72 = v31;
    id v33 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C3F962E0((uint64_t)v66, &qword_1EA39CBC0);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v69);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1C4498558();
  __break(1u);
LABEL_27:
  uint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  sub_1C4497D28();
  sub_1C4497268();
  sub_1C4497E88();
  sub_1C4497268();
  sub_1C4497F58();
  __break(1u);
}

void sub_1C44687BC(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v6 = *(void *)(a1 + 56);
    long long v41 = *(_OWORD *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      uint64_t v8 = (void *)*a3;
      unint64_t v10 = sub_1C4061A7C(v7);
      uint64_t v11 = v8[2];
      BOOL v12 = (v9 & 1) == 0;
      uint64_t v13 = v11 + v12;
      if (__OFADD__(v11, v12))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      char v14 = v9;
      if (v8[3] >= v13)
      {
        if (a2)
        {
          if ((v9 & 1) == 0) {
            goto LABEL_14;
          }
        }
        else
        {
          sub_1C40696C8();
          if ((v14 & 1) == 0) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        sub_1C4064DA8(v13, a2 & 1);
        unint64_t v15 = sub_1C4061A7C(v7);
        if ((v14 & 1) != (v16 & 1))
        {
LABEL_30:
          sub_1C4498558();
          __break(1u);
LABEL_31:
          sub_1C4497D28();
          sub_1C4497268();
          sub_1C4497E88();
          sub_1C4497268();
          sub_1C4497F58();
          __break(1u);
          return;
        }
        unint64_t v10 = v15;
        if ((v14 & 1) == 0)
        {
LABEL_14:
          uint64_t v20 = (void *)*a3;
          *(void *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
          *(void *)(v20[6] + 8 * v10) = v7;
          uint64_t v21 = v20[7] + 24 * v10;
          *(_OWORD *)uint64_t v21 = v41;
          *(void *)(v21 + 16) = v6;
          uint64_t v22 = v20[2];
          BOOL v23 = __OFADD__(v22, 1);
          uint64_t v24 = v22 + 1;
          if (v23)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          void v20[2] = v24;
          if (v5 != 1)
          {
            uint64_t v25 = a1 + 64;
            unint64_t v26 = 1;
            while (v26 < *(void *)(a1 + 16))
            {
              uint64_t v27 = *(void *)(v25 + 24);
              long long v42 = *(_OWORD *)(v25 + 8);
              uint64_t v28 = *(void *)v25;
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (!v28) {
                goto LABEL_25;
              }
              unint64_t v29 = (void *)*a3;
              unint64_t v30 = sub_1C4061A7C(v28);
              uint64_t v32 = v29[2];
              BOOL v33 = (v31 & 1) == 0;
              BOOL v23 = __OFADD__(v32, v33);
              uint64_t v34 = v32 + v33;
              if (v23) {
                goto LABEL_28;
              }
              char v35 = v31;
              if (v29[3] < v34)
              {
                sub_1C4064DA8(v34, 1);
                unint64_t v30 = sub_1C4061A7C(v28);
                if ((v35 & 1) != (v36 & 1)) {
                  goto LABEL_30;
                }
              }
              if (v35) {
                goto LABEL_11;
              }
              uint64_t v37 = (void *)*a3;
              *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
              *(void *)(v37[6] + 8 * v30) = v28;
              uint64_t v38 = v37[7] + 24 * v30;
              *(_OWORD *)uint64_t v38 = v42;
              *(void *)(v38 + 16) = v27;
              uint64_t v39 = v37[2];
              BOOL v23 = __OFADD__(v39, 1);
              uint64_t v40 = v39 + 1;
              if (v23) {
                goto LABEL_29;
              }
              ++v26;
              _OWORD v37[2] = v40;
              v25 += 32;
              if (v5 == v26) {
                goto LABEL_25;
              }
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      sub_1C3FE3FF0();
      unint64_t v17 = (void *)swift_allocError();
      *(void *)uint64_t v18 = 0xD00000000000001DLL;
      *(void *)(v18 + 8) = 0x80000001C44B2E90;
      *(unsigned char *)(v18 + 16) = 0;
      swift_willThrow();
      id v19 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

void sub_1C4468C10(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C130);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (uint64_t *)((char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v55 = a1;
  uint64_t v56 = v8;
  char v17 = a2;
  uint64_t v54 = v3;
  uint64_t v18 = (uint64_t)v15 + *(int *)(v12 + 48);
  unint64_t v53 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = a1 + v53;
  uint64_t v58 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  sub_1C3F970C4(v19, (uint64_t)v15, &qword_1EA39C130);
  uint64_t v62 = *v15;
  uint64_t v20 = v62;
  uint64_t v57 = v18;
  sub_1C3F961BC(v18, (uint64_t)v10, &qword_1EA39CBC0);
  uint64_t v21 = (void *)*a3;
  unint64_t v23 = sub_1C4061A7C(v20);
  uint64_t v24 = v21[2];
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_23;
  }
  char v27 = v22;
  if (v21[3] >= v26)
  {
    if (v17)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C40698B0();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    BOOL v33 = (void *)*a3;
    *(void *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    *(void *)(v33[6] + 8 * v23) = v20;
    uint64_t v34 = v33[7];
    uint64_t v56 = *(void *)(v56 + 72);
    sub_1C3F961BC((uint64_t)v10, v34 + v56 * v23, &qword_1EA39CBC0);
    uint64_t v35 = v33[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v37;
    uint64_t v38 = v16 - 1;
    if (v16 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v39 = v55 + v58 + v53;
    while (1)
    {
      sub_1C3F970C4(v39, (uint64_t)v15, &qword_1EA39C130);
      uint64_t v62 = *v15;
      uint64_t v40 = v62;
      sub_1C3F961BC(v57, (uint64_t)v10, &qword_1EA39CBC0);
      long long v41 = (void *)*a3;
      unint64_t v42 = sub_1C4061A7C(v40);
      uint64_t v44 = v41[2];
      BOOL v45 = (v43 & 1) == 0;
      BOOL v36 = __OFADD__(v44, v45);
      uint64_t v46 = v44 + v45;
      if (v36) {
        break;
      }
      char v47 = v43;
      if (v41[3] < v46)
      {
        sub_1C4065104(v46, 1);
        unint64_t v42 = sub_1C4061A7C(v40);
        if ((v47 & 1) != (v48 & 1)) {
          goto LABEL_25;
        }
      }
      if (v47) {
        goto LABEL_10;
      }
      uint64_t v49 = (void *)*a3;
      *(void *)(*a3 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      *(void *)(v49[6] + 8 * v42) = v40;
      sub_1C3F961BC((uint64_t)v10, v49[7] + v56 * v42, &qword_1EA39CBC0);
      uint64_t v50 = v49[2];
      BOOL v36 = __OFADD__(v50, 1);
      uint64_t v51 = v50 + 1;
      if (v36) {
        goto LABEL_24;
      }
      v49[2] = v51;
      v39 += v58;
      if (!--v38) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C4065104(v26, v17 & 1);
  unint64_t v28 = sub_1C4061A7C(v20);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    sub_1C3FE3FF0();
    unint64_t v30 = (void *)swift_allocError();
    *(void *)uint64_t v31 = 0xD00000000000001DLL;
    *(void *)(v31 + 8) = 0x80000001C44B2E90;
    *(unsigned char *)(v31 + 16) = 0;
    swift_willThrow();
    id v61 = v30;
    id v32 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C3F962E0((uint64_t)v10, &qword_1EA39CBC0);
      swift_bridgeObjectRelease();
      swift_release();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1C4498558();
  __break(1u);
LABEL_26:
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  sub_1C4497D28();
  sub_1C4497268();
  sub_1C4497E88();
  sub_1C4497268();
  sub_1C4497F58();
  __break(1u);
}

uint64_t sub_1C4469148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v9[3] = a3;
  v9[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  (*(void (**)(uint64_t *))(**(void **)a2 + 120))(v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_1C44691F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v9[3] = a3;
  v9[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  (*(void (**)(uint64_t *))(**(void **)a2 + 112))(v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_1C4469298(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1C40124EC(0, v3, 0);
    uint64_t v4 = v19;
    uint64_t v7 = *(void *)(type metadata accessor for Proto_Set.Element(0) - 8);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1C445CDD8(v8, a2, (uint64_t)&v17);
      if (v2) {
        break;
      }
      long long v10 = v17;
      uint64_t v11 = v18;
      uint64_t v19 = v4;
      unint64_t v13 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      if (v13 >= v12 >> 1)
      {
        long long v16 = v17;
        sub_1C40124EC(v12 > 1, v13 + 1, 1);
        long long v10 = v16;
        uint64_t v4 = v19;
      }
      *(void *)(v4 + 16) = v13 + 1;
      uint64_t v14 = v4 + 24 * v13;
      *(_OWORD *)(v14 + 32) = v10;
      *(void *)(v14 + 48) = v11;
      v8 += v9;
      if (!--v3) {
        return v4;
      }
    }
    swift_release();
  }
  return v4;
}

uint64_t sub_1C4469400(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(BOOL, unint64_t, uint64_t), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v22 = a2;
  unint64_t v23 = a5;
  uint64_t v21 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t v20 = a4;
    a4(0, v12, 0);
    uint64_t v13 = v24;
    uint64_t v14 = *(void *)(type metadata accessor for Proto_Set.Element(0) - 8);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = *(void *)(v14 + 72);
    while (1)
    {
      v23(v15, v22);
      if (v5) {
        break;
      }
      uint64_t v24 = v13;
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        v20(v17 > 1, v18 + 1, 1);
        uint64_t v13 = v24;
      }
      *(void *)(v13 + 16) = v18 + 1;
      sub_1C3F961BC((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v18, v21);
      v15 += v16;
      if (!--v12) {
        return v13;
      }
    }
    swift_release();
  }
  return v13;
}

uint64_t sub_1C44695F8(uint64_t a1, void (*a2)(long long *, char *, void, char *), uint64_t a3)
{
  uint64_t v4 = v3;
  BOOL v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC130);
  uint64_t v6 = MEMORY[0x1F4188790](v32);
  uint64_t v31 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v30 = (void *)((char *)v26 - v9);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v26 - v10;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1C40124EC(0, 0, 0);
  uint64_t v12 = v38;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v29 = v13;
  v26[1] = a1;
  if (v13)
  {
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(type metadata accessor for Proto_Set.Element(0) - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v27 = *(void *)(v15 + 72);
    unint64_t v28 = (char *)&v36 + 8;
    while (1)
    {
      uint64_t v17 = v32;
      uint64_t v18 = (uint64_t)&v31[*(int *)(v32 + 48)];
      sub_1C446A3B4(v16, v18, type metadata accessor for Proto_Set.Element);
      uint64_t v19 = (uint64_t)v30;
      uint64_t v20 = (uint64_t)v30 + *(int *)(v17 + 48);
      *unint64_t v30 = v14;
      sub_1C446A41C(v18, v20, type metadata accessor for Proto_Set.Element);
      sub_1C3F961BC(v19, (uint64_t)v11, &qword_1EBBBC130);
      v33(&v36, v28, *(void *)v11, &v11[*(int *)(v17 + 48)]);
      if (v4) {
        break;
      }
      sub_1C3F962E0((uint64_t)v11, &qword_1EBBBC130);
      long long v35 = v36;
      uint64_t v21 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C40124EC(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v38;
      }
      unint64_t v23 = *(void *)(v12 + 16);
      unint64_t v22 = *(void *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1C40124EC(v22 > 1, v23 + 1, 1);
        uint64_t v12 = v38;
      }
      ++v14;
      *(void *)(v12 + 16) = v23 + 1;
      uint64_t v24 = v12 + 24 * v23;
      *(_OWORD *)(v24 + 32) = v35;
      *(void *)(v24 + 48) = v21;
      v16 += v27;
      if (v29 == v14) {
        goto LABEL_11;
      }
    }
    sub_1C3F962E0((uint64_t)v11, &qword_1EBBBC130);
    swift_release();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C44698F8(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v11 = *(v5 - 1);
      uint64_t v12 = *v5;
      uint64_t v13 = *(v5 - 2);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v13) {
        break;
      }
      uint64_t v14 = (void *)*a3;
      unint64_t v16 = sub_1C4061A7C(v13);
      uint64_t v17 = v14[2];
      BOOL v18 = (v15 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        uint64_t result = sub_1C4498558();
        __break(1u);
        return result;
      }
      char v20 = v15;
      if (v14[3] >= v19)
      {
        if ((a2 & 1) == 0) {
          sub_1C406918C();
        }
      }
      else
      {
        sub_1C406458C(v19, a2 & 1);
        unint64_t v21 = sub_1C4061A7C(v13);
        if ((v20 & 1) != (v22 & 1)) {
          goto LABEL_18;
        }
        unint64_t v16 = v21;
      }
      unint64_t v23 = (void *)*a3;
      if (v20)
      {
        uint64_t v6 = 16 * v16;
        uint64_t v7 = (uint64_t *)(v23[7] + v6);
        uint64_t v8 = *v7;
        uint64_t v9 = v7[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = (void *)(v23[7] + v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v10 = v8;
        v10[1] = v9;
      }
      else
      {
        v23[(v16 >> 6) + 8] |= 1 << v16;
        *(void *)(v23[6] + 8 * v16) = v13;
        uint64_t v24 = (void *)(v23[7] + 16 * v16);
        *uint64_t v24 = v11;
        v24[1] = v12;
        uint64_t v25 = v23[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_17;
        }
        _OWORD v23[2] = v27;
      }
      v5 += 3;
      a2 = 1;
      --v4;
    }
    while (v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4469AD0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C4469B14(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for CRValueBoxHelper()
{
  return __swift_instantiateGenericMetadata();
}

_UNKNOWN **sub_1C4469B3C()
{
  return &protocol witness table for AnyCRDT.MergeableDelta;
}

unint64_t sub_1C4469B4C()
{
  unint64_t result = qword_1EA39B1E0;
  if (!qword_1EA39B1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39B1E0);
  }
  return result;
}

uint64_t sub_1C4469BA0()
{
  uint64_t result = sub_1C4497B38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AnyCRDT.MergeableDeltaBox()
{
  return self;
}

uint64_t sub_1C4469C58()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AnyCRDT.MergeableDeltaBoxHelper()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for AnyCRDT.MergeableDelta()
{
  return &type metadata for AnyCRDT.MergeableDelta;
}

uint64_t type metadata accessor for CRValueBox()
{
  return self;
}

uint64_t sub_1C4469D48()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C4469DDC(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C401259C(0, v3, 0);
    uint64_t v4 = v20;
    uint64_t v7 = *(void *)(type metadata accessor for Proto_Set.Element(0) - 8);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1C4467708(v8, a2, &v18);
      if (v2) {
        break;
      }
      __n128 v10 = v18;
      long long v11 = v19;
      uint64_t v20 = v4;
      unint64_t v13 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      if (v13 >= v12 >> 1)
      {
        long long v16 = v19;
        __n128 v17 = v18;
        sub_1C401259C(v12 > 1, v13 + 1, 1);
        long long v11 = v16;
        __n128 v10 = v17;
        uint64_t v4 = v20;
      }
      *(void *)(v4 + 16) = v13 + 1;
      uint64_t v14 = v4 + 32 * v13;
      *(__n128 *)(v14 + 32) = v10;
      *(_OWORD *)(v14 + 48) = v11;
      v8 += v9;
      if (!--v3) {
        return v4;
      }
    }
    swift_release();
  }
  return v4;
}

uint64_t sub_1C4469F30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Proto_CRDT(0);
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v7 = *(void *)a1;
  uint64_t v29 = *(void *)(*(void *)a1 + 16);
  if (v29)
  {
    uint64_t v33 = v2;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v9 = 0;
    uint64_t v10 = MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v11 = *(void *)(v32 + 8);
      if (v9 >= *(void *)(v11 + 16)) {
        break;
      }
      unint64_t v12 = *(void *)(v7 + 8 * v9 + 32);
      uint64_t v13 = v30;
      sub_1C446A3B4(v11+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v9, v30, type metadata accessor for Proto_CRDT);
      type metadata accessor for CRDecoder(0);
      swift_allocObject();
      swift_retain();
      uint64_t v14 = sub_1C3FB9A38(v13, a2);
      swift_release();
      uint64_t v15 = *(void *)(v14 + 32);
      unint64_t v16 = *(void *)(v15 + 16);
      if (v16) {
        BOOL v17 = v12 >= v16;
      }
      else {
        BOOL v17 = 1;
      }
      if (v17)
      {
        sub_1C3FE3FF0();
        swift_allocError();
        *(_OWORD *)uint64_t v28 = xmmword_1C449B6C0;
        *(unsigned char *)(v28 + 16) = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_14;
      }
      uint64_t v18 = v15 + 16 * v12;
      uint64_t v20 = *(void *)(v18 + 32);
      uint64_t v19 = *(void *)(v18 + 40);
      swift_bridgeObjectRetain();
      uint64_t v21 = swift_retain();
      uint64_t v22 = v33;
      AnyCRDT.init(from:)(&v35, v21);
      if (v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      uint64_t v33 = 0;
      ++v9;
      uint64_t v23 = v7;
      uint64_t v24 = a2;
      uint64_t v25 = v35;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = v10;
      uint64_t v27 = v25;
      a2 = v24;
      uint64_t v7 = v23;
      sub_1C4420DEC(v27, v20, v19, isUniquelyReferenced_nonNull_native);
      uint64_t v10 = v34;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v29 == v9)
      {
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    swift_release();
    uint64_t v10 = MEMORY[0x1E4FBC868];
LABEL_14:
    sub_1C3F924DC(v32, type metadata accessor for Proto_Struct);
    return v10;
  }
  return result;
}

uint64_t sub_1C446A248()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C446A280(uint64_t a1)
{
  return sub_1C445BA34(a1, v1);
}

uint64_t sub_1C446A288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  return sub_1C445BA88(a1, a2, a3, v4, a4);
}

id sub_1C446A2A4@<X0>(void *a1@<X8>)
{
  return sub_1C445C3A8(*(void *)(v1 + 16), &qword_1EA3A13E8, a1);
}

id sub_1C446A2C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C445C42C(a1, v2, a2);
}

uint64_t sub_1C446A2E4(void *a1, _OWORD *a2, unint64_t a3, uint64_t a4)
{
  return sub_1C445F948(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void ***)(v4 + 32));
}

id sub_1C446A304@<X0>(void *a1@<X8>)
{
  return sub_1C445C3A8(*(void *)(v1 + 16), &qword_1EA3A1428, a1);
}

uint64_t sub_1C446A328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Timestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C446A38C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C446A3B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C446A41C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C446A490(uint64_t a1, uint64_t a2)
{
  return sub_1C4469F30(a1, a2);
}

uint64_t sub_1C446A4AC()
{
  uint64_t v1 = self;
  uint64_t v2 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_removeFilePresenter_, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1C446A530()
{
  return sub_1C4496CC8();
}

uint64_t sub_1C446A610()
{
  sub_1C4497A58();
  return v1;
}

uint64_t sub_1C446A670(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v4 = *v1;
  uint64_t v25 = sub_1C4496D68();
  uint64_t v28 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496DA8();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v4 + 80);
  uint64_t v11 = *(void *)(v4 + 88);
  uint64_t v24 = *(void *)(v11 + 16);
  uint64_t v22 = v10;
  uint64_t v12 = type metadata accessor for Capsule();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v21 - v14;
  v21[1] = v2[4];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v21 - v14, a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  BOOL v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v10;
  *((void *)v17 + 3) = v11;
  *((void *)v17 + 4) = v2;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], v15, v12);
  aBlock[4] = sub_1C44746C8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3F61AC0;
  aBlock[3] = &block_descriptor_125;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1C4496D88();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
  sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
  uint64_t v19 = v25;
  sub_1C4497BF8();
  MEMORY[0x1C87806C0](0, v9, v6, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  swift_release();
  return sub_1C446ACF4(v23, v22, v24);
}

uint64_t sub_1C446AA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496D68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = sub_1C4496DA8();
  uint64_t v10 = *(void *)(v16[0] - 8);
  MEMORY[0x1F4188790](v16[0]);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C446A670(a1);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  aBlock[4] = sub_1C44746A8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3F61AC0;
  aBlock[3] = &block_descriptor_113;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1C4496D88();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
  sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
  sub_1C4497BF8();
  MEMORY[0x1C87806C0](0, v12, v9, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v10 + 8))(v12, v16[0]);
  return swift_release();
}

uint64_t sub_1C446ACF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  uint64_t v24 = a1;
  uint64_t v25 = v7;
  uint64_t v8 = sub_1C4496D68();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1C4496DA8();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Capsule();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = v3;
  uint64_t result = sub_1C4497A58();
  if ((aBlock[0] & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v24, v12);
    unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v18 = (char *)swift_allocObject();
    uint64_t v19 = v25;
    *((void *)v18 + 2) = *(void *)(v25 + 80);
    *((void *)v18 + 3) = a2;
    *((void *)v18 + 4) = *(void *)(v19 + 88);
    *((void *)v18 + 5) = a3;
    *((void *)v18 + 6) = v4;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v17], v15, v12);
    aBlock[4] = sub_1C4474570;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C3F61AC0;
    aBlock[3] = &block_descriptor_97;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    sub_1C4496D88();
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
    sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
    uint64_t v21 = v27;
    uint64_t v22 = v30;
    sub_1C4497BF8();
    MEMORY[0x1C87806C0](0, v11, v21, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v22);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v28);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C446B0FC(uint64_t a1)
{
  uint64_t v3 = sub_1C4496328();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496498();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(void *)v1 + 448))(a1);
  uint64_t v11 = (void *)*MEMORY[0x1E4F1C600];
  sub_1C4496468();
  id v12 = objc_msgSend(self, sel_defaultManager);
  sub_1C4496488();
  uint64_t v13 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  unsigned int v14 = objc_msgSend(v12, sel_fileExistsAtPath_, v13);

  if (!v14)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC190);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C449B490;
  *(void *)(inited + 32) = v11;
  id v16 = v11;
  sub_1C411EF80(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1C44963C8();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1C44962F8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (!v18) {
    return 0;
  }
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1C446B4BC(void *a1)
{
  uint64_t v32 = *v1;
  uint64_t v3 = sub_1C4496D68();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v35 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1C4496DA8();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C4496D78();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = v1[6];
  if (v10)
  {
    uint64_t v11 = v1[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C449B4A0;
    uint64_t aBlock = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_1C4497D28();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t aBlock = v11;
    unint64_t v43 = v10;
    sub_1C4497268();
    uint64_t v13 = aBlock;
    unint64_t v14 = v43;
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v14;
    swift_getErrorValue();
    uint64_t v16 = v39;
    uint64_t v15 = v40;
    *(void *)(v12 + 88) = v40;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 64));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_1, v16, v15);
    sub_1C44985C8();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v1[3];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C4474218;
  *(void *)(v19 + 24) = v1;
  uint64_t v46 = sub_1C3F5F30C;
  char v47 = (void *)v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v43 = 1107296256;
  uint64_t v44 = sub_1C3F5F2B8;
  BOOL v45 = &block_descriptor_70;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v18, v20);
  _Block_release(v20);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v18)
  {
    __break(1u);
  }
  else
  {
    sub_1C3FF32D4(0, (unint64_t *)&qword_1EBBC1290);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCB48], v6);
    uint64_t v22 = (void *)sub_1C4497A88();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = v32;
    void v24[2] = *(void *)(v32 + 80);
    _OWORD v24[3] = *(void *)(v25 + 88);
    uint64_t v24[4] = v23;
    v24[5] = a1;
    uint64_t v46 = sub_1C44742AC;
    char v47 = v24;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v43 = 1107296256;
    uint64_t v44 = sub_1C3F61AC0;
    BOOL v45 = &block_descriptor_79;
    uint64_t v26 = _Block_copy(&aBlock);
    swift_retain();
    id v27 = a1;
    uint64_t v28 = v33;
    sub_1C4496D88();
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
    sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
    uint64_t v29 = v35;
    uint64_t v30 = v38;
    sub_1C4497BF8();
    MEMORY[0x1C87806C0](0, v28, v29, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v36);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1C446BAD8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = v3;
  char v8 = sub_1C446C1A4(a1, a3, a2, 0);
  if (!v4 && (v8 & 1) != 0)
  {
    uint64_t v9 = v3[6];
    if (v9)
    {
      uint64_t v10 = v5[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C449B490;
      swift_bridgeObjectRetain();
      sub_1C4497268();
      *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v11 + 32) = v10;
      *(void *)(v11 + 40) = v9;
      sub_1C44985C8();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, uint64_t))(*v5 + 496))(a1, a3);
    uint64_t v12 = sub_1C446B0FC(a1);
    uint64_t v13 = (void *)v5[10];
    v5[10] = v12;
  }
}

void sub_1C446BC34()
{
  uint64_t v1 = v0;
  uint64_t v40 = *v0;
  uint64_t v2 = sub_1C44965D8();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v33 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496498();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v41 = v1;
  uint64_t v14 = v1[2];
  id v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_initWithFilePresenter_, v14);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(v6, v14 + OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_fileURL, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    goto LABEL_7;
  }
  uint64_t v37 = v8;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  uint64_t v38 = sub_1C4496418();
  unint64_t v17 = (void *)sub_1C4496418();
  uint64_t v36 = v13;
  v15(v11, (uint64_t)v13, v7);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v40;
  uint64_t v22 = v41;
  *((void *)v20 + 2) = *(void *)(v40 + 80);
  *((void *)v20 + 3) = *(void *)(v21 + 88);
  *((void *)v20 + 4) = v22;
  v16(&v20[v18], v11, v7);
  uint64_t v23 = v39;
  *(void *)&v20[v19] = v39;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1C4474158;
  *(void *)(v24 + 24) = v20;
  uint64_t v46 = sub_1C44749C8;
  uint64_t v47 = v24;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v43 = 1107296256;
  uint64_t v44 = sub_1C4024894;
  BOOL v45 = &block_descriptor_64;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  id v26 = v23;
  swift_retain();
  swift_release();
  id v27 = (void *)v38;
  objc_msgSend(v26, sel_coordinateReadingItemAtURL_options_writingItemAtURL_options_error_byAccessor_, v38, 0, v17, 0, 0, v25);

  _Block_release(v25);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v27)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  if (v22[6])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C449B490;
    uint64_t aBlock = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_1C4497268();
    sub_1C4497268();
    uint64_t v29 = v33;
    sub_1C44965C8();
    sub_1C44965B8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v35);
    sub_1C4497668();
    uint64_t v30 = aBlock;
    unint64_t v31 = v43;
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v28 + 32) = v30;
    *(void *)(v28 + 40) = v31;
    sub_1C44985C8();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v7);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v7);
    swift_release();
  }
}

uint64_t sub_1C446C1A4(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = v4[5];
  uint64_t v10 = v4[6];
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C449B490;
    sub_1C4497D28();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v48 = v9;
    *((void *)&v48 + 1) = v10;
    sub_1C4497268();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    long long v12 = v48;
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v11 + 32) = v12;
    sub_1C44985C8();
    swift_bridgeObjectRelease();
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v13 = (void *)sub_1C446B0FC(a1);
    if (v13)
    {
      uint64_t v14 = (void *)v4[10];
      if (v14)
      {
        sub_1C3FF32D4(0, (unint64_t *)&qword_1EBBBC180);
        char v44 = a3;
        uint64_t v21 = v9;
        char v15 = a4;
        uint64_t v16 = a1;
        id v17 = v13;
        id v18 = v14;
        char v19 = sub_1C4497B08();
        unint64_t v43 = v17;

        a1 = v16;
        a4 = v15;
        uint64_t v20 = v21;
        LOBYTE(v21) = v44;

        if (v19)
        {
          if (v10)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
            uint64_t v22 = swift_allocObject();
            *(_OWORD *)(v22 + 16) = xmmword_1C449B490;
            sub_1C4497D28();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)&long long v48 = v20;
            *((void *)&v48 + 1) = v10;
            sub_1C4497268();
            sub_1C4497268();
            swift_bridgeObjectRelease();
            long long v23 = v48;
            *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
            *(_OWORD *)(v22 + 32) = v23;
            sub_1C44985C8();
            swift_bridgeObjectRelease();
          }

          return v21 & 1;
        }
      }
    }
    uint64_t v24 = (void *)v5[10];
    v5[10] = v13;
  }
  if ((*(uint64_t (**)(void))(*v5 + 368))())
  {
    id v25 = objc_msgSend(self, sel_defaultManager);
    sub_1C4496488();
    uint64_t v21 = sub_1C4497188();
    swift_bridgeObjectRelease();
    *(void *)&long long v48 = 0;
    id v26 = objc_msgSend(v25, sel_contentsOfDirectoryAtPath_error_, v21, &v48);

    id v27 = (void *)v48;
    if (!v26)
    {
      id v39 = (id)v48;
      sub_1C44963A8();

      swift_willThrow();
      return v21 & 1;
    }
    uint64_t v21 = sub_1C44973F8();
    id v28 = v27;

    uint64_t v29 = *(void *)(v21 + 16);
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_14;
    }
LABEL_29:
    LOBYTE(v21) = 1;
    return v21 & 1;
  }
  id v31 = objc_msgSend(self, sel_defaultManager);
  sub_1C4496488();
  uint64_t v32 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  id v47 = 0;
  uint64_t v21 = (uint64_t)objc_msgSend(v31, sel_attributesOfItemAtPath_error_, v32, &v47);

  id v33 = v47;
  if (!v21)
  {
    id v40 = v47;
    uint64_t v41 = (void *)sub_1C44963A8();

    swift_willThrow();
    goto LABEL_31;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_1C3F70AA8(&qword_1EBBBB4E8, type metadata accessor for FileAttributeKey);
  uint64_t v34 = sub_1C4496EE8();
  id v35 = v33;

  if (*(void *)(v34 + 16))
  {
    id v36 = (id)*MEMORY[0x1E4F28390];
    uint64_t v37 = sub_1C4061A38((uint64_t)v36);
    if (v38)
    {
      sub_1C3F5E790(*(void *)(v34 + 56) + 32 * v37, (uint64_t)&v48);
    }
    else
    {
      long long v48 = 0u;
      long long v49 = 0u;
    }
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v49 + 1))
  {
    sub_1C3F962E0((uint64_t)&v48, (uint64_t *)&unk_1EA39AE20);
    goto LABEL_31;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_31:
    LOBYTE(v21) = 1;
    return v21 & 1;
  }
  if (!v47) {
    goto LABEL_29;
  }
LABEL_14:
  char v30 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*v5 + 504))(a1, a2, a4 & 1);
  if (!v46) {
    LOBYTE(v21) = v30;
  }
  return v21 & 1;
}

uint64_t sub_1C446C7AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = v3[10];
  v37[1] = *(void *)(v3[11] + 16);
  _OWORD v37[2] = v4;
  uint64_t v5 = type metadata accessor for Capsule();
  uint64_t v41 = sub_1C4497B38();
  uint64_t v6 = *(void *)(v41 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v41);
  unint64_t v42 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v37 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  id v40 = (char *)v37 - v13;
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)v37 - v14;
  char v38 = (uint64_t (*)(unsigned char *))v3[33];
  id v39 = v3 + 33;
  uint64_t v16 = (uint64_t (*)(unsigned char *, void))v38(v47);
  uint64_t v17 = *(void *)(v5 - 8);
  id v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v43 = v17;
  char v44 = v18;
  uint64_t v46 = v17 + 48;
  if (!v18(v19, 1, v5)) {
    Capsule.finalizeTimestamps(_:)(v2[9], v5);
  }
  uint64_t v20 = v16(v47, 0);
  uint64_t v21 = *(void (**)(uint64_t))(*v2 + 248);
  v21(v20);
  uint64_t v22 = v44;
  int v23 = v44(v15, 1, v5);
  uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v41);
  if (v23 == 1)
  {
    uint64_t v25 = v43;
    id v26 = v40;
    uint64_t v27 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v40, v45, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v5);
    (*(void (**)(char *))(*v2 + 256))(v26);
    id v28 = v42;
    uint64_t v29 = v27;
LABEL_9:
    uint64_t v32 = sub_1C446CC64();
    goto LABEL_10;
  }
  v21(v24);
  uint64_t result = v22(v11, 1, v5);
  uint64_t v29 = v45;
  id v28 = v42;
  uint64_t v25 = v43;
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  char v31 = Capsule.hasDelta(from:)((uint64_t)v11, v5);
  uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v5);
  if ((v31 & 1) == 0)
  {
LABEL_10:
    v21(v32);
    uint64_t result = v22(v28, 1, v5);
    if (result != 1)
    {
      char v36 = Capsule.hasDelta(from:)(v29, v5);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v5);
      return v36 & 1;
    }
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v41 = (uint64_t)v21;
  id v33 = (void (*)(unsigned char *, void))v38(v47);
  uint64_t result = v22(v34, 1, v5);
  if (result != 1)
  {
    uint64_t v35 = v45;
    Capsule.merge<A>(_:)(v45, v5);
    v33(v47, 0);
    uint64_t v29 = v35;
    uint64_t v25 = v43;
    uint64_t v22 = v44;
    uint64_t v21 = (void (*)(uint64_t))v41;
    goto LABEL_9;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1C446CC64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v65 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C4496D68();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v60 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496DA8();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v59 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1C4496D78();
  uint64_t v58 = *(void **)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v2 + 80);
  uint64_t v70 = *(void *)(v2 + 88);
  uint64_t v71 = v10;
  uint64_t v11 = type metadata accessor for Capsule();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  char v15 = (char *)&v53 - v14;
  uint64_t v16 = v11;
  uint64_t v17 = *(void *)(v11 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v13);
  uint64_t v68 = v19;
  uint64_t v69 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v67 = (char *)&v53 - v21;
  uint64_t v22 = v1[6];
  if (v22)
  {
    uint64_t v23 = v1[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
    uint64_t v24 = v1;
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C449B490;
    uint64_t aBlock = v23;
    uint64_t v74 = v22;
    swift_bridgeObjectRetain();
    sub_1C4497268();
    uint64_t v26 = aBlock;
    uint64_t v27 = v74;
    *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v25 + 32) = v26;
    *(void *)(v25 + 40) = v27;
    sub_1C44985C8();
    uint64_t v1 = v24;
    uint64_t v20 = swift_bridgeObjectRelease();
    uint64_t v2 = *v24;
  }
  (*(void (**)(uint64_t))(v2 + 248))(v20);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v66 = v17;
    uint64_t v29 = v17 + 32;
    char v30 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    char v31 = v67;
    v30(v67, v15, v11);
    uint64_t v55 = v29;
    swift_beginAccess();
    uint64_t v32 = v1[13];
    sub_1C3FF32D4(0, (unint64_t *)&qword_1EBBC1290);
    id v33 = v58;
    uint64_t v34 = v57;
    uint64_t v35 = v56;
    ((void (*)(char *, void, uint64_t))v58[13])(v57, *MEMORY[0x1E4FBCB48], v56);
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_1C4497A88();
    ((void (*)(char *, uint64_t))v33[1])(v34, v35);
    uint64_t v36 = v16;
    uint64_t v37 = v66;
    uint64_t v57 = *(char **)(v66 + 16);
    char v38 = v69;
    ((void (*)(char *, char *, uint64_t))v57)(v69, v31, v36);
    uint64_t v39 = *(unsigned __int8 *)(v37 + 80);
    uint64_t v58 = v1;
    uint64_t v56 = v39 | 7;
    id v40 = (char *)swift_allocObject();
    uint64_t v41 = v70;
    *((void *)v40 + 2) = v71;
    *((void *)v40 + 3) = v41;
    *((void *)v40 + 4) = v32;
    v30(&v40[(v39 + 40) & ~v39], v38, v36);
    uint64_t v77 = sub_1C4473D74;
    uint64_t v78 = v40;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v74 = 1107296256;
    uint64_t v75 = sub_1C3F61AC0;
    uint64_t v76 = &block_descriptor_45;
    unint64_t v42 = _Block_copy(&aBlock);
    uint64_t v43 = v59;
    sub_1C4496D88();
    uint64_t v72 = MEMORY[0x1E4FBC860];
    sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
    sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
    char v44 = v60;
    uint64_t v45 = v64;
    sub_1C4497BF8();
    uint64_t v46 = (void *)v54;
    MEMORY[0x1C87806C0](0, v43, v44, v42);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v45);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v62);
    swift_release();
    uint64_t v47 = sub_1C44975A8();
    uint64_t v48 = (uint64_t)v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v65, 1, 1, v47);
    long long v49 = v69;
    uint64_t v50 = v67;
    ((void (*)(char *, char *, uint64_t))v57)(v69, v67, v36);
    uint64_t v51 = (char *)swift_allocObject();
    *((void *)v51 + 2) = 0;
    *((void *)v51 + 3) = 0;
    uint64_t v52 = v70;
    *((void *)v51 + 4) = v71;
    *((void *)v51 + 5) = v52;
    *((void *)v51 + 6) = v58;
    v30(&v51[(v39 + 56) & ~v39], v49, v36);
    swift_retain();
    sub_1C3F61348(v48, (uint64_t)&unk_1EA3A14C0, (uint64_t)v51);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v50, v36);
  }
  return result;
}

void sub_1C446D470(void (**a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1C4496498();
  uint64_t v41 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(self, sel_defaultManager);
  sub_1C4496488();
  uint64_t v11 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  unsigned int v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

  if (!v12) {
    return;
  }
  uint64_t v13 = self;
  uint64_t v14 = (void *)sub_1C4496418();
  id v15 = objc_msgSend((id)v13, sel_otherVersionsOfItemAtURL_, v14);

  if (!v15)
  {
LABEL_25:
    sub_1C446BAD8((uint64_t)a1, 0, a2);
    return;
  }
  uint64_t v42 = a2;
  uint64_t v43 = v4;
  sub_1C3FF32D4(0, (unint64_t *)&qword_1EBBBBF30);
  unint64_t v16 = sub_1C44973F8();

  unint64_t v17 = v16 >> 62;
  if (v16 >> 62) {
    goto LABEL_23;
  }
  if (*(uint64_t *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    a2 = v42;
    goto LABEL_25;
  }
  while (1)
  {
    sub_1C446C1A4((uint64_t)a1, v42, 1, 0);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (v17) {
      break;
    }
    uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v18) {
      goto LABEL_17;
    }
LABEL_9:
    uint64_t v38 = v13;
    uint64_t v39 = a1;
    a1 = (void (**)(char *, uint64_t))(v41 + 8);
    uint64_t v13 = 4;
    unint64_t v40 = v16 & 0xC000000000000001;
    uint64_t v41 = v18;
    while (1)
    {
      id v19 = v40 ? (id)MEMORY[0x1C8780A10](v13 - 4, v16) : *(id *)(v16 + 8 * v13);
      uint64_t v20 = v19;
      unint64_t v17 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v21 = objc_msgSend(v19, sel_URL);
      sub_1C4496478();

      sub_1C446C1A4((uint64_t)v9, v42, 0, 1);
      (*a1)(v9, v7);

      ++v13;
      if (v17 == v41)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v38;
        a1 = v39;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C4497FA8();
    swift_bridgeObjectRelease();
    if (v35 < 1) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C4497FA8();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_9;
  }
LABEL_17:
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v23 = v42;
  uint64_t v22 = v43;
  unint64_t v24 = v43[6];
  if (v24)
  {
    uint64_t v25 = (void *)v43[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
    uint64_t v26 = v13;
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1C449B490;
    id v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    sub_1C4497D28();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v44 = v25;
    unint64_t v45 = v24;
    sub_1C4497268();
    id v28 = v44;
    unint64_t v29 = v45;
    *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v27 + 32) = v28;
    *(void *)(v27 + 40) = v29;
    sub_1C44985C8();
    uint64_t v13 = v26;
    swift_bridgeObjectRelease();
  }
  (*(void (**)(void, uint64_t))(*v22 + 496))(a1, v23);
  uint64_t v30 = sub_1C446B0FC((uint64_t)a1);
  char v31 = (void *)v22[10];
  v22[10] = v30;

  uint64_t v32 = (void *)sub_1C4496418();
  id v44 = 0;
  unsigned int v33 = objc_msgSend((id)v13, sel_removeOtherVersionsOfItemAtURL_error_, v32, &v44);

  if (v33)
  {
    id v34 = v44;
  }
  else
  {
    id v36 = v44;
    sub_1C44963A8();

    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

uint64_t sub_1C446D9A4()
{
  sub_1C4497A58();
  return v1;
}

uint64_t sub_1C446DA04(char a1)
{
  uint64_t v3 = sub_1C4496D68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496DA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)(v1 + 32);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = a1;
  aBlock[4] = sub_1C44743B4;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3F61AC0;
  aBlock[3] = &block_descriptor_90;
  unsigned int v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1C4496D88();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
  sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
  sub_1C4497BF8();
  MEMORY[0x1C87806C0](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1C446DCB4(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v18 = sub_1C4496D68();
  uint64_t v21 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C4496DA8();
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v20 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C4496498();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v17 = v1[4];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = *(void *)(v3 + 80);
  *((void *)v13 + 3) = *(void *)(v3 + 88);
  *((void *)v13 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[v12], (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1C4473CF8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3F61AC0;
  aBlock[3] = &block_descriptor_39_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1C4496D88();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
  sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
  uint64_t v15 = v18;
  sub_1C4497BF8();
  MEMORY[0x1C87806C0](0, v8, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
  return swift_release();
}

void sub_1C446E058()
{
  uint64_t v1 = v0;
  v23[1] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_initWithFilePresenter_, *(void *)(v0 + 16));
  v23[0] = 0;
  uint64_t v3 = (void *)sub_1C4496418();
  uint64_t v4 = sub_1C4496418();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v23;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = sub_1C4473C10;
  v6[3] = v5;
  v22[4] = sub_1C44749C8;
  v22[5] = v6;
  v22[0] = (id)MEMORY[0x1E4F143A8];
  v22[1] = (id)1107296256;
  id v22[2] = sub_1C4024894;
  v22[3] = &block_descriptor_33_0;
  uint64_t v7 = _Block_copy(v22);
  swift_retain();
  id v8 = v2;
  swift_retain();
  swift_release();
  v22[0] = 0;
  objc_msgSend(v8, sel_coordinateReadingItemAtURL_options_writingItemAtURL_options_error_byAccessor_, v3, 0, v4, 0, v22, v7);
  _Block_release(v7);

  id v9 = v22[0];
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v4) {
    __break(1u);
  }
  id v10 = v9;
  if (!v9)
  {
    id v10 = v23[0];
    if (!v23[0])
    {

      goto LABEL_12;
    }
    id v11 = v23[0];
  }
  id v12 = v9;
  uint64_t v13 = (void *)sub_1C4496398();
  id v14 = objc_msgSend(v13, sel_domain);

  uint64_t v15 = sub_1C44971B8();
  uint64_t v17 = v16;

  if (v15 == sub_1C44971B8() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_1C44982E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
LABEL_10:
      sub_1C446B4BC(v10);
      goto LABEL_11;
    }
  }
  uint64_t v20 = (void *)sub_1C4496398();
  id v21 = objc_msgSend(v20, sel_code);

  if (v21 != (id)260) {
    goto LABEL_10;
  }
LABEL_11:

LABEL_12:
  swift_release();
}

uint64_t sub_1C446E36C()
{
  return sub_1C446E3AC((uint64_t)sub_1C4473BDC, (uint64_t)&block_descriptor_17);
}

uint64_t sub_1C446E38C()
{
  return sub_1C446E3AC((uint64_t)sub_1C4473BD4, (uint64_t)&block_descriptor_15);
}

uint64_t sub_1C446E3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C4496D68();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C4496DA8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 32);
  aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3F61AC0;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1C4496D88();
  v15[1] = MEMORY[0x1E4FBC860];
  sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
  sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
  sub_1C4497BF8();
  MEMORY[0x1C87806C0](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1C446E62C()
{
  if (*(void *)(v0 + 112))
  {
    swift_retain();
    sub_1C420861C();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C446E67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C44975A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C4497598();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C3F962E0(a1, (uint64_t *)&unk_1EBBC0980);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C4497578();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B1D8);
  return swift_task_create();
}

uint64_t sub_1C446E830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C4496498();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

uint64_t sub_1C446EA08()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_manager;
  if (MEMORY[0x1C8782180](v0 + OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_manager))
  {
    uint64_t v5 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
    unint64_t v9 = v8;
    swift_unknownObjectRelease();
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C449B490;
      uint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRelease();
      uint64_t v19 = v7;
      unint64_t v20 = v9;
      sub_1C4497268();
      uint64_t v11 = v19;
      unint64_t v12 = v20;
      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v12;
      sub_1C44985C8();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t result = MEMORY[0x1C8782180](v4);
  if (result)
  {
    uint64_t v14 = *(void *)(v4 + 8);
    uint64_t v15 = v0 + OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_fileURL;
    uint64_t v16 = sub_1C4496498();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v3, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v3, 0, 1, v16);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 8))(v3, v18, v14);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v3, v16);
    }
  }
  return result;
}

uint64_t sub_1C446ECE4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C4496498();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v30 - v12;
  id v14 = objc_msgSend(a1, sel_url2);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
    return sub_1C3F962E0((uint64_t)v13, &qword_1EBBC0760);
  }
  uint64_t v15 = v14;
  sub_1C4496478();

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v7, v4);
  uint64_t v16 = *(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  v16(v13, 0, 1, v4);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v17(v13, 1, v4) == 1) {
    return sub_1C3F962E0((uint64_t)v13, &qword_1EBBC0760);
  }
  unsigned int v33 = v16;
  sub_1C3F962E0((uint64_t)v13, &qword_1EBBC0760);
  uint64_t v18 = v2 + OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_manager;
  if (MEMORY[0x1C8782180](v2 + OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_manager))
  {
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(ObjectType, v19);
    unint64_t v22 = v21;
    swift_unknownObjectRelease();
    if (v22)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
      uint64_t v23 = swift_allocObject();
      uint64_t v31 = v2;
      unint64_t v24 = (void *)v23;
      *(_OWORD *)(v23 + 16) = xmmword_1C449B490;
      uint64_t v34 = 0;
      unint64_t v35 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRelease();
      uint64_t v34 = v32;
      unint64_t v35 = v22;
      sub_1C4497268();
      uint64_t v25 = v34;
      unint64_t v26 = v35;
      v24[7] = MEMORY[0x1E4FBB1A0];
      uint64_t v24[4] = v25;
      v24[5] = v26;
      sub_1C44985C8();
      uint64_t v2 = v31;
      swift_bridgeObjectRelease();
    }
  }
  uint64_t result = MEMORY[0x1C8782180](v18);
  if (result)
  {
    uint64_t v28 = *(void *)(v18 + 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v11, v2 + OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_fileURL, v4);
    v33(v11, 0, 1, v4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(v11, 1, v4);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 8))(v11, v29, v28);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    }
  }
  return result;
}

id sub_1C446F144()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRFileSyncPresenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C446F20C()
{
  sub_1C40F4C84();
  return swift_deallocClassInstance();
}

void sub_1C446F264()
{
}

uint64_t sub_1C446F2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v103 = a1;
  uint64_t v104 = a4;
  uint64_t v6 = sub_1C4496D68();
  uint64_t v97 = *(void *)(v6 - 8);
  uint64_t v98 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v95 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1C4496DA8();
  uint64_t v94 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v102 = *(void *)(a2 + 24);
  uint64_t v92 = v9;
  uint64_t v10 = type metadata accessor for Capsule();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBC00F0);
  uint64_t v88 = v10;
  uint64_t v11 = sub_1C4496CE8();
  uint64_t v86 = sub_1C4497B38();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v86);
  id v14 = (char *)&v79 - v13;
  uint64_t v15 = *(void *)(a3 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v12);
  char v82 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v87 = (char *)&v79 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v79 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  char v101 = (char *)&v79 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v79 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)&v79 - v29;
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v28);
  uint64_t v34 = (char *)&v79 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x1F4188790](v32);
  uint64_t v100 = (char *)&v79 - v36;
  MEMORY[0x1F4188790](v35);
  uint64_t v91 = (char *)&v79 - v37;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v81 = v22;
    uint64_t v89 = v16;
    uint64_t v99 = v15;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v40 = result;
    v39(v30, v103, a3);
    v39(v27, (uint64_t)v30, a3);
    swift_retain();
    int v41 = swift_dynamicCast();
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    uint64_t v90 = v39;
    uint64_t v43 = v31;
    uint64_t v84 = v40;
    uint64_t v83 = v15 + 16;
    if (v41)
    {
      v42(v14, 0, 1, v11);
      id v44 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v44(v34, v14, v11);
      unint64_t v45 = v100;
      v44(v100, v34, v11);
      uint64_t v46 = v103;
    }
    else
    {
      uint64_t v80 = v31;
      v42(v14, 1, 1, v11);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v14, v86);
      uint64_t v86 = v11;
      uint64_t v47 = (uint64_t *)v100;
      sub_1C4496C68();
      sub_1C4496D18();
      v39(v101, (uint64_t)v30, a3);
      *uint64_t v47 = sub_1C4496D28();
      v39(v81, (uint64_t)v30, a3);
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBBF40);
      if (swift_dynamicCast())
      {
        sub_1C3F6DE94(&v110, (uint64_t)&aBlock);
        sub_1C3F6DE94(&aBlock, (uint64_t)&v110);
        uint64_t v48 = swift_allocObject();
        sub_1C3F6DE94(&v110, v48 + 16);
        long long v49 = sub_1C4102234;
      }
      else
      {
        uint64_t v112 = 0;
        long long v110 = 0u;
        long long v111 = 0u;
        sub_1C3F962E0((uint64_t)&v110, (uint64_t *)&unk_1EA39D498);
        swift_getDynamicType();
        uint64_t v50 = sub_1C44986E8();
        uint64_t v52 = v51;
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = v50;
        *(void *)(v48 + 24) = v52;
        long long v49 = sub_1C41020B0;
      }
      uint64_t v46 = v103;
      uint64_t v53 = v99;
      unint64_t v45 = v100;
      *((void *)v100 + 1) = v49;
      v45[2] = v48;
      uint64_t v54 = v101;
      uint64_t v55 = (void (*)(char *, char *, uint64_t))v90;
      v90(v101, (uint64_t)v30, a3);
      unint64_t v56 = (*(unsigned __int8 *)(v53 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      uint64_t v57 = (char *)swift_allocObject();
      *((void *)v57 + 2) = v88;
      *((void *)v57 + 3) = a3;
      *((void *)v57 + 4) = v104;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v57[v56], v54, a3);
      v45[3] = sub_1C4102140;
      void v45[4] = v57;
      v55(v87, v30, a3);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBBF50);
      if (swift_dynamicCast())
      {
        sub_1C3F6DE94(&v110, (uint64_t)&aBlock);
        sub_1C3F6DE94(&aBlock, (uint64_t)&v110);
        uint64_t v58 = swift_allocObject();
        sub_1C3F6DE94(&v110, v58 + 16);
        void v45[5] = sub_1C410222C;
        v45[6] = v58;
        uint64_t v11 = v86;
        uint64_t v43 = v80;
      }
      else
      {
        uint64_t v112 = 0;
        long long v110 = 0u;
        long long v111 = 0u;
        sub_1C3F962E0((uint64_t)&v110, (uint64_t *)&unk_1EA39D4A8);
        v55(v82, v30, a3);
        int v59 = swift_dynamicCast();
        uint64_t v11 = v86;
        uint64_t v43 = v80;
        if (v59)
        {
          sub_1C3F6DE94(&v110, (uint64_t)&aBlock);
          sub_1C3F6DE94(&aBlock, (uint64_t)&v110);
          uint64_t v60 = swift_allocObject();
          sub_1C3F6DE94(&v110, v60 + 16);
          unint64_t v45 = v100;
          *((void *)v100 + 5) = sub_1C4102224;
          v45[6] = v60;
        }
        else
        {
          uint64_t v112 = 0;
          long long v110 = 0u;
          long long v111 = 0u;
          sub_1C3F962E0((uint64_t)&v110, (uint64_t *)&unk_1EA39D498);
          swift_getDynamicType();
          uint64_t v61 = sub_1C44986E8();
          uint64_t v63 = v62;
          uint64_t v64 = swift_allocObject();
          *(void *)(v64 + 16) = v61;
          *(void *)(v64 + 24) = v63;
          unint64_t v45 = v100;
          *((void *)v100 + 5) = sub_1C41021E4;
          v45[6] = v64;
        }
      }
    }
    uint64_t v65 = v92;
    uint64_t v66 = type metadata accessor for CRSyncSubscription();
    uint64_t v67 = (uint64_t)v91;
    (*(void (**)(char *, void *, uint64_t))(v43 + 32))(v91, v45, v11);
    uint64_t v68 = v99;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v30, a3);
    swift_allocObject();
    uint64_t v69 = v84;
    uint64_t v70 = sub_1C4100ED4(v84, v67);
    swift_release();
    *(void *)&long long v110 = v70;
    swift_beginAccess();
    sub_1C4497528();
    swift_retain();
    sub_1C44974D8();
    swift_endAccess();
    uint64_t v107 = (void *)v66;
    uint64_t WitnessTable = swift_getWitnessTable();
    *(void *)&long long aBlock = v70;
    swift_retain();
    uint64_t v71 = v104;
    sub_1C4496C88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
    uint64_t v103 = *(void *)(v69 + 32);
    uint64_t v72 = v101;
    v90(v101, v46, a3);
    unint64_t v73 = (*(unsigned __int8 *)(v68 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    uint64_t v74 = (char *)swift_allocObject();
    *((void *)v74 + 2) = v65;
    *((void *)v74 + 3) = a3;
    *((void *)v74 + 4) = v102;
    *((void *)v74 + 5) = v71;
    *((void *)v74 + 6) = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v74[v73], v72, a3);
    uint64_t WitnessTable = (uint64_t)sub_1C44748E4;
    uint64_t v109 = v74;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v106 = sub_1C3F61AC0;
    uint64_t v107 = &block_descriptor_140;
    uint64_t v75 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v76 = v93;
    sub_1C4496D88();
    *(void *)&long long v110 = MEMORY[0x1E4FBC860];
    sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
    sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
    uint64_t v77 = v95;
    uint64_t v78 = v98;
    sub_1C4497BF8();
    MEMORY[0x1C87806C0](0, v76, v77, v75);
    _Block_release(v75);
    swift_release();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v77, v78);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v76, v96);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C446FF1C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[0] = a3;
  v16[1] = a4;
  uint64_t v4 = *a1;
  uint64_t v5 = type metadata accessor for Capsule();
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v16 - v9;
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  id v14 = (char *)v16 - v13;
  (*(void (**)(uint64_t))(v4 + 248))(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v5) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v5);
  sub_1C4497A58();
  if ((v17 & 1) == 0) {
    sub_1C4496C98();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v5);
}

uint64_t sub_1C447018C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C446F2B0(a1, a4, a2, a3);
}

uint64_t sub_1C44701A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = type metadata accessor for Capsule();
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(uint64_t))(v4 + 248))(v11);
  uint64_t v14 = *(void *)(v5 - 8);
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  if (v4 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, a2, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v5);
    return (*(uint64_t (**)(char *))(*a1 + 256))(v10);
  }
  return result;
}

uint64_t sub_1C44703E8(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v3 = sub_1C4496D68();
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C4496DA8();
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C4496D78();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FF32D4(0, (unint64_t *)&qword_1EBBC1290);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCB48], v9);
  uint64_t v13 = (void *)sub_1C4497A88();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v17;
  *(void *)(v14 + 24) = a2;
  aBlock[4] = sub_1C3F5F2E4;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3F61AC0;
  aBlock[3] = &block_descriptor_119;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1C4496D88();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1C3F70AA8((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
  sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
  sub_1C4497BF8();
  MEMORY[0x1C87806C0](0, v8, v5, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  return swift_release();
}

uint64_t sub_1C447077C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*a1 + 264))(v17);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for Capsule();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)) {
    Capsule.merge<A>(_:)(a2, v11);
  }
  v8(v17, 0);
  uint64_t v19 = 0;
  char v18 = 0;
  uint64_t v12 = a1[3];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = a1;
  v13[5] = &v19;
  v13[6] = &v18;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1C4474634;
  *(void *)(v14 + 24) = v13;
  v17[4] = sub_1C3F5F2E0;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  uint64_t v17[2] = sub_1C3F5F2B8;
  v17[3] = &block_descriptor_107;
  uint64_t v15 = _Block_copy(v17);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    if (!v19 && (v18 & 1) == 0) {
      sub_1C446BC34();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C44709F0(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 104);
  uint64_t v6 = type metadata accessor for CRSyncSubscription();
  uint64_t v7 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C8780160](v7, v6)) {
    goto LABEL_11;
  }
  uint64_t v8 = 4;
  while (1)
  {
    uint64_t v9 = v8 - 4;
    char v10 = sub_1C44974A8();
    sub_1C4497438();
    if ((v10 & 1) == 0) {
      break;
    }
    swift_retain();
    uint64_t v11 = v8 - 3;
    if (__OFADD__(v9, 1)) {
      goto LABEL_10;
    }
LABEL_6:
    id v12 = a2;
    sub_1C4496D38();
    swift_release();

    ++v8;
    if (v11 == MEMORY[0x1C8780160](v5, v6)) {
      goto LABEL_11;
    }
  }
  sub_1C4497DA8();
  uint64_t v11 = v8 - 3;
  if (!__OFADD__(v9, 1)) {
    goto LABEL_6;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C4470B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1C4470BE4()
{
}

void sub_1C4470C48()
{
}

uint64_t sub_1C4470CAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRSyncSubscription();
  uint64_t v3 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C8780160](v3, v2))
  {
    uint64_t v4 = 4;
    do
    {
      uint64_t v5 = v4 - 4;
      char v6 = sub_1C44974A8();
      sub_1C4497438();
      if (v6)
      {
        swift_retain();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_1C4497DA8();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1))
        {
LABEL_9:
          __break(1u);
          break;
        }
      }
      sub_1C4496D48();
      swift_release();
      ++v4;
    }
    while (v7 != MEMORY[0x1C8780160](a1, v2));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4470DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1C4470DEC, 0, 0);
}

uint64_t sub_1C4470DEC(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + 16) + 112);
  *(void *)(v3 + 32) = v4;
  if (v4)
  {
    swift_retain();
    a1 = sub_1C40FE18C;
    a2 = v4;
    a3 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4188298](a1, a2, a3);
}

void sub_1C4470E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C4496498();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v16 - v9;
  if (*(unsigned char *)(a1 + 89) != 1) {
    goto LABEL_8;
  }
  if (qword_1EBBC07F8 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C4497A58();
  swift_release();
  if (v16 == 1)
  {
    unint64_t v11 = *(void *)(a1 + 48);
    if (v11)
    {
      uint64_t v12 = *(void *)(a1 + 40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1C449B490;
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v16 = v12;
      unint64_t v17 = v11;
      sub_1C4497268();
      sub_1C3F70AA8(&qword_1EA39ED28, MEMORY[0x1E4F276F0]);
      sub_1C4498088();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      uint64_t v14 = v16;
      unint64_t v15 = v17;
      *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v13 + 32) = v14;
      *(void *)(v13 + 40) = v15;
      sub_1C44985C8();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    swift_beginAccess();
    sub_1C406F788((uint64_t)v10, v8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    swift_endAccess();
  }
  else
  {
LABEL_8:
    sub_1C446E058();
  }
}

void sub_1C4471160(void (**a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend(self, sel_defaultManager);
  sub_1C4496488();
  uint64_t v7 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  unsigned int v8 = objc_msgSend(v6, sel_fileExistsAtPath_, v7);

  if (v8) {
    sub_1C446D470(a1, a4);
  }
}

void sub_1C4471258(uint64_t a1)
{
  v33[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C4496498();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_initWithFilePresenter_, v9);
  v33[0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, v9 + OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_fileURL, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
LABEL_16:
  }
    __break(1u);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  unint64_t v11 = (void *)sub_1C4496418();
  uint64_t v31 = v8;
  uint64_t v12 = sub_1C4496418();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = v10;
  v13[4] = v33;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = sub_1C4473BE8;
  v14[3] = v13;
  aBlock[4] = sub_1C4473C04;
  void aBlock[5] = v14;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1C4024894;
  aBlock[3] = &block_descriptor_23_0;
  unint64_t v15 = _Block_copy(aBlock);
  uint64_t v30 = a1;
  swift_retain();
  id v16 = v10;
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v16, sel_coordinateReadingItemAtURL_options_writingItemAtURL_options_error_byAccessor_, v11, 0, v12, 0, aBlock, v15);
  _Block_release(v15);

  id v17 = aBlock[0];
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v18 = v17;
  if (!v17)
  {
    id v18 = v33[0];
    if (!v33[0])
    {
LABEL_13:

      (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v5);
      goto LABEL_14;
    }
    id v19 = v33[0];
  }
  id v20 = v17;
  uint64_t v21 = (void *)sub_1C4496398();
  id v22 = objc_msgSend(v21, sel_domain);

  uint64_t v23 = sub_1C44971B8();
  uint64_t v25 = v24;

  if (v23 == sub_1C44971B8() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v27 = sub_1C44982E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
LABEL_12:
      sub_1C446B4BC(v18);

      goto LABEL_13;
    }
  }
  uint64_t v28 = (void *)sub_1C4496398();
  id v29 = objc_msgSend(v28, sel_code);

  if (v29 != (id)260) {
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v5);

LABEL_14:
  swift_release();
}

void sub_1C447170C(void (**a1)(char *, uint64_t), uint64_t a2, void *a3, uint64_t a4, void **a5)
{
  uint64_t v43 = a5;
  uint64_t v44 = a4;
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = type metadata accessor for Capsule();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_defaultManager);
  unint64_t v45 = a1;
  sub_1C4496488();
  uint64_t v14 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  LOBYTE(a1) = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  if (a1)
  {
    uint64_t v16 = v44;
    id v17 = v45;
  }
  else
  {
    uint64_t v18 = a3[6];
    if (v18)
    {
      id v19 = (void *)a3[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1C449B490;
      id v46 = v19;
      uint64_t v47 = v18;
      swift_bridgeObjectRetain();
      sub_1C4497268();
      id v21 = v46;
      uint64_t v22 = v47;
      *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v20 + 32) = v21;
      *(void *)(v20 + 40) = v22;
      sub_1C44985C8();
      uint64_t v15 = swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t))(*a3 + 248))(v15);
    int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v11, 1, v7);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v25 = *a3;
    if (v23 == 1)
    {
      char v26 = (*(uint64_t (**)(uint64_t))(v25 + 368))(v24);
      id v27 = objc_msgSend(v12, sel_defaultManager);
      id v17 = v45;
      if (v26)
      {
        uint64_t v28 = (void *)sub_1C4496418();
        id v46 = 0;
        unsigned int v29 = objc_msgSend(v27, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v28, 1, 0, &v46);

        if (!v29)
        {
          id v40 = v46;
          uint64_t v41 = sub_1C44963A8();

          swift_willThrow();
          uint64_t v39 = *v43;
          *uint64_t v43 = (void *)v41;

          return;
        }
        id v30 = v46;
      }
      else
      {
        sub_1C4496488();
        uint64_t v31 = (void *)sub_1C4497188();
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_createFileAtPath_contents_attributes_, v31, 0, 0);
      }
      uint64_t v16 = v44;
    }
    else
    {
      uint64_t v16 = v44;
      id v17 = v45;
      (*(void (**)(void, uint64_t))(v25 + 496))(v45, v44);
    }
    uint64_t v32 = sub_1C446B0FC((uint64_t)v17);
    uint64_t v33 = (void *)a3[10];
    a3[10] = v32;
  }
  objc_msgSend(self, sel_addFilePresenter_, a3[2]);
  uint64_t v34 = a3[6];
  if (v34)
  {
    uint64_t v35 = (void *)a3[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C449B490;
    id v46 = v35;
    uint64_t v47 = v34;
    swift_bridgeObjectRetain();
    sub_1C4497268();
    id v37 = v46;
    uint64_t v38 = v47;
    *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v36 + 32) = v37;
    *(void *)(v36 + 40) = v38;
    sub_1C44985C8();
    swift_bridgeObjectRelease();
  }
  sub_1C446D470(v17, v16);
}

uint64_t sub_1C4471C10()
{
  sub_1C446A4AC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C4471C44(void *a1)
{
  uint64_t v2 = sub_1C4496498();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = a1[6];
  if (v9)
  {
    uint64_t v10 = a1[5];
    swift_beginAccess();
    if (*(void *)(a1[12] + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C449B490;
      uint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v32 = v10;
      unint64_t v33 = v9;
      sub_1C4497268();
      sub_1C3F70AA8(&qword_1EBBBCA80, MEMORY[0x1E4F276F0]);
      swift_bridgeObjectRetain();
      sub_1C4497698();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v32;
      unint64_t v13 = v33;
      *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v11 + 32) = v12;
      *(void *)(v11 + 40) = v13;
      sub_1C44985C8();
      swift_bridgeObjectRelease();
    }
  }
  char v26 = a1 + 12;
  swift_beginAccess();
  uint64_t v14 = a1[12];
  uint64_t v15 = *(void *)(v14 + 56);
  uint64_t v27 = v14 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v30 = v3 + 16;
  uint64_t v31 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v29 = v3 + 48;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v21 | (v20 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(void *)(v14 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
      goto LABEL_26;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1C446E058();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v18) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v28) {
      goto LABEL_25;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v20;
    if (!v24)
    {
      int64_t v20 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_25;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v20);
      if (!v24)
      {
        int64_t v20 = v23 + 2;
        if (v23 + 2 >= v28) {
          goto LABEL_25;
        }
        unint64_t v24 = *(void *)(v27 + 8 * v20);
        if (!v24) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v18 = (v24 - 1) & v24;
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v28)
  {
LABEL_25:
    (*v31)(v8, 1, 1, v2);
LABEL_26:
    swift_release();
    *char v26 = MEMORY[0x1E4FBC870];
    return swift_bridgeObjectRelease();
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v20 = v25;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v20 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v20 >= v28) {
      goto LABEL_25;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v20);
    ++v25;
    if (v24) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C44720E4()
{
  swift_retain();
  sub_1C446E38C();
  return swift_release();
}

uint64_t sub_1C4472124()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C4472154()
{
  return sub_1C4497A58();
}

uint64_t CRBinaryFileSync.read(from:context:coordinator:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C44964B8();
  if (!v2) {
    return Capsule<>.init(serializedData:allowedAppFormats:)(result, v6, 0, *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
  }
  return result;
}

uint64_t CRBinaryFileSync.write(_:to:context:coordinator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C44736A4(a1, a2, a3, a5);
}

uint64_t sub_1C4472258@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return CRBinaryFileSync.read(from:context:coordinator:)(a1, a2);
}

uint64_t sub_1C4472270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C44736A4(a1, a2, a3, a5);
}

uint64_t CRCustomFileSyncManager.disableReadingInBackground.getter()
{
  sub_1C4497A58();
  return v1;
}

uint64_t CRCustomFileSyncManager.disableReadingInBackground.setter(char a1)
{
  return sub_1C446DA04(a1);
}

uint64_t (*CRCustomFileSyncManager.disableReadingInBackground.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  sub_1C4497A58();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a1 + 8);
  return sub_1C4472398;
}

uint64_t sub_1C4472398(uint64_t a1)
{
  return sub_1C446DA04(*(unsigned char *)(a1 + 9));
}

uint64_t CRCustomFileSyncManager.__allocating_init(_:sync:at:version:)(void *a1, char *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v29 = a1;
  uint64_t v7 = *(void *)(v4 + 80);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = a2;
  MEMORY[0x1F4188790](a1);
  int64_t v28 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C4496498();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v10 = v26;
  uint64_t v27 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  uint64_t v13 = sub_1C4497B38();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v26 - v15;
  LOBYTE(a4) = *a4;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)&v26 - v15, v31, v13);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v18 = a3;
  uint64_t v19 = a3;
  uint64_t v20 = v27;
  v17(v12, v19, v27);
  char v32 = (char)a4;
  type metadata accessor for CRBinaryFileSync();
  uint64_t v21 = (uint64_t)v28;
  swift_dynamicCast();
  uint64_t v22 = v29;
  uint64_t v23 = sub_1C4143DC8(v29, (uint64_t)v16, (uint64_t)v12, v21);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v21, v7);
  unint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v16, v13);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v18, v20);
  v24(v31, v13);
  return v23;
}

uint64_t CRCustomFileSyncManager.__allocating_init(_:sync:at:)(void *a1, char *a2, uint64_t a3)
{
  uint64_t v30 = a1;
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v31 = *(void *)(v5 - 8);
  char v32 = a2;
  MEMORY[0x1F4188790](a1);
  uint64_t v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496498();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v8 = v27;
  uint64_t v28 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  uint64_t v11 = sub_1C4497B38();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - v13;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)&v26 - v13, v32, v11);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v16 = a3;
  uint64_t v17 = a3;
  uint64_t v18 = v28;
  v15(v10, v17, v28);
  char v33 = 1;
  type metadata accessor for CRBinaryFileSync();
  uint64_t v19 = (uint64_t)v29;
  swift_dynamicCast();
  uint64_t v20 = v30;
  uint64_t v21 = (uint64_t)v10;
  uint64_t v22 = v19;
  uint64_t v23 = sub_1C4143DC8(v30, (uint64_t)v14, v21, v19);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v22, v5);
  unint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v14, v11);

  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v16, v18);
  v24(v32, v11);
  return v23;
}

uint64_t sub_1C44729F8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C4472AF0(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1C4472BD0;
  return v5(v2 + 32);
}

uint64_t sub_1C4472BD0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

void *sub_1C4472CE4(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v83 = a3;
  uint64_t v79 = a2;
  unint64_t v73 = a1;
  uint64_t v7 = *v5;
  uint64_t v72 = *(void *)(*v5 + 80);
  uint64_t v82 = *(void *)(v7 + 88);
  type metadata accessor for Capsule();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v77 = *(void *)(v8 - 8);
  uint64_t v78 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v76 = (char *)v56 - v9;
  uint64_t v71 = sub_1C4496498();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v70 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1C4497A38();
  uint64_t v84 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  char v81 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C4497A08();
  MEMORY[0x1F4188790](v12);
  uint64_t v80 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C4496DA8();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C4496678();
  uint64_t v63 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1C3FF32D4(0, (unint64_t *)&qword_1EBBC1290);
  v86[0] = 0;
  v86[1] = 0xE000000000000000;
  sub_1C4497D28();
  swift_bridgeObjectRelease();
  v86[0] = 0xD000000000000012;
  v86[1] = 0x80000001C44B5FF0;
  sub_1C4496668();
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E0);
  uint64_t v21 = swift_allocObject();
  long long v65 = xmmword_1C449B4A0;
  *(_OWORD *)(v21 + 16) = xmmword_1C449B4A0;
  char v22 = sub_1C4496658();
  uint64_t v23 = MEMORY[0x1E4FBC358];
  uint64_t v24 = MEMORY[0x1E4FBC3B0];
  *(void *)(v21 + 56) = MEMORY[0x1E4FBC358];
  *(void *)(v21 + 64) = v24;
  uint64_t v25 = v23;
  *(unsigned char *)(v21 + 32) = v22;
  uint64_t v26 = sub_1C4496658();
  *(void *)(v21 + 96) = v25;
  *(void *)(v21 + 104) = v24;
  *(unsigned char *)(v21 + 72) = BYTE1(v26);
  sub_1C44971E8();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v62 = v18 + 8;
  uint64_t v64 = v27;
  v27(v20, v17);
  sub_1C4497268();
  swift_bridgeObjectRelease();
  v56[1] = v16;
  sub_1C4496D88();
  v86[0] = MEMORY[0x1E4FBC860];
  uint64_t v60 = sub_1C3F70AA8(qword_1EBBC1060, MEMORY[0x1E4FBCC10]);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC1040);
  uint64_t v61 = sub_1C3F70AF0((unint64_t *)&qword_1EBBC1050, (uint64_t *)&unk_1EBBC1040);
  uint64_t v58 = v12;
  sub_1C4497BF8();
  unsigned int v57 = *MEMORY[0x1E4FBCC58];
  uint64_t v28 = *(void (**)(char *))(v84 + 104);
  v84 += 104;
  uint64_t v29 = v68;
  v28(v81);
  v5[3] = sub_1C4497A78();
  strcpy((char *)v86, "model-atomic-");
  HIWORD(v86[1]) = -4864;
  sub_1C4496668();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v65;
  char v31 = sub_1C4496658();
  uint64_t v32 = MEMORY[0x1E4FBC358];
  *(void *)(v30 + 56) = MEMORY[0x1E4FBC358];
  uint64_t v33 = MEMORY[0x1E4FBC3B0];
  *(void *)(v30 + 64) = MEMORY[0x1E4FBC3B0];
  *(unsigned char *)(v30 + 32) = v31;
  uint64_t v34 = sub_1C4496658();
  *(void *)(v30 + 96) = v32;
  *(void *)(v30 + 104) = v33;
  *(unsigned char *)(v30 + 72) = BYTE1(v34);
  sub_1C44971E8();
  v64(v20, v63);
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4496D88();
  v86[0] = MEMORY[0x1E4FBC860];
  uint64_t v35 = v69;
  sub_1C4497BF8();
  ((void (*)(char *, void, uint64_t))v28)(v81, v57, v29);
  v5[4] = sub_1C4497A78();
  v5[7] = 0;
  *((unsigned char *)v5 + 64) = 0;
  v5[10] = 0;
  *((_WORD *)v5 + 44) = 0;
  v5[12] = MEMORY[0x1E4FBC870];
  type metadata accessor for CRSyncSubscription();
  v5[13] = sub_1C4496EB8();
  v5[14] = 0;
  id v37 = v73;
  uint64_t v36 = v74;
  v5[9] = (uint64_t)v73;
  uint64_t v38 = v75;
  void v5[5] = v36;
  v5[6] = v38;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v41 = v70;
  uint64_t v40 = v71;
  v39(v70, (uint64_t)v83, v71);
  uint64_t v42 = (objc_class *)type metadata accessor for CRFileSyncPresenter();
  uint64_t v43 = (char *)objc_allocWithZone(v42);
  *(void *)&v43[OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_manager + 8] = 0;
  swift_unknownObjectWeakInit();
  v39(&v43[OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_fileURL], (uint64_t)v41, v40);
  id v44 = objc_allocWithZone(MEMORY[0x1E4F28F08]);
  id v45 = v37;
  id v46 = v43;
  id v47 = objc_msgSend(v44, sel_init);
  *(void *)&v46[OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_queue] = v47;

  v85.receiver = v46;
  v85.super_class = v42;
  uint64_t v48 = v40;
  long long v49 = (char *)objc_msgSendSuper2(&v85, sel_init);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v35 + 8);
  v50(v41, v40);
  v6[2] = v49;
  *(void *)&v49[OBJC_IVAR____TtC9Coherence19CRFileSyncPresenter_manager + 8] = &off_1F1F9AF40;
  swift_unknownObjectWeakAssign();
  uint64_t v51 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v79, v78);
  (*(void (**)(char *))(*v6 + 256))(v51);
  type metadata accessor for _CRFileSyncManager();
  swift_getWitnessTable();
  type metadata accessor for AsyncUpdatesActor();
  swift_retain();
  uint64_t v52 = sub_1C4208F78();
  swift_release();
  v6[14] = v52;
  swift_release();
  id v53 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v54 = qword_1EBBC0810;
  swift_retain();
  if (v54 != -1) {
    swift_once();
  }
  objc_msgSend(v53, sel_addObserver_selector_name_object_, v6, sel_willEnterForeground, qword_1EBBC5A28, 0);

  swift_release();
  sub_1C446E36C();
  v50(v83, v48);
  return v6;
}

uint64_t sub_1C44736A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v13 = *v4;
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v8 = type metadata accessor for Capsule();
  uint64_t result = Capsule<>.serializedData(_:version:allowedAppFormats:)(a3, &v13, 0, v8, v7);
  if (!v5)
  {
    uint64_t v11 = result;
    unint64_t v12 = v10;
    sub_1C4496578();
    return sub_1C3F7E2CC(v11, v12);
  }
  return result;
}

uint64_t type metadata accessor for CRBinaryFileSync()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C447376C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CRCustomFileSyncManager.disableReadingInBackground.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C447379C(char *a1)
{
  return CRCustomFileSyncManager.disableReadingInBackground.setter(*a1);
}

uint64_t sub_1C44737C4()
{
  return 16;
}

__n128 sub_1C44737D0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C44737DC()
{
  return type metadata accessor for CRFileSyncPresenter();
}

uint64_t type metadata accessor for CRFileSyncPresenter()
{
  uint64_t result = qword_1EBBBBF00;
  if (!qword_1EBBBBF00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C4473830()
{
  uint64_t result = sub_1C4496498();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C44738D8()
{
  type metadata accessor for Capsule();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBC00F0);
  uint64_t result = sub_1C4496CE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRSyncSubscription()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C44739B8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for _CRFileSyncManager()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1C4473A60(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C4473B2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1C4473B54()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C4473B70()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C4473B8C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1C4473BD4()
{
  return sub_1C4471C44(v0);
}

void sub_1C4473BDC()
{
  sub_1C4471258(v0);
}

void sub_1C4473BE8(void (**a1)(char *, uint64_t), uint64_t a2)
{
  sub_1C447170C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void ***)(v2 + 32));
}

uint64_t sub_1C4473BF4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4473C04(uint64_t a1, uint64_t a2)
{
  return sub_1C402486C(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

void sub_1C4473C10(void (**a1)(char *, uint64_t), uint64_t a2)
{
  sub_1C4471160(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C4473C1C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4473C2C()
{
  uint64_t v1 = sub_1C4496498();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1C4473CF8()
{
  uint64_t v1 = *(void *)(sub_1C4496498() - 8);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_1C4470E6C(v2, v3);
}

uint64_t sub_1C4473D5C()
{
  return objectdestroy_41Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C4473D74()
{
  type metadata accessor for Capsule();
  uint64_t v1 = *(void *)(v0 + 32);
  return sub_1C4470CAC(v1);
}

uint64_t sub_1C4473DFC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = type metadata accessor for Capsule();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = (uint64_t *)(v0 + v4);
  unint64_t v7 = *(void *)(v0 + v4 + 8);
  if (v7 >> 60 != 15) {
    sub_1C3F7E2CC(*v6, v7);
  }
  uint64_t v8 = (char *)v6 + *(int *)(v2 + 36);
  uint64_t v9 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v1)) {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v1);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, v4 + v5, v3 | 7);
}

uint64_t sub_1C4473F80()
{
  uint64_t v2 = *(void *)(type metadata accessor for Capsule() - 8);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1C40182C8;
  return MEMORY[0x1F4188298](sub_1C4470DEC, 0, 0);
}

uint64_t sub_1C4474070()
{
  uint64_t v1 = sub_1C4496498();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

void sub_1C4474158(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C4496498() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1C4470B6C(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_1C4474208()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C4474218()
{
  *(unsigned char *)(v0 + 88) = 1;
}

uint64_t sub_1C4474224()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4474234()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C447426C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C44742AC()
{
  return sub_1C44709F0(*(void *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_1C44742B8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 88);
}

uint64_t sub_1C44742C4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C40182C8;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA3A14D8 + dword_1EA3A14D8);
  return v6(a1, v4);
}

uint64_t sub_1C447437C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

void sub_1C44743B4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 89) = *(unsigned char *)(v0 + 24);
}

void sub_1C44743C4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 89);
}

void sub_1C44743D0(unsigned char *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v2 + 56);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 56) = v5;
    *a1 = *(unsigned char *)(v2 + 88);
  }
}

uint64_t sub_1C44743F4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = type metadata accessor for Capsule();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  swift_release();
  unint64_t v6 = (uint64_t *)(v0 + v4);
  unint64_t v7 = *(void *)(v0 + v4 + 8);
  if (v7 >> 60 != 15) {
    sub_1C3F7E2CC(*v6, v7);
  }
  uint64_t v8 = (char *)v6 + *(int *)(v2 + 36);
  uint64_t v9 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v1)) {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v1);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, v4 + v5, v3 | 7);
}

uint64_t sub_1C4474570()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[5];
  uint64_t v3 = *(void *)(type metadata accessor for Capsule() - 8);
  uint64_t v4 = (void *)v0[6];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1C447077C(v4, v5, v1, v2);
}

uint64_t sub_1C44745FC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C4474634()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + 56);
  BOOL v3 = __OFSUB__(v2, 1);
  uint64_t v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = (void *)v0[5];
    uint64_t v5 = (unsigned char *)v0[6];
    *(void *)(v1 + 56) = v4;
    void *v6 = v4;
    *uint64_t v5 = *(unsigned char *)(v1 + 88);
  }
}

uint64_t sub_1C4474660()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4474670()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C44746A8()
{
  return sub_1C44703E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C44746B0()
{
  return objectdestroy_41Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C44746C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for Capsule() - 8);
  uint64_t v2 = *(uint64_t **)(v0 + 32);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C44701A0(v2, v3);
}

uint64_t type metadata accessor for _CRFileSyncManager.CRSyncPublisher()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C4474760()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4474798()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C4474820()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C44748E4()
{
  return sub_1C446FF1C(*(uint64_t **)(v0 + 48), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)), *(void *)(v0 + 24), *(void *)(v0 + 40));
}

uint64_t sub_1C4474928()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

__n128 WeakRef.init(id:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C44749D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  unint64_t v6 = v2[1];
  v8[0] = v5;
  v8[1] = v6;
  sub_1C3F7E324(v5, v6);
  sub_1C405557C(v8, *(void *)(a1 + 16), a2);
  return sub_1C3F7E2CC(v5, v6);
}

uint64_t *WeakRef.subscript.getter(uint64_t a1, uint64_t a2)
{
  long long v6 = *v2;
  uint64_t v4 = type metadata accessor for Capsule();
  return Capsule.subscript.getter((uint64_t *)&v6, v4, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

void WeakRef.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v74 = a2;
  unint64_t v73 = a4;
  uint64_t v86 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v88 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  char v81 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v80 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v85 = (uint64_t)&v72 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v78 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v72 - v13;
  uint64_t v89 = type metadata accessor for Proto_Reference(0);
  uint64_t v15 = MEMORY[0x1F4188790](v89);
  uint64_t v79 = (uint64_t)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v84 = (uint64_t)&v72 - v17;
  uint64_t v18 = type metadata accessor for Proto_Value(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v77 = (uint64_t)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v87 = (char *)&v72 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v83 = (uint64_t)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v72 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v72 - v29;
  uint64_t v91 = a1;
  uint64_t v31 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v31, (uint64_t)v30, &qword_1EBBC0540);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  unsigned int v33 = v32(v30, 1, v18);
  sub_1C3F962E0((uint64_t)v30, &qword_1EBBC0540);
  if (v33 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v34 = 0xD000000000000017;
    *(void *)(v34 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v34 + 16) = 0;
    swift_willThrow();
    swift_release();
    return;
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v91;
  sub_1C3F970C4(v31, (uint64_t)v28, &qword_1EBBC0540);
  if (v32(v28, 1, v18) == 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v32;
  uint64_t v36 = v87;
  sub_1C3F8AB70((uint64_t)v28, (uint64_t)v87, type metadata accessor for Proto_Value);
  uint64_t v37 = *(void *)&v36[*(int *)(v18 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v37, (uint64_t)v14, &qword_1EBBBF8A0);
  uint64_t v38 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48);
  int v40 = v39(v14, 1, v38);
  uint64_t v72 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v39;
  if (v40 == 1)
  {
    swift_retain();
    sub_1C3F962E0((uint64_t)v14, &qword_1EBBBF8A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      uint64_t v41 = (uint64_t)v14;
      uint64_t v42 = v84;
      sub_1C3F8AB70(v41, v84, type metadata accessor for Proto_Reference);
      goto LABEL_12;
    }
    swift_retain();
    sub_1C3F8B2E8((uint64_t)v14, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  uint64_t v42 = v84;
  sub_1C4496888();
  uint64_t v43 = *(int *)(v89 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v42 + v43) = qword_1EBBBC808;
LABEL_12:
  swift_retain();
  sub_1C3F8B2E8((uint64_t)v87, type metadata accessor for Proto_Value);
  uint64_t v44 = *(void *)(v42 + *(int *)(v89 + 20))
      + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  uint64_t v45 = v85;
  sub_1C3F970C4(v44, v85, &qword_1EBBC0560);
  id v46 = *(char **)(v88 + 48);
  v88 += 48;
  uint64_t v87 = v46;
  LODWORD(v44) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v46)(v45, 1, v86);
  sub_1C3F962E0(v45, &qword_1EBBC0560);
  sub_1C3F8B2E8(v42, type metadata accessor for Proto_Reference);
  if (v44 == 1)
  {
    sub_1C3FE3FF0();
    id v47 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v48 = xmmword_1C44AC140;
    *(unsigned char *)(v48 + 16) = 0;
    swift_willThrow();
    uint64_t v49 = v91;
LABEL_27:
    uint64_t v65 = swift_retain();
    CRKeyPath.init(from:)(v65, v90);
    uint64_t v64 = 0;

    goto LABEL_28;
  }
  uint64_t v50 = *(void *)(inited + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  uint64_t v51 = v83;
  sub_1C3F970C4(v50, v83, &qword_1EBBC0540);
  if (v35(v51, 1, v18) == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v52 = v77;
  sub_1C3F8AB70(v51, v77, type metadata accessor for Proto_Value);
  uint64_t v53 = *(void *)(v52 + *(int *)(v18 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v54 = v53;
  uint64_t v55 = v78;
  sub_1C3F970C4(v54, v78, &qword_1EBBBF8A0);
  int v56 = v72(v55, 1, v38);
  uint64_t v49 = v91;
  if (v56 == 1)
  {
    sub_1C3F962E0(v55, &qword_1EBBBF8A0);
    uint64_t v57 = (uint64_t)v80;
    uint64_t v58 = v79;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v58 = v79;
    if (EnumCaseMultiPayload == 7)
    {
      sub_1C3F8AB70(v55, v79, type metadata accessor for Proto_Reference);
      uint64_t v57 = (uint64_t)v80;
      goto LABEL_23;
    }
    sub_1C3F8B2E8(v55, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    uint64_t v57 = (uint64_t)v80;
  }
  sub_1C4496888();
  uint64_t v60 = *(int *)(v89 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v58 + v60) = qword_1EBBBC808;
  swift_retain();
LABEL_23:
  sub_1C3F8B2E8(v52, type metadata accessor for Proto_Value);
  uint64_t v61 = *(void *)(v58 + *(int *)(v89 + 20))
      + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  sub_1C3F970C4(v61, v57, &qword_1EBBC0560);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v87)(v57, 1, v86) == 1)
  {
    uint64_t v62 = v81;
    *char v81 = MEMORY[0x1E4FBC860];
    v62[1] = sub_1C4496868();
    uint64_t v62[2] = v63;
    sub_1C4496888();
    sub_1C3F962E0(v57, &qword_1EBBC0560);
  }
  else
  {
    uint64_t v62 = v81;
    sub_1C3F8AB70(v57, (uint64_t)v81, type metadata accessor for Proto_KeyPath);
  }
  id v47 = v82;
  sub_1C3F8B2E8(v58, type metadata accessor for Proto_Reference);
  swift_retain();
  sub_1C3F766DC((uint64_t)v62, v90);
  uint64_t v64 = v47;
  if (v47) {
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v66 = v90[0];
  unint64_t v67 = v90[1];
  uint64_t v68 = v49;
  uint64_t v69 = *(void *)(v49 + 16);
  if (!v69)
  {
LABEL_34:
    __break(1u);
    return;
  }
  uint64_t v70 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v69 + 176);
  swift_retain();
  sub_1C3F7E324(v66, v67);
  v70(v74, v90, v68, 1, v74, v75);
  if (v64)
  {
    sub_1C3F7E2CC(v66, v67);
    swift_release();
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v66, v67);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v66, v67);
    uint64_t v71 = v73;
    uint64_t *v73 = v66;
    v71[1] = v67;
  }
}

uint64_t WeakRef.id.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C3F7E324(v2, v3);
}

uint64_t WeakRef.id.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C3F7E2CC(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*WeakRef.id.modify())()
{
  return nullsub_1;
}

uint64_t WeakRef.init(id:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C4496678();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v16 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9D210);
  uint64_t v17 = v8;
  uint64_t v9 = sub_1C3F5DF48();
  unint64_t v11 = v10;
  sub_1C4496588();
  sub_1C3F7E2CC(v9, v11);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  uint64_t v13 = v16;
  uint64_t v14 = v17;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v12)(a1, v4);
  *a2 = v13;
  a2[1] = v14;
  return result;
}

double WeakRef.init<A>(_:_:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, __n128 *a4@<X8>)
{
  swift_retain();
  sub_1C40574F0(a1, a2, a3, &v9);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  double result = v9.n128_f64[0];
  *a4 = v9;
  return result;
}

double WeakRef.init<A>(_:_:)@<D0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  swift_release();
  uint64_t v4 = type metadata accessor for Capsule();
  Capsule<>.rootID.getter((uint64_t *)&v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  double result = *(double *)&v6;
  *a2 = v6;
  return result;
}

double WeakRef.init<A>(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 48))(&v8, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  double result = *(double *)&v8;
  *a4 = v8;
  return result;
}

uint64_t WeakRef.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v6 = *v4;
  return (*(uint64_t (**)(long long *, void, void, uint64_t))(a4 + 16))(&v6, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

{
  long long *v4;
  long long v6;

  long long v6 = *v4;
  return (*(uint64_t (**)(long long *, void, void, uint64_t))(a4 + 40))(&v6, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C4475AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + a2 - 24);
  uint64_t v5 = *(void *)(a3 + a2 - 8);
  uint64_t v6 = type metadata accessor for WeakRef();
  return WeakRef.subscript.getter(a2, v6, v4, v5);
}

uint64_t sub_1C4475B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v7 = *(void *)(a4 + a3 - 8);
  uint64_t v8 = type metadata accessor for WeakRef();
  return sub_1C4477544(a1, a3, v8, v6, v7);
}

uint64_t WeakRef.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C4477544(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a2, a4);
  uint64_t v8 = sub_1C4497B38();
  __n128 v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(a1, v8);
}

void (*WeakRef.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  unint64_t v10 = malloc(0x58uLL);
  *a1 = v10;
  v10[1] = a4;
  _OWORD v10[2] = a5;
  *unint64_t v10 = a3;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = sub_1C4497B38();
  uint64_t v10[3] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v10[4] = v13;
  size_t v14 = *(void *)(v13 + 64);
  v10[5] = malloc(v14);
  uint64_t v15 = malloc(v14);
  uint64_t v16 = *(void *)(a4 - 8);
  uint64_t v17 = v16;
  v10[6] = v15;
  v10[7] = v16;
  uint64_t v18 = malloc(*(void *)(v16 + 64));
  uint64_t v20 = *v5;
  uint64_t v19 = v5[1];
  v10[8] = v18;
  v10[9] = v20;
  v10[10] = v19;
  (*(void (**)(void))(v17 + 16))();
  v22[0] = v20;
  v22[1] = v19;
  (*(void (**)(void *, uint64_t, void, uint64_t, uint64_t))(a5 + 40))(v22, v11, *(void *)(a3 + 24), a4, a5);
  return sub_1C4475E3C;
}

void sub_1C4475E3C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[7];
  uint64_t v4 = (void *)(*a1)[8];
  uint64_t v6 = (void *)(*a1)[5];
  uint64_t v5 = (void *)(*a1)[6];
  uint64_t v7 = (*a1)[3];
  uint64_t v8 = (*a1)[4];
  uint64_t v9 = (*a1)[1];
  if (a2)
  {
    uint64_t v11 = **a1;
    uint64_t v12 = (*a1)[2];
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[5], v5, v7);
    sub_1C4477544((uint64_t)v6, (uint64_t)v4, v11, v9, v12);
    (*(void (**)(void *, uint64_t))(v3 + 8))(v4, v9);
    unint64_t v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v6, v7);
    v10(v5, v7);
  }
  else
  {
    sub_1C4477544((uint64_t)v5, (uint64_t)v4, **a1, v9, (*a1)[2]);
    (*(void (**)(void *, uint64_t))(v3 + 8))(v4, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
  }
  free(v4);
  free(v5);
  free(v6);
  free(v2);
}

uint64_t WeakRef.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v6 = v2[1];
  v8[0] = *v2;
  uint64_t v5 = v8[0];
  v8[1] = v6;
  swift_retain();
  sub_1C3F7E324(v8[0], v6);
  sub_1C405557C(v8, *(void *)(a1 + 16), a2);
  swift_release();
  return sub_1C3F7E2CC(v5, v6);
}

uint64_t sub_1C447603C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v6 = a1[1];
  sub_1C3F7E324(*a1, v6);
  uint64_t v4 = type metadata accessor for WeakRef();
  WeakRef.subscript.getter(v4, a2);
  return sub_1C3F7E2CC(v3, v6);
}

uint64_t sub_1C44760D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = type metadata accessor for WeakRef();
  swift_retain();
  sub_1C4477674(a1, v4, v5);
  return swift_release();
}

uint64_t WeakRef.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C4477674(a1, a2, a3);
  swift_release();
  uint64_t v4 = sub_1C4497B38();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(a1, v4);
}

void (*WeakRef.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x40uLL);
  *a1 = v7;
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = sub_1C4497B38();
  void v7[2] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v7[3] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[4] = malloc(v10);
  uint64_t v11 = malloc(v10);
  uint64_t v12 = *v3;
  unint64_t v13 = v3[1];
  v7[5] = v11;
  void v7[6] = v12;
  v7[7] = v13;
  sub_1C3F7E324(v12, v13);
  WeakRef.subscript.getter(a3, (uint64_t)v11);
  sub_1C3F7E2CC(v12, v13);
  return sub_1C4476300;
}

void sub_1C4476300(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  uint64_t v8 = (*a1)[1];
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    swift_retain();
    sub_1C4477674((uint64_t)v3, v7, v8);
    swift_release();
    uint64_t v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    swift_retain();
    sub_1C4477674((uint64_t)v4, v7, v8);
    swift_release();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t WeakRef.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    long long v6 = *(_OWORD *)a1;
    uint64_t v11 = *(void *)(a1 + 16);
    v10[0] = *v3;
    v10[1] = v6;
    type metadata accessor for Capsule<>.ObservableDifference();
    return Capsule<>.ObservableDifference.subscript.getter(v10, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
  }
  else
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
    return v9(a3, 1, 1, AssociatedTypeWitness);
  }
}

uint64_t WeakRef.visitReferences(_:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v9[0] = v4;
  v9[1] = v5;
  return (*(uint64_t (**)(void *, void, void, uint64_t, uint64_t))(v7 + 16))(v9, *(void *)(a2 + 16), *(void *)(a2 + 24), v6, v7);
}

uint64_t WeakRef.copy(renamingReferences:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  unint64_t v4 = v2[1];
  uint64_t v6 = *a1;
  if (*(void *)(*a1 + 16))
  {
    sub_1C3F7E324(v5, v4);
    uint64_t v7 = sub_1C3F850CC(v5, v4);
    if (v8)
    {
      uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
      uint64_t v10 = *v9;
      unint64_t v11 = v9[1];
      sub_1C3F7E324(*v9, v11);
      uint64_t result = sub_1C3F7E2CC(v5, v4);
      *a2 = v10;
      a2[1] = v11;
      return result;
    }
    sub_1C3F7E2CC(v5, v4);
  }
  *a2 = v5;
  a2[1] = v4;
  return sub_1C3F7E324(v5, v4);
}

uint64_t WeakRef.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v4 = a1;
  swift_bridgeObjectRetain();
  WeakRef.copy(renamingReferences:)((uint64_t *)&v4, a2);
  return swift_bridgeObjectRelease();
}

uint64_t static WeakRef.canContainAssets.getter()
{
  return 0;
}

uint64_t WeakRef.ObservableDifference.contents.getter@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = v1[1];
  if ((v2 >> 60) > 0xF || ((1 << (v2 >> 60)) & 0x8880) == 0)
  {
    uint64_t v4 = *v1;
    *a1 = *v1;
    a1[1] = v2;
    return sub_1C3F7E324(v4, v2);
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1C449BDD0;
  }
  return result;
}

uint64_t WeakRef.ObservableDifference.didChange.getter()
{
  return ((int)(*(void *)(v0 + 8) >> 60 << 28) >> 28 > -6) & (0x1011u >> (((*(void *)(v0 + 8) >> 60) + 5) & 0xF));
}

uint64_t WeakRef.ObservableDifference.isIdentityChanged.getter()
{
  long long v1 = *v0;
  long long v3 = xmmword_1C449BDD0;
  long long v4 = v1;
  return static WeakRef.ObservableDifference.== infix(_:_:)((uint64_t *)&v4, (uint64_t)&v3) & 1;
}

uint64_t static WeakRef.ObservableDifference.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v5 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unint64_t v6 = v2 >> 60;
  if (v2 >> 60 == 7)
  {
    if (v4 >> 60 != 7) {
      goto LABEL_14;
    }
  }
  else if (v6 == 11)
  {
    if (v4 >> 60 != 11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v6 != 15)
    {
      if ((v4 >> 60) > 0xF || ((1 << (v4 >> 60)) & 0x8880) == 0)
      {
        v11[0] = *a1;
        v11[1] = v2;
        v10[0] = v5;
        v10[1] = v4;
        sub_1C44777A4(v5, v4);
        sub_1C44777A4(v3, v2);
        sub_1C44777A4(v5, v4);
        sub_1C44777A4(v3, v2);
        char v7 = static WeakRef.== infix(_:_:)(v11, v10);
        sub_1C44777CC(v3, v2);
        sub_1C44777CC(v5, v4);
        sub_1C44777CC(v5, v4);
        sub_1C44777CC(v3, v2);
        return v7 & 1;
      }
      goto LABEL_14;
    }
    if (v4 >> 60 != 15)
    {
LABEL_14:
      sub_1C44777A4(*(void *)a2, *(void *)(a2 + 8));
      sub_1C44777A4(v3, v2);
      sub_1C44777CC(v3, v2);
      sub_1C44777CC(v5, v4);
      char v7 = 0;
      return v7 & 1;
    }
  }
  sub_1C44777CC(*a1, v2);
  sub_1C44777CC(v5, v4);
  char v7 = 1;
  return v7 & 1;
}

uint64_t static WeakRef.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C3F7E324(*a1, v3);
  sub_1C3F7E324(v4, v5);
  char v6 = sub_1C3FAD630(v2, v3, v4, v5);
  sub_1C3F7E2CC(v4, v5);
  sub_1C3F7E2CC(v2, v3);
  return v6 & 1;
}

uint64_t sub_1C4476998(uint64_t *a1, uint64_t a2)
{
  return static WeakRef.ObservableDifference.== infix(_:_:)(a1, a2);
}

uint64_t WeakRef.observableDifference(from:with:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  uint64_t v10 = *v4;
  unint64_t v11 = v4[1];
  sub_1C3F7E324(*v4, v11);
  sub_1C3F7E324(v8, v9);
  char v12 = sub_1C3FAD630(v10, v11, v8, v9);
  sub_1C3F7E2CC(v8, v9);
  uint64_t result = sub_1C3F7E2CC(v10, v11);
  if (v12)
  {
    sub_1C3F970C4(a2, (uint64_t)v20, &qword_1EBBBC198);
    uint64_t v14 = v21;
    if (v21)
    {
      uint64_t v15 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      v18[0] = v10;
      v18[1] = v11;
      (*(void (**)(void *__return_ptr, void *, void, void, uint64_t, uint64_t))(v15 + 16))(v19, v18, *(void *)(a3 + 16), *(void *)(a3 + 24), v14, v15);
      uint64_t v16 = v19[0];
      unint64_t v17 = v19[1];
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      if (v17 >> 60 != 3) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t result = sub_1C3F962E0((uint64_t)v20, &qword_1EBBBC198);
    }
    uint64_t v16 = 0;
    unint64_t v17 = 0x3000000000000000;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v17 = 0xF000000000000000;
  }
LABEL_8:
  *a4 = v16;
  a4[1] = v17;
  return result;
}

uint64_t WeakRef.hash(into:)()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_1C3F7E324(v2, v1);
  sub_1C4496568();
  return sub_1C3F7E2CC(v2, v1);
}

uint64_t WeakRef.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t sub_1C4476B9C()
{
  return sub_1C4498628();
}

void sub_1C4476BF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1C4476C10()
{
  return WeakRef.encode(to:)();
}

uint64_t WeakRef.encode(to:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v69 = (char *)v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v68 = (uint64_t)v57 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v70 = (uint64_t)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v67 = (uint64_t)v57 - v8;
  uint64_t v9 = type metadata accessor for Proto_Reference(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  char v12 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v57 - v13;
  uint64_t v66 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v15 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  unint64_t v17 = (void *)((char *)v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *v0;
  unint64_t v19 = v0[1];
  uint64_t v20 = v71;
  uint64_t result = sub_1C3F6DD10();
  if (v20) {
    return result;
  }
  uint64_t v22 = result;
  uint64_t v61 = v15;
  uint64_t v64 = v12;
  uint64_t v65 = v14;
  uint64_t v71 = v9;
  uint64_t v63 = 0;
  void *v17 = MEMORY[0x1E4FBC860];
  swift_retain();
  unint64_t v23 = v19;
  sub_1C3F7E324(v18, v19);
  uint64_t v24 = sub_1C4496868();
  unint64_t v26 = v25;
  uint64_t v27 = v66;
  sub_1C4496888();
  sub_1C3F7E2CC(v24, v26);
  v17[1] = v18;
  uint64_t v17[2] = v23;
  uint64_t v62 = v22;
  uint64_t v28 = v22 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
  swift_beginAccess();
  uint64_t v59 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  uint64_t v29 = *(void *)(v28 + v59)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v30 = v67;
  sub_1C3F970C4(v29, v67, &qword_1EBBBF8A0);
  uint64_t v31 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v57[1] = v32 + 48;
  int v33 = v58(v30, 1, v31);
  uint64_t v34 = (uint64_t)v17;
  uint64_t v60 = v31;
  if (v33 == 1)
  {
    sub_1C3F962E0(v30, &qword_1EBBBF8A0);
    uint64_t v35 = v71;
    uint64_t v36 = (uint64_t)v69;
    uint64_t v37 = (uint64_t)v65;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v35 = v71;
    uint64_t v36 = (uint64_t)v69;
    uint64_t v37 = (uint64_t)v65;
    if (EnumCaseMultiPayload == 7)
    {
      sub_1C3F8AB70(v30, (uint64_t)v65, type metadata accessor for Proto_Reference);
      goto LABEL_10;
    }
    sub_1C3F8B2E8(v30, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v39 = v37;
  uint64_t v40 = *(int *)(v35 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v39 + v40) = qword_1EBBBC808;
  swift_retain();
  uint64_t v37 = v39;
LABEL_10:
  uint64_t v41 = *(int *)(v35 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v42 = swift_retain();
    uint64_t v37 = (uint64_t)v65;
    *(void *)(v37 + v41) = sub_1C3FB0204(v42);
    swift_release();
  }
  uint64_t v43 = v37;
  uint64_t v44 = *(void *)(v37 + v41);
  uint64_t v45 = v68;
  sub_1C3F8AB70(v34, v68, type metadata accessor for Proto_KeyPath);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v45, 0, 1, v27);
  sub_1C41FA590(v45, v36);
  uint64_t v46 = v44 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  swift_retain();
  sub_1C41FA5F8(v36, v46);
  swift_endAccess();
  swift_release();
  sub_1C43F0BE0(v43);
  uint64_t v47 = *(void *)(v28 + v59)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v48 = v47;
  uint64_t v49 = v70;
  sub_1C3F970C4(v48, v70, &qword_1EBBBF8A0);
  if (v58(v49, 1, v60) == 1)
  {
    sub_1C3F962E0(v49, &qword_1EBBBF8A0);
    uint64_t v50 = (uint64_t)v64;
LABEL_17:
    uint64_t v52 = v71;
    sub_1C4496888();
    uint64_t v53 = *(int *)(v52 + 20);
    if (qword_1EBBBC818 != -1) {
      swift_once();
    }
    *(void *)(v50 + v53) = qword_1EBBBC808;
    swift_retain();
    goto LABEL_20;
  }
  int v51 = swift_getEnumCaseMultiPayload();
  uint64_t v50 = (uint64_t)v64;
  if (v51 != 7)
  {
    sub_1C3F8B2E8(v49, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_17;
  }
  sub_1C3F8AB70(v49, (uint64_t)v64, type metadata accessor for Proto_Reference);
  uint64_t v52 = v71;
LABEL_20:
  uint64_t v54 = *(int *)(v52 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v55 = swift_retain();
    *(void *)(v50 + v54) = sub_1C3FB0204(v55);
    swift_release();
  }
  uint64_t v56 = *(void *)(v50 + v54);
  swift_beginAccess();
  *(void *)(v56 + 24) = 1;
  *(unsigned char *)(v56 + 32) = 1;
  sub_1C43F0BE0(v50);
  swift_endAccess();
  return swift_release();
}

void sub_1C4477338(unsigned char *a1@<X8>)
{
}

void WeakRef.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t WeakRef.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3F7E324(v2, v3);
  sub_1C4498698();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  sub_1C3FF6830();
  sub_1C4498348();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return sub_1C3F7E2CC(v2, v3);
}

uint64_t WeakRef.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C40F7954(a1, (uint64_t)v9);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_1C4498668();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1C3FF678C();
    sub_1C4498318();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
    *a2 = v6;
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1C4477514@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return WeakRef.init(from:)(a1, a2);
}

uint64_t sub_1C447752C(void *a1)
{
  return WeakRef.encode(to:)(a1);
}

uint64_t sub_1C4477544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = sub_1C4497B38();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v19 - v12;
  uint64_t v15 = *v5;
  unint64_t v14 = v5[1];
  (*(void (**)(char *, uint64_t))(v16 + 16))((char *)v19 - v12, a1);
  v19[0] = v15;
  v19[1] = v14;
  unint64_t v17 = *(uint64_t (**)(char *, void *, uint64_t, void, uint64_t, uint64_t))(a5 + 48);
  sub_1C3F7E324(v15, v14);
  return v17(v13, v19, v10, *(void *)(a3 + 24), a4, a5);
}

uint64_t sub_1C4477674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v14 - v8;
  uint64_t v11 = *v3;
  unint64_t v10 = v3[1];
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v8, a1);
  v14[0] = v11;
  v14[1] = v10;
  swift_retain();
  sub_1C3F7E324(v11, v10);
  sub_1C4055840((uint64_t)v9, (uint64_t)v14, v6, *(void *)(a3 + 24));
  return swift_release();
}

uint64_t sub_1C44777A4(uint64_t a1, unint64_t a2)
{
  if ((a2 >> 60) > 0xF || ((1 << (a2 >> 60)) & 0x8880) == 0) {
    return sub_1C3F7E324(a1, a2);
  }
  return a1;
}

uint64_t sub_1C44777CC(uint64_t a1, unint64_t a2)
{
  if ((a2 >> 60) > 0xF || ((1 << (a2 >> 60)) & 0x8880) == 0) {
    return sub_1C3F7E2CC(a1, a2);
  }
  return a1;
}

uint64_t sub_1C44777F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C4477810(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C447784C(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C44778B4()
{
  return 32;
}

__n128 sub_1C44778C0(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C44778D4()
{
  return 32;
}

__n128 sub_1C44778E0(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t type metadata accessor for WeakRef()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C4477904(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 10);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    unsigned int v4 = 16 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 4) {
    return v4 - 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C4477960(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 9)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 10;
    if (a3 >= 0xA) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xA) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (13 - a2)) | ((13 - a2) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t type metadata accessor for WeakRef.ObservableDifference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C44779D0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v14 >= v6) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v6) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v2 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v6) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v2 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v6) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v2 + 8 * v8);
          if (!v15)
          {
            int64_t v16 = v14 + 4;
            if (v16 >= v6)
            {
LABEL_24:
              uint64_t v17 = 0;
              goto LABEL_25;
            }
            unint64_t v15 = *(void *)(v2 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v8 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_27;
                }
                if (v8 >= v6) {
                  goto LABEL_24;
                }
                unint64_t v15 = *(void *)(v2 + 8 * v8);
                ++v16;
                if (v15) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v8 = v16;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a1 + 56) + 8 * v10) + 144);
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_retain();
    char v13 = v11(v12);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13)
    {
      uint64_t v17 = 1;
LABEL_25:
      swift_release();
      return v17;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C4477B90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v54 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v55 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v53 = v1;
  if (v5) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_56;
    }
    if (v11 >= v55) {
      goto LABEL_54;
    }
    unint64_t v12 = *(void *)(v54 + 8 * v11);
    int64_t v13 = v6 + 1;
    if (!v12)
    {
      int64_t v13 = v6 + 2;
      if (v6 + 2 >= v55) {
        goto LABEL_54;
      }
      unint64_t v12 = *(void *)(v54 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v6 + 3;
        if (v6 + 3 >= v55) {
          goto LABEL_54;
        }
        unint64_t v12 = *(void *)(v54 + 8 * v13);
        if (!v12)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 < v55)
          {
            unint64_t v12 = *(void *)(v54 + 8 * v14);
            if (v12)
            {
              int64_t v13 = v6 + 4;
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_60;
              }
              if (v13 >= v55) {
                break;
              }
              unint64_t v12 = *(void *)(v54 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_21;
              }
            }
          }
LABEL_54:
          swift_release();
          uint64_t result = swift_bridgeObjectRelease();
          *uint64_t v2 = (uint64_t)v7;
          return result;
        }
      }
    }
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    int64_t v57 = v13;
    for (unint64_t i = __clz(__rbit64(v12)) + (v13 << 6); ; unint64_t i = v9 | (v6 << 6))
    {
      unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
      uint64_t v17 = *v15;
      uint64_t v16 = v15[1];
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)(*v2 + 16);
      swift_bridgeObjectRetain();
      if (!v20)
      {
        swift_retain();
        goto LABEL_35;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v21 = sub_1C3FB9894(v17, v16);
      if ((v22 & 1) == 0) {
        break;
      }
      uint64_t v23 = *(void *)(*(void *)(v19 + 56) + 8 * v21);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v24 = v18;
      if (v23 != v18)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v25 = (*(uint64_t (**)(void))(*(void *)v23 + 160))();
          swift_release();
          uint64_t v23 = v25;
        }
        (*(void (**)(uint64_t))(*(void *)v23 + 96))(v18);
        uint64_t v24 = v23;
      }
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v28 = sub_1C3FB9894(v17, v16);
      uint64_t v29 = v7[2];
      BOOL v30 = (v27 & 1) == 0;
      uint64_t v31 = v29 + v30;
      if (__OFADD__(v29, v30)) {
        goto LABEL_58;
      }
      char v32 = v27;
      if (v7[3] >= v31)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v27) {
            goto LABEL_46;
          }
        }
        else
        {
          sub_1C4068B98();
          if (v32) {
            goto LABEL_46;
          }
        }
      }
      else
      {
        sub_1C4063E80(v31, isUniquelyReferenced_nonNull_native);
        uint64_t v33 = sub_1C3FB9894(v17, v16);
        if ((v32 & 1) != (v34 & 1)) {
          goto LABEL_61;
        }
        unint64_t v28 = v33;
        if (v32)
        {
LABEL_46:
          uint64_t v48 = v7[7];
          swift_release();
          *(void *)(v48 + 8 * v28) = v24;
          goto LABEL_52;
        }
      }
      v7[(v28 >> 6) + 8] |= 1 << v28;
      uint64_t v49 = (uint64_t *)(v7[6] + 16 * v28);
      uint64_t *v49 = v17;
      v49[1] = v16;
      *(void *)(v7[7] + 8 * v28) = v24;
      uint64_t v50 = v7[2];
      BOOL v46 = __OFADD__(v50, 1);
      uint64_t v51 = v50 + 1;
      if (v46) {
        goto LABEL_59;
      }
      void v7[2] = v51;
      swift_bridgeObjectRetain();
LABEL_52:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v2 = v53;
      int64_t v6 = v57;
      if (!v5) {
        goto LABEL_8;
      }
LABEL_7:
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      int64_t v57 = v6;
    }
    swift_bridgeObjectRelease();
LABEL_35:
    swift_retain();
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v37 = sub_1C3FB9894(v17, v16);
    uint64_t v38 = v7[2];
    BOOL v39 = (v36 & 1) == 0;
    uint64_t v40 = v38 + v39;
    if (!__OFADD__(v38, v39))
    {
      char v41 = v36;
      if (v7[3] >= v40)
      {
        if (v35)
        {
          if ((v36 & 1) == 0) {
            goto LABEL_42;
          }
        }
        else
        {
          sub_1C4068B98();
          if ((v41 & 1) == 0) {
            goto LABEL_42;
          }
        }
      }
      else
      {
        sub_1C4063E80(v40, v35);
        uint64_t v42 = sub_1C3FB9894(v17, v16);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_61;
        }
        unint64_t v37 = v42;
        if ((v41 & 1) == 0)
        {
LABEL_42:
          v7[(v37 >> 6) + 8] |= 1 << v37;
          uint64_t v44 = (uint64_t *)(v7[6] + 16 * v37);
          *uint64_t v44 = v17;
          v44[1] = v16;
          *(void *)(v7[7] + 8 * v37) = v18;
          uint64_t v45 = v7[2];
          BOOL v46 = __OFADD__(v45, 1);
          uint64_t v47 = v45 + 1;
          if (v46) {
            goto LABEL_57;
          }
          void v7[2] = v47;
          swift_bridgeObjectRetain();
          goto LABEL_6;
        }
      }
      uint64_t v8 = v7[7];
      swift_release();
      *(void *)(v8 + 8 * v37) = v18;
LABEL_6:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v6 = v57;
      if (!v5) {
        continue;
      }
      goto LABEL_7;
    }
    break;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

uint64_t sub_1C4478090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (!*(void *)(a1 + 16)) {
        goto LABEL_23;
      }
      goto LABEL_21;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_26;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (!*(void *)(a1 + 16)) {
      goto LABEL_23;
    }
LABEL_21:
    uint64_t v16 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v12);
    uint64_t v17 = *(void *)(*(void *)(a2 + 56) + 8 * v12);
    uint64_t v18 = *v16;
    uint64_t v19 = v16[1];
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v20 = sub_1C3FB9894(v18, v19);
    if ((v21 & 1) == 0)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return 1;
    }
    uint64_t v22 = *(void *)(*(void *)(a1 + 56) + 8 * v20);
    swift_retain();
    swift_bridgeObjectRelease();
    char v23 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 112))(v22);
    swift_release();
    uint64_t result = swift_release();
    if (v23)
    {
LABEL_23:
      swift_release();
      return 1;
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_26:
    swift_release();
    return 0;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C447829C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  void (*v14)(uint64_t *__return_ptr, uint64_t);
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;

  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  LOBYTE(v10) = 0;
  int64_t v11 = 0;
  while (v7)
  {
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
    unint64_t v14 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(*(void *)(a1 + 56) + 8 * v13) + 192);
    int64_t v15 = swift_retain();
    v14(&v19, v15);
    uint64_t result = swift_release();
    if (v19 <= v10) {
      int v10 = v10;
    }
    else {
      int v10 = v19;
    }
    if (v10 == 2)
    {
LABEL_24:
      uint64_t result = swift_release();
      *a2 = v10;
      return result;
    }
  }
  uint64_t v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v16 >= v8) {
    goto LABEL_24;
  }
  uint64_t v17 = *(void *)(v4 + 8 * v16);
  ++v11;
  if (v17) {
    goto LABEL_23;
  }
  int64_t v11 = v16 + 1;
  if (v16 + 1 >= v8) {
    goto LABEL_24;
  }
  uint64_t v17 = *(void *)(v4 + 8 * v11);
  if (v17) {
    goto LABEL_23;
  }
  int64_t v11 = v16 + 2;
  if (v16 + 2 >= v8) {
    goto LABEL_24;
  }
  uint64_t v17 = *(void *)(v4 + 8 * v11);
  if (v17)
  {
LABEL_23:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v11 << 6);
    goto LABEL_5;
  }
  uint64_t v18 = v16 + 3;
  if (v18 >= v8) {
    goto LABEL_24;
  }
  uint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_24;
    }
    uint64_t v17 = *(void *)(v4 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t _s9Coherence17UnknownPropertiesV18finalizeTimestampsyyAA9CRContextCF_0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v22 = *v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*v1 + 64);
  int64_t v23 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_26:
    unint64_t v13 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C405031C(v24, v14, v15);
    if (*(void *)v16)
    {
      uint64_t v18 = v16;
      uint64_t v19 = *(uint64_t (**)(uint64_t))(**(void **)v16 + 144);
      uint64_t v20 = swift_retain();
      LOBYTE(v19) = v19(v20);
      swift_release();
      if (v19)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          *(void *)uint64_t v18 = (*(uint64_t (**)(void))(**(void **)v18 + 160))();
          swift_release();
        }
        (*(void (**)(uint64_t))(**(void **)v18 + 152))(a1);
      }
    }
    ((void (*)(void *, void))v17)(v24, 0);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v10 >= v23) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v22 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_25;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v23) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v22 + 8 * v7);
  if (v11) {
    goto LABEL_25;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v23) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v22 + 8 * v7);
  if (v11) {
    goto LABEL_25;
  }
  int64_t v7 = v10 + 3;
  if (v10 + 3 >= v23) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v22 + 8 * v7);
  if (v11) {
    goto LABEL_25;
  }
  int64_t v7 = v10 + 4;
  if (v10 + 4 >= v23) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v22 + 8 * v7);
  if (v11)
  {
LABEL_25:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_26;
  }
  int64_t v12 = v10 + 5;
  if (v12 >= v23) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v22 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v23) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v22 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

Coherence::UnknownProperties __swiftcall UnknownProperties.init()()
{
  uint64_t v1 = v0;
  result.properties._rawValue = (void *)sub_1C3FE5110(MEMORY[0x1E4FBC860]);
  v1->properties._rawValue = result.properties._rawValue;
  return result;
}

Coherence::UnknownProperties __swiftcall UnknownProperties.init(_:)(Coherence::UnknownProperties result)
{
  v1->properties._rawValue = result.properties._rawValue;
  return result;
}

Swift::Void __swiftcall UnknownProperties.merge(_:)(Coherence::UnknownProperties a1)
{
}

Coherence::UnknownProperties __swiftcall UnknownProperties.copy(renamingReferences:)(Swift::OpaquePointer_optional renamingReferences)
{
  uint64_t v3 = v1;
  uint64_t v4 = *v2;
  if (!renamingReferences.value._rawValue) {
    renamingReferences.value._rawValue = (void *)sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  rawValue = renamingReferences.value._rawValue;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C4341774(v4, (uint64_t)&rawValue);
  result.properties._rawValue = (void *)swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  return result;
}

Coherence::UnknownProperties __swiftcall UnknownProperties.copy(renamingReferences:)(Swift::OpaquePointer *renamingReferences)
{
  uint64_t v3 = v1;
  result.properties._rawValue = (void *)sub_1C4341774(*v2, (uint64_t)renamingReferences);
  v3->properties._rawValue = result.properties._rawValue;
  return result;
}

Swift::Bool __swiftcall UnknownProperties.hasDelta(from:)(Coherence::UnknownProperties from)
{
  return sub_1C4478090(*(void *)from.properties._rawValue, *v1);
}

uint64_t UnknownProperties.visitReferences(_:)(uint64_t a1)
{
  return sub_1C3F7E98C(a1, *v1);
}

uint64_t UnknownProperties.minEncodingVersion.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C447829C(*v1, a1);
}

Swift::Bool __swiftcall UnknownProperties.needToFinalizeTimestamps()()
{
  return sub_1C44779D0(*v0) & 1;
}

uint64_t UnknownProperties.encode(to:)()
{
  uint64_t v2 = v1;
  uint64_t v3 = *v0;
  uint64_t v4 = *v0 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*v0 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*v0 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    uint64_t v19 = swift_retain();
    sub_1C4245F38(v19, v17, v18);
    swift_release();
    if (v2)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v10 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for UnknownProperties()
{
  return &type metadata for UnknownProperties;
}

uint64_t sub_1C4478A04()
{
  uint64_t v1 = v0;
  uint64_t v57 = type metadata accessor for RetainedMapRun(0);
  int64_t v55 = *(void (***)(uint64_t, void, uint64_t, uint64_t))(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v54 = (uint64_t)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  int64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v59 = (uint64_t)&v43 - v11;
  uint64_t v12 = sub_1C44967A8();
  uint64_t v58 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBCA78);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C44967C8();
  sub_1C4496798();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v58 + 8);
  uint64_t v49 = v58 + 8;
  uint64_t v50 = v14;
  uint64_t v48 = v19;
  v19(v14, v12);
  uint64_t v20 = (uint64_t)v18;
  char v21 = &v18[*(int *)(v16 + 44)];
  uint64_t v22 = sub_1C44814D8((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
  uint64_t v23 = *(void *)v21;
  sub_1C4497818();
  if (v23 == v60[0]) {
    return sub_1C3F962E0(v20, &qword_1EBBBCA78);
  }
  uint64_t v46 = v12;
  uint64_t v47 = (void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  uint64_t v25 = v55;
  v55 += 7;
  uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 6);
  uint64_t v52 = v4;
  uint64_t v53 = v6;
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v43 = v22;
  while (1)
  {
    char v27 = (void (*)(uint64_t *, void))sub_1C44978C8();
    uint64_t v28 = v20;
    uint64_t v51 = *v29;
    uint64_t v58 = v29[1];
    v27(v60, 0);
    BOOL v30 = v50;
    (*v47)(v50, v28, v12);
    sub_1C4497828();
    v48(v30, v12);
    uint64_t result = sub_1C3FB3D7C(v51, v58);
    uint64_t v51 = result;
    if (result != v31) {
      break;
    }
LABEL_4:
    sub_1C3F9043C(v51, v31);
    uint64_t v20 = v45;
    uint64_t v26 = *(void *)v44;
    uint64_t v12 = v46;
    sub_1C4497818();
    if (v26 == v60[0]) {
      return sub_1C3F962E0(v20, &qword_1EBBBCA78);
    }
  }
  if (v31 < v51) {
    goto LABEL_24;
  }
  unint64_t v32 = v51;
  uint64_t v58 = v31;
  if (v51 < v31)
  {
    while (1)
    {
      if ((v32 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        break;
      }
      if (v32 >= *(void *)(*v1 + 16)) {
        goto LABEL_22;
      }
      unint64_t v33 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      unint64_t v34 = *(void *)(v4 + 72) * v32;
      sub_1C3F970C4(*v1 + v33 + v34, (uint64_t)v6, qword_1EBBBF0A0);
      sub_1C3F970C4((uint64_t)&v6[*(int *)(v3 + 36)], (uint64_t)v10, qword_1EBBBEF70);
      uint64_t v35 = v57;
      if ((*v56)(v10, 1, v57) == 1)
      {
        sub_1C3F962E0((uint64_t)v10, qword_1EBBBEF70);
      }
      else
      {
        uint64_t v36 = v3;
        unint64_t v37 = v1;
        uint64_t v38 = v54;
        sub_1C3FB5024((uint64_t)v10, v54, type metadata accessor for RetainedMapRun);
        uint64_t v39 = *(void *)(v38 + *(int *)(v35 + 20));
        uint64_t v40 = v39 - 1;
        if (v39 > 1)
        {
          uint64_t v41 = v59;
          sub_1C3F970C4(v38, v59, &qword_1EBBBF870);
          *(void *)(v41 + *(int *)(v35 + 20)) = v40;
          sub_1C447F5A8(v38, type metadata accessor for RetainedMapRun);
          (*v55)(v41, 0, 1, v35);
          uint64_t v1 = v37;
          uint64_t v3 = v36;
          uint64_t v4 = v52;
          uint64_t v6 = v53;
          goto LABEL_16;
        }
        sub_1C447F5A8(v38, type metadata accessor for RetainedMapRun);
        uint64_t v1 = v37;
        uint64_t v3 = v36;
        uint64_t v4 = v52;
        uint64_t v6 = v53;
      }
      (*v55)(v59, 1, 1, v35);
LABEL_16:
      sub_1C3F962E0((uint64_t)v6, qword_1EBBBF0A0);
      unint64_t v42 = *v1;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v1 = v42;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1C4232804(v42);
        unint64_t v42 = result;
        *uint64_t v1 = result;
      }
      if (v32 >= *(void *)(v42 + 16)) {
        goto LABEL_23;
      }
      ++v32;
      uint64_t result = sub_1C3FB43E4(v59, v42 + v33 + *(int *)(v3 + 36) + v34);
      int64_t v31 = v58;
      if (v58 == v32) {
        goto LABEL_4;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4479060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_1C4496678();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v11 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v38 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC6B0);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v37 - v21;
  sub_1C44795C8(a1, *v43, (uint64_t)&v37 - v21);
  sub_1C3F970C4((uint64_t)v22, (uint64_t)v20, &qword_1EBBBC6B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13) == 1)
  {
    sub_1C3F962E0((uint64_t)v22, &qword_1EBBBC6B0);
    sub_1C3F962E0((uint64_t)v20, &qword_1EBBBC6B0);
    uint64_t v23 = 1;
    uint64_t v24 = v42;
    uint64_t v25 = v44;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v24, v23, 1, v25);
  }
  sub_1C3F961BC((uint64_t)v20, (uint64_t)v16, qword_1EBBBF0A0);
  sub_1C3F970C4((uint64_t)v16 + *(int *)(v13 + 36), (uint64_t)v7, qword_1EBBBEF70);
  uint64_t v26 = type metadata accessor for RetainedMapRun(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v7, 1, v26) == 1)
  {
    sub_1C3F962E0((uint64_t)v7, qword_1EBBBEF70);
    uint64_t v25 = v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v44);
LABEL_6:
    sub_1C3F962E0((uint64_t)v16, qword_1EBBBF0A0);
    sub_1C3F962E0((uint64_t)v22, &qword_1EBBBC6B0);
    sub_1C3F962E0((uint64_t)v10, &qword_1EBBBF870);
    uint64_t v23 = 1;
    uint64_t v24 = v42;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v24, v23, 1, v25);
  }
  sub_1C3F970C4((uint64_t)v7, (uint64_t)v10, &qword_1EBBBF870);
  sub_1C447F5A8((uint64_t)v7, type metadata accessor for RetainedMapRun);
  uint64_t v25 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v44) == 1) {
    goto LABEL_6;
  }
  uint64_t v27 = v38;
  sub_1C3FB5024((uint64_t)v10, v38, type metadata accessor for FinalizedTimestamp);
  uint64_t v29 = v39;
  uint64_t v28 = v40;
  uint64_t v30 = v41;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v27, v41);
  uint64_t v32 = *(void *)(v27 + *(int *)(v25 + 20));
  BOOL v33 = __OFADD__(v32, a1);
  uint64_t v34 = v32 + a1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    uint64_t v35 = *v16;
    sub_1C447F5A8(v27, type metadata accessor for FinalizedTimestamp);
    sub_1C3F962E0((uint64_t)v16, qword_1EBBBF0A0);
    uint64_t result = sub_1C3F962E0((uint64_t)v22, &qword_1EBBBC6B0);
    BOOL v33 = __OFSUB__(v34, v35);
    uint64_t v36 = v34 - v35;
    if (!v33)
    {
      uint64_t v24 = v42;
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v42, v29, v30);
      uint64_t v23 = 0;
      *(void *)(v24 + *(int *)(v25 + 20)) = v36;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v24, v23, 1, v25);
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C44795C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4
    && (uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0),
        uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 72),
        unint64_t v9 = a2
           + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)),
        *(void *)(v9 + v8 * (v4 - 1) + 8) > a1))
  {
    uint64_t v16 = *(void *)(v7 - 8);
    unint64_t result = sub_1C3FB42D8(a1, 0, a2);
    if (result >= v4)
    {
      __break(1u);
      return result;
    }
    sub_1C3F970C4(v9 + result * v8, a3, qword_1EBBBF0A0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v12 = a3;
    uint64_t v13 = 0;
    uint64_t v14 = v7;
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v14 = v15;
    uint64_t v12 = a3;
    uint64_t v13 = 1;
  }
  return v11(v12, v13, 1, v14);
}

uint64_t sub_1C4479734(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  if (a3 < 0 || 1 << *(unsigned char *)(a6 + 32) <= a3)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a6 + 8 * ((unint64_t)a3 >> 6) + 64) >> a3) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a6 + 36) != a4)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v9 = result;
  uint64_t v10 = *(void *)(a6 + 48);
  uint64_t v11 = type metadata accessor for Replica();
  sub_1C3FB563C(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a3, v9, (uint64_t (*)(void))type metadata accessor for Replica);
  uint64_t v12 = *(void *)(a6 + 56) + 16 * a3;
  return sub_1C3FAA63C(v12, a2);
}

uint64_t sub_1C4479810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBB2A8);
  uint64_t v5 = MEMORY[0x1F4188790](v54);
  uint64_t v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v53 = (char *)&v44 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v51 = (uint64_t)&v44 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (uint64_t)&v44 - v11;
  unint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  sub_1C4497D28();
  swift_bridgeObjectRelease();
  unint64_t v62 = 0xD000000000000013;
  unint64_t v63 = 0x80000001C44B6200;
  uint64_t v59 = a1;
  sub_1C4498088();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  unint64_t v13 = v62;
  unint64_t v12 = v63;
  int64_t v14 = *(void *)(a3 + 16);
  unint64_t v15 = MEMORY[0x1E4FBC860];
  if (v14)
  {
    unint64_t v45 = v62;
    unint64_t v46 = v63;
    unint64_t v61 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C3F67EA0(0, v14, 0);
    uint64_t v16 = sub_1C3FB6E8C(a3);
    uint64_t v18 = v17;
    char v20 = v19 & 1;
    uint64_t v47 = a3 + 64;
    int64_t v55 = v14 - 1;
    long long v48 = xmmword_1C449B4A0;
    uint64_t v49 = a3;
    uint64_t v21 = (uint64_t)v53;
    uint64_t v22 = v54;
    uint64_t v23 = (uint64_t)v52;
    while (1)
    {
      uint64_t v24 = v50;
      uint64_t v25 = v50 + *(int *)(v22 + 48);
      uint64_t v56 = v18;
      sub_1C4479734(v50, v25, v16, v18, v20 & 1, a3);
      uint64_t v26 = v51;
      sub_1C3FB563C(v24, v51, (uint64_t (*)(void))type metadata accessor for Replica);
      sub_1C3FAA63C(v25, v26 + *(int *)(v22 + 48));
      sub_1C3F961BC(v26, v21, &qword_1EBBBB2A8);
      sub_1C3F962E0(v24, &qword_1EBBBB2A8);
      unint64_t v62 = 8224;
      unint64_t v63 = 0xE200000000000000;
      uint64_t v27 = *(int *)(v22 + 48);
      uint64_t v28 = v23 + v27;
      uint64_t v29 = v21 + v27;
      uint64_t v57 = v21 + v27;
      sub_1C3FB563C(v21, v23, (uint64_t (*)(void))type metadata accessor for Replica);
      sub_1C3FAA63C(v29, v28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E0);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v48;
      char v31 = sub_1C4496658();
      uint64_t v32 = MEMORY[0x1E4FBC358];
      *(void *)(v30 + 56) = MEMORY[0x1E4FBC358];
      uint64_t v33 = MEMORY[0x1E4FBC3B0];
      *(void *)(v30 + 64) = MEMORY[0x1E4FBC3B0];
      *(unsigned char *)(v30 + 32) = v31;
      uint64_t v34 = sub_1C4496658();
      *(void *)(v30 + 96) = v32;
      *(void *)(v30 + 104) = v33;
      *(unsigned char *)(v30 + 72) = BYTE1(v34);
      uint64_t v59 = sub_1C44971E8();
      uint64_t v60 = v35;
      sub_1C4497268();
      uint64_t v58 = *(void *)(v23 + *(int *)(type metadata accessor for Replica() + 20));
      sub_1C4498088();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C447F5A8(v23, (uint64_t (*)(void))type metadata accessor for Replica);
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C3F903E8(v28);
      sub_1C4497268();
      uint64_t v36 = v23 + *(int *)(v22 + 48);
      sub_1C3FB563C(v21, v23, (uint64_t (*)(void))type metadata accessor for Replica);
      sub_1C3FAA63C(v57, v36);
      sub_1C4479E2C();
      sub_1C3F903E8(v36);
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C447F5A8(v23, (uint64_t (*)(void))type metadata accessor for Replica);
      unint64_t v37 = v62;
      unint64_t v38 = v63;
      sub_1C3F962E0(v21, &qword_1EBBBB2A8);
      unint64_t v15 = v61;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1C3F67EA0(0, *(void *)(v15 + 16) + 1, 1);
        unint64_t v15 = v61;
      }
      unint64_t v41 = *(void *)(v15 + 16);
      unint64_t v40 = *(void *)(v15 + 24);
      if (v41 >= v40 >> 1)
      {
        uint64_t result = sub_1C3F67EA0(v40 > 1, v41 + 1, 1);
        unint64_t v15 = v61;
      }
      *(void *)(v15 + 16) = v41 + 1;
      unint64_t v42 = v15 + 16 * v41;
      *(void *)(v42 + 32) = v37;
      *(void *)(v42 + 40) = v38;
      a3 = v49;
      if (v16 < 0 || v16 >= -(-1 << *(unsigned char *)(v49 + 32))) {
        break;
      }
      if (((*(void *)(v47 + (((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v49 + 36) != v56) {
        goto LABEL_17;
      }
      uint64_t v43 = sub_1C4497C18();
      if (!v55)
      {
        swift_bridgeObjectRelease();
        unint64_t v13 = v45;
        unint64_t v12 = v46;
        goto LABEL_14;
      }
      uint64_t v16 = v43;
      char v20 = 0;
      uint64_t v18 = *(unsigned int *)(a3 + 36);
      --v55;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
LABEL_14:
    unint64_t v62 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39AD70);
    sub_1C410BCA4();
    sub_1C44970B8();
    swift_bridgeObjectRelease();
    unint64_t v62 = v13;
    unint64_t v63 = v12;
    swift_bridgeObjectRetain();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    return v62;
  }
  return result;
}

uint64_t sub_1C4479E2C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
  uint64_t v4 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  strcpy((char *)v28, "RLEMapping: ");
  BYTE5(v28[1]) = 0;
  HIWORD(v28[1]) = -5120;
  uint64_t v7 = *v0;
  int64_t v8 = *(void *)(*v0 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C3F67EA0(0, v8, 0);
    uint64_t v10 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v20 = v7;
    uint64_t v11 = v7 + ((v10 + 32) & ~v10);
    uint64_t v21 = *(void *)(v4 + 72);
    do
    {
      sub_1C3F970C4(v11, (uint64_t)v6, qword_1EBBBF0A0);
      uint64_t v12 = *v6;
      uint64_t v23 = v6[1];
      uint64_t v24 = v12;
      uint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      sub_1C4497E88();
      sub_1C4497268();
      sub_1C4497E88();
      sub_1C4497268();
      sub_1C3F970C4((uint64_t)v6 + *(int *)(v22 + 36), (uint64_t)v3, qword_1EBBBEF70);
      uint64_t v13 = type metadata accessor for RetainedMapRun(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v3, 1, v13) == 1)
      {
        sub_1C3F962E0((uint64_t)v3, qword_1EBBBEF70);
      }
      else
      {
        sub_1C447A548();
        sub_1C447F5A8((uint64_t)v3, type metadata accessor for RetainedMapRun);
      }
      sub_1C4497268();
      swift_bridgeObjectRelease();
      uint64_t v14 = v25;
      unint64_t v15 = v26;
      sub_1C3F962E0((uint64_t)v6, qword_1EBBBF0A0);
      uint64_t v9 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3F67EA0(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v27;
      }
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C3F67EA0(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v27;
      }
      *(void *)(v9 + 16) = v17 + 1;
      uint64_t v18 = v9 + 16 * v17;
      *(void *)(v18 + 32) = v14;
      *(void *)(v18 + 40) = v15;
      v11 += v21;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39AD70);
  sub_1C410BCA4();
  sub_1C44970B8();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  return v28[0];
}

uint64_t sub_1C447A204()
{
  return sub_1C4479810(*(void *)v0, *(unsigned __int8 *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C447A214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  uint64_t v4 = sub_1C4496678();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3F970C4(v3, (uint64_t)v13, &qword_1EBBBF870);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C3F962E0((uint64_t)v13, &qword_1EBBBF870);
    sub_1C3FB563C(v3, v28, type metadata accessor for RetainedMapRun);
    return sub_1C3FB563C(v3, v27, type metadata accessor for RetainedMapRun);
  }
  else
  {
    sub_1C3FB5024((uint64_t)v13, (uint64_t)v17, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB563C(v3, v28, type metadata accessor for RetainedMapRun);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v17, v4);
    uint64_t v19 = *(void *)&v17[*(int *)(v14 + 20)];
    uint64_t result = sub_1C447F5A8((uint64_t)v17, type metadata accessor for FinalizedTimestamp);
    BOOL v20 = __OFADD__(v19, v26);
    uint64_t v21 = v19 + v26;
    if (v20)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v7, v4);
      *(void *)&v11[*(int *)(v14 + 20)] = v21;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      uint64_t v22 = type metadata accessor for RetainedMapRun(0);
      uint64_t v23 = *(void *)(v3 + *(int *)(v22 + 20));
      uint64_t v24 = v27;
      uint64_t result = sub_1C3F961BC((uint64_t)v11, v27, &qword_1EBBBF870);
      *(void *)(v24 + *(int *)(v22 + 20)) = v23;
    }
  }
  return result;
}

uint64_t sub_1C447A548()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C4497D28();
  swift_bridgeObjectRelease();
  uint64_t v13 = 980382760;
  unint64_t v14 = 0xE400000000000000;
  sub_1C3F970C4(v0, (uint64_t)v7, &qword_1EBBBF870);
  uint64_t v8 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v7, 1, v8);
  sub_1C3F962E0((uint64_t)v7, &qword_1EBBBF870);
  if (v10 == 1) {
    goto LABEL_4;
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1C3F970C4(v1, (uint64_t)v5, &qword_1EBBBF870);
  uint64_t result = v9(v5, 1, v8);
  if (result != 1)
  {
    FinalizedTimestamp.description.getter();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C447F5A8((uint64_t)v5, type metadata accessor for FinalizedTimestamp);
LABEL_4:
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C4497268();
    v12[0] = *(void *)(v1 + *(int *)(type metadata accessor for RetainedMapRun(0) + 20));
    sub_1C4498088();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C4497268();
    return v13;
  }
  __break(1u);
  return result;
}

BOOL sub_1C447A7A0(uint64_t a1, uint64_t a2)
{
  return sub_1C447FDA8(a1, a2, type metadata accessor for RetainedMapRun);
}

uint64_t sub_1C447A7D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C4496678();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  MEMORY[0x1F4188790](v8 - 8);
  int v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3F970C4(v2, (uint64_t)v10, &qword_1EBBBF870);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C3F962E0((uint64_t)v10, &qword_1EBBBF870);
    uint64_t v15 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1, v15, 1, v11);
  }
  sub_1C3FB5024((uint64_t)v10, (uint64_t)v14, type metadata accessor for FinalizedTimestamp);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v14, v4);
  uint64_t v16 = *(void *)&v14[*(int *)(v11 + 20)];
  sub_1C447F5A8((uint64_t)v14, type metadata accessor for FinalizedTimestamp);
  uint64_t result = type metadata accessor for FinalizedTimestampRange(0);
  uint64_t v18 = *(void *)(v2 + *(int *)(result + 20));
  uint64_t v19 = v16 + v18;
  if (!__OFADD__(v16, v18))
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
    uint64_t v15 = 0;
    *(void *)(a1 + *(int *)(v11 + 20)) = v19;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a1, v15, 1, v11);
  }
  __break(1u);
  return result;
}

BOOL sub_1C447AA68(uint64_t a1, uint64_t a2)
{
  return sub_1C447FDA8(a1, a2, type metadata accessor for FinalizedTimestampRange);
}

uint64_t sub_1C447AA98@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  LODWORD(v59) = a6;
  unint64_t v63 = a5;
  uint64_t v64 = a7;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v66 = a2;
  uint64_t v65 = type metadata accessor for FinalizedTimestampRange(0);
  MEMORY[0x1F4188790](v65);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v56 - v13;
  uint64_t v15 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v62 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v58 = (uint64_t)&v56 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for RetainedMapRun(0);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0) + 36);
  uint64_t v67 = a1;
  sub_1C3F970C4((uint64_t)a1 + v27, (uint64_t)v22, qword_1EBBBEF70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1C3F962E0((uint64_t)v22, qword_1EBBBEF70);
    if ((v59 & 1) == 0)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v9, 1, 1, v15);
      uint64_t v53 = v67[1];
      if (!__OFSUB__(v53, *v67))
      {
        *(void *)&v9[*(int *)(v65 + 20)] = v53 - *v67;
        sub_1C3FB4824((uint64_t)v9);
        sub_1C447F5A8((uint64_t)v9, type metadata accessor for FinalizedTimestampRange);
        uint64_t v52 = 1;
        uint64_t v39 = v64;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v39, v52, 1, v23);
      }
      goto LABEL_28;
    }
    uint64_t v28 = sub_1C4496678();
    uint64_t v29 = (uint64_t)v62;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v62, v60, v28);
    char v31 = v63;
    uint64_t v32 = v67;
    if (__OFADD__(v61, *v63))
    {
      __break(1u);
    }
    else
    {
      *(void *)(v29 + *(int *)(v15 + 20)) = v61 + *v63;
      sub_1C3FB563C(v29, (uint64_t)v9, type metadata accessor for FinalizedTimestamp);
      uint64_t v33 = *(uint64_t (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
      uint64_t result = v33(v9, 0, 1, v15);
      uint64_t v34 = v32[1];
      if (!__OFSUB__(v34, *v32))
      {
        *(void *)&v9[*(int *)(v65 + 20)] = v34 - *v32;
        sub_1C3FB4824((uint64_t)v9);
        uint64_t result = sub_1C447F5A8((uint64_t)v9, type metadata accessor for FinalizedTimestampRange);
        uint64_t v35 = v32[1];
        uint64_t v36 = v35 - *v32;
        if (!__OFSUB__(v35, *v32))
        {
          BOOL v37 = __OFADD__(*v31, v36);
          uint64_t v38 = *v31 + v36;
          if (!v37)
          {
            *char v31 = v38;
            uint64_t v39 = v64;
            sub_1C3FB5024(v29, v64, type metadata accessor for FinalizedTimestamp);
            uint64_t v40 = 1;
            v33((char *)v39, 0, 1, v15);
LABEL_14:
            uint64_t v52 = 0;
            *(void *)(v39 + *(int *)(v23 + 20)) = v40;
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v39, v52, 1, v23);
          }
          goto LABEL_23;
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  sub_1C3FB5024((uint64_t)v22, (uint64_t)v26, type metadata accessor for RetainedMapRun);
  sub_1C3F970C4((uint64_t)v26, (uint64_t)v14, &qword_1EBBBF870);
  uint64_t v41 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v59 = (uint64_t)v26;
    sub_1C3F962E0((uint64_t)v14, &qword_1EBBBF870);
    uint64_t v42 = sub_1C4496678();
    uint64_t v43 = (uint64_t)v62;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v62, v60, v42);
    uint64_t v44 = v63;
    unint64_t v45 = v67;
    if (!__OFADD__(v61, *v63))
    {
      *(void *)(v43 + *(int *)(v41 + 20)) = v61 + *v63;
      sub_1C3FB563C(v43, (uint64_t)v9, type metadata accessor for FinalizedTimestamp);
      unint64_t v46 = *(uint64_t (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
      uint64_t result = v46(v9, 0, 1, v41);
      uint64_t v47 = v45[1];
      if (!__OFSUB__(v47, *v45))
      {
        *(void *)&v9[*(int *)(v65 + 20)] = v47 - *v45;
        sub_1C3FB4824((uint64_t)v9);
        uint64_t result = sub_1C447F5A8((uint64_t)v9, type metadata accessor for FinalizedTimestampRange);
        uint64_t v48 = v45[1];
        uint64_t v49 = v48 - *v45;
        if (!__OFSUB__(v48, *v45))
        {
          BOOL v37 = __OFADD__(*v44, v49);
          uint64_t v50 = *v44 + v49;
          if (!v37)
          {
            *uint64_t v44 = v50;
            uint64_t v51 = v57;
            sub_1C3FB5024(v43, v57, type metadata accessor for FinalizedTimestamp);
            v46((char *)v51, 0, 1, v41);
            uint64_t v40 = *(void *)(v59 + *(int *)(v23 + 20));
            sub_1C447F5A8(v59, type metadata accessor for RetainedMapRun);
            uint64_t v39 = v64;
            sub_1C3F961BC(v51, v64, &qword_1EBBBF870);
            goto LABEL_14;
          }
          goto LABEL_27;
        }
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v54 = v58;
  sub_1C3FB5024((uint64_t)v14, v58, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB563C(v54, (uint64_t)v9, type metadata accessor for FinalizedTimestamp);
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v41);
  uint64_t v55 = v67[1];
  if (!__OFSUB__(v55, *v67))
  {
    *(void *)&v9[*(int *)(v65 + 20)] = v55 - *v67;
    sub_1C3FB4824((uint64_t)v9);
    sub_1C447F5A8((uint64_t)v9, type metadata accessor for FinalizedTimestampRange);
    sub_1C447F5A8(v54, type metadata accessor for FinalizedTimestamp);
    uint64_t v39 = v64;
    sub_1C3FB5024((uint64_t)v26, v64, type metadata accessor for RetainedMapRun);
    uint64_t v52 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v39, v52, 1, v23);
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_1C447B2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v35 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Replica();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = a2 + OBJC_IVAR___ObjCReplica_uuid;
  swift_beginAccess();
  uint64_t v16 = sub_1C4496678();
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  v34(v14, v15, v16);
  *(void *)&v14[*(int *)(v9 + 20)] = *(void *)(a2 + OBJC_IVAR___ObjCReplica_index);
  uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC9Coherence11ObjCRenames_renames + 16);
  if (*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1C3F8F160((uint64_t)v14);
    if (v19)
    {
      sub_1C3FAA63C(*(void *)(v17 + 56) + 16 * v18, (uint64_t)&v39);
    }
    else
    {
      uint64_t v39 = 0;
      uint64_t v40 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  sub_1C447F5A8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Replica);
  if (v39)
  {
    sub_1C3FAAC94((uint64_t)&v39, (uint64_t)v42);
    sub_1C4479060(v36, (uint64_t)v6);
    uint64_t v20 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v37) != 1)
    {
      uint64_t v24 = v35;
      sub_1C3FB5024((uint64_t)v6, v35, type metadata accessor for FinalizedTimestamp);
      uint64_t v25 = (void (*)(char *, char *, uint64_t))v34;
      v34(v12, v24, v16);
      *(void *)&v12[*(int *)(v9 + 20)] = 0;
      uint64_t v26 = (objc_class *)type metadata accessor for ObjCReplica(0);
      uint64_t v27 = (char *)objc_allocWithZone(v26);
      v25(&v27[OBJC_IVAR___ObjCReplica_uuid], v12, v16);
      *(void *)&v27[OBJC_IVAR___ObjCReplica_index] = 0;
      v41.receiver = v27;
      v41.super_class = v26;
      uint64_t v28 = (char *)objc_msgSendSuper2(&v41, sel_init);
      sub_1C447F5A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Replica);
      uint64_t v37 = *(void *)(v24 + *(int *)(v20 + 20));
      uint64_t v29 = (objc_class *)type metadata accessor for ObjCTimestamp(0);
      uint64_t v30 = (char *)objc_allocWithZone(v29);
      char v31 = &v28[OBJC_IVAR___ObjCReplica_uuid];
      swift_beginAccess();
      uint64_t v32 = &v30[OBJC_IVAR___ObjCTimestamp_timestamp];
      v25(&v30[OBJC_IVAR___ObjCTimestamp_timestamp], v31, v16);
      *(void *)&v32[*(int *)(v9 + 20)] = *(void *)&v28[OBJC_IVAR___ObjCReplica_index];
      *(void *)&v32[*(int *)(type metadata accessor for Timestamp(0) + 20)] = v37;
      v38.receiver = v30;
      v38.super_class = v29;
      id v23 = objc_msgSendSuper2(&v38, sel_init);

      sub_1C447F5A8(v24, type metadata accessor for FinalizedTimestamp);
      sub_1C3F903E8((uint64_t)v42);
      return v23;
    }
    sub_1C3F903E8((uint64_t)v42);
    uint64_t v21 = &qword_1EBBBF870;
    uint64_t v22 = v6;
  }
  else
  {
    uint64_t v21 = qword_1EBBBEE40;
    uint64_t v22 = (char *)&v39;
  }
  sub_1C3F962E0((uint64_t)v22, v21);
  return 0;
}

id sub_1C447B7D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v60 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v57 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C4496678();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Replica();
  uint64_t v65 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  unint64_t v63 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v53 - v12;
  uint64_t v62 = type metadata accessor for Timestamp(0);
  uint64_t v14 = MEMORY[0x1F4188790](v62);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = a1 + OBJC_IVAR___ObjCTimestamp_timestamp;
  sub_1C3FB563C(a1 + OBJC_IVAR___ObjCTimestamp_timestamp, (uint64_t)&v53 - v17, type metadata accessor for Timestamp);
  sub_1C3FB5024((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Replica);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v56 = v13;
  v20(v8, v13, v5);
  uint64_t v58 = v19;
  sub_1C3FB563C(v19, (uint64_t)v16, type metadata accessor for Timestamp);
  uint64_t v21 = *(void *)&v16[*(int *)(v9 + 20)];
  sub_1C447F5A8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Replica);
  uint64_t v22 = (objc_class *)type metadata accessor for ObjCReplica(0);
  id v23 = (char *)objc_allocWithZone(v22);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v24(&v23[OBJC_IVAR___ObjCReplica_uuid], v8, v5);
  *(void *)&v23[OBJC_IVAR___ObjCReplica_index] = v21;
  v70.receiver = v23;
  v70.super_class = v22;
  Class v54 = v22;
  uint64_t v25 = (char *)objc_msgSendSuper2(&v70, sel_init);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v26 = &v25[OBJC_IVAR___ObjCReplica_uuid];
  swift_beginAccess();
  uint64_t v27 = v63;
  uint64_t v28 = v5;
  uint64_t v55 = (void (*)(char *, uint64_t, uint64_t))v24;
  v24(v63, v26, v5);
  uint64_t v29 = *(void *)&v25[OBJC_IVAR___ObjCReplica_index];

  uint64_t v30 = v64;
  uint64_t v31 = v65;
  *(void *)&v27[*(int *)(v65 + 20)] = v29;
  uint64_t v32 = (uint64_t)v27;
  uint64_t v33 = *(void *)(v30 + OBJC_IVAR____TtC9Coherence11ObjCRenames_renames + 16);
  if (*(void *)(v33 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_1C3F8F160(v32);
    if (v35)
    {
      sub_1C3FAA63C(*(void *)(v33 + 56) + 16 * v34, (uint64_t)&v67);
    }
    else
    {
      uint64_t v67 = 0;
      uint64_t v68 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v68 = 0;
  }
  sub_1C447F5A8(v32, (uint64_t (*)(void))type metadata accessor for Replica);
  if (v67)
  {
    sub_1C3FAAC94((uint64_t)&v67, (uint64_t)v71);
    uint64_t v36 = v60;
    sub_1C4479060(*(void *)(v58 + *(int *)(v62 + 20)), v60);
    uint64_t v37 = v61;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v36, 1, v61) != 1)
    {
      uint64_t v41 = v57;
      sub_1C3FB5024(v36, v57, type metadata accessor for FinalizedTimestamp);
      uint64_t v42 = v55;
      uint64_t v43 = (uint64_t)v56;
      v55(v56, v41, v28);
      *(void *)(v43 + *(int *)(v31 + 20)) = 0;
      uint64_t v44 = v54;
      unint64_t v45 = (char *)objc_allocWithZone(v54);
      v42(&v45[OBJC_IVAR___ObjCReplica_uuid], v43, v28);
      *(void *)&v45[OBJC_IVAR___ObjCReplica_index] = 0;
      v69.receiver = v45;
      v69.super_class = v44;
      unint64_t v46 = (char *)objc_msgSendSuper2(&v69, sel_init);
      sub_1C447F5A8(v43, (uint64_t (*)(void))type metadata accessor for Replica);
      uint64_t v47 = *(void *)(v41 + *(int *)(v37 + 20));
      uint64_t v48 = (objc_class *)type metadata accessor for ObjCTimestamp(0);
      uint64_t v49 = (char *)objc_allocWithZone(v48);
      uint64_t v50 = &v46[OBJC_IVAR___ObjCReplica_uuid];
      swift_beginAccess();
      uint64_t v51 = &v49[OBJC_IVAR___ObjCTimestamp_timestamp];
      v42(&v49[OBJC_IVAR___ObjCTimestamp_timestamp], (uint64_t)v50, v28);
      *(void *)&v51[*(int *)(v65 + 20)] = *(void *)&v46[OBJC_IVAR___ObjCReplica_index];
      *(void *)&v51[*(int *)(v62 + 20)] = v47;
      v66.receiver = v49;
      v66.super_class = v48;
      id v40 = objc_msgSendSuper2(&v66, sel_init);

      sub_1C447F5A8(v41, type metadata accessor for FinalizedTimestamp);
      sub_1C3F903E8((uint64_t)v71);
      return v40;
    }
    sub_1C3F903E8((uint64_t)v71);
    objc_super v38 = &qword_1EBBBF870;
    uint64_t v39 = (uint64_t *)v36;
  }
  else
  {
    objc_super v38 = qword_1EBBBEE40;
    uint64_t v39 = &v67;
  }
  sub_1C3F962E0((uint64_t)v39, v38);
  return 0;
}

uint64_t sub_1C447BEF0(uint64_t a1, unsigned int (**a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v106 = a2;
  uint64_t v5 = sub_1C4496678();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v94 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v112 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v107 = (char *)&v90 - v11;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
  uint64_t v12 = *(void *)(v110 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v110);
  uint64_t v15 = (void (***)(char *, char *, uint64_t))((char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v104 = (void (***)(char *, char *, uint64_t))((char *)&v90 - v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC6B0);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v105 = (uint64_t)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v98 = (char *)&v90 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v97 = (uint64_t)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v103 = (char *)&v90 - v24;
  uint64_t v109 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v99 = *(char **)(v109 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v109);
  uint64_t v93 = (uint64_t)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v111 = (uint64_t)&v90 - v27;
  uint64_t v28 = type metadata accessor for Replica();
  uint64_t v29 = v28 - 8;
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117[0] = MEMORY[0x1E4FBC860];
  swift_weakInit();
  swift_weakAssign();
  sub_1C3FAAC94((uint64_t)v117, (uint64_t)&v119);
  uint64_t v32 = a3 + OBJC_IVAR___ObjCReplica_uuid;
  swift_beginAccess();
  uint64_t v100 = v6;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v95 = v5;
  uint64_t v92 = v6 + 16;
  uint64_t v91 = v33;
  v33(v31, v32, v5);
  *(void *)&v31[*(int *)(v29 + 28)] = *(void *)(a3 + OBJC_IVAR___ObjCReplica_index);
  uint64_t v34 = *(uint64_t *)((char *)v108 + OBJC_IVAR____TtC9Coherence11ObjCRenames_renames + 16);
  if (*(void *)(v34 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v35 = sub_1C3F8F160((uint64_t)v31);
    if (v36)
    {
      sub_1C3FAA63C(*(void *)(v34 + 56) + 16 * v35, (uint64_t)&v115);
    }
    else
    {
      uint64_t v115 = 0;
      uint64_t v116 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v115 = 0;
    uint64_t v116 = 0;
  }
  uint64_t v37 = (uint64_t)v107;
  uint64_t v38 = v110;
  uint64_t v39 = v98;
  sub_1C447F5A8((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for Replica);
  if (!v115)
  {
    sub_1C3F962E0((uint64_t)&v115, qword_1EBBBEE40);
LABEL_14:
    sub_1C3FAA63C((uint64_t)&v119, (uint64_t)&v118);
    uint64_t v42 = (objc_class *)type metadata accessor for ObjCRLE();
    id v43 = objc_allocWithZone(v42);
    sub_1C3FAA63C((uint64_t)&v118, (uint64_t)v43 + OBJC_IVAR____TtC9Coherence7ObjCRLE_rle);
    v114.receiver = v43;
    v114.super_class = v42;
    id v44 = objc_msgSendSuper2(&v114, sel_init);
    sub_1C3F903E8((uint64_t)&v118);
    sub_1C3F903E8((uint64_t)&v119);
    return (uint64_t)v44;
  }
  uint64_t result = sub_1C3FAAC94((uint64_t)&v115, (uint64_t)&v118);
  uint64_t v41 = (char *)v106 + a1;
  if (__OFADD__(a1, v106)) {
    goto LABEL_73;
  }
  if ((uint64_t)v41 >= a1)
  {
    if (v41 != (char *)a1)
    {
      uint64_t v45 = (uint64_t)v39;
      uint64_t v102 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      char v101 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
      uint64_t v90 = (void (**)(char *, char *, uint64_t))(v100 + 32);
      uint64_t v108 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
      uint64_t v106 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
      uint64_t v100 = (unint64_t)(v99 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      uint64_t v99 = v41;
      while (1)
      {
        if (a1 >= (uint64_t)v41)
        {
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
        uint64_t v46 = *(void *)(v118 + 16);
        if (v46)
        {
          uint64_t v47 = v46 - 1;
          uint64_t v48 = v118 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
          uint64_t v49 = *(void *)(v12 + 72);
          if (a1 < *(void *)(v48 + v49 * (v46 - 1) + 8))
          {
            uint64_t v50 = 0;
            uint64_t v51 = v46 - 1;
            while (1)
            {
              uint64_t v52 = v51 >= 0 ? v51 : v51 + 1;
              if (v51 < -1) {
                break;
              }
              uint64_t v53 = v52 >> 1;
              if (v52 >> 1 >= v46) {
                break;
              }
              Class v54 = (uint64_t *)(v48 + v53 * v49);
              uint64_t v55 = *v54;
              uint64_t v56 = v54[1];
              if (a1 >= v55 && a1 < v56)
              {
                uint64_t v47 = v53;
LABEL_38:
                if (v47 >= (unint64_t)v46) {
                  goto LABEL_68;
                }
                uint64_t v59 = v41;
                sub_1C3F970C4(v48 + v47 * v49, v45, qword_1EBBBF0A0);
                uint64_t v60 = 0;
                goto LABEL_40;
              }
              if (v47 < v50) {
                goto LABEL_38;
              }
              if (a1 < v55)
              {
                uint64_t v47 = v53 - 1;
                uint64_t v51 = v50 + v53 - 1;
              }
              else
              {
                uint64_t v50 = v53 + 1;
                BOOL v58 = __OFADD__(v53 + 1, v47);
                uint64_t v51 = v53 + 1 + v47;
                if (v58) {
                  goto LABEL_66;
                }
              }
            }
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
        }
        uint64_t v59 = v41;
        uint64_t v60 = 1;
LABEL_40:
        (*v102)(v45, v60, 1, v38);
        uint64_t v61 = v45;
        uint64_t v62 = v45;
        uint64_t v63 = v105;
        sub_1C3F970C4(v61, v105, &qword_1EBBBC6B0);
        if ((*v101)(v63, 1, v38) == 1) {
          break;
        }
        uint64_t v65 = v62;
        objc_super v66 = v104;
        sub_1C3F961BC(v63, (uint64_t)v104, qword_1EBBBF0A0);
        sub_1C3F970C4((uint64_t)v66 + *(int *)(v38 + 36), v37, qword_1EBBBEF70);
        uint64_t v67 = type metadata accessor for RetainedMapRun(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v37, 1, v67) == 1)
        {
          sub_1C3F962E0(v37, qword_1EBBBEF70);
          uint64_t v68 = v97;
          (*v108)(v97, 1, 1, v109);
          uint64_t v45 = v65;
LABEL_45:
          sub_1C3F962E0((uint64_t)v104, qword_1EBBBF0A0);
          sub_1C3F962E0(v45, &qword_1EBBBC6B0);
          sub_1C3F962E0(v68, &qword_1EBBBF870);
          uint64_t v64 = (uint64_t)v103;
          uint64_t v41 = v99;
LABEL_46:
          uint64_t v71 = v109;
          (*v108)(v64, 1, 1, v109);
          objc_super v69 = *v106;
          goto LABEL_47;
        }
        uint64_t v68 = v97;
        sub_1C3F970C4(v37, v97, &qword_1EBBBF870);
        sub_1C447F5A8(v37, type metadata accessor for RetainedMapRun);
        objc_super v69 = *v106;
        uint64_t v70 = v109;
        uint64_t v45 = v65;
        if ((*v106)(v68, 1, v109) == 1) {
          goto LABEL_45;
        }
        uint64_t v82 = v68;
        uint64_t v83 = v93;
        sub_1C3FB5024(v82, v93, type metadata accessor for FinalizedTimestamp);
        v91(v94, v83, v95);
        uint64_t result = v83;
        uint64_t v84 = *(void *)(v83 + *(int *)(v70 + 20));
        uint64_t v85 = v84 + a1;
        if (__OFADD__(v84, a1)) {
          goto LABEL_71;
        }
        uint64_t v86 = v104;
        uint64_t v87 = *v104;
        sub_1C447F5A8(result, type metadata accessor for FinalizedTimestamp);
        uint64_t v88 = (uint64_t)v86;
        uint64_t v45 = (uint64_t)v98;
        sub_1C3F962E0(v88, qword_1EBBBF0A0);
        uint64_t result = sub_1C3F962E0(v45, &qword_1EBBBC6B0);
        BOOL v58 = __OFSUB__(v85, v87);
        uint64_t v89 = v85 - v87;
        if (v58) {
          goto LABEL_72;
        }
        uint64_t v71 = v70;
        uint64_t v64 = (uint64_t)v103;
        (*v90)(v103, v94, v95);
        *(void *)(v64 + *(int *)(v70 + 20)) = v89;
        (*v108)(v64, 0, 1, v70);
        uint64_t v38 = v110;
        uint64_t v41 = v99;
LABEL_47:
        uint64_t v72 = a1 + 1;
        if (v69(v64, 1, v71) == 1)
        {
          uint64_t result = sub_1C3F962E0(v64, &qword_1EBBBF870);
          uint64_t v37 = (uint64_t)v107;
        }
        else
        {
          uint64_t v73 = v111;
          sub_1C3FB5024(v64, v111, type metadata accessor for FinalizedTimestamp);
          uint64_t v74 = *(void *)(v73 + *(int *)(v71 + 20));
          uint64_t v115 = MEMORY[0x1E4FBC860];
          uint64_t v113 = 0;
          uint64_t result = sub_1C3FB3D7C(a1, a1 + 1);
          unint64_t v76 = v75;
          if (result != v75)
          {
            if (v75 < result) {
              goto LABEL_69;
            }
            unint64_t v77 = result;
            uint64_t v96 = result;
            if (result >= v75) {
              goto LABEL_70;
            }
            while ((v77 & 0x8000000000000000) == 0)
            {
              if (v77 >= *(void *)(v119 + 16)) {
                goto LABEL_63;
              }
              unint64_t v78 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
              unint64_t v79 = *(void *)(v12 + 72) * v77;
              sub_1C3F970C4(v119 + v78 + v79, (uint64_t)v15, qword_1EBBBF0A0);
              sub_1C447AA98(v15, (uint64_t)&v115, v111, v74, &v113, 1, v112);
              sub_1C3F962E0((uint64_t)v15, qword_1EBBBF0A0);
              unint64_t v80 = v119;
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v119 = v80;
              if ((result & 1) == 0)
              {
                uint64_t result = sub_1C4232804(v80);
                unint64_t v80 = result;
                unint64_t v119 = result;
              }
              if (v77 >= *(void *)(v80 + 16)) {
                goto LABEL_64;
              }
              ++v77;
              unint64_t v81 = v80 + v78;
              uint64_t v38 = v110;
              uint64_t result = sub_1C3FB43E4(v112, v81 + *(int *)(v110 + 36) + v79);
              if (v76 == v77)
              {
                uint64_t v73 = v111;
                uint64_t result = v96;
                goto LABEL_58;
              }
            }
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
LABEL_58:
          sub_1C3F9043C(result, v76);
          swift_bridgeObjectRelease();
          uint64_t result = sub_1C447F5A8(v73, type metadata accessor for FinalizedTimestamp);
          uint64_t v37 = (uint64_t)v107;
          uint64_t v45 = (uint64_t)v98;
          uint64_t v41 = v99;
        }
        a1 = v72;
        if ((char *)v72 == v41) {
          goto LABEL_12;
        }
      }
      sub_1C3F962E0(v62, &qword_1EBBBC6B0);
      sub_1C3F962E0(v63, &qword_1EBBBC6B0);
      uint64_t v45 = v62;
      uint64_t v41 = v59;
      uint64_t v64 = (uint64_t)v103;
      goto LABEL_46;
    }
LABEL_12:
    sub_1C3F903E8((uint64_t)&v118);
    goto LABEL_14;
  }
LABEL_74:
  __break(1u);
  return result;
}

id sub_1C447CC2C()
{
  return sub_1C447F418(type metadata accessor for ObjCRenames);
}

uint64_t sub_1C447CCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0) - 8;
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC9Coherence7ObjCRLE_rle);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = a1 + a2;
    if (!__OFADD__(a1, a2))
    {
      uint64_t v13 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v14 = *(void *)(v7 + 72);
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      while (1)
      {
        uint64_t result = sub_1C3F970C4(v13, (uint64_t)v9, qword_1EBBBF0A0);
        uint64_t v16 = *v9;
        uint64_t v17 = v9[1];
        BOOL v18 = __OFSUB__(v17, *v9);
        uint64_t v19 = v17 - *v9;
        if (v18) {
          break;
        }
        BOOL v18 = __OFADD__(v16, v19);
        uint64_t v20 = v16 + v19;
        if (v18) {
          goto LABEL_20;
        }
        if (v16 > a1 || v20 <= a1) {
          uint64_t v22 = v16 >= a1 && v16 < v12;
        }
        else {
          uint64_t v22 = 1;
        }
        BOOL v18 = __OFADD__(v15, v22);
        v15 += v22;
        if (v18) {
          goto LABEL_21;
        }
        sub_1C3F962E0((uint64_t)v9, qword_1EBBBF0A0);
        v13 += v14;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

id sub_1C447CFC8()
{
  return sub_1C447F418(type metadata accessor for ObjCRLE);
}

uint64_t type metadata accessor for ObjCRLE()
{
  return self;
}

uint64_t sub_1C447D014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C447D0A4(a1, a2, a3, (uint64_t)&OBJC_IVAR___ObjCRenameSequence_renameSequence);
}

uint64_t sub_1C447D098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C447D0A4(a1, a2, a3, (uint64_t)&OBJC_IVAR___ObjCRenameSequence_renameAddedBySequence);
}

uint64_t sub_1C447D0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v24[0] = a4;
  uint64_t v26 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C44967E8();
  uint64_t v10 = *(char ***)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Replica();
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1 + OBJC_IVAR___ObjCReplica_uuid;
  swift_beginAccess();
  uint64_t v18 = sub_1C4496678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *(void *)&v16[*(int *)(v14 + 28)] = *(void *)(a1 + OBJC_IVAR___ObjCReplica_index);
  if (__OFADD__(a2, v26))
  {
    __break(1u);
  }
  else if (a2 + v26 >= a2)
  {
    sub_1C4496698();
    uint64_t v19 = &v8[*(int *)(v6 + 48)];
    sub_1C3FB5024((uint64_t)v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Replica);
    ((void (*)(char *, char *, uint64_t))v10[4])(v19, v12, v9);
    uint64_t v10 = (char **)(v24[1] + *(void *)v24[0]);
    swift_beginAccess();
    uint64_t v16 = *v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v10 = v16;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  uint64_t v16 = (char *)sub_1C3FF21DC(0, *((void *)v16 + 2) + 1, 1, (unint64_t)v16);
  *uint64_t v10 = v16;
LABEL_4:
  unint64_t v22 = *((void *)v16 + 2);
  unint64_t v21 = *((void *)v16 + 3);
  if (v22 >= v21 >> 1)
  {
    uint64_t v16 = (char *)sub_1C3FF21DC(v21 > 1, v22 + 1, 1, (unint64_t)v16);
    *uint64_t v10 = v16;
  }
  *((void *)v16 + 2) = v22 + 1;
  sub_1C3F961BC((uint64_t)v8, (uint64_t)&v16[((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22], &qword_1EBBC0798);
  return swift_endAccess();
}

uint64_t sub_1C447D4BC()
{
  uint64_t v1 = v0;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
  uint64_t v2 = *(void *)(v62 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v62);
  uint64_t v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v56 - v6;
  uint64_t v8 = (unint64_t *)(v0 + OBJC_IVAR___ObjCRenameSequence_renameSequence);
  swift_beginAccess();
  unint64_t v9 = *v8;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  int64_t v11 = *(void *)(*v8 + 16);
  if (v11)
  {
    uint64_t v58 = v1;
    uint64_t v64 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C3F67EA0(0, v11, 0);
    uint64_t v12 = *(unsigned __int8 *)(v2 + 80);
    unint64_t v57 = v9;
    uint64_t v13 = v9 + ((v12 + 32) & ~v12);
    uint64_t v59 = v2;
    uint64_t v61 = *(void *)(v2 + 72);
    long long v60 = xmmword_1C449B4A0;
    do
    {
      sub_1C3F970C4(v13, (uint64_t)v7, &qword_1EBBC0798);
      uint64_t v66 = 40;
      unint64_t v67 = 0xE100000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = v60;
      char v15 = sub_1C4496658();
      uint64_t v16 = MEMORY[0x1E4FBC358];
      *(void *)(v14 + 56) = MEMORY[0x1E4FBC358];
      uint64_t v17 = MEMORY[0x1E4FBC3B0];
      *(void *)(v14 + 64) = MEMORY[0x1E4FBC3B0];
      *(unsigned char *)(v14 + 32) = v15;
      uint64_t v18 = sub_1C4496658();
      *(void *)(v14 + 96) = v16;
      *(void *)(v14 + 104) = v17;
      *(unsigned char *)(v14 + 72) = BYTE1(v18);
      uint64_t v69 = sub_1C44971E8();
      unint64_t v70 = v19;
      sub_1C4497268();
      uint64_t v68 = *(void *)&v7[*(int *)(type metadata accessor for Replica() + 20)];
      sub_1C4498088();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      uint64_t v20 = *(int *)(v62 + 48);
      unint64_t v21 = &v5[v20];
      unint64_t v22 = &v7[v20];
      sub_1C3FB563C((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Replica);
      uint64_t v23 = sub_1C44967E8();
      uint64_t v24 = *(void *)(v23 - 8);
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      sub_1C410A1B8();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C447F5A8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Replica);
      sub_1C4497268();
      uint64_t v25 = v66;
      unint64_t v26 = v67;
      sub_1C3F962E0((uint64_t)v7, &qword_1EBBC0798);
      uint64_t v10 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3F67EA0(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v64;
      }
      unint64_t v28 = *(void *)(v10 + 16);
      unint64_t v27 = *(void *)(v10 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1C3F67EA0(v27 > 1, v28 + 1, 1);
        uint64_t v10 = v64;
      }
      *(void *)(v10 + 16) = v28 + 1;
      unint64_t v29 = v10 + 16 * v28;
      *(void *)(v29 + 32) = v25;
      *(void *)(v29 + 40) = v26;
      v13 += v61;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v1 = v58;
    uint64_t v2 = v59;
  }
  uint64_t v66 = v10;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39AD70);
  unint64_t v57 = sub_1C410BCA4();
  uint64_t v58 = v30;
  uint64_t v59 = sub_1C44970B8();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t *)(v1 + OBJC_IVAR___ObjCRenameSequence_renameAddedBySequence);
  swift_beginAccess();
  uint64_t v34 = *v33;
  int64_t v35 = *(void *)(*v33 + 16);
  uint64_t v36 = MEMORY[0x1E4FBC860];
  if (v35)
  {
    void v56[2] = v32;
    uint64_t v68 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C3F67EA0(0, v35, 0);
    unint64_t v37 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v56[1] = v34;
    uint64_t v38 = v34 + v37;
    uint64_t v61 = *(void *)(v2 + 72);
    long long v60 = xmmword_1C449B4A0;
    do
    {
      sub_1C3F970C4(v38, (uint64_t)v7, &qword_1EBBC0798);
      uint64_t v69 = 40;
      unint64_t v70 = 0xE100000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E0);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = v60;
      char v40 = sub_1C4496658();
      uint64_t v41 = MEMORY[0x1E4FBC358];
      *(void *)(v39 + 56) = MEMORY[0x1E4FBC358];
      uint64_t v42 = MEMORY[0x1E4FBC3B0];
      *(void *)(v39 + 64) = MEMORY[0x1E4FBC3B0];
      *(unsigned char *)(v39 + 32) = v40;
      uint64_t v43 = sub_1C4496658();
      *(void *)(v39 + 96) = v41;
      *(void *)(v39 + 104) = v42;
      *(unsigned char *)(v39 + 72) = BYTE1(v43);
      uint64_t v64 = sub_1C44971E8();
      uint64_t v65 = v44;
      sub_1C4497268();
      uint64_t v63 = *(void *)&v7[*(int *)(type metadata accessor for Replica() + 20)];
      sub_1C4498088();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      uint64_t v45 = *(int *)(v62 + 48);
      uint64_t v46 = &v5[v45];
      uint64_t v47 = &v7[v45];
      sub_1C3FB563C((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Replica);
      uint64_t v48 = sub_1C44967E8();
      uint64_t v49 = *(void *)(v48 - 8);
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
      sub_1C410A1B8();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v48);
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C447F5A8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Replica);
      sub_1C4497268();
      uint64_t v51 = v69;
      unint64_t v50 = v70;
      sub_1C3F962E0((uint64_t)v7, &qword_1EBBC0798);
      uint64_t v36 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C3F67EA0(0, *(void *)(v36 + 16) + 1, 1);
        uint64_t v36 = v68;
      }
      unint64_t v53 = *(void *)(v36 + 16);
      unint64_t v52 = *(void *)(v36 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_1C3F67EA0(v52 > 1, v53 + 1, 1);
        uint64_t v36 = v68;
      }
      *(void *)(v36 + 16) = v53 + 1;
      unint64_t v54 = v36 + 16 * v53;
      *(void *)(v54 + 32) = v51;
      *(void *)(v54 + 40) = v50;
      v38 += v61;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
  }
  uint64_t v69 = v36;
  sub_1C44970B8();
  swift_bridgeObjectRelease();
  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  sub_1C4497D28();
  swift_bridgeObjectRelease();
  uint64_t v69 = 0x65636E6575716573;
  unint64_t v70 = 0xEA00000000005B3ALL;
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  return v69;
}

id sub_1C447DCD8()
{
  return sub_1C447F418(type metadata accessor for ObjCRenameSequence);
}

uint64_t sub_1C447E0FC(uint64_t a1)
{
  sub_1C3F970C4(a1, (uint64_t)v11, (uint64_t *)&unk_1EA39AE20);
  if (!v12)
  {
    sub_1C3F962E0((uint64_t)v11, (uint64_t *)&unk_1EA39AE20);
    goto LABEL_6;
  }
  type metadata accessor for ObjCVersion();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v2 = (uint64_t *)&v10[OBJC_IVAR___ObjCVersion_version];
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR___ObjCVersion_version);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_1C4113F94(v4, v7)) {
    char v8 = sub_1C4113F94(v3, v6);
  }
  else {
    char v8 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C447E3AC(uint64_t a1)
{
  uint64_t v2 = sub_1C44967E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v102 = v2;
  uint64_t v103 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v82 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09D0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v96 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v98 = (char *)&v80 - v8;
  uint64_t v9 = sub_1C4496678();
  uint64_t v10 = *(void **)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Replica();
  uint64_t v101 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v95 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v97 = (char *)&v80 - v17;
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v80 - v18;
  uint64_t v81 = type metadata accessor for Timestamp(0);
  uint64_t v20 = MEMORY[0x1F4188790](v81);
  unint64_t v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v80 - v23;
  uint64_t v25 = a1 + OBJC_IVAR___ObjCTimestamp_timestamp;
  sub_1C3FB563C(a1 + OBJC_IVAR___ObjCTimestamp_timestamp, (uint64_t)&v80 - v23, type metadata accessor for Timestamp);
  uint64_t v87 = v24;
  sub_1C3FB5024((uint64_t)v24, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Replica);
  unint64_t v26 = (void (*)(char *, uint64_t, uint64_t))v10[4];
  uint64_t v92 = v19;
  uint64_t v85 = v10 + 4;
  uint64_t v84 = v26;
  v26(v12, (uint64_t)v19, v9);
  uint64_t v100 = v25;
  sub_1C3FB563C(v25, (uint64_t)v22, type metadata accessor for Timestamp);
  uint64_t v27 = *(void *)&v22[*(int *)(v13 + 20)];
  uint64_t v88 = v22;
  sub_1C447F5A8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Replica);
  unint64_t v28 = (objc_class *)type metadata accessor for ObjCReplica(0);
  unint64_t v29 = (char *)objc_allocWithZone(v28);
  uint64_t v30 = v10 + 2;
  uint64_t v31 = (void (*)(char *, char *, uint64_t))v10[2];
  v31(&v29[OBJC_IVAR___ObjCReplica_uuid], v12, v9);
  *(void *)&v29[OBJC_IVAR___ObjCReplica_index] = v27;
  v105.receiver = v29;
  v105.super_class = v28;
  Class v86 = v28;
  uint64_t v32 = (char *)objc_msgSendSuper2(&v105, sel_init);
  uint64_t v33 = (void (*)(char *, uint64_t))v10[1];
  uint64_t v93 = v12;
  uint64_t v94 = v10 + 1;
  v33(v12, v9);
  uint64_t v34 = (uint64_t)v97;
  int64_t v35 = &v32[OBJC_IVAR___ObjCReplica_uuid];
  swift_beginAccess();
  uint64_t v90 = v9;
  uint64_t v91 = v31;
  uint64_t v89 = v30;
  v31((char *)v34, v35, v9);
  uint64_t v36 = *(void *)&v32[OBJC_IVAR___ObjCReplica_index];

  *(void *)(v34 + *(int *)(v101 + 20)) = v36;
  unint64_t v37 = &v99[OBJC_IVAR___ObjCVersion_version];
  swift_beginAccess();
  uint64_t v38 = *(void *)v37;
  uint64_t v39 = *(void *)(*(void *)v37 + 16);
  uint64_t v83 = v33;
  if (v39)
  {
    char v40 = v98;
    uint64_t v41 = v102;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v42 = sub_1C3F8F160(v34);
    if (v43)
    {
      uint64_t v44 = v103;
      uint64_t v45 = (uint64_t)v40;
      (*(void (**)(char *, unint64_t, uint64_t))(v103 + 16))(v40, *(void *)(v38 + 56) + *(void *)(v103 + 72) * v42, v41);
      uint64_t v46 = *(char **)(v44 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v46)(v40, 0, 1, v41);
    }
    else
    {
      uint64_t v46 = *(char **)(v103 + 56);
      uint64_t v45 = (uint64_t)v40;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46)(v40, 1, 1, v41);
    }
    swift_bridgeObjectRelease();
    uint64_t v47 = v41;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = v102;
    uint64_t v46 = *(char **)(v103 + 56);
    uint64_t v45 = (uint64_t)v98;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46)(v98, 1, 1, v102);
  }
  uint64_t v48 = v100;
  sub_1C447F5A8(v34, (uint64_t (*)(void))type metadata accessor for Replica);
  uint64_t v49 = (char *)(v103 + 48);
  unint64_t v50 = *(char **)(v103 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v50)(v45, 1, v47))
  {
    uint64_t v97 = v49;
    uint64_t v98 = v50;
    uint64_t v99 = v46;
    sub_1C3F962E0(v45, (uint64_t *)&unk_1EBBC09D0);
    uint64_t v51 = (uint64_t)v87;
    sub_1C3FB563C(v48, (uint64_t)v87, type metadata accessor for Timestamp);
    uint64_t v52 = v51;
    uint64_t v53 = (uint64_t)v92;
    sub_1C3FB5024(v52, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for Replica);
    unint64_t v54 = v93;
    uint64_t v55 = v90;
    v84(v93, v53, v90);
    uint64_t v56 = (uint64_t)v88;
    sub_1C3FB563C(v48, (uint64_t)v88, type metadata accessor for Timestamp);
    uint64_t v57 = v101;
    uint64_t v58 = *(void *)(v56 + *(int *)(v101 + 20));
    sub_1C447F5A8(v56, (uint64_t (*)(void))type metadata accessor for Replica);
    uint64_t v59 = v86;
    long long v60 = (char *)objc_allocWithZone(v86);
    uint64_t v61 = v91;
    v91(&v60[OBJC_IVAR___ObjCReplica_uuid], v54, v55);
    *(void *)&v60[OBJC_IVAR___ObjCReplica_index] = v58;
    v104.receiver = v60;
    v104.super_class = v59;
    uint64_t v62 = (char *)objc_msgSendSuper2(&v104, sel_init);
    v83(v54, v55);
    uint64_t v63 = &v62[OBJC_IVAR___ObjCReplica_uuid];
    swift_beginAccess();
    uint64_t v64 = (uint64_t)v95;
    v61(v95, v63, v55);
    uint64_t v65 = *(void *)&v62[OBJC_IVAR___ObjCReplica_index];

    *(void *)(v64 + *(int *)(v57 + 20)) = v65;
    uint64_t v66 = *((void *)v37 + 1);
    if (*(void *)(v66 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v67 = sub_1C3F8F160(v64);
      uint64_t v68 = (uint64_t)v96;
      if (v69)
      {
        uint64_t v70 = v102;
        (*(void (**)(char *, unint64_t, uint64_t))(v103 + 16))(v96, *(void *)(v66 + 56) + *(void *)(v103 + 72) * v67, v102);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v99)(v68, 0, 1, v70);
        uint64_t v71 = v70;
      }
      else
      {
        uint64_t v75 = v102;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v99)(v96, 1, 1, v102);
        uint64_t v71 = v75;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v71 = v102;
      uint64_t v68 = (uint64_t)v96;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v99)(v96, 1, 1, v102);
    }
    unint64_t v76 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v98;
    sub_1C447F5A8(v64, (uint64_t (*)(void))type metadata accessor for Replica);
    if (v76(v68, 1, v71))
    {
      sub_1C3F962E0(v68, (uint64_t *)&unk_1EBBC09D0);
      char v74 = 0;
    }
    else
    {
      uint64_t v77 = v103;
      unint64_t v78 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v82, v68, v71);
      sub_1C3F962E0(v68, (uint64_t *)&unk_1EBBC09D0);
      char v74 = sub_1C4496788();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v71);
    }
  }
  else
  {
    uint64_t v72 = v103;
    uint64_t v73 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v82, v45, v47);
    sub_1C3F962E0(v45, (uint64_t *)&unk_1EBBC09D0);
    char v74 = sub_1C4496788();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v47);
  }
  return v74 & 1;
}

uint64_t sub_1C447EDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Replica();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = a3 + OBJC_IVAR___ObjCReplica_uuid;
  swift_beginAccess();
  uint64_t v11 = sub_1C4496678();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  *(void *)&v9[*(int *)(v7 + 28)] = *(void *)(a3 + OBJC_IVAR___ObjCReplica_index);
  if (__OFADD__(a1, a2))
  {
    __break(1u);
  }
  else if (a1 + a2 >= a1)
  {
    swift_beginAccess();
    sub_1C410CBCC((uint64_t)v9, a1, a1 + a2);
    sub_1C447F5A8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Replica);
    return swift_endAccess();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C447EFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C44967E8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for Replica();
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = a3 + OBJC_IVAR___ObjCReplica_uuid;
  swift_beginAccess();
  uint64_t v15 = sub_1C4496678();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  *(void *)&v13[*(int *)(v11 + 28)] = *(void *)(a3 + OBJC_IVAR___ObjCReplica_index);
  if (__OFADD__(a1, a2))
  {
    __break(1u);
  }
  else if (a1 + a2 >= a1)
  {
    sub_1C4496698();
    swift_beginAccess();
    sub_1C410CDF4((uint64_t)v13, (uint64_t)v9);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1C447F5A8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Replica);
    return swift_endAccess();
  }
  __break(1u);
  return result;
}

id sub_1C447F400()
{
  return sub_1C447F418(type metadata accessor for ObjCVersion);
}

id sub_1C447F418(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void *assignWithCopy for RLEMapping(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_weakCopyAssign();
  return a1;
}

void *assignWithTake for RLEMapping(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_weakTakeAssign();
  return a1;
}

ValueMetadata *type metadata accessor for RLEMapping()
{
  return &type metadata for RLEMapping;
}

uint64_t assignWithCopy for Renames(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Renames(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Renames()
{
  return &type metadata for Renames;
}

uint64_t sub_1C447F5A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C447F608(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v82 = a3;
  v91[1] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v84 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v83 = (char *)&v76 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v14 = v13;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_75;
  }
  int64_t v15 = v82 - a2;
  if (v82 - a2 == 0x8000000000000000 && v13 == -1) {
LABEL_76:
  }
    __break(1u);
  uint64_t v16 = (uint64_t)(a2 - a1) / v13;
  unint64_t v90 = a4;
  v91[0] = a1;
  uint64_t v17 = v15 / v13;
  if (v16 >= v15 / v14)
  {
    if (v17 < 0) {
      goto LABEL_77;
    }
    uint64_t v19 = v17 * v14;
    if (a4 < a2 || a2 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v44 = a4 + v19;
    unint64_t v89 = a4 + v19;
    v91[0] = a2;
    if (v19 < 1 || a1 >= a2) {
      goto LABEL_73;
    }
    uint64_t v46 = -v14;
    uint64_t v48 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    unint64_t v47 = v8 + 16;
    unint64_t v78 = (void (**)(char *, uint64_t))(v47 - 8);
    unint64_t v79 = v48;
    unint64_t v80 = a1;
    unint64_t v81 = v47;
    unint64_t v77 = a4;
    while (1)
    {
      uint64_t v49 = v79;
      v79(v83, v44 + v46, v7);
      unint64_t v50 = a2 + v46;
      v49(v84, a2 + v46, v7);
      unint64_t v87 = sub_1C4496658();
      LOWORD(v88) = v51;
      BYTE2(v88) = v52;
      BYTE3(v88) = v53;
      BYTE4(v88) = v54;
      BYTE5(v88) = v55;
      BYTE6(v88) = v56;
      HIBYTE(v88) = v57;
      unint64_t v85 = sub_1C4496658();
      LOWORD(v86) = v58;
      BYTE2(v86) = v59;
      BYTE3(v86) = v60;
      BYTE4(v86) = v61;
      BYTE5(v86) = v62;
      BYTE6(v86) = v63;
      HIBYTE(v86) = v64;
      unint64_t v65 = bswap64(v87);
      unint64_t v66 = bswap64(v85);
      if (v65 != v66) {
        break;
      }
      unint64_t v65 = bswap64(v88);
      unint64_t v66 = bswap64(v86);
      unint64_t v67 = v82;
      if (v65 != v66) {
        goto LABEL_55;
      }
      int v68 = 0;
LABEL_58:
      unint64_t v69 = v67 + v46;
      uint64_t v70 = *v78;
      (*v78)(v84, v7);
      v70(v83, v7);
      if (v68 < 0)
      {
        if (v67 < a2 || v69 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v74 = v80;
          unint64_t v73 = v77;
        }
        else
        {
          BOOL v72 = v67 == a2;
          unint64_t v74 = v80;
          unint64_t v73 = v77;
          if (!v72) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v91[0] += v46;
      }
      else
      {
        unint64_t v71 = v89;
        v89 += v46;
        if (v67 < v71 || v69 >= v71)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v50 = a2;
          unint64_t v74 = v80;
          unint64_t v73 = v77;
        }
        else
        {
          BOOL v72 = v67 == v71;
          unint64_t v73 = v77;
          if (!v72) {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v50 = a2;
          unint64_t v74 = v80;
        }
      }
      unint64_t v44 = v89;
      if (v89 > v73)
      {
        a2 = v50;
        unint64_t v82 = v69;
        if (v50 > v74) {
          continue;
        }
      }
      goto LABEL_73;
    }
    unint64_t v67 = v82;
LABEL_55:
    if (v65 < v66) {
      int v68 = -1;
    }
    else {
      int v68 = 1;
    }
    goto LABEL_58;
  }
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v81 = a4 + v18;
    unint64_t v89 = a4 + v18;
    if (v18 >= 1 && a2 < v82)
    {
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      unint64_t v22 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        v21(v83, a2, v7);
        v21(v84, a4, v7);
        unint64_t v87 = sub_1C4496658();
        LOWORD(v88) = v23;
        BYTE2(v88) = v24;
        BYTE3(v88) = v25;
        BYTE4(v88) = v26;
        BYTE5(v88) = v27;
        BYTE6(v88) = v28;
        HIBYTE(v88) = v29;
        unint64_t v85 = sub_1C4496658();
        LOWORD(v86) = v30;
        BYTE2(v86) = v31;
        BYTE3(v86) = v32;
        BYTE4(v86) = v33;
        BYTE5(v86) = v34;
        BYTE6(v86) = v35;
        HIBYTE(v86) = v36;
        unint64_t v37 = bswap64(v87);
        unint64_t v38 = bswap64(v85);
        if (v37 == v38 && (unint64_t v37 = bswap64(v88), v38 = bswap64(v86), v37 == v38))
        {
          int v39 = 0;
        }
        else if (v37 < v38)
        {
          int v39 = -1;
        }
        else
        {
          int v39 = 1;
        }
        char v40 = *v22;
        (*v22)(v84, v7);
        v40(v83, v7);
        unint64_t v41 = v91[0];
        if (v39 < 0)
        {
          unint64_t v43 = a2 + v14;
          if (v91[0] < a2 || v91[0] >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v91[0] == a2)
          {
            unint64_t v41 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v42 = v90 + v14;
          if (v91[0] < v90 || v91[0] >= v42)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v91[0] != v90)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v90 = v42;
          unint64_t v43 = a2;
        }
        v91[0] = v41 + v14;
        a4 = v90;
        if (v90 >= v81) {
          break;
        }
        a2 = v43;
      }
      while (v43 < v82);
    }
LABEL_73:
    sub_1C411E720(v91, &v90, (uint64_t *)&v89);
    return 1;
  }
LABEL_77:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

BOOL sub_1C447FDA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  char v40 = a3;
  uint64_t v5 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v38 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v39 = (uint64_t)&v38 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC698);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v38 - v21;
  MEMORY[0x1F4188790](v20);
  char v24 = (char *)&v38 - v23;
  uint64_t v41 = a1;
  sub_1C3F970C4(a1, (uint64_t)&v38 - v23, &qword_1EBBBF870);
  uint64_t v42 = a2;
  sub_1C3F970C4(a2, (uint64_t)v22, &qword_1EBBBF870);
  uint64_t v25 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_1C3F970C4((uint64_t)v24, (uint64_t)v16, &qword_1EBBBF870);
  sub_1C3F970C4((uint64_t)v22, v25, &qword_1EBBBF870);
  char v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v26((uint64_t)v16, 1, v5) == 1)
  {
    sub_1C3F962E0((uint64_t)v22, &qword_1EBBBF870);
    sub_1C3F962E0((uint64_t)v24, &qword_1EBBBF870);
    if (v26(v25, 1, v5) == 1)
    {
      sub_1C3F962E0((uint64_t)v16, &qword_1EBBBF870);
LABEL_9:
      uint64_t v36 = v40(0);
      return *(void *)(v41 + *(int *)(v36 + 20)) == *(void *)(v42 + *(int *)(v36 + 20));
    }
    goto LABEL_6;
  }
  sub_1C3F970C4((uint64_t)v16, v43, &qword_1EBBBF870);
  if (v26(v25, 1, v5) == 1)
  {
    sub_1C3F962E0((uint64_t)v22, &qword_1EBBBF870);
    sub_1C3F962E0((uint64_t)v24, &qword_1EBBBF870);
    sub_1C447F5A8(v43, type metadata accessor for FinalizedTimestamp);
LABEL_6:
    char v27 = &qword_1EBBBC698;
    uint64_t v28 = (uint64_t)v16;
LABEL_11:
    sub_1C3F962E0(v28, v27);
    return 0;
  }
  uint64_t v29 = (uint64_t)v12;
  sub_1C3FB5024(v25, (uint64_t)v12, type metadata accessor for FinalizedTimestamp);
  uint64_t v30 = *(int *)(v5 + 20);
  uint64_t v31 = *(void *)(v43 + v30);
  uint64_t v32 = *(void *)&v12[v30];
  uint64_t v33 = v39;
  sub_1C3FB563C(v43, v39, type metadata accessor for FinalizedTimestamp);
  uint64_t v34 = v38;
  sub_1C3FB563C(v29, v38, type metadata accessor for FinalizedTimestamp);
  if (v31 != v32)
  {
    sub_1C447F5A8(v34, type metadata accessor for FinalizedTimestamp);
    sub_1C447F5A8(v33, type metadata accessor for FinalizedTimestamp);
    sub_1C447F5A8(v29, type metadata accessor for FinalizedTimestamp);
    sub_1C3F962E0((uint64_t)v22, &qword_1EBBBF870);
    sub_1C3F962E0((uint64_t)v24, &qword_1EBBBF870);
    sub_1C447F5A8(v43, type metadata accessor for FinalizedTimestamp);
    uint64_t v28 = (uint64_t)v16;
    char v27 = &qword_1EBBBF870;
    goto LABEL_11;
  }
  char v35 = sub_1C4496618();
  sub_1C447F5A8(v34, type metadata accessor for FinalizedTimestamp);
  sub_1C447F5A8(v33, type metadata accessor for FinalizedTimestamp);
  sub_1C447F5A8(v29, type metadata accessor for FinalizedTimestamp);
  sub_1C3F962E0((uint64_t)v22, &qword_1EBBBF870);
  sub_1C3F962E0((uint64_t)v24, &qword_1EBBBF870);
  sub_1C447F5A8(v43, type metadata accessor for FinalizedTimestamp);
  sub_1C3F962E0((uint64_t)v16, &qword_1EBBBF870);
  if (v35) {
    goto LABEL_9;
  }
  return 0;
}

void sub_1C448026C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v73 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v71 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v9 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v68 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v60 - v15;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
  uint64_t v17 = *(void *)(v72 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v72);
  uint64_t v20 = (uint64_t *)((char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v60 - v21;
  uint64_t v23 = OBJC_IVAR____TtC9Coherence7ObjCRLE_rle;
  uint64_t v64 = a3;
  uint64_t v24 = *(void *)(a3 + OBJC_IVAR____TtC9Coherence7ObjCRLE_rle);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25 == 1)
  {
    uint64_t v26 = OBJC_IVAR____TtC9Coherence7ObjCRLE_rle;
    sub_1C3F970C4(v24 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)&v60 - v21, qword_1EBBBF0A0);
    sub_1C3F961BC((uint64_t)&v22[*(int *)(v72 + 36)], (uint64_t)v16, qword_1EBBBEF70);
    uint64_t v27 = type metadata accessor for RetainedMapRun(0);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v16, 1, v27);
    sub_1C3F962E0((uint64_t)v16, qword_1EBBBEF70);
    if (v28 != 1)
    {
      uint64_t v23 = v26;
      uint64_t v24 = *(void *)(v64 + v26);
      uint64_t v25 = *(void *)(v24 + 16);
      if (!v25)
      {
LABEL_58:
        __break(1u);
        return;
      }
      goto LABEL_8;
    }
LABEL_5:
    if (qword_1EBBBBF10 != -1) {
LABEL_54:
    }
      swift_once();
    uint64_t v29 = sub_1C4496678();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EBBC5890);
    uint64_t v30 = (void *)sub_1C4496608();
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t))(v73 + 16))(v73, a1, a2, v30, -1);
LABEL_45:

    return;
  }
  if (!v25) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v31 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v62 = v23;
  uint64_t v63 = v24;
  unint64_t v61 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  a2 = v24 + v61;
  uint64_t v70 = v73 + 16;
  unint64_t v66 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  unint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v75 = *(void *)(v17 + 72);
  swift_bridgeObjectRetain();
  uint64_t v32 = qword_1EBBBF0A0;
  uint64_t v69 = v31;
  uint64_t v65 = a1;
  do
  {
    uint64_t v33 = v32;
    sub_1C3F970C4(a2, (uint64_t)v20, v32);
    uint64_t v35 = *v20;
    uint64_t v34 = v20[1];
    BOOL v36 = __OFSUB__(v34, *v20);
    uint64_t v37 = v34 - *v20;
    if (v36)
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    uint64_t v38 = v35 + v37;
    if (__OFADD__(v35, v37)) {
      goto LABEL_49;
    }
    if (v31 >= v38) {
      uint64_t v39 = v35 + v37;
    }
    else {
      uint64_t v39 = v31;
    }
    if (v35 > a1 || v38 <= a1)
    {
      if (v35 < a1 || v35 >= v31)
      {
        uint64_t v32 = v33;
        sub_1C3F962E0((uint64_t)v20, v33);
        goto LABEL_11;
      }
      uint64_t v41 = v39 - v35;
      uint64_t v42 = (uint64_t)v71;
      if (__OFSUB__(v39, v35)) {
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v41 = v39 - a1;
      uint64_t v42 = (uint64_t)v71;
      if (__OFSUB__(v39, a1)) {
        goto LABEL_50;
      }
      uint64_t v35 = a1;
    }
    sub_1C3F970C4((uint64_t)v20 + *(int *)(v72 + 36), (uint64_t)v14, qword_1EBBBEF70);
    uint64_t v43 = type metadata accessor for RetainedMapRun(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v14, 1, v43) == 1)
    {
      sub_1C3F962E0((uint64_t)v14, qword_1EBBBEF70);
      (*v66)(v42, 1, 1, v74);
LABEL_32:
      sub_1C3F962E0(v42, &qword_1EBBBF870);
      if (qword_1EBBBBF10 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1C4496678();
      __swift_project_value_buffer(v44, (uint64_t)qword_1EBBC5890);
      uint64_t v45 = (void *)sub_1C4496608();
      int v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t))(v73 + 16))(v73, v35, v41, v45, -1);

      uint64_t v32 = v33;
      sub_1C3F962E0((uint64_t)v20, v33);
      uint64_t v31 = v69;
      if (v46)
      {
LABEL_46:
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_11;
    }
    sub_1C3F970C4((uint64_t)v14, v42, &qword_1EBBBF870);
    sub_1C447F5A8((uint64_t)v14, type metadata accessor for RetainedMapRun);
    if ((*v67)(v42, 1, v74) == 1) {
      goto LABEL_32;
    }
    uint64_t v47 = v42;
    uint64_t v48 = v68;
    sub_1C3FB5024(v47, v68, type metadata accessor for FinalizedTimestamp);
    uint64_t v49 = *(void *)(v48 + *(int *)(v74 + 20));
    BOOL v36 = __OFADD__(v49, v35);
    uint64_t v50 = v49 + v35;
    if (v36) {
      goto LABEL_52;
    }
    uint64_t v51 = v50 - *v20;
    if (__OFSUB__(v50, *v20)) {
      goto LABEL_53;
    }
    char v52 = v14;
    uint64_t v53 = v68;
    char v54 = (void *)sub_1C4496608();
    int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t))(v73 + 16))(v73, v35, v41, v54, v51);

    uint64_t v56 = v53;
    uint64_t v14 = v52;
    a1 = v65;
    sub_1C447F5A8(v56, type metadata accessor for FinalizedTimestamp);
    uint64_t v32 = v33;
    sub_1C3F962E0((uint64_t)v20, v33);
    uint64_t v31 = v69;
    if (v55) {
      goto LABEL_46;
    }
LABEL_11:
    a2 += v75;
    --v25;
  }
  while (v25);
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)(v64 + v62);
  uint64_t v58 = *(void *)(v57 + 16);
  if (!v58) {
    goto LABEL_58;
  }
  uint64_t v17 = *(void *)(v57 + v61 + v75 * (v58 - 1) + 8);
  if (v17 < v31)
  {
    a2 = v31 - v17;
    if (__OFSUB__(v31, v17)) {
      goto LABEL_56;
    }
    if (qword_1EBBBBF10 == -1)
    {
LABEL_44:
      uint64_t v59 = sub_1C4496678();
      __swift_project_value_buffer(v59, (uint64_t)qword_1EBBC5890);
      uint64_t v30 = (void *)sub_1C4496608();
      (*(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t))(v73 + 16))(v73, v17, a2, v30, -1);
      goto LABEL_45;
    }
LABEL_57:
    swift_once();
    goto LABEL_44;
  }
}

uint64_t sub_1C4480A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_1C4480A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t *sub_1C4480A44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for FinalizedTimestamp(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_1C4496678();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1C4480BE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1C4496678();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

char *sub_1C4480C94(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C4496678();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1C4480DE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v14 = sub_1C4496678();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(a1, a2, v14);
      *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
      goto LABEL_7;
    }
    sub_1C447F5A8((uint64_t)a1, type metadata accessor for FinalizedTimestamp);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_1C4496678();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1C4480FC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C4496678();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1C4481118(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v14 = sub_1C4496678();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
      goto LABEL_7;
    }
    sub_1C447F5A8((uint64_t)a1, type metadata accessor for FinalizedTimestamp);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_1C4496678();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_1C44813E8()
{
  sub_1C415B838();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C4481480(uint64_t a1)
{
  uint64_t result = sub_1C44814D8(&qword_1EBBBEF58, (void (*)(uint64_t))type metadata accessor for RetainedMapRun);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C44814D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Void __swiftcall MergeResult.merge(_:)(Coherence::MergeResult a1)
{
  int v2 = *(unsigned __int8 *)a1;
  if (*(unsigned char *)a1) {
    BOOL v3 = *v1 == v2;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    switch(*v1)
    {
      case 1:
        BOOL v4 = v2 == 2;
        goto LABEL_10;
      case 2:
        BOOL v4 = v2 == 1;
LABEL_10:
        if (v4) {
          LOBYTE(v2) = 3;
        }
        goto LABEL_12;
      case 3:
        if (v2 != 4) {
          return;
        }
        goto LABEL_12;
      case 4:
        return;
      default:
LABEL_12:
        *uint64_t v1 = v2;
        break;
    }
  }
}

uint64_t MergeResult.hash(into:)()
{
  return sub_1C4498608();
}

BOOL static MergeResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MergeResult.hashValue.getter()
{
  return sub_1C4498628();
}

unint64_t sub_1C448161C()
{
  unint64_t result = qword_1EA3A1590[0];
  if (!qword_1EA3A1590[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA3A1590);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MergeResult(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MergeResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C44817CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MergeResult()
{
  return &type metadata for MergeResult;
}

uint64_t sub_1C4481804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  v30[0] = a8;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (void *)((char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  uint64_t v38 = a1;
  uint64_t v20 = *(void *)(a1 + v19)
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v15, &qword_1EBBC0648);
  uint64_t v21 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
    sub_1C3F962E0((uint64_t)v15, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1C3F72140((uint64_t)v15, (uint64_t)v18, type metadata accessor for Proto_Set);
      uint64_t v22 = v32;
      goto LABEL_9;
    }
    sub_1C3F9253C((uint64_t)v15, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  uint64_t v22 = v32;
  sub_1C4496888();
  uint64_t v23 = *(int *)(v16 + 20);
  if (qword_1EBBC01E8 != -1) {
    swift_once();
  }
  *(uint64_t *)((char *)v18 + v23) = qword_1EBBC01E0;
  swift_retain();
LABEL_9:
  uint64_t v24 = v31;
  uint64_t v25 = v30[1];
  uint64_t v26 = sub_1C448E5A8(v18, v22, 0, 0, v31, a4, a5, a6, a7);
  if (v25)
  {
    swift_release();
    sub_1C3F9253C(v38, type metadata accessor for Proto_CRDT);
    return sub_1C3F9253C((uint64_t)v18, type metadata accessor for Proto_Set);
  }
  else
  {
    uint64_t v28 = v26;
    sub_1C3F9253C((uint64_t)v18, type metadata accessor for Proto_Set);
    uint64_t v33 = v24;
    uint64_t v34 = a4;
    uint64_t v35 = a5;
    uint64_t v36 = a6;
    uint64_t v37 = a7;
    type metadata accessor for CRDTDictionaryRef();
    uint64_t v29 = swift_allocObject();
    sub_1C4496668();
    *(void *)(v29 + 16) = v28;
    swift_release();
    uint64_t result = sub_1C3F9253C(v38, type metadata accessor for Proto_CRDT);
    *(void *)v30[0] = v29;
  }
  return result;
}

uint64_t sub_1C4481B54@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v7 - 8);
  int v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496888();
  uint64_t v10 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if (qword_1EBBC0668 != -1) {
    swift_once();
  }
  *(void *)(a3 + v10) = qword_1EBBC0660;
  swift_retain();
  swift_retain();
  uint64_t v11 = (void *)sub_1C3F51ACC();
  swift_release();
  uint64_t v16 = 0;
  uint64_t v12 = sub_1C4497528();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1C448F7B0(v11, a1, (uint64_t)&v16, a2, v12, WitnessTable, (uint64_t)v9);
  if (v3)
  {
    sub_1C3F9253C(a3, type metadata accessor for Proto_CRDT);
    return swift_release();
  }
  else
  {
    swift_release();
    return sub_1C43F1AEC((uint64_t)v9);
  }
}

uint64_t sub_1C4481CFC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  uint64_t v58 = *(void *)(a5 - 8);
  uint64_t v59 = a4;
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  char v52 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v57 = (char *)&v52 - v10;
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v15 = *(unsigned int (**)(void, void, void))(v14 + 8);
  int v55 = *(unsigned int (**)(void, void, void))v14;
  uint64_t v56 = v12;
  uint64_t v17 = *(int *)(v16 + 36);
  uint64_t v18 = (uint64_t *)(v5 + v17);
  uint64_t v19 = *(void *)(v5 + v17);
  uint64_t v20 = *(void *)(v5 + v17 + 8);
  uint64_t v21 = (uint64_t *)(a1 + v17);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  uint64_t v53 = v19;
  swift_bridgeObjectRetain();
  uint64_t v54 = v20;
  uint64_t v24 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C410EEFC(v13, v23, v15);
  sub_1C410EEFC(v56, v22, v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a5 + 24);
  uint64_t v26 = *(void *)(v24 + 16);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 72);
  int v28 = v27(a1, v26, v25);
  int v29 = v27(v5, v26, v25);
  uint64_t v31 = v57;
  uint64_t v30 = v58;
  LODWORD(v56) = v29;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 + 8) + 8))(a1, v26);
  LODWORD(v25) = *v59;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v33 = v31;
  v32(v31, a1, v24);
  if (v25 == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v24);
LABEL_3:
    char v34 = 1;
    goto LABEL_15;
  }
  int v35 = v28;
  uint64_t v36 = v18;
  uint64_t v37 = v52;
  v32(v52, (uint64_t)v33, v24);
  if ((v56 & 1) == 0)
  {
    uint64_t v45 = *(void (**)(char *, uint64_t))(v30 + 8);
    v45(v37, v24);
    v45(v33, v24);
    uint64_t v46 = v54;
    uint64_t v41 = v18;
    if ((v35 & 1) == 0)
    {
      char v34 = 0;
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  uint64_t v38 = (uint64_t *)&v37[*(int *)(v24 + 36)];
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  uint64_t v41 = v36;
  uint64_t v42 = *v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v43 = swift_bridgeObjectRetain();
  if (sub_1C4112134(v43, v39))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v30 + 8);
    v44(v37, v24);
    v44(v33, v24);
    goto LABEL_3;
  }
  char v47 = sub_1C4112134(v42, v40);
  uint64_t v56 = v42;
  char v34 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v30 + 8);
  v48(v37, v24);
  v48(v33, v24);
  if ((v34 & 1) == 0)
  {
    uint64_t v46 = v54;
    if (((v35 ^ 1) & 1) == 0)
    {
LABEL_12:
      uint64_t v49 = *v41;
      swift_bridgeObjectRetain();
      uint64_t v50 = swift_bridgeObjectRetain();
      if (sub_1C4112134(v50, v46))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v34 = 1;
      }
      else
      {
        char v34 = sub_1C4112134(v49, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v59 = v34 & 1;
  return result;
}

__n128 sub_1C4482124@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta();
  __n128 v9 = *a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = type metadata accessor for CRDTDictionaryElement.Delta();
  __n128 result = v9;
  *(__n128 *)(a3 + *(int *)(v7 + 36)) = v9;
  return result;
}

uint64_t sub_1C44821D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v78 = a2;
  uint64_t v73 = a5;
  uint64_t v74 = a4;
  uint64_t v69 = type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta();
  uint64_t v64 = *(void *)(v69 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v69);
  uint64_t v63 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = (char *)&v61 - v8;
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v62 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v67 = (uint64_t)&v61 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v61 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v65 = (uint64_t)&v61 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v66 = (uint64_t)&v61 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v61 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Proto_Version(0);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  int v28 = (uint64_t *)((char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = a1;
  uint64_t v72 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  uint64_t v30 = *(void *)(a1 + v72);
  uint64_t v31 = v30 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  sub_1C3F970C4(v31, (uint64_t)v24, &qword_1EBBC0578);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    uint64_t v32 = MEMORY[0x1E4FBC860];
    *int v28 = MEMORY[0x1E4FBC860];
    v28[1] = v32;
    sub_1C4496888();
    sub_1C3F962E0((uint64_t)v24, &qword_1EBBC0578);
  }
  else
  {
    sub_1C3F72140((uint64_t)v24, (uint64_t)v28, type metadata accessor for Proto_Version);
  }
  uint64_t v33 = v78;
  swift_retain();
  char v34 = v76;
  sub_1C3F8F9D0(v28, v33, &v77);
  uint64_t v35 = v29;
  if (v34)
  {
    swift_release();
    return sub_1C3F9253C(v29, type metadata accessor for Proto_Set.Element);
  }
  else
  {
    uint64_t v76 = (_OWORD *)(v73 + *(int *)(type metadata accessor for CRDTDictionaryElement.Delta() + 36));
    *uint64_t v76 = v77;
    uint64_t v37 = v30 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
    swift_beginAccess();
    sub_1C3F970C4(v37, (uint64_t)v21, &qword_1EBBC04F8);
    uint64_t v38 = v71;
    uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
    LODWORD(v37) = v39(v21, 1, v71);
    sub_1C3F962E0((uint64_t)v21, &qword_1EBBC04F8);
    uint64_t v40 = *(void *)(v29 + v72);
    if (v37 == 1)
    {
      uint64_t v41 = v40
          + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue;
      swift_beginAccess();
      uint64_t v42 = v65;
      sub_1C3F970C4(v41, v65, &qword_1EBBC04F8);
      LODWORD(v41) = v39((char *)v42, 1, v38);
      sub_1C3F962E0(v42, &qword_1EBBC04F8);
      if (v41 == 1)
      {
        swift_release();
        sub_1C3F9253C(v29, type metadata accessor for Proto_Set.Element);
        return swift_storeEnumTagMultiPayload();
      }
      else
      {
        uint64_t v48 = *(void *)(v29 + v72)
            + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue;
        swift_beginAccess();
        uint64_t v49 = v61;
        sub_1C3F970C4(v48, v61, &qword_1EBBC04F8);
        if (v39((char *)v49, 1, v38) == 1)
        {
          uint64_t v50 = v62;
          sub_1C4496888();
          uint64_t v51 = *(int *)(v38 + 20);
          if (qword_1EBBC0668 != -1) {
            swift_once();
          }
          *(void *)(v50 + v51) = qword_1EBBC0660;
          swift_retain();
          sub_1C3F962E0(v49, &qword_1EBBC04F8);
        }
        else
        {
          uint64_t v50 = v62;
          sub_1C3F72140(v49, v62, type metadata accessor for Proto_CRDT);
        }
        type metadata accessor for CRDecoder(0);
        swift_allocObject();
        uint64_t v55 = v78;
        swift_retain();
        uint64_t v56 = sub_1C3FB9A38(v50, v55);
        swift_release();
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v59 = v63;
        (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v56, AssociatedTypeWitness);
        swift_release();
        sub_1C3F9253C(v29, type metadata accessor for Proto_Set.Element);
        uint64_t v60 = v69;
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 32))(v73, v59, v60);
      }
    }
    else
    {
      uint64_t v43 = v40
          + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
      swift_beginAccess();
      uint64_t v44 = v66;
      sub_1C3F970C4(v43, v66, &qword_1EBBC04F8);
      if (v39((char *)v44, 1, v38) == 1)
      {
        uint64_t v45 = v67;
        sub_1C4496888();
        uint64_t v46 = *(int *)(v38 + 20);
        char v47 = v68;
        if (qword_1EBBC0668 != -1) {
          swift_once();
        }
        *(void *)(v45 + v46) = qword_1EBBC0660;
        swift_retain();
        sub_1C3F962E0(v44, &qword_1EBBC04F8);
      }
      else
      {
        uint64_t v45 = v67;
        sub_1C3F72140(v44, v67, type metadata accessor for Proto_CRDT);
        char v47 = v68;
      }
      type metadata accessor for CRDecoder(0);
      swift_allocObject();
      uint64_t v52 = v78;
      swift_retain();
      uint64_t v53 = sub_1C3FB9A38(v45, v52);
      swift_release();
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v74 + 16) + 8) + 8))(v53);
      swift_release();
      sub_1C3F9253C(v35, type metadata accessor for Proto_Set.Element);
      uint64_t v54 = v69;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 32))(v73, v47, v54);
    }
  }
}

uint64_t sub_1C4482B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v76 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v77 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v75 = (char *)&v66 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v70 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v69 = (uint64_t)&v66 - v13;
  uint64_t v68 = type metadata accessor for Proto_CRDT(0);
  uint64_t v67 = *(void *)(v68 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v68);
  uint64_t v72 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v71 = (uint64_t)&v66 - v17;
  uint64_t v74 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v73 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = v6;
  uint64_t v78 = v7;
  uint64_t v19 = type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta();
  uint64_t v79 = *(void *)(v19 - 8);
  uint64_t v80 = v19;
  MEMORY[0x1F4188790](v19);
  unint64_t v81 = (char *)&v66 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v66 - v25;
  uint64_t v27 = type metadata accessor for Proto_Version(0);
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t *)((char *)&v66 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C4496888();
  uint64_t v31 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  if (qword_1EBBBF1E0 != -1) {
    swift_once();
  }
  *(void *)(a3 + v31) = qword_1EBBBF1D8;
  uint64_t v32 = *(int *)(a2 + 36);
  uint64_t v82 = v3;
  uint64_t v33 = (uint64_t *)(v3 + v32);
  uint64_t v85 = v31;
  uint64_t v34 = a3;
  uint64_t v35 = v33[1];
  uint64_t v86 = *v33;
  uint64_t v87 = v35;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F9FF10(v88, v30);
  uint64_t v36 = v34;
  uint64_t v37 = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set.Element._StorageClass(0);
    swift_allocObject();
    uint64_t v38 = swift_retain();
    *(void *)(v36 + v37) = sub_1C3F97F64(v38);
    swift_release();
  }
  uint64_t v39 = *(void *)(v36 + v37);
  sub_1C3F72140((uint64_t)v30, (uint64_t)v26, type metadata accessor for Proto_Version);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v27);
  sub_1C3F961BC((uint64_t)v26, (uint64_t)v24, &qword_1EBBC0578);
  uint64_t v40 = v39 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v24, v40, &qword_1EBBC0578);
  swift_endAccess();
  swift_release();
  uint64_t v41 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v81, v82, v80);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    uint64_t v43 = v83;
    uint64_t v44 = v84;
    uint64_t v45 = v88;
    if (result != 1) {
      return result;
    }
    char v47 = v75;
    uint64_t v46 = v76;
    uint64_t v48 = v77;
    uint64_t v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v76 + 32))(v75, v41, v77);
    MEMORY[0x1F4188790](v49);
    uint64_t v50 = v78;
    *(&v66 - 4) = v43;
    *(&v66 - 3) = v50;
    *(&v66 - 2) = (uint64_t)v47;
    *(&v66 - 1) = v45;
    uint64_t v51 = v72;
    sub_1C3F5585C((void (*)(uint64_t))sub_1C423D624, v72);
    if (!v44)
    {
      uint64_t v52 = v85;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set.Element._StorageClass(0);
        swift_allocObject();
        uint64_t v53 = swift_retain();
        *(void *)(v36 + v52) = sub_1C3F97F64(v53);
        swift_release();
      }
      uint64_t v54 = *(void *)(v36 + v52);
      uint64_t v55 = v69;
      sub_1C3F72140(v51, v69, type metadata accessor for Proto_CRDT);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v55, 0, 1, v68);
      uint64_t v56 = v70;
      sub_1C3F961BC(v55, v70, &qword_1EBBC04F8);
      uint64_t v57 = OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialValue;
LABEL_16:
      uint64_t v65 = v54 + v57;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v56, v65, &qword_1EBBC04F8);
      swift_endAccess();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    }
  }
  else
  {
    char v47 = v73;
    uint64_t v46 = v74;
    uint64_t v48 = v83;
    uint64_t v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(v73, v41, v83);
    MEMORY[0x1F4188790](v58);
    uint64_t v59 = v78;
    *(&v66 - 4) = v48;
    *(&v66 - 3) = v59;
    uint64_t v60 = v88;
    *(&v66 - 2) = (uint64_t)v47;
    *(&v66 - 1) = v60;
    uint64_t v61 = v71;
    uint64_t v62 = v84;
    sub_1C3F5585C((void (*)(uint64_t))sub_1C3FBC930, v71);
    if (!v62)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set.Element._StorageClass(0);
        swift_allocObject();
        uint64_t v63 = swift_retain();
        *(void *)(v36 + v37) = sub_1C3F97F64(v63);
        swift_release();
      }
      uint64_t v54 = *(void *)(v36 + v37);
      uint64_t v64 = v69;
      sub_1C3F72140(v61, v69, type metadata accessor for Proto_CRDT);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v68);
      uint64_t v56 = v70;
      sub_1C3F961BC(v64, v70, &qword_1EBBC04F8);
      uint64_t v57 = OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
      goto LABEL_16;
    }
  }
  sub_1C3F9253C(v36, type metadata accessor for Proto_Set.Element);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
}

uint64_t sub_1C44833E4(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v2 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v33 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v31 = (char *)&v31 - v5;
  uint64_t v6 = type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v34 = v3;
  uint64_t v35 = v2;
  uint64_t v12 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v13 = sub_1C4497B38();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v31 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v36, v13);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v12);
  uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  if (v21 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v17, v12);
    (*v22)(v11, v37, v6);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v26 = v11;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v28 = v31;
        uint64_t v27 = v32;
        uint64_t v29 = v33;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v26, v33);
        char v24 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v28, v34);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v12);
        return v24 & 1;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v12);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v12);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v6);
    }
LABEL_13:
    char v24 = 1;
    return v24 & 1;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  (*v22)(v9, v37, v6);
  int v23 = swift_getEnumCaseMultiPayload();
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v6);
    goto LABEL_13;
  }
  if (v23 == 1) {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v6);
  }
  char v24 = 0;
  return v24 & 1;
}

uint64_t sub_1C4483850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v92 = a3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v82 = sub_1C4497B38();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v84 = (uint64_t)&v79 - v5;
  uint64_t v88 = a2;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v85 = (char *)&v79 - v8;
  uint64_t v89 = *(void *)(v4 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v81 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v87 = (char *)&v79 - v11;
  uint64_t v12 = type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v79 - v17;
  uint64_t v90 = v4;
  uint64_t v91 = v6;
  uint64_t v19 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v20 = sub_1C4497B38();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  char v24 = (char *)&v79 - v23;
  uint64_t v25 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v79 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v93, v20);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v19);
  uint64_t v29 = v13;
  uint64_t v30 = (void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  if (v28 != 1)
  {
    uint64_t v35 = (uint64_t)v85;
    uint64_t v36 = v86;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v24, v19);
    uint64_t v37 = v94;
    (*v30)(v18, v94, v12);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v39 = v19;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v40 = AssociatedTypeWitness;
        (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v35, v18, AssociatedTypeWitness);
        uint64_t v41 = v84;
        uint64_t v42 = v90;
        CRDT.merging(delta:)(v35, v90, v91, v84);
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v40);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v19);
        uint64_t v43 = v89;
        int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v41, 1, v42);
        uint64_t v45 = v92;
        if (v44 == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v41, v82);
          return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v45, 1, 1, v19);
        }
        uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
        uint64_t v73 = v81;
        v72(v81, v41, v42);
        uint64_t v74 = v87;
        v72(v87, (uint64_t)v73, v42);
        uint64_t v75 = (uint64_t *)(v94 + *(int *)(v88 + 36));
        uint64_t v77 = *v75;
        uint64_t v76 = v75[1];
        v72(v45, (uint64_t)v74, v42);
        uint64_t v78 = &v45[*(int *)(type metadata accessor for CRDTDictionaryElement() + 36)];
        *(void *)uint64_t v78 = v77;
        *((void *)v78 + 1) = v76;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v45, 0, 1, v39);
        goto LABEL_14;
      }
      uint64_t v65 = v89;
      uint64_t v64 = v90;
      uint64_t v66 = v87;
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v87, v27, v90);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v39);
      uint64_t v67 = (uint64_t *)(v37 + *(int *)(v88 + 36));
      uint64_t v68 = *v67;
      uint64_t v69 = v67[1];
      uint64_t v70 = v92;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v92, v66, v64);
      uint64_t v71 = &v70[*(int *)(type metadata accessor for CRDTDictionaryElement() + 36)];
      *(void *)uint64_t v71 = v68;
      *((void *)v71 + 1) = v69;
      uint64_t v62 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56);
      uint64_t v63 = v70;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v19);
      uint64_t v54 = v90;
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
      uint64_t v56 = v87;
      v55(v87, v18, v90);
      uint64_t v57 = (uint64_t *)(v37 + *(int *)(v88 + 36));
      uint64_t v58 = *v57;
      uint64_t v59 = v57[1];
      uint64_t v60 = v92;
      v55(v92, v56, v54);
      uint64_t v61 = &v60[*(int *)(type metadata accessor for CRDTDictionaryElement() + 36)];
      *(void *)uint64_t v61 = v58;
      *((void *)v61 + 1) = v59;
      uint64_t v62 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56);
      uint64_t v63 = v60;
    }
    v62((uint64_t)v63, 0, 1, v39);
LABEL_14:
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  uint64_t v31 = v29;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  uint64_t v32 = v94;
  (*v30)(v16, v94, v12);
  int v33 = swift_getEnumCaseMultiPayload();
  if (!v33)
  {
    uint64_t v46 = v90;
    char v47 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
    uint64_t v48 = v87;
    v47(v87, v16, v90);
    uint64_t v49 = (uint64_t *)(v32 + *(int *)(v88 + 36));
    uint64_t v50 = *v49;
    uint64_t v51 = v49[1];
    uint64_t v52 = v92;
    v47(v92, v48, v46);
    uint64_t v53 = &v52[*(int *)(type metadata accessor for CRDTDictionaryElement() + 36)];
    *(void *)uint64_t v53 = v50;
    *((void *)v53 + 1) = v51;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v52, 0, 1, v19);
    goto LABEL_14;
  }
  if (v33 != 1) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v92, 1, 1, v19);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v92, 1, 1, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v16, v12);
}

uint64_t sub_1C44840B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C44821D4(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t sub_1C44840D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C4482B38(a1, a2, a3);
}

uint64_t sub_1C44840F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v83 = a5;
  uint64_t v80 = a2;
  uint64_t v73 = a1;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C4497B38();
  uint64_t v70 = *(void *)(v10 - 8);
  uint64_t v71 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v68 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)&v65 - v14;
  uint64_t v75 = AssociatedTypeWitness;
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v66 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v69 = (char *)&v65 - v17;
  uint64_t v18 = sub_1C4497B38();
  uint64_t v77 = *(void *)(v18 - 8);
  uint64_t v78 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  char v24 = (char *)&v65 - v23;
  uint64_t v79 = *(void *)(a4 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v67 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  int v28 = (char *)&v65 - v27;
  uint64_t v81 = v8;
  uint64_t v82 = v7;
  uint64_t v76 = type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta();
  uint64_t v29 = MEMORY[0x1F4188790](v76);
  uint64_t v65 = (char *)&v65 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v65 - v31;
  uint64_t v33 = *a3;
  uint64_t v34 = a3[1];
  uint64_t v35 = (uint64_t *)(v84 + *(int *)(a4 + 36));
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  swift_bridgeObjectRetain();
  uint64_t v38 = swift_bridgeObjectRetain();
  if (sub_1C4112134(v38, v34))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    *(void *)&long long v86 = v37;
    *((void *)&v86 + 1) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3FAB740(v34);
    sub_1C3FAB740(v33);
    uint64_t v41 = v77;
    uint64_t v40 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v24, v80, v78);
    uint64_t v42 = v79;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v24, 1, a4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v40);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v32, v84, v81);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v28, v24, a4);
      uint64_t v43 = v72;
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v82 + 80))(v73, v28, v81, v82);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v28, a4);
      uint64_t v45 = v74;
      uint64_t v44 = v75;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v43, 1, v75) == 1)
      {
        (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v71);
      }
      else
      {
        uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
        uint64_t v50 = v69;
        v49(v69, v43, v44);
        v49(v32, v50, v44);
      }
    }
    swift_storeEnumTagMultiPayload();
    long long v85 = v86;
    uint64_t v51 = (__n128 *)&v85;
    uint64_t v52 = v83;
    uint64_t v53 = v83;
    uint64_t v54 = (uint64_t)v32;
    goto LABEL_12;
  }
  char v39 = sub_1C4112134(v37, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v39) {
    goto LABEL_4;
  }
  uint64_t v47 = v77;
  uint64_t v46 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v21, v80, v78);
  uint64_t v48 = v79;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v21, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v46);
LABEL_16:
    uint64_t v61 = type metadata accessor for CRDTDictionaryElement.Delta();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v83, 1, 1, v61);
  }
  uint64_t v57 = v67;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v67, v21, a4);
  uint64_t v58 = v68;
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v82 + 80))(v73, v57, v81, v82);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v57, a4);
  uint64_t v60 = v74;
  uint64_t v59 = v75;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v58, 1, v75) == 1)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v58, v71);
    goto LABEL_16;
  }
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
  uint64_t v63 = v66;
  v62(v66, v58, v59);
  uint64_t v64 = v65;
  v62(v65, v63, v59);
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v86 = MEMORY[0x1E4FBC868];
  *((void *)&v86 + 1) = MEMORY[0x1E4FBC868];
  uint64_t v51 = (__n128 *)&v86;
  uint64_t v52 = v83;
  uint64_t v53 = v83;
  uint64_t v54 = (uint64_t)v64;
LABEL_12:
  sub_1C4482124(v54, v51, v53);
  uint64_t v55 = type metadata accessor for CRDTDictionaryElement.Delta();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v52, 0, 1, v55);
}

uint64_t sub_1C44848E0()
{
  return 0;
}

uint64_t sub_1C4484998@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 36));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1C44849DC())()
{
  return nullsub_1;
}

uint64_t sub_1C4484A0C()
{
  return *(void *)(*(void *)(v0 + 16) + 48);
}

uint64_t sub_1C4484A18()
{
  uint64_t v0 = swift_allocObject();
  sub_1C4484A50();
  return v0;
}

uint64_t sub_1C4484A50()
{
  sub_1C4496668();
  type metadata accessor for CRDTDictionaryElement();
  swift_getWitnessTable();
  type metadata accessor for CRSetRef();
  *(void *)(v0 + 16) = sub_1C4387618();
  return v0;
}

uint64_t sub_1C4484B4C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1C4496668();
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t sub_1C4484B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 88);
  uint64_t v6 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v7 = sub_1C4497B38();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = v2[2];
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 40);
  uint64_t v13 = *(void *)(v4 + 80);
  uint64_t v14 = *(void *)(v4 + 104);
  swift_bridgeObjectRetain();
  MEMORY[0x1C877FC90](a1, v12, v13, v6, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v10, 1, v6))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v15 = *(void *)(v5 - 8);
    uint64_t v16 = 1;
    uint64_t v17 = v20;
  }
  else
  {
    uint64_t v15 = *(void *)(v5 - 8);
    uint64_t v18 = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v20, v10, v5);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v16 = 0;
    uint64_t v17 = v18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v17, v16, 1, v5);
}

uint64_t sub_1C4484E2C(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v80 = a2;
  uint64_t v71 = *v2;
  uint64_t v5 = *(void *)(v71 + 80);
  uint64_t v6 = *(void *)(v71 + 88);
  uint64_t v72 = *(void *)(v71 + 112);
  uint64_t v7 = type metadata accessor for CRDTDictionaryElement();
  swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v74 = *(char **)(v8 - 8);
  uint64_t v75 = (char *)v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v73 = (uint64_t)&v64 - v9;
  uint64_t v10 = type metadata accessor for Timestamp(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v67 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = v5;
  uint64_t v78 = *(void *)(v5 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v69 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v70 = (char *)&v64 - v16;
  uint64_t v77 = v7;
  uint64_t v76 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v64 - v17;
  uint64_t v19 = sub_1C4497B38();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v64 - v22;
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v21);
  uint64_t v68 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v64 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v64 - v30;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v23, a1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v6) == 1)
  {
    uint64_t v32 = *(void (**)(char *, uint64_t))(v20 + 8);
    v32(v23, v19);
    swift_retain();
    uint64_t v33 = v73;
    uint64_t v34 = v80;
    sub_1C437E570(v80, v73);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v34, v79);
    v32(a1, v19);
    return (*((uint64_t (**)(uint64_t, char *))v74 + 1))(v33, v75);
  }
  else
  {
    uint64_t v66 = v20;
    uint64_t v73 = v19;
    uint64_t v74 = a1;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    uint64_t v75 = v31;
    uint64_t v37 = v6;
    v36(v31, v23, v6);
    uint64_t v38 = v3[2];
    swift_beginAccess();
    if (*(void *)(*(void *)(v38 + 40) + 16)
      && (uint64_t v39 = *(void *)(v71 + 104),
          swift_bridgeObjectRetain(),
          sub_1C3F88430(v80, v79, v39),
          char v41 = v40,
          swift_bridgeObjectRelease(),
          (v41 & 1) != 0))
    {
      uint64_t v72 = v39;
      uint64_t v42 = v3[2];
      uint64_t v43 = v78;
      uint64_t v44 = v79;
      uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
      uint64_t v46 = v70;
      v45(v70, v80, v79);
      uint64_t v71 = v24;
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
      uint64_t v48 = v68;
      uint64_t v65 = v37;
      v47(v68, v75, v37);
      swift_beginAccess();
      uint64_t v49 = v69;
      v45(v69, (uint64_t)v46, v44);
      uint64_t v64 = v42;
      swift_retain();
      uint64_t v50 = v77;
      sub_1C4496FC8();
      uint64_t v51 = (void (*)(char *, void))sub_1C4496FD8();
      uint64_t v53 = v52;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v52, 1, v50);
      uint64_t v54 = v80;
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v55 = v71;
        uint64_t v56 = v48;
        uint64_t v57 = v65;
        (*(void (**)(uint64_t, char *, uint64_t))(v71 + 40))(v53, v56, v65);
        v51(v81, 0);
        uint64_t v58 = *(void (**)(char *, uint64_t))(v43 + 8);
        v58(v49, v44);
        v58(v70, v44);
        swift_endAccess();
        swift_release();
        swift_retain();
        uint64_t v59 = v67;
        sub_1C437E0CC(v67);
        swift_beginAccess();
        type metadata accessor for Replica();
        sub_1C3F844E4(v59);
        sub_1C3F9253C(v59, type metadata accessor for Timestamp);
        swift_endAccess();
        swift_release();
        v58((char *)v54, v44);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v74, v73);
        return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v75, v57);
      }
    }
    else
    {
      uint64_t v60 = v75;
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v29, v75, v37);
      v36(v18, v29, v37);
      uint64_t v61 = &v18[*(int *)(type metadata accessor for CRDTDictionaryElement() + 36)];
      uint64_t v62 = MEMORY[0x1E4FBC868];
      *(void *)uint64_t v61 = MEMORY[0x1E4FBC868];
      *((void *)v61 + 1) = v62;
      swift_retain();
      uint64_t v63 = v80;
      sub_1C437E1B4(v80, (uint64_t)v18);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v63, v79);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v74, v73);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v77);
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v60, v37);
    }
  }
  return result;
}

void (*sub_1C44856AC(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x48uLL);
  *a1 = v5;
  *uint64_t v5 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1C4497B38();
  v5[1] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[2] = v8;
  size_t v9 = *(void *)(v8 + 64);
  v5[3] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v5[4] = v10;
  uint64_t v11 = *(void *)(v6 + 80);
  void v5[5] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12;
  v5[6] = v12;
  size_t v14 = *(void *)(v12 + 64);
  v5[7] = malloc(v14);
  v5[8] = malloc(v14);
  (*(void (**)(void))(v13 + 16))();
  sub_1C4484B98(a2, (uint64_t)v10);
  return sub_1C4485834;
}

void sub_1C4485834(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  uint64_t v4 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    uint64_t v5 = v2[5];
    uint64_t v6 = v2[6];
    uint64_t v8 = (char *)v2[3];
    uint64_t v7 = (char *)v2[4];
    uint64_t v9 = v2[1];
    uint64_t v10 = v2[2];
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v3, v4, v5);
    sub_1C4484E2C(v8, (uint64_t)v3);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    uint64_t v8 = (char *)v2[3];
    uint64_t v7 = (char *)v2[4];
    sub_1C4484E2C(v7, (uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v7);
  free(v8);
  free(v2);
}

uint64_t sub_1C4485938@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v22[1] = a3;
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v25 = a4;
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 88);
  uint64_t v7 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v22 - v11;
  v22[0] = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v10);
  size_t v14 = (char *)v22 - v13;
  uint64_t v15 = v4[2];
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 40);
  uint64_t v17 = *(void *)(v5 + 80);
  uint64_t v18 = *(void *)(v5 + 104);
  swift_bridgeObjectRetain();
  MEMORY[0x1C877FC90](v24, v16, v17, v7, v18);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v12, 1, v7))
  {
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return v23(v19);
  }
  else
  {
    uint64_t v21 = v22[0];
    (*(void (**)(char *, char *, uint64_t))(v22[0] + 16))(v14, v12, v6);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v25, v14, v6);
  }
}

uint64_t sub_1C4485BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = *(void *)(*(void *)v2 + 88);
  uint64_t v7 = type metadata accessor for CRDTDictionaryElement();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_1C4497B38();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - v11;
  swift_retain();
  sub_1C437E570(a1, (uint64_t)v12);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
  else
  {
    size_t v14 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v15 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(a2, v14, v6);
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v14, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v6);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v12, v5);
  }
}

double sub_1C4485E94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  swift_retain();
  swift_retain();
  sub_1C437ACF8(a1, v5, v9);
  swift_release();
  swift_release();
  double result = *(double *)v9;
  long long v7 = v9[1];
  long long v8 = v9[2];
  *a3 = v9[0];
  a3[1] = v7;
  a3[2] = v8;
  return result;
}

uint64_t sub_1C4485F10()
{
  swift_release();
  uint64_t v1 = v0 + qword_1EBBC5950;
  uint64_t v2 = sub_1C4496678();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1C4485F7C()
{
  sub_1C4485F10();
  return swift_deallocClassInstance();
}

uint64_t CRDTDictionary.copy(renamingReferences:)@<X0>(char *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v89 = a1;
  uint64_t v81 = a3;
  uint64_t v5 = a2[3];
  uint64_t v98 = sub_1C4497B38();
  long long v85 = *(void (***)(char *, uint64_t))(v98 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v98);
  uint64_t v97 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v96 = (char *)&v81 - v9;
  uint64_t v10 = a2[2];
  uint64_t v84 = *(void (***)(uint64_t, uint64_t))(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v88 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v95 = (char *)&v81 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v94 = (char *)&v81 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v17 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v102 = (char *)&v81 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v103 = (char *)&v81 - v23;
  uint64_t v24 = sub_1C4497B38();
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v87 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v81 - v27;
  uint64_t v29 = *v3;
  uint64_t v31 = a2[4];
  uint64_t v30 = a2[5];
  uint64_t v32 = a2[6];
  uint64_t v104 = v10;
  uint64_t v33 = v17;
  uint64_t v101 = v30;
  CRDTDictionary.init()(&v113);
  uint64_t v34 = v84;
  uint64_t v35 = *(void *)(*(void *)v89 + 16);
  uint64_t v100 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  uint64_t v91 = (void (**)(char *, char *, uint64_t))(v84 + 4);
  uint64_t v90 = v5 - 8;
  uint64_t v105 = TupleTypeMetadata2;
  uint64_t v106 = v5;
  uint64_t v93 = v31;
  uint64_t v92 = v32;
  uint64_t v99 = a2;
  if (v35)
  {
    uint64_t v107 = v29;
    CRDTDictionary.makeIterator()(&v112);
    uint64_t v102 = (char *)(v34 + 2);
    uint64_t v87 = (char *)(v85 + 5);
    long long v86 = v34 + 1;
    long long v85 = (void (**)(char *, uint64_t))(v33 + 8);
    uint64_t v36 = v103;
    uint64_t v37 = v104;
    uint64_t v38 = (void (**)(char *, char *, uint64_t))(v34 + 2);
    while (1)
    {
      uint64_t v107 = v37;
      uint64_t v108 = v5;
      uint64_t v109 = v31;
      uint64_t v110 = v101;
      uint64_t v111 = v32;
      uint64_t v39 = type metadata accessor for CRDTDictionary.Iterator();
      CRDTDictionary.Iterator.next()(v39, (uint64_t)v28);
      if ((*v100)(v28, 1, TupleTypeMetadata2) == 1) {
        break;
      }
      uint64_t v40 = *(int *)(TupleTypeMetadata2 + 48);
      char v41 = &v28[v40];
      uint64_t v42 = &v36[v40];
      (*v91)(v36, v28, v37);
      uint64_t v43 = *(void *)(v5 - 8);
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v41, v106);
      uint64_t v44 = *(void (**)(char *, uint64_t))(*(void *)(v31 + 8) + 24);
      uint64_t v45 = v94;
      uint64_t v46 = v89;
      v44(v89, v37);
      uint64_t v47 = *(void (**)(char *, uint64_t))(*(void *)(v32 + 16) + 24);
      uint64_t v48 = v96;
      v47(v46, v106);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v48, 0, 1, v106);
      sub_1C4487380();
      uint64_t v49 = *v38;
      uint64_t v50 = (uint64_t)v95;
      (*v38)(v95, v45, v37);
      uint64_t v51 = (uint64_t)v88;
      v49(v88, (char *)v50, v37);
      uint64_t v52 = (uint64_t)v97;
      sub_1C4484B98(v50, (uint64_t)v97);
      uint64_t v53 = v48;
      uint64_t v32 = v92;
      (*(void (**)(uint64_t, char *, uint64_t))v87)(v52, v53, v98);
      uint64_t v54 = (char *)v52;
      TupleTypeMetadata2 = v105;
      sub_1C4484E2C(v54, v51);
      uint64_t v55 = *v86;
      uint64_t v56 = v50;
      uint64_t v5 = v106;
      (*v86)(v56, v37);
      uint64_t v57 = v45;
      uint64_t v31 = v93;
      v55((uint64_t)v57, v37);
      (*v85)(v36, TupleTypeMetadata2);
    }
  }
  else
  {
    uint64_t v107 = v29;
    CRDTDictionary.makeIterator()(&v112);
    long long v86 = v34 + 2;
    v85 += 5;
    uint64_t v84 = v34 + 1;
    uint64_t v83 = (void (**)(char *, uint64_t))(v33 + 8);
    uint64_t v58 = v20;
    uint64_t v59 = v104;
    uint64_t v60 = v102;
    uint64_t v82 = v58;
    while (1)
    {
      uint64_t v107 = v59;
      uint64_t v108 = v5;
      uint64_t v109 = v31;
      uint64_t v110 = v101;
      uint64_t v111 = v32;
      uint64_t v61 = type metadata accessor for CRDTDictionary.Iterator();
      uint64_t v62 = v87;
      CRDTDictionary.Iterator.next()(v61, (uint64_t)v87);
      if ((*v100)(v62, 1, TupleTypeMetadata2) == 1) {
        break;
      }
      uint64_t v63 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v64 = v103;
      uint64_t v65 = &v103[v63];
      uint64_t v66 = &v62[v63];
      (*v91)(v103, v62, v59);
      uint64_t v67 = *(void *)(v5 - 8);
      uint64_t v88 = *(char **)(v67 + 32);
      ((void (*)(char *, char *, uint64_t))v88)(v65, v66, v106);
      uint64_t v89 = &v60[*(int *)(v105 + 48)];
      uint64_t v68 = v89;
      uint64_t v69 = *v86;
      ((void (*)(char *, char *, uint64_t))*v86)(v102, v64, v59);
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v70(v68, v65, v106);
      uint64_t v71 = v82;
      uint64_t v72 = &v82[*(int *)(v105 + 48)];
      ((void (*)(char *, char *, uint64_t))v69)(v82, v64, v104);
      v70(v72, v65, v106);
      uint64_t v73 = v96;
      ((void (*)(char *, char *, uint64_t))v88)(v96, v72, v106);
      uint64_t v5 = v106;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v73, 0, 1, v106);
      sub_1C4487380();
      uint64_t v74 = (uint64_t)v94;
      ((void (*)(char *, char *, uint64_t))v69)(v94, v102, v104);
      uint64_t v75 = v95;
      ((void (*)(char *, uint64_t, uint64_t))v69)(v95, v74, v104);
      uint64_t v60 = v102;
      uint64_t v76 = v97;
      sub_1C4484B98(v74, (uint64_t)v97);
      ((void (*)(char *, char *, uint64_t))*v85)(v76, v73, v98);
      uint64_t v77 = (uint64_t)v75;
      TupleTypeMetadata2 = v105;
      sub_1C4484E2C(v76, v77);
      uint64_t v78 = *v84;
      uint64_t v79 = (uint64_t)v71;
      uint64_t v59 = v104;
      (*v84)(v74, v104);
      (*v83)(v103, TupleTypeMetadata2);
      v78(v79, v59);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v89, v5);
      uint64_t v32 = v92;
      v78((uint64_t)v60, v59);
      uint64_t v31 = v93;
    }
  }
  uint64_t result = sub_1C3F7FCE8();
  *uint64_t v81 = v113;
  return result;
}

uint64_t CRDTDictionary.init()@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CRDTDictionaryRef();
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_1C4484A50();
  *a1 = v2;
  return result;
}

uint64_t CRDTDictionary.makeIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = -1;
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  if (-v7 < 64) {
    uint64_t v5 = ~(-1 << -(char)v7);
  }
  *a1 = v4;
  a1[1] = v4 + 64;
  a1[2] = ~v7;
  a1[3] = 0;
  a1[4] = v5 & v6;
  return swift_bridgeObjectRetain();
}

uint64_t CRDTDictionary.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v80 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v67 - v8;
  uint64_t v10 = *(void *)(*(void *)(a1 + 16) - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v13;
  uint64_t v83 = v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v16 = sub_1C4497B38();
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t v20 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t result = MEMORY[0x1F4188790](v22);
  uint64_t v71 = (char *)&v67 - v24;
  uint64_t v72 = v25;
  uint64_t v27 = *v2;
  uint64_t v26 = v2[1];
  uint64_t v29 = v2[2];
  uint64_t v28 = v2[3];
  uint64_t v30 = (void (*)(void, void, void))v28;
  unint64_t v31 = v2[4];
  uint64_t v84 = a2;
  uint64_t v81 = v5;
  uint64_t v78 = v26;
  uint64_t v79 = v10;
  uint64_t v69 = result;
  uint64_t v70 = v32;
  uint64_t v68 = v33;
  uint64_t v77 = v29;
  if (v31)
  {
    uint64_t v75 = v20;
    uint64_t v76 = (void (*)(void, void, void))v28;
    uint64_t v34 = v9;
    uint64_t v73 = (v31 - 1) & v31;
    uint64_t v74 = TupleTypeMetadata2;
    unint64_t v35 = __clz(__rbit64(v31)) | (v28 << 6);
LABEL_3:
    uint64_t v36 = v12;
    uint64_t v37 = v12;
    uint64_t v38 = v82;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v36, *(void *)(v27 + 48) + *(void *)(v10 + 72) * v35, v82);
    uint64_t v39 = v80;
    uint64_t v40 = v83;
    (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v34, *(void *)(v27 + 56) + *(void *)(v80 + 72) * v35, v83);
    char v41 = &v19[*(int *)(v74 + 48)];
    uint64_t v42 = v37;
    TupleTypeMetadata2 = v74;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v42, v38);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v41, v34, v40);
    uint64_t v20 = v75;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v19, 0, 1, TupleTypeMetadata2);
    uint64_t v43 = v73;
    goto LABEL_18;
  }
  int64_t v44 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v45 = (unint64_t)(v29 + 64) >> 6;
  if (v44 < v45)
  {
    unint64_t v46 = *(void *)(v26 + 8 * v44);
    if (v46)
    {
LABEL_7:
      uint64_t v74 = TupleTypeMetadata2;
      uint64_t v75 = v20;
      uint64_t v34 = v9;
      uint64_t v73 = (v46 - 1) & v46;
      unint64_t v35 = __clz(__rbit64(v46)) + (v44 << 6);
      uint64_t v76 = (void (*)(void, void, void))v44;
      goto LABEL_3;
    }
    uint64_t v30 = (void (*)(void, void, void))(v28 + 1);
    if (v28 + 2 < v45)
    {
      unint64_t v46 = *(void *)(v26 + 8 * (v28 + 2));
      if (v46)
      {
        int64_t v44 = v28 + 2;
        goto LABEL_7;
      }
      int64_t v44 = v28 + 3;
      uint64_t v30 = (void (*)(void, void, void))(v28 + 2);
      if (v28 + 3 < v45)
      {
        unint64_t v46 = *(void *)(v26 + 8 * v44);
        if (v46) {
          goto LABEL_7;
        }
        uint64_t v30 = (void (*)(void, void, void))(v45 - 1);
        uint64_t v47 = (char *)(v28 + 4);
        while ((char *)v45 != v47)
        {
          unint64_t v46 = *(void *)(v26 + 8 * (void)v47++);
          if (v46)
          {
            int64_t v44 = (int64_t)(v47 - 1);
            goto LABEL_7;
          }
        }
      }
    }
  }
  uint64_t v76 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v19, 1, 1, TupleTypeMetadata2);
  uint64_t v43 = 0;
LABEL_18:
  uint64_t v48 = v78;
  *uint64_t v2 = v27;
  v2[1] = v48;
  uint64_t v49 = v76;
  _OWORD v2[2] = v77;
  v2[3] = (uint64_t)v49;
  void v2[4] = v43;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v19, v69);
    uint64_t v50 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v84, 1, 1, v50);
  }
  else
  {
    uint64_t v51 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v52 = v71;
    uint64_t v53 = &v71[v51];
    uint64_t v54 = &v19[v51];
    uint64_t v55 = v79;
    uint64_t v74 = *(void *)(v79 + 32);
    uint64_t v56 = v19;
    uint64_t v57 = v82;
    ((void (*)(char *, char *, uint64_t))v74)(v71, v56, v82);
    uint64_t v58 = v80;
    uint64_t v76 = *(void (**)(void, void, void))(v80 + 32);
    v76(v53, v54, v83);
    uint64_t v59 = swift_getTupleTypeMetadata2();
    uint64_t v75 = v84 + *(int *)(v59 + 48);
    uint64_t v60 = v70;
    uint64_t v61 = v70 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v77 = v59;
    uint64_t v78 = v61;
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v70, v52, v57);
    uint64_t v62 = v83;
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v61, v53, v83);
    uint64_t v63 = (void (*)(uint64_t, char *, uint64_t))v74;
    ((void (*)(uint64_t, uint64_t, uint64_t))v74)(v84, v60, v57);
    uint64_t v64 = v72;
    uint64_t v65 = v72 + *(int *)(TupleTypeMetadata2 + 48);
    v63(v72, v52, v57);
    v76(v65, v53, v62);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v75, v65);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v66(v65, v62);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v77 - 8) + 56))(v84, 0, 1);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v64, v57);
    return ((uint64_t (*)(uint64_t, uint64_t))v66)(v78, v62);
  }
}

void (*CRDTDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x40uLL);
  *a1 = v6;
  uint64_t v7 = *(void *)(a3 + 16);
  v6[4] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  v6[5] = v8;
  uint64_t v10 = malloc(*(void *)(v8 + 64));
  v6[6] = v10;
  sub_1C4487380();
  (*(void (**)(void *, uint64_t, uint64_t))(v9 + 16))(v10, a2, v7);
  v6[7] = sub_1C44856AC(v6, (uint64_t)v10);
  return sub_1C4487280;
}

void sub_1C4487280(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t CRDTDictionary.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v6 = a1;
  swift_bridgeObjectRetain();
  CRDTDictionary.copy(renamingReferences:)((char *)&v6, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4487380()
{
  type metadata accessor for CRDTDictionaryRef();
  uint64_t result = sub_1C4498298();
  if ((result & 1) == 0)
  {
    uint64_t v2 = sub_1C449128C();
    uint64_t result = swift_release();
    *uint64_t v0 = v2;
  }
  return result;
}

uint64_t type metadata accessor for CRDTDictionaryRef()
{
  return swift_getGenericMetadata();
}

uint64_t CRDTDictionary.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C4484B98(a1, a2);
}

uint64_t sub_1C4487430@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return CRDTDictionary.subscript.getter(a1, a2);
}

uint64_t sub_1C448749C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  long long v11 = *(_OWORD *)(v10 - 32);
  long long v19 = *(_OWORD *)(v10 - 16);
  long long v20 = v11;
  v9((char *)&v19 - v7, v12, v5);
  uint64_t v21 = v5;
  long long v22 = v20;
  long long v23 = v19;
  uint64_t v13 = type metadata accessor for CRDTDictionary();
  uint64_t v14 = CRDTDictionary.subscript.modify(&v21, (uint64_t)v8, v13);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C4497B38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v16, a1, v17);
  ((void (*)(uint64_t *, void))v14)(&v21, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CRDTDictionary.subscript.setter(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v29 = a1;
  uint64_t v5 = sub_1C4497B38();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v6);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v25 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v25 - v17;
  long long v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19((char *)&v25 - v17, (uint64_t)a2, v9);
  sub_1C4487380();
  v19(v16, (uint64_t)v18, v9);
  v19(v13, (uint64_t)v16, v9);
  sub_1C4484B98((uint64_t)v16, (uint64_t)v8);
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  uint64_t v22 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 24))(v8, v29, v28);
  sub_1C4484E2C(v8, (uint64_t)v25);
  long long v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v16, v9);
  v23(v26, v9);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  return ((uint64_t (*)(char *, uint64_t))v23)(v18, v9);
}

uint64_t CRDTDictionary.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a4 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v10 + 16))(v12);
  uint64_t v15 = v9;
  long long v16 = *(_OWORD *)(a4 + 24);
  long long v17 = *(_OWORD *)(a4 + 40);
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  sub_1C4485938((uint64_t)v12, (uint64_t (*)(uint64_t))sub_1C448DA88, (uint64_t)v14, a5);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t CRDTDictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C4491434(a1, a2, a5);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a5 + 16) - 8) + 8))(a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a5 + 24) - 8) + 8);
  return v8(a1);
}

void (*CRDTDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v11 = malloc(0x48uLL);
  *a1 = v11;
  *uint64_t v11 = a5;
  v11[1] = v5;
  uint64_t v12 = *(void *)(a5 + 24);
  uint64_t v11[2] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v11[3] = v13;
  size_t v14 = *(void *)(v13 + 64);
  v11[4] = malloc(v14);
  uint64_t v15 = malloc(v14);
  uint64_t v16 = *(void *)(a5 + 16);
  v11[5] = v15;
  v11[6] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = v17;
  v11[7] = v17;
  v11[8] = malloc(*(void *)(v17 + 64));
  (*(void (**)(void))(v18 + 16))();
  CRDTDictionary.subscript.getter(a2, a3, a4, a5, (uint64_t)v15);
  return sub_1C4487BEC;
}

void sub_1C4487BEC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (*a1)[7];
  uint64_t v3 = (void *)(*a1)[8];
  uint64_t v5 = (void *)(*a1)[5];
  uint64_t v6 = (*a1)[6];
  uint64_t v8 = (*a1)[3];
  uint64_t v7 = (void *)(*a1)[4];
  uint64_t v9 = (*a1)[2];
  uint64_t v10 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[4], v5, v9);
    sub_1C4491434((uint64_t)v7, (uint64_t)v3, v10);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    uint64_t v11 = *(void (**)(void *, uint64_t))(v8 + 8);
    v11(v7, v9);
    v11(v5, v9);
  }
  else
  {
    sub_1C4491434((*a1)[5], (uint64_t)v3, v10);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v9);
  }
  free(v3);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t CRDTDictionary.removeValue(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C4485BCC(a1, a2);
}

uint64_t *CRDTDictionary.merge(_:)(uint64_t *result, uint64_t a2)
{
  uint64_t v12 = *result;
  if (*(void *)(*(void *)v2 + 16) != *(void *)(v12 + 16))
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v5 = (void *)sub_1C4385090((uint64_t)&v12, a2, WitnessTable);
    uint64_t v6 = *(void *)(*(void *)v2 + 16);
    swift_beginAccess();
    uint64_t v7 = *(void *)(v6 + 24);
    uint64_t v8 = *(void *)(v6 + 32);
    swift_beginAccess();
    uint64_t v9 = v5[3];
    uint64_t v11 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_1C41136F0(v10, &v11, v8);
    sub_1C41136F0(v9, &v11, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11 == 1)
    {
      sub_1C4491390((uint64_t)v5);
    }
    else if (v11 == 3)
    {
      sub_1C4487380();
      swift_retain();
      sub_1C4380528(v5);
      swift_release();
    }
    return (uint64_t *)swift_release();
  }
  return result;
}

uint64_t CRDTDictionary.visitReferences(_:)(uint64_t a1, void *a2)
{
  uint64_t v63 = a1;
  uint64_t v4 = a2[3];
  uint64_t v61 = a2[6];
  uint64_t v62 = v4;
  uint64_t v5 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v56 = (char *)&v47 - v8;
  uint64_t v64 = a2;
  uint64_t v9 = *(void *)(a2[2] - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v55 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v11;
  uint64_t v70 = v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v67 = sub_1C4497B38();
  uint64_t v14 = *(void *)(v67 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v67);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = *(void *)(*(void *)v2 + 16);
  swift_beginAccess();
  uint64_t v21 = *(void *)(v20 + 40);
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v48 = v21 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  uint64_t v68 = TupleTypeMetadata2;
  uint64_t v66 = TupleTypeMetadata2 - 8;
  uint64_t v51 = v9 + 16;
  uint64_t v50 = v6 + 16;
  uint64_t v65 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v59 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v53 = v6;
  uint64_t v58 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v52 = v9;
  uint64_t v57 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  int64_t v49 = (unint64_t)(v23 + 63) >> 6;
  int64_t v47 = v49 - 1;
  uint64_t v54 = v21;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v27 = 0;
  uint64_t v28 = v55;
  uint64_t v29 = v70;
  if (!v25) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v30 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  unint64_t v31 = v30 | (v27 << 6);
  uint64_t v32 = v68;
  while (2)
  {
    uint64_t v33 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v17, *(void *)(v54 + 48) + *(void *)(v52 + 72) * v31, v69);
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(&v17[*(int *)(v32 + 48)], *(void *)(v33 + 56) + *(void *)(v53 + 72) * v31, v70);
    for (uint64_t i = 0; ; uint64_t i = 1)
    {
      while (1)
      {
LABEL_18:
        uint64_t v38 = *(void *)(v32 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v17, i, 1, v32);
        (*v65)(v19, v17, v67);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v19, 1, v32) == 1) {
          return swift_release();
        }
        uint64_t v39 = &v19[*(int *)(v32 + 48)];
        uint64_t v40 = v17;
        uint64_t v41 = v69;
        (*v60)(v28, v19, v69);
        uint64_t v42 = v19;
        uint64_t v43 = v56;
        (*v59)(v56, v39, v29);
        uint64_t v44 = v63;
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v64[4] + 8) + 48))(v63, v41);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 + 16) + 48))(v44, v62);
        int64_t v45 = v43;
        uint64_t v19 = v42;
        (*v58)(v45, v29);
        uint64_t v46 = v41;
        uint64_t v17 = v40;
        uint64_t result = (*v57)(v28, v46);
        if (v25) {
          goto LABEL_4;
        }
LABEL_6:
        int64_t v35 = v27 + 1;
        uint64_t v32 = v68;
        if (__OFADD__(v27, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        if (v35 < v49) {
          break;
        }
LABEL_17:
        unint64_t v25 = 0;
        uint64_t i = 1;
      }
      unint64_t v36 = *(void *)(v48 + 8 * v35);
      if (v36) {
        goto LABEL_9;
      }
      v27 += 2;
      if (v35 + 1 < v49) {
        break;
      }
      unint64_t v25 = 0;
      int64_t v27 = v35;
    }
    unint64_t v36 = *(void *)(v48 + 8 * v27);
    if (v36)
    {
      ++v35;
LABEL_9:
      unint64_t v25 = (v36 - 1) & v36;
      unint64_t v31 = __clz(__rbit64(v36)) + (v35 << 6);
      int64_t v27 = v35;
      continue;
    }
    break;
  }
  int64_t v37 = v35 + 2;
  if (v35 + 2 >= v49) {
    goto LABEL_17;
  }
  unint64_t v36 = *(void *)(v48 + 8 * v37);
  if (v36)
  {
    v35 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v35 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v35 >= v49)
    {
      unint64_t v25 = 0;
      uint64_t i = 1;
      int64_t v27 = v47;
      goto LABEL_18;
    }
    unint64_t v36 = *(void *)(v48 + 8 * v35);
    ++v37;
    if (v36) {
      goto LABEL_9;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

Swift::Bool __swiftcall CRDTDictionary.needToFinalizeTimestamps()()
{
  swift_retain();
  char v0 = sub_1C3F79798();
  swift_release();
  return v0 & 1;
}

uint64_t CRDTDictionary.finalizeTimestamps(_:)(uint64_t a1)
{
  swift_retain();
  char v3 = sub_1C3F79798();
  uint64_t result = swift_release();
  if (v3)
  {
    sub_1C4487380();
    uint64_t v5 = *v1;
    swift_retain();
    sub_1C4383764(a1);
    swift_release();
    uint64_t v6 = *(void *)(v5 + 16);
    uint64_t v7 = swift_beginAccess();
    MEMORY[0x1F4188790](v7);
    type metadata accessor for CRDTDictionaryElement();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C4496FE8();
    swift_bridgeObjectRelease();
    *(void *)(v6 + 40) = v8;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t CRDTDictionary.version.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static CRDTDictionary.== infix(_:_:)()
{
  swift_retain();
  char v0 = (void *)swift_retain();
  char v1 = sub_1C437D3D8(v0);
  swift_release();
  swift_release();
  return v1 & 1;
}

uint64_t CRDTDictionary.actionUndoingDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = a2;
  uint64_t v94 = a3;
  unint64_t v6 = 0;
  unint64_t v7 = *(void *)(a2 + 48);
  unint64_t v8 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v103 = sub_1C4497B38();
  int64_t v134 = *(void *)(v103 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v103);
  uint64_t v102 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v123 = (char *)&v90 - v13;
  uint64_t v113 = AssociatedTypeWitness;
  BOOL v121 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v101 = (char *)&v90 - v14;
  unint64_t v114 = v8;
  unint64_t v112 = v7;
  uint64_t v15 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v109 = sub_1C4497B38();
  uint64_t v131 = *(void *)(v109 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v109);
  id v135 = (char *)&v90 - v17;
  uint64_t v119 = *(void *)(v15 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v115 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v105 = (char *)&v90 - v21;
  uint64_t v118 = *(void *)(*(void *)(v4 + 16) - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v100 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v25 = (char *)&v90 - v24;
  unint64_t v136 = v26;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v129 = sub_1C4497B38();
  BOOL v127 = *(void (***)(char *, char *, uint64_t))(v129 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v129);
  uint64_t v111 = (char *)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  unint64_t v130 = (char *)&v90 - v30;
  unint64_t v31 = *(void **)(*(void *)v3 + 16);
  uint64_t v32 = *(void **)(*(void *)a1 + 16);
  if (v31[6] == v32[6])
  {
    unint64_t v90 = 0;
    swift_retain();
    swift_retain();
    goto LABEL_5;
  }
  if (qword_1EBBC10F0 == -1) {
    goto LABEL_4;
  }
LABEL_46:
  swift_once();
LABEL_4:
  swift_retain();
  sub_1C4497A58();
  unint64_t v90 = v6;
  swift_release();
  uint64_t v33 = v137;
  char v34 = BYTE8(v137);
  uint64_t v35 = v138;
  swift_retain();
  char v36 = v34;
  uint64_t v32 = sub_1C437D33C(v33, v34, v35);
  swift_release();
  swift_retain();
  unint64_t v31 = sub_1C437D33C(v33, v36, v35);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_5:
  unint64_t v37 = *(void *)(v4 + 40);
  uint64_t v38 = v4;
  unint64_t v39 = v136;
  uint64_t v142 = sub_1C4496EC8();
  unint64_t v40 = v114;
  uint64_t v141 = sub_1C4496EA8();
  uint64_t v41 = sub_1C4496EA8();
  uint64_t v139 = 0;
  uint64_t v140 = v41;
  long long v137 = 0u;
  long long v138 = 0u;
  uint64_t v42 = MEMORY[0x1F4188790](v41);
  *(&v90 - 6) = v39;
  *(&v90 - 5) = v40;
  *(&v90 - 4) = *(void *)(v38 + 32);
  *(&v90 - 3) = v37;
  unint64_t v133 = v37;
  unint64_t v43 = v112;
  *(&v90 - 2) = v112;
  *(&v90 - 1) = (unint64_t)&v142;
  MEMORY[0x1F4188790](v42);
  *(&v90 - 2) = (unint64_t)&v141;
  *(&v90 - 1) = (unint64_t)v32;
  sub_1C4380CE0((uint64_t)v32, (uint64_t)&v137, (void (*)(char *))sub_1C44917C0, v44, (void (*)(char *))sub_1C44917C4, (uint64_t)(&v90 - 4));
  sub_1C3F962E0((uint64_t)&v137, &qword_1EBBBC198);
  swift_beginAccess();
  uint64_t v92 = v31;
  uint64_t v45 = v31[5];
  uint64_t v46 = *(void *)(v45 + 64);
  uint64_t v104 = v45 + 64;
  uint64_t v47 = 1 << *(unsigned char *)(v45 + 32);
  uint64_t v48 = -1;
  if (v47 < 64) {
    uint64_t v48 = ~(-1 << v47);
  }
  unint64_t v6 = v48 & v46;
  uint64_t v93 = v32;
  uint64_t v117 = v45;
  swift_bridgeObjectRetain();
  uint64_t v126 = v32 + 5;
  swift_beginAccess();
  int64_t v49 = 0;
  uint64_t v128 = TupleTypeMetadata2 - 8;
  uint64_t v132 = (void (**)(char *, char *, unint64_t))(v118 + 16);
  uint64_t v116 = v119 + 16;
  v127 += 4;
  unint64_t v125 = (void (**)(char *, char *, unint64_t))(v118 + 32);
  uint64_t v4 = v119 + 32;
  char v124 = (unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48);
  unint64_t v108 = v43 + 56;
  uint64_t v107 = (unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 6);
  uint64_t v99 = (void (**)(char *, char *, uint64_t))(v121 + 4);
  uint64_t v98 = (void (**)(char *, char *, uint64_t))(v121 + 2);
  uint64_t v97 = (void (**)(char *, void, uint64_t, uint64_t))(v121 + 7);
  uint64_t v96 = v121 + 1;
  BOOL v121 = (void (**)(char *, uint64_t))(v119 + 8);
  uint64_t v120 = (void (**)(char *, unint64_t))(v118 + 8);
  uint64_t v95 = (void (**)(char *, uint64_t))(v134 + 8);
  uint64_t v106 = (void (**)(char *, uint64_t))(v131 + 8);
  int64_t v110 = (unint64_t)(v47 + 63) >> 6;
  int64_t v91 = v110 - 1;
  uint64_t v50 = v105;
  uint64_t v51 = v111;
  uint64_t v131 = v119 + 32;
  uint64_t v122 = TupleTypeMetadata2;
  uint64_t v52 = v130;
  if (v6)
  {
LABEL_8:
    unint64_t v53 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    int64_t v134 = v49;
    unint64_t v54 = v53 | (v49 << 6);
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v57 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v57 >= v110)
    {
      int64_t v134 = v49;
LABEL_15:
      unint64_t v6 = 0;
      uint64_t v56 = 1;
      goto LABEL_16;
    }
    unint64_t v58 = *(void *)(v104 + 8 * v57);
    if (v58) {
      goto LABEL_13;
    }
    if (v49 + 2 < v110)
    {
      unint64_t v58 = *(void *)(v104 + 8 * (v49 + 2));
      if (v58)
      {
        int64_t v57 = v49 + 2;
        goto LABEL_13;
      }
      uint64_t v80 = v49 + 3;
      if (v49 + 3 < v110)
      {
        unint64_t v58 = *(void *)(v104 + 8 * v80);
        if (v58)
        {
          int64_t v57 = v49 + 3;
LABEL_13:
          unint64_t v6 = (v58 - 1) & v58;
          unint64_t v54 = __clz(__rbit64(v58)) + (v57 << 6);
          int64_t v134 = v57;
LABEL_9:
          uint64_t v55 = v117;
          (*(void (**)(char *, unint64_t, unint64_t))(v118 + 16))(v51, *(void *)(v117 + 48) + *(void *)(v118 + 72) * v54, v136);
          (*(void (**)(char *, unint64_t, uint64_t))(v119 + 16))(&v51[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v55 + 56) + *(void *)(v119 + 72) * v54, v15);
          uint64_t v56 = 0;
          uint64_t v4 = v131;
          goto LABEL_16;
        }
        while (1)
        {
          int64_t v57 = v80 + 1;
          if (__OFADD__(v80, 1)) {
            goto LABEL_45;
          }
          if (v57 >= v110)
          {
            unint64_t v6 = 0;
            uint64_t v56 = 1;
            int64_t v134 = v91;
            goto LABEL_16;
          }
          unint64_t v58 = *(void *)(v104 + 8 * v57);
          ++v80;
          if (v58) {
            goto LABEL_13;
          }
        }
      }
      int64_t v134 = v49 + 2;
      goto LABEL_15;
    }
    unint64_t v6 = 0;
    uint64_t v56 = 1;
    int64_t v134 = v49 + 1;
LABEL_16:
    uint64_t v59 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v51, v56, 1, TupleTypeMetadata2);
    (*v127)(v52, v51, v129);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v52, 1, TupleTypeMetadata2) == 1) {
      break;
    }
    uint64_t v60 = &v52[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v61 = v52;
    uint64_t v62 = v15;
    unint64_t v63 = v136;
    (*v125)(v25, v61, v136);
    uint64_t v64 = v50;
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))v4;
    (*(void (**)(char *, char *, uint64_t))v4)(v64, v60, v62);
    uint64_t v66 = *v126;
    swift_bridgeObjectRetain();
    uint64_t v67 = v4;
    uint64_t v68 = v135;
    unint64_t v69 = v63;
    uint64_t v15 = v62;
    MEMORY[0x1C877FC90](v25, v66, v69, v62, v133);
    swift_bridgeObjectRelease();
    if ((*v124)(v68, 1, v62) == 1)
    {
      (*v121)(v64, v62);
      (*v120)(v25, v136);
      (*v106)(v135, v109);
      uint64_t v50 = v64;
      TupleTypeMetadata2 = v122;
      uint64_t v4 = v67;
    }
    else
    {
      uint64_t v70 = v25;
      uint64_t v71 = v115;
      v65(v115, v135, v15);
      uint64_t v72 = v123;
      (*(void (**)(char *, unint64_t))(v112 + 56))(v71, v114);
      uint64_t v73 = v113;
      if ((*v107)(v72, 1, v113) == 1)
      {
        uint64_t v50 = v64;
        uint64_t v4 = v67;
        uint64_t v74 = *v121;
        (*v121)(v71, v15);
        v74(v64, v15);
        unint64_t v25 = v70;
        (*v120)(v70, v136);
        (*v95)(v123, v103);
      }
      else
      {
        uint64_t v75 = v101;
        (*v99)(v101, v123, v73);
        unint64_t v76 = v136;
        (*v132)(v100, v70, v136);
        uint64_t v77 = v102;
        (*v98)(v102, v75, v73);
        (*v97)(v77, 0, 1, v73);
        sub_1C4497008();
        uint64_t v4 = v131;
        sub_1C4497048();
        uint64_t v78 = v75;
        unint64_t v25 = v70;
        uint64_t v50 = v105;
        (*v96)(v78, v73);
        uint64_t v79 = *v121;
        (*v121)(v115, v15);
        v79(v50, v15);
        (*v120)(v70, v76);
      }
      TupleTypeMetadata2 = v122;
      uint64_t v51 = v111;
    }
    int64_t v49 = v134;
    uint64_t v52 = v130;
    if (v6) {
      goto LABEL_8;
    }
  }
  swift_release();
  uint64_t v81 = v142;
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_1C44976E8();
  swift_bridgeObjectRelease();
  if (v82 > 0 || (swift_bridgeObjectRetain(), uint64_t v83 = sub_1C4496F68(), swift_bridgeObjectRelease(), v83 > 0))
  {
    swift_release();
    uint64_t result = swift_release();
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t v88 = sub_1C4496F68();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  if (v88 > 0)
  {
LABEL_41:
    uint64_t v86 = v140;
    uint64_t v85 = v141;
    uint64_t v87 = v94;
    *uint64_t v94 = v81;
    v87[1] = v85;
    v87[2] = v86;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v89 = v94;
    *uint64_t v94 = 0;
    v89[1] = 0;
    v89[2] = 0;
  }
  return result;
}

uint64_t CRDTDictionary.apply(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v130 = *(void *)(a2 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v129 = sub_1C4497B38();
  uint64_t v125 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  uint64_t v128 = (char *)v120 - v7;
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v123 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v124 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v132 = (char *)v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v149 = (char *)v120 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v120 - v14;
  uint64_t v122 = v16;
  uint64_t v17 = sub_1C4497B38();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)v120 - v18;
  uint64_t v20 = swift_getTupleTypeMetadata2();
  int64_t v134 = *(void (***)(char *, uint64_t))(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v151 = (char *)v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v159 = (char *)v120 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v150 = (char *)v120 - v25;
  uint64_t v26 = sub_1C4497B38();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v140 = (char *)v120 - v27;
  unint64_t v154 = (void (*)(char *, char *, uint64_t))sub_1C4497B38();
  unint64_t v136 = *((void *)v154 - 1);
  uint64_t v28 = MEMORY[0x1F4188790](v154);
  long long v138 = (char *)v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v153 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v120 - v31);
  uint64_t v142 = *(void *)(v8 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  long long v137 = (void (**)(char *, uint64_t))((char *)v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v32);
  uint64_t v152 = (char *)v120 - v34;
  uint64_t v35 = sub_1C4497B38();
  uint64_t result = MEMORY[0x1F4188790](v35 - 8);
  uint64_t v38 = (char *)v120 - v37;
  uint64_t v39 = *a1;
  if (!*a1) {
    return result;
  }
  char v155 = v15;
  unint64_t v133 = a1[1];
  unint64_t v121 = a1[2];
  uint64_t v158 = v2;
  sub_1C4487380();
  uint64_t v162 = v5;
  uint64_t v160 = v20;
  if ((v39 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C4497C48();
    uint64_t result = sub_1C4497728();
    uint64_t v39 = v163[4];
    uint64_t v144 = (char *)v163[5];
    uint64_t v40 = v163[6];
    uint64_t v146 = (char *)v163[7];
    unint64_t v41 = v163[8];
  }
  else
  {
    uint64_t v42 = -1 << *(unsigned char *)(v39 + 32);
    uint64_t v43 = *(void *)(v39 + 56);
    uint64_t v144 = (char *)(v39 + 56);
    uint64_t v40 = ~v42;
    uint64_t v44 = -v42;
    if (v44 < 64) {
      uint64_t v45 = ~(-1 << v44);
    }
    else {
      uint64_t v45 = -1;
    }
    unint64_t v41 = v45 & v43;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v146 = 0;
  }
  uint64_t v145 = v39 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56);
  uint64_t v139 = (void (**)(char *, void, uint64_t, uint64_t))v40;
  uint64_t v143 = (char *)((unint64_t)(v40 + 64) >> 6);
  int v161 = (void (**)(void))(v142 + 16);
  uint64_t v157 = (void (**)(char *, char *, uint64_t))(v142 + 32);
  uint64_t v47 = (void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), void *))(v136 + 8);
  uint64_t v156 = (uint64_t (**)(char *, uint64_t))(v142 + 8);
  uint64_t v148 = v39;
  while (v39 < 0)
  {
    if (!sub_1C4497CB8()) {
      goto LABEL_28;
    }
    sub_1C44982C8();
    swift_unknownObjectRelease();
LABEL_11:
    (*v46)(v38, 0, 1, v8);
    uint64_t v50 = (uint64_t)v152;
    (*v157)(v152, v38, v8);
    sub_1C4487380();
    uint64_t v51 = v3;
    uint64_t v52 = v153;
    sub_1C4485BCC(v50, (uint64_t)v153);
    unint64_t v53 = v52;
    uint64_t v3 = v51;
    (*v47)(v53, v154);
    uint64_t result = (*v156)((char *)v50, v8);
    uint64_t v39 = v148;
  }
  if (v41)
  {
    unint64_t v48 = __clz(__rbit64(v41));
    v41 &= v41 - 1;
    unint64_t v49 = v48 | ((void)v146 << 6);
LABEL_10:
    (*(void (**)(char *, unint64_t, uint64_t))(v142 + 16))(v38, *(void *)(v39 + 48) + *(void *)(v142 + 72) * v49, v8);
    goto LABEL_11;
  }
  uint64_t v54 = (uint64_t)(v146 + 1);
  if (__OFADD__(v146, 1))
  {
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if (v54 >= (uint64_t)v143) {
    goto LABEL_28;
  }
  unint64_t v55 = *(void *)&v144[8 * v54];
  uint64_t v56 = v146 + 1;
  if (v55) {
    goto LABEL_25;
  }
  uint64_t v56 = v146 + 2;
  if ((uint64_t)(v146 + 2) >= (uint64_t)v143) {
    goto LABEL_28;
  }
  unint64_t v55 = *(void *)&v144[8 * (void)v56];
  if (v55) {
    goto LABEL_25;
  }
  uint64_t v56 = v146 + 3;
  if ((uint64_t)(v146 + 3) >= (uint64_t)v143) {
    goto LABEL_28;
  }
  unint64_t v55 = *(void *)&v144[8 * (void)v56];
  if (v55)
  {
LABEL_25:
    unint64_t v41 = (v55 - 1) & v55;
    unint64_t v49 = __clz(__rbit64(v55)) + ((void)v56 << 6);
    uint64_t v146 = v56;
    goto LABEL_10;
  }
  int64_t v57 = v146 + 4;
  while (v143 != v57)
  {
    unint64_t v55 = *(void *)&v144[8 * (void)v57++];
    if (v55)
    {
      uint64_t v56 = v57 - 1;
      goto LABEL_25;
    }
  }
LABEL_28:
  (*v46)(v38, 1, 1, v8);
  sub_1C3F7FCE8();
  uint64_t v147 = v3;
  if ((v133 & 0xC000000000000001) != 0)
  {
    uint64_t v58 = sub_1C4497F08();
    unint64_t v126 = 0;
    uint64_t v59 = 0;
    unint64_t v60 = 0;
    unint64_t v61 = v58 | 0x8000000000000000;
  }
  else
  {
    uint64_t v62 = -1 << *(unsigned char *)(v133 + 32);
    uint64_t v59 = ~v62;
    uint64_t v63 = *(void *)(v133 + 64);
    unint64_t v126 = v133 + 64;
    uint64_t v64 = -v62;
    if (v64 < 64) {
      uint64_t v65 = ~(-1 << v64);
    }
    else {
      uint64_t v65 = -1;
    }
    unint64_t v60 = v65 & v63;
    unint64_t v61 = v133;
  }
  uint64_t v66 = v155;
  uint64_t v127 = v61 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v139 = (void (**)(char *, void, uint64_t, uint64_t))(v134 + 7);
  v120[1] = v59;
  int64_t v131 = (unint64_t)(v59 + 64) >> 6;
  uint64_t v145 = v162 - 8;
  id v135 = (void (**)(char *, void (**)(char *, uint64_t, uint64_t, uint64_t), void *))(v136 + 40);
  ++v134;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v133 = 0;
  uint64_t v146 = v19;
  unint64_t v136 = v61;
  while (2)
  {
    if ((v61 & 0x8000000000000000) == 0)
    {
      if (v60)
      {
        uint64_t v148 = (v60 - 1) & v60;
        unint64_t v67 = __clz(__rbit64(v60)) | (v133 << 6);
        uint64_t v68 = v140;
        unint64_t v69 = v161;
      }
      else
      {
        int64_t v85 = v133 + 1;
        unint64_t v69 = v161;
        if (__OFADD__(v133, 1)) {
          goto LABEL_88;
        }
        if (v85 >= v131)
        {
LABEL_54:
          uint64_t v89 = v123;
          uint64_t v90 = v122;
          goto LABEL_56;
        }
        unint64_t v86 = *(void *)(v126 + 8 * v85);
        int64_t v87 = v133 + 1;
        if (!v86)
        {
          int64_t v87 = v133 + 2;
          if ((uint64_t)(v133 + 2) >= v131) {
            goto LABEL_54;
          }
          unint64_t v86 = *(void *)(v126 + 8 * v87);
          if (!v86)
          {
            unint64_t v88 = v133 + 3;
            if ((uint64_t)(v133 + 3) >= v131) {
              goto LABEL_54;
            }
            unint64_t v86 = *(void *)(v126 + 8 * v88);
            if (!v86)
            {
              while (1)
              {
                int64_t v87 = v88 + 1;
                if (__OFADD__(v88, 1)) {
                  goto LABEL_90;
                }
                if (v87 >= v131) {
                  goto LABEL_54;
                }
                unint64_t v86 = *(void *)(v126 + 8 * v87);
                ++v88;
                if (v86) {
                  goto LABEL_53;
                }
              }
            }
            int64_t v87 = v133 + 3;
          }
        }
LABEL_53:
        uint64_t v148 = (v86 - 1) & v86;
        unint64_t v67 = __clz(__rbit64(v86)) + (v87 << 6);
        unint64_t v133 = v87;
        uint64_t v68 = v140;
      }
      uint64_t v70 = v160;
      (*(void (**)(char *, unint64_t, uint64_t))(v142 + 16))(v68, *(void *)(v61 + 48) + *(void *)(v142 + 72) * v67, v8);
      (*(void (**)(char *, unint64_t))(*(void *)(v162 - 8) + 16))(&v68[*(int *)(v70 + 48)], *(void *)(v61 + 56) + *(void *)(*(void *)(v162 - 8) + 72) * v67);
      goto LABEL_37;
    }
    uint64_t v148 = v60;
    if (sub_1C4497F28())
    {
      uint64_t v68 = v140;
      sub_1C44982C8();
      swift_unknownObjectRelease();
      uint64_t v70 = v160;
      sub_1C44982C8();
      swift_unknownObjectRelease();
      unint64_t v69 = v161;
LABEL_37:
      (*v139)(v68, 0, 1, v70);
      uint64_t v71 = *(int *)(v70 + 48);
      uint64_t v72 = &v150[v71];
      uint64_t v73 = &v68[v71];
      (*v157)(v150, v68, v8);
      uint64_t v74 = *(void *)(v162 - 8);
      uint64_t v143 = *(char **)(v74 + 32);
      ((void (*)(char *, char *))v143)(v72, v73);
      uint64_t v144 = &v159[*(int *)(v160 + 48)];
      uint64_t v75 = v144;
      unint64_t v76 = *v69;
      (*v69)();
      uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
      v77(v75, v72, v162);
      uint64_t v78 = &v151[*(int *)(v160 + 48)];
      v76();
      v77(v78, v72, v162);
      uint64_t v79 = v162;
      uint64_t v80 = v153;
      ((void (*)(void (**)(char *, uint64_t, uint64_t, uint64_t), char *, uint64_t))v143)(v153, v78, v162);
      (*(void (**)(void, void, uint64_t, uint64_t))(v74 + 56))(v80, 0, 1, v79);
      sub_1C4487380();
      uint64_t v81 = (uint64_t)v152;
      ((void (*)(char *, char *, uint64_t))v76)(v152, v159, v8);
      uint64_t v82 = (uint64_t)v137;
      ((void (*)(void (**)(char *, uint64_t), uint64_t, uint64_t))v76)(v137, v81, v8);
      uint64_t v83 = v138;
      sub_1C4484B98(v81, (uint64_t)v138);
      (*v135)(v83, v80, v154);
      sub_1C4484E2C(v83, v82);
      uint64_t v84 = *v156;
      (*v156)((char *)v81, v8);
      (*v134)(v150, v160);
      v84(v151, v8);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v144, v79);
      uint64_t result = v84(v159, v8);
      uint64_t v19 = v146;
      uint64_t v66 = v155;
      unint64_t v61 = v136;
      unint64_t v60 = v148;
      continue;
    }
    break;
  }
  uint64_t v89 = v123;
  uint64_t v90 = v122;
  unint64_t v69 = v161;
LABEL_56:
  (*v139)(v140, 1, 1, v160);
  sub_1C3F7FCE8();
  if ((v121 & 0xC000000000000001) != 0)
  {
    uint64_t v91 = sub_1C4497F08();
    unint64_t v136 = 0;
    uint64_t v92 = 0;
    unint64_t v93 = 0;
    unint64_t v94 = v91 | 0x8000000000000000;
  }
  else
  {
    uint64_t v95 = -1 << *(unsigned char *)(v121 + 32);
    uint64_t v92 = ~v95;
    uint64_t v96 = *(void *)(v121 + 64);
    unint64_t v136 = v121 + 64;
    uint64_t v97 = -v95;
    if (v97 < 64) {
      uint64_t v98 = ~(-1 << v97);
    }
    else {
      uint64_t v98 = -1;
    }
    unint64_t v93 = v98 & v96;
    unint64_t v94 = v121;
  }
  uint64_t v139 = (void (**)(char *, void, uint64_t, uint64_t))(v94 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v153 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v124 + 56);
  id v135 = (void (**)(char *, void (**)(char *, uint64_t, uint64_t, uint64_t), void *))v92;
  uint64_t v140 = (char *)((unint64_t)(v92 + 64) >> 6);
  uint64_t v151 = (char *)(v89 - 8);
  uint64_t v150 = (char *)(v124 + 8);
  long long v138 = (char *)(v130 + 64);
  long long v137 = (void (**)(char *, uint64_t))(v125 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v148 = 0;
  uint64_t v152 = (char *)v94;
  uint64_t v141 = v8;
  while (2)
  {
    if ((v94 & 0x8000000000000000) != 0)
    {
      uint64_t v160 = v93;
      if (!sub_1C4497F28()) {
        goto LABEL_85;
      }
      sub_1C44982C8();
      swift_unknownObjectRelease();
      sub_1C44982C8();
      swift_unknownObjectRelease();
      goto LABEL_83;
    }
    if (v93)
    {
      uint64_t v160 = (v93 - 1) & v93;
      unint64_t v104 = __clz(__rbit64(v93)) | (v148 << 6);
      goto LABEL_82;
    }
    uint64_t v105 = v148 + 1;
    if (__OFADD__(v148, 1)) {
      goto LABEL_89;
    }
    if (v105 >= (uint64_t)v140)
    {
LABEL_85:
      (*v153)(v19, 1, 1, v90);
      return sub_1C3F7FCE8();
    }
    unint64_t v106 = *(void *)(v136 + 8 * v105);
    uint64_t v107 = v148 + 1;
    if (v106) {
      goto LABEL_81;
    }
    uint64_t v107 = v148 + 2;
    if (v148 + 2 >= (uint64_t)v140) {
      goto LABEL_85;
    }
    unint64_t v106 = *(void *)(v136 + 8 * v107);
    if (v106)
    {
LABEL_81:
      uint64_t v160 = (v106 - 1) & v106;
      unint64_t v104 = __clz(__rbit64(v106)) + (v107 << 6);
      uint64_t v148 = v107;
LABEL_82:
      (*(void (**)(char *, unint64_t, uint64_t))(v142 + 16))(v19, *(void *)(v94 + 48) + *(void *)(v142 + 72) * v104, v8);
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(&v19[*(int *)(v90 + 48)], *(void *)(v94 + 56) + *(void *)(*(void *)(v89 - 8) + 72) * v104, v89);
LABEL_83:
      (*v153)(v19, 0, 1, v90);
      uint64_t v109 = *(int *)(v90 + 48);
      int64_t v110 = &v66[v109];
      uint64_t v111 = &v19[v109];
      (*v157)(v66, v19, v8);
      uint64_t v112 = *(void *)(v89 - 8);
      unint64_t v154 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
      v154(v110, v111, v89);
      uint64_t v113 = (uint64_t)v149;
      unint64_t v114 = &v149[*(int *)(v90 + 48)];
      uint64_t v115 = v8;
      uint64_t v116 = *v69;
      ((void (*)(char *, char *, uint64_t))*v69)(v149, v66, v115);
      uint64_t v117 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
      uint64_t v159 = v114;
      v117(v114, v110, v89);
      uint64_t v118 = CRDTDictionary.subscript.modify(v163, v113, v147);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v162 - 8) + 48))(v119, 1))
      {
        ((void (*)(void *, void))v118)(v163, 0);
        uint64_t v66 = v155;
        (*(void (**)(char *, uint64_t))v150)(v155, v90);
        uint64_t v8 = v141;
        uint64_t v19 = v146;
        unint64_t v69 = v161;
        uint64_t v103 = v156;
      }
      else
      {
        uint64_t v99 = *(int *)(v90 + 48);
        uint64_t v144 = (char *)v118;
        uint64_t v143 = &v132[v99];
        uint64_t v100 = v161;
        v116();
        uint64_t v101 = v143;
        v117(v143, v110, v89);
        uint64_t v102 = v128;
        v154(v128, v101, v89);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v102, 0, 1, v89);
        (*(void (**)(char *, uint64_t))(v130 + 64))(v102, v162);
        (*v137)(v102, v129);
        ((void (*)(void *, void))v144)(v163, 0);
        uint64_t v66 = v155;
        (*(void (**)(char *, uint64_t))v150)(v155, v90);
        uint64_t v103 = v156;
        uint64_t v8 = v141;
        (*v156)(v132, v141);
        uint64_t v19 = v146;
        unint64_t v69 = v100;
      }
      unint64_t v93 = v160;
      (*(void (**)(char *, uint64_t))(v112 + 8))(v159, v89);
      uint64_t result = (*v103)(v149, v8);
      unint64_t v94 = (unint64_t)v152;
      continue;
    }
    break;
  }
  uint64_t v108 = v148 + 3;
  if (v148 + 3 >= (uint64_t)v140) {
    goto LABEL_85;
  }
  unint64_t v106 = *(void *)(v136 + 8 * v108);
  if (v106)
  {
    uint64_t v107 = v148 + 3;
    goto LABEL_81;
  }
  while (1)
  {
    uint64_t v107 = v108 + 1;
    if (__OFADD__(v108, 1)) {
      break;
    }
    if (v107 >= (uint64_t)v140) {
      goto LABEL_85;
    }
    unint64_t v106 = *(void *)(v136 + 8 * v107);
    ++v108;
    if (v106) {
      goto LABEL_81;
    }
  }
LABEL_91:
  __break(1u);
  return result;
}

uint64_t CRDTDictionary.hasDelta(from:)()
{
  swift_retain();
  char v0 = (void *)swift_retain();
  char v1 = sub_1C43832E4(v0);
  swift_release();
  swift_release();
  return v1 & 1;
}

double CRDTDictionary.delta(_:from:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v35 = *v4;
  uint64_t v34 = v7;
  swift_retain();
  swift_retain();
  CRDTDictionary.finalizeTimestamps(_:)(a1);
  CRDTDictionary.finalizeTimestamps(_:)(a1);
  swift_retain();
  swift_retain();
  sub_1C4485E94(a1, v35, &v29);
  swift_release();
  swift_release();
  uint64_t v26 = *((void *)&v29 + 1);
  uint64_t v27 = v29;
  uint64_t v8 = v32;
  uint64_t v24 = v31;
  uint64_t v25 = v30;
  uint64_t v9 = v33;
  uint64_t v10 = a3[2];
  uint64_t v11 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v12 = a3[4];
  uint64_t v13 = a3[5];
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v29 = v10;
  *((void *)&v29 + 1) = v11;
  uint64_t v30 = v12;
  uint64_t v31 = v13;
  uint64_t v32 = WitnessTable;
  type metadata accessor for CRSetRefMergeableDelta.RemovedVersion();
  uint64_t v15 = sub_1C4496F68();
  swift_bridgeObjectRelease();
  if (v15 < 1
    && (type metadata accessor for CRDTDictionaryElement.Delta(),
        swift_bridgeObjectRetain(),
        uint64_t v16 = sub_1C4496F68(),
        swift_bridgeObjectRelease(),
        v16 < 1))
  {
    uint64_t v18 = v27;
    swift_bridgeObjectRetain();
    uint64_t v19 = v26;
    swift_bridgeObjectRetain();
    uint64_t v20 = v25;
    swift_bridgeObjectRetain();
    uint64_t v21 = v24;
    uint64_t v22 = swift_bridgeObjectRetain();
    if (sub_1C4112134(v22, v26))
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_1C4112134(v25, v27);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double result = 0.0;
        *(_OWORD *)(a4 + 16) = 0u;
        *(_OWORD *)(a4 + 32) = 0u;
        *(_OWORD *)a4 = 0u;
        return result;
      }
    }
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v19 = v26;
    uint64_t v18 = v27;
    uint64_t v21 = v24;
    uint64_t v20 = v25;
  }
  *(void *)a4 = v18;
  *(void *)(a4 + 8) = v19;
  *(void *)(a4 + 16) = v20;
  *(void *)(a4 + 24) = v21;
  *(void *)(a4 + 32) = v8;
  *(void *)(a4 + 40) = v9;
  return result;
}

uint64_t CRDTDictionary.canMerge(delta:)(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[5];
  v9[0] = *a1;
  v9[1] = v1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v3 = sub_1C4381EC8(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_release();
  if (v3)
  {
    v9[0] = v2;
    uint64_t v5 = MEMORY[0x1F4188790](v4);
    MEMORY[0x1F4188790](v5);
    type metadata accessor for CRDTDictionaryElement.Delta();
    sub_1C4497008();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    char v6 = sub_1C4497368();
    swift_bridgeObjectRelease();
    char v7 = v6 ^ 1;
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t CRDTDictionary.merge(delta:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  sub_1C4487380();
  *(void *)&long long v9 = v1;
  *((void *)&v9 + 1) = v2;
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v7 = sub_1C4382094(&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v7 & 1;
}

uint64_t CRDTDictionary.observableDifference(from:with:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  int64_t v8 = a3[6];
  uint64_t v9 = a3[3];
  uint64_t v112 = *(void *)(v8 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v103 = sub_1C4497B38();
  uint64_t v116 = *(void *)(v103 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v103);
  uint64_t v102 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int64_t v110 = (char *)&v91 - v14;
  uint64_t v114 = AssociatedTypeWitness;
  uint64_t v120 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v101 = (char *)&v91 - v15;
  int64_t v111 = v9;
  int64_t v16 = v8;
  uint64_t v17 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v109 = sub_1C4497B38();
  int64_t v108 = *(void *)(v109 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v109);
  unint64_t v104 = (char *)&v91 - v19;
  uint64_t v118 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v91 - v24;
  uint64_t v26 = a3;
  int64_t v27 = a3[2];
  uint64_t v117 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v23);
  uint64_t v100 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  int64_t v134 = (char *)&v91 - v30;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v131 = sub_1C4497B38();
  uint64_t v32 = MEMORY[0x1F4188790](v131);
  uint64_t result = MEMORY[0x1F4188790](v32);
  uint64_t v130 = (char *)&v91 - v36;
  uint64_t v37 = *a1;
  uint64_t v38 = *v133;
  uint64_t v113 = a2;
  if (!*(void *)(a2 + 24) && v38 == v37)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    return result;
  }
  uint64_t v126 = v34;
  uint64_t v92 = a4;
  int64_t v39 = v26[5];
  uint64_t v40 = v38;
  unint64_t v133 = v35;
  uint64_t v137 = sub_1C4496EC8();
  uint64_t v136 = sub_1C4496EC8();
  uint64_t v41 = sub_1C4496EA8();
  uint64_t v129 = &v91;
  uint64_t v135 = v41;
  uint64_t v125 = v40;
  uint64_t v127 = *(void (***)(void))(v37 + 16);
  uint64_t v42 = MEMORY[0x1F4188790](v41);
  uint64_t v128 = &v91 - 8;
  int64_t v43 = v111;
  *(&v91 - 6) = v27;
  *(&v91 - 5) = v43;
  *(&v91 - 4) = v26[4];
  *(&v91 - 3) = v39;
  *(&v91 - 2) = v16;
  *(&v91 - 1) = (int64_t)&v137;
  MEMORY[0x1F4188790](v42);
  *(&v91 - 6) = v27;
  *(&v91 - 5) = v44;
  *(&v91 - 4) = v45;
  *(&v91 - 3) = v39;
  int64_t v132 = v39;
  *(&v91 - 2) = v46;
  *(&v91 - 1) = (int64_t)&v136;
  swift_retain();
  uint64_t v47 = swift_retain();
  sub_1C4380CE0(v47, v113, (void (*)(char *))sub_1C44917C0, (uint64_t)v128, (void (*)(char *))sub_1C44917C0, (uint64_t)(&v91 - 8));
  swift_release();
  swift_release();
  uint64_t v48 = *(void *)(v37 + 16);
  swift_beginAccess();
  uint64_t v49 = *(void *)(v48 + 40);
  uint64_t v50 = *(void *)(v49 + 64);
  uint64_t v99 = v49 + 64;
  uint64_t v51 = 1 << *(unsigned char *)(v49 + 32);
  uint64_t v52 = -1;
  if (v51 < 64) {
    uint64_t v52 = ~(-1 << v51);
  }
  unint64_t v53 = v52 & v50;
  uint64_t v128 = (int64_t *)(TupleTypeMetadata2 - 8);
  uint64_t v129 = (int64_t *)(v117 + 16);
  uint64_t v115 = v118 + 16;
  uint64_t v127 = (void (**)(void))(v133 + 4);
  uint64_t v124 = (void (**)(char *, char *, int64_t))(v117 + 32);
  uint64_t v123 = (void (**)(char *, char *, uint64_t))(v118 + 32);
  uint64_t v122 = (unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
  uint64_t v107 = v112 + 40;
  unint64_t v106 = (unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 6);
  uint64_t v97 = (void (**)(char *, char *, uint64_t))(v120 + 4);
  uint64_t v96 = (void (**)(char *, char *, uint64_t))(v120 + 2);
  uint64_t v95 = (void (**)(char *, void, uint64_t, uint64_t))(v120 + 7);
  unint64_t v94 = v120 + 1;
  uint64_t v120 = (void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v119 = (void (**)(char *, int64_t))(v117 + 8);
  unint64_t v93 = (uint64_t (**)(char *, uint64_t))(v116 + 8);
  uint64_t v105 = (uint64_t (**)(char *, uint64_t))(v108 + 8);
  int64_t v108 = (unint64_t)(v51 + 63) >> 6;
  int64_t v91 = v108 - 1;
  uint64_t v116 = v49;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v54 = 0;
  unint64_t v55 = v104;
  uint64_t v98 = v17;
  uint64_t v121 = TupleTypeMetadata2;
  while (1)
  {
    if (v53)
    {
      unint64_t v56 = __clz(__rbit64(v53));
      v53 &= v53 - 1;
      unint64_t v133 = v54;
      unint64_t v57 = v56 | ((void)v54 << 6);
LABEL_11:
      uint64_t v58 = v116;
      uint64_t v59 = v126;
      (*(void (**)(uint64_t, unint64_t, int64_t))(v117 + 16))(v126, *(void *)(v116 + 48) + *(void *)(v117 + 72) * v57, v27);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v118 + 16))(v59 + *(int *)(TupleTypeMetadata2 + 48), *(void *)(v58 + 56) + *(void *)(v118 + 72) * v57, v17);
      uint64_t v60 = 0;
      goto LABEL_19;
    }
    int64_t v61 = (int64_t)v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v61 >= v108)
    {
      unint64_t v133 = v54;
    }
    else
    {
      unint64_t v62 = *(void *)(v99 + 8 * v61);
      if (v62) {
        goto LABEL_15;
      }
      uint64_t v81 = (void *)((char *)v54 + 2);
      if ((uint64_t)v54 + 2 >= v108)
      {
        unint64_t v53 = 0;
        uint64_t v60 = 1;
LABEL_29:
        unint64_t v133 = (void *)v61;
        goto LABEL_18;
      }
      unint64_t v62 = *(void *)(v99 + 8 * (void)v81);
      if (v62)
      {
        int64_t v61 = (int64_t)v54 + 2;
LABEL_15:
        unint64_t v53 = (v62 - 1) & v62;
        unint64_t v57 = __clz(__rbit64(v62)) + (v61 << 6);
        unint64_t v133 = (void *)v61;
        goto LABEL_11;
      }
      int64_t v82 = (int64_t)v54 + 3;
      if (v82 < v108)
      {
        unint64_t v62 = *(void *)(v99 + 8 * v82);
        if (!v62)
        {
          while (1)
          {
            int64_t v61 = v82 + 1;
            if (__OFADD__(v82, 1)) {
              goto LABEL_46;
            }
            if (v61 >= v108)
            {
              unint64_t v53 = 0;
              uint64_t v60 = 1;
              int64_t v61 = v91;
              goto LABEL_29;
            }
            unint64_t v62 = *(void *)(v99 + 8 * v61);
            ++v82;
            if (v62) {
              goto LABEL_15;
            }
          }
        }
        int64_t v61 = v82;
        goto LABEL_15;
      }
      unint64_t v133 = v81;
    }
    unint64_t v53 = 0;
    uint64_t v60 = 1;
LABEL_18:
    uint64_t v59 = v126;
LABEL_19:
    uint64_t v63 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v59, v60, 1, TupleTypeMetadata2);
    uint64_t v64 = v130;
    (*v127)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v64, 1, TupleTypeMetadata2) == 1) {
      break;
    }
    uint64_t v65 = TupleTypeMetadata2;
    uint64_t v66 = v22;
    unint64_t v67 = &v64[*(int *)(v65 + 48)];
    uint64_t v68 = v134;
    (*v124)(v134, v64, v27);
    unint64_t v69 = *v123;
    (*v123)(v25, v67, v17);
    uint64_t v70 = *(void *)(v125 + 16);
    swift_beginAccess();
    uint64_t v71 = *(void *)(v70 + 40);
    swift_bridgeObjectRetain();
    MEMORY[0x1C877FC90](v68, v71, v27, v17, v132);
    swift_bridgeObjectRelease();
    if ((*v122)(v55, 1, v17) == 1)
    {
      (*v120)(v25, v17);
      (*v119)(v134, v27);
      uint64_t result = (*v105)(v55, v109);
      uint64_t v22 = v66;
    }
    else
    {
      v69(v66, v55, v17);
      uint64_t v22 = v66;
      uint64_t v72 = v110;
      (*(void (**)(char *, uint64_t, int64_t))(v112 + 40))(v25, v113, v111);
      uint64_t v73 = v114;
      if ((*v106)(v72, 1, v114) == 1)
      {
        uint64_t v74 = *v120;
        (*v120)(v66, v17);
        v74(v25, v17);
        (*v119)(v134, v27);
        uint64_t result = (*v93)(v72, v103);
      }
      else
      {
        uint64_t v75 = v101;
        (*v97)(v101, v72, v73);
        unint64_t v76 = v134;
        ((void (*)(char *, char *, int64_t))*v129)(v100, v134, v27);
        uint64_t v77 = v102;
        (*v96)(v102, v75, v73);
        (*v95)(v77, 0, 1, v73);
        sub_1C4497008();
        uint64_t v78 = v76;
        uint64_t v17 = v98;
        sub_1C4497048();
        uint64_t v79 = v75;
        unint64_t v55 = v104;
        uint64_t v22 = v66;
        (*v94)(v79, v73);
        uint64_t v80 = *v120;
        (*v120)(v66, v17);
        v80(v25, v17);
        uint64_t result = ((uint64_t (*)(char *, int64_t))*v119)(v78, v27);
      }
    }
    TupleTypeMetadata2 = v121;
    uint64_t v54 = v133;
  }
  swift_release();
  uint64_t v83 = v137;
  swift_bridgeObjectRetain();
  uint64_t v84 = sub_1C44976E8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v84 <= 0
    && (swift_bridgeObjectRetain(), v85 = sub_1C44976E8(), uint64_t result = swift_bridgeObjectRelease(), v85 <= 0)
    && (swift_bridgeObjectRetain(), v86 = sub_1C4496F68(), uint64_t result = swift_bridgeObjectRelease(), v86 < 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v90 = v92;
    *uint64_t v92 = 0;
    v90[1] = 0;
    uint64_t v90[2] = 0;
  }
  else
  {
    uint64_t v88 = v135;
    uint64_t v87 = v136;
    uint64_t v89 = v92;
    *uint64_t v92 = v83;
    v89[1] = v87;
    v89[2] = v88;
  }
  return result;
}

uint64_t sub_1C448BF98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return CRDTDictionary.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a3);
}

uint64_t CRDTDictionary.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v22 = a7;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v15, (uint64_t)v14, &qword_1EBBC04F8);
  uint64_t v16 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v15) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16);
  sub_1C3F962E0((uint64_t)v14, &qword_1EBBC04F8);
  if (v15 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v17 = 0xD000000000000014;
    *(void *)(v17 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v17 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a1;
    *(void *)(inited + 24) = 0;
    *(unsigned char *)(inited + 32) = 1;
    uint64_t v20 = v24;
    sub_1C4000290(a2, a3, a4, a5, v23, (uint64_t)&v25);
    uint64_t result = swift_release();
    if (!v20) {
      *uint64_t v22 = v25;
    }
  }
  return result;
}

uint64_t sub_1C448C1A8(uint64_t a1, void *a2)
{
  return CRDTDictionary.encode(to:)(a1, a2);
}

uint64_t CRDTDictionary.encode(to:)(uint64_t a1, void *a2)
{
  uint64_t v5 = *v2;
  uint64_t result = sub_1C3F62C10();
  if (!v3)
  {
    uint64_t v12 = v5;
    uint64_t v7 = a2[2];
    uint64_t v8 = a2[3];
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    swift_retain();
    sub_1C400C944(&v12, v7, v8, v9, v10, v11);
    return swift_release();
  }
  return result;
}

BOOL CRDTDictionary.hasEncodedData.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 32) + 16) || *(void *)(*(void *)(v1 + 24) + 16) != 0;
}

void sub_1C448C2C0(unsigned char *a1@<X8>)
{
}

void CRDTDictionary.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C448C2E4()
{
  sub_1C4491280();
  return swift_retain();
}

uint64_t sub_1C448C310(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v23 = a2;
  uint64_t v5 = *a3;
  uint64_t v6 = *(void *)(*a3 + 88);
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = *(void *)(v6 + 16);
  uint64_t v11 = sub_1C4497B38();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = *(void *)(v5 + 80);
  MEMORY[0x1F4188790](v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v23 - v16, a1, v15);
  swift_beginAccess();
  uint64_t v18 = a3[5];
  uint64_t v19 = *(void *)(v5 + 104);
  swift_bridgeObjectRetain();
  MEMORY[0x1C877FC90](a1, v18, v15, v6, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v22 = *(void *)(v10 - 8);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v14, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v14, 0, 1, v10);
    sub_1C4497008();
    sub_1C4497048();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v6);
  }
  return result;
}

uint64_t CRDTDictionary.ObservableDifference.addedKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CRDTDictionary.ObservableDifference.removedKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CRDTDictionary.ObservableDifference.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C448C624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(char *))(v4 + 16))(v7);
  sub_1C4497748();
  sub_1C44976F8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, a3);
}

double sub_1C448C740@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v22 = a6;
  uint64_t v12 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4494964(a1, (uint64_t)v14);
  uint64_t v15 = type metadata accessor for CRDTDictionaryElement();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1C4383AD8((uint64_t)v14, a2, a3, v15, a4, a5, WitnessTable, v21);
  sub_1C3F9253C(a1, type metadata accessor for Proto_Set);
  if (!v6)
  {
    double result = *(double *)v21;
    long long v18 = v21[1];
    long long v19 = v21[2];
    uint64_t v20 = v22;
    *uint64_t v22 = v21[0];
    v20[1] = v18;
    void v20[2] = v19;
  }
  return result;
}

double CRDTDictionary.Partial.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v35 = a4;
  uint64_t v34 = a3;
  uint64_t v33 = a2;
  uint64_t v31 = a7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_CRDT(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v17 - 8);
  long long v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v19, &qword_1EBBC04F8);
  LODWORD(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
  sub_1C3F962E0((uint64_t)v19, &qword_1EBBC04F8);
  if (v20 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v21 = 0xD000000000000014;
    *(void *)(v21 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v21 + 16) = 0;
    swift_willThrow();
    swift_release();
    return result;
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = a1;
  *(void *)(inited + 24) = 0;
  *(unsigned char *)(inited + 32) = 1;
  swift_retain();
  sub_1C3FBA924((uint64_t)v16);
  uint64_t v24 = *(void *)&v16[*(int *)(v13 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v24, (uint64_t)v10, &qword_1EBBC0648);
  uint64_t v25 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v10, 1, v25) == 1)
  {
    sub_1C3F962E0((uint64_t)v10, &qword_1EBBC0648);
LABEL_8:
    sub_1C4496888();
    uint64_t v26 = *(int *)(v32 + 20);
    if (qword_1EBBC01E8 != -1) {
      swift_once();
    }
    *(void *)&v12[v26] = qword_1EBBC01E0;
    swift_retain();
    goto LABEL_11;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C3F9253C((uint64_t)v10, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_8;
  }
  sub_1C3F72140((uint64_t)v10, (uint64_t)v12, type metadata accessor for Proto_Set);
LABEL_11:
  sub_1C3F9253C((uint64_t)v16, type metadata accessor for Proto_CRDT);
  uint64_t v27 = v39;
  sub_1C448C740((uint64_t)v12, a1, v33, v35, v36, v38);
  swift_setDeallocating();
  swift_release();
  if (!v27)
  {
    double result = *(double *)v38;
    long long v28 = v38[1];
    long long v29 = v38[2];
    uint64_t v30 = v31;
    *uint64_t v31 = v38[0];
    v30[1] = v28;
    void v30[2] = v29;
  }
  return result;
}

uint64_t sub_1C448CCFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for CRDTDictionaryElement();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v2 = (void *)type metadata accessor for CRSetRefMergeableDelta();
  sub_1C4384638(a1, v2, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t CRDTDictionary.Partial.encode(to:)(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Proto_Set(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v10 = v1[1];
  long long v11 = v7;
  long long v9 = v1[2];
  uint64_t result = sub_1C3F62C10();
  if (!v2)
  {
    long long v12 = v11;
    long long v13 = v10;
    long long v14 = v9;
    swift_retain();
    sub_1C448CCFC(a1, (uint64_t)v6);
    swift_beginAccess();
    sub_1C43F187C((uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t CRDTDictionary.Partial.visitReferences(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v84 = a1;
  uint64_t v5 = a2[6];
  uint64_t v6 = a2[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v62 = (char *)&v55 - v9;
  int64_t v85 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v8);
  int64_t v61 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta();
  unint64_t v76 = *(void (***)(char *, char *, uint64_t))(v79 - 8);
  MEMORY[0x1F4188790](v79);
  long long v12 = (char *)&v55 - v11;
  uint64_t v66 = v6;
  uint64_t v67 = v5;
  uint64_t v13 = type metadata accessor for CRDTDictionaryElement.Delta();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v87 = (char *)&v55 - v16;
  uint64_t v80 = a2;
  uint64_t v17 = a2[2];
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v86 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v83 = sub_1C4497B38();
  uint64_t v21 = MEMORY[0x1F4188790](v83);
  uint64_t v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v55 - v25;
  uint64_t v27 = *(void *)(v3 + 40);
  long long v28 = v12;
  uint64_t v29 = *(void *)(v27 + 64);
  uint64_t v56 = v27 + 64;
  uint64_t v30 = 1 << *(unsigned char *)(v27 + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v32 = v31 & v29;
  uint64_t v68 = v14 + 16;
  uint64_t v69 = v18 + 16;
  uint64_t v81 = (void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v82 = TupleTypeMetadata2 - 8;
  uint64_t v77 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v78 = (void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v71 = v18;
  uint64_t v72 = v14;
  uint64_t v75 = (void (**)(char *, uint64_t))(v14 + 8);
  v76 += 2;
  uint64_t v74 = (uint64_t (**)(char *, uint64_t))(v18 + 8);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v59 = v7 + 8;
  uint64_t v58 = (void (**)(char *, char *, uint64_t))(v85 + 32);
  int64_t v57 = v85 + 8;
  int64_t v64 = (unint64_t)(v30 + 63) >> 6;
  int64_t v55 = v64 - 1;
  uint64_t v73 = v27;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v34 = 0;
  uint64_t v65 = v28;
  uint64_t v70 = v13;
  uint64_t v35 = v87;
  while (1)
  {
    if (v32)
    {
      unint64_t v41 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      int64_t v85 = v34;
      unint64_t v42 = v41 | (v34 << 6);
      goto LABEL_9;
    }
    int64_t v46 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v46 >= v64)
    {
      int64_t v85 = v34;
LABEL_15:
      unint64_t v32 = 0;
      uint64_t v45 = 1;
      goto LABEL_16;
    }
    unint64_t v47 = *(void *)(v56 + 8 * v46);
    if (v47) {
      goto LABEL_13;
    }
    int64_t v53 = v34 + 2;
    if (v34 + 2 < v64) {
      break;
    }
    unint64_t v32 = 0;
    uint64_t v45 = 1;
    int64_t v85 = v34 + 1;
LABEL_16:
    uint64_t v48 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v23, v45, 1, TupleTypeMetadata2);
    (*v81)(v26, v23, v83);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v26, 1, TupleTypeMetadata2) == 1) {
      return swift_release();
    }
    uint64_t v49 = &v26[*(int *)(TupleTypeMetadata2 + 48)];
    (*v78)(v86, v26, v17);
    (*v77)(v35, v49, v13);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v80[4] + 8) + 48))(v84, v17);
    (*v76)(v28, v35, v79);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      uint64_t v36 = v61;
      uint64_t v37 = v28;
      uint64_t v38 = v66;
      (*v58)(v61, v37, v66);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 + 16) + 48))(v84, v38);
      uint64_t v39 = &v88;
LABEL_5:
      uint64_t v40 = v38;
      long long v28 = v65;
      (*(void (**)(char *, uint64_t))*(v39 - 32))(v36, v40);
      goto LABEL_6;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v36 = v62;
      uint64_t v51 = v28;
      uint64_t v38 = AssociatedTypeWitness;
      (*v60)(v62, v51, AssociatedTypeWitness);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v84, v38, AssociatedConformanceWitness);
      uint64_t v39 = &v89;
      goto LABEL_5;
    }
LABEL_6:
    (*v75)(v87, v13);
    uint64_t result = (*v74)(v86, v17);
    int64_t v34 = v85;
  }
  unint64_t v47 = *(void *)(v56 + 8 * v53);
  if (v47)
  {
    int64_t v46 = v34 + 2;
    goto LABEL_13;
  }
  int64_t v54 = v34 + 3;
  if (v54 >= v64)
  {
    int64_t v85 = v53;
    goto LABEL_15;
  }
  unint64_t v47 = *(void *)(v56 + 8 * v54);
  if (v47)
  {
    int64_t v46 = v54;
LABEL_13:
    unint64_t v32 = (v47 - 1) & v47;
    unint64_t v42 = __clz(__rbit64(v47)) + (v46 << 6);
    int64_t v85 = v46;
LABEL_9:
    uint64_t v43 = v73;
    (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v23, *(void *)(v73 + 48) + *(void *)(v71 + 72) * v42, v17);
    unint64_t v44 = *(void *)(v43 + 56) + *(void *)(v72 + 72) * v42;
    uint64_t v13 = v70;
    (*(void (**)(char *, unint64_t, uint64_t))(v72 + 16))(&v23[*(int *)(TupleTypeMetadata2 + 48)], v44, v70);
    uint64_t v45 = 0;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v46 = v54 + 1;
    if (__OFADD__(v54, 1)) {
      break;
    }
    if (v46 >= v64)
    {
      unint64_t v32 = 0;
      uint64_t v45 = 1;
      int64_t v85 = v55;
      goto LABEL_16;
    }
    unint64_t v47 = *(void *)(v56 + 8 * v46);
    ++v54;
    if (v47) {
      goto LABEL_13;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

void CRDTDictionary.Partial.merge(delta:)()
{
}

void CRDTDictionary.Partial.canMerge(delta:)()
{
}

void sub_1C448D85C()
{
}

void sub_1C448D864()
{
}

double sub_1C448D8B8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  return CRDTDictionary.Partial.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a3);
}

uint64_t sub_1C448D8E0(uint64_t a1)
{
  return CRDTDictionary.Partial.encode(to:)(a1);
}

BOOL sub_1C448D8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a2;
  uint64_t v11 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = *(void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v16 + 40);
  swift_bridgeObjectRetain();
  MEMORY[0x1C877FC90](a1, v17, a4, v11, a7);
  swift_bridgeObjectRelease();
  uint64_t v18 = type metadata accessor for CRDTDictionaryElement.Delta();
  char v19 = sub_1C44833E4((uint64_t)v15, v18);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return (v19 & 1) == 0;
}

uint64_t type metadata accessor for CRDTDictionaryElement()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C448DA88()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t sub_1C448DAB4@<X0>(void *a1@<X8>)
{
  CRDTDictionary.makeIterator()(a1);
  return swift_release();
}

uint64_t sub_1C448DAE0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1C448DB34()
{
  swift_getWitnessTable();
  uint64_t v0 = sub_1C3F54C8C();
  swift_release();
  return v0;
}

uint64_t static CRDTDictionary.Index.< infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1C448DC58(a1, a2, a3, a4, a5, a6, a7, MEMORY[0x1E4FBAE48]);
}

uint64_t CRDTDictionary.Index.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C4158F54(v1, v2, v3);
  type metadata accessor for CRDTDictionaryElement();
  sub_1C4496F58();
  return sub_1C3F882B0(v1, v2, v3);
}

uint64_t static CRDTDictionary.Index.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1C448DC58(a1, a2, a3, a4, a5, a6, a7, MEMORY[0x1E4FBAE50]);
}

uint64_t sub_1C448DC58(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = *((unsigned __int8 *)a1 + 16);
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  uint64_t v16 = *((unsigned __int8 *)a2 + 16);
  uint64_t v17 = type metadata accessor for CRDTDictionaryElement();
  return a8(v11, v12, v13, v14, v15, v16, a3, v17, a6) & 1;
}

uint64_t CRDTDictionary.Index.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t sub_1C448DD54(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return static CRDTDictionary.Index.< infix(_:_:)(a1, a2, a3[2], a3[3], a5, a3[5], a3[6]);
}

uint64_t sub_1C448DD6C()
{
  return sub_1C4498628();
}

uint64_t sub_1C448DDB0(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return static CRDTDictionary.Index.== infix(_:_:)(a1, a2, a3[2], a3[3], a5, a3[5], a3[6]);
}

uint64_t CRDTDictionary.startIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C448DDF0(a1, MEMORY[0x1E4FBAE00], a2);
}

uint64_t CRDTDictionary.endIndex.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C448DDF0(a1, MEMORY[0x1E4FBAE98], a2);
}

uint64_t sub_1C448DDF0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = a2(v9, v6, v7, v8);
  uint64_t v12 = v11;
  LOBYTE(v6) = v13;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v12;
  *(unsigned char *)(a3 + 16) = v6 & 1;
  return result;
}

uint64_t CRDTDictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a2;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(a4 + 24);
  uint64_t v32 = a1;
  uint64_t v33 = v5;
  uint64_t v7 = type metadata accessor for CRDTDictionaryElement();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = TupleTypeMetadata2 - 8;
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v31 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v28 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v28 - v15;
  LODWORD(v30) = *(unsigned __int8 *)(a3 + 16);
  uint64_t v17 = (char *)&v28 + *(int *)(v9 + 56) - v15;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v18 = v17;
  uint64_t v29 = v17;
  sub_1C4497058();
  swift_bridgeObjectRelease();
  uint64_t v30 = &v14[*(int *)(v9 + 56)];
  char v19 = v30;
  uint64_t v20 = *(void *)(v6 - 8);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v14, v16, v6);
  uint64_t v21 = *(void *)(v7 - 8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v19, v18, v7);
  uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 32);
  v22(v32, v14, v6);
  uint64_t v23 = *(int *)(v9 + 56);
  uint64_t v24 = v31;
  uint64_t v25 = &v31[v23];
  v22((uint64_t)v31, v16, v6);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v29, v7);
  (*(void (**)(uint64_t, char *))(*(void *)(v33 - 8) + 16))(v34, v25);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v25, v7);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v6);
  return ((uint64_t (*)(char *, uint64_t))v26)(v30, v7);
}

uint64_t CRDTDictionary.index(after:)@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  type metadata accessor for CRDTDictionaryElement();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C4496F78();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  return result;
}

uint64_t CRDTDictionary.count.getter()
{
  swift_beginAccess();
  type metadata accessor for CRDTDictionaryElement();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C4496F68();
  swift_bridgeObjectRelease();
  return v0;
}

void (*sub_1C448E308(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  char v6 = (uint64_t *)malloc(0x40uLL);
  *a1 = v6;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6[4] = TupleTypeMetadata2;
  uint64_t v10 = *(void *)(TupleTypeMetadata2 - 8);
  v6[5] = v10;
  uint64_t v11 = (char *)malloc(*(void *)(v10 + 64));
  v6[6] = (uint64_t)v11;
  uint64_t v12 = sub_1C448E474(v6, a2, a3);
  uint64_t v14 = v13;
  v6[7] = (uint64_t)v12;
  (*(void (**)(char *))(*(void *)(v8 - 8) + 16))(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], v14, v7);
  return sub_1C415551C;
}

void (*sub_1C448E474(uint64_t *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v7 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v7;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  CRDTDictionary.subscript.getter((uint64_t)v8, (uint64_t)v8 + *(int *)(TupleTypeMetadata2 + 48), a2, a3);
  return sub_1C4108148;
}

double sub_1C448E55C(uint64_t a1)
{
  CRDTDictionary.index(after:)((uint64_t)&v4);
  sub_1C3F882B0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  char v2 = v5;
  double result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(unsigned char *)(a1 + 16) = v2;
  return result;
}

uint64_t sub_1C448E5A8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v67 = a8;
  uint64_t v66 = a5;
  uint64_t v63 = a4;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v75 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for Proto_Version(0);
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v68 = (uint64_t *)((char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v17 - 8);
  char v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C4496678();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  uint64_t v73 = a1;
  uint64_t v71 = v24;
  uint64_t v25 = *(uint64_t *)((char *)a1 + v24);
  swift_beginAccess();
  uint64_t v70 = a2;
  uint64_t v26 = *(void *)(a2 + 24);
  unint64_t v27 = *(void *)(v26 + 16);
  if (v27 && (unint64_t v28 = *(void *)(v25 + 16), v28 < v27))
  {
    unint64_t v62 = a3;
    uint64_t v64 = a6;
    uint64_t v65 = a7;
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v23, v26+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v28, v20);
    type metadata accessor for ReplicaState();
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v29 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
    uint64_t v31 = type metadata accessor for Replica();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
    v32(v30, 1, 1, v31);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v29 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v23, v20);
    *(void *)(v29 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
    *(void *)(v29 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
    v32((uint64_t)v19, 1, 1, v31);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v19, v30, &qword_1EBBC0FA0);
    swift_endAccess();
    uint64_t v33 = *(uint64_t *)((char *)v73 + v71);
    uint64_t v34 = v33 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    uint64_t v35 = v34;
    uint64_t v36 = v75;
    sub_1C3F970C4(v35, v75, &qword_1EBBC0578);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v36, 1, v74) == 1)
    {
      uint64_t v37 = MEMORY[0x1E4FBC860];
      uint64_t v38 = v68;
      *uint64_t v68 = MEMORY[0x1E4FBC860];
      v38[1] = v37;
      sub_1C4496888();
      sub_1C3F962E0(v36, &qword_1EBBC0578);
    }
    else
    {
      uint64_t v38 = v68;
      sub_1C3F72140(v36, (uint64_t)v68, type metadata accessor for Proto_Version);
    }
    uint64_t v41 = v69;
    uint64_t v42 = v70;
    swift_retain();
    sub_1C3F8F9D0(v38, v42, &v76);
    uint64_t v43 = v65;
    uint64_t v44 = v64;
    if (v41)
    {
      return swift_release();
    }
    else
    {
      uint64_t v74 = v76;
      uint64_t v75 = v29;
      uint64_t v45 = *((void *)&v76 + 1);
      int64_t v46 = (void *)(v33
                     + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
      swift_beginAccess();
      uint64_t v73 = &v61;
      *(void *)&long long v76 = *v46;
      MEMORY[0x1F4188790](v76);
      *(&v61 - 6) = v66;
      *(&v61 - 5) = v44;
      uint64_t v47 = v67;
      *(&v61 - 4) = v43;
      *(&v61 - 3) = v47;
      *(&v61 - 2) = a9;
      *(&v61 - 1) = v42;
      swift_bridgeObjectRetain();
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC760);
      uint64_t v49 = type metadata accessor for CRDTDictionaryElement();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
      unint64_t v52 = sub_1C4494B18();
      uint64_t v53 = sub_1C41275E0((void (*)(char *, char *))sub_1C4494AF0, (uint64_t)(&v61 - 8), v48, TupleTypeMetadata2, v51, v52, MEMORY[0x1E4FBC0F0], (uint64_t)&v80);
      uint64_t v72 = v45;
      uint64_t v54 = swift_bridgeObjectRelease();
      if (v62) {
        uint64_t v54 = v62(v53);
      }
      uint64_t v73 = &v61;
      *(void *)&long long v76 = v53;
      MEMORY[0x1F4188790](v54);
      uint64_t v55 = v66;
      uint64_t v56 = v64;
      *(&v61 - 6) = v66;
      *(&v61 - 5) = v56;
      uint64_t v57 = v65;
      uint64_t v58 = v67;
      *(&v61 - 4) = v65;
      *(&v61 - 3) = v58;
      *(&v61 - 2) = a9;
      sub_1C4497528();
      swift_getWitnessTable();
      uint64_t v59 = sub_1C4497018();
      uint64_t WitnessTable = swift_getWitnessTable();
      *(void *)&long long v76 = v55;
      *((void *)&v76 + 1) = v49;
      uint64_t v77 = v57;
      uint64_t v78 = v58;
      uint64_t v79 = WitnessTable;
      type metadata accessor for CRSetRef();
      *(void *)&long long v76 = v74;
      *((void *)&v76 + 1) = v72;
      if (qword_1EBBC10F0 != -1) {
        swift_once();
      }
      swift_retain();
      sub_1C4497A58();
      swift_release();
      return sub_1C43875B0(v75, &v76, v59, v80);
    }
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(_OWORD *)uint64_t v39 = xmmword_1C44A0890;
    *(unsigned char *)(v39 + 16) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C448EDD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t *a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v78 = a7;
  uint64_t v79 = a5;
  uint64_t v64 = a8;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v68 = (uint64_t)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for Proto_Version(0);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v67 = (char **)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = a6;
  uint64_t v63 = type metadata accessor for CRDTDictionaryElement();
  uint64_t v62 = *(void *)(v63 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v63);
  uint64_t v61 = (char *)&v61 - v17;
  uint64_t v75 = a4;
  uint64_t v69 = *(void *)(a4 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v70 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  long long v76 = (char *)&v61 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Proto_CRDT(0);
  uint64_t v72 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v73 = (uint64_t)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = a3;
  uint64_t v71 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v83 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)&v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Proto_Value(0);
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v61 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_Set.Element(0) + 20));
  uint64_t v35 = v77 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v35, (uint64_t)v30, &qword_1EBBC0540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_1C4496888();
    uint64_t v36 = *(int *)(v31 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)&v34[v36] = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0((uint64_t)v30, &qword_1EBBC0540);
  }
  else
  {
    sub_1C3F72140((uint64_t)v30, (uint64_t)v34, type metadata accessor for Proto_Value);
  }
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3F974B0((uint64_t)v34, a2);
  swift_release();
  uint64_t v37 = *(void (**)(uint64_t))(*(void *)(*(void *)(v79 + 8) + 8) + 8);
  uint64_t v38 = swift_retain();
  uint64_t v39 = v80;
  v37(v38);
  if (v39)
  {
    uint64_t result = swift_release();
    *uint64_t v78 = v39;
  }
  else
  {
    uint64_t v40 = v77 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
    swift_beginAccess();
    sub_1C3F970C4(v40, (uint64_t)v23, &qword_1EBBC04F8);
    int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48))(v23, 1, v24);
    uint64_t v80 = a2;
    if (v41 == 1)
    {
      uint64_t v42 = v73;
      sub_1C4496888();
      uint64_t v43 = *(int *)(v24 + 20);
      if (qword_1EBBC0668 != -1) {
        swift_once();
      }
      *(void *)(v42 + v43) = qword_1EBBC0660;
      swift_retain();
      sub_1C3F962E0((uint64_t)v23, &qword_1EBBC04F8);
    }
    else
    {
      uint64_t v42 = v73;
      sub_1C3F72140((uint64_t)v23, v73, type metadata accessor for Proto_CRDT);
    }
    uint64_t v44 = v75;
    swift_allocObject();
    uint64_t v45 = v80;
    swift_retain();
    sub_1C3FB9A38(v42, v45);
    swift_release();
    uint64_t v46 = *(void *)(*(void *)(v74 + 16) + 8);
    uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 8);
    uint64_t v48 = swift_retain();
    uint64_t v49 = v76;
    v47(v48, v44, v46);
    uint64_t v51 = v69;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v70, v49, v44);
    uint64_t v52 = v77
        + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
    swift_beginAccess();
    uint64_t v53 = v52;
    uint64_t v54 = v68;
    sub_1C3F970C4(v53, v68, &qword_1EBBC0578);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v54, 1, v66) == 1)
    {
      uint64_t v55 = MEMORY[0x1E4FBC860];
      uint64_t v56 = v67;
      *uint64_t v67 = MEMORY[0x1E4FBC860];
      v56[1] = v55;
      sub_1C4496888();
      sub_1C3F962E0(v54, &qword_1EBBC0578);
    }
    else
    {
      uint64_t v56 = v67;
      sub_1C3F72140(v54, (uint64_t)v67, type metadata accessor for Proto_Version);
    }
    uint64_t v57 = v80;
    swift_retain();
    sub_1C3F8F9D0(v56, v57, &v82);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v76, v44);
    uint64_t v58 = v61;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v61, v70, v44);
    uint64_t v59 = v63;
    *(_OWORD *)&v58[*(int *)(v63 + 36)] = v82;
    uint64_t v60 = v64 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(void))(v71 + 32))();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v62 + 32))(v60, v58, v59);
  }
  return result;
}

uint64_t sub_1C448F7B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v88 = a6;
  uint64_t v77 = a4;
  uint64_t v83 = a3;
  uint64_t v86 = sub_1C4497B38();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v86);
  uint64_t v84 = (char *)&v77 - v12;
  uint64_t v90 = a5;
  uint64_t v87 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v78 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v82 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v77 - v17;
  uint64_t v81 = type metadata accessor for Proto_Version(0);
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v79 = (void **)((char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1C4496678();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496888();
  uint64_t v24 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  if (qword_1EBBC01E8 != -1) {
    swift_once();
  }
  *(void *)(a7 + v24) = qword_1EBBC01E0;
  int64_t v91 = a1;
  uint64_t v25 = a1[2] + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v25, v20);
  swift_retain();
  uint64_t v92 = (void *)a2;
  uint64_t v26 = sub_1C3FA10C4((uint64_t)v23);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)(a7 + v24) = sub_1C3F7B768(v27);
    swift_release();
  }
  uint64_t v28 = *(void *)(a7 + v24);
  swift_beginAccess();
  *(void *)(v28 + 16) = v26;
  uint64_t v29 = v91;
  swift_beginAccess();
  uint64_t v30 = v29[4];
  v94[0] = v29[3];
  v94[1] = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = v79;
  sub_1C3F9FF10((uint64_t)v92, v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = v87;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    uint64_t v34 = swift_retain();
    *(void *)(a7 + v24) = sub_1C3F7B768(v34);
    swift_release();
  }
  uint64_t v35 = *(void *)(a7 + v24);
  sub_1C3F72140((uint64_t)v31, (uint64_t)v18, type metadata accessor for Proto_Version);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v18, 0, 1, v81);
  uint64_t v36 = v82;
  sub_1C3F961BC((uint64_t)v18, v82, &qword_1EBBC0578);
  uint64_t v37 = v35 + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v36, v37, &qword_1EBBC0578);
  swift_endAccess();
  swift_release();
  uint64_t v38 = v85;
  uint64_t v39 = v84;
  uint64_t v40 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v83, v86);
  uint64_t v41 = v90;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v39, 1, v90) == 1)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
    uint64_t v42 = v91;
    uint64_t v43 = swift_beginAccess();
    uint64_t v93 = v42[5];
    uint64_t v44 = MEMORY[0x1F4188790](v43);
    uint64_t v45 = v77;
    uint64_t v47 = (void *)v77[2];
    uint64_t v46 = (void *)v77[3];
    *(&v77 - 8) = v47;
    *(&v77 - 7) = v46;
    uint64_t v48 = (void *)v45[4];
    uint64_t v49 = (void *)v45[5];
    *(&v77 - 6) = (void *)v41;
    *(&v77 - 5) = v48;
    uint64_t v50 = (void *)v45[6];
    *(&v77 - 4) = v49;
    *(&v77 - 3) = v50;
    uint64_t v51 = (uint64_t)v92;
    *(&v77 - 2) = (void *)v88;
    *(&v77 - 1) = (void *)v51;
    MEMORY[0x1F4188790](v44);
    *(&v77 - 10) = v47;
    *(&v77 - 9) = v52;
    *(&v77 - 8) = (void *)v41;
    *(&v77 - 7) = v53;
    *(&v77 - 6) = v49;
    *(&v77 - 5) = v54;
    *(&v77 - 4) = v55;
    *(&v77 - 3) = sub_1C44949C8;
    *(&v77 - 2) = v56;
    type metadata accessor for CRDTDictionaryElement();
    uint64_t v57 = sub_1C4497008();
    uint64_t v58 = type metadata accessor for Proto_Set.Element(0);
    swift_bridgeObjectRetain();
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v61 = v89;
    uint64_t v62 = sub_1C41275E0((void (*)(char *, char *))sub_1C44949FC, (uint64_t)(&v77 - 12), v57, v58, v59, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v95);
    swift_bridgeObjectRelease();
    if (v61)
    {
      return sub_1C3F9253C(a7, type metadata accessor for Proto_Set);
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set._StorageClass(0);
        swift_allocObject();
        uint64_t v72 = swift_retain();
        *(void *)(a7 + v24) = sub_1C3F7B768(v72);
        swift_release();
      }
      uint64_t v73 = (uint64_t *)(*(void *)(a7 + v24)
                      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
      swift_beginAccess();
      uint64_t *v73 = v62;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v64 = v78;
    uint64_t v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v33 + 32))(v78, v39, v41);
    MEMORY[0x1F4188790](v65);
    uint64_t v66 = v88;
    *(&v77 - 4) = (void *)v41;
    *(&v77 - 3) = (void *)v66;
    uint64_t v67 = v91;
    *(&v77 - 2) = v92;
    *(&v77 - 1) = v67;
    uint64_t v68 = (char *)type metadata accessor for Proto_Set.Element(0);
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
    uint64_t v70 = v89;
    uint64_t v71 = sub_1C3F7182C((void (*)(char *, char *))sub_1C4494A3C, (uint64_t)(&v77 - 6), v41, v68, v69, v66, MEMORY[0x1E4FBC0F0], (uint64_t)v94);
    if (v70)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v64, v41);
      return sub_1C3F9253C(a7, type metadata accessor for Proto_Set);
    }
    else
    {
      uint64_t v74 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set._StorageClass(0);
        swift_allocObject();
        uint64_t v75 = swift_retain();
        *(void *)(a7 + v24) = sub_1C3F7B768(v75);
        swift_release();
      }
      long long v76 = (uint64_t *)(*(void *)(a7 + v24)
                      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
      swift_beginAccess();
      *long long v76 = v74;
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v64, v41);
    }
  }
}

uint64_t sub_1C4490140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v79 = a2;
  uint64_t v83 = a7;
  uint64_t v84 = a8;
  uint64_t v88 = a5;
  uint64_t v80 = a4;
  uint64_t v77 = a1;
  uint64_t v81 = a11;
  uint64_t v82 = a6;
  uint64_t v85 = a10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v75 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v74 = (uint64_t)&v66 - v16;
  uint64_t v17 = type metadata accessor for Proto_Version(0);
  uint64_t v72 = *(void *)(v17 - 8);
  uint64_t v73 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v71 = (uint64_t *)((char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v70 = (uint64_t)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v69 = (uint64_t)&v66 - v22;
  uint64_t v68 = type metadata accessor for Proto_Value(0);
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  long long v76 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v66 - v28;
  uint64_t v30 = type metadata accessor for Proto_CRDT(0);
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496888();
  uint64_t v34 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  if (qword_1EBBBF1E0 != -1) {
    swift_once();
  }
  uint64_t v35 = qword_1EBBBF1D8;
  *(void *)(a9 + v34) = qword_1EBBBF1D8;
  MEMORY[0x1F4188790](v35);
  uint64_t v36 = v88;
  *(&v66 - 10) = v80;
  *(&v66 - 9) = v36;
  uint64_t v37 = v83;
  *(&v66 - 8) = v82;
  *(&v66 - 7) = v37;
  uint64_t v38 = v85;
  *(&v66 - 6) = v84;
  *(&v66 - 5) = v38;
  uint64_t v39 = v79;
  *(&v66 - 4) = v81;
  *(&v66 - 3) = v39;
  *(&v66 - 2) = a3;
  swift_retain();
  uint64_t v40 = v78;
  sub_1C3F5585C((void (*)(uint64_t))sub_1C4494A60, (uint64_t)v33);
  uint64_t v78 = v40;
  if (v40) {
    return sub_1C3F9253C(a9, type metadata accessor for Proto_Set.Element);
  }
  uint64_t v66 = a3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set.Element._StorageClass(0);
    swift_allocObject();
    uint64_t v41 = swift_retain();
    *(void *)(a9 + v34) = sub_1C3F97F64(v41);
    swift_release();
  }
  uint64_t v42 = *(void *)(a9 + v34);
  sub_1C3F72140((uint64_t)v33, (uint64_t)v29, type metadata accessor for Proto_CRDT);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
  sub_1C3F961BC((uint64_t)v29, (uint64_t)v27, &qword_1EBBC04F8);
  uint64_t v43 = v42 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v27, v43, &qword_1EBBC04F8);
  swift_endAccess();
  uint64_t v44 = swift_release();
  MEMORY[0x1F4188790](v44);
  uint64_t v45 = v88;
  *(&v66 - 10) = v80;
  *(&v66 - 9) = v45;
  uint64_t v46 = v83;
  *(&v66 - 8) = v82;
  *(&v66 - 7) = v46;
  uint64_t v47 = v85;
  *(&v66 - 6) = v84;
  *(&v66 - 5) = v47;
  uint64_t v49 = (uint64_t)v76;
  uint64_t v48 = v77;
  *(&v66 - 4) = v81;
  *(&v66 - 3) = v48;
  *(&v66 - 2) = v66;
  uint64_t v50 = v78;
  sub_1C3F6DC00((void (*)(uint64_t))sub_1C4494AA8, v49);
  if (v50) {
    return sub_1C3F9253C(a9, type metadata accessor for Proto_Set.Element);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set.Element._StorageClass(0);
    swift_allocObject();
    uint64_t v52 = swift_retain();
    *(void *)(a9 + v34) = sub_1C3F97F64(v52);
    swift_release();
  }
  uint64_t v53 = *(void *)(a9 + v34);
  uint64_t v54 = v49;
  uint64_t v55 = v69;
  sub_1C3F72140(v54, v69, type metadata accessor for Proto_Value);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v55, 0, 1, v68);
  uint64_t v56 = v70;
  sub_1C3F961BC(v55, v70, &qword_1EBBC0540);
  uint64_t v57 = v53 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v56, v57, &qword_1EBBC0540);
  swift_endAccess();
  swift_release();
  uint64_t v58 = (uint64_t *)(v79 + *(int *)(type metadata accessor for CRDTDictionaryElement() + 36));
  uint64_t v59 = v58[1];
  uint64_t v86 = *v58;
  uint64_t v87 = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v60 = v71;
  sub_1C3F9FF10(v66, v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set.Element._StorageClass(0);
    swift_allocObject();
    uint64_t v61 = swift_retain();
    *(void *)(a9 + v34) = sub_1C3F97F64(v61);
    swift_release();
  }
  uint64_t v62 = *(void *)(a9 + v34);
  uint64_t v63 = v74;
  sub_1C3F72140((uint64_t)v60, v74, type metadata accessor for Proto_Version);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v63, 0, 1, v73);
  uint64_t v64 = v75;
  sub_1C3F961BC(v63, v75, &qword_1EBBC0578);
  uint64_t v65 = v62 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__addedBy;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v64, v65, &qword_1EBBC0578);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C4490934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v24 = a5;
  uint64_t v25 = a2;
  uint64_t v26 = a4;
  uint64_t v10 = *a3;
  uint64_t v11 = *a3;
  uint64_t v12 = *(void *)(*a3 + 88);
  uint64_t v13 = sub_1C4497B38();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v22 - v14;
  swift_beginAccess();
  uint64_t v16 = a3[5];
  uint64_t v17 = *(void *)(v10 + 80);
  uint64_t v18 = *(void *)(v10 + 104);
  swift_bridgeObjectRetain();
  MEMORY[0x1C877FC90](a1, v16, v17, v12, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v12 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v12);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = v27;
    sub_1C4490140(a1, (uint64_t)v15, v25, v17, *(void *)(v12 + 16), v26, *(void *)(v11 + 96), v18, a7, *(void *)(v12 + 24), v24);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v15, v12);
    if (v21) {
      *uint64_t v23 = v21;
    }
  }
  return result;
}

uint64_t sub_1C4490B3C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  type metadata accessor for CRDTDictionaryElement();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  if (v11) {
    *a11 = v11;
  }
  return result;
}

uint64_t CRDTDictionary<>.encode(to:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  v37[0] = *v4;
  uint64_t v8 = a2[3];
  uint64_t v28 = a2[2];
  uint64_t v29 = v8;
  uint64_t v9 = a2[5];
  uint64_t v30 = a2[4];
  uint64_t v31 = a3;
  uint64_t v10 = a2[6];
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  uint64_t v34 = a4;
  uint64_t v18 = v28;
  uint64_t v19 = v8;
  uint64_t v20 = v30;
  uint64_t v21 = a3;
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  uint64_t v24 = a4;
  uint64_t v25 = sub_1C4158F60;
  uint64_t v26 = &v27;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  v37[0] = sub_1C41275E0((void (*)(char *, char *))sub_1C44918B0, (uint64_t)v17, (uint64_t)a2, TupleTypeMetadata2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v13);
  sub_1C4497528();
  swift_getWitnessTable();
  uint64_t v14 = sub_1C4496F38();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C4498698();
  v37[7] = v14;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v37[3]);
  sub_1C4497008();
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  swift_getWitnessTable();
  sub_1C4498348();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1C4490DFC(void *a1, void *a2, uint64_t a3)
{
  return CRDTDictionary<>.encode(to:)(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16));
}

uint64_t sub_1C4490E1C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1C4497978();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_1C44970D8();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_1C44970D8();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1C4491028(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1C4497158();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v16 - v11;
  char v13 = sub_1C44970D8();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  if ((v13 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v14 = sub_1C44970D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  if ((v14 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1C4491280()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1C449128C()
{
  type metadata accessor for CRDTDictionaryRef();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 16) + 288);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  uint64_t v4 = swift_allocObject();
  sub_1C4496668();
  *(void *)(v4 + 16) = v3;
  return v4;
}

uint64_t sub_1C4491390(uint64_t a1)
{
  swift_retain();
  sub_1C4487380();
  *(void *)(*(void *)v1 + 16) = a1;
  return swift_release();
}

void sub_1C44913E4()
{
}

uint64_t sub_1C4491434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a1;
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = sub_1C4497B38();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v26 = a3;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](a3);
  char v27 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v26 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v26 - v18;
  sub_1C4487380();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v20(v19, a2, v11);
  uint64_t v21 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v10, v28, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v10, 0, 1, v4);
  sub_1C4487380();
  v20(v17, (uint64_t)v19, v11);
  uint64_t v22 = (uint64_t)v27;
  v20(v27, (uint64_t)v17, v11);
  uint64_t v23 = v29;
  sub_1C4484B98((uint64_t)v17, (uint64_t)v29);
  (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v23, v10, v31);
  sub_1C4484E2C(v23, v22);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v24)(v19, v11);
}

uint64_t sub_1C4491714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[3];
  uint64_t v7 = v2[6];
  uint64_t v6 = v2[7];
  uint64_t v8 = type metadata accessor for CRDTDictionaryElement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 + 16) + 64))(v6, v5);
}

uint64_t sub_1C44917C4(uint64_t a1)
{
  return sub_1C448C310(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for CRDTDictionaryElement.Delta()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_1C44917E4(uint64_t a1, uint64_t a2)
{
  return sub_1C448D8F8(a1, a2, v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C44917F4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 56);
  type metadata accessor for CRDTDictionaryElement.Delta();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

uint64_t sub_1C4491874(uint64_t a1)
{
  return sub_1C448C624(a1, *(void *)(v1 + 56), *(void *)(v1 + 16));
}

uint64_t type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C44918B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 72);
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a2, a2 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

_UNKNOWN **sub_1C4491954()
{
  return &protocol witness table for CRDTDictionary<A, B>.Partial;
}

uint64_t sub_1C4491960(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C449199C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C44919B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C44919D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C44919F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C4491A0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C4491A30()
{
  return 40;
}

__n128 sub_1C4491A3C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1C4491A50()
{
  uint64_t result = sub_1C4496678();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTDictionary.MutatingAction()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CRDTDictionary.ObservableDifference()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CRDTDictionary.Partial()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CRDTDictionary.Index()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C4491B50()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

void *sub_1C4491C3C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v9 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  size_t v10 = v7 + 1;
  uint64_t v11 = (*(unsigned char *)(v9 + 80) | *(unsigned char *)(v6 + 80));
  if (v11 <= 7 && v10 <= 0x18 && ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) == 0)
  {
    unsigned int v15 = a2[v7];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v17 = v7;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a2;
          goto LABEL_20;
        case 2:
          int v18 = *(unsigned __int16 *)a2;
          goto LABEL_20;
        case 3:
          int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_20;
        case 4:
          int v18 = *(_DWORD *)a2;
LABEL_20:
          int v19 = (v18 | (v16 << (8 * v7))) + 2;
          unsigned int v15 = v18 + 2;
          if (v7 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v7) = 1;
    }
    else if (v15)
    {
      memcpy(a1, a2, v10);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((unsigned char *)a1 + v7) = 0;
    }
  }
  else
  {
    uint64_t v14 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1C4491E5C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(v3 - 8);
  unint64_t v4 = *(void *)(v14 + 64);
  uint64_t result = swift_getAssociatedTypeWitness();
  unint64_t v6 = *(void *)(*(void *)(result - 8) + 64);
  if (v6 <= v4) {
    unint64_t v6 = v4;
  }
  unsigned int v7 = a1[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_12;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_12:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7)
  {
    if (v7 != 1) {
      return result;
    }
    uint64_t v12 = *(void *)(result - 8);
    uint64_t v3 = result;
  }
  else
  {
    uint64_t v12 = v14;
  }
  uint64_t v13 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v12 + 8);
  return v13(a1, v3);
}

unsigned char *sub_1C449201C(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v9 = a2[v7];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v7))) + 2;
        unsigned int v9 = v12 + 2;
        if (v7 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
    a1[v7] = 1;
  }
  else if (v9)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    a1[v7] = 0;
  }
  return a1;
}

unsigned __int8 *sub_1C44921F8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v10 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v11 = a1[v7];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v13 = v7;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a1;
        goto LABEL_13;
      case 2:
        int v14 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v14 = *(_DWORD *)a1;
LABEL_13:
        int v15 = (v14 | (v12 << (8 * v7))) + 2;
        unsigned int v11 = v14 + 2;
        if (v7 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (!v11)
  {
    uint64_t v16 = v6;
    uint64_t v17 = v5;
    goto LABEL_19;
  }
  if (v11 == 1)
  {
    uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v17 = AssociatedTypeWitness;
LABEL_19:
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v17);
  }
  unsigned int v18 = a2[v7];
  unsigned int v19 = v18 - 2;
  if (v18 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v20 = v7;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a2;
        goto LABEL_29;
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        goto LABEL_29;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_29;
      case 4:
        int v21 = *(_DWORD *)a2;
LABEL_29:
        int v22 = (v21 | (v19 << (8 * v7))) + 2;
        unsigned int v18 = v21 + 2;
        if (v7 < 4) {
          unsigned int v18 = v22;
        }
        break;
      default:
        break;
    }
  }
  if (v18 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(a1, a2, v9);
    a1[v7] = 1;
  }
  else if (v18)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    a1[v7] = 0;
  }
  return a1;
}

unsigned char *sub_1C44924A8(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v9 = a2[v7];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v7))) + 2;
        unsigned int v9 = v12 + 2;
        if (v7 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    a1[v7] = 1;
  }
  else if (v9)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    a1[v7] = 0;
  }
  return a1;
}

unsigned __int8 *sub_1C4492684(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v10 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v11 = a1[v7];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v13 = v7;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a1;
        goto LABEL_13;
      case 2:
        int v14 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v14 = *(_DWORD *)a1;
LABEL_13:
        int v15 = (v14 | (v12 << (8 * v7))) + 2;
        unsigned int v11 = v14 + 2;
        if (v7 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (!v11)
  {
    uint64_t v16 = v6;
    uint64_t v17 = v5;
    goto LABEL_19;
  }
  if (v11 == 1)
  {
    uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v17 = AssociatedTypeWitness;
LABEL_19:
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v17);
  }
  unsigned int v18 = a2[v7];
  unsigned int v19 = v18 - 2;
  if (v18 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v20 = v7;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a2;
        goto LABEL_29;
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        goto LABEL_29;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_29;
      case 4:
        int v21 = *(_DWORD *)a2;
LABEL_29:
        int v22 = (v21 | (v19 << (8 * v7))) + 2;
        unsigned int v18 = v21 + 2;
        if (v7 < 4) {
          unsigned int v18 = v22;
        }
        break;
      default:
        break;
    }
  }
  if (v18 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(a1, a2, v9);
    a1[v7] = 1;
  }
  else if (v18)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    a1[v7] = 0;
  }
  return a1;
}

uint64_t sub_1C4492934(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = v6;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_23;
  }
  unint64_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    unsigned int v12 = ((a2 + ~(-1 << v9) - 253) >> v9) + 1;
    if (HIWORD(v12))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v12 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v12 < 2)
    {
LABEL_23:
      unsigned int v14 = *((unsigned __int8 *)a1 + v7);
      if (v14 >= 3) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_23;
  }
LABEL_15:
  int v13 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v13 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v8 | v13) + 254;
}

void sub_1C4492AC0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 <= v7) {
    unint64_t v8 = v7;
  }
  size_t v9 = v8 + 1;
  if (a3 < 0xFE)
  {
    int v10 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << (8 * v9)) - 253) >> (8 * v9)) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v11 = a2 - 254;
    if (v9 < 4)
    {
      int v12 = (v11 >> (8 * v9)) + 1;
      if (v8 != -1)
      {
        int v14 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v9] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v9] = v12;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C4492CBCLL);
      case 4:
        *(_DWORD *)&a1[v9] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v9] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v8] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C4492CE4(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= v3) {
    unint64_t v4 = v3;
  }
  uint64_t result = a1[v4];
  if (result >= 2)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | ((result - 2) << (8 * v4))) + 2;
        unsigned int v9 = v7 + 2;
        if (v4 >= 4) {
          uint64_t result = v9;
        }
        else {
          uint64_t result = v8;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C4492DE0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  size_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 > v5) {
    size_t v5 = v6;
  }
  if (a2 > 1)
  {
    unsigned int v7 = a2 - 2;
    if (v5 < 4)
    {
      unsigned int v8 = v7 >> (8 * v5);
      int v9 = v7 & ~(-1 << (8 * v5));
      a1[v5] = v8 + 2;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v9;
        a1[2] = BYTE2(v9);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v9;
      }
      else
      {
        *a1 = v9;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v7;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_1C4492EEC()
{
  uint64_t result = type metadata accessor for CRDTDictionaryElement.Delta.ValueDelta();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1C4492F84(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v9 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  int v10 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80);
  if (((v7 & 0xFFFFFFFFFFFFFFF8) == 0 || (v7 & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFFFFFFFE8)
    && (v10 & 0x1000F8) == 0)
  {
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_17;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_17;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_17;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_17:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v7) = 1;
    }
    else if (v13)
    {
      memcpy(a1, a2, v7 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((unsigned char *)a1 + v7) = 0;
    }
    unsigned int v18 = (void *)(((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v19 = (void *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v18 = *v19;
    v18[1] = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v12 + (((v10 & 0xF8 | 7u) + 16) & ~(unint64_t)(v10 & 0xF8 | 7u)));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1C44931DC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v7 = a1[v5];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_12;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_12:
        int v11 = (v10 | (v8 << (8 * v5))) + 2;
        unsigned int v7 = v10 + 2;
        if (v5 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7)
  {
    if (v7 != 1) {
      goto LABEL_18;
    }
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v3 = AssociatedTypeWitness;
  }
  (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(a1, v3);
LABEL_18:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unsigned char *sub_1C4493394(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v9 = a2[v7];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v7))) + 2;
        unsigned int v9 = v12 + 2;
        if (v7 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
    a1[v7] = 1;
  }
  else if (v9)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    a1[v7] = 0;
  }
  unsigned int v14 = (void *)((unint64_t)&a1[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unsigned __int8 *sub_1C44935A0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 == a2) {
    goto LABEL_40;
  }
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v10 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v11 = a1[v7];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v13 = v7;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a1;
        if (v7 >= 4) {
          goto LABEL_19;
        }
        goto LABEL_14;
      case 2:
        int v14 = *(unsigned __int16 *)a1;
        if (v7 >= 4) {
          goto LABEL_19;
        }
        goto LABEL_14;
      case 3:
        int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_19;
      case 4:
        int v14 = *(_DWORD *)a1;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v11 = (v14 | (v12 << (8 * v7))) + 2;
          break;
        }
LABEL_19:
        unsigned int v11 = v14 + 2;
        if (!v11) {
          goto LABEL_20;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (!v11)
  {
LABEL_20:
    uint64_t v15 = v6;
    uint64_t v16 = v5;
    goto LABEL_21;
  }
LABEL_16:
  if (v11 == 1)
  {
    uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v16 = AssociatedTypeWitness;
LABEL_21:
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
  }
  unsigned int v17 = a2[v7];
  unsigned int v18 = v17 - 2;
  if (v17 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v19 = v7;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        if (v7 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_32;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_32;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_32;
        }
        goto LABEL_38;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_32:
          unsigned int v17 = (v20 | (v18 << (8 * v7))) + 2;
          break;
        }
LABEL_38:
        unsigned int v17 = v20 + 2;
        if (v17 == 1) {
          goto LABEL_39;
        }
        goto LABEL_34;
      default:
        break;
    }
  }
  if (v17 == 1)
  {
LABEL_39:
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(a1, a2, v9);
    a1[v7] = 1;
  }
  else
  {
LABEL_34:
    if (v17)
    {
      memcpy(a1, a2, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
LABEL_40:
  unint64_t v21 = *(void *)(v6 + 64);
  unint64_t v22 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v22 <= v21) {
    unint64_t v22 = v21;
  }
  unint64_t v23 = v22 + 8;
  uint64_t v24 = (void *)((unint64_t)&a1[v23] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)((unint64_t)&a2[v23] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_1C4493928(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v9 = a2[v7];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v7))) + 2;
        unsigned int v9 = v12 + 2;
        if (v7 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    a1[v7] = 1;
  }
  else if (v9)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    a1[v7] = 0;
  }
  *(_OWORD *)((unint64_t)&a1[v7 + 8] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned __int8 *sub_1C4493B20(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 == a2) {
    goto LABEL_40;
  }
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v10 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v11 = a1[v7];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v13 = v7;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a1;
        if (v7 >= 4) {
          goto LABEL_19;
        }
        goto LABEL_14;
      case 2:
        int v14 = *(unsigned __int16 *)a1;
        if (v7 >= 4) {
          goto LABEL_19;
        }
        goto LABEL_14;
      case 3:
        int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_19;
      case 4:
        int v14 = *(_DWORD *)a1;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v11 = (v14 | (v12 << (8 * v7))) + 2;
          break;
        }
LABEL_19:
        unsigned int v11 = v14 + 2;
        if (!v11) {
          goto LABEL_20;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (!v11)
  {
LABEL_20:
    uint64_t v15 = v6;
    uint64_t v16 = v5;
    goto LABEL_21;
  }
LABEL_16:
  if (v11 == 1)
  {
    uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v16 = AssociatedTypeWitness;
LABEL_21:
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
  }
  unsigned int v17 = a2[v7];
  unsigned int v18 = v17 - 2;
  if (v17 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v19 = v7;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        if (v7 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_32;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_32;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_32;
        }
        goto LABEL_38;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_32:
          unsigned int v17 = (v20 | (v18 << (8 * v7))) + 2;
          break;
        }
LABEL_38:
        unsigned int v17 = v20 + 2;
        if (v17 == 1) {
          goto LABEL_39;
        }
        goto LABEL_34;
      default:
        break;
    }
  }
  if (v17 == 1)
  {
LABEL_39:
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(a1, a2, v9);
    a1[v7] = 1;
  }
  else
  {
LABEL_34:
    if (v17)
    {
      memcpy(a1, a2, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
LABEL_40:
  unint64_t v21 = *(void *)(v6 + 64);
  unint64_t v22 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v22 <= v21) {
    unint64_t v22 = v21;
  }
  unint64_t v23 = v22 + 8;
  uint64_t v24 = (void *)((unint64_t)&a1[v23] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)((unint64_t)&a2[v23] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  swift_bridgeObjectRelease();
  v24[1] = v25[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C4493E98(_DWORD *a1, int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= v5) {
    unint64_t v6 = v5;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_5;
  }
  unint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v10 = v9 & 0xFFFFFFF8;
  unsigned int v11 = a2 - 2147483646;
  if ((v9 & 0xFFFFFFF8) != 0) {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v13 = 1;
  }
  else {
    int v13 = v12;
  }
  if (v13 == 4)
  {
    int v14 = *(_DWORD *)((char *)a1 + v9);
    if (!v14) {
      goto LABEL_5;
    }
  }
  else if (v13 == 2)
  {
    int v14 = *(unsigned __int16 *)((char *)a1 + v9);
    if (!v14) {
      goto LABEL_5;
    }
  }
  else
  {
    int v14 = *((unsigned __int8 *)a1 + v9);
    if (!v14)
    {
LABEL_5:
      unint64_t v7 = *(void *)(((unint64_t)a1 + v6 + 8) & 0xFFFFFFFFFFFFFFF8);
      if (v7 >= 0xFFFFFFFF) {
        LODWORD(v7) = -1;
      }
      return (v7 + 1);
    }
  }
  int v15 = v14 - 1;
  if (v10)
  {
    int v15 = 0;
    LODWORD(v10) = *a1;
  }
  return (v10 | v15) ^ 0x80000000;
}

void sub_1C4493FCC(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 <= v7) {
    unint64_t v8 = v7;
  }
  size_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (a3 < 0)
  {
    unsigned int v11 = a3 - 2147483646;
    if ((v8 & 0xFFFFFFF8) != 0xFFFFFFE8) {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v10 = 1;
    }
    else {
      int v10 = v12;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v10 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_5:
      switch(v10)
      {
        case 1:
          *((unsigned char *)a1 + v9) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)((char *)a1 + v9) = 0;
          goto LABEL_25;
        case 3:
          goto LABEL_32;
        case 4:
          *(unsigned int *)((char *)a1 + v9) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        default:
LABEL_25:
          if (a2) {
LABEL_26:
          }
            *(void *)(((unint64_t)a1 + v8 + 8) & 0xFFFFFFFFFFFFFFF8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if ((v8 & 0xFFFFFFF8) == 0xFFFFFFE8) {
    int v13 = a2 - 0x7FFFFFFF;
  }
  else {
    int v13 = 1;
  }
  if ((v8 & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    bzero(a1, v9);
    *a1 = a2 ^ 0x80000000;
  }
  switch(v10)
  {
    case 1:
      *((unsigned char *)a1 + v9) = v13;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v9) = v13;
      break;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x1C4494158);
    case 4:
      *(unsigned int *)((char *)a1 + v9) = v13;
      break;
    default:
      return;
  }
}

uint64_t sub_1C4494180()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C4494218(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    int v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *int v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C4494324(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C449439C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C449442C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C44944D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C449454C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C44945E0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C449472CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C4494740(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C4494920);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unsigned int v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *unsigned int v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1C4494948()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C4494964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Set(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C44949C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C4490140(a1, a2, v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], a3, v3[7], v3[8]);
}

uint64_t sub_1C44949FC(uint64_t a1, void *a2)
{
  return sub_1C4490B3C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2);
}

uint64_t sub_1C4494A3C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C4490934(a1, *(void *)(v3 + 32), *(void **)(v3 + 40), *(void *)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

uint64_t sub_1C4494A60()
{
  return (*(uint64_t (**)(void, void))(*(void *)(*(void *)(v0[7] + 16) + 8) + 16))(v0[10], v0[3]);
}

uint64_t sub_1C4494AA8()
{
  return (*(uint64_t (**)(void, void))(*(void *)(*(void *)(v0[5] + 8) + 8) + 16))(v0[10], v0[2]);
}

uint64_t sub_1C4494AF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C448EDD4(a1, v3[7], v3[2], v3[3], v3[4], v3[6], a2, a3);
}

unint64_t sub_1C4494B18()
{
  unint64_t result = qword_1EBBBC768;
  if (!qword_1EBBBC768)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBBC760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBBC768);
  }
  return result;
}

uint64_t CRAsset.digest.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  sub_1C3F7E324(v1, *(void *)(*(void *)v0 + 24));
  return v1;
}

uint64_t CRAsset.read(withAccessor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  MEMORY[0x1F4188790](v5 - 8);
  unsigned int v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  uint64_t v9 = sub_1C44975A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  unsigned int v11 = (void *)swift_allocObject();
  uint64_t v11[2] = 0;
  uint64_t v11[3] = 0;
  v11[4] = v10;
  v11[5] = v8;
  v11[6] = a1;
  v11[7] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C4011E50((uint64_t)v7, (uint64_t)&unk_1EA39C090, (uint64_t)v11);
  sub_1C3F962E0((uint64_t)v7, (uint64_t *)&unk_1EBBC0980);
  sub_1C4496CF8();
  swift_allocObject();
  uint64_t v12 = sub_1C4496D08();
  swift_release();
  return v12;
}

uint64_t CRAsset.read<A>(waitIfUnavailable:withAsyncAccessor:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(unsigned char *)(v6 + 88) = a2;
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 56) = *v5;
  return MEMORY[0x1F4188298](sub_1C4494D88, 0, 0);
}

uint64_t sub_1C4494D88()
{
  uint64_t v1 = *(void *)(v0 + 56);
  *(void *)(v0 + 64) = *(void *)(v1 + 32);
  *(void *)(v0 + 16) = v1;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C4494E50;
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  return sub_1C43D1CA0(v6, (uint64_t *)(v0 + 16), v5, v7, v3, v4);
}

uint64_t sub_1C4494E50()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C4494FA0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C4494FA0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CRAsset.init(lazyAssetWithDigest:assetManager:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C44956E8(a1, a2, (void (*)(uint64_t *__return_ptr))sub_1C43C63D4, a3);
}

uint64_t CRAsset.assetManager.getter()
{
  return swift_retain();
}

uint64_t sub_1C4494FDC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C4495014()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t CRAsset.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F8BC84(v8, (uint64_t)v7);
  uint64_t v9 = type metadata accessor for Proto_Value(0);
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9);
  sub_1C3F962E0((uint64_t)v7, &qword_1EBBC0540);
  if (v8 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v10 = 0xD000000000000017;
    *(void *)(v10 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v10 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRValueContainer();
    *(void *)(swift_initStackObject() + 16) = a1;
    sub_1C4003154(&v13);
    uint64_t result = swift_release();
    if (!v2) {
      *a2 = v13;
    }
  }
  return result;
}

uint64_t sub_1C4495208()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0990);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  v9[1] = &unk_1EA3A18A8;
  uint64_t v9[2] = v7;
  swift_weakInit();
  sub_1C3F7E324(v6, v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09A8);
  sub_1C44975E8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_release();
  sub_1C3F7E2CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();
  return v0;
}

uint64_t sub_1C4495388()
{
  sub_1C4495208();
  return swift_deallocClassInstance();
}

uint64_t CRAsset.read(waitIfUnavailable:withAccessor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  MEMORY[0x1F4188790](v9 - 8);
  unsigned int v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v4;
  uint64_t v13 = sub_1C44975A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  int v15 = (void *)swift_allocObject();
  void v15[2] = 0;
  v15[3] = 0;
  v15[4] = v14;
  v15[5] = v12;
  v15[6] = a1;
  v15[7] = a2;
  v15[8] = a3;
  v15[9] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C4011E50((uint64_t)v11, (uint64_t)&unk_1EA3A18A0, (uint64_t)v15);
  sub_1C3F962E0((uint64_t)v11, (uint64_t *)&unk_1EBBC0980);
  sub_1C4496CF8();
  swift_allocObject();
  uint64_t v16 = sub_1C4496D08();
  swift_release();
  return v16;
}

uint64_t sub_1C4495584()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C44955DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  unsigned int v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unsigned int v11 = v2;
  v11[1] = sub_1C40185EC;
  return sub_1C43D1514(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C44956C8()
{
  return sub_1C43D8A00(v0);
}

uint64_t CRAsset.init(data:assetManager:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C44956E8(a1, a2, (void (*)(uint64_t *__return_ptr))sub_1C43CE0C8, a3);
}

uint64_t sub_1C44956E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr)@<X3>, void *a4@<X8>)
{
  a3(&v8);
  swift_release();
  uint64_t result = sub_1C3F7E2CC(a1, a2);
  *a4 = v8;
  return result;
}

uint64_t CRAsset.init(_:data:)@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, void *a3@<X8>)
{
  sub_1C43CE0C8(a1, a2, &v7);
  sub_1C3F7E2CC(a1, a2);
  uint64_t result = swift_release();
  *a3 = v7;
  return result;
}

uint64_t CRAsset.init(url:coordinated:assetManager:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  sub_1C43CEAE8(a1, a2, &v7);
  swift_release();
  uint64_t v5 = sub_1C4496498();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  *a3 = v7;
  return result;
}

uint64_t static CRAsset.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 16);
  unint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a2 + 16);
  unint64_t v5 = *(void *)(*(void *)a2 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C3F7E324(v4, v5);
  char v6 = sub_1C3FAD630(v2, v3, v4, v5);
  sub_1C3F7E2CC(v4, v5);
  sub_1C3F7E2CC(v2, v3);
  return v6 & 1;
}

uint64_t CRAsset.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C4496568();
  return sub_1C3F7E2CC(v2, v3);
}

uint64_t CRAsset.visitReferences(_:)(void *a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = v2;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 24))(&v6, v3, v4);
}

uint64_t CRAsset.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1C44985F8();
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C4496568();
  sub_1C3F7E2CC(v2, v3);
  return sub_1C4498628();
}

uint64_t sub_1C44959F4()
{
  uint64_t v1 = *v0;
  sub_1C44985F8();
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C4496568();
  sub_1C3F7E2CC(v2, v3);
  return sub_1C4498628();
}

uint64_t sub_1C4495A5C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C4496568();
  return sub_1C3F7E2CC(v2, v3);
}

uint64_t sub_1C4495AC0()
{
  uint64_t v1 = *v0;
  sub_1C44985F8();
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C4496568();
  sub_1C3F7E2CC(v2, v3);
  return sub_1C4498628();
}

uint64_t sub_1C4495B24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 16);
  unint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a2 + 16);
  unint64_t v5 = *(void *)(*(void *)a2 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C3F7E324(v4, v5);
  char v6 = sub_1C3FAD630(v2, v3, v4, v5);
  sub_1C3F7E2CC(v4, v5);
  sub_1C3F7E2CC(v2, v3);
  return v6 & 1;
}

uint64_t sub_1C4495BAC(void *a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = v2;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 24))(&v6, v3, v4);
}

uint64_t sub_1C4495C10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return CRAsset.init(from:)(a1, a2);
}

uint64_t sub_1C4495C28()
{
  uint64_t v2 = *v0;
  uint64_t result = sub_1C3F6DD10();
  if (!v1)
  {
    uint64_t v4 = v2;
    swift_retain();
    sub_1C400F720(&v4);
    return swift_release();
  }
  return result;
}

uint64_t CRAsset.encode(to:)()
{
  uint64_t v2 = *v0;
  uint64_t result = sub_1C3F6DD10();
  if (!v1)
  {
    uint64_t v4 = v2;
    swift_retain();
    sub_1C400F720(&v4);
    return swift_release();
  }
  return result;
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C4496598();
  return sub_1C3F7E2CC(v2, v3);
}

void CRAsset.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t CRAsset.debugDescription.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  unint64_t v2 = *(void *)(*(void *)v0 + 24);
  sub_1C3F7E324(v1, v2);
  sub_1C4496548();
  sub_1C4028934();
  sub_1C4497B98();
  swift_bridgeObjectRelease();
  sub_1C3F7E2CC(v1, v2);
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  return 0x2874657373415243;
}

void *CRAsset.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C40F7954(a1, (uint64_t)v11);
  uint64_t v5 = sub_1C4496558();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1(a1);
  }
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EBBC5A30;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1(a1);
  type metadata accessor for CRAssetRef();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v8;
  result[3] = v9;
  result[4] = v10;
  *a2 = result;
  return result;
}

void *sub_1C4495F2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C40F7954(a1, (uint64_t)v11);
  uint64_t v5 = sub_1C4496558();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1(a1);
  }
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EBBC5A30;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1(a1);
  type metadata accessor for CRAssetRef();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v8;
  result[3] = v9;
  result[4] = v10;
  *a2 = result;
  return result;
}

uint64_t sub_1C4496004()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  sub_1C3F7E324(v2, v3);
  sub_1C4496598();
  return sub_1C3F7E2CC(v2, v3);
}

uint64_t type metadata accessor for CRAssetRef()
{
  return self;
}

unint64_t sub_1C4496094()
{
  unint64_t result = qword_1EA39B3F8;
  if (!qword_1EA39B3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39B3F8);
  }
  return result;
}

uint64_t sub_1C44960E8()
{
  sub_1C3F7E2CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4496120(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_1C40182C8;
  return sub_1C43CE03C(a1, v5, v4);
}

void mergeAddChildren()
{
  __assert_rtn("mergeAddChildren", "TTMergeableString.mm", 1646, "ourChild != charMap.end()");
}

uint64_t sub_1C4496268()
{
  return MEMORY[0x1F40E2E10]();
}

uint64_t sub_1C4496278()
{
  return MEMORY[0x1F40E3460]();
}

uint64_t sub_1C4496288()
{
  return MEMORY[0x1F40E37D0]();
}

uint64_t sub_1C4496298()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1C44962A8()
{
  return MEMORY[0x1F40E37F0]();
}

uint64_t sub_1C44962B8()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1C44962C8()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1C44962D8()
{
  return MEMORY[0x1F40E3820]();
}

uint64_t sub_1C44962E8()
{
  return MEMORY[0x1F40E3830]();
}

uint64_t sub_1C44962F8()
{
  return MEMORY[0x1F40E3FA8]();
}

uint64_t sub_1C4496308()
{
  return MEMORY[0x1F40E3FB8]();
}

uint64_t sub_1C4496318()
{
  return MEMORY[0x1F40E4000]();
}

uint64_t sub_1C4496328()
{
  return MEMORY[0x1F40E4008]();
}

uint64_t sub_1C4496338()
{
  return MEMORY[0x1F40E41E0]();
}

uint64_t sub_1C4496348()
{
  return MEMORY[0x1F40E4210]();
}

uint64_t sub_1C4496358()
{
  return MEMORY[0x1F40E4220]();
}

uint64_t sub_1C4496368()
{
  return MEMORY[0x1F40E4240]();
}

uint64_t sub_1C4496378()
{
  return MEMORY[0x1F40E4260]();
}

uint64_t sub_1C4496388()
{
  return MEMORY[0x1F40E4270]();
}

uint64_t sub_1C4496398()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1C44963A8()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1C44963B8()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1C44963C8()
{
  return MEMORY[0x1F40E4918]();
}

uint64_t sub_1C44963D8()
{
  return MEMORY[0x1F40E4930]();
}

uint64_t sub_1C44963E8()
{
  return MEMORY[0x1F40E4938]();
}

uint64_t sub_1C44963F8()
{
  return MEMORY[0x1F40E4970]();
}

uint64_t sub_1C4496408()
{
  return MEMORY[0x1F40E4978]();
}

uint64_t sub_1C4496418()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1C4496428()
{
  return MEMORY[0x1F40E49E0]();
}

uint64_t sub_1C4496438()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_1C4496448()
{
  return MEMORY[0x1F40E49F8]();
}

uint64_t sub_1C4496458()
{
  return MEMORY[0x1F40E4A28]();
}

uint64_t sub_1C4496468()
{
  return MEMORY[0x1F40E4A30]();
}

uint64_t sub_1C4496478()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1C4496488()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_1C4496498()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1C44964A8()
{
  return MEMORY[0x1F40E4BC8]();
}

uint64_t sub_1C44964B8()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_1C44964C8()
{
  return MEMORY[0x1F40E4C08]();
}

uint64_t sub_1C44964D8()
{
  return MEMORY[0x1F40E4C78]();
}

uint64_t sub_1C44964E8()
{
  return MEMORY[0x1F40E4C80]();
}

uint64_t sub_1C44964F8()
{
  return MEMORY[0x1F40E4C90]();
}

uint64_t sub_1C4496508()
{
  return MEMORY[0x1F40E4CA8]();
}

uint64_t sub_1C4496518()
{
  return MEMORY[0x1F40E4CB8]();
}

uint64_t sub_1C4496528()
{
  return MEMORY[0x1F40E4CF8]();
}

uint64_t sub_1C4496538()
{
  return MEMORY[0x1F40E4D30]();
}

uint64_t sub_1C4496548()
{
  return MEMORY[0x1F40E4D58]();
}

uint64_t sub_1C4496558()
{
  return MEMORY[0x1F40E4DB0]();
}

uint64_t sub_1C4496568()
{
  return MEMORY[0x1F40E4DB8]();
}

uint64_t sub_1C4496578()
{
  return MEMORY[0x1F40E4E10]();
}

uint64_t sub_1C4496588()
{
  return MEMORY[0x1F40E4E30]();
}

uint64_t sub_1C4496598()
{
  return MEMORY[0x1F40E4E38]();
}

uint64_t sub_1C44965A8()
{
  return MEMORY[0x1F40E4EC8]();
}

uint64_t sub_1C44965B8()
{
  return MEMORY[0x1F40E4EE0]();
}

uint64_t sub_1C44965C8()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1C44965D8()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1C44965E8()
{
  return MEMORY[0x1F40E53A0]();
}

uint64_t sub_1C44965F8()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1C4496608()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_1C4496618()
{
  return MEMORY[0x1F40E53E8]();
}

uint64_t sub_1C4496628()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1C4496638()
{
  return MEMORY[0x1F40E5410]();
}

uint64_t sub_1C4496648()
{
  return MEMORY[0x1F40E5418]();
}

uint64_t sub_1C4496658()
{
  return MEMORY[0x1F40E5428]();
}

uint64_t sub_1C4496668()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1C4496678()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1C4496688()
{
  return MEMORY[0x1F40E5B48]();
}

uint64_t sub_1C4496698()
{
  return MEMORY[0x1F40E5B50]();
}

uint64_t sub_1C44966A8()
{
  return MEMORY[0x1F40E5B58]();
}

uint64_t sub_1C44966B8()
{
  return MEMORY[0x1F40E5B68]();
}

uint64_t sub_1C44966C8()
{
  return MEMORY[0x1F40E5B70]();
}

uint64_t sub_1C44966D8()
{
  return MEMORY[0x1F40E5B88]();
}

uint64_t sub_1C44966E8()
{
  return MEMORY[0x1F40E5BC8]();
}

uint64_t sub_1C44966F8()
{
  return MEMORY[0x1F40E5BD0]();
}

uint64_t sub_1C4496708()
{
  return MEMORY[0x1F40E5BE8]();
}

uint64_t sub_1C4496718()
{
  return MEMORY[0x1F40E5BF0]();
}

uint64_t sub_1C4496728()
{
  return MEMORY[0x1F40E5BF8]();
}

uint64_t sub_1C4496738()
{
  return MEMORY[0x1F40E5C00]();
}

uint64_t sub_1C4496748()
{
  return MEMORY[0x1F40E5C08]();
}

uint64_t sub_1C4496758()
{
  return MEMORY[0x1F40E5C38]();
}

uint64_t sub_1C4496768()
{
  return MEMORY[0x1F40E5C40]();
}

uint64_t sub_1C4496778()
{
  return MEMORY[0x1F40E5C50]();
}

uint64_t sub_1C4496788()
{
  return MEMORY[0x1F40E5C68]();
}

uint64_t sub_1C4496798()
{
  return MEMORY[0x1F40E5C70]();
}

uint64_t sub_1C44967A8()
{
  return MEMORY[0x1F40E5C78]();
}

uint64_t sub_1C44967B8()
{
  return MEMORY[0x1F40E5C80]();
}

uint64_t sub_1C44967C8()
{
  return MEMORY[0x1F40E5C88]();
}

uint64_t sub_1C44967D8()
{
  return MEMORY[0x1F40E5C98]();
}

uint64_t sub_1C44967E8()
{
  return MEMORY[0x1F40E5CA8]();
}

uint64_t sub_1C44967F8()
{
  return MEMORY[0x1F4126E48]();
}

uint64_t sub_1C4496808()
{
  return MEMORY[0x1F4126E50]();
}

uint64_t sub_1C4496818()
{
  return MEMORY[0x1F4126E58]();
}

uint64_t sub_1C4496828()
{
  return MEMORY[0x1F4126E60]();
}

uint64_t sub_1C4496838()
{
  return MEMORY[0x1F4126E68]();
}

uint64_t sub_1C4496848()
{
  return MEMORY[0x1F4126E70]();
}

uint64_t sub_1C4496858()
{
  return MEMORY[0x1F4126E80]();
}

uint64_t sub_1C4496868()
{
  return MEMORY[0x1F4127018]();
}

uint64_t sub_1C4496878()
{
  return MEMORY[0x1F4127060]();
}

uint64_t sub_1C4496888()
{
  return MEMORY[0x1F4127078]();
}

uint64_t sub_1C4496898()
{
  return MEMORY[0x1F4127088]();
}

uint64_t sub_1C44968A8()
{
  return MEMORY[0x1F4127110]();
}

uint64_t sub_1C44968B8()
{
  return MEMORY[0x1F4127118]();
}

uint64_t sub_1C44968C8()
{
  return MEMORY[0x1F4127138]();
}

uint64_t sub_1C44968D8()
{
  return MEMORY[0x1F4127140]();
}

uint64_t sub_1C4496908()
{
  return MEMORY[0x1F4127180]();
}

uint64_t sub_1C4496918()
{
  return MEMORY[0x1F4127190]();
}

uint64_t sub_1C4496928()
{
  return MEMORY[0x1F41271A0]();
}

uint64_t sub_1C4496938()
{
  return MEMORY[0x1F41271A8]();
}

uint64_t sub_1C4496948()
{
  return MEMORY[0x1F41271C0]();
}

uint64_t sub_1C4496958()
{
  return MEMORY[0x1F41271D0]();
}

uint64_t sub_1C4496968()
{
  return MEMORY[0x1F41271E8]();
}

uint64_t sub_1C4496978()
{
  return MEMORY[0x1F41271F0]();
}

uint64_t sub_1C4496988()
{
  return MEMORY[0x1F4127200]();
}

uint64_t sub_1C4496998()
{
  return MEMORY[0x1F4127208]();
}

uint64_t sub_1C44969A8()
{
  return MEMORY[0x1F4127228]();
}

uint64_t sub_1C44969B8()
{
  return MEMORY[0x1F4127230]();
}

uint64_t sub_1C44969C8()
{
  return MEMORY[0x1F4127248]();
}

uint64_t sub_1C44969D8()
{
  return MEMORY[0x1F4127258]();
}

uint64_t sub_1C44969E8()
{
  return MEMORY[0x1F4127260]();
}

uint64_t sub_1C44969F8()
{
  return MEMORY[0x1F4127268]();
}

uint64_t sub_1C4496A08()
{
  return MEMORY[0x1F4127278]();
}

uint64_t sub_1C4496A18()
{
  return MEMORY[0x1F4127280]();
}

uint64_t sub_1C4496A28()
{
  return MEMORY[0x1F4127290]();
}

uint64_t sub_1C4496A38()
{
  return MEMORY[0x1F41272A0]();
}

uint64_t sub_1C4496A48()
{
  return MEMORY[0x1F41272A8]();
}

uint64_t sub_1C4496A58()
{
  return MEMORY[0x1F41272B8]();
}

uint64_t sub_1C4496A68()
{
  return MEMORY[0x1F41272C8]();
}

uint64_t sub_1C4496A78()
{
  return MEMORY[0x1F41272E0]();
}

uint64_t sub_1C4496A88()
{
  return MEMORY[0x1F4127330]();
}

uint64_t sub_1C4496A98()
{
  return MEMORY[0x1F4127340]();
}

uint64_t sub_1C4496AA8()
{
  return MEMORY[0x1F4127348]();
}

uint64_t sub_1C4496AC8()
{
  return MEMORY[0x1F4127398]();
}

uint64_t sub_1C4496AD8()
{
  return MEMORY[0x1F41273E8]();
}

uint64_t sub_1C4496AE8()
{
  return MEMORY[0x1F41273F8]();
}

uint64_t sub_1C4496AF8()
{
  return MEMORY[0x1F4127400]();
}

uint64_t sub_1C4496B08()
{
  return MEMORY[0x1F4127410]();
}

uint64_t sub_1C4496B18()
{
  return MEMORY[0x1F4127418]();
}

uint64_t sub_1C4496B28()
{
  return MEMORY[0x1F4127430]();
}

uint64_t sub_1C4496B38()
{
  return MEMORY[0x1F4127458]();
}

uint64_t sub_1C4496B48()
{
  return MEMORY[0x1F4127460]();
}

uint64_t sub_1C4496B58()
{
  return MEMORY[0x1F4127470]();
}

uint64_t sub_1C4496B68()
{
  return MEMORY[0x1F4127488]();
}

uint64_t sub_1C4496B78()
{
  return MEMORY[0x1F4127498]();
}

uint64_t sub_1C4496B88()
{
  return MEMORY[0x1F41274A0]();
}

uint64_t sub_1C4496B98()
{
  return MEMORY[0x1F41274A8]();
}

uint64_t sub_1C4496BA8()
{
  return MEMORY[0x1F41274B8]();
}

uint64_t sub_1C4496BB8()
{
  return MEMORY[0x1F41274C8]();
}

uint64_t sub_1C4496BC8()
{
  return MEMORY[0x1F41274D0]();
}

uint64_t sub_1C4496BD8()
{
  return MEMORY[0x1F41274E8]();
}

uint64_t sub_1C4496BE8()
{
  return MEMORY[0x1F4127660]();
}

uint64_t sub_1C4496BF8()
{
  return MEMORY[0x1F4127678]();
}

uint64_t sub_1C4496C08()
{
  return MEMORY[0x1F4127680]();
}

uint64_t sub_1C4496C18()
{
  return MEMORY[0x1F4127690]();
}

uint64_t sub_1C4496C28()
{
  return MEMORY[0x1F41884F0]();
}

uint64_t sub_1C4496C38()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1C4496C48()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1C4496C58()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1C4496C68()
{
  return MEMORY[0x1F40D65E0]();
}

uint64_t sub_1C4496C78()
{
  return MEMORY[0x1F40D65E8]();
}

uint64_t sub_1C4496C88()
{
  return MEMORY[0x1F40D68B0]();
}

uint64_t sub_1C4496C98()
{
  return MEMORY[0x1F40D68B8]();
}

uint64_t sub_1C4496CB8()
{
  return MEMORY[0x1F40D6908]();
}

uint64_t sub_1C4496CC8()
{
  return MEMORY[0x1F40D6920]();
}

uint64_t sub_1C4496CD8()
{
  return MEMORY[0x1F40D6928]();
}

uint64_t sub_1C4496CE8()
{
  return MEMORY[0x1F40D6930]();
}

uint64_t sub_1C4496CF8()
{
  return MEMORY[0x1F40D6960]();
}

uint64_t sub_1C4496D08()
{
  return MEMORY[0x1F40D6988]();
}

uint64_t sub_1C4496D18()
{
  return MEMORY[0x1F40D69C8]();
}

uint64_t sub_1C4496D28()
{
  return MEMORY[0x1F40D69D0]();
}

uint64_t sub_1C4496D38()
{
  return MEMORY[0x1F40D69F0]();
}

uint64_t sub_1C4496D48()
{
  return MEMORY[0x1F40D69F8]();
}

uint64_t sub_1C4496D58()
{
  return MEMORY[0x1F4186C60]();
}

uint64_t sub_1C4496D68()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1C4496D78()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1C4496D88()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1C4496D98()
{
  return MEMORY[0x1F4186D18]();
}

uint64_t sub_1C4496DA8()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1C4496DB8()
{
  return MEMORY[0x1F4186E28]();
}

uint64_t sub_1C4496DC8()
{
  return MEMORY[0x1F4186E60]();
}

uint64_t sub_1C4496DD8()
{
  return MEMORY[0x1F4186EB0]();
}

uint64_t sub_1C4496DE8()
{
  return MEMORY[0x1F4186EC0]();
}

uint64_t sub_1C4496DF8()
{
  return MEMORY[0x1F4186EE8]();
}

uint64_t sub_1C4496E08()
{
  return MEMORY[0x1F4186F18]();
}

uint64_t sub_1C4496E18()
{
  return MEMORY[0x1F40DFF38]();
}

uint64_t sub_1C4496E28()
{
  return MEMORY[0x1F40DFF40]();
}

uint64_t sub_1C4496E38()
{
  return MEMORY[0x1F40DFF58]();
}

uint64_t sub_1C4496E48()
{
  return MEMORY[0x1F40DFF70]();
}

uint64_t sub_1C4496E58()
{
  return MEMORY[0x1F40E0478]();
}

uint64_t sub_1C4496E68()
{
  return MEMORY[0x1F40E0488]();
}

uint64_t sub_1C4496E78()
{
  return MEMORY[0x1F40E0490]();
}

uint64_t sub_1C4496E88()
{
  return MEMORY[0x1F40E04A0]();
}

uint64_t sub_1C4496E98()
{
  return MEMORY[0x1F40E04A8]();
}

uint64_t sub_1C4496EA8()
{
  return MEMORY[0x1F4183270]();
}

uint64_t sub_1C4496EB8()
{
  return MEMORY[0x1F4183280]();
}

uint64_t sub_1C4496EC8()
{
  return MEMORY[0x1F4183288]();
}

uint64_t sub_1C4496ED8()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1C4496EE8()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1C4496EF8()
{
  return MEMORY[0x1F4183320]();
}

uint64_t sub_1C4496F08()
{
  return MEMORY[0x1F4183338]();
}

uint64_t sub_1C4496F18()
{
  return MEMORY[0x1F4183340]();
}

uint64_t sub_1C4496F28()
{
  return MEMORY[0x1F4183358]();
}

uint64_t sub_1C4496F38()
{
  return MEMORY[0x1F4183360]();
}

uint64_t sub_1C4496F48()
{
  return MEMORY[0x1F41833A8]();
}

uint64_t sub_1C4496F58()
{
  return MEMORY[0x1F41833B0]();
}

uint64_t sub_1C4496F68()
{
  return MEMORY[0x1F41833D0]();
}

uint64_t sub_1C4496F78()
{
  return MEMORY[0x1F41833D8]();
}

uint64_t sub_1C4496F88()
{
  return MEMORY[0x1F4183408]();
}

uint64_t sub_1C4496F98()
{
  return MEMORY[0x1F4183420]();
}

uint64_t sub_1C4496FA8()
{
  return MEMORY[0x1F4183428]();
}

uint64_t sub_1C4496FB8()
{
  return MEMORY[0x1F4183440]();
}

uint64_t sub_1C4496FC8()
{
  return MEMORY[0x1F4183468]();
}

uint64_t sub_1C4496FD8()
{
  return MEMORY[0x1F4183470]();
}

uint64_t sub_1C4496FE8()
{
  return MEMORY[0x1F4183498]();
}

uint64_t sub_1C4496FF8()
{
  return MEMORY[0x1F41834A0]();
}

uint64_t sub_1C4497008()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1C4497018()
{
  return MEMORY[0x1F41834B0]();
}

uint64_t sub_1C4497028()
{
  return MEMORY[0x1F41834F0]();
}

uint64_t sub_1C4497038()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1C4497048()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1C4497058()
{
  return MEMORY[0x1F4183508]();
}

uint64_t sub_1C4497068()
{
  return MEMORY[0x1F4183510]();
}

uint64_t sub_1C4497078()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1C4497088()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1C4497098()
{
  return MEMORY[0x1F41836C8]();
}

uint64_t sub_1C44970A8()
{
  return MEMORY[0x1F41836E0]();
}

uint64_t sub_1C44970B8()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1C44970C8()
{
  return MEMORY[0x1F4183740]();
}

uint64_t sub_1C44970D8()
{
  return MEMORY[0x1F4183750]();
}

uint64_t sub_1C44970E8()
{
  return MEMORY[0x1F4183758]();
}

uint64_t sub_1C44970F8()
{
  return MEMORY[0x1F4183760]();
}

uint64_t sub_1C4497108()
{
  return MEMORY[0x1F4183768]();
}

uint64_t sub_1C4497118()
{
  return MEMORY[0x1F4183788]();
}

uint64_t sub_1C4497128()
{
  return MEMORY[0x1F4183790]();
}

uint64_t sub_1C4497138()
{
  return MEMORY[0x1F4183798]();
}

uint64_t sub_1C4497148()
{
  return MEMORY[0x1F41837C0]();
}

uint64_t sub_1C4497158()
{
  return MEMORY[0x1F4183808]();
}

uint64_t sub_1C4497168()
{
  return MEMORY[0x1F4183818]();
}

uint64_t sub_1C4497178()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1C4497188()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1C4497198()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1C44971A8()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1C44971B8()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1C44971C8()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_1C44971D8()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1C44971E8()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1C44971F8()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1C4497208()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1C4497218()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1C4497228()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_1C4497238()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t sub_1C4497248()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1C4497258()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1C4497268()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1C4497278()
{
  return MEMORY[0x1F4183A40]();
}

uint64_t sub_1C4497288()
{
  return MEMORY[0x1F4183A60]();
}

uint64_t sub_1C4497298()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1C44972A8()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1C44972B8()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1C44972C8()
{
  return MEMORY[0x1F4183BB8]();
}

uint64_t sub_1C44972D8()
{
  return MEMORY[0x1F4183BD8]();
}

uint64_t sub_1C44972E8()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1C44972F8()
{
  return MEMORY[0x1F4183BF0]();
}

uint64_t sub_1C4497308()
{
  return MEMORY[0x1F4183BF8]();
}

uint64_t sub_1C4497318()
{
  return MEMORY[0x1F4183C18]();
}

uint64_t sub_1C4497328()
{
  return MEMORY[0x1F4183C38]();
}

uint64_t sub_1C4497338()
{
  return MEMORY[0x1F4183C48]();
}

uint64_t sub_1C4497348()
{
  return MEMORY[0x1F4183C68]();
}

uint64_t sub_1C4497358()
{
  return MEMORY[0x1F4183C78]();
}

uint64_t sub_1C4497368()
{
  return MEMORY[0x1F4183C88]();
}

uint64_t sub_1C4497378()
{
  return MEMORY[0x1F4183CE0]();
}

uint64_t sub_1C4497388()
{
  return MEMORY[0x1F4183D20]();
}

uint64_t sub_1C4497398()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_1C44973A8()
{
  return MEMORY[0x1F4183D78]();
}

uint64_t sub_1C44973B8()
{
  return MEMORY[0x1F4183DE0]();
}

uint64_t sub_1C44973C8()
{
  return MEMORY[0x1F4183DE8]();
}

uint64_t sub_1C44973D8()
{
  return MEMORY[0x1F4183DF0]();
}

uint64_t sub_1C44973E8()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1C44973F8()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1C4497408()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1C4497418()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1C4497428()
{
  return MEMORY[0x1F4183EA0]();
}

uint64_t sub_1C4497438()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t sub_1C4497448()
{
  return MEMORY[0x1F4183EB0]();
}

uint64_t sub_1C4497458()
{
  return MEMORY[0x1F4183EB8]();
}

uint64_t sub_1C4497468()
{
  return MEMORY[0x1F4183EE8]();
}

uint64_t sub_1C4497478()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1C4497488()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1C4497498()
{
  return MEMORY[0x1F4183F10]();
}

uint64_t sub_1C44974A8()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t sub_1C44974B8()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1C44974C8()
{
  return MEMORY[0x1F4183F58]();
}

uint64_t sub_1C44974D8()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_1C44974E8()
{
  return MEMORY[0x1F4183F68]();
}

uint64_t sub_1C44974F8()
{
  return MEMORY[0x1F4183F70]();
}

uint64_t sub_1C4497508()
{
  return MEMORY[0x1F4183F78]();
}

uint64_t sub_1C4497518()
{
  return MEMORY[0x1F4183F80]();
}

uint64_t sub_1C4497528()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1C4497538()
{
  return MEMORY[0x1F4183FC8]();
}

uint64_t sub_1C4497548()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t sub_1C4497558()
{
  return MEMORY[0x1F4183FE0]();
}

uint64_t sub_1C4497568()
{
  return MEMORY[0x1F4183FF0]();
}

uint64_t sub_1C4497578()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1C4497588()
{
  return MEMORY[0x1F4187CE0]();
}

uint64_t sub_1C4497598()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1C44975A8()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1C44975B8()
{
  return MEMORY[0x1F4187D10]();
}

uint64_t sub_1C44975C8()
{
  return MEMORY[0x1F4187D18]();
}

uint64_t sub_1C44975D8()
{
  return MEMORY[0x1F4187D20]();
}

uint64_t sub_1C44975E8()
{
  return MEMORY[0x1F4187D38]();
}

uint64_t sub_1C44975F8()
{
  return MEMORY[0x1F4187D40]();
}

uint64_t sub_1C4497608()
{
  return MEMORY[0x1F4187D48]();
}

uint64_t sub_1C4497618()
{
  return MEMORY[0x1F4187D50]();
}

uint64_t sub_1C4497638()
{
  return MEMORY[0x1F4187D78]();
}

uint64_t sub_1C4497658()
{
  return MEMORY[0x1F4187DC8]();
}

uint64_t sub_1C4497668()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_1C4497678()
{
  return MEMORY[0x1F4184090]();
}

uint64_t sub_1C4497688()
{
  return MEMORY[0x1F41840E8]();
}

uint64_t sub_1C4497698()
{
  return MEMORY[0x1F4184100]();
}

uint64_t sub_1C44976A8()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1C44976B8()
{
  return MEMORY[0x1F4184140]();
}

uint64_t sub_1C44976C8()
{
  return MEMORY[0x1F4184160]();
}

uint64_t sub_1C44976D8()
{
  return MEMORY[0x1F4184178]();
}

uint64_t sub_1C44976E8()
{
  return MEMORY[0x1F4184188]();
}

uint64_t sub_1C44976F8()
{
  return MEMORY[0x1F41841A8]();
}

uint64_t sub_1C4497708()
{
  return MEMORY[0x1F41841B0]();
}

uint64_t _sSh9CoherenceE14isDefaultStateSbvg_0()
{
  return MEMORY[0x1F41841C0]();
}

uint64_t sub_1C4497728()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_1C4497738()
{
  return MEMORY[0x1F41841F0]();
}

uint64_t sub_1C4497748()
{
  return MEMORY[0x1F4184230]();
}

uint64_t sub_1C4497758()
{
  return MEMORY[0x1F4184250]();
}

uint64_t sub_1C4497768()
{
  return MEMORY[0x1F4184258]();
}

uint64_t sub_1C4497778()
{
  return MEMORY[0x1F4184268]();
}

uint64_t sub_1C4497788()
{
  return MEMORY[0x1F41842A0]();
}

uint64_t sub_1C4497798()
{
  return MEMORY[0x1F41842B0]();
}

uint64_t sub_1C44977B8()
{
  return MEMORY[0x1F41842C0]();
}

uint64_t sub_1C44977D8()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1C44977E8()
{
  return MEMORY[0x1F41842E0]();
}

uint64_t sub_1C44977F8()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1C4497808()
{
  return MEMORY[0x1F4184320]();
}

uint64_t sub_1C4497818()
{
  return MEMORY[0x1F4184330]();
}

uint64_t sub_1C4497828()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1C4497848()
{
  return MEMORY[0x1F4184390]();
}

uint64_t sub_1C4497858()
{
  return MEMORY[0x1F41843A0]();
}

uint64_t sub_1C4497868()
{
  return MEMORY[0x1F41843A8]();
}

uint64_t sub_1C4497878()
{
  return MEMORY[0x1F41843D0]();
}

uint64_t sub_1C4497888()
{
  return MEMORY[0x1F41843D8]();
}

uint64_t sub_1C4497898()
{
  return MEMORY[0x1F4184410]();
}

uint64_t sub_1C44978A8()
{
  return MEMORY[0x1F4184418]();
}

uint64_t sub_1C44978B8()
{
  return MEMORY[0x1F4184430]();
}

uint64_t sub_1C44978C8()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1C44978D8()
{
  return MEMORY[0x1F41844A0]();
}

uint64_t sub_1C44978E8()
{
  return MEMORY[0x1F41844A8]();
}

uint64_t sub_1C44978F8()
{
  return MEMORY[0x1F41844B0]();
}

uint64_t sub_1C4497908()
{
  return MEMORY[0x1F41844D0]();
}

uint64_t sub_1C4497928()
{
  return MEMORY[0x1F4184510]();
}

uint64_t sub_1C4497938()
{
  return MEMORY[0x1F4184520]();
}

uint64_t sub_1C4497948()
{
  return MEMORY[0x1F4184530]();
}

uint64_t sub_1C4497958()
{
  return MEMORY[0x1F4184540]();
}

uint64_t sub_1C4497968()
{
  return MEMORY[0x1F4184580]();
}

uint64_t sub_1C4497978()
{
  return MEMORY[0x1F41845B0]();
}

uint64_t sub_1C4497988()
{
  return MEMORY[0x1F41845C8]();
}

uint64_t sub_1C4497998()
{
  return MEMORY[0x1F41845D0]();
}

uint64_t sub_1C44979A8()
{
  return MEMORY[0x1F40E6638]();
}

uint64_t sub_1C44979B8()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1C44979C8()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1C44979D8()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1C44979E8()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1C44979F8()
{
  return MEMORY[0x1F4186FA0]();
}

uint64_t sub_1C4497A08()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1C4497A18()
{
  return MEMORY[0x1F4187000]();
}

uint64_t sub_1C4497A28()
{
  return MEMORY[0x1F4187098]();
}

uint64_t sub_1C4497A38()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1C4497A48()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1C4497A58()
{
  return MEMORY[0x1F41870D8]();
}

uint64_t sub_1C4497A68()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1C4497A78()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1C4497A88()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1C4497A98()
{
  return MEMORY[0x1F4187130]();
}

uint64_t sub_1C4497AA8()
{
  return MEMORY[0x1F4187168]();
}

uint64_t sub_1C4497AB8()
{
  return MEMORY[0x1F41871D0]();
}

uint64_t sub_1C4497AC8()
{
  return MEMORY[0x1F4187230]();
}

uint64_t sub_1C4497AD8()
{
  return MEMORY[0x1F4187278]();
}

uint64_t sub_1C4497AE8()
{
  return MEMORY[0x1F4187288]();
}

uint64_t sub_1C4497AF8()
{
  return MEMORY[0x1F41872D8]();
}

uint64_t sub_1C4497B08()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1C4497B18()
{
  return MEMORY[0x1F4188758]();
}

uint64_t sub_1C4497B28()
{
  return MEMORY[0x1F4184620]();
}

uint64_t sub_1C4497B38()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1C4497B48()
{
  return MEMORY[0x1F4184680]();
}

uint64_t sub_1C4497B58()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1C4497B68()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1C4497B78()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1C4497B88()
{
  return MEMORY[0x1F40E6BB0]();
}

uint64_t sub_1C4497B98()
{
  return MEMORY[0x1F40E6C80]();
}

uint64_t sub_1C4497BA8()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1C4497BB8()
{
  return MEMORY[0x1F4184A40]();
}

uint64_t sub_1C4497BC8()
{
  return MEMORY[0x1F4184A80]();
}

uint64_t sub_1C4497BD8()
{
  return MEMORY[0x1F4184A88]();
}

uint64_t sub_1C4497BE8()
{
  return MEMORY[0x1F4184A90]();
}

uint64_t sub_1C4497BF8()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1C4497C08()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1C4497C18()
{
  return MEMORY[0x1F4184B28]();
}

uint64_t sub_1C4497C28()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1C4497C38()
{
  return MEMORY[0x1F4184B58]();
}

uint64_t sub_1C4497C48()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_1C4497C58()
{
  return MEMORY[0x1F4184B68]();
}

uint64_t sub_1C4497C68()
{
  return MEMORY[0x1F4184B80]();
}

uint64_t sub_1C4497C78()
{
  return MEMORY[0x1F4184B88]();
}

uint64_t sub_1C4497C88()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_1C4497C98()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_1C4497CA8()
{
  return MEMORY[0x1F4184BB0]();
}

uint64_t sub_1C4497CB8()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_1C4497CC8()
{
  return MEMORY[0x1F4184BD8]();
}

uint64_t sub_1C4497CD8()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1C4497CE8()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1C4497CF8()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_1C4497D08()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1C4497D18()
{
  return MEMORY[0x1F4184CB0]();
}

uint64_t sub_1C4497D28()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1C4497D38()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1C4497D48()
{
  return MEMORY[0x1F4184D00]();
}

uint64_t sub_1C4497D58()
{
  return MEMORY[0x1F4184D18]();
}

uint64_t sub_1C4497D68()
{
  return MEMORY[0x1F4184D28]();
}

uint64_t sub_1C4497D78()
{
  return MEMORY[0x1F4184D30]();
}

uint64_t sub_1C4497D88()
{
  return MEMORY[0x1F4184D38]();
}

uint64_t sub_1C4497D98()
{
  return MEMORY[0x1F4184D40]();
}

uint64_t sub_1C4497DA8()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t sub_1C4497DB8()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1C4497DC8()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1C4497DD8()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1C4497DE8()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1C4497DF8()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1C4497E08()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1C4497E18()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1C4497E28()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1C4497E38()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1C4497E48()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1C4497E58()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1C4497E68()
{
  return MEMORY[0x1F4184FC0]();
}

uint64_t sub_1C4497E78()
{
  return MEMORY[0x1F4185048]();
}

uint64_t sub_1C4497E88()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1C4497E98()
{
  return MEMORY[0x1F4185068]();
}

uint64_t sub_1C4497EA8()
{
  return MEMORY[0x1F41850C0]();
}

uint64_t sub_1C4497EB8()
{
  return MEMORY[0x1F41850C8]();
}

uint64_t sub_1C4497EC8()
{
  return MEMORY[0x1F41851A0]();
}

uint64_t sub_1C4497ED8()
{
  return MEMORY[0x1F41851A8]();
}

uint64_t sub_1C4497EE8()
{
  return MEMORY[0x1F41851C8]();
}

uint64_t sub_1C4497EF8()
{
  return MEMORY[0x1F41851E0]();
}

uint64_t sub_1C4497F08()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_1C4497F18()
{
  return MEMORY[0x1F4185248]();
}

uint64_t sub_1C4497F28()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_1C4497F38()
{
  return MEMORY[0x1F4185278]();
}

uint64_t sub_1C4497F48()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1C4497F58()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1C4497F68()
{
  return MEMORY[0x1F41852E8]();
}

uint64_t sub_1C4497F78()
{
  return MEMORY[0x1F41852F0]();
}

uint64_t sub_1C4497F88()
{
  return MEMORY[0x1F41852F8]();
}

uint64_t sub_1C4497F98()
{
  return MEMORY[0x1F4185300]();
}

uint64_t sub_1C4497FA8()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1C4497FB8()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1C4497FC8()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1C4497FD8()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1C4497FE8()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1C4497FF8()
{
  return MEMORY[0x1F4185410]();
}

uint64_t sub_1C4498018()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1C4498028()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1C4498038()
{
  return MEMORY[0x1F41855F8]();
}

uint64_t sub_1C4498048()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1C4498058()
{
  return MEMORY[0x1F4185718]();
}

uint64_t sub_1C4498068()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1C4498078()
{
  return MEMORY[0x1F4185750]();
}

uint64_t sub_1C4498088()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1C4498098()
{
  return MEMORY[0x1F4185768]();
}

uint64_t sub_1C44980A8()
{
  return MEMORY[0x1F4185828]();
}

uint64_t sub_1C44980B8()
{
  return MEMORY[0x1F4185830]();
}

uint64_t sub_1C44980C8()
{
  return MEMORY[0x1F4185838]();
}

uint64_t sub_1C44980D8()
{
  return MEMORY[0x1F4185840]();
}

uint64_t sub_1C44980E8()
{
  return MEMORY[0x1F4185848]();
}

uint64_t sub_1C44980F8()
{
  return MEMORY[0x1F4185850]();
}

uint64_t sub_1C4498108()
{
  return MEMORY[0x1F4185858]();
}

uint64_t sub_1C4498118()
{
  return MEMORY[0x1F4185860]();
}

uint64_t sub_1C4498128()
{
  return MEMORY[0x1F4185868]();
}

uint64_t sub_1C4498138()
{
  return MEMORY[0x1F4185870]();
}

uint64_t sub_1C4498148()
{
  return MEMORY[0x1F4185878]();
}

uint64_t sub_1C4498158()
{
  return MEMORY[0x1F41858D8]();
}

uint64_t sub_1C4498168()
{
  return MEMORY[0x1F4185908]();
}

uint64_t sub_1C4498178()
{
  return MEMORY[0x1F4185910]();
}

uint64_t sub_1C4498188()
{
  return MEMORY[0x1F4185918]();
}

uint64_t sub_1C4498198()
{
  return MEMORY[0x1F4185920]();
}

uint64_t sub_1C44981A8()
{
  return MEMORY[0x1F4185928]();
}

uint64_t sub_1C44981B8()
{
  return MEMORY[0x1F4185930]();
}

uint64_t sub_1C44981C8()
{
  return MEMORY[0x1F4185938]();
}

uint64_t sub_1C44981D8()
{
  return MEMORY[0x1F4185940]();
}

uint64_t sub_1C44981E8()
{
  return MEMORY[0x1F4185948]();
}

uint64_t sub_1C44981F8()
{
  return MEMORY[0x1F4185950]();
}

uint64_t sub_1C4498208()
{
  return MEMORY[0x1F4185958]();
}

uint64_t sub_1C4498218()
{
  return MEMORY[0x1F4185960]();
}

uint64_t sub_1C4498228()
{
  return MEMORY[0x1F4185968]();
}

uint64_t sub_1C4498238()
{
  return MEMORY[0x1F4185970]();
}

uint64_t sub_1C4498248()
{
  return MEMORY[0x1F4185978]();
}

uint64_t sub_1C4498258()
{
  return MEMORY[0x1F4185980]();
}

uint64_t sub_1C4498268()
{
  return MEMORY[0x1F4185988]();
}

uint64_t sub_1C4498278()
{
  return MEMORY[0x1F4185990]();
}

uint64_t sub_1C4498288()
{
  return MEMORY[0x1F41859D8]();
}

uint64_t sub_1C4498298()
{
  return MEMORY[0x1F41859E0]();
}

uint64_t sub_1C44982A8()
{
  return MEMORY[0x1F41859E8]();
}

uint64_t sub_1C44982B8()
{
  return MEMORY[0x1F41859F0]();
}

uint64_t sub_1C44982C8()
{
  return MEMORY[0x1F4185A18]();
}

uint64_t sub_1C44982D8()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1C44982E8()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1C4498308()
{
  return MEMORY[0x1F4185A48]();
}

uint64_t sub_1C4498318()
{
  return MEMORY[0x1F4185A88]();
}

uint64_t sub_1C4498328()
{
  return MEMORY[0x1F4185AC8]();
}

uint64_t sub_1C4498338()
{
  return MEMORY[0x1F4185AD0]();
}

uint64_t sub_1C4498348()
{
  return MEMORY[0x1F4185B20]();
}

uint64_t sub_1C4498358()
{
  return MEMORY[0x1F4185B68]();
}

uint64_t sub_1C4498368()
{
  return MEMORY[0x1F4185B80]();
}

uint64_t sub_1C4498378()
{
  return MEMORY[0x1F4185B88]();
}

uint64_t sub_1C4498388()
{
  return MEMORY[0x1F4185BB0]();
}

uint64_t sub_1C4498398()
{
  return MEMORY[0x1F4185BE8]();
}

uint64_t sub_1C44983A8()
{
  return MEMORY[0x1F4185BF0]();
}

uint64_t sub_1C44983B8()
{
  return MEMORY[0x1F4185BF8]();
}

uint64_t sub_1C44983C8()
{
  return MEMORY[0x1F4185C00]();
}

uint64_t sub_1C44983D8()
{
  return MEMORY[0x1F4185C08]();
}

uint64_t sub_1C44983E8()
{
  return MEMORY[0x1F4185C10]();
}

uint64_t sub_1C44983F8()
{
  return MEMORY[0x1F4185C18]();
}

uint64_t sub_1C4498408()
{
  return MEMORY[0x1F4185C20]();
}

uint64_t sub_1C4498418()
{
  return MEMORY[0x1F4185C28]();
}

uint64_t sub_1C4498428()
{
  return MEMORY[0x1F4185C30]();
}

uint64_t sub_1C4498438()
{
  return MEMORY[0x1F4185C88]();
}

uint64_t sub_1C4498448()
{
  return MEMORY[0x1F4185C90]();
}

uint64_t sub_1C4498458()
{
  return MEMORY[0x1F4185C98]();
}

uint64_t sub_1C4498468()
{
  return MEMORY[0x1F4185CA0]();
}

uint64_t sub_1C4498478()
{
  return MEMORY[0x1F4185CA8]();
}

uint64_t sub_1C4498488()
{
  return MEMORY[0x1F4185CB0]();
}

uint64_t sub_1C4498498()
{
  return MEMORY[0x1F4185CB8]();
}

uint64_t sub_1C44984A8()
{
  return MEMORY[0x1F4185CC0]();
}

uint64_t sub_1C44984B8()
{
  return MEMORY[0x1F4185CC8]();
}

uint64_t sub_1C44984C8()
{
  return MEMORY[0x1F4185CD0]();
}

uint64_t sub_1C44984D8()
{
  return MEMORY[0x1F4185CD8]();
}

uint64_t sub_1C44984E8()
{
  return MEMORY[0x1F4185CE0]();
}

uint64_t sub_1C44984F8()
{
  return MEMORY[0x1F4185CE8]();
}

uint64_t sub_1C4498508()
{
  return MEMORY[0x1F4185CF8]();
}

uint64_t sub_1C4498518()
{
  return MEMORY[0x1F4185D38]();
}

uint64_t sub_1C4498528()
{
  return MEMORY[0x1F4185D50]();
}

uint64_t sub_1C4498538()
{
  return MEMORY[0x1F4185DA0]();
}

uint64_t sub_1C4498548()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1C4498558()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1C4498568()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_1C4498578()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1C4498588()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1C4498598()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1C44985A8()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1C44985B8()
{
  return MEMORY[0x1F4185E78]();
}

uint64_t sub_1C44985C8()
{
  return MEMORY[0x1F4185E90]();
}

uint64_t sub_1C44985D8()
{
  return MEMORY[0x1F4185E98]();
}

uint64_t sub_1C44985E8()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1C44985F8()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1C4498608()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1C4498618()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1C4498628()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1C4498638()
{
  return MEMORY[0x1F4185F28]();
}

uint64_t sub_1C4498648()
{
  return MEMORY[0x1F4185F38]();
}

uint64_t sub_1C4498658()
{
  return MEMORY[0x1F4185F60]();
}

uint64_t sub_1C4498668()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t sub_1C4498678()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1C4498688()
{
  return MEMORY[0x1F4185FD8]();
}

uint64_t sub_1C4498698()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_1C44986A8()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1C44986B8()
{
  return MEMORY[0x1F4186298]();
}

uint64_t sub_1C44986E8()
{
  return MEMORY[0x1F4186318]();
}

uint64_t CFHashBytes()
{
  return MEMORY[0x1F40D7BA8]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2 = MEMORY[0x1F40E7140](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1F417E448](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1F417E530](this);
}

size_t std::__next_prime(size_t __n)
{
  return MEMORY[0x1F417E588](__n);
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1F417EF30](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1F417EF48](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x1F417EF80](a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_rethrow(void)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

{
  return MEMORY[0x1F41813D0]();
}

{
  return MEMORY[0x1F41813F0]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1F4186340]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

uint64_t os_state_add_handler()
{
  return MEMORY[0x1F40CD570]();
}

uint64_t os_state_remove_handler()
{
  return MEMORY[0x1F40CD578]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x1F40CD650]();
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CDFD8](path, name, value, size, *(void *)&position, *(void *)&options);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1F4181F90](a1, *(void *)&a2, a3, *(void *)&n, a5);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x1F4181FB0](a1, *(void *)&a2, *(void *)&a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x1F4181FB8](a1, *(void *)&a2, a3);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x1F4182060](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x1F4182070](a1, *(void *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1F4182078](a1, *(void *)&iCol);
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1F41820A0](a1, *(void *)&iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1F41820A8](a1, *(void *)&iCol);
}

int sqlite3_db_readonly(sqlite3 *db, const char *zDbName)
{
  return MEMORY[0x1F4182168](db, zDbName);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x1F4182198](a1);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1F41821D8](pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x1F4182280](filename, ppDb, *(void *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1F4182290](db, zSql, *(void *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1F41822C0](pStmt);
}

void sqlite3_snapshot_free(sqlite3_snapshot *a1)
{
}

int sqlite3_snapshot_open(sqlite3 *db, const char *zSchema, sqlite3_snapshot *pSnapshot)
{
  return MEMORY[0x1F4182388](db, zSchema, pSnapshot);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1F41823B0](a1);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1F40CE1B0](__dst, __source, __size);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1F41881F8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1F4188200]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x1F41864C8]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1F41864E8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1F4186638]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1F4186658]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1F41866C0]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1F41866E8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_modifyAtWritableKeyPath()
{
  return MEMORY[0x1F4186720]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1F4186730]();
}

uint64_t swift_readAtKeyPath()
{
  return MEMORY[0x1F4186738]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x1F4186788]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1F41867B0]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1F41868A0]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x1F41868A8]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x1F41868B0]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x1F41868D0]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x1F41868D8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

void uuid_clear(uuid_t uu)
{
}

int uuid_compare(const uuid_t uu1, const uuid_t uu2)
{
  return MEMORY[0x1F40CE630](uu1, uu2);
}

void uuid_copy(uuid_t dst, const uuid_t src)
{
}

int uuid_is_null(const uuid_t uu)
{
  return MEMORY[0x1F40CE658](uu);
}